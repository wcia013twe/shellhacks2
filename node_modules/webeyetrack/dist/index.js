/*! For license information please see index.js.LICENSE.txt */
!function(e,t){if("object"==typeof exports&&"object"==typeof module)module.exports=t();else if("function"==typeof define&&define.amd)define([],t);else{var n=t();for(var r in n)("object"==typeof exports?exports:e)[r]=n[r]}}("undefined"!=typeof self?self:this,()=>(()=>{var e={31:function(e,t,n){var r;!function(e,s){function a(e){var t=this,n="";t.next=function(){var e=t.x^t.x>>>2;return t.x=t.y,t.y=t.z,t.z=t.w,t.w=t.v,(t.d=t.d+362437|0)+(t.v=t.v^t.v<<4^e^e<<1)|0},t.x=0,t.y=0,t.z=0,t.w=0,t.v=0,e===(0|e)?t.x=e:n+=e;for(var r=0;r<n.length+64;r++)t.x^=0|n.charCodeAt(r),r==n.length&&(t.d=t.x<<10^t.x>>>4),t.next()}function i(e,t){return t.x=e.x,t.y=e.y,t.z=e.z,t.w=e.w,t.v=e.v,t.d=e.d,t}function o(e,t){var n=new a(e),r=t&&t.state,s=function(){return(n.next()>>>0)/4294967296};return s.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},s.int32=n.next,s.quick=s,r&&("object"==typeof r&&i(r,n),s.state=function(){return i(n,{})}),s}s&&s.exports?s.exports=o:n.amdD&&n.amdO?void 0===(r=function(){return o}.call(t,n,t,s))||(s.exports=r):this.xorwow=o}(0,e=n.nmd(e),n.amdD)},45:function(e,t,n){"use strict";var r,s=this&&this.__createBinding||(Object.create?function(e,t,n,r){void 0===r&&(r=n);var s=Object.getOwnPropertyDescriptor(t,n);s&&!("get"in s?!t.__esModule:s.writable||s.configurable)||(s={enumerable:!0,get:function(){return t[n]}}),Object.defineProperty(e,r,s)}:function(e,t,n,r){void 0===r&&(r=n),e[r]=t[n]}),a=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),i=this&&this.__importStar||(r=function(e){return r=Object.getOwnPropertyNames||function(e){var t=[];for(var n in e)Object.prototype.hasOwnProperty.call(e,n)&&(t[t.length]=n);return t},r(e)},function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n=r(e),i=0;i<n.length;i++)"default"!==n[i]&&s(t,e,n[i]);return a(t,e),t}),o=this&&this.__awaiter||function(e,t,n,r){return new(n||(n=Promise))(function(s,a){function i(e){try{u(r.next(e))}catch(e){a(e)}}function o(e){try{u(r.throw(e))}catch(e){a(e)}}function u(e){var t;e.done?s(e.value):(t=e.value,t instanceof n?t:new n(function(e){e(t)})).then(i,o)}u((r=r.apply(e,t||[])).next())})},u=this&&this.__generator||function(e,t){var n,r,s,a={label:0,sent:function(){if(1&s[0])throw s[1];return s[1]},trys:[],ops:[]},i=Object.create(("function"==typeof Iterator?Iterator:Object).prototype);return i.next=o(0),i.throw=o(1),i.return=o(2),"function"==typeof Symbol&&(i[Symbol.iterator]=function(){return this}),i;function o(o){return function(u){return function(o){if(n)throw new TypeError("Generator is already executing.");for(;i&&(i=0,o[0]&&(a=0)),a;)try{if(n=1,r&&(s=2&o[0]?r.return:o[0]?r.throw||((s=r.return)&&s.call(r),0):r.next)&&!(s=s.call(r,o[1])).done)return s;switch(r=0,s&&(o=[2&o[0],s.value]),o[0]){case 0:case 1:s=o;break;case 4:return a.label++,{value:o[1],done:!1};case 5:a.label++,r=o[1],o=[0];continue;case 7:o=a.ops.pop(),a.trys.pop();continue;default:if(!((s=(s=a.trys).length>0&&s[s.length-1])||6!==o[0]&&2!==o[0])){a=0;continue}if(3===o[0]&&(!s||o[1]>s[0]&&o[1]<s[3])){a.label=o[1];break}if(6===o[0]&&a.label<s[1]){a.label=s[1],s=o;break}if(s&&a.label<s[2]){a.label=s[2],a.ops.push(o);break}s[2]&&a.ops.pop(),a.trys.pop();continue}o=t.call(e,a)}catch(e){o=[6,e],r=0}finally{n=s=0}if(5&o[0])throw o[1];return{value:o[0]?o[1]:void 0,done:!0}}([o,u])}}};Object.defineProperty(t,"__esModule",{value:!0});var l=i(n(951)),c=function(){function e(){this.model=null}return e.prototype.loadModel=function(){return o(this,void 0,void 0,function(){var e,t,n;return u(this,function(r){switch(r.label){case 0:e="".concat(self.location.origin,"/web/model.json"),r.label=1;case 1:return r.trys.push([1,3,,4]),t=this,[4,l.loadLayersModel(e)];case 2:return t.model=r.sent(),console.log("✅ BlazeGaze model loaded successfully"),[3,4];case 3:throw n=r.sent(),console.error("❌ Error loading BlazeGaze model from path:",e),console.error(n),n;case 4:return this.model.getLayer("cnn_encoder").trainable=!1,[2]}})})},e.prototype.predict=function(e,t,n){if(!this.model)throw new Error("Model not loaded. Call loadModel() first.");var r=[e,t,n],s=this.model.predict(r);return Array.isArray(s)?s[0]:s},e}();t.default=c},67:function(e,t,n){var r;!function(e,s){function a(e){var t=this;t.next=function(){var e,n,r=t.x,s=t.i;return e=r[s],n=(e^=e>>>7)^e<<24,n^=(e=r[s+1&7])^e>>>10,n^=(e=r[s+3&7])^e>>>3,n^=(e=r[s+4&7])^e<<7,e=r[s+7&7],n^=(e^=e<<13)^e<<9,r[s]=n,t.i=s+1&7,n},function(e,t){var n,r=[];if(t===(0|t))r[0]=t;else for(t=""+t,n=0;n<t.length;++n)r[7&n]=r[7&n]<<15^t.charCodeAt(n)+r[n+1&7]<<13;for(;r.length<8;)r.push(0);for(n=0;n<8&&0===r[n];++n);for(8==n?r[7]=-1:r[n],e.x=r,e.i=0,n=256;n>0;--n)e.next()}(t,e)}function i(e,t){return t.x=e.x.slice(),t.i=e.i,t}function o(e,t){null==e&&(e=+new Date);var n=new a(e),r=t&&t.state,s=function(){return(n.next()>>>0)/4294967296};return s.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},s.int32=n.next,s.quick=s,r&&(r.x&&i(r,n),s.state=function(){return i(n,{})}),s}s&&s.exports?s.exports=o:n.amdD&&n.amdO?void 0===(r=function(){return o}.call(t,n,t,s))||(s.exports=r):this.xorshift7=o}(0,e=n.nmd(e),n.amdD)},108:()=>{},156:function(e,t,n){"use strict";var r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.BlazeGaze=t.FaceLandmarkerClient=t.WebcamClient=t.WebEyeTrack=t.WebEyeTrackProxy=void 0;var s=r(n(382));t.WebEyeTrack=s.default;var a=r(n(248));t.WebEyeTrackProxy=a.default;var i=r(n(396));t.WebcamClient=i.default;var o=r(n(743));t.FaceLandmarkerClient=o.default;var u=r(n(45));t.BlazeGaze=u.default},180:function(e,t,n){var r;!function(e,s){function a(e){var t,n=this,r=(t=4022871197,function(e){e=String(e);for(var n=0;n<e.length;n++){var r=.02519603282416938*(t+=e.charCodeAt(n));r-=t=r>>>0,t=(r*=t)>>>0,t+=4294967296*(r-=t)}return 2.3283064365386963e-10*(t>>>0)});n.next=function(){var e=2091639*n.s0+2.3283064365386963e-10*n.c;return n.s0=n.s1,n.s1=n.s2,n.s2=e-(n.c=0|e)},n.c=1,n.s0=r(" "),n.s1=r(" "),n.s2=r(" "),n.s0-=r(e),n.s0<0&&(n.s0+=1),n.s1-=r(e),n.s1<0&&(n.s1+=1),n.s2-=r(e),n.s2<0&&(n.s2+=1),r=null}function i(e,t){return t.c=e.c,t.s0=e.s0,t.s1=e.s1,t.s2=e.s2,t}function o(e,t){var n=new a(e),r=t&&t.state,s=n.next;return s.int32=function(){return 4294967296*n.next()|0},s.double=function(){return s()+11102230246251565e-32*(2097152*s()|0)},s.quick=s,r&&("object"==typeof r&&i(r,n),s.state=function(){return i(n,{})}),s}s&&s.exports?s.exports=o:n.amdD&&n.amdO?void 0===(r=function(){return o}.call(t,n,t,s))||(s.exports=r):this.alea=o}(0,e=n.nmd(e),n.amdD)},181:function(e,t,n){var r;!function(e,s){function a(e){var t=this,n="";t.x=0,t.y=0,t.z=0,t.w=0,t.next=function(){var e=t.x^t.x<<11;return t.x=t.y,t.y=t.z,t.z=t.w,t.w^=t.w>>>19^e^e>>>8},e===(0|e)?t.x=e:n+=e;for(var r=0;r<n.length+64;r++)t.x^=0|n.charCodeAt(r),t.next()}function i(e,t){return t.x=e.x,t.y=e.y,t.z=e.z,t.w=e.w,t}function o(e,t){var n=new a(e),r=t&&t.state,s=function(){return(n.next()>>>0)/4294967296};return s.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},s.int32=n.next,s.quick=s,r&&("object"==typeof r&&i(r,n),s.state=function(){return i(n,{})}),s}s&&s.exports?s.exports=o:n.amdD&&n.amdO?void 0===(r=function(){return o}.call(t,n,t,s))||(s.exports=r):this.xor128=o}(0,e=n.nmd(e),n.amdD)},234:()=>{},248:function(e,t,n){"use strict";var r=this&&this.__awaiter||function(e,t,n,r){return new(n||(n=Promise))(function(s,a){function i(e){try{u(r.next(e))}catch(e){a(e)}}function o(e){try{u(r.throw(e))}catch(e){a(e)}}function u(e){var t;e.done?s(e.value):(t=e.value,t instanceof n?t:new n(function(e){e(t)})).then(i,o)}u((r=r.apply(e,t||[])).next())})},s=this&&this.__generator||function(e,t){var n,r,s,a={label:0,sent:function(){if(1&s[0])throw s[1];return s[1]},trys:[],ops:[]},i=Object.create(("function"==typeof Iterator?Iterator:Object).prototype);return i.next=o(0),i.throw=o(1),i.return=o(2),"function"==typeof Symbol&&(i[Symbol.iterator]=function(){return this}),i;function o(o){return function(u){return function(o){if(n)throw new TypeError("Generator is already executing.");for(;i&&(i=0,o[0]&&(a=0)),a;)try{if(n=1,r&&(s=2&o[0]?r.return:o[0]?r.throw||((s=r.return)&&s.call(r),0):r.next)&&!(s=s.call(r,o[1])).done)return s;switch(r=0,s&&(o=[2&o[0],s.value]),o[0]){case 0:case 1:s=o;break;case 4:return a.label++,{value:o[1],done:!1};case 5:a.label++,r=o[1],o=[0];continue;case 7:o=a.ops.pop(),a.trys.pop();continue;default:if(!((s=(s=a.trys).length>0&&s[s.length-1])||6!==o[0]&&2!==o[0])){a=0;continue}if(3===o[0]&&(!s||o[1]>s[0]&&o[1]<s[3])){a.label=o[1];break}if(6===o[0]&&a.label<s[1]){a.label=s[1],s=o;break}if(s&&a.label<s[2]){a.label=s[2],a.ops.push(o);break}s[2]&&a.ops.pop(),a.trys.pop();continue}o=t.call(e,a)}catch(e){o=[6,e],r=0}finally{n=s=0}if(5&o[0])throw o[1];return{value:o[0]?o[1]:void 0,done:!0}}([o,u])}}},a=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});var i=a(n(983));t.default=function(e){var t=this;this.status="idle",this.onGazeResults=function(){console.warn("onGazeResults callback not set")},this.worker=new i.default,console.log("WebEyeTrackProxy worker initialized"),this.worker.onmessage=function(n){switch(n.data.type){case"ready":console.log("[WebEyeTrackProxy] Worker is ready"),e.startWebcam(function(e,n){return r(t,void 0,void 0,function(){return s(this,function(t){return"idle"===this.status&&this.worker.postMessage({type:"step",payload:{frame:e,timestamp:n}}),[2]})})});break;case"stepResult":var a=n.data.result;t.onGazeResults(a);break;case"statusUpdate":t.status=n.data.status;break;default:console.warn("[WebEyeTrackProxy] Unknown message type: ".concat(n.data.type))}},this.worker.postMessage({type:"init"}),window.addEventListener("click",function(e){var n=e.clientX/window.innerWidth-.5,r=e.clientY/window.innerHeight-.5;console.log("[WebEyeTrackProxy] Click at (".concat(n,", ").concat(r,")")),t.worker.postMessage({type:"click",payload:{x:n,y:r}})})}},298:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.safeSVD=function(e){var t=console.warn;console.warn=function(){for(var e=[],n=0;n<arguments.length;n++)e[n]=arguments[n];var r=e[0];"string"==typeof r&&r.includes("autoTranspose")||t.apply(console,e)};var n=new r.SVD(e,{autoTranspose:!1});return console.warn=t,n};var r=n(673)},382:function(e,t,n){"use strict";var r,s=this&&this.__createBinding||(Object.create?function(e,t,n,r){void 0===r&&(r=n);var s=Object.getOwnPropertyDescriptor(t,n);s&&!("get"in s?!t.__esModule:s.writable||s.configurable)||(s={enumerable:!0,get:function(){return t[n]}}),Object.defineProperty(e,r,s)}:function(e,t,n,r){void 0===r&&(r=n),e[r]=t[n]}),a=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),i=this&&this.__importStar||(r=function(e){return r=Object.getOwnPropertyNames||function(e){var t=[];for(var n in e)Object.prototype.hasOwnProperty.call(e,n)&&(t[t.length]=n);return t},r(e)},function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n=r(e),i=0;i<n.length;i++)"default"!==n[i]&&s(t,e,n[i]);return a(t,e),t}),o=this&&this.__awaiter||function(e,t,n,r){return new(n||(n=Promise))(function(s,a){function i(e){try{u(r.next(e))}catch(e){a(e)}}function o(e){try{u(r.throw(e))}catch(e){a(e)}}function u(e){var t;e.done?s(e.value):(t=e.value,t instanceof n?t:new n(function(e){e(t)})).then(i,o)}u((r=r.apply(e,t||[])).next())})},u=this&&this.__generator||function(e,t){var n,r,s,a={label:0,sent:function(){if(1&s[0])throw s[1];return s[1]},trys:[],ops:[]},i=Object.create(("function"==typeof Iterator?Iterator:Object).prototype);return i.next=o(0),i.throw=o(1),i.return=o(2),"function"==typeof Symbol&&(i[Symbol.iterator]=function(){return this}),i;function o(o){return function(u){return function(o){if(n)throw new TypeError("Generator is already executing.");for(;i&&(i=0,o[0]&&(a=0)),a;)try{if(n=1,r&&(s=2&o[0]?r.return:o[0]?r.throw||((s=r.return)&&s.call(r),0):r.next)&&!(s=s.call(r,o[1])).done)return s;switch(r=0,s&&(o=[2&o[0],s.value]),o[0]){case 0:case 1:s=o;break;case 4:return a.label++,{value:o[1],done:!1};case 5:a.label++,r=o[1],o=[0];continue;case 7:o=a.ops.pop(),a.trys.pop();continue;default:if(!((s=(s=a.trys).length>0&&s[s.length-1])||6!==o[0]&&2!==o[0])){a=0;continue}if(3===o[0]&&(!s||o[1]>s[0]&&o[1]<s[3])){a.label=o[1];break}if(6===o[0]&&a.label<s[1]){a.label=s[1],s=o;break}if(s&&a.label<s[2]){a.label=s[2],a.ops.push(o);break}s[2]&&a.ops.pop(),a.trys.pop();continue}o=t.call(e,a)}catch(e){o=[6,e],r=0}finally{n=s=0}if(5&o[0])throw o[1];return{value:o[0]?o[1]:void 0,done:!0}}([o,u])}}},l=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});var c=i(n(951)),h=n(673),d=l(n(45)),p=l(n(743)),f=n(985),m=n(670),g=function(){function e(e,t){void 0===e&&(e=5),void 0===t&&(t=60),this.faceWidthComputed=!1,this.faceWidthCm=-1,this.perspectiveMatrixSet=!1,this.perspectiveMatrix=new h.Matrix(4,4),this.intrinsicsMatrixSet=!1,this.intrinsicsMatrix=new h.Matrix(3,3),this.affineMatrix=null,this.loaded=!1,this.latestMouseClick=null,this.latestGazeResult=null,this.calibData={supportX:[],supportY:[],timestamps:[],ptType:["calib"]},this.maxPoints=5,this.clickTTL=60,this.blazeGaze=new d.default,this.faceLandmarkerClient=new p.default,this.kalmanFilter=new m.KalmanFilter2D,this.maxPoints=e,this.clickTTL=t}return e.prototype.initialize=function(){return o(this,void 0,void 0,function(){return u(this,function(e){switch(e.label){case 0:return[4,this.faceLandmarkerClient.initialize()];case 1:return e.sent(),[4,this.blazeGaze.loadModel()];case 2:return e.sent(),this.loaded=!0,[2]}})})},e.prototype.pruneCalibData=function(){var e=this;c.tidy(function(){e.calibData.supportX.length>e.maxPoints&&(e.calibData.supportX=e.calibData.supportX.slice(-e.maxPoints),e.calibData.supportY=e.calibData.supportY.slice(-e.maxPoints),e.calibData.timestamps=e.calibData.timestamps.slice(-e.maxPoints),e.calibData.ptType=e.calibData.ptType.slice(-e.maxPoints));var t=Date.now(),n=1e3*e.clickTTL,r=e.calibData.timestamps.map(function(r,s){return t-r<=n||"click"!==e.calibData.ptType[s]?s:-1}).filter(function(e){return-1!==e});e.calibData.supportX=r.map(function(t){return e.calibData.supportX[t]}),e.calibData.supportY=r.map(function(t){return e.calibData.supportY[t]}),e.calibData.timestamps=r.map(function(t){return e.calibData.timestamps[t]}),e.calibData.ptType=r.map(function(t){return e.calibData.ptType[t]})})},e.prototype.handleClick=function(e,t){var n,r,s;return console.log("🖱️ Global click at: (".concat(e,", ").concat(t,"), ").concat(this.loaded)),this.latestMouseClick&&Date.now()-this.latestMouseClick.timestamp<1e3?(console.log("🖱️ Click ignored due to debounce"),void(this.latestMouseClick={x:e,y:t,timestamp:Date.now()})):this.latestMouseClick&&Math.abs(e-this.latestMouseClick.x)<.05&&Math.abs(t-this.latestMouseClick.y)<.05?(console.log("🖱️ Click ignored due to proximity to last click"),void(this.latestMouseClick={x:e,y:t,timestamp:Date.now()})):(this.latestMouseClick={x:e,y:t,timestamp:Date.now()},void(this.loaded&&this.latestGazeResult&&this.adapt([null===(n=this.latestGazeResult)||void 0===n?void 0:n.eyePatch],[null===(r=this.latestGazeResult)||void 0===r?void 0:r.headVector],[null===(s=this.latestGazeResult)||void 0===s?void 0:s.faceOrigin3D],[[e,t]])))},e.prototype.computeFaceOrigin3D=function(e,t,n,r){var s,a,i;!1===this.faceWidthComputed&&(this.faceWidthCm=(0,f.estimateFaceWidth)(n),this.faceWidthComputed=!0);var o=(0,f.faceReconstruction)(this.perspectiveMatrix,t,r,this.intrinsicsMatrix,this.faceWidthCm,e.width,e.height,null!==(i=null===(a=null===(s=this.latestGazeResult)||void 0===s?void 0:s.faceOrigin3D)||void 0===a?void 0:a[2])&&void 0!==i?i:60),u=(o[0],o[1]);return(0,f.computeFaceOrigin3D)(u)},e.prototype.prepareInput=function(e,t){var n=e.width,r=e.height;if(!this.perspectiveMatrixSet){var s=n/r;this.perspectiveMatrix=(0,f.createPerspectiveMatrix)(s),this.perspectiveMatrixSet=!0}this.intrinsicsMatrixSet||(this.intrinsicsMatrix=(0,f.createIntrinsicsMatrix)(n,r));var a=t.faceLandmarks[0],i=a.map(function(e){return[Math.floor(e.x*n),Math.floor(e.y*r)]}),o=(0,f.translateMatrix)(t.facialTransformationMatrixes[0]),u=(0,f.obtainEyePatch)(e,i),l=this.computeFaceOrigin3D(e,a.map(function(e){return[e.x,e.y]}),i,o);return[u,(0,f.getHeadVector)(o),l]},e.prototype.adapt=function(e,t,n,r,s,a,i){var o=this;void 0===s&&(s=1),void 0===a&&(a=1e-5),void 0===i&&(i="calib"),this.pruneCalibData();var u,l,h,d,p=c.train.adam(a,.85,.9,1e-8),m=function(e,t,n,r){return{supportX:{eyePatches:c.stack(e.map(function(e){return c.browser.fromPixels(e)}),0).toFloat().div(c.scalar(255)),headVectors:c.tensor(t,[t.length,3],"float32"),faceOrigins3D:c.tensor(n,[n.length,3],"float32")},supportY:c.tensor(r,[r.length,2],"float32")}}(e,t,n,r),g=m.supportX,y=m.supportY;if(this.calibData.supportX.push(g),this.calibData.supportY.push(y),this.calibData.timestamps.push(Date.now()),this.calibData.ptType.push(i),this.calibData.supportX.length>1?(u=c.concat(this.calibData.supportX.map(function(e){return e.eyePatches}),0),l=c.concat(this.calibData.supportX.map(function(e){return e.headVectors}),0),h=c.concat(this.calibData.supportX.map(function(e){return e.faceOrigins3D}),0),d=c.concat(this.calibData.supportY,0)):(u=g.eyePatches,l=g.headVectors,h=g.faceOrigins3D,d=y),u.shape[0]>3){var b=c.tidy(function(){return o.blazeGaze.predict(u,l,h)}).arraySync(),x=d.arraySync(),w=(0,f.computeAffineMatrixML)(b,x);this.affineMatrix=c.tensor2d(w,[2,3],"float32")}c.tidy(function(){for(var e=0;e<s;e++){var t=c.variableGrads(function(){var e=o.blazeGaze.predict(u,l,h),t=o.affineMatrix?(0,f.applyAffineMatrix)(o.affineMatrix,e):e;return c.losses.meanSquaredError(d,t).asScalar()}),n=t.grads,r=t.value;p.applyGradients(n),r.data().then(function(e){return console.log("Loss = ".concat(e[0].toFixed(4)))})}})},e.prototype.step=function(e,t){return o(this,void 0,void 0,function(){var n,r,s,a,i,o,l,h,d,p,m,g,y,b,x,w,v,k,N,I=this;return u(this,function(u){switch(u.label){case 0:return n=performance.now(),[4,this.faceLandmarkerClient.processFrame(e)];case 1:return r=u.sent(),s=performance.now(),r&&r.faceLandmarks&&0!==r.faceLandmarks.length?(a=this.prepareInput(e,r),i=a[0],o=a[1],l=a[2],h=performance.now(),d="open",p=(0,f.computeEAR)(r.faceLandmarks[0],"left"),m=(0,f.computeEAR)(r.faceLandmarks[0],"right"),(p<.2||m<.2)&&(d="closed"),"closed"===d?[2,{facialLandmarks:r.faceLandmarks[0],faceRt:r.facialTransformationMatrixes[0],faceBlendshapes:r.faceBlendshapes,eyePatch:i,headVector:o,faceOrigin3D:l,metric_transform:{rows:3,columns:3,data:[1,0,0,1,0,0,1,0,0]},gazeState:d,normPog:[0,0],durations:{faceLandmarker:s-n,prepareInput:h-s,blazeGaze:0,kalmanFilter:0,total:h-n},timestamp:t}]:(g=c.tidy(function(){var e=c.browser.fromPixels(i).toFloat().expandDims(0),t=e.div(c.scalar(255)),n=c.tensor2d(o,[1,3]),r=c.tensor2d(l,[1,3]),s=I.blazeGaze.predict(t,n,r);c.dispose([e,t,n,r]);var a=performance.now();if(I.affineMatrix&&(s=(0,f.applyAffineMatrix)(I.affineMatrix,s)),!s||0===s.shape.length)throw new Error("BlazeGaze model did not return valid output");return[s,a]}),y=g[0],b=g[1],x=y.arraySync(),c.dispose(y),w=this.kalmanFilter.step(x[0]),v=performance.now(),w[0]=Math.max(-.5,Math.min(.5,w[0])),w[1]=Math.max(-.5,Math.min(.5,w[1])),k={faceLandmarker:s-n,prepareInput:h-s,blazeGaze:b-h,kalmanFilter:v-b,total:v-n},N={facialLandmarks:r.faceLandmarks[0],faceRt:r.facialTransformationMatrixes[0],faceBlendshapes:r.faceBlendshapes,eyePatch:i,headVector:o,faceOrigin3D:l,metric_transform:{rows:3,columns:3,data:[1,0,0,1,0,0,1,0,0]},gazeState:d,normPog:w,durations:k,timestamp:t},this.latestGazeResult=N,[2,N])):[2,{facialLandmarks:[],faceRt:{rows:0,columns:0,data:[]},faceBlendshapes:[],eyePatch:new ImageData(1,1),headVector:[0,0,0],faceOrigin3D:[0,0,0],metric_transform:{rows:3,columns:3,data:[1,0,0,1,0,0,1,0,0]},gazeState:"closed",normPog:[0,0],durations:{faceLandmarker:s-n,prepareInput:0,blazeGaze:0,kalmanFilter:0,total:0},timestamp:t}]}})})},e}();t.default=g},391:(e,t,n)=>{var r=n(180),s=n(181),a=n(31),i=n(67),o=n(833),u=n(717),l=n(801);l.alea=r,l.xor128=s,l.xorwow=a,l.xorshift7=i,l.xor4096=o,l.tychei=u,e.exports=l},396:function(e,t,n){"use strict";var r=this&&this.__awaiter||function(e,t,n,r){return new(n||(n=Promise))(function(s,a){function i(e){try{u(r.next(e))}catch(e){a(e)}}function o(e){try{u(r.throw(e))}catch(e){a(e)}}function u(e){var t;e.done?s(e.value):(t=e.value,t instanceof n?t:new n(function(e){e(t)})).then(i,o)}u((r=r.apply(e,t||[])).next())})},s=this&&this.__generator||function(e,t){var n,r,s,a={label:0,sent:function(){if(1&s[0])throw s[1];return s[1]},trys:[],ops:[]},i=Object.create(("function"==typeof Iterator?Iterator:Object).prototype);return i.next=o(0),i.throw=o(1),i.return=o(2),"function"==typeof Symbol&&(i[Symbol.iterator]=function(){return this}),i;function o(o){return function(u){return function(o){if(n)throw new TypeError("Generator is already executing.");for(;i&&(i=0,o[0]&&(a=0)),a;)try{if(n=1,r&&(s=2&o[0]?r.return:o[0]?r.throw||((s=r.return)&&s.call(r),0):r.next)&&!(s=s.call(r,o[1])).done)return s;switch(r=0,s&&(o=[2&o[0],s.value]),o[0]){case 0:case 1:s=o;break;case 4:return a.label++,{value:o[1],done:!1};case 5:a.label++,r=o[1],o=[0];continue;case 7:o=a.ops.pop(),a.trys.pop();continue;default:if(!((s=(s=a.trys).length>0&&s[s.length-1])||6!==o[0]&&2!==o[0])){a=0;continue}if(3===o[0]&&(!s||o[1]>s[0]&&o[1]<s[3])){a.label=o[1];break}if(6===o[0]&&a.label<s[1]){a.label=s[1],s=o;break}if(s&&a.label<s[2]){a.label=s[2],a.ops.push(o);break}s[2]&&a.ops.pop(),a.trys.pop();continue}o=t.call(e,a)}catch(e){o=[6,e],r=0}finally{n=s=0}if(5&o[0])throw o[1];return{value:o[0]?o[1]:void 0,done:!0}}([o,u])}}};Object.defineProperty(t,"__esModule",{value:!0});var a=n(608),i=function(){function e(e){var t=document.getElementById(e);if(!t)throw new Error("Video element with id '".concat(e,"' not found"));this.videoElement=t}return e.prototype.startWebcam=function(e){return r(this,void 0,void 0,function(){var t,n,r,a=this;return s(this,function(s){switch(s.label){case 0:return s.trys.push([0,2,,3]),t={video:{width:{ideal:640},height:{ideal:480},facingMode:"user"},audio:!1},n=this,[4,navigator.mediaDevices.getUserMedia(t)];case 1:return n.stream=s.sent(),this.videoElement.srcObject=this.stream,e&&(this.frameCallback=e),this.videoElement.onloadedmetadata=function(){a.videoElement.play()},this.videoElement.addEventListener("loadeddata",function(){a._processFrames()}),[3,3];case 2:return r=s.sent(),console.error("Error accessing the webcam:",r),[3,3];case 3:return[2]}})})},e.prototype.stopWebcam=function(){this.stream&&(this.stream.getTracks().forEach(function(e){return e.stop()}),this.stream=void 0)},e.prototype._processFrames=function(){var e=this,t=function(){return r(e,void 0,void 0,function(){var e;return s(this,function(n){switch(n.label){case 0:return!this.videoElement||this.videoElement.paused||this.videoElement.ended?[2]:(e=(0,a.convertVideoFrameToImageData)(this.videoElement),this.frameCallback?[4,this.frameCallback(e,this.videoElement.currentTime)]:[3,2]);case 1:n.sent(),n.label=2;case 2:return requestAnimationFrame(t),[2]}})})};requestAnimationFrame(t)},e}();t.default=i},512:e=>{"use strict";e.exports=function(e,t,n,r){var s=self||window;try{try{var a;try{a=new s.Blob([e])}catch(t){(a=new(s.BlobBuilder||s.WebKitBlobBuilder||s.MozBlobBuilder||s.MSBlobBuilder)).append(e),a=a.getBlob()}var i=s.URL||s.webkitURL,o=i.createObjectURL(a),u=new s[t](o,n);return i.revokeObjectURL(o),u}catch(r){return new s[t]("data:application/javascript,".concat(encodeURIComponent(e)),n)}}catch(e){if(!r)throw Error("Inline worker is not supported");return new s[t](r,n)}}},530:()=>{},551:()=>{},570:e=>{e.exports=n;var t=null;try{t=new WebAssembly.Instance(new WebAssembly.Module(new Uint8Array([0,97,115,109,1,0,0,0,1,13,2,96,0,1,127,96,4,127,127,127,127,1,127,3,7,6,0,1,1,1,1,1,6,6,1,127,1,65,0,11,7,50,6,3,109,117,108,0,1,5,100,105,118,95,115,0,2,5,100,105,118,95,117,0,3,5,114,101,109,95,115,0,4,5,114,101,109,95,117,0,5,8,103,101,116,95,104,105,103,104,0,0,10,191,1,6,4,0,35,0,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,126,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,127,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,128,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,129,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,130,34,4,66,32,135,167,36,0,32,4,167,11])),{}).exports}catch(e){}function n(e,t,n){this.low=0|e,this.high=0|t,this.unsigned=!!n}function r(e){return!0===(e&&e.__isLong__)}n.prototype.__isLong__,Object.defineProperty(n.prototype,"__isLong__",{value:!0}),n.isLong=r;var s={},a={};function i(e,t){var n,r,i;return t?(i=0<=(e>>>=0)&&e<256)&&(r=a[e])?r:(n=u(e,(0|e)<0?-1:0,!0),i&&(a[e]=n),n):(i=-128<=(e|=0)&&e<128)&&(r=s[e])?r:(n=u(e,e<0?-1:0,!1),i&&(s[e]=n),n)}function o(e,t){if(isNaN(e))return t?y:g;if(t){if(e<0)return y;if(e>=p)return k}else{if(e<=-f)return N;if(e+1>=f)return v}return e<0?o(-e,t).neg():u(e%d|0,e/d|0,t)}function u(e,t,r){return new n(e,t,r)}n.fromInt=i,n.fromNumber=o,n.fromBits=u;var l=Math.pow;function c(e,t,n){if(0===e.length)throw Error("empty string");if("NaN"===e||"Infinity"===e||"+Infinity"===e||"-Infinity"===e)return g;if("number"==typeof t?(n=t,t=!1):t=!!t,(n=n||10)<2||36<n)throw RangeError("radix");var r;if((r=e.indexOf("-"))>0)throw Error("interior hyphen");if(0===r)return c(e.substring(1),t,n).neg();for(var s=o(l(n,8)),a=g,i=0;i<e.length;i+=8){var u=Math.min(8,e.length-i),h=parseInt(e.substring(i,i+u),n);if(u<8){var d=o(l(n,u));a=a.mul(d).add(o(h))}else a=(a=a.mul(s)).add(o(h))}return a.unsigned=t,a}function h(e,t){return"number"==typeof e?o(e,t):"string"==typeof e?c(e,t):u(e.low,e.high,"boolean"==typeof t?t:e.unsigned)}n.fromString=c,n.fromValue=h;var d=4294967296,p=d*d,f=p/2,m=i(1<<24),g=i(0);n.ZERO=g;var y=i(0,!0);n.UZERO=y;var b=i(1);n.ONE=b;var x=i(1,!0);n.UONE=x;var w=i(-1);n.NEG_ONE=w;var v=u(-1,2147483647,!1);n.MAX_VALUE=v;var k=u(-1,-1,!0);n.MAX_UNSIGNED_VALUE=k;var N=u(0,-2147483648,!1);n.MIN_VALUE=N;var I=n.prototype;I.toInt=function(){return this.unsigned?this.low>>>0:this.low},I.toNumber=function(){return this.unsigned?(this.high>>>0)*d+(this.low>>>0):this.high*d+(this.low>>>0)},I.toString=function(e){if((e=e||10)<2||36<e)throw RangeError("radix");if(this.isZero())return"0";if(this.isNegative()){if(this.eq(N)){var t=o(e),n=this.div(t),r=n.mul(t).sub(this);return n.toString(e)+r.toInt().toString(e)}return"-"+this.neg().toString(e)}for(var s=o(l(e,6),this.unsigned),a=this,i="";;){var u=a.div(s),c=(a.sub(u.mul(s)).toInt()>>>0).toString(e);if((a=u).isZero())return c+i;for(;c.length<6;)c="0"+c;i=""+c+i}},I.getHighBits=function(){return this.high},I.getHighBitsUnsigned=function(){return this.high>>>0},I.getLowBits=function(){return this.low},I.getLowBitsUnsigned=function(){return this.low>>>0},I.getNumBitsAbs=function(){if(this.isNegative())return this.eq(N)?64:this.neg().getNumBitsAbs();for(var e=0!=this.high?this.high:this.low,t=31;t>0&&!(e&1<<t);t--);return 0!=this.high?t+33:t+1},I.isZero=function(){return 0===this.high&&0===this.low},I.eqz=I.isZero,I.isNegative=function(){return!this.unsigned&&this.high<0},I.isPositive=function(){return this.unsigned||this.high>=0},I.isOdd=function(){return!(1&~this.low)},I.isEven=function(){return!(1&this.low)},I.equals=function(e){return r(e)||(e=h(e)),(this.unsigned===e.unsigned||this.high>>>31!=1||e.high>>>31!=1)&&this.high===e.high&&this.low===e.low},I.eq=I.equals,I.notEquals=function(e){return!this.eq(e)},I.neq=I.notEquals,I.ne=I.notEquals,I.lessThan=function(e){return this.comp(e)<0},I.lt=I.lessThan,I.lessThanOrEqual=function(e){return this.comp(e)<=0},I.lte=I.lessThanOrEqual,I.le=I.lessThanOrEqual,I.greaterThan=function(e){return this.comp(e)>0},I.gt=I.greaterThan,I.greaterThanOrEqual=function(e){return this.comp(e)>=0},I.gte=I.greaterThanOrEqual,I.ge=I.greaterThanOrEqual,I.compare=function(e){if(r(e)||(e=h(e)),this.eq(e))return 0;var t=this.isNegative(),n=e.isNegative();return t&&!n?-1:!t&&n?1:this.unsigned?e.high>>>0>this.high>>>0||e.high===this.high&&e.low>>>0>this.low>>>0?-1:1:this.sub(e).isNegative()?-1:1},I.comp=I.compare,I.negate=function(){return!this.unsigned&&this.eq(N)?N:this.not().add(b)},I.neg=I.negate,I.add=function(e){r(e)||(e=h(e));var t=this.high>>>16,n=65535&this.high,s=this.low>>>16,a=65535&this.low,i=e.high>>>16,o=65535&e.high,l=e.low>>>16,c=0,d=0,p=0,f=0;return p+=(f+=a+(65535&e.low))>>>16,d+=(p+=s+l)>>>16,c+=(d+=n+o)>>>16,c+=t+i,u((p&=65535)<<16|(f&=65535),(c&=65535)<<16|(d&=65535),this.unsigned)},I.subtract=function(e){return r(e)||(e=h(e)),this.add(e.neg())},I.sub=I.subtract,I.multiply=function(e){if(this.isZero())return g;if(r(e)||(e=h(e)),t)return u(t.mul(this.low,this.high,e.low,e.high),t.get_high(),this.unsigned);if(e.isZero())return g;if(this.eq(N))return e.isOdd()?N:g;if(e.eq(N))return this.isOdd()?N:g;if(this.isNegative())return e.isNegative()?this.neg().mul(e.neg()):this.neg().mul(e).neg();if(e.isNegative())return this.mul(e.neg()).neg();if(this.lt(m)&&e.lt(m))return o(this.toNumber()*e.toNumber(),this.unsigned);var n=this.high>>>16,s=65535&this.high,a=this.low>>>16,i=65535&this.low,l=e.high>>>16,c=65535&e.high,d=e.low>>>16,p=65535&e.low,f=0,y=0,b=0,x=0;return b+=(x+=i*p)>>>16,y+=(b+=a*p)>>>16,b&=65535,y+=(b+=i*d)>>>16,f+=(y+=s*p)>>>16,y&=65535,f+=(y+=a*d)>>>16,y&=65535,f+=(y+=i*c)>>>16,f+=n*p+s*d+a*c+i*l,u((b&=65535)<<16|(x&=65535),(f&=65535)<<16|(y&=65535),this.unsigned)},I.mul=I.multiply,I.divide=function(e){if(r(e)||(e=h(e)),e.isZero())throw Error("division by zero");var n,s,a;if(t)return this.unsigned||-2147483648!==this.high||-1!==e.low||-1!==e.high?u((this.unsigned?t.div_u:t.div_s)(this.low,this.high,e.low,e.high),t.get_high(),this.unsigned):this;if(this.isZero())return this.unsigned?y:g;if(this.unsigned){if(e.unsigned||(e=e.toUnsigned()),e.gt(this))return y;if(e.gt(this.shru(1)))return x;a=y}else{if(this.eq(N))return e.eq(b)||e.eq(w)?N:e.eq(N)?b:(n=this.shr(1).div(e).shl(1)).eq(g)?e.isNegative()?b:w:(s=this.sub(e.mul(n)),a=n.add(s.div(e)));if(e.eq(N))return this.unsigned?y:g;if(this.isNegative())return e.isNegative()?this.neg().div(e.neg()):this.neg().div(e).neg();if(e.isNegative())return this.div(e.neg()).neg();a=g}for(s=this;s.gte(e);){n=Math.max(1,Math.floor(s.toNumber()/e.toNumber()));for(var i=Math.ceil(Math.log(n)/Math.LN2),c=i<=48?1:l(2,i-48),d=o(n),p=d.mul(e);p.isNegative()||p.gt(s);)p=(d=o(n-=c,this.unsigned)).mul(e);d.isZero()&&(d=b),a=a.add(d),s=s.sub(p)}return a},I.div=I.divide,I.modulo=function(e){return r(e)||(e=h(e)),t?u((this.unsigned?t.rem_u:t.rem_s)(this.low,this.high,e.low,e.high),t.get_high(),this.unsigned):this.sub(this.div(e).mul(e))},I.mod=I.modulo,I.rem=I.modulo,I.not=function(){return u(~this.low,~this.high,this.unsigned)},I.and=function(e){return r(e)||(e=h(e)),u(this.low&e.low,this.high&e.high,this.unsigned)},I.or=function(e){return r(e)||(e=h(e)),u(this.low|e.low,this.high|e.high,this.unsigned)},I.xor=function(e){return r(e)||(e=h(e)),u(this.low^e.low,this.high^e.high,this.unsigned)},I.shiftLeft=function(e){return r(e)&&(e=e.toInt()),0==(e&=63)?this:e<32?u(this.low<<e,this.high<<e|this.low>>>32-e,this.unsigned):u(0,this.low<<e-32,this.unsigned)},I.shl=I.shiftLeft,I.shiftRight=function(e){return r(e)&&(e=e.toInt()),0==(e&=63)?this:e<32?u(this.low>>>e|this.high<<32-e,this.high>>e,this.unsigned):u(this.high>>e-32,this.high>=0?0:-1,this.unsigned)},I.shr=I.shiftRight,I.shiftRightUnsigned=function(e){if(r(e)&&(e=e.toInt()),0==(e&=63))return this;var t=this.high;return e<32?u(this.low>>>e|t<<32-e,t>>>e,this.unsigned):u(32===e?t:t>>>e-32,0,this.unsigned)},I.shru=I.shiftRightUnsigned,I.shr_u=I.shiftRightUnsigned,I.toSigned=function(){return this.unsigned?u(this.low,this.high,!1):this},I.toUnsigned=function(){return this.unsigned?this:u(this.low,this.high,!0)},I.toBytes=function(e){return e?this.toBytesLE():this.toBytesBE()},I.toBytesLE=function(){var e=this.high,t=this.low;return[255&t,t>>>8&255,t>>>16&255,t>>>24,255&e,e>>>8&255,e>>>16&255,e>>>24]},I.toBytesBE=function(){var e=this.high,t=this.low;return[e>>>24,e>>>16&255,e>>>8&255,255&e,t>>>24,t>>>16&255,t>>>8&255,255&t]},n.fromBytes=function(e,t,r){return r?n.fromBytesLE(e,t):n.fromBytesBE(e,t)},n.fromBytesLE=function(e,t){return new n(e[0]|e[1]<<8|e[2]<<16|e[3]<<24,e[4]|e[5]<<8|e[6]<<16|e[7]<<24,t)},n.fromBytesBE=function(e,t){return new n(e[4]<<24|e[5]<<16|e[6]<<8|e[7],e[0]<<24|e[1]<<16|e[2]<<8|e[3],t)}},590:()=>{},608:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.convertVideoFrameToImageData=function(e){var t=document.createElement("canvas");t.width=e.videoWidth,t.height=e.videoHeight;var n=t.getContext("2d");return n.drawImage(e,0,0),n.getImageData(0,0,t.width,t.height)}},670:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.KalmanFilter2D=void 0;var r=n(673),s=function(){function e(e,t,n){void 0===e&&(e=1),void 0===t&&(t=1e-4),void 0===n&&(n=.01),this.x=r.Matrix.zeros(4,1),this.F=new r.Matrix([[1,0,e,0],[0,1,0,e],[0,0,1,0],[0,0,0,1]]),this.H=new r.Matrix([[1,0,0,0],[0,1,0,0]]),this.R=r.Matrix.eye(2).mul(n),this.Q=r.Matrix.eye(4).mul(t),this.P=r.Matrix.eye(4)}return e.prototype.predict=function(){return this.x=this.F.mmul(this.x),this.P=this.F.mmul(this.P).mmul(this.F.transpose()).add(this.Q),this.x.subMatrix(0,1,0,0).to1DArray()},e.prototype.update=function(e){var t=new r.Matrix([[e[0]],[e[1]]]).sub(this.H.mmul(this.x)),n=this.H.mmul(this.P).mmul(this.H.transpose()).add(this.R),s=this.P.mmul(this.H.transpose()).mmul((0,r.inverse)(n));this.x=this.x.add(s.mmul(t));var a=r.Matrix.eye(4);return this.P=a.sub(s.mmul(this.H)).mmul(this.P),this.x.subMatrix(0,1,0,0).to1DArray()},e.prototype.step=function(e){return this.predict(),this.update(e)},e}();t.KalmanFilter2D=s},673:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(788),s=n(718);const a=" ".repeat(2),i=" ".repeat(4);function o(e,t={}){const{maxRows:n=15,maxColumns:r=10,maxNumSize:s=8,padMinus:o="auto"}=t;return`${e.constructor.name} {\n${a}[\n${i}${function(e,t,n,r,s){const{rows:a,columns:o}=e,l=Math.min(a,t),c=Math.min(o,n),h=[];if("auto"===s){s=!1;e:for(let t=0;t<l;t++)for(let n=0;n<c;n++)if(e.get(t,n)<0){s=!0;break e}}for(let t=0;t<l;t++){let n=[];for(let a=0;a<c;a++)n.push(u(e.get(t,a),r,s));h.push(`${n.join(" ")}`)}return c!==o&&(h[h.length-1]+=` ... ${o-n} more columns`),l!==a&&h.push(`... ${a-t} more rows`),h.join(`\n${i}`)}(e,n,r,s,o)}\n${a}]\n${a}rows: ${e.rows}\n${a}columns: ${e.columns}\n}`}function u(e,t,n){return(e>=0&&n?` ${l(e,t-1)}`:l(e,t)).padEnd(t)}function l(e,t){let n=e.toString();if(n.length<=t)return n;let r=e.toFixed(t);if(r.length>t&&(r=e.toFixed(Math.max(0,t-(r.length-t)))),r.length<=t&&!r.startsWith("0.000")&&!r.startsWith("-0.000"))return r;let s=e.toExponential(t);return s.length>t&&(s=e.toExponential(Math.max(0,t-(s.length-t)))),s.slice(0)}function c(e,t,n){let r=n?e.rows:e.rows-1;if(t<0||t>r)throw new RangeError("Row index out of range")}function h(e,t,n){let r=n?e.columns:e.columns-1;if(t<0||t>r)throw new RangeError("Column index out of range")}function d(e,t){if(t.to1DArray&&(t=t.to1DArray()),t.length!==e.columns)throw new RangeError("vector size must be the same as the number of columns");return t}function p(e,t){if(t.to1DArray&&(t=t.to1DArray()),t.length!==e.rows)throw new RangeError("vector size must be the same as the number of rows");return t}function f(e,t){if(!r.isAnyArray(t))throw new TypeError("row indices must be an array");for(let n=0;n<t.length;n++)if(t[n]<0||t[n]>=e.rows)throw new RangeError("row indices are out of range")}function m(e,t){if(!r.isAnyArray(t))throw new TypeError("column indices must be an array");for(let n=0;n<t.length;n++)if(t[n]<0||t[n]>=e.columns)throw new RangeError("column indices are out of range")}function g(e,t,n,r,s){if(5!==arguments.length)throw new RangeError("expected 4 arguments");if(b("startRow",t),b("endRow",n),b("startColumn",r),b("endColumn",s),t>n||r>s||t<0||t>=e.rows||n<0||n>=e.rows||r<0||r>=e.columns||s<0||s>=e.columns)throw new RangeError("Submatrix indices are out of range")}function y(e,t=0){let n=[];for(let r=0;r<e;r++)n.push(t);return n}function b(e,t){if("number"!=typeof t)throw new TypeError(`${e} must be a number`)}function x(e){if(e.isEmpty())throw new Error("Empty matrix has no elements to index")}class w{static from1DArray(e,t,n){if(e*t!==n.length)throw new RangeError("data length does not match given dimensions");let r=new N(e,t);for(let s=0;s<e;s++)for(let e=0;e<t;e++)r.set(s,e,n[s*t+e]);return r}static rowVector(e){let t=new N(1,e.length);for(let n=0;n<e.length;n++)t.set(0,n,e[n]);return t}static columnVector(e){let t=new N(e.length,1);for(let n=0;n<e.length;n++)t.set(n,0,e[n]);return t}static zeros(e,t){return new N(e,t)}static ones(e,t){return new N(e,t).fill(1)}static rand(e,t,n={}){if("object"!=typeof n)throw new TypeError("options must be an object");const{random:r=Math.random}=n;let s=new N(e,t);for(let n=0;n<e;n++)for(let e=0;e<t;e++)s.set(n,e,r());return s}static randInt(e,t,n={}){if("object"!=typeof n)throw new TypeError("options must be an object");const{min:r=0,max:s=1e3,random:a=Math.random}=n;if(!Number.isInteger(r))throw new TypeError("min must be an integer");if(!Number.isInteger(s))throw new TypeError("max must be an integer");if(r>=s)throw new RangeError("min must be smaller than max");let i=s-r,o=new N(e,t);for(let n=0;n<e;n++)for(let e=0;e<t;e++){let t=r+Math.round(a()*i);o.set(n,e,t)}return o}static eye(e,t,n){void 0===t&&(t=e),void 0===n&&(n=1);let r=Math.min(e,t),s=this.zeros(e,t);for(let e=0;e<r;e++)s.set(e,e,n);return s}static diag(e,t,n){let r=e.length;void 0===t&&(t=r),void 0===n&&(n=t);let s=Math.min(r,t,n),a=this.zeros(t,n);for(let t=0;t<s;t++)a.set(t,t,e[t]);return a}static min(e,t){e=this.checkMatrix(e),t=this.checkMatrix(t);let n=e.rows,r=e.columns,s=new N(n,r);for(let a=0;a<n;a++)for(let n=0;n<r;n++)s.set(a,n,Math.min(e.get(a,n),t.get(a,n)));return s}static max(e,t){e=this.checkMatrix(e),t=this.checkMatrix(t);let n=e.rows,r=e.columns,s=new this(n,r);for(let a=0;a<n;a++)for(let n=0;n<r;n++)s.set(a,n,Math.max(e.get(a,n),t.get(a,n)));return s}static checkMatrix(e){return w.isMatrix(e)?e:new N(e)}static isMatrix(e){return null!=e&&"Matrix"===e.klass}get size(){return this.rows*this.columns}apply(e){if("function"!=typeof e)throw new TypeError("callback must be a function");for(let t=0;t<this.rows;t++)for(let n=0;n<this.columns;n++)e.call(this,t,n);return this}to1DArray(){let e=[];for(let t=0;t<this.rows;t++)for(let n=0;n<this.columns;n++)e.push(this.get(t,n));return e}to2DArray(){let e=[];for(let t=0;t<this.rows;t++){e.push([]);for(let n=0;n<this.columns;n++)e[t].push(this.get(t,n))}return e}toJSON(){return this.to2DArray()}isRowVector(){return 1===this.rows}isColumnVector(){return 1===this.columns}isVector(){return 1===this.rows||1===this.columns}isSquare(){return this.rows===this.columns}isEmpty(){return 0===this.rows||0===this.columns}isSymmetric(){if(this.isSquare()){for(let e=0;e<this.rows;e++)for(let t=0;t<=e;t++)if(this.get(e,t)!==this.get(t,e))return!1;return!0}return!1}isDistance(){if(!this.isSymmetric())return!1;for(let e=0;e<this.rows;e++)if(0!==this.get(e,e))return!1;return!0}isEchelonForm(){let e=0,t=0,n=-1,r=!0,s=!1;for(;e<this.rows&&r;){for(t=0,s=!1;t<this.columns&&!1===s;)0===this.get(e,t)?t++:1===this.get(e,t)&&t>n?(s=!0,n=t):(r=!1,s=!0);e++}return r}isReducedEchelonForm(){let e=0,t=0,n=-1,r=!0,s=!1;for(;e<this.rows&&r;){for(t=0,s=!1;t<this.columns&&!1===s;)0===this.get(e,t)?t++:1===this.get(e,t)&&t>n?(s=!0,n=t):(r=!1,s=!0);for(let n=t+1;n<this.rows;n++)0!==this.get(e,n)&&(r=!1);e++}return r}echelonForm(){let e=this.clone(),t=0,n=0;for(;t<e.rows&&n<e.columns;){let r=t;for(let s=t;s<e.rows;s++)e.get(s,n)>e.get(r,n)&&(r=s);if(0===e.get(r,n))n++;else{e.swapRows(t,r);let s=e.get(t,n);for(let r=n;r<e.columns;r++)e.set(t,r,e.get(t,r)/s);for(let r=t+1;r<e.rows;r++){let s=e.get(r,n)/e.get(t,n);e.set(r,n,0);for(let a=n+1;a<e.columns;a++)e.set(r,a,e.get(r,a)-e.get(t,a)*s)}t++,n++}}return e}reducedEchelonForm(){let e=this.echelonForm(),t=e.columns,n=e.rows,r=n-1;for(;r>=0;)if(0===e.maxRow(r))r--;else{let s=0,a=!1;for(;s<n&&!1===a;)1===e.get(r,s)?a=!0:s++;for(let n=0;n<r;n++){let a=e.get(n,s);for(let i=s;i<t;i++){let t=e.get(n,i)-a*e.get(r,i);e.set(n,i,t)}}r--}return e}set(){throw new Error("set method is unimplemented")}get(){throw new Error("get method is unimplemented")}repeat(e={}){if("object"!=typeof e)throw new TypeError("options must be an object");const{rows:t=1,columns:n=1}=e;if(!Number.isInteger(t)||t<=0)throw new TypeError("rows must be a positive integer");if(!Number.isInteger(n)||n<=0)throw new TypeError("columns must be a positive integer");let r=new N(this.rows*t,this.columns*n);for(let e=0;e<t;e++)for(let t=0;t<n;t++)r.setSubMatrix(this,this.rows*e,this.columns*t);return r}fill(e){for(let t=0;t<this.rows;t++)for(let n=0;n<this.columns;n++)this.set(t,n,e);return this}neg(){return this.mulS(-1)}getRow(e){c(this,e);let t=[];for(let n=0;n<this.columns;n++)t.push(this.get(e,n));return t}getRowVector(e){return N.rowVector(this.getRow(e))}setRow(e,t){c(this,e),t=d(this,t);for(let n=0;n<this.columns;n++)this.set(e,n,t[n]);return this}swapRows(e,t){c(this,e),c(this,t);for(let n=0;n<this.columns;n++){let r=this.get(e,n);this.set(e,n,this.get(t,n)),this.set(t,n,r)}return this}getColumn(e){h(this,e);let t=[];for(let n=0;n<this.rows;n++)t.push(this.get(n,e));return t}getColumnVector(e){return N.columnVector(this.getColumn(e))}setColumn(e,t){h(this,e),t=p(this,t);for(let n=0;n<this.rows;n++)this.set(n,e,t[n]);return this}swapColumns(e,t){h(this,e),h(this,t);for(let n=0;n<this.rows;n++){let r=this.get(n,e);this.set(n,e,this.get(n,t)),this.set(n,t,r)}return this}addRowVector(e){e=d(this,e);for(let t=0;t<this.rows;t++)for(let n=0;n<this.columns;n++)this.set(t,n,this.get(t,n)+e[n]);return this}subRowVector(e){e=d(this,e);for(let t=0;t<this.rows;t++)for(let n=0;n<this.columns;n++)this.set(t,n,this.get(t,n)-e[n]);return this}mulRowVector(e){e=d(this,e);for(let t=0;t<this.rows;t++)for(let n=0;n<this.columns;n++)this.set(t,n,this.get(t,n)*e[n]);return this}divRowVector(e){e=d(this,e);for(let t=0;t<this.rows;t++)for(let n=0;n<this.columns;n++)this.set(t,n,this.get(t,n)/e[n]);return this}addColumnVector(e){e=p(this,e);for(let t=0;t<this.rows;t++)for(let n=0;n<this.columns;n++)this.set(t,n,this.get(t,n)+e[t]);return this}subColumnVector(e){e=p(this,e);for(let t=0;t<this.rows;t++)for(let n=0;n<this.columns;n++)this.set(t,n,this.get(t,n)-e[t]);return this}mulColumnVector(e){e=p(this,e);for(let t=0;t<this.rows;t++)for(let n=0;n<this.columns;n++)this.set(t,n,this.get(t,n)*e[t]);return this}divColumnVector(e){e=p(this,e);for(let t=0;t<this.rows;t++)for(let n=0;n<this.columns;n++)this.set(t,n,this.get(t,n)/e[t]);return this}mulRow(e,t){c(this,e);for(let n=0;n<this.columns;n++)this.set(e,n,this.get(e,n)*t);return this}mulColumn(e,t){h(this,e);for(let n=0;n<this.rows;n++)this.set(n,e,this.get(n,e)*t);return this}max(e){if(this.isEmpty())return NaN;switch(e){case"row":{const e=new Array(this.rows).fill(Number.NEGATIVE_INFINITY);for(let t=0;t<this.rows;t++)for(let n=0;n<this.columns;n++)this.get(t,n)>e[t]&&(e[t]=this.get(t,n));return e}case"column":{const e=new Array(this.columns).fill(Number.NEGATIVE_INFINITY);for(let t=0;t<this.rows;t++)for(let n=0;n<this.columns;n++)this.get(t,n)>e[n]&&(e[n]=this.get(t,n));return e}case void 0:{let e=this.get(0,0);for(let t=0;t<this.rows;t++)for(let n=0;n<this.columns;n++)this.get(t,n)>e&&(e=this.get(t,n));return e}default:throw new Error(`invalid option: ${e}`)}}maxIndex(){x(this);let e=this.get(0,0),t=[0,0];for(let n=0;n<this.rows;n++)for(let r=0;r<this.columns;r++)this.get(n,r)>e&&(e=this.get(n,r),t[0]=n,t[1]=r);return t}min(e){if(this.isEmpty())return NaN;switch(e){case"row":{const e=new Array(this.rows).fill(Number.POSITIVE_INFINITY);for(let t=0;t<this.rows;t++)for(let n=0;n<this.columns;n++)this.get(t,n)<e[t]&&(e[t]=this.get(t,n));return e}case"column":{const e=new Array(this.columns).fill(Number.POSITIVE_INFINITY);for(let t=0;t<this.rows;t++)for(let n=0;n<this.columns;n++)this.get(t,n)<e[n]&&(e[n]=this.get(t,n));return e}case void 0:{let e=this.get(0,0);for(let t=0;t<this.rows;t++)for(let n=0;n<this.columns;n++)this.get(t,n)<e&&(e=this.get(t,n));return e}default:throw new Error(`invalid option: ${e}`)}}minIndex(){x(this);let e=this.get(0,0),t=[0,0];for(let n=0;n<this.rows;n++)for(let r=0;r<this.columns;r++)this.get(n,r)<e&&(e=this.get(n,r),t[0]=n,t[1]=r);return t}maxRow(e){if(c(this,e),this.isEmpty())return NaN;let t=this.get(e,0);for(let n=1;n<this.columns;n++)this.get(e,n)>t&&(t=this.get(e,n));return t}maxRowIndex(e){c(this,e),x(this);let t=this.get(e,0),n=[e,0];for(let r=1;r<this.columns;r++)this.get(e,r)>t&&(t=this.get(e,r),n[1]=r);return n}minRow(e){if(c(this,e),this.isEmpty())return NaN;let t=this.get(e,0);for(let n=1;n<this.columns;n++)this.get(e,n)<t&&(t=this.get(e,n));return t}minRowIndex(e){c(this,e),x(this);let t=this.get(e,0),n=[e,0];for(let r=1;r<this.columns;r++)this.get(e,r)<t&&(t=this.get(e,r),n[1]=r);return n}maxColumn(e){if(h(this,e),this.isEmpty())return NaN;let t=this.get(0,e);for(let n=1;n<this.rows;n++)this.get(n,e)>t&&(t=this.get(n,e));return t}maxColumnIndex(e){h(this,e),x(this);let t=this.get(0,e),n=[0,e];for(let r=1;r<this.rows;r++)this.get(r,e)>t&&(t=this.get(r,e),n[0]=r);return n}minColumn(e){if(h(this,e),this.isEmpty())return NaN;let t=this.get(0,e);for(let n=1;n<this.rows;n++)this.get(n,e)<t&&(t=this.get(n,e));return t}minColumnIndex(e){h(this,e),x(this);let t=this.get(0,e),n=[0,e];for(let r=1;r<this.rows;r++)this.get(r,e)<t&&(t=this.get(r,e),n[0]=r);return n}diag(){let e=Math.min(this.rows,this.columns),t=[];for(let n=0;n<e;n++)t.push(this.get(n,n));return t}norm(e="frobenius"){switch(e){case"max":return this.max();case"frobenius":return Math.sqrt(this.dot(this));default:throw new RangeError(`unknown norm type: ${e}`)}}cumulativeSum(){let e=0;for(let t=0;t<this.rows;t++)for(let n=0;n<this.columns;n++)e+=this.get(t,n),this.set(t,n,e);return this}dot(e){w.isMatrix(e)&&(e=e.to1DArray());let t=this.to1DArray();if(t.length!==e.length)throw new RangeError("vectors do not have the same size");let n=0;for(let r=0;r<t.length;r++)n+=t[r]*e[r];return n}mmul(e){e=N.checkMatrix(e);let t=this.rows,n=this.columns,r=e.columns,s=new N(t,r),a=new Float64Array(n);for(let i=0;i<r;i++){for(let t=0;t<n;t++)a[t]=e.get(t,i);for(let e=0;e<t;e++){let t=0;for(let r=0;r<n;r++)t+=this.get(e,r)*a[r];s.set(e,i,t)}}return s}mpow(e){if(!this.isSquare())throw new RangeError("Matrix must be square");if(!Number.isInteger(e)||e<0)throw new RangeError("Exponent must be a non-negative integer");let t=N.eye(this.rows),n=this;for(let r=e;r>=1;r/=2)1&r&&(t=t.mmul(n)),n=n.mmul(n);return t}strassen2x2(e){e=N.checkMatrix(e);let t=new N(2,2);const n=this.get(0,0),r=e.get(0,0),s=this.get(0,1),a=e.get(0,1),i=this.get(1,0),o=e.get(1,0),u=this.get(1,1),l=e.get(1,1),c=(n+u)*(r+l),h=(i+u)*r,d=n*(a-l),p=u*(o-r),f=(n+s)*l,m=c+p-f+(s-u)*(o+l),g=d+f,y=h+p,b=c-h+d+(i-n)*(r+a);return t.set(0,0,m),t.set(0,1,g),t.set(1,0,y),t.set(1,1,b),t}strassen3x3(e){e=N.checkMatrix(e);let t=new N(3,3);const n=this.get(0,0),r=this.get(0,1),s=this.get(0,2),a=this.get(1,0),i=this.get(1,1),o=this.get(1,2),u=this.get(2,0),l=this.get(2,1),c=this.get(2,2),h=e.get(0,0),d=e.get(0,1),p=e.get(0,2),f=e.get(1,0),m=e.get(1,1),g=e.get(1,2),y=e.get(2,0),b=e.get(2,1),x=e.get(2,2),w=(n-a)*(-d+m),v=(-n+a+i)*(h-d+m),k=(a+i)*(-h+d),I=n*h,S=(-n+u+l)*(h-p+g),T=(-n+u)*(p-g),E=(u+l)*(-h+p),C=(-s+l+c)*(m+y-b),$=(s-c)*(m-b),A=s*y,R=(l+c)*(-y+b),_=(-s+i+o)*(g+y-x),D=(s-o)*(g-x),F=(i+o)*(-y+x),M=I+A+r*f,O=(n+r+s-a-i-l-c)*m+v+k+I+C+A+R,L=I+S+E+(n+r+s-i-o-u-l)*g+A+_+F,z=w+i*(-h+d+f-m-g-y+x)+v+I+A+_+D,P=w+v+k+I+o*b,B=A+_+D+F+a*p,V=I+S+T+l*(-h+p+f-m-g-y+b)+C+$+A,U=C+$+A+R+u*d,W=I+S+T+E+c*x;return t.set(0,0,M),t.set(0,1,O),t.set(0,2,L),t.set(1,0,z),t.set(1,1,P),t.set(1,2,B),t.set(2,0,V),t.set(2,1,U),t.set(2,2,W),t}mmulStrassen(e){e=N.checkMatrix(e);let t=this.clone(),n=t.rows,r=t.columns,s=e.rows,a=e.columns;function i(e,t,n){let r=e.rows,s=e.columns;if(r===t&&s===n)return e;{let r=w.zeros(t,n);return r=r.setSubMatrix(e,0,0),r}}r!==s&&console.warn(`Multiplying ${n} x ${r} and ${s} x ${a} matrix: dimensions do not match.`);let o=Math.max(n,s),u=Math.max(r,a);return t=i(t,o,u),function e(t,n,r,s){if(r<=512||s<=512)return t.mmul(n);r%2==1&&s%2==1?(t=i(t,r+1,s+1),n=i(n,r+1,s+1)):r%2==1?(t=i(t,r+1,s),n=i(n,r+1,s)):s%2==1&&(t=i(t,r,s+1),n=i(n,r,s+1));let a=parseInt(t.rows/2,10),o=parseInt(t.columns/2,10),u=t.subMatrix(0,a-1,0,o-1),l=n.subMatrix(0,a-1,0,o-1),c=t.subMatrix(0,a-1,o,t.columns-1),h=n.subMatrix(0,a-1,o,n.columns-1),d=t.subMatrix(a,t.rows-1,0,o-1),p=n.subMatrix(a,n.rows-1,0,o-1),f=t.subMatrix(a,t.rows-1,o,t.columns-1),m=n.subMatrix(a,n.rows-1,o,n.columns-1),g=e(w.add(u,f),w.add(l,m),a,o),y=e(w.add(d,f),l,a,o),b=e(u,w.sub(h,m),a,o),x=e(f,w.sub(p,l),a,o),v=e(w.add(u,c),m,a,o),k=e(w.sub(d,u),w.add(l,h),a,o),N=e(w.sub(c,f),w.add(p,m),a,o),I=w.add(g,x);I.sub(v),I.add(N);let S=w.add(b,v),T=w.add(y,x),E=w.sub(g,y);E.add(b),E.add(k);let C=w.zeros(2*I.rows,2*I.columns);return C=C.setSubMatrix(I,0,0),C=C.setSubMatrix(S,I.rows,0),C=C.setSubMatrix(T,0,I.columns),C=C.setSubMatrix(E,I.rows,I.columns),C.subMatrix(0,r-1,0,s-1)}(t,e=i(e,o,u),o,u)}scaleRows(e={}){if("object"!=typeof e)throw new TypeError("options must be an object");const{min:t=0,max:n=1}=e;if(!Number.isFinite(t))throw new TypeError("min must be a number");if(!Number.isFinite(n))throw new TypeError("max must be a number");if(t>=n)throw new RangeError("min must be smaller than max");let r=new N(this.rows,this.columns);for(let e=0;e<this.rows;e++){const a=this.getRow(e);a.length>0&&s(a,{min:t,max:n,output:a}),r.setRow(e,a)}return r}scaleColumns(e={}){if("object"!=typeof e)throw new TypeError("options must be an object");const{min:t=0,max:n=1}=e;if(!Number.isFinite(t))throw new TypeError("min must be a number");if(!Number.isFinite(n))throw new TypeError("max must be a number");if(t>=n)throw new RangeError("min must be smaller than max");let r=new N(this.rows,this.columns);for(let e=0;e<this.columns;e++){const a=this.getColumn(e);a.length&&s(a,{min:t,max:n,output:a}),r.setColumn(e,a)}return r}flipRows(){const e=Math.ceil(this.columns/2);for(let t=0;t<this.rows;t++)for(let n=0;n<e;n++){let e=this.get(t,n),r=this.get(t,this.columns-1-n);this.set(t,n,r),this.set(t,this.columns-1-n,e)}return this}flipColumns(){const e=Math.ceil(this.rows/2);for(let t=0;t<this.columns;t++)for(let n=0;n<e;n++){let e=this.get(n,t),r=this.get(this.rows-1-n,t);this.set(n,t,r),this.set(this.rows-1-n,t,e)}return this}kroneckerProduct(e){e=N.checkMatrix(e);let t=this.rows,n=this.columns,r=e.rows,s=e.columns,a=new N(t*r,n*s);for(let i=0;i<t;i++)for(let t=0;t<n;t++)for(let n=0;n<r;n++)for(let o=0;o<s;o++)a.set(r*i+n,s*t+o,this.get(i,t)*e.get(n,o));return a}kroneckerSum(e){if(e=N.checkMatrix(e),!this.isSquare()||!e.isSquare())throw new Error("Kronecker Sum needs two Square Matrices");let t=this.rows,n=e.rows,r=this.kroneckerProduct(N.eye(n,n)),s=N.eye(t,t).kroneckerProduct(e);return r.add(s)}transpose(){let e=new N(this.columns,this.rows);for(let t=0;t<this.rows;t++)for(let n=0;n<this.columns;n++)e.set(n,t,this.get(t,n));return e}sortRows(e=v){for(let t=0;t<this.rows;t++)this.setRow(t,this.getRow(t).sort(e));return this}sortColumns(e=v){for(let t=0;t<this.columns;t++)this.setColumn(t,this.getColumn(t).sort(e));return this}subMatrix(e,t,n,r){g(this,e,t,n,r);let s=new N(t-e+1,r-n+1);for(let a=e;a<=t;a++)for(let t=n;t<=r;t++)s.set(a-e,t-n,this.get(a,t));return s}subMatrixRow(e,t,n){if(void 0===t&&(t=0),void 0===n&&(n=this.columns-1),t>n||t<0||t>=this.columns||n<0||n>=this.columns)throw new RangeError("Argument out of range");let r=new N(e.length,n-t+1);for(let s=0;s<e.length;s++)for(let a=t;a<=n;a++){if(e[s]<0||e[s]>=this.rows)throw new RangeError(`Row index out of range: ${e[s]}`);r.set(s,a-t,this.get(e[s],a))}return r}subMatrixColumn(e,t,n){if(void 0===t&&(t=0),void 0===n&&(n=this.rows-1),t>n||t<0||t>=this.rows||n<0||n>=this.rows)throw new RangeError("Argument out of range");let r=new N(n-t+1,e.length);for(let s=0;s<e.length;s++)for(let a=t;a<=n;a++){if(e[s]<0||e[s]>=this.columns)throw new RangeError(`Column index out of range: ${e[s]}`);r.set(a-t,s,this.get(a,e[s]))}return r}setSubMatrix(e,t,n){if((e=N.checkMatrix(e)).isEmpty())return this;g(this,t,t+e.rows-1,n,n+e.columns-1);for(let r=0;r<e.rows;r++)for(let s=0;s<e.columns;s++)this.set(t+r,n+s,e.get(r,s));return this}selection(e,t){f(this,e),m(this,t);let n=new N(e.length,t.length);for(let r=0;r<e.length;r++){let s=e[r];for(let e=0;e<t.length;e++){let a=t[e];n.set(r,e,this.get(s,a))}}return n}trace(){let e=Math.min(this.rows,this.columns),t=0;for(let n=0;n<e;n++)t+=this.get(n,n);return t}clone(){return this.constructor.copy(this,new N(this.rows,this.columns))}static copy(e,t){for(const[n,r,s]of e.entries())t.set(n,r,s);return t}sum(e){switch(e){case"row":return function(e){let t=y(e.rows);for(let n=0;n<e.rows;++n)for(let r=0;r<e.columns;++r)t[n]+=e.get(n,r);return t}(this);case"column":return function(e){let t=y(e.columns);for(let n=0;n<e.rows;++n)for(let r=0;r<e.columns;++r)t[r]+=e.get(n,r);return t}(this);case void 0:return function(e){let t=0;for(let n=0;n<e.rows;n++)for(let r=0;r<e.columns;r++)t+=e.get(n,r);return t}(this);default:throw new Error(`invalid option: ${e}`)}}product(e){switch(e){case"row":return function(e){let t=y(e.rows,1);for(let n=0;n<e.rows;++n)for(let r=0;r<e.columns;++r)t[n]*=e.get(n,r);return t}(this);case"column":return function(e){let t=y(e.columns,1);for(let n=0;n<e.rows;++n)for(let r=0;r<e.columns;++r)t[r]*=e.get(n,r);return t}(this);case void 0:return function(e){let t=1;for(let n=0;n<e.rows;n++)for(let r=0;r<e.columns;r++)t*=e.get(n,r);return t}(this);default:throw new Error(`invalid option: ${e}`)}}mean(e){const t=this.sum(e);switch(e){case"row":for(let e=0;e<this.rows;e++)t[e]/=this.columns;return t;case"column":for(let e=0;e<this.columns;e++)t[e]/=this.rows;return t;case void 0:return t/this.size;default:throw new Error(`invalid option: ${e}`)}}variance(e,t={}){if("object"==typeof e&&(t=e,e=void 0),"object"!=typeof t)throw new TypeError("options must be an object");const{unbiased:n=!0,mean:s=this.mean(e)}=t;if("boolean"!=typeof n)throw new TypeError("unbiased must be a boolean");switch(e){case"row":if(!r.isAnyArray(s))throw new TypeError("mean must be an array");return function(e,t,n){const r=e.rows,s=e.columns,a=[];for(let i=0;i<r;i++){let r=0,o=0,u=0;for(let t=0;t<s;t++)u=e.get(i,t)-n[i],r+=u,o+=u*u;t?a.push((o-r*r/s)/(s-1)):a.push((o-r*r/s)/s)}return a}(this,n,s);case"column":if(!r.isAnyArray(s))throw new TypeError("mean must be an array");return function(e,t,n){const r=e.rows,s=e.columns,a=[];for(let i=0;i<s;i++){let s=0,o=0,u=0;for(let t=0;t<r;t++)u=e.get(t,i)-n[i],s+=u,o+=u*u;t?a.push((o-s*s/r)/(r-1)):a.push((o-s*s/r)/r)}return a}(this,n,s);case void 0:if("number"!=typeof s)throw new TypeError("mean must be a number");return function(e,t,n){const r=e.rows,s=e.columns,a=r*s;let i=0,o=0,u=0;for(let t=0;t<r;t++)for(let r=0;r<s;r++)u=e.get(t,r)-n,i+=u,o+=u*u;return t?(o-i*i/a)/(a-1):(o-i*i/a)/a}(this,n,s);default:throw new Error(`invalid option: ${e}`)}}standardDeviation(e,t){"object"==typeof e&&(t=e,e=void 0);const n=this.variance(e,t);if(void 0===e)return Math.sqrt(n);for(let e=0;e<n.length;e++)n[e]=Math.sqrt(n[e]);return n}center(e,t={}){if("object"==typeof e&&(t=e,e=void 0),"object"!=typeof t)throw new TypeError("options must be an object");const{center:n=this.mean(e)}=t;switch(e){case"row":if(!r.isAnyArray(n))throw new TypeError("center must be an array");return function(e,t){for(let n=0;n<e.rows;n++)for(let r=0;r<e.columns;r++)e.set(n,r,e.get(n,r)-t[n])}(this,n),this;case"column":if(!r.isAnyArray(n))throw new TypeError("center must be an array");return function(e,t){for(let n=0;n<e.rows;n++)for(let r=0;r<e.columns;r++)e.set(n,r,e.get(n,r)-t[r])}(this,n),this;case void 0:if("number"!=typeof n)throw new TypeError("center must be a number");return function(e,t){for(let n=0;n<e.rows;n++)for(let r=0;r<e.columns;r++)e.set(n,r,e.get(n,r)-t)}(this,n),this;default:throw new Error(`invalid option: ${e}`)}}scale(e,t={}){if("object"==typeof e&&(t=e,e=void 0),"object"!=typeof t)throw new TypeError("options must be an object");let n=t.scale;switch(e){case"row":if(void 0===n)n=function(e){const t=[];for(let n=0;n<e.rows;n++){let r=0;for(let t=0;t<e.columns;t++)r+=e.get(n,t)**2/(e.columns-1);t.push(Math.sqrt(r))}return t}(this);else if(!r.isAnyArray(n))throw new TypeError("scale must be an array");return function(e,t){for(let n=0;n<e.rows;n++)for(let r=0;r<e.columns;r++)e.set(n,r,e.get(n,r)/t[n])}(this,n),this;case"column":if(void 0===n)n=function(e){const t=[];for(let n=0;n<e.columns;n++){let r=0;for(let t=0;t<e.rows;t++)r+=e.get(t,n)**2/(e.rows-1);t.push(Math.sqrt(r))}return t}(this);else if(!r.isAnyArray(n))throw new TypeError("scale must be an array");return function(e,t){for(let n=0;n<e.rows;n++)for(let r=0;r<e.columns;r++)e.set(n,r,e.get(n,r)/t[r])}(this,n),this;case void 0:if(void 0===n)n=function(e){const t=e.size-1;let n=0;for(let r=0;r<e.columns;r++)for(let s=0;s<e.rows;s++)n+=e.get(s,r)**2/t;return Math.sqrt(n)}(this);else if("number"!=typeof n)throw new TypeError("scale must be a number");return function(e,t){for(let n=0;n<e.rows;n++)for(let r=0;r<e.columns;r++)e.set(n,r,e.get(n,r)/t)}(this,n),this;default:throw new Error(`invalid option: ${e}`)}}toString(e){return o(this,e)}[Symbol.iterator](){return this.entries()}*entries(){for(let e=0;e<this.rows;e++)for(let t=0;t<this.columns;t++)yield[e,t,this.get(e,t)]}*values(){for(let e=0;e<this.rows;e++)for(let t=0;t<this.columns;t++)yield this.get(e,t)}}function v(e,t){return e-t}function k(e){return e.every(e=>"number"==typeof e)}w.prototype.klass="Matrix","undefined"!=typeof Symbol&&(w.prototype[Symbol.for("nodejs.util.inspect.custom")]=function(){return o(this)}),w.random=w.rand,w.randomInt=w.randInt,w.diagonal=w.diag,w.prototype.diagonal=w.prototype.diag,w.identity=w.eye,w.prototype.negate=w.prototype.neg,w.prototype.tensorProduct=w.prototype.kroneckerProduct;class N extends w{data;#e(e,t){if(this.data=[],!(Number.isInteger(t)&&t>=0))throw new TypeError("nColumns must be a positive integer");for(let n=0;n<e;n++)this.data.push(new Float64Array(t));this.rows=e,this.columns=t}constructor(e,t){if(super(),N.isMatrix(e))this.#e(e.rows,e.columns),N.copy(e,this);else if(Number.isInteger(e)&&e>=0)this.#e(e,t);else{if(!r.isAnyArray(e))throw new TypeError("First argument must be a positive number or an array");{const n=e;if("number"!=typeof(t=(e=n.length)?n[0].length:0))throw new TypeError("Data must be a 2D array with at least one element");this.data=[];for(let r=0;r<e;r++){if(n[r].length!==t)throw new RangeError("Inconsistent array dimensions");if(!k(n[r]))throw new TypeError("Input data contains non-numeric values");this.data.push(Float64Array.from(n[r]))}this.rows=e,this.columns=t}}}set(e,t,n){return this.data[e][t]=n,this}get(e,t){return this.data[e][t]}removeRow(e){return c(this,e),this.data.splice(e,1),this.rows-=1,this}addRow(e,t){return void 0===t&&(t=e,e=this.rows),c(this,e,!0),t=Float64Array.from(d(this,t)),this.data.splice(e,0,t),this.rows+=1,this}removeColumn(e){h(this,e);for(let t=0;t<this.rows;t++){const n=new Float64Array(this.columns-1);for(let r=0;r<e;r++)n[r]=this.data[t][r];for(let r=e+1;r<this.columns;r++)n[r-1]=this.data[t][r];this.data[t]=n}return this.columns-=1,this}addColumn(e,t){void 0===t&&(t=e,e=this.columns),h(this,e,!0),t=p(this,t);for(let n=0;n<this.rows;n++){const r=new Float64Array(this.columns+1);let s=0;for(;s<e;s++)r[s]=this.data[n][s];for(r[s++]=t[n];s<this.columns+1;s++)r[s]=this.data[n][s-1];this.data[n]=r}return this.columns+=1,this}}!function(e,t){e.prototype.add=function(e){return"number"==typeof e?this.addS(e):this.addM(e)},e.prototype.addS=function(e){for(let t=0;t<this.rows;t++)for(let n=0;n<this.columns;n++)this.set(t,n,this.get(t,n)+e);return this},e.prototype.addM=function(e){if(e=t.checkMatrix(e),this.rows!==e.rows||this.columns!==e.columns)throw new RangeError("Matrices dimensions must be equal");for(let t=0;t<this.rows;t++)for(let n=0;n<this.columns;n++)this.set(t,n,this.get(t,n)+e.get(t,n));return this},e.add=function(e,n){return new t(e).add(n)},e.prototype.sub=function(e){return"number"==typeof e?this.subS(e):this.subM(e)},e.prototype.subS=function(e){for(let t=0;t<this.rows;t++)for(let n=0;n<this.columns;n++)this.set(t,n,this.get(t,n)-e);return this},e.prototype.subM=function(e){if(e=t.checkMatrix(e),this.rows!==e.rows||this.columns!==e.columns)throw new RangeError("Matrices dimensions must be equal");for(let t=0;t<this.rows;t++)for(let n=0;n<this.columns;n++)this.set(t,n,this.get(t,n)-e.get(t,n));return this},e.sub=function(e,n){return new t(e).sub(n)},e.prototype.subtract=e.prototype.sub,e.prototype.subtractS=e.prototype.subS,e.prototype.subtractM=e.prototype.subM,e.subtract=e.sub,e.prototype.mul=function(e){return"number"==typeof e?this.mulS(e):this.mulM(e)},e.prototype.mulS=function(e){for(let t=0;t<this.rows;t++)for(let n=0;n<this.columns;n++)this.set(t,n,this.get(t,n)*e);return this},e.prototype.mulM=function(e){if(e=t.checkMatrix(e),this.rows!==e.rows||this.columns!==e.columns)throw new RangeError("Matrices dimensions must be equal");for(let t=0;t<this.rows;t++)for(let n=0;n<this.columns;n++)this.set(t,n,this.get(t,n)*e.get(t,n));return this},e.mul=function(e,n){return new t(e).mul(n)},e.prototype.multiply=e.prototype.mul,e.prototype.multiplyS=e.prototype.mulS,e.prototype.multiplyM=e.prototype.mulM,e.multiply=e.mul,e.prototype.div=function(e){return"number"==typeof e?this.divS(e):this.divM(e)},e.prototype.divS=function(e){for(let t=0;t<this.rows;t++)for(let n=0;n<this.columns;n++)this.set(t,n,this.get(t,n)/e);return this},e.prototype.divM=function(e){if(e=t.checkMatrix(e),this.rows!==e.rows||this.columns!==e.columns)throw new RangeError("Matrices dimensions must be equal");for(let t=0;t<this.rows;t++)for(let n=0;n<this.columns;n++)this.set(t,n,this.get(t,n)/e.get(t,n));return this},e.div=function(e,n){return new t(e).div(n)},e.prototype.divide=e.prototype.div,e.prototype.divideS=e.prototype.divS,e.prototype.divideM=e.prototype.divM,e.divide=e.div,e.prototype.mod=function(e){return"number"==typeof e?this.modS(e):this.modM(e)},e.prototype.modS=function(e){for(let t=0;t<this.rows;t++)for(let n=0;n<this.columns;n++)this.set(t,n,this.get(t,n)%e);return this},e.prototype.modM=function(e){if(e=t.checkMatrix(e),this.rows!==e.rows||this.columns!==e.columns)throw new RangeError("Matrices dimensions must be equal");for(let t=0;t<this.rows;t++)for(let n=0;n<this.columns;n++)this.set(t,n,this.get(t,n)%e.get(t,n));return this},e.mod=function(e,n){return new t(e).mod(n)},e.prototype.modulus=e.prototype.mod,e.prototype.modulusS=e.prototype.modS,e.prototype.modulusM=e.prototype.modM,e.modulus=e.mod,e.prototype.and=function(e){return"number"==typeof e?this.andS(e):this.andM(e)},e.prototype.andS=function(e){for(let t=0;t<this.rows;t++)for(let n=0;n<this.columns;n++)this.set(t,n,this.get(t,n)&e);return this},e.prototype.andM=function(e){if(e=t.checkMatrix(e),this.rows!==e.rows||this.columns!==e.columns)throw new RangeError("Matrices dimensions must be equal");for(let t=0;t<this.rows;t++)for(let n=0;n<this.columns;n++)this.set(t,n,this.get(t,n)&e.get(t,n));return this},e.and=function(e,n){return new t(e).and(n)},e.prototype.or=function(e){return"number"==typeof e?this.orS(e):this.orM(e)},e.prototype.orS=function(e){for(let t=0;t<this.rows;t++)for(let n=0;n<this.columns;n++)this.set(t,n,this.get(t,n)|e);return this},e.prototype.orM=function(e){if(e=t.checkMatrix(e),this.rows!==e.rows||this.columns!==e.columns)throw new RangeError("Matrices dimensions must be equal");for(let t=0;t<this.rows;t++)for(let n=0;n<this.columns;n++)this.set(t,n,this.get(t,n)|e.get(t,n));return this},e.or=function(e,n){return new t(e).or(n)},e.prototype.xor=function(e){return"number"==typeof e?this.xorS(e):this.xorM(e)},e.prototype.xorS=function(e){for(let t=0;t<this.rows;t++)for(let n=0;n<this.columns;n++)this.set(t,n,this.get(t,n)^e);return this},e.prototype.xorM=function(e){if(e=t.checkMatrix(e),this.rows!==e.rows||this.columns!==e.columns)throw new RangeError("Matrices dimensions must be equal");for(let t=0;t<this.rows;t++)for(let n=0;n<this.columns;n++)this.set(t,n,this.get(t,n)^e.get(t,n));return this},e.xor=function(e,n){return new t(e).xor(n)},e.prototype.leftShift=function(e){return"number"==typeof e?this.leftShiftS(e):this.leftShiftM(e)},e.prototype.leftShiftS=function(e){for(let t=0;t<this.rows;t++)for(let n=0;n<this.columns;n++)this.set(t,n,this.get(t,n)<<e);return this},e.prototype.leftShiftM=function(e){if(e=t.checkMatrix(e),this.rows!==e.rows||this.columns!==e.columns)throw new RangeError("Matrices dimensions must be equal");for(let t=0;t<this.rows;t++)for(let n=0;n<this.columns;n++)this.set(t,n,this.get(t,n)<<e.get(t,n));return this},e.leftShift=function(e,n){return new t(e).leftShift(n)},e.prototype.signPropagatingRightShift=function(e){return"number"==typeof e?this.signPropagatingRightShiftS(e):this.signPropagatingRightShiftM(e)},e.prototype.signPropagatingRightShiftS=function(e){for(let t=0;t<this.rows;t++)for(let n=0;n<this.columns;n++)this.set(t,n,this.get(t,n)>>e);return this},e.prototype.signPropagatingRightShiftM=function(e){if(e=t.checkMatrix(e),this.rows!==e.rows||this.columns!==e.columns)throw new RangeError("Matrices dimensions must be equal");for(let t=0;t<this.rows;t++)for(let n=0;n<this.columns;n++)this.set(t,n,this.get(t,n)>>e.get(t,n));return this},e.signPropagatingRightShift=function(e,n){return new t(e).signPropagatingRightShift(n)},e.prototype.rightShift=function(e){return"number"==typeof e?this.rightShiftS(e):this.rightShiftM(e)},e.prototype.rightShiftS=function(e){for(let t=0;t<this.rows;t++)for(let n=0;n<this.columns;n++)this.set(t,n,this.get(t,n)>>>e);return this},e.prototype.rightShiftM=function(e){if(e=t.checkMatrix(e),this.rows!==e.rows||this.columns!==e.columns)throw new RangeError("Matrices dimensions must be equal");for(let t=0;t<this.rows;t++)for(let n=0;n<this.columns;n++)this.set(t,n,this.get(t,n)>>>e.get(t,n));return this},e.rightShift=function(e,n){return new t(e).rightShift(n)},e.prototype.zeroFillRightShift=e.prototype.rightShift,e.prototype.zeroFillRightShiftS=e.prototype.rightShiftS,e.prototype.zeroFillRightShiftM=e.prototype.rightShiftM,e.zeroFillRightShift=e.rightShift,e.prototype.not=function(){for(let e=0;e<this.rows;e++)for(let t=0;t<this.columns;t++)this.set(e,t,~this.get(e,t));return this},e.not=function(e){return new t(e).not()},e.prototype.abs=function(){for(let e=0;e<this.rows;e++)for(let t=0;t<this.columns;t++)this.set(e,t,Math.abs(this.get(e,t)));return this},e.abs=function(e){return new t(e).abs()},e.prototype.acos=function(){for(let e=0;e<this.rows;e++)for(let t=0;t<this.columns;t++)this.set(e,t,Math.acos(this.get(e,t)));return this},e.acos=function(e){return new t(e).acos()},e.prototype.acosh=function(){for(let e=0;e<this.rows;e++)for(let t=0;t<this.columns;t++)this.set(e,t,Math.acosh(this.get(e,t)));return this},e.acosh=function(e){return new t(e).acosh()},e.prototype.asin=function(){for(let e=0;e<this.rows;e++)for(let t=0;t<this.columns;t++)this.set(e,t,Math.asin(this.get(e,t)));return this},e.asin=function(e){return new t(e).asin()},e.prototype.asinh=function(){for(let e=0;e<this.rows;e++)for(let t=0;t<this.columns;t++)this.set(e,t,Math.asinh(this.get(e,t)));return this},e.asinh=function(e){return new t(e).asinh()},e.prototype.atan=function(){for(let e=0;e<this.rows;e++)for(let t=0;t<this.columns;t++)this.set(e,t,Math.atan(this.get(e,t)));return this},e.atan=function(e){return new t(e).atan()},e.prototype.atanh=function(){for(let e=0;e<this.rows;e++)for(let t=0;t<this.columns;t++)this.set(e,t,Math.atanh(this.get(e,t)));return this},e.atanh=function(e){return new t(e).atanh()},e.prototype.cbrt=function(){for(let e=0;e<this.rows;e++)for(let t=0;t<this.columns;t++)this.set(e,t,Math.cbrt(this.get(e,t)));return this},e.cbrt=function(e){return new t(e).cbrt()},e.prototype.ceil=function(){for(let e=0;e<this.rows;e++)for(let t=0;t<this.columns;t++)this.set(e,t,Math.ceil(this.get(e,t)));return this},e.ceil=function(e){return new t(e).ceil()},e.prototype.clz32=function(){for(let e=0;e<this.rows;e++)for(let t=0;t<this.columns;t++)this.set(e,t,Math.clz32(this.get(e,t)));return this},e.clz32=function(e){return new t(e).clz32()},e.prototype.cos=function(){for(let e=0;e<this.rows;e++)for(let t=0;t<this.columns;t++)this.set(e,t,Math.cos(this.get(e,t)));return this},e.cos=function(e){return new t(e).cos()},e.prototype.cosh=function(){for(let e=0;e<this.rows;e++)for(let t=0;t<this.columns;t++)this.set(e,t,Math.cosh(this.get(e,t)));return this},e.cosh=function(e){return new t(e).cosh()},e.prototype.exp=function(){for(let e=0;e<this.rows;e++)for(let t=0;t<this.columns;t++)this.set(e,t,Math.exp(this.get(e,t)));return this},e.exp=function(e){return new t(e).exp()},e.prototype.expm1=function(){for(let e=0;e<this.rows;e++)for(let t=0;t<this.columns;t++)this.set(e,t,Math.expm1(this.get(e,t)));return this},e.expm1=function(e){return new t(e).expm1()},e.prototype.floor=function(){for(let e=0;e<this.rows;e++)for(let t=0;t<this.columns;t++)this.set(e,t,Math.floor(this.get(e,t)));return this},e.floor=function(e){return new t(e).floor()},e.prototype.fround=function(){for(let e=0;e<this.rows;e++)for(let t=0;t<this.columns;t++)this.set(e,t,Math.fround(this.get(e,t)));return this},e.fround=function(e){return new t(e).fround()},e.prototype.log=function(){for(let e=0;e<this.rows;e++)for(let t=0;t<this.columns;t++)this.set(e,t,Math.log(this.get(e,t)));return this},e.log=function(e){return new t(e).log()},e.prototype.log1p=function(){for(let e=0;e<this.rows;e++)for(let t=0;t<this.columns;t++)this.set(e,t,Math.log1p(this.get(e,t)));return this},e.log1p=function(e){return new t(e).log1p()},e.prototype.log10=function(){for(let e=0;e<this.rows;e++)for(let t=0;t<this.columns;t++)this.set(e,t,Math.log10(this.get(e,t)));return this},e.log10=function(e){return new t(e).log10()},e.prototype.log2=function(){for(let e=0;e<this.rows;e++)for(let t=0;t<this.columns;t++)this.set(e,t,Math.log2(this.get(e,t)));return this},e.log2=function(e){return new t(e).log2()},e.prototype.round=function(){for(let e=0;e<this.rows;e++)for(let t=0;t<this.columns;t++)this.set(e,t,Math.round(this.get(e,t)));return this},e.round=function(e){return new t(e).round()},e.prototype.sign=function(){for(let e=0;e<this.rows;e++)for(let t=0;t<this.columns;t++)this.set(e,t,Math.sign(this.get(e,t)));return this},e.sign=function(e){return new t(e).sign()},e.prototype.sin=function(){for(let e=0;e<this.rows;e++)for(let t=0;t<this.columns;t++)this.set(e,t,Math.sin(this.get(e,t)));return this},e.sin=function(e){return new t(e).sin()},e.prototype.sinh=function(){for(let e=0;e<this.rows;e++)for(let t=0;t<this.columns;t++)this.set(e,t,Math.sinh(this.get(e,t)));return this},e.sinh=function(e){return new t(e).sinh()},e.prototype.sqrt=function(){for(let e=0;e<this.rows;e++)for(let t=0;t<this.columns;t++)this.set(e,t,Math.sqrt(this.get(e,t)));return this},e.sqrt=function(e){return new t(e).sqrt()},e.prototype.tan=function(){for(let e=0;e<this.rows;e++)for(let t=0;t<this.columns;t++)this.set(e,t,Math.tan(this.get(e,t)));return this},e.tan=function(e){return new t(e).tan()},e.prototype.tanh=function(){for(let e=0;e<this.rows;e++)for(let t=0;t<this.columns;t++)this.set(e,t,Math.tanh(this.get(e,t)));return this},e.tanh=function(e){return new t(e).tanh()},e.prototype.trunc=function(){for(let e=0;e<this.rows;e++)for(let t=0;t<this.columns;t++)this.set(e,t,Math.trunc(this.get(e,t)));return this},e.trunc=function(e){return new t(e).trunc()},e.pow=function(e,n){return new t(e).pow(n)},e.prototype.pow=function(e){return"number"==typeof e?this.powS(e):this.powM(e)},e.prototype.powS=function(e){for(let t=0;t<this.rows;t++)for(let n=0;n<this.columns;n++)this.set(t,n,this.get(t,n)**e);return this},e.prototype.powM=function(e){if(e=t.checkMatrix(e),this.rows!==e.rows||this.columns!==e.columns)throw new RangeError("Matrices dimensions must be equal");for(let t=0;t<this.rows;t++)for(let n=0;n<this.columns;n++)this.set(t,n,this.get(t,n)**e.get(t,n));return this}}(w,N);class I extends w{#t;get size(){return this.#t.size}get rows(){return this.#t.rows}get columns(){return this.#t.columns}get diagonalSize(){return this.rows}static isSymmetricMatrix(e){return N.isMatrix(e)&&"SymmetricMatrix"===e.klassType}static zeros(e){return new this(e)}static ones(e){return new this(e).fill(1)}constructor(e){if(super(),N.isMatrix(e)){if(!e.isSymmetric())throw new TypeError("not symmetric data");this.#t=N.copy(e,new N(e.rows,e.rows))}else if(Number.isInteger(e)&&e>=0)this.#t=new N(e,e);else if(this.#t=new N(e),!this.isSymmetric())throw new TypeError("not symmetric data")}clone(){const e=new I(this.diagonalSize);for(const[t,n,r]of this.upperRightEntries())e.set(t,n,r);return e}toMatrix(){return new N(this)}get(e,t){return this.#t.get(e,t)}set(e,t,n){return this.#t.set(e,t,n),this.#t.set(t,e,n),this}removeCross(e){return this.#t.removeRow(e),this.#t.removeColumn(e),this}addCross(e,t){void 0===t&&(t=e,e=this.diagonalSize);const n=t.slice();return n.splice(e,1),this.#t.addRow(e,n),this.#t.addColumn(e,t),this}applyMask(e){if(e.length!==this.diagonalSize)throw new RangeError("Mask size do not match with matrix size");const t=[];for(const[n,r]of e.entries())r||t.push(n);t.reverse();for(const e of t)this.removeCross(e);return this}toCompact(){const{diagonalSize:e}=this,t=new Array(e*(e+1)/2);for(let n=0,r=0,s=0;s<t.length;s++)t[s]=this.get(r,n),++n>=e&&(n=++r);return t}static fromCompact(e){const t=e.length,n=(Math.sqrt(8*t+1)-1)/2;if(!Number.isInteger(n))throw new TypeError(`This array is not a compact representation of a Symmetric Matrix, ${JSON.stringify(e)}`);const r=new I(n);for(let s=0,a=0,i=0;i<t;i++)r.set(s,a,e[i]),++s>=n&&(s=++a);return r}*upperRightEntries(){for(let e=0,t=0;e<this.diagonalSize;void 0){const n=this.get(e,t);yield[e,t,n],++t>=this.diagonalSize&&(t=++e)}}*upperRightValues(){for(let e=0,t=0;e<this.diagonalSize;void 0){const n=this.get(e,t);yield n,++t>=this.diagonalSize&&(t=++e)}}}I.prototype.klassType="SymmetricMatrix";class S extends I{static isDistanceMatrix(e){return I.isSymmetricMatrix(e)&&"DistanceMatrix"===e.klassSubType}constructor(e){if(super(e),!this.isDistance())throw new TypeError("Provided arguments do no produce a distance matrix")}set(e,t,n){return e===t&&(n=0),super.set(e,t,n)}addCross(e,t){return void 0===t&&(t=e,e=this.diagonalSize),(t=t.slice())[e]=0,super.addCross(e,t)}toSymmetricMatrix(){return new I(this)}clone(){const e=new S(this.diagonalSize);for(const[t,n,r]of this.upperRightEntries())t!==n&&e.set(t,n,r);return e}toCompact(){const{diagonalSize:e}=this,t=new Array((e-1)*e/2);for(let n=1,r=0,s=0;s<t.length;s++)t[s]=this.get(r,n),++n>=e&&(n=1+ ++r);return t}static fromCompact(e){const t=e.length;if(0===t)return new this(0);const n=(Math.sqrt(8*t+1)+1)/2;if(!Number.isInteger(n))throw new TypeError(`This array is not a compact representation of a DistanceMatrix, ${JSON.stringify(e)}`);const r=new this(n);for(let s=1,a=0,i=0;i<t;i++)r.set(s,a,e[i]),++s>=n&&(s=1+ ++a);return r}}S.prototype.klassSubType="DistanceMatrix";class T extends w{constructor(e,t,n){super(),this.matrix=e,this.rows=t,this.columns=n}}class E extends T{constructor(e,t,n){f(e,t),m(e,n),super(e,t.length,n.length),this.rowIndices=t,this.columnIndices=n}set(e,t,n){return this.matrix.set(this.rowIndices[e],this.columnIndices[t],n),this}get(e,t){return this.matrix.get(this.rowIndices[e],this.columnIndices[t])}}class C extends w{constructor(e,t={}){const{rows:n=1}=t;if(e.length%n!==0)throw new Error("the data length is not divisible by the number of rows");super(),this.rows=n,this.columns=e.length/n,this.data=e}set(e,t,n){let r=this._calculateIndex(e,t);return this.data[r]=n,this}get(e,t){let n=this._calculateIndex(e,t);return this.data[n]}_calculateIndex(e,t){return e*this.columns+t}}class $ extends w{constructor(e){super(),this.data=e,this.rows=e.length,this.columns=e[0].length}set(e,t,n){return this.data[e][t]=n,this}get(e,t){return this.data[e][t]}}class A{constructor(e){let t,n,r,s,a,i,o,u,l,c=(e=$.checkMatrix(e)).clone(),h=c.rows,d=c.columns,p=new Float64Array(h),f=1;for(t=0;t<h;t++)p[t]=t;for(u=new Float64Array(h),n=0;n<d;n++){for(t=0;t<h;t++)u[t]=c.get(t,n);for(t=0;t<h;t++){for(l=Math.min(t,n),a=0,r=0;r<l;r++)a+=c.get(t,r)*u[r];u[t]-=a,c.set(t,n,u[t])}for(s=n,t=n+1;t<h;t++)Math.abs(u[t])>Math.abs(u[s])&&(s=t);if(s!==n){for(r=0;r<d;r++)i=c.get(s,r),c.set(s,r,c.get(n,r)),c.set(n,r,i);o=p[s],p[s]=p[n],p[n]=o,f=-f}if(n<h&&0!==c.get(n,n))for(t=n+1;t<h;t++)c.set(t,n,c.get(t,n)/c.get(n,n))}this.LU=c,this.pivotVector=p,this.pivotSign=f}isSingular(){let e=this.LU,t=e.columns;for(let n=0;n<t;n++)if(0===e.get(n,n))return!0;return!1}solve(e){e=N.checkMatrix(e);let t=this.LU;if(t.rows!==e.rows)throw new Error("Invalid matrix dimensions");if(this.isSingular())throw new Error("LU matrix is singular");let n,r,s,a=e.columns,i=e.subMatrixRow(this.pivotVector,0,a-1),o=t.columns;for(s=0;s<o;s++)for(n=s+1;n<o;n++)for(r=0;r<a;r++)i.set(n,r,i.get(n,r)-i.get(s,r)*t.get(n,s));for(s=o-1;s>=0;s--){for(r=0;r<a;r++)i.set(s,r,i.get(s,r)/t.get(s,s));for(n=0;n<s;n++)for(r=0;r<a;r++)i.set(n,r,i.get(n,r)-i.get(s,r)*t.get(n,s))}return i}get determinant(){let e=this.LU;if(!e.isSquare())throw new Error("Matrix must be square");let t=this.pivotSign,n=e.columns;for(let r=0;r<n;r++)t*=e.get(r,r);return t}get lowerTriangularMatrix(){let e=this.LU,t=e.rows,n=e.columns,r=new N(t,n);for(let s=0;s<t;s++)for(let t=0;t<n;t++)s>t?r.set(s,t,e.get(s,t)):s===t?r.set(s,t,1):r.set(s,t,0);return r}get upperTriangularMatrix(){let e=this.LU,t=e.rows,n=e.columns,r=new N(t,n);for(let s=0;s<t;s++)for(let t=0;t<n;t++)s<=t?r.set(s,t,e.get(s,t)):r.set(s,t,0);return r}get pivotPermutationVector(){return Array.from(this.pivotVector)}}function R(e,t){let n=0;return Math.abs(e)>Math.abs(t)?(n=t/e,Math.abs(e)*Math.sqrt(1+n*n)):0!==t?(n=e/t,Math.abs(t)*Math.sqrt(1+n*n)):0}class _{constructor(e){let t,n,r,s,a=(e=$.checkMatrix(e)).clone(),i=e.rows,o=e.columns,u=new Float64Array(o);for(r=0;r<o;r++){let e=0;for(t=r;t<i;t++)e=R(e,a.get(t,r));if(0!==e){for(a.get(r,r)<0&&(e=-e),t=r;t<i;t++)a.set(t,r,a.get(t,r)/e);for(a.set(r,r,a.get(r,r)+1),n=r+1;n<o;n++){for(s=0,t=r;t<i;t++)s+=a.get(t,r)*a.get(t,n);for(s=-s/a.get(r,r),t=r;t<i;t++)a.set(t,n,a.get(t,n)+s*a.get(t,r))}}u[r]=-e}this.QR=a,this.Rdiag=u}solve(e){e=N.checkMatrix(e);let t=this.QR,n=t.rows;if(e.rows!==n)throw new Error("Matrix row dimensions must agree");if(!this.isFullRank())throw new Error("Matrix is rank deficient");let r,s,a,i,o=e.columns,u=e.clone(),l=t.columns;for(a=0;a<l;a++)for(s=0;s<o;s++){for(i=0,r=a;r<n;r++)i+=t.get(r,a)*u.get(r,s);for(i=-i/t.get(a,a),r=a;r<n;r++)u.set(r,s,u.get(r,s)+i*t.get(r,a))}for(a=l-1;a>=0;a--){for(s=0;s<o;s++)u.set(a,s,u.get(a,s)/this.Rdiag[a]);for(r=0;r<a;r++)for(s=0;s<o;s++)u.set(r,s,u.get(r,s)-u.get(a,s)*t.get(r,a))}return u.subMatrix(0,l-1,0,o-1)}isFullRank(){let e=this.QR.columns;for(let t=0;t<e;t++)if(0===this.Rdiag[t])return!1;return!0}get upperTriangularMatrix(){let e,t,n=this.QR,r=n.columns,s=new N(r,r);for(e=0;e<r;e++)for(t=0;t<r;t++)e<t?s.set(e,t,n.get(e,t)):e===t?s.set(e,t,this.Rdiag[e]):s.set(e,t,0);return s}get orthogonalMatrix(){let e,t,n,r,s=this.QR,a=s.rows,i=s.columns,o=new N(a,i);for(n=i-1;n>=0;n--){for(e=0;e<a;e++)o.set(e,n,0);for(o.set(n,n,1),t=n;t<i;t++)if(0!==s.get(n,n)){for(r=0,e=n;e<a;e++)r+=s.get(e,n)*o.get(e,t);for(r=-r/s.get(n,n),e=n;e<a;e++)o.set(e,t,o.get(e,t)+r*s.get(e,n))}}return o}}class D{constructor(e,t={}){if((e=$.checkMatrix(e)).isEmpty())throw new Error("Matrix must be non-empty");let n=e.rows,r=e.columns;const{computeLeftSingularVectors:s=!0,computeRightSingularVectors:a=!0,autoTranspose:i=!1}=t;let o,u=Boolean(s),l=Boolean(a),c=!1;if(n<r)if(i){o=e.transpose(),n=o.rows,r=o.columns,c=!0;let t=u;u=l,l=t}else o=e.clone(),console.warn("Computing SVD on a matrix with more columns than rows. Consider enabling autoTranspose");else o=e.clone();let h=Math.min(n,r),d=Math.min(n+1,r),p=new Float64Array(d),f=new N(n,h),m=new N(r,r),g=new Float64Array(r),y=new Float64Array(n),b=new Float64Array(d);for(let e=0;e<d;e++)b[e]=e;let x=Math.min(n-1,r),w=Math.max(0,Math.min(r-2,n)),v=Math.max(x,w);for(let e=0;e<v;e++){if(e<x){p[e]=0;for(let t=e;t<n;t++)p[e]=R(p[e],o.get(t,e));if(0!==p[e]){o.get(e,e)<0&&(p[e]=-p[e]);for(let t=e;t<n;t++)o.set(t,e,o.get(t,e)/p[e]);o.set(e,e,o.get(e,e)+1)}p[e]=-p[e]}for(let t=e+1;t<r;t++){if(e<x&&0!==p[e]){let r=0;for(let s=e;s<n;s++)r+=o.get(s,e)*o.get(s,t);r=-r/o.get(e,e);for(let s=e;s<n;s++)o.set(s,t,o.get(s,t)+r*o.get(s,e))}g[t]=o.get(e,t)}if(u&&e<x)for(let t=e;t<n;t++)f.set(t,e,o.get(t,e));if(e<w){g[e]=0;for(let t=e+1;t<r;t++)g[e]=R(g[e],g[t]);if(0!==g[e]){g[e+1]<0&&(g[e]=0-g[e]);for(let t=e+1;t<r;t++)g[t]/=g[e];g[e+1]+=1}if(g[e]=-g[e],e+1<n&&0!==g[e]){for(let t=e+1;t<n;t++)y[t]=0;for(let t=e+1;t<n;t++)for(let n=e+1;n<r;n++)y[t]+=g[n]*o.get(t,n);for(let t=e+1;t<r;t++){let r=-g[t]/g[e+1];for(let s=e+1;s<n;s++)o.set(s,t,o.get(s,t)+r*y[s])}}if(l)for(let t=e+1;t<r;t++)m.set(t,e,g[t])}}let k=Math.min(r,n+1);if(x<r&&(p[x]=o.get(x,x)),n<k&&(p[k-1]=0),w+1<k&&(g[w]=o.get(w,k-1)),g[k-1]=0,u){for(let e=x;e<h;e++){for(let t=0;t<n;t++)f.set(t,e,0);f.set(e,e,1)}for(let e=x-1;e>=0;e--)if(0!==p[e]){for(let t=e+1;t<h;t++){let r=0;for(let s=e;s<n;s++)r+=f.get(s,e)*f.get(s,t);r=-r/f.get(e,e);for(let s=e;s<n;s++)f.set(s,t,f.get(s,t)+r*f.get(s,e))}for(let t=e;t<n;t++)f.set(t,e,-f.get(t,e));f.set(e,e,1+f.get(e,e));for(let t=0;t<e-1;t++)f.set(t,e,0)}else{for(let t=0;t<n;t++)f.set(t,e,0);f.set(e,e,1)}}if(l)for(let e=r-1;e>=0;e--){if(e<w&&0!==g[e])for(let t=e+1;t<r;t++){let n=0;for(let s=e+1;s<r;s++)n+=m.get(s,e)*m.get(s,t);n=-n/m.get(e+1,e);for(let s=e+1;s<r;s++)m.set(s,t,m.get(s,t)+n*m.get(s,e))}for(let t=0;t<r;t++)m.set(t,e,0);m.set(e,e,1)}let I=k-1,S=Number.EPSILON;for(;k>0;){let e,t;for(e=k-2;e>=-1&&-1!==e;e--){const t=Number.MIN_VALUE+S*Math.abs(p[e]+Math.abs(p[e+1]));if(Math.abs(g[e])<=t||Number.isNaN(g[e])){g[e]=0;break}}if(e===k-2)t=4;else{let n;for(n=k-1;n>=e&&n!==e;n--){let t=(n!==k?Math.abs(g[n]):0)+(n!==e+1?Math.abs(g[n-1]):0);if(Math.abs(p[n])<=S*t){p[n]=0;break}}n===e?t=3:n===k-1?t=1:(t=2,e=n)}switch(e++,t){case 1:{let t=g[k-2];g[k-2]=0;for(let n=k-2;n>=e;n--){let s=R(p[n],t),a=p[n]/s,i=t/s;if(p[n]=s,n!==e&&(t=-i*g[n-1],g[n-1]=a*g[n-1]),l)for(let e=0;e<r;e++)s=a*m.get(e,n)+i*m.get(e,k-1),m.set(e,k-1,-i*m.get(e,n)+a*m.get(e,k-1)),m.set(e,n,s)}break}case 2:{let t=g[e-1];g[e-1]=0;for(let r=e;r<k;r++){let s=R(p[r],t),a=p[r]/s,i=t/s;if(p[r]=s,t=-i*g[r],g[r]=a*g[r],u)for(let t=0;t<n;t++)s=a*f.get(t,r)+i*f.get(t,e-1),f.set(t,e-1,-i*f.get(t,r)+a*f.get(t,e-1)),f.set(t,r,s)}break}case 3:{const t=Math.max(Math.abs(p[k-1]),Math.abs(p[k-2]),Math.abs(g[k-2]),Math.abs(p[e]),Math.abs(g[e])),s=p[k-1]/t,a=p[k-2]/t,i=g[k-2]/t,o=p[e]/t,c=g[e]/t,h=((a+s)*(a-s)+i*i)/2,d=s*i*(s*i);let y=0;0===h&&0===d||(y=h<0?0-Math.sqrt(h*h+d):Math.sqrt(h*h+d),y=d/(h+y));let b=(o+s)*(o-s)+y,x=o*c;for(let t=e;t<k-1;t++){let s=R(b,x);0===s&&(s=Number.MIN_VALUE);let a=b/s,i=x/s;if(t!==e&&(g[t-1]=s),b=a*p[t]+i*g[t],g[t]=a*g[t]-i*p[t],x=i*p[t+1],p[t+1]=a*p[t+1],l)for(let e=0;e<r;e++)s=a*m.get(e,t)+i*m.get(e,t+1),m.set(e,t+1,-i*m.get(e,t)+a*m.get(e,t+1)),m.set(e,t,s);if(s=R(b,x),0===s&&(s=Number.MIN_VALUE),a=b/s,i=x/s,p[t]=s,b=a*g[t]+i*p[t+1],p[t+1]=-i*g[t]+a*p[t+1],x=i*g[t+1],g[t+1]=a*g[t+1],u&&t<n-1)for(let e=0;e<n;e++)s=a*f.get(e,t)+i*f.get(e,t+1),f.set(e,t+1,-i*f.get(e,t)+a*f.get(e,t+1)),f.set(e,t,s)}g[k-2]=b;break}case 4:if(p[e]<=0&&(p[e]=p[e]<0?-p[e]:0,l))for(let t=0;t<=I;t++)m.set(t,e,-m.get(t,e));for(;e<I&&!(p[e]>=p[e+1]);){let t=p[e];if(p[e]=p[e+1],p[e+1]=t,l&&e<r-1)for(let n=0;n<r;n++)t=m.get(n,e+1),m.set(n,e+1,m.get(n,e)),m.set(n,e,t);if(u&&e<n-1)for(let r=0;r<n;r++)t=f.get(r,e+1),f.set(r,e+1,f.get(r,e)),f.set(r,e,t);e++}k--}}if(c){let e=m;m=f,f=e}this.m=n,this.n=r,this.s=p,this.U=f,this.V=m}solve(e){let t=e,n=this.threshold,r=this.s.length,s=N.zeros(r,r);for(let e=0;e<r;e++)Math.abs(this.s[e])<=n?s.set(e,e,0):s.set(e,e,1/this.s[e]);let a=this.U,i=this.rightSingularVectors,o=i.mmul(s),u=i.rows,l=a.rows,c=N.zeros(u,l);for(let e=0;e<u;e++)for(let t=0;t<l;t++){let n=0;for(let s=0;s<r;s++)n+=o.get(e,s)*a.get(t,s);c.set(e,t,n)}return c.mmul(t)}solveForDiagonal(e){return this.solve(N.diag(e))}inverse(){let e=this.V,t=this.threshold,n=e.rows,r=e.columns,s=new N(n,this.s.length);for(let a=0;a<n;a++)for(let n=0;n<r;n++)Math.abs(this.s[n])>t&&s.set(a,n,e.get(a,n)/this.s[n]);let a=this.U,i=a.rows,o=a.columns,u=new N(n,i);for(let e=0;e<n;e++)for(let t=0;t<i;t++){let n=0;for(let r=0;r<o;r++)n+=s.get(e,r)*a.get(t,r);u.set(e,t,n)}return u}get condition(){return this.s[0]/this.s[Math.min(this.m,this.n)-1]}get norm2(){return this.s[0]}get rank(){let e=Math.max(this.m,this.n)*this.s[0]*Number.EPSILON,t=0,n=this.s;for(let r=0,s=n.length;r<s;r++)n[r]>e&&t++;return t}get diagonal(){return Array.from(this.s)}get threshold(){return Number.EPSILON/2*Math.max(this.m,this.n)*this.s[0]}get leftSingularVectors(){return this.U}get rightSingularVectors(){return this.V}get diagonalMatrix(){return N.diag(this.s)}}function F(e,t,n=!1){return e=$.checkMatrix(e),t=$.checkMatrix(t),n?new D(e).solve(t):e.isSquare()?new A(e).solve(t):new _(e).solve(t)}function M(e,t){let n=[];for(let r=0;r<e;r++)r!==t&&n.push(r);return n}function O(e,t,n,r=1e-9,s=1e-9){if(e>s)return new Array(t.rows+1).fill(0);{let e=t.addRow(n,[0]);for(let t=0;t<e.rows;t++)Math.abs(e.get(t,0))<r&&e.set(t,0,0);return e.to1DArray()}}class L{constructor(e,t={}){const{assumeSymmetric:n=!1}=t;if(!(e=$.checkMatrix(e)).isSquare())throw new Error("Matrix is not a square matrix");if(e.isEmpty())throw new Error("Matrix must be non-empty");let r,s,a=e.columns,i=new N(a,a),o=new Float64Array(a),u=new Float64Array(a),l=e,c=!1;if(c=!!n||e.isSymmetric(),c){for(r=0;r<a;r++)for(s=0;s<a;s++)i.set(r,s,l.get(r,s));!function(e,t,n,r){let s,a,i,o,u,l,c,h;for(u=0;u<e;u++)n[u]=r.get(e-1,u);for(o=e-1;o>0;o--){for(h=0,i=0,l=0;l<o;l++)h+=Math.abs(n[l]);if(0===h)for(t[o]=n[o-1],u=0;u<o;u++)n[u]=r.get(o-1,u),r.set(o,u,0),r.set(u,o,0);else{for(l=0;l<o;l++)n[l]/=h,i+=n[l]*n[l];for(s=n[o-1],a=Math.sqrt(i),s>0&&(a=-a),t[o]=h*a,i-=s*a,n[o-1]=s-a,u=0;u<o;u++)t[u]=0;for(u=0;u<o;u++){for(s=n[u],r.set(u,o,s),a=t[u]+r.get(u,u)*s,l=u+1;l<=o-1;l++)a+=r.get(l,u)*n[l],t[l]+=r.get(l,u)*s;t[u]=a}for(s=0,u=0;u<o;u++)t[u]/=i,s+=t[u]*n[u];for(c=s/(i+i),u=0;u<o;u++)t[u]-=c*n[u];for(u=0;u<o;u++){for(s=n[u],a=t[u],l=u;l<=o-1;l++)r.set(l,u,r.get(l,u)-(s*t[l]+a*n[l]));n[u]=r.get(o-1,u),r.set(o,u,0)}}n[o]=i}for(o=0;o<e-1;o++){if(r.set(e-1,o,r.get(o,o)),r.set(o,o,1),i=n[o+1],0!==i){for(l=0;l<=o;l++)n[l]=r.get(l,o+1)/i;for(u=0;u<=o;u++){for(a=0,l=0;l<=o;l++)a+=r.get(l,o+1)*r.get(l,u);for(l=0;l<=o;l++)r.set(l,u,r.get(l,u)-a*n[l])}}for(l=0;l<=o;l++)r.set(l,o+1,0)}for(u=0;u<e;u++)n[u]=r.get(e-1,u),r.set(e-1,u,0);r.set(e-1,e-1,1),t[0]=0}(a,u,o,i),function(e,t,n,r){let s,a,i,o,u,l,c,h,d,p,f,m,g,y,b,x;for(i=1;i<e;i++)t[i-1]=t[i];t[e-1]=0;let w=0,v=0,k=Number.EPSILON;for(l=0;l<e;l++){for(v=Math.max(v,Math.abs(n[l])+Math.abs(t[l])),c=l;c<e&&!(Math.abs(t[c])<=k*v);)c++;if(c>l)do{for(s=n[l],h=(n[l+1]-s)/(2*t[l]),d=R(h,1),h<0&&(d=-d),n[l]=t[l]/(h+d),n[l+1]=t[l]*(h+d),p=n[l+1],a=s-n[l],i=l+2;i<e;i++)n[i]-=a;for(w+=a,h=n[c],f=1,m=f,g=f,y=t[l+1],b=0,x=0,i=c-1;i>=l;i--)for(g=m,m=f,x=b,s=f*t[i],a=f*h,d=R(h,t[i]),t[i+1]=b*d,b=t[i]/d,f=h/d,h=f*n[i]-b*s,n[i+1]=a+b*(f*s+b*n[i]),u=0;u<e;u++)a=r.get(u,i+1),r.set(u,i+1,b*r.get(u,i)+f*a),r.set(u,i,f*r.get(u,i)-b*a);h=-b*x*g*y*t[l]/p,t[l]=b*h,n[l]=f*h}while(Math.abs(t[l])>k*v);n[l]=n[l]+w,t[l]=0}for(i=0;i<e-1;i++){for(u=i,h=n[i],o=i+1;o<e;o++)n[o]<h&&(u=o,h=n[o]);if(u!==i)for(n[u]=n[i],n[i]=h,o=0;o<e;o++)h=r.get(o,i),r.set(o,i,r.get(o,u)),r.set(o,u,h)}}(a,u,o,i)}else{let e=new N(a,a),t=new Float64Array(a);for(s=0;s<a;s++)for(r=0;r<a;r++)e.set(r,s,l.get(r,s));!function(e,t,n,r){let s,a,i,o,u,l,c,h=e-1;for(l=1;l<=h-1;l++){for(c=0,o=l;o<=h;o++)c+=Math.abs(t.get(o,l-1));if(0!==c){for(i=0,o=h;o>=l;o--)n[o]=t.get(o,l-1)/c,i+=n[o]*n[o];for(a=Math.sqrt(i),n[l]>0&&(a=-a),i-=n[l]*a,n[l]=n[l]-a,u=l;u<e;u++){for(s=0,o=h;o>=l;o--)s+=n[o]*t.get(o,u);for(s/=i,o=l;o<=h;o++)t.set(o,u,t.get(o,u)-s*n[o])}for(o=0;o<=h;o++){for(s=0,u=h;u>=l;u--)s+=n[u]*t.get(o,u);for(s/=i,u=l;u<=h;u++)t.set(o,u,t.get(o,u)-s*n[u])}n[l]=c*n[l],t.set(l,l-1,c*a)}}for(o=0;o<e;o++)for(u=0;u<e;u++)r.set(o,u,o===u?1:0);for(l=h-1;l>=1;l--)if(0!==t.get(l,l-1)){for(o=l+1;o<=h;o++)n[o]=t.get(o,l-1);for(u=l;u<=h;u++){for(a=0,o=l;o<=h;o++)a+=n[o]*r.get(o,u);for(a=a/n[l]/t.get(l,l-1),o=l;o<=h;o++)r.set(o,u,r.get(o,u)+a*n[o])}}}(a,e,t,i),function(e,t,n,r,s){let a,i,o,u,l,c,h,d,p,f,m,g,y,b,x,w=e-1,v=e-1,k=Number.EPSILON,N=0,I=0,S=0,T=0,E=0,C=0,$=0,A=0;for(a=0;a<e;a++)for((a<0||a>v)&&(n[a]=s.get(a,a),t[a]=0),i=Math.max(a-1,0);i<e;i++)I+=Math.abs(s.get(a,i));for(;w>=0;){for(u=w;u>0&&(C=Math.abs(s.get(u-1,u-1))+Math.abs(s.get(u,u)),0===C&&(C=I),!(Math.abs(s.get(u,u-1))<k*C));)u--;if(u===w)s.set(w,w,s.get(w,w)+N),n[w]=s.get(w,w),t[w]=0,w--,A=0;else if(u===w-1){if(h=s.get(w,w-1)*s.get(w-1,w),S=(s.get(w-1,w-1)-s.get(w,w))/2,T=S*S+h,$=Math.sqrt(Math.abs(T)),s.set(w,w,s.get(w,w)+N),s.set(w-1,w-1,s.get(w-1,w-1)+N),d=s.get(w,w),T>=0){for($=S>=0?S+$:S-$,n[w-1]=d+$,n[w]=n[w-1],0!==$&&(n[w]=d-h/$),t[w-1]=0,t[w]=0,d=s.get(w,w-1),C=Math.abs(d)+Math.abs($),S=d/C,T=$/C,E=Math.sqrt(S*S+T*T),S/=E,T/=E,i=w-1;i<e;i++)$=s.get(w-1,i),s.set(w-1,i,T*$+S*s.get(w,i)),s.set(w,i,T*s.get(w,i)-S*$);for(a=0;a<=w;a++)$=s.get(a,w-1),s.set(a,w-1,T*$+S*s.get(a,w)),s.set(a,w,T*s.get(a,w)-S*$);for(a=0;a<=v;a++)$=r.get(a,w-1),r.set(a,w-1,T*$+S*r.get(a,w)),r.set(a,w,T*r.get(a,w)-S*$)}else n[w-1]=d+S,n[w]=d+S,t[w-1]=$,t[w]=-$;w-=2,A=0}else{if(d=s.get(w,w),p=0,h=0,u<w&&(p=s.get(w-1,w-1),h=s.get(w,w-1)*s.get(w-1,w)),10===A){for(N+=d,a=0;a<=w;a++)s.set(a,a,s.get(a,a)-d);C=Math.abs(s.get(w,w-1))+Math.abs(s.get(w-1,w-2)),d=p=.75*C,h=-.4375*C*C}if(30===A&&(C=(p-d)/2,C=C*C+h,C>0)){for(C=Math.sqrt(C),p<d&&(C=-C),C=d-h/((p-d)/2+C),a=0;a<=w;a++)s.set(a,a,s.get(a,a)-C);N+=C,d=p=h=.964}for(A+=1,l=w-2;l>=u&&($=s.get(l,l),E=d-$,C=p-$,S=(E*C-h)/s.get(l+1,l)+s.get(l,l+1),T=s.get(l+1,l+1)-$-E-C,E=s.get(l+2,l+1),C=Math.abs(S)+Math.abs(T)+Math.abs(E),S/=C,T/=C,E/=C,l!==u)&&!(Math.abs(s.get(l,l-1))*(Math.abs(T)+Math.abs(E))<k*(Math.abs(S)*(Math.abs(s.get(l-1,l-1))+Math.abs($)+Math.abs(s.get(l+1,l+1)))));)l--;for(a=l+2;a<=w;a++)s.set(a,a-2,0),a>l+2&&s.set(a,a-3,0);for(o=l;o<=w-1&&(b=o!==w-1,o!==l&&(S=s.get(o,o-1),T=s.get(o+1,o-1),E=b?s.get(o+2,o-1):0,d=Math.abs(S)+Math.abs(T)+Math.abs(E),0!==d&&(S/=d,T/=d,E/=d)),0!==d);o++)if(C=Math.sqrt(S*S+T*T+E*E),S<0&&(C=-C),0!==C){for(o!==l?s.set(o,o-1,-C*d):u!==l&&s.set(o,o-1,-s.get(o,o-1)),S+=C,d=S/C,p=T/C,$=E/C,T/=S,E/=S,i=o;i<e;i++)S=s.get(o,i)+T*s.get(o+1,i),b&&(S+=E*s.get(o+2,i),s.set(o+2,i,s.get(o+2,i)-S*$)),s.set(o,i,s.get(o,i)-S*d),s.set(o+1,i,s.get(o+1,i)-S*p);for(a=0;a<=Math.min(w,o+3);a++)S=d*s.get(a,o)+p*s.get(a,o+1),b&&(S+=$*s.get(a,o+2),s.set(a,o+2,s.get(a,o+2)-S*E)),s.set(a,o,s.get(a,o)-S),s.set(a,o+1,s.get(a,o+1)-S*T);for(a=0;a<=v;a++)S=d*r.get(a,o)+p*r.get(a,o+1),b&&(S+=$*r.get(a,o+2),r.set(a,o+2,r.get(a,o+2)-S*E)),r.set(a,o,r.get(a,o)-S),r.set(a,o+1,r.get(a,o+1)-S*T)}}}if(0!==I){for(w=e-1;w>=0;w--)if(S=n[w],T=t[w],0===T)for(u=w,s.set(w,w,1),a=w-1;a>=0;a--){for(h=s.get(a,a)-S,E=0,i=u;i<=w;i++)E+=s.get(a,i)*s.get(i,w);if(t[a]<0)$=h,C=E;else if(u=a,0===t[a]?s.set(a,w,0!==h?-E/h:-E/(k*I)):(d=s.get(a,a+1),p=s.get(a+1,a),T=(n[a]-S)*(n[a]-S)+t[a]*t[a],c=(d*C-$*E)/T,s.set(a,w,c),s.set(a+1,w,Math.abs(d)>Math.abs($)?(-E-h*c)/d:(-C-p*c)/$)),c=Math.abs(s.get(a,w)),k*c*c>1)for(i=a;i<=w;i++)s.set(i,w,s.get(i,w)/c)}else if(T<0)for(u=w-1,Math.abs(s.get(w,w-1))>Math.abs(s.get(w-1,w))?(s.set(w-1,w-1,T/s.get(w,w-1)),s.set(w-1,w,-(s.get(w,w)-S)/s.get(w,w-1))):(x=z(0,-s.get(w-1,w),s.get(w-1,w-1)-S,T),s.set(w-1,w-1,x[0]),s.set(w-1,w,x[1])),s.set(w,w-1,0),s.set(w,w,1),a=w-2;a>=0;a--){for(f=0,m=0,i=u;i<=w;i++)f+=s.get(a,i)*s.get(i,w-1),m+=s.get(a,i)*s.get(i,w);if(h=s.get(a,a)-S,t[a]<0)$=h,E=f,C=m;else if(u=a,0===t[a]?(x=z(-f,-m,h,T),s.set(a,w-1,x[0]),s.set(a,w,x[1])):(d=s.get(a,a+1),p=s.get(a+1,a),g=(n[a]-S)*(n[a]-S)+t[a]*t[a]-T*T,y=2*(n[a]-S)*T,0===g&&0===y&&(g=k*I*(Math.abs(h)+Math.abs(T)+Math.abs(d)+Math.abs(p)+Math.abs($))),x=z(d*E-$*f+T*m,d*C-$*m-T*f,g,y),s.set(a,w-1,x[0]),s.set(a,w,x[1]),Math.abs(d)>Math.abs($)+Math.abs(T)?(s.set(a+1,w-1,(-f-h*s.get(a,w-1)+T*s.get(a,w))/d),s.set(a+1,w,(-m-h*s.get(a,w)-T*s.get(a,w-1))/d)):(x=z(-E-p*s.get(a,w-1),-C-p*s.get(a,w),$,T),s.set(a+1,w-1,x[0]),s.set(a+1,w,x[1]))),c=Math.max(Math.abs(s.get(a,w-1)),Math.abs(s.get(a,w))),k*c*c>1)for(i=a;i<=w;i++)s.set(i,w-1,s.get(i,w-1)/c),s.set(i,w,s.get(i,w)/c)}for(a=0;a<e;a++)if(a<0||a>v)for(i=a;i<e;i++)r.set(a,i,s.get(a,i));for(i=e-1;i>=0;i--)for(a=0;a<=v;a++){for($=0,o=0;o<=Math.min(i,v);o++)$+=r.get(a,o)*s.get(o,i);r.set(a,i,$)}}}(a,u,o,i,e)}this.n=a,this.e=u,this.d=o,this.V=i}get realEigenvalues(){return Array.from(this.d)}get imaginaryEigenvalues(){return Array.from(this.e)}get eigenvectorMatrix(){return this.V}get diagonalMatrix(){let e,t,n=this.n,r=this.e,s=this.d,a=new N(n,n);for(e=0;e<n;e++){for(t=0;t<n;t++)a.set(e,t,0);a.set(e,e,s[e]),r[e]>0?a.set(e,e+1,r[e]):r[e]<0&&a.set(e,e-1,r[e])}return a}}function z(e,t,n,r){let s,a;return Math.abs(n)>Math.abs(r)?(s=r/n,a=n+s*r,[(e+s*t)/a,(t-s*e)/a]):(s=n/r,a=r+s*n,[(s*e+t)/a,(s*t-e)/a])}class P{constructor(e){if(!(e=$.checkMatrix(e)).isSymmetric())throw new Error("Matrix is not symmetric");let t,n,r,s=e,a=s.rows,i=new N(a,a),o=!0;for(n=0;n<a;n++){let e=0;for(r=0;r<n;r++){let a=0;for(t=0;t<r;t++)a+=i.get(r,t)*i.get(n,t);a=(s.get(n,r)-a)/i.get(r,r),i.set(n,r,a),e+=a*a}for(e=s.get(n,n)-e,o&&=e>0,i.set(n,n,Math.sqrt(Math.max(e,0))),r=n+1;r<a;r++)i.set(n,r,0)}this.L=i,this.positiveDefinite=o}isPositiveDefinite(){return this.positiveDefinite}solve(e){e=$.checkMatrix(e);let t=this.L,n=t.rows;if(e.rows!==n)throw new Error("Matrix dimensions do not match");if(!1===this.isPositiveDefinite())throw new Error("Matrix is not positive definite");let r,s,a,i=e.columns,o=e.clone();for(a=0;a<n;a++)for(s=0;s<i;s++){for(r=0;r<a;r++)o.set(a,s,o.get(a,s)-o.get(r,s)*t.get(a,r));o.set(a,s,o.get(a,s)/t.get(a,a))}for(a=n-1;a>=0;a--)for(s=0;s<i;s++){for(r=a+1;r<n;r++)o.set(a,s,o.get(a,s)-o.get(r,s)*t.get(r,a));o.set(a,s,o.get(a,s)/t.get(a,a))}return o}get lowerTriangularMatrix(){return this.L}}class B{constructor(e,t={}){e=$.checkMatrix(e);let{Y:n}=t;const{scaleScores:s=!1,maxIterations:a=1e3,terminationCriteria:i=1e-10}=t;let o;if(n){if(n=r.isAnyArray(n)&&"number"==typeof n[0]?N.columnVector(n):$.checkMatrix(n),n.rows!==e.rows)throw new Error("Y should have the same number of rows as X");o=n.getColumnVector(0)}else o=e.getColumnVector(0);let u,l,c,h,d=1;for(let t=0;t<a&&d>i;t++)c=e.transpose().mmul(o).div(o.transpose().mmul(o).get(0,0)),c=c.div(c.norm()),u=e.mmul(c).div(c.transpose().mmul(c).get(0,0)),t>0&&(d=u.clone().sub(h).pow(2).sum()),h=u.clone(),n?(l=n.transpose().mmul(u).div(u.transpose().mmul(u).get(0,0)),l=l.div(l.norm()),o=n.mmul(l).div(l.transpose().mmul(l).get(0,0))):o=u;if(n){let t=e.transpose().mmul(u).div(u.transpose().mmul(u).get(0,0));t=t.div(t.norm());let r=e.clone().sub(u.clone().mmul(t.transpose())),s=o.transpose().mmul(u).div(u.transpose().mmul(u).get(0,0)),a=n.clone().sub(u.clone().mulS(s.get(0,0)).mmul(l.transpose()));this.t=u,this.p=t.transpose(),this.w=c.transpose(),this.q=l,this.u=o,this.s=u.transpose().mmul(u),this.xResidual=r,this.yResidual=a,this.betas=s}else this.w=c.transpose(),this.s=u.transpose().mmul(u).sqrt(),this.t=s?u.clone().div(this.s.get(0,0)):u,this.xResidual=e.sub(u.mmul(c.transpose()))}}t.AbstractMatrix=w,t.CHO=P,t.CholeskyDecomposition=P,t.DistanceMatrix=S,t.EVD=L,t.EigenvalueDecomposition=L,t.LU=A,t.LuDecomposition=A,t.Matrix=N,t.MatrixColumnSelectionView=class extends T{constructor(e,t){m(e,t),super(e,e.rows,t.length),this.columnIndices=t}set(e,t,n){return this.matrix.set(e,this.columnIndices[t],n),this}get(e,t){return this.matrix.get(e,this.columnIndices[t])}},t.MatrixColumnView=class extends T{constructor(e,t){h(e,t),super(e,e.rows,1),this.column=t}set(e,t,n){return this.matrix.set(e,this.column,n),this}get(e){return this.matrix.get(e,this.column)}},t.MatrixFlipColumnView=class extends T{constructor(e){super(e,e.rows,e.columns)}set(e,t,n){return this.matrix.set(e,this.columns-t-1,n),this}get(e,t){return this.matrix.get(e,this.columns-t-1)}},t.MatrixFlipRowView=class extends T{constructor(e){super(e,e.rows,e.columns)}set(e,t,n){return this.matrix.set(this.rows-e-1,t,n),this}get(e,t){return this.matrix.get(this.rows-e-1,t)}},t.MatrixRowSelectionView=class extends T{constructor(e,t){f(e,t),super(e,t.length,e.columns),this.rowIndices=t}set(e,t,n){return this.matrix.set(this.rowIndices[e],t,n),this}get(e,t){return this.matrix.get(this.rowIndices[e],t)}},t.MatrixRowView=class extends T{constructor(e,t){c(e,t),super(e,1,e.columns),this.row=t}set(e,t,n){return this.matrix.set(this.row,t,n),this}get(e,t){return this.matrix.get(this.row,t)}},t.MatrixSelectionView=E,t.MatrixSubView=class extends T{constructor(e,t,n,r,s){g(e,t,n,r,s),super(e,n-t+1,s-r+1),this.startRow=t,this.startColumn=r}set(e,t,n){return this.matrix.set(this.startRow+e,this.startColumn+t,n),this}get(e,t){return this.matrix.get(this.startRow+e,this.startColumn+t)}},t.MatrixTransposeView=class extends T{constructor(e){super(e,e.columns,e.rows)}set(e,t,n){return this.matrix.set(t,e,n),this}get(e,t){return this.matrix.get(t,e)}},t.NIPALS=B,t.Nipals=B,t.QR=_,t.QrDecomposition=_,t.SVD=D,t.SingularValueDecomposition=D,t.SymmetricMatrix=I,t.WrapperMatrix1D=C,t.WrapperMatrix2D=$,t.correlation=function(e,t=e,n={}){e=new N(e);let s=!1;if("object"!=typeof t||N.isMatrix(t)||r.isAnyArray(t)?t=new N(t):(n=t,t=e,s=!0),e.rows!==t.rows)throw new TypeError("Both matrices must have the same number of rows");const{center:a=!0,scale:i=!0}=n;a&&(e.center("column"),s||t.center("column")),i&&(e.scale("column"),s||t.scale("column"));const o=e.standardDeviation("column",{unbiased:!0}),u=s?o:t.standardDeviation("column",{unbiased:!0}),l=e.transpose().mmul(t);for(let t=0;t<l.rows;t++)for(let n=0;n<l.columns;n++)l.set(t,n,l.get(t,n)*(1/(o[t]*u[n]))*(1/(e.rows-1)));return l},t.covariance=function(e,t=e,n={}){e=new N(e);let s=!1;if("object"!=typeof t||N.isMatrix(t)||r.isAnyArray(t)?t=new N(t):(n=t,t=e,s=!0),e.rows!==t.rows)throw new TypeError("Both matrices must have the same number of rows");const{center:a=!0}=n;a&&(e=e.center("column"),s||(t=t.center("column")));const i=e.transpose().mmul(t);for(let t=0;t<i.rows;t++)for(let n=0;n<i.columns;n++)i.set(t,n,i.get(t,n)*(1/(e.rows-1)));return i},t.default=N,t.determinant=function e(t){if((t=N.checkMatrix(t)).isSquare()){if(0===t.columns)return 1;let n,r,s,a;if(2===t.columns)return n=t.get(0,0),r=t.get(0,1),s=t.get(1,0),a=t.get(1,1),n*a-r*s;if(3===t.columns){let a,i,o;return a=new E(t,[1,2],[1,2]),i=new E(t,[1,2],[0,2]),o=new E(t,[1,2],[0,1]),n=t.get(0,0),r=t.get(0,1),s=t.get(0,2),n*e(a)-r*e(i)+s*e(o)}return new A(t).determinant}throw Error("determinant can only be calculated for a square matrix")},t.inverse=function(e,t=!1){return e=$.checkMatrix(e),t?new D(e).inverse():F(e,N.eye(e.rows))},t.linearDependencies=function(e,t={}){const{thresholdValue:n=1e-9,thresholdError:r=1e-9}=t;let s=(e=N.checkMatrix(e)).rows,a=new N(s,s);for(let t=0;t<s;t++){let i=N.columnVector(e.getRow(t)),o=e.subMatrixRow(M(s,t)).transpose(),u=new D(o).solve(i),l=N.sub(i,o.mmul(u)).abs().max();a.setRow(t,O(l,u,t,n,r))}return a},t.pseudoInverse=function(e,t=Number.EPSILON){if((e=N.checkMatrix(e)).isEmpty())return e.transpose();let n=new D(e,{autoTranspose:!0}),r=n.leftSingularVectors,s=n.rightSingularVectors,a=n.diagonal;for(let e=0;e<a.length;e++)Math.abs(a[e])>t?a[e]=1/a[e]:a[e]=0;return s.mmul(N.diag(a).mmul(r.transpose()))},t.solve=F,t.wrap=function(e,t){if(r.isAnyArray(e))return e[0]&&r.isAnyArray(e[0])?new $(e):new C(e,t);throw new Error("the argument is not an array")}},717:function(e,t,n){var r;!function(e,s){function a(e){var t=this,n="";t.next=function(){var e=t.b,n=t.c,r=t.d,s=t.a;return e=e<<25^e>>>7^n,n=n-r|0,r=r<<24^r>>>8^s,s=s-e|0,t.b=e=e<<20^e>>>12^n,t.c=n=n-r|0,t.d=r<<16^n>>>16^s,t.a=s-e|0},t.a=0,t.b=0,t.c=-1640531527,t.d=1367130551,e===Math.floor(e)?(t.a=e/4294967296|0,t.b=0|e):n+=e;for(var r=0;r<n.length+20;r++)t.b^=0|n.charCodeAt(r),t.next()}function i(e,t){return t.a=e.a,t.b=e.b,t.c=e.c,t.d=e.d,t}function o(e,t){var n=new a(e),r=t&&t.state,s=function(){return(n.next()>>>0)/4294967296};return s.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},s.int32=n.next,s.quick=s,r&&("object"==typeof r&&i(r,n),s.state=function(){return i(n,{})}),s}s&&s.exports?s.exports=o:n.amdD&&n.amdO?void 0===(r=function(){return o}.call(t,n,t,s))||(s.exports=r):this.tychei=o}(0,e=n.nmd(e),n.amdD)},718:(e,t,n)=>{"use strict";n.r(t),n.d(t,{default:()=>s});var r=n(788);function s(e){var t,n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};if(!(0,r.isAnyArray)(e))throw new TypeError("input must be an array");if(0===e.length)throw new TypeError("input must not be empty");if(void 0!==n.output){if(!(0,r.isAnyArray)(n.output))throw new TypeError("output option must be an array if specified");t=n.output}else t=new Array(e.length);var s=function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};if(!(0,r.isAnyArray)(e))throw new TypeError("input must be an array");if(0===e.length)throw new TypeError("input must not be empty");var n=t.fromIndex,s=void 0===n?0:n,a=t.toIndex,i=void 0===a?e.length:a;if(s<0||s>=e.length||!Number.isInteger(s))throw new Error("fromIndex must be a positive integer smaller than length");if(i<=s||i>e.length||!Number.isInteger(i))throw new Error("toIndex must be an integer greater than fromIndex and at most equal to length");for(var o=e[s],u=s+1;u<i;u++)e[u]<o&&(o=e[u]);return o}(e),a=function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};if(!(0,r.isAnyArray)(e))throw new TypeError("input must be an array");if(0===e.length)throw new TypeError("input must not be empty");var n=t.fromIndex,s=void 0===n?0:n,a=t.toIndex,i=void 0===a?e.length:a;if(s<0||s>=e.length||!Number.isInteger(s))throw new Error("fromIndex must be a positive integer smaller than length");if(i<=s||i>e.length||!Number.isInteger(i))throw new Error("toIndex must be an integer greater than fromIndex and at most equal to length");for(var o=e[s],u=s+1;u<i;u++)e[u]>o&&(o=e[u]);return o}(e);if(s===a)throw new RangeError("minimum and maximum input values are equal. Cannot rescale a constant array");var i=n.min,o=void 0===i?n.autoMinMax?s:0:i,u=n.max,l=void 0===u?n.autoMinMax?a:1:u;if(o>=l)throw new RangeError("min option must be smaller than max option");for(var c=(l-o)/(a-s),h=0;h<e.length;h++)t[h]=(e[h]-s)*c+o;return t}},743:function(e,t,n){"use strict";var r=this&&this.__awaiter||function(e,t,n,r){return new(n||(n=Promise))(function(s,a){function i(e){try{u(r.next(e))}catch(e){a(e)}}function o(e){try{u(r.throw(e))}catch(e){a(e)}}function u(e){var t;e.done?s(e.value):(t=e.value,t instanceof n?t:new n(function(e){e(t)})).then(i,o)}u((r=r.apply(e,t||[])).next())})},s=this&&this.__generator||function(e,t){var n,r,s,a={label:0,sent:function(){if(1&s[0])throw s[1];return s[1]},trys:[],ops:[]},i=Object.create(("function"==typeof Iterator?Iterator:Object).prototype);return i.next=o(0),i.throw=o(1),i.return=o(2),"function"==typeof Symbol&&(i[Symbol.iterator]=function(){return this}),i;function o(o){return function(u){return function(o){if(n)throw new TypeError("Generator is already executing.");for(;i&&(i=0,o[0]&&(a=0)),a;)try{if(n=1,r&&(s=2&o[0]?r.return:o[0]?r.throw||((s=r.return)&&s.call(r),0):r.next)&&!(s=s.call(r,o[1])).done)return s;switch(r=0,s&&(o=[2&o[0],s.value]),o[0]){case 0:case 1:s=o;break;case 4:return a.label++,{value:o[1],done:!1};case 5:a.label++,r=o[1],o=[0];continue;case 7:o=a.ops.pop(),a.trys.pop();continue;default:if(!((s=(s=a.trys).length>0&&s[s.length-1])||6!==o[0]&&2!==o[0])){a=0;continue}if(3===o[0]&&(!s||o[1]>s[0]&&o[1]<s[3])){a.label=o[1];break}if(6===o[0]&&a.label<s[1]){a.label=s[1],s=o;break}if(s&&a.label<s[2]){a.label=s[2],a.ops.push(o);break}s[2]&&a.ops.pop(),a.trys.pop();continue}o=t.call(e,a)}catch(e){o=[6,e],r=0}finally{n=s=0}if(5&o[0])throw o[1];return{value:o[0]?o[1]:void 0,done:!0}}([o,u])}}};Object.defineProperty(t,"__esModule",{value:!0});var a=n(848),i=function(){function e(){}return e.prototype.initialize=function(){return r(this,void 0,void 0,function(){var e,t;return s(this,function(n){switch(n.label){case 0:return[4,a.FilesetResolver.forVisionTasks("https://cdn.jsdelivr.net/npm/@mediapipe/tasks-vision@0.10.3/wasm")];case 1:return e=n.sent(),t=this,[4,a.FaceLandmarker.createFromOptions(e,{baseOptions:{modelAssetPath:"https://storage.googleapis.com/mediapipe-models/face_landmarker/face_landmarker/float16/1/face_landmarker.task",delegate:"GPU"},outputFaceBlendshapes:!0,outputFacialTransformationMatrixes:!0,runningMode:"IMAGE",numFaces:1})];case 2:return t.faceLandmarker=n.sent(),[2]}})})},e.prototype.processFrame=function(e){return r(this,void 0,void 0,function(){return s(this,function(t){switch(t.label){case 0:return this.faceLandmarker?[4,this.faceLandmarker.detect(e)]:(console.error("FaceLandmarker is not loaded yet."),[2,null]);case 1:return[2,t.sent()]}})})},e}();t.default=i},788:(e,t,n)=>{"use strict";n.r(t),n.d(t,{isAnyArray:()=>s});const r=Object.prototype.toString;function s(e){const t=r.call(e);return t.endsWith("Array]")&&!t.includes("Big")}},801:function(e,t,n){var r;!function(s,a,i){var o,u=256,l=i.pow(u,6),c=i.pow(2,52),h=2*c,d=255;function p(e,t,n){var r=[],d=y(g((t=1==t?{entropy:!0}:t||{}).entropy?[e,b(a)]:null==e?function(){try{var e;return o&&(e=o.randomBytes)?e=e(u):(e=new Uint8Array(u),(s.crypto||s.msCrypto).getRandomValues(e)),b(e)}catch(e){var t=s.navigator,n=t&&t.plugins;return[+new Date,s,n,s.screen,b(a)]}}():e,3),r),p=new f(r),x=function(){for(var e=p.g(6),t=l,n=0;e<c;)e=(e+n)*u,t*=u,n=p.g(1);for(;e>=h;)e/=2,t/=2,n>>>=1;return(e+n)/t};return x.int32=function(){return 0|p.g(4)},x.quick=function(){return p.g(4)/4294967296},x.double=x,y(b(p.S),a),(t.pass||n||function(e,t,n,r){return r&&(r.S&&m(r,p),e.state=function(){return m(p,{})}),n?(i.random=e,t):e})(x,d,"global"in t?t.global:this==i,t.state)}function f(e){var t,n=e.length,r=this,s=0,a=r.i=r.j=0,i=r.S=[];for(n||(e=[n++]);s<u;)i[s]=s++;for(s=0;s<u;s++)i[s]=i[a=d&a+e[s%n]+(t=i[s])],i[a]=t;(r.g=function(e){for(var t,n=0,s=r.i,a=r.j,i=r.S;e--;)t=i[s=d&s+1],n=n*u+i[d&(i[s]=i[a=d&a+t])+(i[a]=t)];return r.i=s,r.j=a,n})(u)}function m(e,t){return t.i=e.i,t.j=e.j,t.S=e.S.slice(),t}function g(e,t){var n,r=[],s=typeof e;if(t&&"object"==s)for(n in e)try{r.push(g(e[n],t-1))}catch(e){}return r.length?r:"string"==s?e:e+"\0"}function y(e,t){for(var n,r=e+"",s=0;s<r.length;)t[d&s]=d&(n^=19*t[d&s])+r.charCodeAt(s++);return b(t)}function b(e){return String.fromCharCode.apply(0,e)}if(y(i.random(),a),e.exports){e.exports=p;try{o=n(234)}catch(e){}}else void 0===(r=function(){return p}.call(t,n,t,e))||(e.exports=r)}("undefined"!=typeof self?self:this,[],Math)},817:()=>{},833:function(e,t,n){var r;!function(e,s){function a(e){var t=this;t.next=function(){var e,n,r=t.w,s=t.X,a=t.i;return t.w=r=r+1640531527|0,n=s[a+34&127],e=s[a=a+1&127],n^=n<<13,e^=e<<17,n^=n>>>15,e^=e>>>12,n=s[a]=n^e,t.i=a,n+(r^r>>>16)|0},function(e,t){var n,r,s,a,i,o=[],u=128;for(t===(0|t)?(r=t,t=null):(t+="\0",r=0,u=Math.max(u,t.length)),s=0,a=-32;a<u;++a)t&&(r^=t.charCodeAt((a+32)%t.length)),0===a&&(i=r),r^=r<<10,r^=r>>>15,r^=r<<4,r^=r>>>13,a>=0&&(i=i+1640531527|0,s=0==(n=o[127&a]^=r+i)?s+1:0);for(s>=128&&(o[127&(t&&t.length||0)]=-1),s=127,a=512;a>0;--a)r=o[s+34&127],n=o[s=s+1&127],r^=r<<13,n^=n<<17,r^=r>>>15,n^=n>>>12,o[s]=r^n;e.w=i,e.X=o,e.i=s}(t,e)}function i(e,t){return t.i=e.i,t.w=e.w,t.X=e.X.slice(),t}function o(e,t){null==e&&(e=+new Date);var n=new a(e),r=t&&t.state,s=function(){return(n.next()>>>0)/4294967296};return s.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},s.int32=n.next,s.quick=s,r&&(r.X&&i(r,n),s.state=function(){return i(n,{})}),s}s&&s.exports?s.exports=o:n.amdD&&n.amdO?void 0===(r=function(){return o}.call(t,n,t,s))||(s.exports=r):this.xor4096=o}(0,e=n.nmd(e),n.amdD)},848:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n="undefined"!=typeof self?self:{};function r(e,t){e:{for(var r=["CLOSURE_FLAGS"],s=n,a=0;a<r.length;a++)if(null==(s=s[r[a]])){r=null;break e}r=s}return null!=(e=r&&r[e])?e:t}function s(){throw Error("Invalid UTF8")}function a(e,t){return t=String.fromCharCode.apply(null,t),null==e?t:e+t}let i,o;const u="undefined"!=typeof TextDecoder;let l;const c="undefined"!=typeof TextEncoder;function h(e){if(c)e=(l||=new TextEncoder).encode(e);else{let n=0;const r=new Uint8Array(3*e.length);for(let s=0;s<e.length;s++){var t=e.charCodeAt(s);if(t<128)r[n++]=t;else{if(t<2048)r[n++]=t>>6|192;else{if(t>=55296&&t<=57343){if(t<=56319&&s<e.length){const a=e.charCodeAt(++s);if(a>=56320&&a<=57343){t=1024*(t-55296)+a-56320+65536,r[n++]=t>>18|240,r[n++]=t>>12&63|128,r[n++]=t>>6&63|128,r[n++]=63&t|128;continue}s--}t=65533}r[n++]=t>>12|224,r[n++]=t>>6&63|128}r[n++]=63&t|128}}e=n===r.length?r:r.subarray(0,n)}return e}var d,p=r(610401301,!1),f=r(653718497,r(1,!0));const m=n.navigator;function g(e){return!!p&&!!d&&d.brands.some(({brand:t})=>t&&-1!=t.indexOf(e))}function y(e){var t;return(t=n.navigator)&&(t=t.userAgent)||(t=""),-1!=t.indexOf(e)}function b(){return!!p&&!!d&&d.brands.length>0}function x(){return b()?g("Chromium"):(y("Chrome")||y("CriOS"))&&!(!b()&&y("Edge"))||y("Silk")}function w(e){return w[" "](e),e}d=m&&m.userAgentData||null,w[" "]=function(){};var v=!b()&&(y("Trident")||y("MSIE"));!y("Android")||x(),x(),y("Safari")&&(x()||!b()&&y("Coast")||!b()&&y("Opera")||!b()&&y("Edge")||(b()?g("Microsoft Edge"):y("Edg/"))||b()&&g("Opera"));var k={},N=null;function I(){if(!N){N={};for(var e="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789".split(""),t=["+/=","+/","-_=","-_.","-_"],n=0;n<5;n++){var r=e.concat(t[n].split(""));k[n]=r;for(var s=0;s<r.length;s++){var a=r[s];void 0===N[a]&&(N[a]=s)}}}}var S="undefined"!=typeof Uint8Array,T=!v&&"function"==typeof btoa;function E(e){if(!T){var t;void 0===t&&(t=0),I(),t=k[t];var n=Array(Math.floor(e.length/3)),r=t[64]||"";let u=0,l=0;for(;u<e.length-2;u+=3){var s=e[u],a=e[u+1],i=e[u+2],o=t[s>>2];s=t[(3&s)<<4|a>>4],a=t[(15&a)<<2|i>>6],i=t[63&i],n[l++]=o+s+a+i}switch(o=0,i=r,e.length-u){case 2:i=t[(15&(o=e[u+1]))<<2]||r;case 1:e=e[u],n[l]=t[e>>2]+t[(3&e)<<4|o>>4]+i+r}return n.join("")}for(t="",n=0,r=e.length-10240;n<r;)t+=String.fromCharCode.apply(null,e.subarray(n,n+=10240));return t+=String.fromCharCode.apply(null,n?e.subarray(n):e),btoa(t)}const C=/[-_.]/g,$={"-":"+",_:"/",".":"="};function A(e){return $[e]||""}function R(e){if(!T)return function(e){var t=e.length,n=3*t/4;n%3?n=Math.floor(n):-1!="=.".indexOf(e[t-1])&&(n=-1!="=.".indexOf(e[t-2])?n-2:n-1);var r=new Uint8Array(n),s=0;return function(e,t){function n(t){for(;r<e.length;){var n=e.charAt(r++),s=N[n];if(null!=s)return s;if(!/^[\s\xa0]*$/.test(n))throw Error("Unknown base64 encoding at char: "+n)}return t}I();for(var r=0;;){var s=n(-1),a=n(0),i=n(64),o=n(64);if(64===o&&-1===s)break;t(s<<2|a>>4),64!=i&&(t(a<<4&240|i>>2),64!=o&&t(i<<6&192|o))}}(e,function(e){r[s++]=e}),s!==n?r.subarray(0,s):r}(e);C.test(e)&&(e=e.replace(C,A)),e=atob(e);const t=new Uint8Array(e.length);for(let n=0;n<e.length;n++)t[n]=e.charCodeAt(n);return t}function _(e){return S&&null!=e&&e instanceof Uint8Array}var D={};let F;function M(e){if(e!==D)throw Error("illegal external caller")}function O(){return F||=new z(null,D)}function L(e){M(D);var t=e.g;return null==(t=null==t||_(t)?t:"string"==typeof t?R(t):null)?t:e.g=t}var z=class{constructor(e,t){if(M(t),this.g=e,null!=e&&0===e.length)throw Error("ByteString should be constructed with non-empty values")}h(){return new Uint8Array(L(this)||0)}};function P(e,t){e.__closure__error__context__984382||(e.__closure__error__context__984382={}),e.__closure__error__context__984382.severity=t}let B;function V(){const e=Error();P(e,"incident"),function(e){n.setTimeout(()=>{throw e},0)}(e)}function U(e){return P(e=Error(e),"warning"),e}function W(){return"function"==typeof BigInt}function G(e){return Array.prototype.slice.call(e)}var H="function"==typeof Symbol&&"symbol"==typeof Symbol();function j(e){return"function"==typeof Symbol&&"symbol"==typeof Symbol()?Symbol():e}var K=j(),q=j("0di"),X=j("2ex"),Y=j("1oa"),Z=j("0dg"),Q=H?(e,t)=>{e[K]|=t}:(e,t)=>{void 0!==e.G?e.G|=t:Object.defineProperties(e,{G:{value:t,configurable:!0,writable:!0,enumerable:!1}})},J=H?(e,t)=>{e[K]&=~t}:(e,t)=>{void 0!==e.G&&(e.G&=~t)},ee=H?e=>0|e[K]:e=>0|e.G,te=H?e=>e[K]:e=>e.G,ne=H?(e,t)=>{e[K]=t}:(e,t)=>{void 0!==e.G?e.G=t:Object.defineProperties(e,{G:{value:t,configurable:!0,writable:!0,enumerable:!1}})};function re(e){return Q(e,34),e}function se(e,t){ne(t,-30975&e)}function ae(e,t){ne(t,-30941&e|34)}var ie,oe={},ue={};function le(e){return!(!e||"object"!=typeof e||e.Ja!==ue)}function ce(e){return null!==e&&"object"==typeof e&&!Array.isArray(e)&&e.constructor===Object}function he(e,t,n){if(null!=e)if("string"==typeof e)e=e?new z(e,D):O();else if(e.constructor!==z)if(_(e))e=e.length?new z(n?e:new Uint8Array(e),D):O();else{if(!t)throw Error();e=void 0}return e}function de(e){return!(!Array.isArray(e)||e.length||!(1&ee(e)))}const pe=[];function fe(e){if(2&e)throw Error()}ne(pe,55),ie=Object.freeze(pe);class me{constructor(e,t,n){this.l=0,this.g=e,this.h=t,this.m=n}next(){if(this.l<this.g.length){const e=this.g[this.l++];return{done:!1,value:this.h?this.h.call(this.m,e):e}}return{done:!0,value:void 0}}[Symbol.iterator](){return new me(this.g,this.h,this.m)}}let ge;function ye(e,t){(t=ge?t[ge]:void 0)&&(e[ge]=G(t))}var be=Object.freeze({}),xe=Object.freeze({}),we=Object.freeze({});function ve(e){return e.Qa=!0,e}var ke=ve(e=>"number"==typeof e),Ne=ve(e=>"string"==typeof e),Ie=ve(e=>"boolean"==typeof e),Se="function"==typeof n.BigInt&&"bigint"==typeof n.BigInt(0),Te=ve(e=>Se?e>=Ce&&e<=Ae:"-"===e[0]?Re(e,Ee):Re(e,$e));const Ee=Number.MIN_SAFE_INTEGER.toString(),Ce=Se?BigInt(Number.MIN_SAFE_INTEGER):void 0,$e=Number.MAX_SAFE_INTEGER.toString(),Ae=Se?BigInt(Number.MAX_SAFE_INTEGER):void 0;function Re(e,t){if(e.length>t.length)return!1;if(e.length<t.length||e===t)return!0;for(let n=0;n<e.length;n++){const r=e[n],s=t[n];if(r>s)return!1;if(r<s)return!0}}const _e="function"==typeof Uint8Array.prototype.slice;let De,Fe=0,Me=0;function Oe(e){const t=e>>>0;Fe=t,Me=(e-t)/4294967296>>>0}function Le(e){if(e<0){Oe(-e);const[t,n]=Ge(Fe,Me);Fe=t>>>0,Me=n>>>0}else Oe(e)}function ze(e){const t=De||=new DataView(new ArrayBuffer(8));t.setFloat32(0,+e,!0),Me=0,Fe=t.getUint32(0,!0)}function Pe(e,t){return 4294967296*t+(e>>>0)}function Be(e,t){const n=2147483648&t;return n&&(t=~t>>>0,0==(e=1+~e>>>0)&&(t=t+1>>>0)),e=Pe(e,t),n?-e:e}function Ve(e,t){if(e>>>=0,(t>>>=0)<=2097151)var n=""+(4294967296*t+e);else W()?n=""+(BigInt(t)<<BigInt(32)|BigInt(e)):(e=(16777215&e)+6777216*(n=16777215&(e>>>24|t<<8))+6710656*(t=t>>16&65535),n+=8147497*t,t*=2,e>=1e7&&(n+=e/1e7>>>0,e%=1e7),n>=1e7&&(t+=n/1e7>>>0,n%=1e7),n=t+Ue(n)+Ue(e));return n}function Ue(e){return e=String(e),"0000000".slice(e.length)+e}function We(e){if(e.length<16)Le(Number(e));else if(W())e=BigInt(e),Fe=Number(e&BigInt(4294967295))>>>0,Me=Number(e>>BigInt(32)&BigInt(4294967295));else{const t=+("-"===e[0]);Me=Fe=0;const n=e.length;for(let r=t,s=(n-t)%6+t;s<=n;r=s,s+=6){const t=Number(e.slice(r,s));Me*=1e6,Fe=1e6*Fe+t,Fe>=4294967296&&(Me+=Math.trunc(Fe/4294967296),Me>>>=0,Fe>>>=0)}if(t){const[e,t]=Ge(Fe,Me);Fe=e,Me=t}}}function Ge(e,t){return t=~t,e?e=1+~e:t+=1,[e,t]}function He(e){return null==e||"number"==typeof e?e:"NaN"===e||"Infinity"===e||"-Infinity"===e?Number(e):void 0}function je(e){return null==e||"boolean"==typeof e?e:"number"==typeof e?!!e:void 0}const Ke=/^-?([1-9][0-9]*|0)(\.[0-9]+)?$/;function qe(e){const t=typeof e;switch(t){case"bigint":return!0;case"number":return Number.isFinite(e)}return"string"===t&&Ke.test(e)}function Xe(e){if(null==e)return e;if("string"==typeof e){if(!e)return;e=+e}return"number"==typeof e&&Number.isFinite(e)?0|e:void 0}function Ye(e){if(null==e)return e;if("string"==typeof e){if(!e)return;e=+e}return"number"==typeof e&&Number.isFinite(e)?e>>>0:void 0}function Ze(e){return"-"!==e[0]&&(e.length<20||20===e.length&&Number(e.substring(0,6))<184467)}function Qe(e){return e=Math.trunc(e),Number.isSafeInteger(e)||(Le(e),e=Be(Fe,Me)),e}function Je(e){var t=Math.trunc(Number(e));if(Number.isSafeInteger(t))return String(t);if(-1!==(t=e.indexOf("."))&&(e=e.substring(0,t)),!("-"===e[0]?e.length<20||20===e.length&&Number(e.substring(0,7))>-922337:e.length<19||19===e.length&&Number(e.substring(0,6))<922337))if(We(e),e=Fe,2147483648&(t=Me))if(W())e=""+(BigInt(0|t)<<BigInt(32)|BigInt(e>>>0));else{const[n,r]=Ge(e,t);e="-"+Ve(n,r)}else e=Ve(e,t);return e}function et(e){return null==e?e:"bigint"==typeof e?(Te(e)?e=Number(e):(e=BigInt.asIntN(64,e),e=Te(e)?Number(e):String(e)),e):qe(e)?"number"==typeof e?Qe(e):Je(e):void 0}function tt(e){if("string"!=typeof e)throw Error();return e}function nt(e){if(null!=e&&"string"!=typeof e)throw Error();return e}function rt(e){return null==e||"string"==typeof e?e:void 0}function st(e,t,n,r){if(null!=e&&"object"==typeof e&&e.X===oe)return e;if(!Array.isArray(e))return n?2&r?(e=t[q])?t=e:(re((e=new t).u),t=t[q]=e):t=new t:t=void 0,t;let s=n=ee(e);return 0===s&&(s|=32&r),s|=2&r,s!==n&&ne(e,s),new t(e)}function at(e,t,n){if(t)e:{if(!qe(t=e))throw U("int64");switch(typeof t){case"string":t=Je(t);break e;case"bigint":if(e=t=BigInt.asIntN(64,t),Ne(e)){if(!/^\s*(?:-?[1-9]\d*|0)?\s*$/.test(e))throw Error(String(e))}else if(ke(e)&&!Number.isSafeInteger(e))throw Error(String(e));t=Se?BigInt(t):Ie(t)?t?"1":"0":Ne(t)?t.trim()||"0":String(t);break e;default:t=Qe(t)}}else t=et(e);return"string"==typeof(n=null==(e=t)?n?0:void 0:e)&&(t=+n,Number.isSafeInteger(t))?t:n}function it(e){if(void 0===lt&&(lt="function"==typeof Proxy?yt(Proxy):null),!lt||!gt())return e;let t=ot?.get(e);return t||(Math.random()>.01?e:(function(e){if(void 0===ht){const e=new lt([],{});ht=1===Array.prototype.concat.call([],e).length}ht&&"function"==typeof Symbol&&Symbol.isConcatSpreadable&&(e[Symbol.isConcatSpreadable]=!0)}(e),t=new lt(e,{set:(e,t,n)=>(V(),e[t]=n,!0)}),function(e,t){(ot||=new ct).set(e,t),(ut||=new ct).set(t,e)}(e,t),t))}let ot,ut,lt,ct,ht,dt,pt,ft,mt;function gt(){return void 0===ct&&(ct="function"==typeof WeakMap?yt(WeakMap):null),ct}function yt(e){try{return-1!==e.toString().indexOf("[native code]")?e:null}catch{return null}}function bt(e,t,n){if(gt()){if(dt?.get(t)?.get(e)){if(n)return}else if(Math.random()>.01)return;var r=e.length;n={length:r};for(var s=0;s<Math.min(r,10);s++){if(r<=10)var a=s;else{a=r/10;const e=Math.floor(s*a);a=e+Math.floor(Math.random()*(Math.floor((s+1)*a)-e))}n[a]=e[a]}wt(e,n)?((s=(r=dt||=new ct).get(t))||(s=new ct,r.set(t,s)),s.set(e,n)):(V(),kt(e,t))}}function xt(e,t){const n=dt?.get(t)?.get(e);n&&!wt(e,n)&&(V(),kt(e,t))}function wt(e,t){if(e.length!==t.length)return!1;for(const s in t){var n,r=Number(s);if((n=Number.isInteger(r))&&(n=e[r],r=t[r],n=!(Number.isNaN(n)?Number.isNaN(r):n===r)),n)return!1}return!0}function vt(e){if(e&&dt?.has(e)){var t=e.u;if(t)for(let n=0;n<t.length;n++){const r=t[n];if(n===t.length-1&&ce(r))for(const t in r){const n=r[t];Array.isArray(n)&&xt(n,e)}else Array.isArray(r)&&xt(r,e)}}}function kt(e,t){dt?.get(t)?.delete(e)}function Nt(e,t,n){return e=It(e,t[0],t[1],n?1:2),t!==ft&&n&&Q(e,16384),e}function It(e,t,n,r){if(r=r??0,null==e&&(e=pt),pt=void 0,null==e){var s=96;n?(e=[n],s|=512):e=[],t&&(s=-33521665&s|(1023&t)<<15)}else{if(!Array.isArray(e))throw Error("narr");if(2048&(s=ee(e)))throw Error("farr");if(64&s)return e;if(1===r||2===r||(s|=64),n&&(s|=512,n!==e[0]))throw Error("mid");e:{if(r=(n=e).length){const e=r-1;if(ce(n[e])){if((t=e-(+!!(512&(s|=256))-1))>=1024)throw Error("pvtlmt");s=-33521665&s|(1023&t)<<15;break e}}if(t){if((t=Math.max(t,r-(+!!(512&s)-1)))>1024)throw Error("spvt");s=-33521665&s|(1023&t)<<15}}}return ne(e,s),e}const St={};let Tt=function(){try{return w(new class extends Map{constructor(){super()}}),!1}catch{return!0}}();class Et{constructor(){this.g=new Map}get(e){return this.g.get(e)}set(e,t){return this.g.set(e,t),this.size=this.g.size,this}delete(e){return e=this.g.delete(e),this.size=this.g.size,e}clear(){this.g.clear(),this.size=this.g.size}has(e){return this.g.has(e)}entries(){return this.g.entries()}keys(){return this.g.keys()}values(){return this.g.values()}forEach(e,t){return this.g.forEach(e,t)}[Symbol.iterator](){return this.entries()}}const Ct=Tt?(Object.setPrototypeOf(Et.prototype,Map.prototype),Object.defineProperties(Et.prototype,{size:{value:0,configurable:!0,enumerable:!0,writable:!0}}),Et):class extends Map{constructor(){super()}};function $t(e){return e}function At(e){if(2&e.M)throw Error("Cannot mutate an immutable Map")}var Rt=class extends Ct{constructor(e,t,n=$t,r=$t){super();let s=ee(e);s|=64,ne(e,s),this.M=s,this.T=t,this.S=n,this.Z=this.T?_t:r;for(let a=0;a<e.length;a++){const i=e[a],o=n(i[0],!1,!0);let u=i[1];t?void 0===u&&(u=null):u=r(i[1],!1,!0,void 0,void 0,s),super.set(o,u)}}pa(e=Dt){if(0!==this.size)return this.Y(e)}Y(e=Dt){const t=[],n=super.entries();for(var r;!(r=n.next()).done;)(r=r.value)[0]=e(r[0]),r[1]=e(r[1]),t.push(r);return t}clear(){At(this),super.clear()}delete(e){return At(this),super.delete(this.S(e,!0,!1))}entries(){var e=this.oa();return new me(e,Ft,this)}keys(){return this.Ia()}values(){var e=this.oa();return new me(e,Rt.prototype.get,this)}forEach(e,t){super.forEach((n,r)=>{e.call(t,this.get(r),r,this)})}set(e,t){return At(this),null==(e=this.S(e,!0,!1))?this:null==t?(super.delete(e),this):super.set(e,this.Z(t,!0,!0,this.T,!1,this.M))}Oa(e){const t=this.S(e[0],!1,!0);e=e[1],e=this.T?void 0===e?null:e:this.Z(e,!1,!0,void 0,!1,this.M),super.set(t,e)}has(e){return super.has(this.S(e,!1,!1))}get(e){e=this.S(e,!1,!1);const t=super.get(e);if(void 0!==t){var n=this.T;return n?((n=this.Z(t,!1,!0,n,this.ta,this.M))!==t&&super.set(e,n),n):t}}oa(){return Array.from(super.keys())}Ia(){return super.keys()}[Symbol.iterator](){return this.entries()}};function _t(e,t,n,r,s,a){return e=st(e,r,n,a),s&&(e=Gt(e)),e}function Dt(e){return e}function Ft(e){return[e,this.get(e)]}let Mt;function Ot(){return Mt||=new Rt(re([]),void 0,void 0,void 0,St)}function Lt(e,t,n,r,s){if(null!=e){if(Array.isArray(e))e=de(e)?void 0:s&&2&ee(e)?e:zt(e,t,n,void 0!==r,s);else if(ce(e)){const a={};for(let i in e)a[i]=Lt(e[i],t,n,r,s);e=a}else e=t(e,r);return e}}function zt(e,t,n,r,s){const a=r||n?ee(e):0;r=r?!!(32&a):void 0;const i=G(e);for(let e=0;e<i.length;e++)i[e]=Lt(i[e],t,n,r,s);return n&&(ye(i,e),n(a,i)),i}function Pt(e){return Lt(e,Bt,void 0,void 0,!1)}function Bt(e){return e.X===oe?e.toJSON():e instanceof Rt?e.pa(Pt):function(e){switch(typeof e){case"number":return isFinite(e)?e:String(e);case"bigint":return Te(e)?Number(e):String(e);case"boolean":return e?1:0;case"object":if(e)if(Array.isArray(e)){if(de(e))return}else{if(_(e))return E(e);if(e instanceof z){const t=e.g;return null==t?"":"string"==typeof t?t:e.g=E(t)}if(e instanceof Rt)return e.pa()}}return e}(e)}function Vt(e,t,n=ae){if(null!=e){if(S&&e instanceof Uint8Array)return t?e:new Uint8Array(e);if(Array.isArray(e)){var r=ee(e);return 2&r?e:(t&&=0===r||!!(32&r)&&!(64&r||!(16&r)),t?(ne(e,-12293&r|34),e):zt(e,Vt,4&r?ae:n,!0,!0))}return e.X===oe?(n=e.u,e=2&(r=te(n))?e:Ut(e,n,r,!0)):e instanceof Rt&&!(2&e.M)&&(n=re(e.Y(Vt)),e=new Rt(n,e.T,e.S,e.Z)),e}}function Ut(e,t,n,r){return vt(e),e=e.constructor,pt=t=Wt(t,n,r),t=new e(t),pt=void 0,t}function Wt(e,t,n){const r=n||2&t?ae:se,s=!!(32&t);return e=function(e,t,n){const r=G(e);var s=r.length;const a=256&t?r[s-1]:void 0;for(s+=a?-1:0,t=512&t?1:0;t<s;t++)r[t]=n(r[t]);if(a){t=r[t]={};for(const e in a)t[e]=n(a[e])}return ye(r,e),r}(e,t,e=>Vt(e,s,r)),Q(e,32|(n?2:0)),e}function Gt(e){const t=e.u,n=te(t);return 2&n?Ut(e,t,n,!1):e}function Ht(e,t,n,r){return!(4&t&&(null==n||(!r&&0===n&&(4096&t||8192&t)&&(e.constructor[Z]=1+(0|e.constructor[Z]))<5&&V(),0===n||n&t)))}function jt(e,t){return qt(e=e.u,te(e),t)}function Kt(e,t,n,r){if(!((t=r+(+!!(512&t)-1))<0||t>=e.length||t>=n))return e[t]}function qt(e,t,n,r){if(-1===n)return null;const s=t>>15&1023||536870912;if(!(n>=s)){var a=e.length;return r&&256&t&&null!=(r=e[a-1][n])?(Kt(e,t,s,n)&&null!=X&&((t=(e=B??={})[X]||0)>=4||(e[X]=t+1,V())),r):Kt(e,t,s,n)}return 256&t?e[e.length-1][n]:void 0}function Xt(e,t,n){const r=e.u;let s=te(r);return fe(s),Yt(r,s,t,n),e}function Yt(e,t,n,r){const s=t>>15&1023||536870912;if(n>=s){let a,i=t;if(256&t)a=e[e.length-1];else{if(null==r)return i;a=e[s+(+!!(512&t)-1)]={},i|=256}return a[n]=r,n<s&&(e[n+(+!!(512&t)-1)]=void 0),i!==t&&ne(e,i),i}return e[n+(+!!(512&t)-1)]=r,256&t&&n in(e=e[e.length-1])&&delete e[n],t}function Zt(e,t,n,r,s){var a=2&t;s=qt(e,t,n,s),Array.isArray(s)||(s=ie);const i=!(2&r);r=!(1&r);const o=!!(32&t);let u=ee(s);return 0!==u||!o||a||i?1&u||(u|=1,ne(s,u)):(u|=33,ne(s,u)),a?(e=!1,2&u||(re(s),e=!!(4&u)),(r||e)&&Object.freeze(s)):(a=!!(2&u)||!!(2048&u),r&&a?(s=G(s),a=1,o&&!i&&(a|=32),ne(s,a),Yt(e,t,n,s)):i&&32&u&&!a&&J(s,32)),s}function Qt(e,t){e=e.u;let n=te(e);const r=qt(e,n,t),s=He(r);return null!=s&&s!==r&&Yt(e,n,t,s),s}function Jt(e){e=e.u;let t=te(e);const n=qt(e,t,1),r=he(n,!0,!!(34&t));return null!=r&&r!==n&&Yt(e,t,1,r),r}function en(){return void 0===be?2:5}function tn(e,t,n,r,s,a){const i=e.u;let o=te(i);r=2&o?1:r,a=!!a,s=nn(i,o,t,s);var u=ee(s),l=s;if(xt(l,e),2!==r&&1!==r||kt(l,e),Ht(e,u,void 0,a)){4&u&&(s=G(s),u=xn(u,o),o=Yt(i,o,t,s));let e=l=0;for(;l<s.length;l++){const t=n(s[l]);null!=t&&(s[e++]=t)}e<l&&(s.length=e),u=-4097&(u=rn(u,o))|20,ne(s,u&=-8193),2&u&&Object.freeze(s)}let c;return 1===r||4===r&&32&u?sn(u)||(e=u,(u|=2)!==e&&ne(s,u),Object.freeze(s)):(n=5===r&&(!!(32&u)||sn(u)||!!ot?.get(s)),(2===r||n)&&sn(u)&&(s=G(s),u=wn(u=xn(u,o),o,a),ne(s,u),o=Yt(i,o,t,s)),sn(u)||(t=u,(u=wn(u,o,a))!==t&&ne(s,u)),n?(c=it(s),bt(s,e,!0)):2!==r||a||ot?.delete(s)),c||s}function nn(e,t,n,r){return e=qt(e,t,n,r),Array.isArray(e)?e:ie}function rn(e,t){return 0===e&&(e=xn(e,t)),1|e}function sn(e){return!!(2&e)&&!!(4&e)||!!(2048&e)}function an(e){e=G(e);for(let t=0;t<e.length;t++){const n=e[t]=G(e[t]);Array.isArray(n[1])&&(n[1]=re(n[1]))}return e}function on(e,t,n,r){e=e.u;let s=te(e);fe(s),Yt(e,s,t,("0"===r?0===Number(n):n===r)?void 0:n)}function un(e,t){var n=$a;return hn(ln(e=e.u),e,te(e),n)===t?t:-1}function ln(e){if(H)return e[Y]??(e[Y]=new Map);if(Y in e)return e[Y];const t=new Map;return Object.defineProperty(e,Y,{value:t}),t}function cn(e,t,n,r){const s=ln(e),a=hn(s,e,t,n);return a!==r&&(a&&(t=Yt(e,t,a)),s.set(n,r)),t}function hn(e,t,n,r){let s=e.get(r);if(null!=s)return s;s=0;for(let e=0;e<r.length;e++){const a=r[e];null!=qt(t,n,a)&&(0!==s&&(n=Yt(t,n,s)),s=a)}return e.set(r,s),s}function dn(e,t,n,r){let s,a=te(e);if(null!=(r=qt(e,a,n,r))&&r.X===oe)return(t=Gt(r))!==r&&Yt(e,a,n,t),t.u;if(Array.isArray(r)){const e=ee(r);s=2&e?Nt(Wt(r,e,!1),t,!0):64&e?r:Nt(s,t,!0)}else s=Nt(void 0,t,!0);return s!==r&&Yt(e,a,n,s),s}function pn(e,t,n,r){e=e.u;let s=te(e);return(t=st(r=qt(e,s,n,r),t,!1,s))!==r&&null!=t&&Yt(e,s,n,t),t}function fn(e,t,n,r=!1){if(null==(t=pn(e,t,n,r)))return t;if(e=e.u,!(2&(r=te(e)))){const s=Gt(t);s!==t&&Yt(e,r,n,t=s)}return t}function mn(e,t,n,r,s,a,i){const o=e.u;var u=!!(2&t);s=u?1:s,a=!!a,i&&=!u,u=nn(o,t,r);var l=ee(u),c=u;if(xt(c,e),2!==s&&1!==s||kt(c,e),!(c=!!(4&l))){var h=u,d=t;const e=!!(2&(l=rn(l,t)));e&&(d|=2);let r=!e,s=!0,a=0,i=0;for(;a<h.length;a++){const t=st(h[a],n,!1,d);if(t instanceof n){if(!e){const e=!!(2&ee(t.u));r&&=!e,s&&=e}h[i++]=t}}i<a&&(h.length=i),l|=4,l=s?16|l:-17&l,ne(h,l=r?8|l:-9&l),e&&Object.freeze(h)}if(i&&!(8&l||!u.length&&(1===s||4===s&&32&l))){for(sn(l)?(u=G(u),l=xn(l,t),t=Yt(o,t,r,u)):kt(u,e),n=u,i=l,h=0;h<n.length;h++)(l=n[h])!==(d=Gt(l))&&(n[h]=d);i|=8,i=n.length?-17&i:16|i,ne(n,i),l=i}let p;return 1===s||4===s&&32&l?sn(l)||(e=l,(l|=!u.length||16&l&&(!c||32&l)?2:2048)!==e&&ne(u,l),Object.freeze(u)):(c=5===s&&(!!(32&l)||sn(l)||!!ot?.get(u)),(2===s||c)&&sn(l)&&(u=G(u),l=wn(l=xn(l,t),t,a),ne(u,l),t=Yt(o,t,r,u)),sn(l)||(r=l,(l=wn(l,t,a))!==r&&ne(u,l)),c?(p=it(u),bt(u,e,!0)):2!==s||a||ot?.delete(u)),p||u}function gn(e,t,n){const r=te(e.u);return mn(e,r,t,n,en(),!1,!(2&r))}function yn(e,t,n,r){return null==r&&(r=void 0),Xt(e,n,r)}function bn(e,t,n,r){null==r&&(r=void 0);e:{e=e.u;let s=te(e);if(fe(s),null==r){const r=ln(e);if(hn(r,e,s,n)!==t)break e;r.set(n,0)}else s=cn(e,s,n,t);Yt(e,s,t,r)}}function xn(e,t){return-2049&(2&t?2|e:-3&e)|32}function wn(e,t,n){return 32&t&&n||(e&=-33),e}function vn(e,t,n,r){const s=te(e.u);fe(s),e=mn(e,s,n,t,2,!0),r=null!=r?r:new n,e.push(r),2&ee(r.u)?J(e,8):J(e,16)}function kn(e,t){return e??t}function Nn(e,t){return Xe(jt(e,t))}function In(e,t){return kn(Qt(e,t),0)}function Sn(e,t){return kn(rt(jt(e,t)),"")}function Tn(e,t,n){if(null!=n&&"boolean"!=typeof n)throw e=typeof n,Error(`Expected boolean but got ${"object"!=e?e:n?Array.isArray(n)?"array":e:"null"}: ${n}`);Xt(e,t,n)}function En(e,t,n){if(null!=n){if("number"!=typeof n)throw U("int32");if(!Number.isFinite(n))throw U("int32");n|=0}Xt(e,t,n)}function Cn(e,t,n){if(null!=n&&"number"!=typeof n)throw Error(`Value of float/double field must be a number, found ${typeof n}: ${n}`);Xt(e,t,n)}function $n(e,t,n){{const o=e.u;let u=te(o);if(fe(u),null==n)Yt(o,u,t);else{n=ut?.get(n)||n;var r,s=ee(n),a=s,i=!!(2&s)||Object.isFrozen(n);if((r=!i)&&((r=void 0===we)||(r=!!f&&void 0!==xe)),Ht(e,s)){s=21,i&&(n=G(n),a=0,s=wn(s=xn(s,u),u,!0));for(let e=0;e<n.length;e++)n[e]=tt(n[e])}r?(n=G(n),a=0,s=wn(s=xn(s,u),u,!0)):i||bt(n,e),s!==a&&ne(n,s),Yt(o,u,t,n)}}}function An(e,t,n){fe(te(e.u)),tn(e,t,rt,2,void 0,!0).push(tt(n))}function Rn(e,t){return Error(`Invalid wire type: ${e} (at position ${t})`)}function _n(){return Error("Failed to read varint, encoding is invalid.")}function Dn(e,t){return Error(`Tried to read past the end of the data ${t} > ${e}`)}function Fn(e){if("string"==typeof e)return{buffer:R(e),O:!1};if(Array.isArray(e))return{buffer:new Uint8Array(e),O:!1};if(e.constructor===Uint8Array)return{buffer:e,O:!1};if(e.constructor===ArrayBuffer)return{buffer:new Uint8Array(e),O:!1};if(e.constructor===z)return{buffer:L(e)||new Uint8Array(0),O:!0};if(e instanceof Uint8Array)return{buffer:new Uint8Array(e.buffer,e.byteOffset,e.byteLength),O:!1};throw Error("Type not convertible to a Uint8Array, expected a Uint8Array, an ArrayBuffer, a base64 encoded string, a ByteString or an Array of numbers")}function Mn(e,t){let n,r=0,s=0,a=0;const i=e.h;let o=e.g;do{n=i[o++],r|=(127&n)<<a,a+=7}while(a<32&&128&n);for(a>32&&(s|=(127&n)>>4),a=3;a<32&&128&n;a+=7)n=i[o++],s|=(127&n)<<a;if(Wn(e,o),n<128)return t(r>>>0,s>>>0);throw _n()}function On(e){let t=0,n=e.g;const r=n+10,s=e.h;for(;n<r;){const r=s[n++];if(t|=r,!(128&r))return Wn(e,n),!!(127&t)}throw _n()}function Ln(e){const t=e.h;let n=e.g,r=t[n++],s=127&r;if(128&r&&(r=t[n++],s|=(127&r)<<7,128&r&&(r=t[n++],s|=(127&r)<<14,128&r&&(r=t[n++],s|=(127&r)<<21,128&r&&(r=t[n++],s|=r<<28,128&r&&128&t[n++]&&128&t[n++]&&128&t[n++]&&128&t[n++]&&128&t[n++])))))throw _n();return Wn(e,n),s}function zn(e){return Ln(e)>>>0}function Pn(e){var t=e.h;const n=e.g,r=t[n],s=t[n+1],a=t[n+2];return t=t[n+3],Wn(e,e.g+4),(r|s<<8|a<<16|t<<24)>>>0}function Bn(e){var t=Pn(e);e=2*(t>>31)+1;const n=t>>>23&255;return t&=8388607,255==n?t?NaN:e*(1/0):0==n?1401298464324817e-60*e*t:e*Math.pow(2,n-150)*(t+8388608)}function Vn(e){return Ln(e)}function Un(e,t,{ca:n=!1}={}){e.ca=n,t&&(t=Fn(t),e.h=t.buffer,e.m=t.O,e.j=0,e.l=e.h.length,e.g=e.j)}function Wn(e,t){if(e.g=t,t>e.l)throw Dn(e.l,t)}function Gn(e,t){if(t<0)throw Error(`Tried to read a negative byte length: ${t}`);const n=e.g,r=n+t;if(r>e.l)throw Dn(t,e.l-n);return e.g=r,n}function Hn(e,t){if(0==t)return O();var n=Gn(e,t);return e.ca&&e.m?n=e.h.subarray(n,n+t):(e=e.h,n=n===(t=n+t)?new Uint8Array(0):_e?e.slice(n,t):new Uint8Array(e.subarray(n,t))),0==n.length?O():new z(n,D)}Rt.prototype.toJSON=void 0,Rt.prototype.Ja=ue;var jn=[];function Kn(e){var t=e.g;if(t.g==t.l)return!1;e.l=e.g.g;var n=zn(e.g);if(t=n>>>3,!((n&=7)>=0&&n<=5))throw Rn(n,e.l);if(t<1)throw Error(`Invalid field number: ${t} (at position ${e.l})`);return e.m=t,e.h=n,!0}function qn(e){switch(e.h){case 0:0!=e.h?qn(e):On(e.g);break;case 1:Wn(e=e.g,e.g+8);break;case 2:if(2!=e.h)qn(e);else{var t=zn(e.g);Wn(e=e.g,e.g+t)}break;case 5:Wn(e=e.g,e.g+4);break;case 3:for(t=e.m;;){if(!Kn(e))throw Error("Unmatched start-group tag: stream EOF");if(4==e.h){if(e.m!=t)throw Error("Unmatched end-group tag");break}qn(e)}break;default:throw Rn(e.h,e.l)}}function Xn(e,t,n){const r=e.g.l,s=zn(e.g),a=e.g.g+s;let i=a-r;if(i<=0&&(e.g.l=a,n(t,e,void 0,void 0,void 0),i=a-e.g.g),i)throw Error(`Message parsing ended unexpectedly. Expected to read ${s} bytes, instead read ${s-i} bytes, either the data ended unexpectedly or the message misreported its own length`);return e.g.g=a,e.g.l=r,t}function Yn(e){var t=zn(e.g),n=Gn(e=e.g,t);if(e=e.h,u){var r,l=e;(r=o)||(r=o=new TextDecoder("utf-8",{fatal:!0})),t=n+t,l=0===n&&t===l.length?l:l.subarray(n,t);try{var c=r.decode(l)}catch(e){if(void 0===i){try{r.decode(new Uint8Array([128]))}catch(e){}try{r.decode(new Uint8Array([97])),i=!0}catch(e){i=!1}}throw!i&&(o=void 0),e}}else{t=(c=n)+t,n=[];let i,o=null;for(;c<t;){var h=e[c++];h<128?n.push(h):h<224?c>=t?s():(i=e[c++],h<194||128!=(192&i)?(c--,s()):n.push((31&h)<<6|63&i)):h<240?c>=t-1?s():(i=e[c++],128!=(192&i)||224===h&&i<160||237===h&&i>=160||128!=(192&(r=e[c++]))?(c--,s()):n.push((15&h)<<12|(63&i)<<6|63&r)):h<=244?c>=t-2?s():(i=e[c++],128!=(192&i)||i-144+(h<<28)>>30||128!=(192&(r=e[c++]))||128!=(192&(l=e[c++]))?(c--,s()):(h=(7&h)<<18|(63&i)<<12|(63&r)<<6|63&l,h-=65536,n.push(55296+(h>>10&1023),56320+(1023&h)))):s(),n.length>=8192&&(o=a(o,n),n.length=0)}c=a(o,n)}return c}function Zn(e){const t=zn(e.g);return Hn(e.g,t)}function Qn(e,t,n){var r=zn(e.g);for(r=e.g.g+r;e.g.g<r;)n.push(t(e.g))}var Jn=[];let er;function tr(e,t,n){t.g?t.m(e,t.g,t.h,n,!0):t.m(e,t.h,n,!0)}var nr=class{constructor(e,t){this.u=It(e,t)}toJSON(){return rr(this)}l(){var e=Ii;return e.g?e.l(this,e.g,e.h,!0):e.l(this,e.h,e.defaultValue,!0)}clone(){const e=this.u;return Ut(this,e,te(e),!1)}O(){return!!(2&ee(this.u))}};function rr(e){vt(e),e=er?e.u:zt(e.u,Bt,void 0,void 0,!1);{var t=!er;let l=e.length;if(l){var n=e[l-1],r=ce(n);r?l--:n=void 0;var s=e;if(r){e:{var a,i=n,o=!1;if(i)for(let e in i)isNaN(+e)?(a??={})[e]=i[e]:(r=i[e],Array.isArray(r)&&(de(r)||le(r)&&0===r.size)&&(r=null),null==r&&(o=!0),null!=r&&((a??={})[e]=r));if(o||(a=i),a)for(let e in a){o=a;break e}o=null}i=null==o?null!=n:o!==n}for(;l>0&&(null==(a=s[l-1])||de(a)||le(a)&&0===a.size);l--)var u=!0;(s!==e||i||u)&&(t?(u||i||o)&&(s.length=l):s=Array.prototype.slice.call(s,0,l),o&&s.push(o)),u=s}else u=e}return u}function sr(e){return e?/^\d+$/.test(e)?(We(e),new ar(Fe,Me)):null:ir||=new ar(0,0)}nr.prototype.X=oe,nr.prototype.toString=function(){try{return er=!0,rr(this).toString()}finally{er=!1}};var ar=class{constructor(e,t){this.h=e>>>0,this.g=t>>>0}};let ir;function or(e){return e?/^-?\d+$/.test(e)?(We(e),new ur(Fe,Me)):null:lr||=new ur(0,0)}var ur=class{constructor(e,t){this.h=e>>>0,this.g=t>>>0}};let lr;function cr(e,t,n){for(;n>0||t>127;)e.g.push(127&t|128),t=(t>>>7|n<<25)>>>0,n>>>=7;e.g.push(t)}function hr(e,t){for(;t>127;)e.g.push(127&t|128),t>>>=7;e.g.push(t)}function dr(e,t){if(t>=0)hr(e,t);else{for(let n=0;n<9;n++)e.g.push(127&t|128),t>>=7;e.g.push(1)}}function pr(e,t){e.g.push(t>>>0&255),e.g.push(t>>>8&255),e.g.push(t>>>16&255),e.g.push(t>>>24&255)}function fr(e,t){0!==t.length&&(e.l.push(t),e.h+=t.length)}function mr(e,t,n){hr(e.g,8*t+n)}function gr(e,t){return mr(e,t,2),t=e.g.end(),fr(e,t),t.push(e.h),t}function yr(e,t){var n=t.pop();for(n=e.h+e.g.length()-n;n>127;)t.push(127&n|128),n>>>=7,e.h++;t.push(n),e.h++}function br(e,t,n){mr(e,t,2),hr(e.g,n.length),fr(e,e.g.end()),fr(e,n)}function xr(e,t,n,r){null!=n&&(t=gr(e,t),r(n,e),yr(e,t))}function wr(){const e=class{constructor(){throw Error()}};return Object.setPrototypeOf(e,e.prototype),e}var vr=wr(),kr=wr(),Nr=wr(),Ir=wr(),Sr=wr(),Tr=wr(),Er=wr(),Cr=wr(),$r=class{constructor(e,t,n){this.g=e,this.h=t,e=vr,this.l=!!e&&n===e||!1}};function Ar(e,t){return new $r(e,t,vr)}function Rr(e,t,n,r,s){xr(e,n,Ur(t,r),s)}const _r=Ar(function(e,t,n,r,s){return 2===e.h&&(Xn(e,dn(t,r,n),s),!0)},Rr),Dr=Ar(function(e,t,n,r,s){return 2===e.h&&(Xn(e,dn(t,r,n,!0),s),!0)},Rr);var Fr=Symbol(),Mr=Symbol(),Or=Symbol(),Lr=Symbol();let zr,Pr;function Br(e,t,n,r){var s=r[e];if(s)return s;(s={}).W=function(e){switch(typeof e){case"boolean":return ft||=[0,void 0,!0];case"number":return e>0?void 0:0===e?mt||=[0,void 0]:[-e,void 0];case"string":return[0,e];case"object":return e}}(r[0]);var a=r[1];let i=1;a&&a.constructor===Object&&(s.ia=a,"function"==typeof(a=r[++i])&&(s.na=!0,zr??=a,Pr??=r[i+1],a=r[i+=2]));const o={};for(;a&&Array.isArray(a)&&a.length&&"number"==typeof a[0]&&a[0]>0;){for(var u=0;u<a.length;u++)o[a[u]]=a;a=r[++i]}for(u=1;void 0!==a;){let e;"number"==typeof a&&(u+=a,a=r[++i]);var l=void 0;if(a instanceof $r?e=a:(e=_r,i--),e?.l){a=r[++i],l=r;var c=i;"function"==typeof a&&(a=a(),l[c]=a),l=a}for(c=u+1,"number"==typeof(a=r[++i])&&a<0&&(c-=a,a=r[++i]);u<c;u++){const r=o[u];l?n(s,u,e,l,r):t(s,u,e,r)}}return r[e]=s}function Vr(e){return Array.isArray(e)?e[0]instanceof $r?e:[Dr,e]:[e,void 0]}function Ur(e,t){return e instanceof nr?(vt(e),e.u):Array.isArray(e)?Nt(e,t,!1):void 0}function Wr(e,t,n,r){const s=n.g;e[t]=r?(e,t,n)=>s(e,t,n,r):s}function Gr(e,t,n,r,s){const a=n.g;let i,o;e[t]=(e,t,n)=>a(e,t,n,o||=Br(Mr,Wr,Gr,r).W,i||=Hr(r),s)}function Hr(e){let t=e[Or];if(null!=t)return t;const n=Br(Mr,Wr,Gr,e);return t=n.na?(e,t)=>zr(e,t,n):(e,t)=>{const r=te(e);for(;Kn(t)&&4!=t.h;){var s=t.m,a=n[s];if(null==a){var i=n.ia;i&&(i=i[s])&&null!=(i=jr(i))&&(a=n[s]=i)}null!=a&&a(t,e,s)||(s=(a=t).l,qn(a),a.ha?a=void 0:(i=a.g.g-s,a.g.g=s,a=Hn(a.g,i)),s=e,a&&(ge||=Symbol(),(i=s[ge])?i.push(a):s[ge]=[a]))}return 16384&r&&re(e),!0},e[Or]=t}function jr(e){const t=(e=Vr(e))[0].g;if(e=e[1]){const n=Hr(e),r=Br(Mr,Wr,Gr,e).W;return(e,s,a)=>t(e,s,a,r,n)}return t}function Kr(e,t,n){e[t]=n.h}function qr(e,t,n,r){let s,a;const i=n.h;e[t]=(e,t,n)=>i(e,t,n,a||=Br(Fr,Kr,qr,r).W,s||=Xr(r))}function Xr(e){let t=e[Lr];if(!t){const n=Br(Fr,Kr,qr,e);t=(e,t)=>Yr(e,t,n),e[Lr]=t}return t}function Yr(e,t,n){for(var r=ee(e),s=+!!(512&r)-1,a=e.length,i=512&r?1:0,o=a+(256&r?-1:0);i<o;i++){const r=e[i];if(null==r)continue;const a=i-s,o=Zr(n,a);o&&o(t,r,a)}if(256&r){r=e[a-1];for(const e in r)s=+e,Number.isNaN(s)||null!=(a=r[s])&&(o=Zr(n,s))&&o(t,a,s)}if(e=ge?e[ge]:void 0)for(fr(t,t.g.end()),n=0;n<e.length;n++)fr(t,L(e[n])||new Uint8Array(0))}function Zr(e,t){var n=e[t];if(n)return n;if((n=e.ia)&&(n=n[t])){var r=(n=Vr(n))[0].h;if(n=n[1]){const t=Xr(n),s=Br(Fr,Kr,qr,n).W;n=e.na?Pr(s,t):(e,n,a)=>r(e,n,a,s,t)}else n=r;return e[t]=n}}function Qr(e,t){if(Array.isArray(t)){var n=ee(t);if(4&n)return t;for(var r=0,s=0;r<t.length;r++){const n=e(t[r]);null!=n&&(t[s++]=n)}return s<r&&(t.length=s),ne(t,-12289&n|5),2&n&&Object.freeze(t),t}}function Jr(e,t,n){return new $r(e,t,n)}function es(e,t,n){return new $r(e,t,n)}function ts(e,t,n){Yt(e,te(e),t,n)}var ns=Ar(function(e,t,n,r,s){return 2===e.h&&(e=Xn(e,Nt([void 0,void 0],r,!0),s),fe(r=te(t)),(s=qt(t,r,n))instanceof Rt?2&s.M?((s=s.Y()).push(e),Yt(t,r,n,s)):s.Oa(e):Array.isArray(s)?(2&ee(s)&&Yt(t,r,n,s=an(s)),s.push(e)):Yt(t,r,n,[e]),!0)},function(e,t,n,r,s){if(t instanceof Rt)t.forEach((t,a)=>{xr(e,n,Nt([a,t],r,!1),s)});else if(Array.isArray(t))for(let a=0;a<t.length;a++){const i=t[a];Array.isArray(i)&&xr(e,n,Nt(i,r,!1),s)}});function rs(e,t,n){if(t=function(e){if(null==e)return e;const t=typeof e;if("bigint"===t)return String(BigInt.asIntN(64,e));if(qe(e)){if("string"===t)return Je(e);if("number"===t)return Qe(e)}}(t),null!=t&&("string"==typeof t&&or(t),null!=t))switch(mr(e,n,0),typeof t){case"number":e=e.g,Le(t),cr(e,Fe,Me);break;case"bigint":n=BigInt.asUintN(64,t),n=new ur(Number(n&BigInt(4294967295)),Number(n>>BigInt(32))),cr(e.g,n.h,n.g);break;default:n=or(t),cr(e.g,n.h,n.g)}}function ss(e,t,n){null!=(t=Xe(t))&&null!=t&&(mr(e,n,0),dr(e.g,t))}function as(e,t,n){null!=(t=je(t))&&(mr(e,n,0),e.g.g.push(t?1:0))}function is(e,t,n){null!=(t=rt(t))&&br(e,n,h(t))}function os(e,t,n,r,s){xr(e,n,Ur(t,r),s)}function us(e,t,n){null!=(t=null==t||"string"==typeof t||_(t)||t instanceof z?t:void 0)&&br(e,n,Fn(t).buffer)}function ls(e,t,n){return(5===e.h||2===e.h)&&(t=Zt(t,te(t),n,2,!1),2==e.h?Qn(e,Bn,t):t.push(Bn(e.g)),!0)}var cs=Jr(function(e,t,n){if(1!==e.h)return!1;var r=e.g;e=Pn(r);const s=Pn(r);r=2*(s>>31)+1;const a=s>>>20&2047;return e=4294967296*(1048575&s)+e,ts(t,n,2047==a?e?NaN:r*(1/0):0==a?5e-324*r*e:r*Math.pow(2,a-1075)*(e+4503599627370496)),!0},function(e,t,n){null!=(t=He(t))&&(mr(e,n,1),e=e.g,(n=De||=new DataView(new ArrayBuffer(8))).setFloat64(0,+t,!0),Fe=n.getUint32(0,!0),Me=n.getUint32(4,!0),pr(e,Fe),pr(e,Me))},wr()),hs=Jr(function(e,t,n){return 5===e.h&&(ts(t,n,Bn(e.g)),!0)},function(e,t,n){null!=(t=He(t))&&(mr(e,n,5),e=e.g,ze(t),pr(e,Fe))},Tr),ds=es(ls,function(e,t,n){if(null!=(t=Qr(He,t)))for(let i=0;i<t.length;i++){var r=e,s=n,a=t[i];null!=a&&(mr(r,s,5),r=r.g,ze(a),pr(r,Fe))}},Tr),ps=es(ls,function(e,t,n){if(null!=(t=Qr(He,t))&&t.length){mr(e,n,2),hr(e.g,4*t.length);for(let r=0;r<t.length;r++)n=e.g,ze(t[r]),pr(n,Fe)}},Tr),fs=Jr(function(e,t,n){return 0===e.h&&(ts(t,n,Mn(e.g,Be)),!0)},rs,Sr),ms=Jr(function(e,t,n){return 0===e.h&&(ts(t,n,0===(e=Mn(e.g,Be))?void 0:e),!0)},rs,Sr),gs=Jr(function(e,t,n){return 0===e.h&&(ts(t,n,Mn(e.g,Pe)),!0)},function(e,t,n){if(null!=(t=function(e){if(null==e)return e;var t=typeof e;if("bigint"===t)return String(BigInt.asUintN(64,e));if(qe(e)){if("string"===t)return t=Math.trunc(Number(e)),Number.isSafeInteger(t)&&t>=0?e=String(t):(-1!==(t=e.indexOf("."))&&(e=e.substring(0,t)),Ze(e)||(We(e),e=Ve(Fe,Me))),e;if("number"===t)return(e=Math.trunc(e))>=0&&Number.isSafeInteger(e)?e:function(e){if(e<0){Le(e);const t=Ve(Fe,Me);return e=Number(t),Number.isSafeInteger(e)?e:t}return Ze(String(e))?e:(Le(e),Pe(Fe,Me))}(e)}}(t))&&("string"==typeof t&&sr(t),null!=t))switch(mr(e,n,0),typeof t){case"number":e=e.g,Le(t),cr(e,Fe,Me);break;case"bigint":n=BigInt.asUintN(64,t),n=new ar(Number(n&BigInt(4294967295)),Number(n>>BigInt(32))),cr(e.g,n.h,n.g);break;default:n=sr(t),cr(e.g,n.h,n.g)}},wr()),ys=Jr(function(e,t,n){return 0===e.h&&(ts(t,n,Ln(e.g)),!0)},ss,Ir),bs=es(function(e,t,n){return(0===e.h||2===e.h)&&(t=Zt(t,te(t),n,2,!1),2==e.h?Qn(e,Ln,t):t.push(Ln(e.g)),!0)},function(e,t,n){if(null!=(t=Qr(Xe,t))&&t.length){n=gr(e,n);for(let n=0;n<t.length;n++)dr(e.g,t[n]);yr(e,n)}},Ir),xs=Jr(function(e,t,n){return 0===e.h&&(ts(t,n,0===(e=Ln(e.g))?void 0:e),!0)},ss,Ir),ws=Jr(function(e,t,n){return 0===e.h&&(ts(t,n,On(e.g)),!0)},as,kr),vs=Jr(function(e,t,n){return 0===e.h&&(ts(t,n,!1===(e=On(e.g))?void 0:e),!0)},as,kr),ks=es(function(e,t,n){if(2!==e.h)return!1;e=Yn(e);const r=te(t);return fe(r),Zt(t,r,n,2).push(e),!0},function(e,t,n){if(null!=(t=Qr(rt,t)))for(let i=0;i<t.length;i++){var r=e,s=n,a=t[i];null!=a&&br(r,s,h(a))}},Nr),Ns=Jr(function(e,t,n){return 2===e.h&&(ts(t,n,""===(e=Yn(e))?void 0:e),!0)},is,Nr),Is=Jr(function(e,t,n){return 2===e.h&&(ts(t,n,Yn(e)),!0)},is,Nr),Ss=function(e,t,n=vr){return new $r(e,t,n)}(function(e,t,n,r,s){if(2!==e.h)return!1;r=Nt(void 0,r,!0);let a=te(t);fe(a);let i=Zt(t,a,n,3);return a=te(t),4&ee(i)&&(i=G(i),ne(i,-2079&ee(i)|1),Yt(t,a,n,i)),i.push(r),Xn(e,r,s),!0},function(e,t,n,r,s){if(Array.isArray(t))for(let a=0;a<t.length;a++)os(e,t[a],n,r,s)}),Ts=Ar(function(e,t,n,r,s,a){return 2===e.h&&(cn(t,ee(t),a,n),Xn(e,t=dn(t,r,n),s),!0)},os),Es=Jr(function(e,t,n){return 2===e.h&&(ts(t,n,Zn(e)),!0)},us,Er),Cs=es(function(e,t,n){return(0===e.h||2===e.h)&&(t=Zt(t,te(t),n,2,!1),2==e.h?Qn(e,zn,t):t.push(zn(e.g)),!0)},function(e,t,n){if(null!=(t=Qr(Ye,t)))for(let i=0;i<t.length;i++){var r=e,s=n,a=t[i];null!=a&&(mr(r,s,0),hr(r.g,a))}},wr()),$s=Jr(function(e,t,n){return 0===e.h&&(ts(t,n,Ln(e.g)),!0)},function(e,t,n){null!=(t=Xe(t))&&(t=parseInt(t,10),mr(e,n,0),dr(e.g,t))},Cr);class As{constructor(e,t){this.h=e,this.g=t,this.l=fn,this.m=yn,this.defaultValue=void 0}}function Rs(e,t){return new As(e,t)}function _s(e,t){return(n,r)=>{if(Jn.length){const e=Jn.pop();e.o(r),Un(e.g,n,r),n=e}else n=new class{constructor(e,t){if(jn.length){const n=jn.pop();Un(n,e,t),e=n}else e=new class{constructor(e,t){this.h=null,this.m=!1,this.g=this.l=this.j=0,Un(this,e,t)}clear(){this.h=null,this.m=!1,this.g=this.l=this.j=0,this.ca=!1}}(e,t);this.g=e,this.l=this.g.g,this.h=this.m=-1,this.o(t)}o({ha:e=!1}={}){this.ha=e}}(n,r);try{const r=new e,a=r.u;Hr(t)(a,n);var s=r}finally{n.g.clear(),n.m=-1,n.h=-1,Jn.length<100&&Jn.push(n)}return s}}function Ds(e){return function(){vt(this);const t=new class{constructor(){this.l=[],this.h=0,this.g=new class{constructor(){this.g=[]}length(){return this.g.length}end(){const e=this.g;return this.g=[],e}}}};Yr(this.u,t,Br(Fr,Kr,qr,e)),fr(t,t.g.end());const n=new Uint8Array(t.h),r=t.l,s=r.length;let a=0;for(let e=0;e<s;e++){const t=r[e];n.set(t,a),a+=t.length}return t.l=[n],n}}var Fs=class extends nr{constructor(e){super(e)}},Ms=[0,Ns,Jr(function(e,t,n){return 2===e.h&&(ts(t,n,(e=Zn(e))===O()?void 0:e),!0)},function(e,t,n){if(null!=t){if(t instanceof nr){const r=t.Ra;return void(r&&(t=r(t),null!=t&&br(e,n,Fn(t).buffer)))}if(Array.isArray(t))return}us(e,t,n)},Er)];let Os,Ls=globalThis.trustedTypes;function zs(e){void 0===Os&&(Os=function(){let e=null;if(!Ls)return e;try{const t=e=>e;e=Ls.createPolicy("goog#html",{createHTML:t,createScript:t,createScriptURL:t})}catch(e){}return e}());var t=Os;return new class{constructor(e){this.g=e}toString(){return this.g+""}}(t?t.createScriptURL(e):e)}function Ps(e,...t){if(0===t.length)return zs(e[0]);let n=e[0];for(let r=0;r<t.length;r++)n+=encodeURIComponent(t[r])+e[r+1];return zs(n)}var Bs=[0,ys,$s,ws,-1,bs,$s,-1],Vs=class extends nr{constructor(){super()}},Us=[0,ws,Is,ws,$s,-1,es(function(e,t,n){return(0===e.h||2===e.h)&&(t=Zt(t,te(t),n,2,!1),2==e.h?Qn(e,Vn,t):t.push(Ln(e.g)),!0)},function(e,t,n){if(null!=(t=Qr(Xe,t))&&t.length){n=gr(e,n);for(let n=0;n<t.length;n++)dr(e.g,t[n]);yr(e,n)}},Cr),Is,-1,[0,ws,-1],$s,ws,-1],Ws=[0,Is,-2],Gs=class extends nr{constructor(){super()}},Hs=[0],js=[0,ys,ws,1,ws,-3],Ks=class extends nr{constructor(e){super(e,2)}},qs={};qs[336783863]=[0,Is,ws,-1,ys,[0,[1,2,3,4,5,6,7],Ts,Hs,Ts,Us,Ts,Ws,Ts,js,Ts,Bs,Ts,[0,Is,-2],Ts,[0,Is,$s]],[0,Is],ws,[0,[1,3],[2,4],Ts,[0,bs],-1,Ts,[0,ks],-1,Ss,[0,Is,-1]],Is];var Xs=[0,ms,-1,vs,-3,ms,bs,Ns,xs,ms,-1,vs,xs,vs,-2,Ns];function Ys(e,t){on(e,2,nt(t),"")}function Zs(e,t){An(e,3,t)}function Qs(e,t){An(e,4,t)}var Js=class extends nr{constructor(e){super(e,500)}o(e){return yn(this,0,7,e)}},ea=[-1,{}],ta=[0,Is,1,ea],na=[0,Is,ks,ea];function ra(e,t){vn(e,1,Js,t)}function sa(e,t){An(e,10,t)}function aa(e,t){An(e,15,t)}var ia=class extends nr{constructor(e){super(e,500)}o(e){return yn(this,0,1001,e)}},oa=[-500,Ss,[-500,Ns,-1,ks,-3,[-2,qs,ws],Ss,Ms,xs,-1,ta,na,Ss,[0,Ns,vs],Ns,Xs,xs,ks,987,ks],4,Ss,[-500,Is,-1,[-1,{}],998,Is],Ss,[-500,Is,ks,-1,[-2,{},ws],997,ks,-1],xs,Ss,[-500,Is,ks,ea,998,ks],ks,xs,ta,na,Ss,[0,Ns,-1,ea],ks,-2,Xs,Ns,-1,vs,979,ea,Ss,Ms];ia.prototype.g=Ds(oa);var ua=_s(ia,oa),la=class extends nr{constructor(e){super(e)}},ca=class extends nr{constructor(e){super(e)}g(){return gn(this,la,1)}},ha=[0,Ss,[0,ys,hs,Is,-1]],da=_s(ca,ha),pa=class extends nr{constructor(e){super(e)}},fa=class extends nr{constructor(e){super(e)}},ma=class extends nr{constructor(e){super(e)}h(){return fn(this,pa,2)}g(){return gn(this,fa,5)}},ga=_s(class extends nr{constructor(e){super(e)}},[0,ks,bs,ps,[0,$s,[0,ys,-3],[0,hs,-3],[0,ys,-1,[0,Ss,[0,ys,-2]]],Ss,[0,hs,-1,Is,hs]],Is,-1,fs,Ss,[0,ys,hs],ks,fs]),ya=class extends nr{constructor(e){super(e)}},ba=_s(class extends nr{constructor(e){super(e)}},[0,Ss,[0,hs,-4]]),xa=class extends nr{constructor(e){super(e)}},wa=_s(class extends nr{constructor(e){super(e)}},[0,Ss,[0,hs,-4]]),va=class extends nr{constructor(e){super(e)}},ka=[0,ys,-1,ps,$s],Na=class extends nr{constructor(){super()}};Na.prototype.g=Ds([0,hs,-4,fs]);var Ia=class extends nr{constructor(e){super(e)}},Sa=_s(class extends nr{constructor(e){super(e)}},[0,Ss,[0,1,ys,Is,ha],fs]),Ta=class extends nr{constructor(e){super(e)}},Ea=class extends nr{constructor(e){super(e)}qa(){const e=Jt(this);return null==e?O():e}},Ca=class extends nr{constructor(e){super(e)}},$a=[1,2],Aa=_s(class extends nr{constructor(e){super(e)}},[0,Ss,[0,$a,Ts,[0,ps],Ts,[0,Es],ys,Is],fs]),Ra=class extends nr{constructor(e){super(e)}},_a=[0,Is,ys,hs,ks,-1],Da=class extends nr{constructor(e){super(e)}},Fa=[0,ws,-1],Ma=class extends nr{constructor(e){super(e)}},Oa=[1,2,3,4,5],La=class extends nr{constructor(e){super(e)}g(){return null!=Jt(this)}h(){return null!=rt(jt(this,2))}},za=class extends nr{constructor(e){super(e)}g(){return je(jt(this,2))??!1}},Pa=[0,Es,Is,[0,ys,fs,-1],[0,gs,fs]],Ba=[0,Pa,ws,[0,Oa,Ts,js,Ts,Us,Ts,Bs,Ts,Hs,Ts,Ws],$s],Va=class extends nr{constructor(e){super(e)}},Ua=[0,Ba,hs,-1,ys],Wa=Rs(502141897,Va);qs[502141897]=Ua;var Ga=_s(class extends nr{constructor(e){super(e)}},[0,[0,$s,-1,ds,Cs],ka]),Ha=class extends nr{constructor(e){super(e)}},ja=class extends nr{constructor(e){super(e)}},Ka=[0,Ba,hs,[0,Ba],ws],qa=[0,Ba,Ua,Ka,hs,[0,[0,Pa]]],Xa=Rs(508968150,ja);qs[508968150]=qa,qs[508968149]=Ka;var Ya=class extends nr{constructor(e){super(e)}},Za=Rs(513916220,Ya);qs[513916220]=[0,Ba,qa,ys];var Qa=class extends nr{constructor(e){super(e)}h(){return fn(this,Ra,2)}g(){Xt(this,2)}},Ja=[0,Ba,_a];qs[478825465]=Ja;var ei=class extends nr{constructor(e){super(e)}},ti=class extends nr{constructor(e){super(e)}},ni=class extends nr{constructor(e){super(e)}},ri=class extends nr{constructor(e){super(e)}},si=class extends nr{constructor(e){super(e)}},ai=[0,Ba,[0,Ba],Ja,-1],ii=[0,Ba,hs,ys],oi=[0,Ba,hs],ui=[0,Ba,ii,oi,hs],li=Rs(479097054,si);qs[479097054]=[0,Ba,ui,ai],qs[463370452]=ai,qs[464864288]=ii;var ci=Rs(462713202,ri);qs[462713202]=ui,qs[474472470]=oi;var hi=class extends nr{constructor(e){super(e)}},di=class extends nr{constructor(e){super(e)}},pi=class extends nr{constructor(e){super(e)}},fi=class extends nr{constructor(){super()}},mi=[0,Ba,hs,-1,ys],gi=[0,Ba,hs,ws];fi.prototype.g=Ds([0,Ba,oi,[0,Ba],Ua,Ka,mi,gi]);var yi=class extends nr{constructor(e){super(e)}},bi=Rs(456383383,yi);qs[456383383]=[0,Ba,_a];var xi=class extends nr{constructor(e){super(e)}},wi=Rs(476348187,xi);qs[476348187]=[0,Ba,Fa];var vi=class extends nr{constructor(e){super(e)}},ki=class extends nr{constructor(e){super(e)}},Ni=[0,$s,-1],Ii=Rs(458105876,class extends nr{constructor(e){super(e)}g(){var e=this.u;const t=te(e),n=2&t;return e=function(e,t,n){var r=ki;const s=2&t;let a=!1;if(null==n){if(s)return Ot();n=[]}else if(n.constructor===Rt){if(!(2&n.M)||s)return n;n=n.Y()}else Array.isArray(n)?a=!!(2&ee(n)):n=[];if(s){if(!n.length)return Ot();a||(a=!0,re(n))}else a&&(a=!1,n=an(n));return a||(64&ee(n)?J(n,32):32&t&&Q(n,32)),Yt(e,t,2,r=new Rt(n,r,at,void 0)),r}(e,t,qt(e,t,2)),!n&&ki&&(e.ta=!0),e}});qs[458105876]=[0,Ni,ns,[!0,fs,[0,Is,-1,ks]]];var Si=class extends nr{constructor(e){super(e)}},Ti=Rs(458105758,Si);qs[458105758]=[0,Ba,Is,Ni];var Ei=class extends nr{constructor(e){super(e)}},Ci=Rs(443442058,Ei);qs[443442058]=[0,Ba,Is,ys,hs,ks,-1],qs[514774813]=mi;var $i=class extends nr{constructor(e){super(e)}},Ai=Rs(516587230,$i);function Ri(e,t){return t=t?t.clone():new Ra,void 0!==e.displayNamesLocale?Xt(t,1,nt(e.displayNamesLocale)):void 0===e.displayNamesLocale&&Xt(t,1),void 0!==e.maxResults?En(t,2,e.maxResults):"maxResults"in e&&Xt(t,2),void 0!==e.scoreThreshold?Cn(t,3,e.scoreThreshold):"scoreThreshold"in e&&Xt(t,3),void 0!==e.categoryAllowlist?$n(t,4,e.categoryAllowlist):"categoryAllowlist"in e&&Xt(t,4),void 0!==e.categoryDenylist?$n(t,5,e.categoryDenylist):"categoryDenylist"in e&&Xt(t,5),t}function _i(e,t=-1,n=""){return{categories:e.map(e=>({index:kn(Nn(e,1),0)??-1,score:In(e,2)??0,categoryName:Sn(e,3)??"",displayName:Sn(e,4)??""})),headIndex:t,headName:n}}function Di(e){var t=tn(e,3,He,en()),n=tn(e,2,Xe,en()),r=tn(e,1,rt,en()),s=tn(e,9,rt,en());const a={categories:[],keypoints:[]};for(let e=0;e<t.length;e++)a.categories.push({score:t[e],index:n[e]??-1,categoryName:r[e]??"",displayName:s[e]??""});if((t=fn(e,ma,4)?.h())&&(a.boundingBox={originX:Nn(t,1)??0,originY:Nn(t,2)??0,width:Nn(t,3)??0,height:Nn(t,4)??0,angle:0}),fn(e,ma,4)?.g().length)for(const t of fn(e,ma,4).g())a.keypoints.push({x:Qt(t,1)??0,y:Qt(t,2)??0,score:Qt(t,4)??0,label:rt(jt(t,3))??""});return a}function Fi(e){const t=[];for(const n of gn(e,xa,1))t.push({x:In(n,1)??0,y:In(n,2)??0,z:In(n,3)??0,visibility:In(n,4)??0});return t}function Mi(e){const t=[];for(const n of gn(e,ya,1))t.push({x:In(n,1)??0,y:In(n,2)??0,z:In(n,3)??0,visibility:In(n,4)??0});return t}function Oi(e){return Array.from(e,e=>e>127?e-256:e)}function Li(e,t){if(e.length!==t.length)throw Error(`Cannot compute cosine similarity between embeddings of different sizes (${e.length} vs. ${t.length}).`);let n=0,r=0,s=0;for(let a=0;a<e.length;a++)n+=e[a]*t[a],r+=e[a]*e[a],s+=t[a]*t[a];if(r<=0||s<=0)throw Error("Cannot compute cosine similarity on embedding with 0 norm.");return n/Math.sqrt(r*s)}let zi;qs[516587230]=[0,Ba,mi,gi,hs],qs[518928384]=gi;const Pi=new Uint8Array([0,97,115,109,1,0,0,0,1,5,1,96,0,1,123,3,2,1,0,10,10,1,8,0,65,0,253,15,253,98,11]);async function Bi(){if(void 0===zi)try{await WebAssembly.instantiate(Pi),zi=!0}catch{zi=!1}return zi}async function Vi(e,t=Ps``){const n=await Bi()?"wasm_internal":"wasm_nosimd_internal";return{wasmLoaderPath:`${t}/${e}_${n}.js`,wasmBinaryPath:`${t}/${e}_${n}.wasm`}}var Ui=class{};function Wi(){var e=navigator;return!("undefined"==typeof OffscreenCanvas||function(e=navigator){return(e=e.userAgent).includes("Safari")&&!e.includes("Chrome")}(e)&&!((e=e.userAgent.match(/Version\/([\d]+).*Safari/))&&e.length>=1&&Number(e[1])>=17))}async function Gi(e){if("function"!=typeof importScripts){const t=document.createElement("script");return t.src=e.toString(),t.crossOrigin="anonymous",new Promise((e,n)=>{t.addEventListener("load",()=>{e()},!1),t.addEventListener("error",e=>{n(e)},!1),document.body.appendChild(t)})}importScripts(e.toString())}function Hi(e){return void 0!==e.videoWidth?[e.videoWidth,e.videoHeight]:void 0!==e.naturalWidth?[e.naturalWidth,e.naturalHeight]:void 0!==e.displayWidth?[e.displayWidth,e.displayHeight]:[e.width,e.height]}function ji(e,t,n){e.m||console.error("No wasm multistream support detected: ensure dependency inclusion of :gl_graph_runner_internal_multi_input target"),n(t=e.i.stringToNewUTF8(t)),e.i._free(t)}function Ki(e,t,n){if(!e.i.canvas)throw Error("No OpenGL canvas configured.");if(n?e.i._bindTextureToStream(n):e.i._bindTextureToCanvas(),!(n=e.i.canvas.getContext("webgl2")||e.i.canvas.getContext("webgl")))throw Error("Failed to obtain WebGL context from the provided canvas. `getContext()` should only be invoked with `webgl` or `webgl2`.");e.i.gpuOriginForWebTexturesIsBottomLeft&&n.pixelStorei(n.UNPACK_FLIP_Y_WEBGL,!0),n.texImage2D(n.TEXTURE_2D,0,n.RGBA,n.RGBA,n.UNSIGNED_BYTE,t),e.i.gpuOriginForWebTexturesIsBottomLeft&&n.pixelStorei(n.UNPACK_FLIP_Y_WEBGL,!1);const[r,s]=Hi(t);return!e.l||r===e.i.canvas.width&&s===e.i.canvas.height||(e.i.canvas.width=r,e.i.canvas.height=s),[r,s]}function qi(e,t,n){e.m||console.error("No wasm multistream support detected: ensure dependency inclusion of :gl_graph_runner_internal_multi_input target");const r=new Uint32Array(t.length);for(let n=0;n<t.length;n++)r[n]=e.i.stringToNewUTF8(t[n]);t=e.i._malloc(4*r.length),e.i.HEAPU32.set(r,t>>2),n(t);for(const t of r)e.i._free(t);e.i._free(t)}function Xi(e,t,n){e.i.simpleListeners=e.i.simpleListeners||{},e.i.simpleListeners[t]=n}function Yi(e,t,n){let r=[];e.i.simpleListeners=e.i.simpleListeners||{},e.i.simpleListeners[t]=(e,t,s)=>{t?(n(r,s),r=[]):r.push(e)}}function Zi(e,t){const n=fn(e.baseOptions,La,1)||new La;"string"==typeof t?(Xt(n,2,nt(t)),Xt(n,1)):t instanceof Uint8Array&&(Xt(n,1,he(t,!1,!1)),Xt(n,2)),yn(e.baseOptions,0,1,n)}function Qi(e){try{const t=e.H.length;if(1===t)throw Error(e.H[0].message);if(t>1)throw Error("Encountered multiple errors: "+e.H.map(e=>e.message).join(", "))}finally{e.H=[]}}function Ji(e,t){e.B=Math.max(e.B,t)}function eo(e,t){e.A=new Js,Ys(e.A,"PassThroughCalculator"),Zs(e.A,"free_memory"),Qs(e.A,"free_memory_unused_out"),sa(t,"free_memory"),ra(t,e.A)}function to(e,t){Zs(e.A,t),Qs(e.A,t+"_unused_out")}function no(e){e.g.addBoolToStream(!0,"free_memory",e.B)}Ui.forVisionTasks=function(e){return Vi("vision",e)},Ui.forTextTasks=function(e){return Vi("text",e)},Ui.forGenAiExperimentalTasks=function(e){return Vi("genai_experimental",e)},Ui.forGenAiTasks=function(e){return Vi("genai",e)},Ui.forAudioTasks=function(e){return Vi("audio",e)},Ui.isSimdSupported=function(){return Bi()};var ro=class{constructor(e){this.g=e,this.H=[],this.B=0,this.g.setAutoRenderToScreen(!1)}l(e,t=!0){if(t){const t=e.baseOptions||{};if(e.baseOptions?.modelAssetBuffer&&e.baseOptions?.modelAssetPath)throw Error("Cannot set both baseOptions.modelAssetPath and baseOptions.modelAssetBuffer");if(!(fn(this.baseOptions,La,1)?.g()||fn(this.baseOptions,La,1)?.h()||e.baseOptions?.modelAssetBuffer||e.baseOptions?.modelAssetPath))throw Error("Either baseOptions.modelAssetPath or baseOptions.modelAssetBuffer must be set");if(function(e,t){let n=fn(e.baseOptions,Ma,3);if(!n){var r=n=new Ma,s=new Gs;bn(r,4,Oa,s)}"delegate"in t&&("GPU"===t.delegate?(t=n,r=new Vs,bn(t,2,Oa,r)):(t=n,r=new Gs,bn(t,4,Oa,r))),yn(e.baseOptions,0,3,n)}(this,t),t.modelAssetPath)return fetch(t.modelAssetPath.toString()).then(e=>{if(e.ok)return e.arrayBuffer();throw Error(`Failed to fetch model: ${t.modelAssetPath} (${e.status})`)}).then(e=>{try{this.g.i.FS_unlink("/model.dat")}catch{}this.g.i.FS_createDataFile("/","model.dat",new Uint8Array(e),!0,!1,!1),Zi(this,"/model.dat"),this.m(),this.J()});if(t.modelAssetBuffer instanceof Uint8Array)Zi(this,t.modelAssetBuffer);else if(t.modelAssetBuffer)return async function(e){const t=[];for(var n=0;;){const{done:r,value:s}=await e.read();if(r)break;t.push(s),n+=s.length}if(0===t.length)return new Uint8Array(0);if(1===t.length)return t[0];e=new Uint8Array(n),n=0;for(const r of t)e.set(r,n),n+=r.length;return e}(t.modelAssetBuffer).then(e=>{Zi(this,e),this.m(),this.J()})}return this.m(),this.J(),Promise.resolve()}J(){}ea(){let e;if(this.g.ea(t=>{e=ua(t)}),!e)throw Error("Failed to retrieve CalculatorGraphConfig");return e}setGraph(e,t){this.g.attachErrorListener((e,t)=>{this.H.push(Error(t))}),this.g.Ma(),this.g.setGraph(e,t),this.A=void 0,Qi(this)}finishProcessing(){this.g.finishProcessing(),Qi(this)}close(){this.A=void 0,this.g.closeGraph()}};function so(e,t){if(!e)throw Error(`Unable to obtain required WebGL resource: ${t}`);return e}ro.prototype.close=ro.prototype.close,function(e,t){e=e.split(".");var r,s=n;e[0]in s||void 0===s.execScript||s.execScript("var "+e[0]);for(;e.length&&(r=e.shift());)e.length||void 0===t?s=s[r]&&s[r]!==Object.prototype[r]?s[r]:s[r]={}:s[r]=t}("TaskRunner",ro);class ao{constructor(e,t,n,r){this.g=e,this.h=t,this.m=n,this.l=r}bind(){this.g.bindVertexArray(this.h)}close(){this.g.deleteVertexArray(this.h),this.g.deleteBuffer(this.m),this.g.deleteBuffer(this.l)}}function io(e,t,n){const r=e.g;if(n=so(r.createShader(n),"Failed to create WebGL shader"),r.shaderSource(n,t),r.compileShader(n),!r.getShaderParameter(n,r.COMPILE_STATUS))throw Error(`Could not compile WebGL shader: ${r.getShaderInfoLog(n)}`);return r.attachShader(e.h,n),n}function oo(e,t){const n=e.g,r=so(n.createVertexArray(),"Failed to create vertex array");n.bindVertexArray(r);const s=so(n.createBuffer(),"Failed to create buffer");n.bindBuffer(n.ARRAY_BUFFER,s),n.enableVertexAttribArray(e.P),n.vertexAttribPointer(e.P,2,n.FLOAT,!1,0,0),n.bufferData(n.ARRAY_BUFFER,new Float32Array([-1,-1,-1,1,1,1,1,-1]),n.STATIC_DRAW);const a=so(n.createBuffer(),"Failed to create buffer");return n.bindBuffer(n.ARRAY_BUFFER,a),n.enableVertexAttribArray(e.J),n.vertexAttribPointer(e.J,2,n.FLOAT,!1,0,0),n.bufferData(n.ARRAY_BUFFER,new Float32Array(t?[0,1,0,0,1,0,1,1]:[0,0,0,1,1,1,1,0]),n.STATIC_DRAW),n.bindBuffer(n.ARRAY_BUFFER,null),n.bindVertexArray(null),new ao(n,r,s,a)}function uo(e,t){if(e.g){if(t!==e.g)throw Error("Cannot change GL context once initialized")}else e.g=t}function lo(e,t,n,r){return uo(e,t),e.h||(e.m(),e.C()),n?(e.s||(e.s=oo(e,!0)),n=e.s):(e.v||(e.v=oo(e,!1)),n=e.v),t.useProgram(e.h),n.bind(),e.l(),e=r(),n.g.bindVertexArray(null),e}function co(e,t,n){return uo(e,t),e=so(t.createTexture(),"Failed to create texture"),t.bindTexture(t.TEXTURE_2D,e),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_WRAP_S,t.CLAMP_TO_EDGE),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_WRAP_T,t.CLAMP_TO_EDGE),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_MIN_FILTER,n??t.LINEAR),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_MAG_FILTER,n??t.LINEAR),t.bindTexture(t.TEXTURE_2D,null),e}function ho(e,t,n){uo(e,t),e.A||(e.A=so(t.createFramebuffer(),"Failed to create framebuffe.")),t.bindFramebuffer(t.FRAMEBUFFER,e.A),t.framebufferTexture2D(t.FRAMEBUFFER,t.COLOR_ATTACHMENT0,t.TEXTURE_2D,n,0)}function po(e){e.g?.bindFramebuffer(e.g.FRAMEBUFFER,null)}var fo=class{H(){return"\n  precision mediump float;\n  varying vec2 vTex;\n  uniform sampler2D inputTexture;\n  void main() {\n    gl_FragColor = texture2D(inputTexture, vTex);\n  }\n "}m(){const e=this.g;if(this.h=so(e.createProgram(),"Failed to create WebGL program"),this.ba=io(this,"\n  attribute vec2 aVertex;\n  attribute vec2 aTex;\n  varying vec2 vTex;\n  void main(void) {\n    gl_Position = vec4(aVertex, 0.0, 1.0);\n    vTex = aTex;\n  }",e.VERTEX_SHADER),this.aa=io(this,this.H(),e.FRAGMENT_SHADER),e.linkProgram(this.h),!e.getProgramParameter(this.h,e.LINK_STATUS))throw Error(`Error during program linking: ${e.getProgramInfoLog(this.h)}`);this.P=e.getAttribLocation(this.h,"aVertex"),this.J=e.getAttribLocation(this.h,"aTex")}C(){}l(){}close(){if(this.h){const e=this.g;e.deleteProgram(this.h),e.deleteShader(this.ba),e.deleteShader(this.aa)}this.A&&this.g.deleteFramebuffer(this.A),this.v&&this.v.close(),this.s&&this.s.close()}},mo=class extends fo{H(){return"\n  precision mediump float;\n  uniform sampler2D backgroundTexture;\n  uniform sampler2D maskTexture;\n  uniform sampler2D colorMappingTexture;\n  varying vec2 vTex;\n  void main() {\n    vec4 backgroundColor = texture2D(backgroundTexture, vTex);\n    float category = texture2D(maskTexture, vTex).r;\n    vec4 categoryColor = texture2D(colorMappingTexture, vec2(category, 0.0));\n    gl_FragColor = mix(backgroundColor, categoryColor, categoryColor.a);\n  }\n "}C(){const e=this.g;e.activeTexture(e.TEXTURE1),this.B=co(this,e,e.LINEAR),e.activeTexture(e.TEXTURE2),this.j=co(this,e,e.NEAREST)}m(){super.m();const e=this.g;this.L=so(e.getUniformLocation(this.h,"backgroundTexture"),"Uniform location"),this.U=so(e.getUniformLocation(this.h,"colorMappingTexture"),"Uniform location"),this.K=so(e.getUniformLocation(this.h,"maskTexture"),"Uniform location")}l(){super.l();const e=this.g;e.uniform1i(this.K,0),e.uniform1i(this.L,1),e.uniform1i(this.U,2)}close(){this.B&&this.g.deleteTexture(this.B),this.j&&this.g.deleteTexture(this.j),super.close()}},go=class extends fo{H(){return"\n  precision mediump float;\n  uniform sampler2D maskTexture;\n  uniform sampler2D defaultTexture;\n  uniform sampler2D overlayTexture;\n  varying vec2 vTex;\n  void main() {\n    float confidence = texture2D(maskTexture, vTex).r;\n    vec4 defaultColor = texture2D(defaultTexture, vTex);\n    vec4 overlayColor = texture2D(overlayTexture, vTex);\n    // Apply the alpha from the overlay and merge in the default color\n    overlayColor = mix(defaultColor, overlayColor, overlayColor.a);\n    gl_FragColor = mix(defaultColor, overlayColor, confidence);\n  }\n "}C(){const e=this.g;e.activeTexture(e.TEXTURE1),this.j=co(this,e),e.activeTexture(e.TEXTURE2),this.B=co(this,e)}m(){super.m();const e=this.g;this.K=so(e.getUniformLocation(this.h,"defaultTexture"),"Uniform location"),this.L=so(e.getUniformLocation(this.h,"overlayTexture"),"Uniform location"),this.I=so(e.getUniformLocation(this.h,"maskTexture"),"Uniform location")}l(){super.l();const e=this.g;e.uniform1i(this.I,0),e.uniform1i(this.K,1),e.uniform1i(this.L,2)}close(){this.j&&this.g.deleteTexture(this.j),this.B&&this.g.deleteTexture(this.B),super.close()}};function yo(e,t){switch(t){case 0:return e.g.find(e=>e instanceof Uint8Array);case 1:return e.g.find(e=>e instanceof Float32Array);case 2:return e.g.find(e=>"undefined"!=typeof WebGLTexture&&e instanceof WebGLTexture);default:throw Error(`Type is not supported: ${t}`)}}function bo(e){var t=yo(e,1);if(!t){if(t=yo(e,0))t=new Float32Array(t).map(e=>e/255);else{t=new Float32Array(e.width*e.height);const r=wo(e);var n=ko(e);if(ho(n,r,xo(e)),"iPad Simulator;iPhone Simulator;iPod Simulator;iPad;iPhone;iPod".split(";").includes(navigator.platform)||navigator.userAgent.includes("Mac")&&"document"in self&&"ontouchend"in self.document){n=new Float32Array(e.width*e.height*4),r.readPixels(0,0,e.width,e.height,r.RGBA,r.FLOAT,n);for(let e=0,r=0;e<t.length;++e,r+=4)t[e]=n[r]}else r.readPixels(0,0,e.width,e.height,r.RED,r.FLOAT,t)}e.g.push(t)}return t}function xo(e){let t=yo(e,2);if(!t){const n=wo(e);t=No(e);const r=bo(e),s=vo(e);n.texImage2D(n.TEXTURE_2D,0,s,e.width,e.height,0,n.RED,n.FLOAT,r),Io(e)}return t}function wo(e){if(!e.canvas)throw Error("Conversion to different image formats require that a canvas is passed when initializing the image.");return e.h||(e.h=so(e.canvas.getContext("webgl2"),"You cannot use a canvas that is already bound to a different type of rendering context.")),e.h}function vo(e){if(e=wo(e),!So)if(e.getExtension("EXT_color_buffer_float")&&e.getExtension("OES_texture_float_linear")&&e.getExtension("EXT_float_blend"))So=e.R32F;else{if(!e.getExtension("EXT_color_buffer_half_float"))throw Error("GPU does not fully support 4-channel float32 or float16 formats");So=e.R16F}return So}function ko(e){return e.l||(e.l=new fo),e.l}function No(e){const t=wo(e);t.viewport(0,0,e.width,e.height),t.activeTexture(t.TEXTURE0);let n=yo(e,2);return n||(n=co(ko(e),t,e.m?t.LINEAR:t.NEAREST),e.g.push(n),e.j=!0),t.bindTexture(t.TEXTURE_2D,n),n}function Io(e){e.h.bindTexture(e.h.TEXTURE_2D,null)}var So,To=class{constructor(e,t,n,r,s,a,i){this.g=e,this.m=t,this.j=n,this.canvas=r,this.l=s,this.width=a,this.height=i,this.j&&0===--Eo&&console.error("You seem to be creating MPMask instances without invoking .close(). This leaks resources.")}Ha(){return!!yo(this,0)}la(){return!!yo(this,1)}R(){return!!yo(this,2)}ka(){return(e=yo(this,0))||(e=bo(this),e=new Uint8Array(e.map(e=>255*e)),this.g.push(e)),e;var e}ja(){return bo(this)}N(){return xo(this)}clone(){const e=[];for(const t of this.g){let n;if(t instanceof Uint8Array)n=new Uint8Array(t);else if(t instanceof Float32Array)n=new Float32Array(t);else{if(!(t instanceof WebGLTexture))throw Error(`Type is not supported: ${t}`);{const e=wo(this),t=ko(this);e.activeTexture(e.TEXTURE1),n=co(t,e,this.m?e.LINEAR:e.NEAREST),e.bindTexture(e.TEXTURE_2D,n);const r=vo(this);e.texImage2D(e.TEXTURE_2D,0,r,this.width,this.height,0,e.RED,e.FLOAT,null),e.bindTexture(e.TEXTURE_2D,null),ho(t,e,n),lo(t,e,!1,()=>{No(this),e.clearColor(0,0,0,0),e.clear(e.COLOR_BUFFER_BIT),e.drawArrays(e.TRIANGLE_FAN,0,4),Io(this)}),po(t),Io(this)}}e.push(n)}return new To(e,this.m,this.R(),this.canvas,this.l,this.width,this.height)}close(){this.j&&wo(this).deleteTexture(yo(this,2)),Eo=-1}};To.prototype.close=To.prototype.close,To.prototype.clone=To.prototype.clone,To.prototype.getAsWebGLTexture=To.prototype.N,To.prototype.getAsFloat32Array=To.prototype.ja,To.prototype.getAsUint8Array=To.prototype.ka,To.prototype.hasWebGLTexture=To.prototype.R,To.prototype.hasFloat32Array=To.prototype.la,To.prototype.hasUint8Array=To.prototype.Ha;var Eo=250;const Co={color:"white",lineWidth:4,radius:6};function $o(e){return{...Co,fillColor:(e=e||{}).color,...e}}function Ao(e,t){return e instanceof Function?e(t):e}function Ro(e,t,n){return Math.max(Math.min(t,n),Math.min(Math.max(t,n),e))}function _o(e){if(!e.l)throw Error("CPU rendering requested but CanvasRenderingContext2D not provided.");return e.l}function Do(e){if(!e.j)throw Error("GPU rendering requested but WebGL2RenderingContext not provided.");return e.j}function Fo(e,t,n){if(t.R())n(t.N());else{const r=t.la()?t.ja():t.ka();e.m=e.m??new fo;const s=Do(e);n((e=new To([r],t.m,!1,s.canvas,e.m,t.width,t.height)).N()),e.close()}}function Mo(e,t,n,r){const s=function(e){return e.g||(e.g=new mo),e.g}(e),a=Do(e),i=Array.isArray(n)?new ImageData(new Uint8ClampedArray(n),1,1):n;lo(s,a,!0,()=>{!function(e,t,n,r){const s=e.g;if(s.activeTexture(s.TEXTURE0),s.bindTexture(s.TEXTURE_2D,t),s.activeTexture(s.TEXTURE1),s.bindTexture(s.TEXTURE_2D,e.B),s.texImage2D(s.TEXTURE_2D,0,s.RGBA,s.RGBA,s.UNSIGNED_BYTE,n),e.I&&function(e,t){if(e!==t)return!1;e=e.entries(),t=t.entries();for(const[r,s]of e){e=r;const a=s;var n=t.next();if(n.done)return!1;const[i,o]=n.value;if(n=o,e!==i||a[0]!==n[0]||a[1]!==n[1]||a[2]!==n[2]||a[3]!==n[3])return!1}return!!t.next().done}(e.I,r))s.activeTexture(s.TEXTURE2),s.bindTexture(s.TEXTURE_2D,e.j);else{e.I=r;const t=Array(1024).fill(0);r.forEach((e,n)=>{if(4!==e.length)throw Error(`Color at index ${n} is not a four-channel value.`);t[4*n]=e[0],t[4*n+1]=e[1],t[4*n+2]=e[2],t[4*n+3]=e[3]}),s.activeTexture(s.TEXTURE2),s.bindTexture(s.TEXTURE_2D,e.j),s.texImage2D(s.TEXTURE_2D,0,s.RGBA,256,1,0,s.RGBA,s.UNSIGNED_BYTE,new Uint8Array(t))}}(s,t,i,r),a.clearColor(0,0,0,0),a.clear(a.COLOR_BUFFER_BIT),a.drawArrays(a.TRIANGLE_FAN,0,4);const e=s.g;e.activeTexture(e.TEXTURE0),e.bindTexture(e.TEXTURE_2D,null),e.activeTexture(e.TEXTURE1),e.bindTexture(e.TEXTURE_2D,null),e.activeTexture(e.TEXTURE2),e.bindTexture(e.TEXTURE_2D,null)})}function Oo(e,t,n,r){const s=Do(e),a=function(e){return e.h||(e.h=new go),e.h}(e),i=Array.isArray(n)?new ImageData(new Uint8ClampedArray(n),1,1):n,o=Array.isArray(r)?new ImageData(new Uint8ClampedArray(r),1,1):r;lo(a,s,!0,()=>{var e=a.g;e.activeTexture(e.TEXTURE0),e.bindTexture(e.TEXTURE_2D,t),e.activeTexture(e.TEXTURE1),e.bindTexture(e.TEXTURE_2D,a.j),e.texImage2D(e.TEXTURE_2D,0,e.RGBA,e.RGBA,e.UNSIGNED_BYTE,i),e.activeTexture(e.TEXTURE2),e.bindTexture(e.TEXTURE_2D,a.B),e.texImage2D(e.TEXTURE_2D,0,e.RGBA,e.RGBA,e.UNSIGNED_BYTE,o),s.clearColor(0,0,0,0),s.clear(s.COLOR_BUFFER_BIT),s.drawArrays(s.TRIANGLE_FAN,0,4),s.bindTexture(s.TEXTURE_2D,null),(e=a.g).activeTexture(e.TEXTURE0),e.bindTexture(e.TEXTURE_2D,null),e.activeTexture(e.TEXTURE1),e.bindTexture(e.TEXTURE_2D,null),e.activeTexture(e.TEXTURE2),e.bindTexture(e.TEXTURE_2D,null)})}var Lo=class{constructor(e,t){e instanceof CanvasRenderingContext2D||e instanceof OffscreenCanvasRenderingContext2D?(this.l=e,this.j=t):this.j=e}Aa(e,t){if(e){var n=_o(this);t=$o(t),n.save();var r=n.canvas,s=0;for(const a of e)n.fillStyle=Ao(t.fillColor,{index:s,from:a}),n.strokeStyle=Ao(t.color,{index:s,from:a}),n.lineWidth=Ao(t.lineWidth,{index:s,from:a}),(e=new Path2D).arc(a.x*r.width,a.y*r.height,Ao(t.radius,{index:s,from:a}),0,2*Math.PI),n.fill(e),n.stroke(e),++s;n.restore()}}za(e,t,n){if(e&&t){var r=_o(this);n=$o(n),r.save();var s=r.canvas,a=0;for(const i of t){r.beginPath(),t=e[i.start];const o=e[i.end];t&&o&&(r.strokeStyle=Ao(n.color,{index:a,from:t,to:o}),r.lineWidth=Ao(n.lineWidth,{index:a,from:t,to:o}),r.moveTo(t.x*s.width,t.y*s.height),r.lineTo(o.x*s.width,o.y*s.height)),++a,r.stroke()}r.restore()}}wa(e,t){const n=_o(this);t=$o(t),n.save(),n.beginPath(),n.lineWidth=Ao(t.lineWidth,{}),n.strokeStyle=Ao(t.color,{}),n.fillStyle=Ao(t.fillColor,{}),n.moveTo(e.originX,e.originY),n.lineTo(e.originX+e.width,e.originY),n.lineTo(e.originX+e.width,e.originY+e.height),n.lineTo(e.originX,e.originY+e.height),n.lineTo(e.originX,e.originY),n.stroke(),n.fill(),n.restore()}xa(e,t,n=[0,0,0,255]){this.l?function(e,t,n,r){const s=Do(e);Fo(e,t,t=>{Mo(e,t,n,r),(t=_o(e)).drawImage(s.canvas,0,0,t.canvas.width,t.canvas.height)})}(this,e,n,t):Mo(this,e.N(),n,t)}ya(e,t,n){this.l?function(e,t,n,r){const s=Do(e);Fo(e,t,t=>{Oo(e,t,n,r),(t=_o(e)).drawImage(s.canvas,0,0,t.canvas.width,t.canvas.height)})}(this,e,t,n):Oo(this,e.N(),t,n)}close(){this.g?.close(),this.g=void 0,this.h?.close(),this.h=void 0,this.m?.close(),this.m=void 0}};function zo(e,t){switch(t){case 0:return e.g.find(e=>e instanceof ImageData);case 1:return e.g.find(e=>"undefined"!=typeof ImageBitmap&&e instanceof ImageBitmap);case 2:return e.g.find(e=>"undefined"!=typeof WebGLTexture&&e instanceof WebGLTexture);default:throw Error(`Type is not supported: ${t}`)}}function Po(e){var t=zo(e,0);if(!t){t=Vo(e);const n=Uo(e),r=new Uint8Array(e.width*e.height*4);ho(n,t,Bo(e)),t.readPixels(0,0,e.width,e.height,t.RGBA,t.UNSIGNED_BYTE,r),po(n),t=new ImageData(new Uint8ClampedArray(r.buffer),e.width,e.height),e.g.push(t)}return t}function Bo(e){let t=zo(e,2);if(!t){const n=Vo(e);t=Wo(e);const r=zo(e,1)||Po(e);n.texImage2D(n.TEXTURE_2D,0,n.RGBA,n.RGBA,n.UNSIGNED_BYTE,r),Go(e)}return t}function Vo(e){if(!e.canvas)throw Error("Conversion to different image formats require that a canvas is passed when iniitializing the image.");return e.h||(e.h=so(e.canvas.getContext("webgl2"),"You cannot use a canvas that is already bound to a different type of rendering context.")),e.h}function Uo(e){return e.l||(e.l=new fo),e.l}function Wo(e){const t=Vo(e);t.viewport(0,0,e.width,e.height),t.activeTexture(t.TEXTURE0);let n=zo(e,2);return n||(n=co(Uo(e),t),e.g.push(n),e.m=!0),t.bindTexture(t.TEXTURE_2D,n),n}function Go(e){e.h.bindTexture(e.h.TEXTURE_2D,null)}function Ho(e){const t=Vo(e);return lo(Uo(e),t,!0,()=>function(e,t){const n=e.canvas;if(n.width===e.width&&n.height===e.height)return t();const r=n.width,s=n.height;return n.width=e.width,n.height=e.height,e=t(),n.width=r,n.height=s,e}(e,()=>{if(t.bindFramebuffer(t.FRAMEBUFFER,null),t.clearColor(0,0,0,0),t.clear(t.COLOR_BUFFER_BIT),t.drawArrays(t.TRIANGLE_FAN,0,4),!(e.canvas instanceof OffscreenCanvas))throw Error("Conversion to ImageBitmap requires that the MediaPipe Tasks is initialized with an OffscreenCanvas");return e.canvas.transferToImageBitmap()}))}Lo.prototype.close=Lo.prototype.close,Lo.prototype.drawConfidenceMask=Lo.prototype.ya,Lo.prototype.drawCategoryMask=Lo.prototype.xa,Lo.prototype.drawBoundingBox=Lo.prototype.wa,Lo.prototype.drawConnectors=Lo.prototype.za,Lo.prototype.drawLandmarks=Lo.prototype.Aa,Lo.lerp=function(e,t,n,r,s){return Ro(r*(1-(e-t)/(n-t))+s*(1-(n-e)/(n-t)),r,s)},Lo.clamp=Ro;var jo=class{constructor(e,t,n,r,s,a,i){this.g=e,this.j=t,this.m=n,this.canvas=r,this.l=s,this.width=a,this.height=i,(this.j||this.m)&&0===--Ko&&console.error("You seem to be creating MPImage instances without invoking .close(). This leaks resources.")}Ga(){return!!zo(this,0)}ma(){return!!zo(this,1)}R(){return!!zo(this,2)}Ea(){return Po(this)}Da(){var e=zo(this,1);return e||(Bo(this),Wo(this),e=Ho(this),Go(this),this.g.push(e),this.j=!0),e}N(){return Bo(this)}clone(){const e=[];for(const t of this.g){let n;if(t instanceof ImageData)n=new ImageData(t.data,this.width,this.height);else if(t instanceof WebGLTexture){const e=Vo(this),t=Uo(this);e.activeTexture(e.TEXTURE1),n=co(t,e),e.bindTexture(e.TEXTURE_2D,n),e.texImage2D(e.TEXTURE_2D,0,e.RGBA,this.width,this.height,0,e.RGBA,e.UNSIGNED_BYTE,null),e.bindTexture(e.TEXTURE_2D,null),ho(t,e,n),lo(t,e,!1,()=>{Wo(this),e.clearColor(0,0,0,0),e.clear(e.COLOR_BUFFER_BIT),e.drawArrays(e.TRIANGLE_FAN,0,4),Go(this)}),po(t),Go(this)}else{if(!(t instanceof ImageBitmap))throw Error(`Type is not supported: ${t}`);Bo(this),Wo(this),n=Ho(this),Go(this)}e.push(n)}return new jo(e,this.ma(),this.R(),this.canvas,this.l,this.width,this.height)}close(){this.j&&zo(this,1).close(),this.m&&Vo(this).deleteTexture(zo(this,2)),Ko=-1}};jo.prototype.close=jo.prototype.close,jo.prototype.clone=jo.prototype.clone,jo.prototype.getAsWebGLTexture=jo.prototype.N,jo.prototype.getAsImageBitmap=jo.prototype.Da,jo.prototype.getAsImageData=jo.prototype.Ea,jo.prototype.hasWebGLTexture=jo.prototype.R,jo.prototype.hasImageBitmap=jo.prototype.ma,jo.prototype.hasImageData=jo.prototype.Ga;var Ko=250;function qo(...e){return e.map(([e,t])=>({start:e,end:t}))}const Xo=function(e){return class extends e{Ma(){this.i._registerModelResourcesGraphService()}}}((Yo=class{constructor(e,t){this.l=!0,this.i=e,this.g=null,this.h=0,this.m="function"==typeof this.i._addIntToInputStream,void 0!==t?this.i.canvas=t:Wi()?this.i.canvas=new OffscreenCanvas(1,1):(console.warn("OffscreenCanvas not supported and GraphRunner constructor glCanvas parameter is undefined. Creating backup canvas."),this.i.canvas=document.createElement("canvas"))}async initializeGraph(e){const t=await(await fetch(e)).arrayBuffer();e=!(e.endsWith(".pbtxt")||e.endsWith(".textproto")),this.setGraph(new Uint8Array(t),e)}setGraphFromString(e){this.setGraph((new TextEncoder).encode(e),!1)}setGraph(e,t){const n=e.length,r=this.i._malloc(n);this.i.HEAPU8.set(e,r),t?this.i._changeBinaryGraph(n,r):this.i._changeTextGraph(n,r),this.i._free(r)}configureAudio(e,t,n,r,s){this.i._configureAudio||console.warn('Attempting to use configureAudio without support for input audio. Is build dep ":gl_graph_runner_audio" missing?'),ji(this,r||"input_audio",r=>{ji(this,s=s||"audio_header",s=>{this.i._configureAudio(r,s,e,t??0,n)})})}setAutoResizeCanvas(e){this.l=e}setAutoRenderToScreen(e){this.i._setAutoRenderToScreen(e)}setGpuBufferVerticalFlip(e){this.i.gpuOriginForWebTexturesIsBottomLeft=e}ea(e){Xi(this,"__graph_config__",t=>{e(t)}),ji(this,"__graph_config__",e=>{this.i._getGraphConfig(e,void 0)}),delete this.i.simpleListeners.__graph_config__}attachErrorListener(e){this.i.errorListener=e}attachEmptyPacketListener(e,t){this.i.emptyPacketListeners=this.i.emptyPacketListeners||{},this.i.emptyPacketListeners[e]=t}addAudioToStream(e,t,n){this.addAudioToStreamWithShape(e,0,0,t,n)}addAudioToStreamWithShape(e,t,n,r,s){const a=4*e.length;this.h!==a&&(this.g&&this.i._free(this.g),this.g=this.i._malloc(a),this.h=a),this.i.HEAPF32.set(e,this.g/4),ji(this,r,e=>{this.i._addAudioToInputStream(this.g,t,n,e,s)})}addGpuBufferToStream(e,t,n){ji(this,t,t=>{const[r,s]=Ki(this,e,t);this.i._addBoundTextureToStream(t,r,s,n)})}addBoolToStream(e,t,n){ji(this,t,t=>{this.i._addBoolToInputStream(e,t,n)})}addDoubleToStream(e,t,n){ji(this,t,t=>{this.i._addDoubleToInputStream(e,t,n)})}addFloatToStream(e,t,n){ji(this,t,t=>{this.i._addFloatToInputStream(e,t,n)})}addIntToStream(e,t,n){ji(this,t,t=>{this.i._addIntToInputStream(e,t,n)})}addUintToStream(e,t,n){ji(this,t,t=>{this.i._addUintToInputStream(e,t,n)})}addStringToStream(e,t,n){ji(this,t,t=>{ji(this,e,e=>{this.i._addStringToInputStream(e,t,n)})})}addStringRecordToStream(e,t,n){ji(this,t,t=>{qi(this,Object.keys(e),r=>{qi(this,Object.values(e),s=>{this.i._addFlatHashMapToInputStream(r,s,Object.keys(e).length,t,n)})})})}addProtoToStream(e,t,n,r){ji(this,n,n=>{ji(this,t,t=>{const s=this.i._malloc(e.length);this.i.HEAPU8.set(e,s),this.i._addProtoToInputStream(s,e.length,t,n,r),this.i._free(s)})})}addEmptyPacketToStream(e,t){ji(this,e,e=>{this.i._addEmptyPacketToInputStream(e,t)})}addBoolVectorToStream(e,t,n){ji(this,t,t=>{const r=this.i._allocateBoolVector(e.length);if(!r)throw Error("Unable to allocate new bool vector on heap.");for(const t of e)this.i._addBoolVectorEntry(r,t);this.i._addBoolVectorToInputStream(r,t,n)})}addDoubleVectorToStream(e,t,n){ji(this,t,t=>{const r=this.i._allocateDoubleVector(e.length);if(!r)throw Error("Unable to allocate new double vector on heap.");for(const t of e)this.i._addDoubleVectorEntry(r,t);this.i._addDoubleVectorToInputStream(r,t,n)})}addFloatVectorToStream(e,t,n){ji(this,t,t=>{const r=this.i._allocateFloatVector(e.length);if(!r)throw Error("Unable to allocate new float vector on heap.");for(const t of e)this.i._addFloatVectorEntry(r,t);this.i._addFloatVectorToInputStream(r,t,n)})}addIntVectorToStream(e,t,n){ji(this,t,t=>{const r=this.i._allocateIntVector(e.length);if(!r)throw Error("Unable to allocate new int vector on heap.");for(const t of e)this.i._addIntVectorEntry(r,t);this.i._addIntVectorToInputStream(r,t,n)})}addUintVectorToStream(e,t,n){ji(this,t,t=>{const r=this.i._allocateUintVector(e.length);if(!r)throw Error("Unable to allocate new unsigned int vector on heap.");for(const t of e)this.i._addUintVectorEntry(r,t);this.i._addUintVectorToInputStream(r,t,n)})}addStringVectorToStream(e,t,n){ji(this,t,t=>{const r=this.i._allocateStringVector(e.length);if(!r)throw Error("Unable to allocate new string vector on heap.");for(const t of e)ji(this,t,e=>{this.i._addStringVectorEntry(r,e)});this.i._addStringVectorToInputStream(r,t,n)})}addBoolToInputSidePacket(e,t){ji(this,t,t=>{this.i._addBoolToInputSidePacket(e,t)})}addDoubleToInputSidePacket(e,t){ji(this,t,t=>{this.i._addDoubleToInputSidePacket(e,t)})}addFloatToInputSidePacket(e,t){ji(this,t,t=>{this.i._addFloatToInputSidePacket(e,t)})}addIntToInputSidePacket(e,t){ji(this,t,t=>{this.i._addIntToInputSidePacket(e,t)})}addUintToInputSidePacket(e,t){ji(this,t,t=>{this.i._addUintToInputSidePacket(e,t)})}addStringToInputSidePacket(e,t){ji(this,t,t=>{ji(this,e,e=>{this.i._addStringToInputSidePacket(e,t)})})}addProtoToInputSidePacket(e,t,n){ji(this,n,n=>{ji(this,t,t=>{const r=this.i._malloc(e.length);this.i.HEAPU8.set(e,r),this.i._addProtoToInputSidePacket(r,e.length,t,n),this.i._free(r)})})}addBoolVectorToInputSidePacket(e,t){ji(this,t,t=>{const n=this.i._allocateBoolVector(e.length);if(!n)throw Error("Unable to allocate new bool vector on heap.");for(const t of e)this.i._addBoolVectorEntry(n,t);this.i._addBoolVectorToInputSidePacket(n,t)})}addDoubleVectorToInputSidePacket(e,t){ji(this,t,t=>{const n=this.i._allocateDoubleVector(e.length);if(!n)throw Error("Unable to allocate new double vector on heap.");for(const t of e)this.i._addDoubleVectorEntry(n,t);this.i._addDoubleVectorToInputSidePacket(n,t)})}addFloatVectorToInputSidePacket(e,t){ji(this,t,t=>{const n=this.i._allocateFloatVector(e.length);if(!n)throw Error("Unable to allocate new float vector on heap.");for(const t of e)this.i._addFloatVectorEntry(n,t);this.i._addFloatVectorToInputSidePacket(n,t)})}addIntVectorToInputSidePacket(e,t){ji(this,t,t=>{const n=this.i._allocateIntVector(e.length);if(!n)throw Error("Unable to allocate new int vector on heap.");for(const t of e)this.i._addIntVectorEntry(n,t);this.i._addIntVectorToInputSidePacket(n,t)})}addUintVectorToInputSidePacket(e,t){ji(this,t,t=>{const n=this.i._allocateUintVector(e.length);if(!n)throw Error("Unable to allocate new unsigned int vector on heap.");for(const t of e)this.i._addUintVectorEntry(n,t);this.i._addUintVectorToInputSidePacket(n,t)})}addStringVectorToInputSidePacket(e,t){ji(this,t,t=>{const n=this.i._allocateStringVector(e.length);if(!n)throw Error("Unable to allocate new string vector on heap.");for(const t of e)ji(this,t,e=>{this.i._addStringVectorEntry(n,e)});this.i._addStringVectorToInputSidePacket(n,t)})}attachBoolListener(e,t){Xi(this,e,t),ji(this,e,e=>{this.i._attachBoolListener(e)})}attachBoolVectorListener(e,t){Yi(this,e,t),ji(this,e,e=>{this.i._attachBoolVectorListener(e)})}attachIntListener(e,t){Xi(this,e,t),ji(this,e,e=>{this.i._attachIntListener(e)})}attachIntVectorListener(e,t){Yi(this,e,t),ji(this,e,e=>{this.i._attachIntVectorListener(e)})}attachUintListener(e,t){Xi(this,e,t),ji(this,e,e=>{this.i._attachUintListener(e)})}attachUintVectorListener(e,t){Yi(this,e,t),ji(this,e,e=>{this.i._attachUintVectorListener(e)})}attachDoubleListener(e,t){Xi(this,e,t),ji(this,e,e=>{this.i._attachDoubleListener(e)})}attachDoubleVectorListener(e,t){Yi(this,e,t),ji(this,e,e=>{this.i._attachDoubleVectorListener(e)})}attachFloatListener(e,t){Xi(this,e,t),ji(this,e,e=>{this.i._attachFloatListener(e)})}attachFloatVectorListener(e,t){Yi(this,e,t),ji(this,e,e=>{this.i._attachFloatVectorListener(e)})}attachStringListener(e,t){Xi(this,e,t),ji(this,e,e=>{this.i._attachStringListener(e)})}attachStringVectorListener(e,t){Yi(this,e,t),ji(this,e,e=>{this.i._attachStringVectorListener(e)})}attachProtoListener(e,t,n){Xi(this,e,t),ji(this,e,e=>{this.i._attachProtoListener(e,n||!1)})}attachProtoVectorListener(e,t,n){Yi(this,e,t),ji(this,e,e=>{this.i._attachProtoVectorListener(e,n||!1)})}attachAudioListener(e,t,n){this.i._attachAudioListener||console.warn('Attempting to use attachAudioListener without support for output audio. Is build dep ":gl_graph_runner_audio_out" missing?'),Xi(this,e,(e,n)=>{e=new Float32Array(e.buffer,e.byteOffset,e.length/4),t(e,n)}),ji(this,e,e=>{this.i._attachAudioListener(e,n||!1)})}finishProcessing(){this.i._waitUntilIdle()}closeGraph(){this.i._closeGraph(),this.i.simpleListeners=void 0,this.i.emptyPacketListeners=void 0}},class extends Yo{get ga(){return this.i}sa(e,t,n){ji(this,t,t=>{const[r,s]=Ki(this,e,t);this.ga._addBoundTextureAsImageToStream(t,r,s,n)})}V(e,t){Xi(this,e,t),ji(this,e,e=>{this.ga._attachImageListener(e)})}da(e,t){Yi(this,e,t),ji(this,e,e=>{this.ga._attachImageVectorListener(e)})}}));var Yo,Zo=class extends Xo{};async function Qo(e,t,n){return async function(e,t,n,r){return async function(e,t,n,r){return e=await(async(e,t,n,r,s)=>{if(t&&await Gi(t),!self.ModuleFactory)throw Error("ModuleFactory not set.");if(n&&(await Gi(n),!self.ModuleFactory))throw Error("ModuleFactory not set.");return self.Module&&s&&((t=self.Module).locateFile=s.locateFile,s.mainScriptUrlOrBlob&&(t.mainScriptUrlOrBlob=s.mainScriptUrlOrBlob)),s=await self.ModuleFactory(self.Module||s),self.ModuleFactory=self.Module=void 0,new e(s,r)})(e,n.wasmLoaderPath,n.assetLoaderPath,t,{locateFile:e=>e.endsWith(".wasm")?n.wasmBinaryPath.toString():n.assetBinaryPath&&e.endsWith(".data")?n.assetBinaryPath.toString():e}),await e.o(r),e}(e,t,n,r)}(e,n.canvas??(Wi()?void 0:document.createElement("canvas")),t,n)}function Jo(e,t,n,r){if(e.U){const a=new Na;if(n?.regionOfInterest){if(!e.ra)throw Error("This task doesn't support region-of-interest.");var s=n.regionOfInterest;if(s.left>=s.right||s.top>=s.bottom)throw Error("Expected RectF with left < right and top < bottom.");if(s.left<0||s.top<0||s.right>1||s.bottom>1)throw Error("Expected RectF values to be in [0,1].");Cn(a,1,(s.left+s.right)/2),Cn(a,2,(s.top+s.bottom)/2),Cn(a,4,s.right-s.left),Cn(a,3,s.bottom-s.top)}else Cn(a,1,.5),Cn(a,2,.5),Cn(a,4,1),Cn(a,3,1);if(n?.rotationDegrees){if(n?.rotationDegrees%90!=0)throw Error("Expected rotation to be a multiple of 90°.");if(Cn(a,5,-Math.PI*n.rotationDegrees/180),n?.rotationDegrees%180!=0){const[e,r]=Hi(t);n=In(a,3)*r/e,s=In(a,4)*e/r,Cn(a,4,n),Cn(a,3,s)}}e.g.addProtoToStream(a.g(),"mediapipe.NormalizedRect",e.U,r)}e.g.sa(t,e.ba,r??performance.now()),e.finishProcessing()}function eu(e,t,n){if(e.baseOptions?.g())throw Error("Task is not initialized with image mode. 'runningMode' must be set to 'IMAGE'.");Jo(e,t,n,e.B+1)}function tu(e,t,n,r){if(!e.baseOptions?.g())throw Error("Task is not initialized with video mode. 'runningMode' must be set to 'VIDEO'.");Jo(e,t,n,r)}function nu(e,t,n,r){var s=t.data;const a=t.width,i=a*(t=t.height);if((s instanceof Uint8Array||s instanceof Float32Array)&&s.length!==i)throw Error("Unsupported channel count: "+s.length/i);return e=new To([s],n,!1,e.g.i.canvas,e.P,a,t),r?e.clone():e}var ru=class extends ro{constructor(e,t,n,r){super(e),this.g=e,this.ba=t,this.U=n,this.ra=r,this.P=new fo}l(e,t=!0){if("runningMode"in e&&Tn(this.baseOptions,2,!!e.runningMode&&"IMAGE"!==e.runningMode),void 0!==e.canvas&&this.g.i.canvas!==e.canvas)throw Error("You must create a new task to reset the canvas.");return super.l(e,t)}close(){this.P.close(),super.close()}};ru.prototype.close=ru.prototype.close;var su=class extends ru{constructor(e,t){super(new Zo(e,t),"image_in","norm_rect_in",!1),this.j={detections:[]},yn(e=this.h=new Va,0,1,t=new za),Cn(this.h,2,.5),Cn(this.h,3,.3)}get baseOptions(){return fn(this.h,za,1)}set baseOptions(e){yn(this.h,0,1,e)}o(e){return"minDetectionConfidence"in e&&Cn(this.h,2,e.minDetectionConfidence??.5),"minSuppressionThreshold"in e&&Cn(this.h,3,e.minSuppressionThreshold??.3),this.l(e)}D(e,t){return this.j={detections:[]},eu(this,e,t),this.j}F(e,t,n){return this.j={detections:[]},tu(this,e,n,t),this.j}m(){var e=new ia;sa(e,"image_in"),sa(e,"norm_rect_in"),aa(e,"detections");const t=new Ks;tr(t,Wa,this.h);const n=new Js;Ys(n,"mediapipe.tasks.vision.face_detector.FaceDetectorGraph"),Zs(n,"IMAGE:image_in"),Zs(n,"NORM_RECT:norm_rect_in"),Qs(n,"DETECTIONS:detections"),n.o(t),ra(e,n),this.g.attachProtoVectorListener("detections",(e,t)=>{for(const t of e)e=ga(t),this.j.detections.push(Di(e));Ji(this,t)}),this.g.attachEmptyPacketListener("detections",e=>{Ji(this,e)}),e=e.g(),this.setGraph(new Uint8Array(e),!0)}};su.prototype.detectForVideo=su.prototype.F,su.prototype.detect=su.prototype.D,su.prototype.setOptions=su.prototype.o,su.createFromModelPath=async function(e,t){return Qo(su,e,{baseOptions:{modelAssetPath:t}})},su.createFromModelBuffer=function(e,t){return Qo(su,e,{baseOptions:{modelAssetBuffer:t}})},su.createFromOptions=function(e,t){return Qo(su,e,t)};var au=qo([61,146],[146,91],[91,181],[181,84],[84,17],[17,314],[314,405],[405,321],[321,375],[375,291],[61,185],[185,40],[40,39],[39,37],[37,0],[0,267],[267,269],[269,270],[270,409],[409,291],[78,95],[95,88],[88,178],[178,87],[87,14],[14,317],[317,402],[402,318],[318,324],[324,308],[78,191],[191,80],[80,81],[81,82],[82,13],[13,312],[312,311],[311,310],[310,415],[415,308]),iu=qo([263,249],[249,390],[390,373],[373,374],[374,380],[380,381],[381,382],[382,362],[263,466],[466,388],[388,387],[387,386],[386,385],[385,384],[384,398],[398,362]),ou=qo([276,283],[283,282],[282,295],[295,285],[300,293],[293,334],[334,296],[296,336]),uu=qo([474,475],[475,476],[476,477],[477,474]),lu=qo([33,7],[7,163],[163,144],[144,145],[145,153],[153,154],[154,155],[155,133],[33,246],[246,161],[161,160],[160,159],[159,158],[158,157],[157,173],[173,133]),cu=qo([46,53],[53,52],[52,65],[65,55],[70,63],[63,105],[105,66],[66,107]),hu=qo([469,470],[470,471],[471,472],[472,469]),du=qo([10,338],[338,297],[297,332],[332,284],[284,251],[251,389],[389,356],[356,454],[454,323],[323,361],[361,288],[288,397],[397,365],[365,379],[379,378],[378,400],[400,377],[377,152],[152,148],[148,176],[176,149],[149,150],[150,136],[136,172],[172,58],[58,132],[132,93],[93,234],[234,127],[127,162],[162,21],[21,54],[54,103],[103,67],[67,109],[109,10]),pu=[...au,...iu,...ou,...lu,...cu,...du],fu=qo([127,34],[34,139],[139,127],[11,0],[0,37],[37,11],[232,231],[231,120],[120,232],[72,37],[37,39],[39,72],[128,121],[121,47],[47,128],[232,121],[121,128],[128,232],[104,69],[69,67],[67,104],[175,171],[171,148],[148,175],[118,50],[50,101],[101,118],[73,39],[39,40],[40,73],[9,151],[151,108],[108,9],[48,115],[115,131],[131,48],[194,204],[204,211],[211,194],[74,40],[40,185],[185,74],[80,42],[42,183],[183,80],[40,92],[92,186],[186,40],[230,229],[229,118],[118,230],[202,212],[212,214],[214,202],[83,18],[18,17],[17,83],[76,61],[61,146],[146,76],[160,29],[29,30],[30,160],[56,157],[157,173],[173,56],[106,204],[204,194],[194,106],[135,214],[214,192],[192,135],[203,165],[165,98],[98,203],[21,71],[71,68],[68,21],[51,45],[45,4],[4,51],[144,24],[24,23],[23,144],[77,146],[146,91],[91,77],[205,50],[50,187],[187,205],[201,200],[200,18],[18,201],[91,106],[106,182],[182,91],[90,91],[91,181],[181,90],[85,84],[84,17],[17,85],[206,203],[203,36],[36,206],[148,171],[171,140],[140,148],[92,40],[40,39],[39,92],[193,189],[189,244],[244,193],[159,158],[158,28],[28,159],[247,246],[246,161],[161,247],[236,3],[3,196],[196,236],[54,68],[68,104],[104,54],[193,168],[168,8],[8,193],[117,228],[228,31],[31,117],[189,193],[193,55],[55,189],[98,97],[97,99],[99,98],[126,47],[47,100],[100,126],[166,79],[79,218],[218,166],[155,154],[154,26],[26,155],[209,49],[49,131],[131,209],[135,136],[136,150],[150,135],[47,126],[126,217],[217,47],[223,52],[52,53],[53,223],[45,51],[51,134],[134,45],[211,170],[170,140],[140,211],[67,69],[69,108],[108,67],[43,106],[106,91],[91,43],[230,119],[119,120],[120,230],[226,130],[130,247],[247,226],[63,53],[53,52],[52,63],[238,20],[20,242],[242,238],[46,70],[70,156],[156,46],[78,62],[62,96],[96,78],[46,53],[53,63],[63,46],[143,34],[34,227],[227,143],[123,117],[117,111],[111,123],[44,125],[125,19],[19,44],[236,134],[134,51],[51,236],[216,206],[206,205],[205,216],[154,153],[153,22],[22,154],[39,37],[37,167],[167,39],[200,201],[201,208],[208,200],[36,142],[142,100],[100,36],[57,212],[212,202],[202,57],[20,60],[60,99],[99,20],[28,158],[158,157],[157,28],[35,226],[226,113],[113,35],[160,159],[159,27],[27,160],[204,202],[202,210],[210,204],[113,225],[225,46],[46,113],[43,202],[202,204],[204,43],[62,76],[76,77],[77,62],[137,123],[123,116],[116,137],[41,38],[38,72],[72,41],[203,129],[129,142],[142,203],[64,98],[98,240],[240,64],[49,102],[102,64],[64,49],[41,73],[73,74],[74,41],[212,216],[216,207],[207,212],[42,74],[74,184],[184,42],[169,170],[170,211],[211,169],[170,149],[149,176],[176,170],[105,66],[66,69],[69,105],[122,6],[6,168],[168,122],[123,147],[147,187],[187,123],[96,77],[77,90],[90,96],[65,55],[55,107],[107,65],[89,90],[90,180],[180,89],[101,100],[100,120],[120,101],[63,105],[105,104],[104,63],[93,137],[137,227],[227,93],[15,86],[86,85],[85,15],[129,102],[102,49],[49,129],[14,87],[87,86],[86,14],[55,8],[8,9],[9,55],[100,47],[47,121],[121,100],[145,23],[23,22],[22,145],[88,89],[89,179],[179,88],[6,122],[122,196],[196,6],[88,95],[95,96],[96,88],[138,172],[172,136],[136,138],[215,58],[58,172],[172,215],[115,48],[48,219],[219,115],[42,80],[80,81],[81,42],[195,3],[3,51],[51,195],[43,146],[146,61],[61,43],[171,175],[175,199],[199,171],[81,82],[82,38],[38,81],[53,46],[46,225],[225,53],[144,163],[163,110],[110,144],[52,65],[65,66],[66,52],[229,228],[228,117],[117,229],[34,127],[127,234],[234,34],[107,108],[108,69],[69,107],[109,108],[108,151],[151,109],[48,64],[64,235],[235,48],[62,78],[78,191],[191,62],[129,209],[209,126],[126,129],[111,35],[35,143],[143,111],[117,123],[123,50],[50,117],[222,65],[65,52],[52,222],[19,125],[125,141],[141,19],[221,55],[55,65],[65,221],[3,195],[195,197],[197,3],[25,7],[7,33],[33,25],[220,237],[237,44],[44,220],[70,71],[71,139],[139,70],[122,193],[193,245],[245,122],[247,130],[130,33],[33,247],[71,21],[21,162],[162,71],[170,169],[169,150],[150,170],[188,174],[174,196],[196,188],[216,186],[186,92],[92,216],[2,97],[97,167],[167,2],[141,125],[125,241],[241,141],[164,167],[167,37],[37,164],[72,38],[38,12],[12,72],[38,82],[82,13],[13,38],[63,68],[68,71],[71,63],[226,35],[35,111],[111,226],[101,50],[50,205],[205,101],[206,92],[92,165],[165,206],[209,198],[198,217],[217,209],[165,167],[167,97],[97,165],[220,115],[115,218],[218,220],[133,112],[112,243],[243,133],[239,238],[238,241],[241,239],[214,135],[135,169],[169,214],[190,173],[173,133],[133,190],[171,208],[208,32],[32,171],[125,44],[44,237],[237,125],[86,87],[87,178],[178,86],[85,86],[86,179],[179,85],[84,85],[85,180],[180,84],[83,84],[84,181],[181,83],[201,83],[83,182],[182,201],[137,93],[93,132],[132,137],[76,62],[62,183],[183,76],[61,76],[76,184],[184,61],[57,61],[61,185],[185,57],[212,57],[57,186],[186,212],[214,207],[207,187],[187,214],[34,143],[143,156],[156,34],[79,239],[239,237],[237,79],[123,137],[137,177],[177,123],[44,1],[1,4],[4,44],[201,194],[194,32],[32,201],[64,102],[102,129],[129,64],[213,215],[215,138],[138,213],[59,166],[166,219],[219,59],[242,99],[99,97],[97,242],[2,94],[94,141],[141,2],[75,59],[59,235],[235,75],[24,110],[110,228],[228,24],[25,130],[130,226],[226,25],[23,24],[24,229],[229,23],[22,23],[23,230],[230,22],[26,22],[22,231],[231,26],[112,26],[26,232],[232,112],[189,190],[190,243],[243,189],[221,56],[56,190],[190,221],[28,56],[56,221],[221,28],[27,28],[28,222],[222,27],[29,27],[27,223],[223,29],[30,29],[29,224],[224,30],[247,30],[30,225],[225,247],[238,79],[79,20],[20,238],[166,59],[59,75],[75,166],[60,75],[75,240],[240,60],[147,177],[177,215],[215,147],[20,79],[79,166],[166,20],[187,147],[147,213],[213,187],[112,233],[233,244],[244,112],[233,128],[128,245],[245,233],[128,114],[114,188],[188,128],[114,217],[217,174],[174,114],[131,115],[115,220],[220,131],[217,198],[198,236],[236,217],[198,131],[131,134],[134,198],[177,132],[132,58],[58,177],[143,35],[35,124],[124,143],[110,163],[163,7],[7,110],[228,110],[110,25],[25,228],[356,389],[389,368],[368,356],[11,302],[302,267],[267,11],[452,350],[350,349],[349,452],[302,303],[303,269],[269,302],[357,343],[343,277],[277,357],[452,453],[453,357],[357,452],[333,332],[332,297],[297,333],[175,152],[152,377],[377,175],[347,348],[348,330],[330,347],[303,304],[304,270],[270,303],[9,336],[336,337],[337,9],[278,279],[279,360],[360,278],[418,262],[262,431],[431,418],[304,408],[408,409],[409,304],[310,415],[415,407],[407,310],[270,409],[409,410],[410,270],[450,348],[348,347],[347,450],[422,430],[430,434],[434,422],[313,314],[314,17],[17,313],[306,307],[307,375],[375,306],[387,388],[388,260],[260,387],[286,414],[414,398],[398,286],[335,406],[406,418],[418,335],[364,367],[367,416],[416,364],[423,358],[358,327],[327,423],[251,284],[284,298],[298,251],[281,5],[5,4],[4,281],[373,374],[374,253],[253,373],[307,320],[320,321],[321,307],[425,427],[427,411],[411,425],[421,313],[313,18],[18,421],[321,405],[405,406],[406,321],[320,404],[404,405],[405,320],[315,16],[16,17],[17,315],[426,425],[425,266],[266,426],[377,400],[400,369],[369,377],[322,391],[391,269],[269,322],[417,465],[465,464],[464,417],[386,257],[257,258],[258,386],[466,260],[260,388],[388,466],[456,399],[399,419],[419,456],[284,332],[332,333],[333,284],[417,285],[285,8],[8,417],[346,340],[340,261],[261,346],[413,441],[441,285],[285,413],[327,460],[460,328],[328,327],[355,371],[371,329],[329,355],[392,439],[439,438],[438,392],[382,341],[341,256],[256,382],[429,420],[420,360],[360,429],[364,394],[394,379],[379,364],[277,343],[343,437],[437,277],[443,444],[444,283],[283,443],[275,440],[440,363],[363,275],[431,262],[262,369],[369,431],[297,338],[338,337],[337,297],[273,375],[375,321],[321,273],[450,451],[451,349],[349,450],[446,342],[342,467],[467,446],[293,334],[334,282],[282,293],[458,461],[461,462],[462,458],[276,353],[353,383],[383,276],[308,324],[324,325],[325,308],[276,300],[300,293],[293,276],[372,345],[345,447],[447,372],[352,345],[345,340],[340,352],[274,1],[1,19],[19,274],[456,248],[248,281],[281,456],[436,427],[427,425],[425,436],[381,256],[256,252],[252,381],[269,391],[391,393],[393,269],[200,199],[199,428],[428,200],[266,330],[330,329],[329,266],[287,273],[273,422],[422,287],[250,462],[462,328],[328,250],[258,286],[286,384],[384,258],[265,353],[353,342],[342,265],[387,259],[259,257],[257,387],[424,431],[431,430],[430,424],[342,353],[353,276],[276,342],[273,335],[335,424],[424,273],[292,325],[325,307],[307,292],[366,447],[447,345],[345,366],[271,303],[303,302],[302,271],[423,266],[266,371],[371,423],[294,455],[455,460],[460,294],[279,278],[278,294],[294,279],[271,272],[272,304],[304,271],[432,434],[434,427],[427,432],[272,407],[407,408],[408,272],[394,430],[430,431],[431,394],[395,369],[369,400],[400,395],[334,333],[333,299],[299,334],[351,417],[417,168],[168,351],[352,280],[280,411],[411,352],[325,319],[319,320],[320,325],[295,296],[296,336],[336,295],[319,403],[403,404],[404,319],[330,348],[348,349],[349,330],[293,298],[298,333],[333,293],[323,454],[454,447],[447,323],[15,16],[16,315],[315,15],[358,429],[429,279],[279,358],[14,15],[15,316],[316,14],[285,336],[336,9],[9,285],[329,349],[349,350],[350,329],[374,380],[380,252],[252,374],[318,402],[402,403],[403,318],[6,197],[197,419],[419,6],[318,319],[319,325],[325,318],[367,364],[364,365],[365,367],[435,367],[367,397],[397,435],[344,438],[438,439],[439,344],[272,271],[271,311],[311,272],[195,5],[5,281],[281,195],[273,287],[287,291],[291,273],[396,428],[428,199],[199,396],[311,271],[271,268],[268,311],[283,444],[444,445],[445,283],[373,254],[254,339],[339,373],[282,334],[334,296],[296,282],[449,347],[347,346],[346,449],[264,447],[447,454],[454,264],[336,296],[296,299],[299,336],[338,10],[10,151],[151,338],[278,439],[439,455],[455,278],[292,407],[407,415],[415,292],[358,371],[371,355],[355,358],[340,345],[345,372],[372,340],[346,347],[347,280],[280,346],[442,443],[443,282],[282,442],[19,94],[94,370],[370,19],[441,442],[442,295],[295,441],[248,419],[419,197],[197,248],[263,255],[255,359],[359,263],[440,275],[275,274],[274,440],[300,383],[383,368],[368,300],[351,412],[412,465],[465,351],[263,467],[467,466],[466,263],[301,368],[368,389],[389,301],[395,378],[378,379],[379,395],[412,351],[351,419],[419,412],[436,426],[426,322],[322,436],[2,164],[164,393],[393,2],[370,462],[462,461],[461,370],[164,0],[0,267],[267,164],[302,11],[11,12],[12,302],[268,12],[12,13],[13,268],[293,300],[300,301],[301,293],[446,261],[261,340],[340,446],[330,266],[266,425],[425,330],[426,423],[423,391],[391,426],[429,355],[355,437],[437,429],[391,327],[327,326],[326,391],[440,457],[457,438],[438,440],[341,382],[382,362],[362,341],[459,457],[457,461],[461,459],[434,430],[430,394],[394,434],[414,463],[463,362],[362,414],[396,369],[369,262],[262,396],[354,461],[461,457],[457,354],[316,403],[403,402],[402,316],[315,404],[404,403],[403,315],[314,405],[405,404],[404,314],[313,406],[406,405],[405,313],[421,418],[418,406],[406,421],[366,401],[401,361],[361,366],[306,408],[408,407],[407,306],[291,409],[409,408],[408,291],[287,410],[410,409],[409,287],[432,436],[436,410],[410,432],[434,416],[416,411],[411,434],[264,368],[368,383],[383,264],[309,438],[438,457],[457,309],[352,376],[376,401],[401,352],[274,275],[275,4],[4,274],[421,428],[428,262],[262,421],[294,327],[327,358],[358,294],[433,416],[416,367],[367,433],[289,455],[455,439],[439,289],[462,370],[370,326],[326,462],[2,326],[326,370],[370,2],[305,460],[460,455],[455,305],[254,449],[449,448],[448,254],[255,261],[261,446],[446,255],[253,450],[450,449],[449,253],[252,451],[451,450],[450,252],[256,452],[452,451],[451,256],[341,453],[453,452],[452,341],[413,464],[464,463],[463,413],[441,413],[413,414],[414,441],[258,442],[442,441],[441,258],[257,443],[443,442],[442,257],[259,444],[444,443],[443,259],[260,445],[445,444],[444,260],[467,342],[342,445],[445,467],[459,458],[458,250],[250,459],[289,392],[392,290],[290,289],[290,328],[328,460],[460,290],[376,433],[433,435],[435,376],[250,290],[290,392],[392,250],[411,416],[416,433],[433,411],[341,463],[463,464],[464,341],[453,464],[464,465],[465,453],[357,465],[465,412],[412,357],[343,412],[412,399],[399,343],[360,363],[363,440],[440,360],[437,399],[399,456],[456,437],[420,456],[456,363],[363,420],[401,435],[435,288],[288,401],[372,383],[383,353],[353,372],[339,255],[255,249],[249,339],[448,261],[261,255],[255,448],[133,243],[243,190],[190,133],[133,155],[155,112],[112,133],[33,246],[246,247],[247,33],[33,130],[130,25],[25,33],[398,384],[384,286],[286,398],[362,398],[398,414],[414,362],[362,463],[463,341],[341,362],[263,359],[359,467],[467,263],[263,249],[249,255],[255,263],[466,467],[467,260],[260,466],[75,60],[60,166],[166,75],[238,239],[239,79],[79,238],[162,127],[127,139],[139,162],[72,11],[11,37],[37,72],[121,232],[232,120],[120,121],[73,72],[72,39],[39,73],[114,128],[128,47],[47,114],[233,232],[232,128],[128,233],[103,104],[104,67],[67,103],[152,175],[175,148],[148,152],[119,118],[118,101],[101,119],[74,73],[73,40],[40,74],[107,9],[9,108],[108,107],[49,48],[48,131],[131,49],[32,194],[194,211],[211,32],[184,74],[74,185],[185,184],[191,80],[80,183],[183,191],[185,40],[40,186],[186,185],[119,230],[230,118],[118,119],[210,202],[202,214],[214,210],[84,83],[83,17],[17,84],[77,76],[76,146],[146,77],[161,160],[160,30],[30,161],[190,56],[56,173],[173,190],[182,106],[106,194],[194,182],[138,135],[135,192],[192,138],[129,203],[203,98],[98,129],[54,21],[21,68],[68,54],[5,51],[51,4],[4,5],[145,144],[144,23],[23,145],[90,77],[77,91],[91,90],[207,205],[205,187],[187,207],[83,201],[201,18],[18,83],[181,91],[91,182],[182,181],[180,90],[90,181],[181,180],[16,85],[85,17],[17,16],[205,206],[206,36],[36,205],[176,148],[148,140],[140,176],[165,92],[92,39],[39,165],[245,193],[193,244],[244,245],[27,159],[159,28],[28,27],[30,247],[247,161],[161,30],[174,236],[236,196],[196,174],[103,54],[54,104],[104,103],[55,193],[193,8],[8,55],[111,117],[117,31],[31,111],[221,189],[189,55],[55,221],[240,98],[98,99],[99,240],[142,126],[126,100],[100,142],[219,166],[166,218],[218,219],[112,155],[155,26],[26,112],[198,209],[209,131],[131,198],[169,135],[135,150],[150,169],[114,47],[47,217],[217,114],[224,223],[223,53],[53,224],[220,45],[45,134],[134,220],[32,211],[211,140],[140,32],[109,67],[67,108],[108,109],[146,43],[43,91],[91,146],[231,230],[230,120],[120,231],[113,226],[226,247],[247,113],[105,63],[63,52],[52,105],[241,238],[238,242],[242,241],[124,46],[46,156],[156,124],[95,78],[78,96],[96,95],[70,46],[46,63],[63,70],[116,143],[143,227],[227,116],[116,123],[123,111],[111,116],[1,44],[44,19],[19,1],[3,236],[236,51],[51,3],[207,216],[216,205],[205,207],[26,154],[154,22],[22,26],[165,39],[39,167],[167,165],[199,200],[200,208],[208,199],[101,36],[36,100],[100,101],[43,57],[57,202],[202,43],[242,20],[20,99],[99,242],[56,28],[28,157],[157,56],[124,35],[35,113],[113,124],[29,160],[160,27],[27,29],[211,204],[204,210],[210,211],[124,113],[113,46],[46,124],[106,43],[43,204],[204,106],[96,62],[62,77],[77,96],[227,137],[137,116],[116,227],[73,41],[41,72],[72,73],[36,203],[203,142],[142,36],[235,64],[64,240],[240,235],[48,49],[49,64],[64,48],[42,41],[41,74],[74,42],[214,212],[212,207],[207,214],[183,42],[42,184],[184,183],[210,169],[169,211],[211,210],[140,170],[170,176],[176,140],[104,105],[105,69],[69,104],[193,122],[122,168],[168,193],[50,123],[123,187],[187,50],[89,96],[96,90],[90,89],[66,65],[65,107],[107,66],[179,89],[89,180],[180,179],[119,101],[101,120],[120,119],[68,63],[63,104],[104,68],[234,93],[93,227],[227,234],[16,15],[15,85],[85,16],[209,129],[129,49],[49,209],[15,14],[14,86],[86,15],[107,55],[55,9],[9,107],[120,100],[100,121],[121,120],[153,145],[145,22],[22,153],[178,88],[88,179],[179,178],[197,6],[6,196],[196,197],[89,88],[88,96],[96,89],[135,138],[138,136],[136,135],[138,215],[215,172],[172,138],[218,115],[115,219],[219,218],[41,42],[42,81],[81,41],[5,195],[195,51],[51,5],[57,43],[43,61],[61,57],[208,171],[171,199],[199,208],[41,81],[81,38],[38,41],[224,53],[53,225],[225,224],[24,144],[144,110],[110,24],[105,52],[52,66],[66,105],[118,229],[229,117],[117,118],[227,34],[34,234],[234,227],[66,107],[107,69],[69,66],[10,109],[109,151],[151,10],[219,48],[48,235],[235,219],[183,62],[62,191],[191,183],[142,129],[129,126],[126,142],[116,111],[111,143],[143,116],[118,117],[117,50],[50,118],[223,222],[222,52],[52,223],[94,19],[19,141],[141,94],[222,221],[221,65],[65,222],[196,3],[3,197],[197,196],[45,220],[220,44],[44,45],[156,70],[70,139],[139,156],[188,122],[122,245],[245,188],[139,71],[71,162],[162,139],[149,170],[170,150],[150,149],[122,188],[188,196],[196,122],[206,216],[216,92],[92,206],[164,2],[2,167],[167,164],[242,141],[141,241],[241,242],[0,164],[164,37],[37,0],[11,72],[72,12],[12,11],[12,38],[38,13],[13,12],[70,63],[63,71],[71,70],[31,226],[226,111],[111,31],[36,101],[101,205],[205,36],[203,206],[206,165],[165,203],[126,209],[209,217],[217,126],[98,165],[165,97],[97,98],[237,220],[220,218],[218,237],[237,239],[239,241],[241,237],[210,214],[214,169],[169,210],[140,171],[171,32],[32,140],[241,125],[125,237],[237,241],[179,86],[86,178],[178,179],[180,85],[85,179],[179,180],[181,84],[84,180],[180,181],[182,83],[83,181],[181,182],[194,201],[201,182],[182,194],[177,137],[137,132],[132,177],[184,76],[76,183],[183,184],[185,61],[61,184],[184,185],[186,57],[57,185],[185,186],[216,212],[212,186],[186,216],[192,214],[214,187],[187,192],[139,34],[34,156],[156,139],[218,79],[79,237],[237,218],[147,123],[123,177],[177,147],[45,44],[44,4],[4,45],[208,201],[201,32],[32,208],[98,64],[64,129],[129,98],[192,213],[213,138],[138,192],[235,59],[59,219],[219,235],[141,242],[242,97],[97,141],[97,2],[2,141],[141,97],[240,75],[75,235],[235,240],[229,24],[24,228],[228,229],[31,25],[25,226],[226,31],[230,23],[23,229],[229,230],[231,22],[22,230],[230,231],[232,26],[26,231],[231,232],[233,112],[112,232],[232,233],[244,189],[189,243],[243,244],[189,221],[221,190],[190,189],[222,28],[28,221],[221,222],[223,27],[27,222],[222,223],[224,29],[29,223],[223,224],[225,30],[30,224],[224,225],[113,247],[247,225],[225,113],[99,60],[60,240],[240,99],[213,147],[147,215],[215,213],[60,20],[20,166],[166,60],[192,187],[187,213],[213,192],[243,112],[112,244],[244,243],[244,233],[233,245],[245,244],[245,128],[128,188],[188,245],[188,114],[114,174],[174,188],[134,131],[131,220],[220,134],[174,217],[217,236],[236,174],[236,198],[198,134],[134,236],[215,177],[177,58],[58,215],[156,143],[143,124],[124,156],[25,110],[110,7],[7,25],[31,228],[228,25],[25,31],[264,356],[356,368],[368,264],[0,11],[11,267],[267,0],[451,452],[452,349],[349,451],[267,302],[302,269],[269,267],[350,357],[357,277],[277,350],[350,452],[452,357],[357,350],[299,333],[333,297],[297,299],[396,175],[175,377],[377,396],[280,347],[347,330],[330,280],[269,303],[303,270],[270,269],[151,9],[9,337],[337,151],[344,278],[278,360],[360,344],[424,418],[418,431],[431,424],[270,304],[304,409],[409,270],[272,310],[310,407],[407,272],[322,270],[270,410],[410,322],[449,450],[450,347],[347,449],[432,422],[422,434],[434,432],[18,313],[313,17],[17,18],[291,306],[306,375],[375,291],[259,387],[387,260],[260,259],[424,335],[335,418],[418,424],[434,364],[364,416],[416,434],[391,423],[423,327],[327,391],[301,251],[251,298],[298,301],[275,281],[281,4],[4,275],[254,373],[373,253],[253,254],[375,307],[307,321],[321,375],[280,425],[425,411],[411,280],[200,421],[421,18],[18,200],[335,321],[321,406],[406,335],[321,320],[320,405],[405,321],[314,315],[315,17],[17,314],[423,426],[426,266],[266,423],[396,377],[377,369],[369,396],[270,322],[322,269],[269,270],[413,417],[417,464],[464,413],[385,386],[386,258],[258,385],[248,456],[456,419],[419,248],[298,284],[284,333],[333,298],[168,417],[417,8],[8,168],[448,346],[346,261],[261,448],[417,413],[413,285],[285,417],[326,327],[327,328],[328,326],[277,355],[355,329],[329,277],[309,392],[392,438],[438,309],[381,382],[382,256],[256,381],[279,429],[429,360],[360,279],[365,364],[364,379],[379,365],[355,277],[277,437],[437,355],[282,443],[443,283],[283,282],[281,275],[275,363],[363,281],[395,431],[431,369],[369,395],[299,297],[297,337],[337,299],[335,273],[273,321],[321,335],[348,450],[450,349],[349,348],[359,446],[446,467],[467,359],[283,293],[293,282],[282,283],[250,458],[458,462],[462,250],[300,276],[276,383],[383,300],[292,308],[308,325],[325,292],[283,276],[276,293],[293,283],[264,372],[372,447],[447,264],[346,352],[352,340],[340,346],[354,274],[274,19],[19,354],[363,456],[456,281],[281,363],[426,436],[436,425],[425,426],[380,381],[381,252],[252,380],[267,269],[269,393],[393,267],[421,200],[200,428],[428,421],[371,266],[266,329],[329,371],[432,287],[287,422],[422,432],[290,250],[250,328],[328,290],[385,258],[258,384],[384,385],[446,265],[265,342],[342,446],[386,387],[387,257],[257,386],[422,424],[424,430],[430,422],[445,342],[342,276],[276,445],[422,273],[273,424],[424,422],[306,292],[292,307],[307,306],[352,366],[366,345],[345,352],[268,271],[271,302],[302,268],[358,423],[423,371],[371,358],[327,294],[294,460],[460,327],[331,279],[279,294],[294,331],[303,271],[271,304],[304,303],[436,432],[432,427],[427,436],[304,272],[272,408],[408,304],[395,394],[394,431],[431,395],[378,395],[395,400],[400,378],[296,334],[334,299],[299,296],[6,351],[351,168],[168,6],[376,352],[352,411],[411,376],[307,325],[325,320],[320,307],[285,295],[295,336],[336,285],[320,319],[319,404],[404,320],[329,330],[330,349],[349,329],[334,293],[293,333],[333,334],[366,323],[323,447],[447,366],[316,15],[15,315],[315,316],[331,358],[358,279],[279,331],[317,14],[14,316],[316,317],[8,285],[285,9],[9,8],[277,329],[329,350],[350,277],[253,374],[374,252],[252,253],[319,318],[318,403],[403,319],[351,6],[6,419],[419,351],[324,318],[318,325],[325,324],[397,367],[367,365],[365,397],[288,435],[435,397],[397,288],[278,344],[344,439],[439,278],[310,272],[272,311],[311,310],[248,195],[195,281],[281,248],[375,273],[273,291],[291,375],[175,396],[396,199],[199,175],[312,311],[311,268],[268,312],[276,283],[283,445],[445,276],[390,373],[373,339],[339,390],[295,282],[282,296],[296,295],[448,449],[449,346],[346,448],[356,264],[264,454],[454,356],[337,336],[336,299],[299,337],[337,338],[338,151],[151,337],[294,278],[278,455],[455,294],[308,292],[292,415],[415,308],[429,358],[358,355],[355,429],[265,340],[340,372],[372,265],[352,346],[346,280],[280,352],[295,442],[442,282],[282,295],[354,19],[19,370],[370,354],[285,441],[441,295],[295,285],[195,248],[248,197],[197,195],[457,440],[440,274],[274,457],[301,300],[300,368],[368,301],[417,351],[351,465],[465,417],[251,301],[301,389],[389,251],[394,395],[395,379],[379,394],[399,412],[412,419],[419,399],[410,436],[436,322],[322,410],[326,2],[2,393],[393,326],[354,370],[370,461],[461,354],[393,164],[164,267],[267,393],[268,302],[302,12],[12,268],[312,268],[268,13],[13,312],[298,293],[293,301],[301,298],[265,446],[446,340],[340,265],[280,330],[330,425],[425,280],[322,426],[426,391],[391,322],[420,429],[429,437],[437,420],[393,391],[391,326],[326,393],[344,440],[440,438],[438,344],[458,459],[459,461],[461,458],[364,434],[434,394],[394,364],[428,396],[396,262],[262,428],[274,354],[354,457],[457,274],[317,316],[316,402],[402,317],[316,315],[315,403],[403,316],[315,314],[314,404],[404,315],[314,313],[313,405],[405,314],[313,421],[421,406],[406,313],[323,366],[366,361],[361,323],[292,306],[306,407],[407,292],[306,291],[291,408],[408,306],[291,287],[287,409],[409,291],[287,432],[432,410],[410,287],[427,434],[434,411],[411,427],[372,264],[264,383],[383,372],[459,309],[309,457],[457,459],[366,352],[352,401],[401,366],[1,274],[274,4],[4,1],[418,421],[421,262],[262,418],[331,294],[294,358],[358,331],[435,433],[433,367],[367,435],[392,289],[289,439],[439,392],[328,462],[462,326],[326,328],[94,2],[2,370],[370,94],[289,305],[305,455],[455,289],[339,254],[254,448],[448,339],[359,255],[255,446],[446,359],[254,253],[253,449],[449,254],[253,252],[252,450],[450,253],[252,256],[256,451],[451,252],[256,341],[341,452],[452,256],[414,413],[413,463],[463,414],[286,441],[441,414],[414,286],[286,258],[258,441],[441,286],[258,257],[257,442],[442,258],[257,259],[259,443],[443,257],[259,260],[260,444],[444,259],[260,467],[467,445],[445,260],[309,459],[459,250],[250,309],[305,289],[289,290],[290,305],[305,290],[290,460],[460,305],[401,376],[376,435],[435,401],[309,250],[250,392],[392,309],[376,411],[411,433],[433,376],[453,341],[341,464],[464,453],[357,453],[453,465],[465,357],[343,357],[357,412],[412,343],[437,343],[343,399],[399,437],[344,360],[360,440],[440,344],[420,437],[437,456],[456,420],[360,420],[420,363],[363,360],[361,401],[401,288],[288,361],[265,372],[372,353],[353,265],[390,339],[339,249],[249,390],[339,448],[448,255],[255,339]);function mu(e){e.j={faceLandmarks:[],faceBlendshapes:[],facialTransformationMatrixes:[]}}var gu=class extends ru{constructor(e,t){super(new Zo(e,t),"image_in","norm_rect",!1),this.j={faceLandmarks:[],faceBlendshapes:[],facialTransformationMatrixes:[]},this.outputFacialTransformationMatrixes=this.outputFaceBlendshapes=!1,yn(e=this.h=new ja,0,1,t=new za),this.v=new Ha,yn(this.h,0,3,this.v),this.s=new Va,yn(this.h,0,2,this.s),En(this.s,4,1),Cn(this.s,2,.5),Cn(this.v,2,.5),Cn(this.h,4,.5)}get baseOptions(){return fn(this.h,za,1)}set baseOptions(e){yn(this.h,0,1,e)}o(e){return"numFaces"in e&&En(this.s,4,e.numFaces??1),"minFaceDetectionConfidence"in e&&Cn(this.s,2,e.minFaceDetectionConfidence??.5),"minTrackingConfidence"in e&&Cn(this.h,4,e.minTrackingConfidence??.5),"minFacePresenceConfidence"in e&&Cn(this.v,2,e.minFacePresenceConfidence??.5),"outputFaceBlendshapes"in e&&(this.outputFaceBlendshapes=!!e.outputFaceBlendshapes),"outputFacialTransformationMatrixes"in e&&(this.outputFacialTransformationMatrixes=!!e.outputFacialTransformationMatrixes),this.l(e)}D(e,t){return mu(this),eu(this,e,t),this.j}F(e,t,n){return mu(this),tu(this,e,n,t),this.j}m(){var e=new ia;sa(e,"image_in"),sa(e,"norm_rect"),aa(e,"face_landmarks");const t=new Ks;tr(t,Xa,this.h);const n=new Js;Ys(n,"mediapipe.tasks.vision.face_landmarker.FaceLandmarkerGraph"),Zs(n,"IMAGE:image_in"),Zs(n,"NORM_RECT:norm_rect"),Qs(n,"NORM_LANDMARKS:face_landmarks"),n.o(t),ra(e,n),this.g.attachProtoVectorListener("face_landmarks",(e,t)=>{for(const t of e)e=wa(t),this.j.faceLandmarks.push(Fi(e));Ji(this,t)}),this.g.attachEmptyPacketListener("face_landmarks",e=>{Ji(this,e)}),this.outputFaceBlendshapes&&(aa(e,"blendshapes"),Qs(n,"BLENDSHAPES:blendshapes"),this.g.attachProtoVectorListener("blendshapes",(e,t)=>{if(this.outputFaceBlendshapes)for(const t of e)e=da(t),this.j.faceBlendshapes.push(_i(e.g()??[]));Ji(this,t)}),this.g.attachEmptyPacketListener("blendshapes",e=>{Ji(this,e)})),this.outputFacialTransformationMatrixes&&(aa(e,"face_geometry"),Qs(n,"FACE_GEOMETRY:face_geometry"),this.g.attachProtoVectorListener("face_geometry",(e,t)=>{if(this.outputFacialTransformationMatrixes)for(const t of e)(e=fn(Ga(t),va,2))&&this.j.facialTransformationMatrixes.push({rows:kn(Nn(e,1),0)??0,columns:kn(Nn(e,2),0)??0,data:tn(e,3,He,en()).slice()??[]});Ji(this,t)}),this.g.attachEmptyPacketListener("face_geometry",e=>{Ji(this,e)})),e=e.g(),this.setGraph(new Uint8Array(e),!0)}};gu.prototype.detectForVideo=gu.prototype.F,gu.prototype.detect=gu.prototype.D,gu.prototype.setOptions=gu.prototype.o,gu.createFromModelPath=function(e,t){return Qo(gu,e,{baseOptions:{modelAssetPath:t}})},gu.createFromModelBuffer=function(e,t){return Qo(gu,e,{baseOptions:{modelAssetBuffer:t}})},gu.createFromOptions=function(e,t){return Qo(gu,e,t)},gu.FACE_LANDMARKS_LIPS=au,gu.FACE_LANDMARKS_LEFT_EYE=iu,gu.FACE_LANDMARKS_LEFT_EYEBROW=ou,gu.FACE_LANDMARKS_LEFT_IRIS=uu,gu.FACE_LANDMARKS_RIGHT_EYE=lu,gu.FACE_LANDMARKS_RIGHT_EYEBROW=cu,gu.FACE_LANDMARKS_RIGHT_IRIS=hu,gu.FACE_LANDMARKS_FACE_OVAL=du,gu.FACE_LANDMARKS_CONTOURS=pu,gu.FACE_LANDMARKS_TESSELATION=fu;var yu=class extends ru{constructor(e,t){super(new Zo(e,t),"image_in","norm_rect",!0),yn(e=this.j=new Ya,0,1,t=new za)}get baseOptions(){return fn(this.j,za,1)}set baseOptions(e){yn(this.j,0,1,e)}o(e){return super.l(e)}Pa(e,t,n){const r="function"!=typeof t?t:{};if(this.h="function"==typeof t?t:n,eu(this,e,r??{}),!this.h)return this.s}m(){var e=new ia;sa(e,"image_in"),sa(e,"norm_rect"),aa(e,"stylized_image");const t=new Ks;tr(t,Za,this.j);const n=new Js;Ys(n,"mediapipe.tasks.vision.face_stylizer.FaceStylizerGraph"),Zs(n,"IMAGE:image_in"),Zs(n,"NORM_RECT:norm_rect"),Qs(n,"STYLIZED_IMAGE:stylized_image"),n.o(t),ra(e,n),this.g.V("stylized_image",(e,t)=>{var n=!this.h,r=e.data,s=e.width;const a=s*(e=e.height);if(r instanceof Uint8Array)if(r.length===3*a){const t=new Uint8ClampedArray(4*a);for(let e=0;e<a;++e)t[4*e]=r[3*e],t[4*e+1]=r[3*e+1],t[4*e+2]=r[3*e+2],t[4*e+3]=255;r=new ImageData(t,s,e)}else{if(r.length!==4*a)throw Error("Unsupported channel count: "+r.length/a);r=new ImageData(new Uint8ClampedArray(r.buffer,r.byteOffset,r.length),s,e)}else if(!(r instanceof WebGLTexture))throw Error(`Unsupported format: ${r.constructor.name}`);s=new jo([r],!1,!1,this.g.i.canvas,this.P,s,e),this.s=n=n?s.clone():s,this.h&&this.h(n),Ji(this,t)}),this.g.attachEmptyPacketListener("stylized_image",e=>{this.s=null,this.h&&this.h(null),Ji(this,e)}),e=e.g(),this.setGraph(new Uint8Array(e),!0)}};yu.prototype.stylize=yu.prototype.Pa,yu.prototype.setOptions=yu.prototype.o,yu.createFromModelPath=function(e,t){return Qo(yu,e,{baseOptions:{modelAssetPath:t}})},yu.createFromModelBuffer=function(e,t){return Qo(yu,e,{baseOptions:{modelAssetBuffer:t}})},yu.createFromOptions=function(e,t){return Qo(yu,e,t)};var bu=qo([0,1],[1,2],[2,3],[3,4],[0,5],[5,6],[6,7],[7,8],[5,9],[9,10],[10,11],[11,12],[9,13],[13,14],[14,15],[15,16],[13,17],[0,17],[17,18],[18,19],[19,20]);function xu(e){e.gestures=[],e.landmarks=[],e.worldLandmarks=[],e.handedness=[]}function wu(e){return 0===e.gestures.length?{gestures:[],landmarks:[],worldLandmarks:[],handedness:[],handednesses:[]}:{gestures:e.gestures,landmarks:e.landmarks,worldLandmarks:e.worldLandmarks,handedness:e.handedness,handednesses:e.handedness}}function vu(e,t=!0){const n=[];for(const s of e){var r=da(s);e=[];for(const n of r.g())r=t&&null!=Nn(n,1)?kn(Nn(n,1),0):-1,e.push({score:In(n,2)??0,index:r,categoryName:Sn(n,3)??"",displayName:Sn(n,4)??""});n.push(e)}return n}var ku=class extends ru{constructor(e,t){super(new Zo(e,t),"image_in","norm_rect",!1),this.gestures=[],this.landmarks=[],this.worldLandmarks=[],this.handedness=[],yn(e=this.j=new si,0,1,t=new za),this.s=new ri,yn(this.j,0,2,this.s),this.C=new ni,yn(this.s,0,3,this.C),this.v=new ti,yn(this.s,0,2,this.v),this.h=new ei,yn(this.j,0,3,this.h),Cn(this.v,2,.5),Cn(this.s,4,.5),Cn(this.C,2,.5)}get baseOptions(){return fn(this.j,za,1)}set baseOptions(e){yn(this.j,0,1,e)}o(e){if(En(this.v,3,e.numHands??1),"minHandDetectionConfidence"in e&&Cn(this.v,2,e.minHandDetectionConfidence??.5),"minTrackingConfidence"in e&&Cn(this.s,4,e.minTrackingConfidence??.5),"minHandPresenceConfidence"in e&&Cn(this.C,2,e.minHandPresenceConfidence??.5),e.cannedGesturesClassifierOptions){var t=new Qa,n=t,r=Ri(e.cannedGesturesClassifierOptions,fn(this.h,Qa,3)?.h());yn(n,0,2,r),yn(this.h,0,3,t)}else void 0===e.cannedGesturesClassifierOptions&&fn(this.h,Qa,3)?.g();return e.customGesturesClassifierOptions?(yn(n=t=new Qa,0,2,r=Ri(e.customGesturesClassifierOptions,fn(this.h,Qa,4)?.h())),yn(this.h,0,4,t)):void 0===e.customGesturesClassifierOptions&&fn(this.h,Qa,4)?.g(),this.l(e)}Ka(e,t){return xu(this),eu(this,e,t),wu(this)}La(e,t,n){return xu(this),tu(this,e,n,t),wu(this)}m(){var e=new ia;sa(e,"image_in"),sa(e,"norm_rect"),aa(e,"hand_gestures"),aa(e,"hand_landmarks"),aa(e,"world_hand_landmarks"),aa(e,"handedness");const t=new Ks;tr(t,li,this.j);const n=new Js;Ys(n,"mediapipe.tasks.vision.gesture_recognizer.GestureRecognizerGraph"),Zs(n,"IMAGE:image_in"),Zs(n,"NORM_RECT:norm_rect"),Qs(n,"HAND_GESTURES:hand_gestures"),Qs(n,"LANDMARKS:hand_landmarks"),Qs(n,"WORLD_LANDMARKS:world_hand_landmarks"),Qs(n,"HANDEDNESS:handedness"),n.o(t),ra(e,n),this.g.attachProtoVectorListener("hand_landmarks",(e,t)=>{for(const t of e){e=wa(t);const n=[];for(const t of gn(e,xa,1))n.push({x:In(t,1)??0,y:In(t,2)??0,z:In(t,3)??0,visibility:In(t,4)??0});this.landmarks.push(n)}Ji(this,t)}),this.g.attachEmptyPacketListener("hand_landmarks",e=>{Ji(this,e)}),this.g.attachProtoVectorListener("world_hand_landmarks",(e,t)=>{for(const t of e){e=ba(t);const n=[];for(const t of gn(e,ya,1))n.push({x:In(t,1)??0,y:In(t,2)??0,z:In(t,3)??0,visibility:In(t,4)??0});this.worldLandmarks.push(n)}Ji(this,t)}),this.g.attachEmptyPacketListener("world_hand_landmarks",e=>{Ji(this,e)}),this.g.attachProtoVectorListener("hand_gestures",(e,t)=>{this.gestures.push(...vu(e,!1)),Ji(this,t)}),this.g.attachEmptyPacketListener("hand_gestures",e=>{Ji(this,e)}),this.g.attachProtoVectorListener("handedness",(e,t)=>{this.handedness.push(...vu(e)),Ji(this,t)}),this.g.attachEmptyPacketListener("handedness",e=>{Ji(this,e)}),e=e.g(),this.setGraph(new Uint8Array(e),!0)}};function Nu(e){return{landmarks:e.landmarks,worldLandmarks:e.worldLandmarks,handednesses:e.handedness,handedness:e.handedness}}ku.prototype.recognizeForVideo=ku.prototype.La,ku.prototype.recognize=ku.prototype.Ka,ku.prototype.setOptions=ku.prototype.o,ku.createFromModelPath=function(e,t){return Qo(ku,e,{baseOptions:{modelAssetPath:t}})},ku.createFromModelBuffer=function(e,t){return Qo(ku,e,{baseOptions:{modelAssetBuffer:t}})},ku.createFromOptions=function(e,t){return Qo(ku,e,t)},ku.HAND_CONNECTIONS=bu;var Iu=class extends ru{constructor(e,t){super(new Zo(e,t),"image_in","norm_rect",!1),this.landmarks=[],this.worldLandmarks=[],this.handedness=[],yn(e=this.h=new ri,0,1,t=new za),this.s=new ni,yn(this.h,0,3,this.s),this.j=new ti,yn(this.h,0,2,this.j),En(this.j,3,1),Cn(this.j,2,.5),Cn(this.s,2,.5),Cn(this.h,4,.5)}get baseOptions(){return fn(this.h,za,1)}set baseOptions(e){yn(this.h,0,1,e)}o(e){return"numHands"in e&&En(this.j,3,e.numHands??1),"minHandDetectionConfidence"in e&&Cn(this.j,2,e.minHandDetectionConfidence??.5),"minTrackingConfidence"in e&&Cn(this.h,4,e.minTrackingConfidence??.5),"minHandPresenceConfidence"in e&&Cn(this.s,2,e.minHandPresenceConfidence??.5),this.l(e)}D(e,t){return this.landmarks=[],this.worldLandmarks=[],this.handedness=[],eu(this,e,t),Nu(this)}F(e,t,n){return this.landmarks=[],this.worldLandmarks=[],this.handedness=[],tu(this,e,n,t),Nu(this)}m(){var e=new ia;sa(e,"image_in"),sa(e,"norm_rect"),aa(e,"hand_landmarks"),aa(e,"world_hand_landmarks"),aa(e,"handedness");const t=new Ks;tr(t,ci,this.h);const n=new Js;Ys(n,"mediapipe.tasks.vision.hand_landmarker.HandLandmarkerGraph"),Zs(n,"IMAGE:image_in"),Zs(n,"NORM_RECT:norm_rect"),Qs(n,"LANDMARKS:hand_landmarks"),Qs(n,"WORLD_LANDMARKS:world_hand_landmarks"),Qs(n,"HANDEDNESS:handedness"),n.o(t),ra(e,n),this.g.attachProtoVectorListener("hand_landmarks",(e,t)=>{for(const t of e)e=wa(t),this.landmarks.push(Fi(e));Ji(this,t)}),this.g.attachEmptyPacketListener("hand_landmarks",e=>{Ji(this,e)}),this.g.attachProtoVectorListener("world_hand_landmarks",(e,t)=>{for(const t of e)e=ba(t),this.worldLandmarks.push(Mi(e));Ji(this,t)}),this.g.attachEmptyPacketListener("world_hand_landmarks",e=>{Ji(this,e)}),this.g.attachProtoVectorListener("handedness",(e,t)=>{var n=this.handedness,r=n.push;const s=[];for(const t of e){e=da(t);const n=[];for(const t of e.g())n.push({score:In(t,2)??0,index:kn(Nn(t,1),0)??-1,categoryName:Sn(t,3)??"",displayName:Sn(t,4)??""});s.push(n)}r.call(n,...s),Ji(this,t)}),this.g.attachEmptyPacketListener("handedness",e=>{Ji(this,e)}),e=e.g(),this.setGraph(new Uint8Array(e),!0)}};Iu.prototype.detectForVideo=Iu.prototype.F,Iu.prototype.detect=Iu.prototype.D,Iu.prototype.setOptions=Iu.prototype.o,Iu.createFromModelPath=function(e,t){return Qo(Iu,e,{baseOptions:{modelAssetPath:t}})},Iu.createFromModelBuffer=function(e,t){return Qo(Iu,e,{baseOptions:{modelAssetBuffer:t}})},Iu.createFromOptions=function(e,t){return Qo(Iu,e,t)},Iu.HAND_CONNECTIONS=bu;var Su=qo([0,1],[1,2],[2,3],[3,7],[0,4],[4,5],[5,6],[6,8],[9,10],[11,12],[11,13],[13,15],[15,17],[15,19],[15,21],[17,19],[12,14],[14,16],[16,18],[16,20],[16,22],[18,20],[11,23],[12,24],[23,24],[23,25],[24,26],[25,27],[26,28],[27,29],[28,30],[29,31],[30,32],[27,31],[28,32]);function Tu(e){e.h={faceLandmarks:[],faceBlendshapes:[],poseLandmarks:[],poseWorldLandmarks:[],poseSegmentationMasks:[],leftHandLandmarks:[],leftHandWorldLandmarks:[],rightHandLandmarks:[],rightHandWorldLandmarks:[]}}function Eu(e){try{if(!e.C)return e.h;e.C(e.h)}finally{no(e)}}function Cu(e,t){e=wa(e),t.push(Fi(e))}var $u=class extends ru{constructor(e,t){super(new Zo(e,t),"input_frames_image",null,!1),this.h={faceLandmarks:[],faceBlendshapes:[],poseLandmarks:[],poseWorldLandmarks:[],poseSegmentationMasks:[],leftHandLandmarks:[],leftHandWorldLandmarks:[],rightHandLandmarks:[],rightHandWorldLandmarks:[]},this.outputPoseSegmentationMasks=this.outputFaceBlendshapes=!1,yn(e=this.j=new fi,0,1,t=new za),this.K=new ni,yn(this.j,0,2,this.K),this.aa=new hi,yn(this.j,0,3,this.aa),this.s=new Va,yn(this.j,0,4,this.s),this.I=new Ha,yn(this.j,0,5,this.I),this.v=new di,yn(this.j,0,6,this.v),this.L=new pi,yn(this.j,0,7,this.L),Cn(this.s,2,.5),Cn(this.s,3,.3),Cn(this.I,2,.5),Cn(this.v,2,.5),Cn(this.v,3,.3),Cn(this.L,2,.5),Cn(this.K,2,.5)}get baseOptions(){return fn(this.j,za,1)}set baseOptions(e){yn(this.j,0,1,e)}o(e){return"minFaceDetectionConfidence"in e&&Cn(this.s,2,e.minFaceDetectionConfidence??.5),"minFaceSuppressionThreshold"in e&&Cn(this.s,3,e.minFaceSuppressionThreshold??.3),"minFacePresenceConfidence"in e&&Cn(this.I,2,e.minFacePresenceConfidence??.5),"outputFaceBlendshapes"in e&&(this.outputFaceBlendshapes=!!e.outputFaceBlendshapes),"minPoseDetectionConfidence"in e&&Cn(this.v,2,e.minPoseDetectionConfidence??.5),"minPoseSuppressionThreshold"in e&&Cn(this.v,3,e.minPoseSuppressionThreshold??.3),"minPosePresenceConfidence"in e&&Cn(this.L,2,e.minPosePresenceConfidence??.5),"outputPoseSegmentationMasks"in e&&(this.outputPoseSegmentationMasks=!!e.outputPoseSegmentationMasks),"minHandLandmarksConfidence"in e&&Cn(this.K,2,e.minHandLandmarksConfidence??.5),this.l(e)}D(e,t,n){const r="function"!=typeof t?t:{};return this.C="function"==typeof t?t:n,Tu(this),eu(this,e,r),Eu(this)}F(e,t,n,r){const s="function"!=typeof n?n:{};return this.C="function"==typeof n?n:r,Tu(this),tu(this,e,s,t),Eu(this)}m(){var e=new ia;sa(e,"input_frames_image"),aa(e,"pose_landmarks"),aa(e,"pose_world_landmarks"),aa(e,"face_landmarks"),aa(e,"left_hand_landmarks"),aa(e,"left_hand_world_landmarks"),aa(e,"right_hand_landmarks"),aa(e,"right_hand_world_landmarks");const t=new Ks,n=new Fs;on(n,1,nt("type.googleapis.com/mediapipe.tasks.vision.holistic_landmarker.proto.HolisticLandmarkerGraphOptions"),""),function(e,t){if(null!=t)if(Array.isArray(t))Xt(e,2,zt(t,Bt,void 0,void 0,!1));else{if(!("string"==typeof t||t instanceof z||_(t)))throw Error("invalid value in Any.value field: "+t+" expected a ByteString, a base64 encoded string, a Uint8Array or a jspb array");on(e,2,he(t,!1,!1),O())}}(n,this.j.g());const r=new Js;Ys(r,"mediapipe.tasks.vision.holistic_landmarker.HolisticLandmarkerGraph"),vn(r,8,Fs,n),Zs(r,"IMAGE:input_frames_image"),Qs(r,"POSE_LANDMARKS:pose_landmarks"),Qs(r,"POSE_WORLD_LANDMARKS:pose_world_landmarks"),Qs(r,"FACE_LANDMARKS:face_landmarks"),Qs(r,"LEFT_HAND_LANDMARKS:left_hand_landmarks"),Qs(r,"LEFT_HAND_WORLD_LANDMARKS:left_hand_world_landmarks"),Qs(r,"RIGHT_HAND_LANDMARKS:right_hand_landmarks"),Qs(r,"RIGHT_HAND_WORLD_LANDMARKS:right_hand_world_landmarks"),r.o(t),ra(e,r),eo(this,e),this.g.attachProtoListener("pose_landmarks",(e,t)=>{Cu(e,this.h.poseLandmarks),Ji(this,t)}),this.g.attachEmptyPacketListener("pose_landmarks",e=>{Ji(this,e)}),this.g.attachProtoListener("pose_world_landmarks",(e,t)=>{var n=this.h.poseWorldLandmarks;e=ba(e),n.push(Mi(e)),Ji(this,t)}),this.g.attachEmptyPacketListener("pose_world_landmarks",e=>{Ji(this,e)}),this.outputPoseSegmentationMasks&&(Qs(r,"POSE_SEGMENTATION_MASK:pose_segmentation_mask"),to(this,"pose_segmentation_mask"),this.g.V("pose_segmentation_mask",(e,t)=>{this.h.poseSegmentationMasks=[nu(this,e,!0,!this.C)],Ji(this,t)}),this.g.attachEmptyPacketListener("pose_segmentation_mask",e=>{this.h.poseSegmentationMasks=[],Ji(this,e)})),this.g.attachProtoListener("face_landmarks",(e,t)=>{Cu(e,this.h.faceLandmarks),Ji(this,t)}),this.g.attachEmptyPacketListener("face_landmarks",e=>{Ji(this,e)}),this.outputFaceBlendshapes&&(aa(e,"extra_blendshapes"),Qs(r,"FACE_BLENDSHAPES:extra_blendshapes"),this.g.attachProtoListener("extra_blendshapes",(e,t)=>{var n=this.h.faceBlendshapes;this.outputFaceBlendshapes&&(e=da(e),n.push(_i(e.g()??[]))),Ji(this,t)}),this.g.attachEmptyPacketListener("extra_blendshapes",e=>{Ji(this,e)})),this.g.attachProtoListener("left_hand_landmarks",(e,t)=>{Cu(e,this.h.leftHandLandmarks),Ji(this,t)}),this.g.attachEmptyPacketListener("left_hand_landmarks",e=>{Ji(this,e)}),this.g.attachProtoListener("left_hand_world_landmarks",(e,t)=>{var n=this.h.leftHandWorldLandmarks;e=ba(e),n.push(Mi(e)),Ji(this,t)}),this.g.attachEmptyPacketListener("left_hand_world_landmarks",e=>{Ji(this,e)}),this.g.attachProtoListener("right_hand_landmarks",(e,t)=>{Cu(e,this.h.rightHandLandmarks),Ji(this,t)}),this.g.attachEmptyPacketListener("right_hand_landmarks",e=>{Ji(this,e)}),this.g.attachProtoListener("right_hand_world_landmarks",(e,t)=>{var n=this.h.rightHandWorldLandmarks;e=ba(e),n.push(Mi(e)),Ji(this,t)}),this.g.attachEmptyPacketListener("right_hand_world_landmarks",e=>{Ji(this,e)}),e=e.g(),this.setGraph(new Uint8Array(e),!0)}};$u.prototype.detectForVideo=$u.prototype.F,$u.prototype.detect=$u.prototype.D,$u.prototype.setOptions=$u.prototype.o,$u.createFromModelPath=function(e,t){return Qo($u,e,{baseOptions:{modelAssetPath:t}})},$u.createFromModelBuffer=function(e,t){return Qo($u,e,{baseOptions:{modelAssetBuffer:t}})},$u.createFromOptions=function(e,t){return Qo($u,e,t)},$u.HAND_CONNECTIONS=bu,$u.POSE_CONNECTIONS=Su,$u.FACE_LANDMARKS_LIPS=au,$u.FACE_LANDMARKS_LEFT_EYE=iu,$u.FACE_LANDMARKS_LEFT_EYEBROW=ou,$u.FACE_LANDMARKS_LEFT_IRIS=uu,$u.FACE_LANDMARKS_RIGHT_EYE=lu,$u.FACE_LANDMARKS_RIGHT_EYEBROW=cu,$u.FACE_LANDMARKS_RIGHT_IRIS=hu,$u.FACE_LANDMARKS_FACE_OVAL=du,$u.FACE_LANDMARKS_CONTOURS=pu,$u.FACE_LANDMARKS_TESSELATION=fu;var Au=class extends ru{constructor(e,t){super(new Zo(e,t),"input_image","norm_rect",!0),this.j={classifications:[]},yn(e=this.h=new yi,0,1,t=new za)}get baseOptions(){return fn(this.h,za,1)}set baseOptions(e){yn(this.h,0,1,e)}o(e){return yn(this.h,0,2,Ri(e,fn(this.h,Ra,2))),this.l(e)}ua(e,t){return this.j={classifications:[]},eu(this,e,t),this.j}va(e,t,n){return this.j={classifications:[]},tu(this,e,n,t),this.j}m(){var e=new ia;sa(e,"input_image"),sa(e,"norm_rect"),aa(e,"classifications");const t=new Ks;tr(t,bi,this.h);const n=new Js;Ys(n,"mediapipe.tasks.vision.image_classifier.ImageClassifierGraph"),Zs(n,"IMAGE:input_image"),Zs(n,"NORM_RECT:norm_rect"),Qs(n,"CLASSIFICATIONS:classifications"),n.o(t),ra(e,n),this.g.attachProtoListener("classifications",(e,t)=>{this.j=function(e){const t={classifications:gn(e,Ia,1).map(e=>_i(fn(e,ca,4)?.g()??[],kn(Nn(e,2),0),Sn(e,3)))};return null!=et(jt(e,2))&&(t.timestampMs=kn(et(jt(e,2)),0)),t}(Sa(e)),Ji(this,t)}),this.g.attachEmptyPacketListener("classifications",e=>{Ji(this,e)}),e=e.g(),this.setGraph(new Uint8Array(e),!0)}};Au.prototype.classifyForVideo=Au.prototype.va,Au.prototype.classify=Au.prototype.ua,Au.prototype.setOptions=Au.prototype.o,Au.createFromModelPath=function(e,t){return Qo(Au,e,{baseOptions:{modelAssetPath:t}})},Au.createFromModelBuffer=function(e,t){return Qo(Au,e,{baseOptions:{modelAssetBuffer:t}})},Au.createFromOptions=function(e,t){return Qo(Au,e,t)};var Ru=class extends ru{constructor(e,t){super(new Zo(e,t),"image_in","norm_rect",!0),this.h=new xi,this.embeddings={embeddings:[]},yn(e=this.h,0,1,t=new za)}get baseOptions(){return fn(this.h,za,1)}set baseOptions(e){yn(this.h,0,1,e)}o(e){var t=this.h,n=fn(this.h,Da,2);return n=n?n.clone():new Da,void 0!==e.l2Normalize?Tn(n,1,e.l2Normalize):"l2Normalize"in e&&Xt(n,1),void 0!==e.quantize?Tn(n,2,e.quantize):"quantize"in e&&Xt(n,2),yn(t,0,2,n),this.l(e)}Ba(e,t){return eu(this,e,t),this.embeddings}Ca(e,t,n){return tu(this,e,n,t),this.embeddings}m(){var e=new ia;sa(e,"image_in"),sa(e,"norm_rect"),aa(e,"embeddings_out");const t=new Ks;tr(t,wi,this.h);const n=new Js;Ys(n,"mediapipe.tasks.vision.image_embedder.ImageEmbedderGraph"),Zs(n,"IMAGE:image_in"),Zs(n,"NORM_RECT:norm_rect"),Qs(n,"EMBEDDINGS:embeddings_out"),n.o(t),ra(e,n),this.g.attachProtoListener("embeddings_out",(e,t)=>{e=Aa(e),this.embeddings=function(e){return{embeddings:gn(e,Ca,1).map(e=>{const t={headIndex:kn(Nn(e,3),0)??-1,headName:Sn(e,4)??""};if(void 0!==pn(e,Ta,un(e,1)))e=tn(e=fn(e,Ta,un(e,1)),1,He,en()),t.floatEmbedding=e.slice();else{const n=new Uint8Array(0);t.quantizedEmbedding=fn(e,Ea,un(e,2))?.qa()?.h()??n}return t}),timestampMs:kn(et(jt(e,2)),0)}}(e),Ji(this,t)}),this.g.attachEmptyPacketListener("embeddings_out",e=>{Ji(this,e)}),e=e.g(),this.setGraph(new Uint8Array(e),!0)}};Ru.cosineSimilarity=function(e,t){if(e.floatEmbedding&&t.floatEmbedding)e=Li(e.floatEmbedding,t.floatEmbedding);else{if(!e.quantizedEmbedding||!t.quantizedEmbedding)throw Error("Cannot compute cosine similarity between quantized and float embeddings.");e=Li(Oi(e.quantizedEmbedding),Oi(t.quantizedEmbedding))}return e},Ru.prototype.embedForVideo=Ru.prototype.Ca,Ru.prototype.embed=Ru.prototype.Ba,Ru.prototype.setOptions=Ru.prototype.o,Ru.createFromModelPath=function(e,t){return Qo(Ru,e,{baseOptions:{modelAssetPath:t}})},Ru.createFromModelBuffer=function(e,t){return Qo(Ru,e,{baseOptions:{modelAssetBuffer:t}})},Ru.createFromOptions=function(e,t){return Qo(Ru,e,t)};var _u=class{constructor(e,t,n){this.confidenceMasks=e,this.categoryMask=t,this.qualityScores=n}close(){this.confidenceMasks?.forEach(e=>{e.close()}),this.categoryMask?.close()}};function Du(e){e.categoryMask=void 0,e.confidenceMasks=void 0,e.qualityScores=void 0}function Fu(e){try{const t=new _u(e.confidenceMasks,e.categoryMask,e.qualityScores);if(!e.j)return t;e.j(t)}finally{no(e)}}_u.prototype.close=_u.prototype.close;var Mu=class extends ru{constructor(e,t){super(new Zo(e,t),"image_in","norm_rect",!1),this.s=[],this.outputCategoryMask=!1,this.outputConfidenceMasks=!0,this.h=new Si,this.v=new vi,yn(this.h,0,3,this.v),yn(e=this.h,0,1,t=new za)}get baseOptions(){return fn(this.h,za,1)}set baseOptions(e){yn(this.h,0,1,e)}o(e){return void 0!==e.displayNamesLocale?Xt(this.h,2,nt(e.displayNamesLocale)):"displayNamesLocale"in e&&Xt(this.h,2),"outputCategoryMask"in e&&(this.outputCategoryMask=e.outputCategoryMask??!1),"outputConfidenceMasks"in e&&(this.outputConfidenceMasks=e.outputConfidenceMasks??!0),super.l(e)}J(){!function(e){const t=gn(e.ea(),Js,1).filter(e=>Sn(e,1).includes("mediapipe.tasks.TensorsToSegmentationCalculator"));if(e.s=[],t.length>1)throw Error("The graph has more than one mediapipe.tasks.TensorsToSegmentationCalculator.");1===t.length&&(fn(t[0],Ks,7)?.l()?.g()??new Map).forEach((t,n)=>{e.s[Number(n)]=Sn(t,1)})}(this)}fa(e,t,n){const r="function"!=typeof t?t:{};return this.j="function"==typeof t?t:n,Du(this),eu(this,e,r),Fu(this)}Na(e,t,n,r){const s="function"!=typeof n?n:{};return this.j="function"==typeof n?n:r,Du(this),tu(this,e,s,t),Fu(this)}Fa(){return this.s}m(){var e=new ia;sa(e,"image_in"),sa(e,"norm_rect");const t=new Ks;tr(t,Ti,this.h);const n=new Js;Ys(n,"mediapipe.tasks.vision.image_segmenter.ImageSegmenterGraph"),Zs(n,"IMAGE:image_in"),Zs(n,"NORM_RECT:norm_rect"),n.o(t),ra(e,n),eo(this,e),this.outputConfidenceMasks&&(aa(e,"confidence_masks"),Qs(n,"CONFIDENCE_MASKS:confidence_masks"),to(this,"confidence_masks"),this.g.da("confidence_masks",(e,t)=>{this.confidenceMasks=e.map(e=>nu(this,e,!0,!this.j)),Ji(this,t)}),this.g.attachEmptyPacketListener("confidence_masks",e=>{this.confidenceMasks=[],Ji(this,e)})),this.outputCategoryMask&&(aa(e,"category_mask"),Qs(n,"CATEGORY_MASK:category_mask"),to(this,"category_mask"),this.g.V("category_mask",(e,t)=>{this.categoryMask=nu(this,e,!1,!this.j),Ji(this,t)}),this.g.attachEmptyPacketListener("category_mask",e=>{this.categoryMask=void 0,Ji(this,e)})),aa(e,"quality_scores"),Qs(n,"QUALITY_SCORES:quality_scores"),this.g.attachFloatVectorListener("quality_scores",(e,t)=>{this.qualityScores=e,Ji(this,t)}),this.g.attachEmptyPacketListener("quality_scores",e=>{this.categoryMask=void 0,Ji(this,e)}),e=e.g(),this.setGraph(new Uint8Array(e),!0)}};Mu.prototype.getLabels=Mu.prototype.Fa,Mu.prototype.segmentForVideo=Mu.prototype.Na,Mu.prototype.segment=Mu.prototype.fa,Mu.prototype.setOptions=Mu.prototype.o,Mu.createFromModelPath=function(e,t){return Qo(Mu,e,{baseOptions:{modelAssetPath:t}})},Mu.createFromModelBuffer=function(e,t){return Qo(Mu,e,{baseOptions:{modelAssetBuffer:t}})},Mu.createFromOptions=function(e,t){return Qo(Mu,e,t)};var Ou=class{constructor(e,t,n){this.confidenceMasks=e,this.categoryMask=t,this.qualityScores=n}close(){this.confidenceMasks?.forEach(e=>{e.close()}),this.categoryMask?.close()}};Ou.prototype.close=Ou.prototype.close;var Lu=class extends nr{constructor(e){super(e)}},zu=[0,ys,-2],Pu=[0,cs,-3,ws,cs,-1],Bu=[0,Pu],Vu=[0,Pu,ys,-1],Uu=class extends nr{constructor(e){super(e)}},Wu=[0,cs,-1,ws],Gu=class extends nr{constructor(){super()}},Hu=class extends nr{constructor(e){super(e)}},ju=[1,2,3,4,5,6,7,8,9,10,14,15],Ku=class extends nr{constructor(){super()}};Ku.prototype.g=Ds([0,Ss,[0,ju,Ts,Pu,Ts,[0,Pu,zu],Ts,Bu,Ts,[0,Bu,zu],Ts,Wu,Ts,[0,cs,-3,ws,$s],Ts,[0,cs,-3,ws],Ts,[0,Is,cs,-2,ws,ys,ws,-1,2,cs,zu],Ts,Vu,Ts,[0,Vu,zu],cs,zu,Is,Ts,[0,cs,-3,ws,zu,-1],Ts,[0,Ss,Wu]],Is,[0,Is,ys,-1,ws]]);var qu=class extends ru{constructor(e,t){super(new Zo(e,t),"image_in","norm_rect_in",!1),this.outputCategoryMask=!1,this.outputConfidenceMasks=!0,this.h=new Si,this.s=new vi,yn(this.h,0,3,this.s),yn(e=this.h,0,1,t=new za)}get baseOptions(){return fn(this.h,za,1)}set baseOptions(e){yn(this.h,0,1,e)}o(e){return"outputCategoryMask"in e&&(this.outputCategoryMask=e.outputCategoryMask??!1),"outputConfidenceMasks"in e&&(this.outputConfidenceMasks=e.outputConfidenceMasks??!0),super.l(e)}fa(e,t,n,r){const s="function"!=typeof n?n:{};this.j="function"==typeof n?n:r,this.qualityScores=this.categoryMask=this.confidenceMasks=void 0,n=this.B+1,r=new Ku;const a=new Hu;var i=new Lu;if(En(i,1,255),yn(a,0,12,i),t.keypoint&&t.scribble)throw Error("Cannot provide both keypoint and scribble.");if(t.keypoint){var o=new Uu;Tn(o,3,!0),Cn(o,1,t.keypoint.x),Cn(o,2,t.keypoint.y),bn(a,5,ju,o)}else{if(!t.scribble)throw Error("Must provide either a keypoint or a scribble.");for(o of(i=new Gu,t.scribble))Tn(t=new Uu,3,!0),Cn(t,1,o.x),Cn(t,2,o.y),vn(i,1,Uu,t);bn(a,15,ju,i)}vn(r,1,Hu,a),this.g.addProtoToStream(r.g(),"drishti.RenderData","roi_in",n),eu(this,e,s);e:{try{const e=new Ou(this.confidenceMasks,this.categoryMask,this.qualityScores);if(!this.j){var u=e;break e}this.j(e)}finally{no(this)}u=void 0}return u}m(){var e=new ia;sa(e,"image_in"),sa(e,"roi_in"),sa(e,"norm_rect_in");const t=new Ks;tr(t,Ti,this.h);const n=new Js;Ys(n,"mediapipe.tasks.vision.interactive_segmenter.InteractiveSegmenterGraph"),Zs(n,"IMAGE:image_in"),Zs(n,"ROI:roi_in"),Zs(n,"NORM_RECT:norm_rect_in"),n.o(t),ra(e,n),eo(this,e),this.outputConfidenceMasks&&(aa(e,"confidence_masks"),Qs(n,"CONFIDENCE_MASKS:confidence_masks"),to(this,"confidence_masks"),this.g.da("confidence_masks",(e,t)=>{this.confidenceMasks=e.map(e=>nu(this,e,!0,!this.j)),Ji(this,t)}),this.g.attachEmptyPacketListener("confidence_masks",e=>{this.confidenceMasks=[],Ji(this,e)})),this.outputCategoryMask&&(aa(e,"category_mask"),Qs(n,"CATEGORY_MASK:category_mask"),to(this,"category_mask"),this.g.V("category_mask",(e,t)=>{this.categoryMask=nu(this,e,!1,!this.j),Ji(this,t)}),this.g.attachEmptyPacketListener("category_mask",e=>{this.categoryMask=void 0,Ji(this,e)})),aa(e,"quality_scores"),Qs(n,"QUALITY_SCORES:quality_scores"),this.g.attachFloatVectorListener("quality_scores",(e,t)=>{this.qualityScores=e,Ji(this,t)}),this.g.attachEmptyPacketListener("quality_scores",e=>{this.categoryMask=void 0,Ji(this,e)}),e=e.g(),this.setGraph(new Uint8Array(e),!0)}};qu.prototype.segment=qu.prototype.fa,qu.prototype.setOptions=qu.prototype.o,qu.createFromModelPath=function(e,t){return Qo(qu,e,{baseOptions:{modelAssetPath:t}})},qu.createFromModelBuffer=function(e,t){return Qo(qu,e,{baseOptions:{modelAssetBuffer:t}})},qu.createFromOptions=function(e,t){return Qo(qu,e,t)};var Xu=class extends ru{constructor(e,t){super(new Zo(e,t),"input_frame_gpu","norm_rect",!1),this.j={detections:[]},yn(e=this.h=new Ei,0,1,t=new za)}get baseOptions(){return fn(this.h,za,1)}set baseOptions(e){yn(this.h,0,1,e)}o(e){return void 0!==e.displayNamesLocale?Xt(this.h,2,nt(e.displayNamesLocale)):"displayNamesLocale"in e&&Xt(this.h,2),void 0!==e.maxResults?En(this.h,3,e.maxResults):"maxResults"in e&&Xt(this.h,3),void 0!==e.scoreThreshold?Cn(this.h,4,e.scoreThreshold):"scoreThreshold"in e&&Xt(this.h,4),void 0!==e.categoryAllowlist?$n(this.h,5,e.categoryAllowlist):"categoryAllowlist"in e&&Xt(this.h,5),void 0!==e.categoryDenylist?$n(this.h,6,e.categoryDenylist):"categoryDenylist"in e&&Xt(this.h,6),this.l(e)}D(e,t){return this.j={detections:[]},eu(this,e,t),this.j}F(e,t,n){return this.j={detections:[]},tu(this,e,n,t),this.j}m(){var e=new ia;sa(e,"input_frame_gpu"),sa(e,"norm_rect"),aa(e,"detections");const t=new Ks;tr(t,Ci,this.h);const n=new Js;Ys(n,"mediapipe.tasks.vision.ObjectDetectorGraph"),Zs(n,"IMAGE:input_frame_gpu"),Zs(n,"NORM_RECT:norm_rect"),Qs(n,"DETECTIONS:detections"),n.o(t),ra(e,n),this.g.attachProtoVectorListener("detections",(e,t)=>{for(const t of e)e=ga(t),this.j.detections.push(Di(e));Ji(this,t)}),this.g.attachEmptyPacketListener("detections",e=>{Ji(this,e)}),e=e.g(),this.setGraph(new Uint8Array(e),!0)}};Xu.prototype.detectForVideo=Xu.prototype.F,Xu.prototype.detect=Xu.prototype.D,Xu.prototype.setOptions=Xu.prototype.o,Xu.createFromModelPath=async function(e,t){return Qo(Xu,e,{baseOptions:{modelAssetPath:t}})},Xu.createFromModelBuffer=function(e,t){return Qo(Xu,e,{baseOptions:{modelAssetBuffer:t}})},Xu.createFromOptions=function(e,t){return Qo(Xu,e,t)};var Yu=class{constructor(e,t,n){this.landmarks=e,this.worldLandmarks=t,this.segmentationMasks=n}close(){this.segmentationMasks?.forEach(e=>{e.close()})}};function Zu(e){e.landmarks=[],e.worldLandmarks=[],e.segmentationMasks=void 0}function Qu(e){try{const t=new Yu(e.landmarks,e.worldLandmarks,e.segmentationMasks);if(!e.s)return t;e.s(t)}finally{no(e)}}Yu.prototype.close=Yu.prototype.close;var Ju=class extends ru{constructor(e,t){super(new Zo(e,t),"image_in","norm_rect",!1),this.landmarks=[],this.worldLandmarks=[],this.outputSegmentationMasks=!1,yn(e=this.h=new $i,0,1,t=new za),this.v=new pi,yn(this.h,0,3,this.v),this.j=new di,yn(this.h,0,2,this.j),En(this.j,4,1),Cn(this.j,2,.5),Cn(this.v,2,.5),Cn(this.h,4,.5)}get baseOptions(){return fn(this.h,za,1)}set baseOptions(e){yn(this.h,0,1,e)}o(e){return"numPoses"in e&&En(this.j,4,e.numPoses??1),"minPoseDetectionConfidence"in e&&Cn(this.j,2,e.minPoseDetectionConfidence??.5),"minTrackingConfidence"in e&&Cn(this.h,4,e.minTrackingConfidence??.5),"minPosePresenceConfidence"in e&&Cn(this.v,2,e.minPosePresenceConfidence??.5),"outputSegmentationMasks"in e&&(this.outputSegmentationMasks=e.outputSegmentationMasks??!1),this.l(e)}D(e,t,n){const r="function"!=typeof t?t:{};return this.s="function"==typeof t?t:n,Zu(this),eu(this,e,r),Qu(this)}F(e,t,n,r){const s="function"!=typeof n?n:{};return this.s="function"==typeof n?n:r,Zu(this),tu(this,e,s,t),Qu(this)}m(){var e=new ia;sa(e,"image_in"),sa(e,"norm_rect"),aa(e,"normalized_landmarks"),aa(e,"world_landmarks"),aa(e,"segmentation_masks");const t=new Ks;tr(t,Ai,this.h);const n=new Js;Ys(n,"mediapipe.tasks.vision.pose_landmarker.PoseLandmarkerGraph"),Zs(n,"IMAGE:image_in"),Zs(n,"NORM_RECT:norm_rect"),Qs(n,"NORM_LANDMARKS:normalized_landmarks"),Qs(n,"WORLD_LANDMARKS:world_landmarks"),n.o(t),ra(e,n),eo(this,e),this.g.attachProtoVectorListener("normalized_landmarks",(e,t)=>{this.landmarks=[];for(const t of e)e=wa(t),this.landmarks.push(Fi(e));Ji(this,t)}),this.g.attachEmptyPacketListener("normalized_landmarks",e=>{this.landmarks=[],Ji(this,e)}),this.g.attachProtoVectorListener("world_landmarks",(e,t)=>{this.worldLandmarks=[];for(const t of e)e=ba(t),this.worldLandmarks.push(Mi(e));Ji(this,t)}),this.g.attachEmptyPacketListener("world_landmarks",e=>{this.worldLandmarks=[],Ji(this,e)}),this.outputSegmentationMasks&&(Qs(n,"SEGMENTATION_MASK:segmentation_masks"),to(this,"segmentation_masks"),this.g.da("segmentation_masks",(e,t)=>{this.segmentationMasks=e.map(e=>nu(this,e,!0,!this.s)),Ji(this,t)}),this.g.attachEmptyPacketListener("segmentation_masks",e=>{this.segmentationMasks=[],Ji(this,e)})),e=e.g(),this.setGraph(new Uint8Array(e),!0)}};Ju.prototype.detectForVideo=Ju.prototype.F,Ju.prototype.detect=Ju.prototype.D,Ju.prototype.setOptions=Ju.prototype.o,Ju.createFromModelPath=function(e,t){return Qo(Ju,e,{baseOptions:{modelAssetPath:t}})},Ju.createFromModelBuffer=function(e,t){return Qo(Ju,e,{baseOptions:{modelAssetBuffer:t}})},Ju.createFromOptions=function(e,t){return Qo(Ju,e,t)},Ju.POSE_CONNECTIONS=Su,t.DrawingUtils=Lo,t.FaceDetector=su,t.FaceLandmarker=gu,t.FaceStylizer=yu,t.FilesetResolver=Ui,t.GestureRecognizer=ku,t.HandLandmarker=Iu,t.HolisticLandmarker=$u,t.ImageClassifier=Au,t.ImageEmbedder=Ru,t.ImageSegmenter=Mu,t.ImageSegmenterResult=_u,t.InteractiveSegmenter=qu,t.InteractiveSegmenterResult=Ou,t.MPImage=jo,t.MPMask=To,t.ObjectDetector=Xu,t.PoseLandmarker=Ju,t.VisionTaskRunner=ru},951:(e,t,n)=>{"use strict";n.r(t),n.d(t,{Abs:()=>et,Acos:()=>tt,Acosh:()=>nt,AdadeltaOptimizer:()=>qo,AdagradOptimizer:()=>Yo,AdamOptimizer:()=>Jo,AdamaxOptimizer:()=>au,Add:()=>rt,AddN:()=>st,All:()=>at,Any:()=>it,ArgMax:()=>ot,ArgMin:()=>ut,Asin:()=>lt,Asinh:()=>ct,Atan:()=>ht,Atan2:()=>pt,Atanh:()=>dt,AvgPool:()=>ft,AvgPool3D:()=>gt,AvgPool3DGrad:()=>yt,AvgPoolGrad:()=>mt,BatchMatMul:()=>bt,BatchToSpaceND:()=>xt,Bincount:()=>wt,BitwiseAnd:()=>vt,BroadcastArgs:()=>Nt,BroadcastTo:()=>kt,Callback:()=>iS,CallbackList:()=>qx,Cast:()=>It,Ceil:()=>St,ClipByValue:()=>Tt,Complex:()=>Et,ComplexAbs:()=>Ct,Concat:()=>$t,Conv2D:()=>At,Conv2DBackpropFilter:()=>Rt,Conv2DBackpropInput:()=>_t,Conv3D:()=>Dt,Conv3DBackpropFilterV2:()=>Ft,Conv3DBackpropInputV2:()=>Mt,Cos:()=>Ot,Cosh:()=>Lt,CropAndResize:()=>Bt,Cumprod:()=>zt,Cumsum:()=>Pt,CustomCallback:()=>Zx,DataStorage:()=>X,DenseBincount:()=>Vt,DepthToSpace:()=>Ut,DepthwiseConv2dNative:()=>Wt,DepthwiseConv2dNativeBackpropFilter:()=>Gt,DepthwiseConv2dNativeBackpropInput:()=>Ht,Diag:()=>jt,Dilation2D:()=>Kt,Dilation2DBackpropFilter:()=>Xt,Dilation2DBackpropInput:()=>qt,Draw:()=>Yt,ENV:()=>Ze,EarlyStopping:()=>lS,Einsum:()=>Qt,Elu:()=>Jt,EluGrad:()=>en,Environment:()=>Ke,Equal:()=>nn,Erf:()=>tn,Exp:()=>rn,ExpandDims:()=>sn,Expm1:()=>an,FFT:()=>on,Fill:()=>un,FlipLeftRight:()=>ln,Floor:()=>cn,FloorDiv:()=>hn,FromPixels:()=>fs,FusedBatchNorm:()=>dn,FusedConv2D:()=>ys,FusedDepthwiseConv2D:()=>bs,GPGPUContext:()=>TO,GatherNd:()=>fn,GatherV2:()=>pn,GraphModel:()=>$T,Greater:()=>mn,GreaterEqual:()=>gn,History:()=>Yx,IFFT:()=>bn,Identity:()=>yn,Imag:()=>xn,InputSpec:()=>Jb,IsFinite:()=>wn,IsInf:()=>vn,IsNan:()=>kn,KernelBackend:()=>Y,LRN:()=>Mn,LRNGrad:()=>On,LayerVariable:()=>Yb,LayersModel:()=>Xw,LeakyRelu:()=>Nn,Less:()=>In,LessEqual:()=>Sn,LinSpace:()=>Tn,Log:()=>En,Log1p:()=>Cn,LogSoftmax:()=>Dn,LogicalAnd:()=>$n,LogicalNot:()=>An,LogicalOr:()=>Rn,LogicalXor:()=>_n,LowerBound:()=>Fn,MathBackendCPU:()=>UE,MathBackendWebGL:()=>VL,MatrixBandPart:()=>Ln,Max:()=>zn,MaxPool:()=>Bn,MaxPool3D:()=>Un,MaxPool3DGrad:()=>Wn,MaxPoolGrad:()=>Vn,MaxPoolWithArgmax:()=>Gn,Maximum:()=>Pn,Mean:()=>Hn,Min:()=>jn,Minimum:()=>Kn,MirrorPad:()=>qn,Mod:()=>Xn,MomentumOptimizer:()=>ou,Multinomial:()=>Yn,Multiply:()=>Zn,Neg:()=>Qn,NonMaxSuppressionV3:()=>er,NonMaxSuppressionV4:()=>tr,NonMaxSuppressionV5:()=>nr,NotEqual:()=>Jn,OP_SCOPE_SUFFIX:()=>Ka,OneHot:()=>sr,OnesLike:()=>rr,Optimizer:()=>Ko,OptimizerConstructors:()=>Al,Pack:()=>ar,PadV2:()=>ir,Pool:()=>or,Pow:()=>ur,Prelu:()=>lr,Prod:()=>cr,RMSPropOptimizer:()=>uu,RNN:()=>rk,RaggedGather:()=>hr,RaggedRange:()=>dr,RaggedTensorToTensor:()=>pr,Range:()=>fr,Rank:()=>ga,Real:()=>mr,RealDiv:()=>Zt,Reciprocal:()=>gr,Reduction:()=>mf,Relu:()=>yr,Relu6:()=>Nr,Reshape:()=>br,ResizeBilinear:()=>vr,ResizeBilinearGrad:()=>kr,ResizeNearestNeighbor:()=>xr,ResizeNearestNeighborGrad:()=>wr,Reverse:()=>Ir,RotateWithOffset:()=>ms,Round:()=>Sr,Rsqrt:()=>Tr,SGDOptimizer:()=>iu,ScatterNd:()=>Er,SearchSorted:()=>$r,Select:()=>Ar,Selu:()=>Rr,Sequential:()=>Jw,Sigmoid:()=>Or,Sign:()=>Mr,Sin:()=>Dr,Sinh:()=>Fr,Slice:()=>_r,Softmax:()=>Ur,Softplus:()=>Lr,SpaceToBatchND:()=>Br,SparseFillEmptyRows:()=>Wr,SparseReshape:()=>Gr,SparseSegmentMean:()=>Hr,SparseSegmentSum:()=>jr,SparseToDense:()=>Kr,SplitV:()=>Vr,Sqrt:()=>zr,Square:()=>Xr,SquaredDifference:()=>qr,StaticRegexReplace:()=>Yr,Step:()=>ps,StridedSlice:()=>Zr,StringNGrams:()=>Qr,StringSplit:()=>Jr,StringToHashBucketFast:()=>es,Sub:()=>ts,Sum:()=>Pr,SymbolicTensor:()=>ex,Tan:()=>ns,Tanh:()=>rs,Tensor:()=>pa,TensorBuffer:()=>la,TensorScatterUpdate:()=>Cr,Tile:()=>ss,TopK:()=>as,Transform:()=>is,Transpose:()=>os,Unique:()=>us,Unpack:()=>ls,UnsortedSegmentSum:()=>cs,UpperBound:()=>hs,Variable:()=>ma,ZerosLike:()=>ds,_FusedMatMul:()=>gs,abs:()=>eu,acos:()=>Rl,acosh:()=>_l,add:()=>To,addN:()=>Dl,all:()=>Fl,any:()=>Ml,argMax:()=>Ol,argMin:()=>Ll,asin:()=>zl,asinh:()=>Pl,atan:()=>Bl,atan2:()=>Vl,atanh:()=>Ul,avgPool:()=>ac,avgPool3d:()=>ic,backend:()=>xi,backend_util:()=>y,basicLSTMCell:()=>hc,batchNorm:()=>pc,batchNorm2d:()=>fc,batchNorm3d:()=>mc,batchNorm4d:()=>gc,batchToSpaceND:()=>dc,bincount:()=>yc,bitwiseAnd:()=>bc,booleanMaskAsync:()=>xp,broadcastArgs:()=>xc,broadcastTo:()=>wc,broadcast_util:()=>o,browser:()=>c,buffer:()=>ko,callbacks:()=>cS,cast:()=>No,ceil:()=>vc,clipByValue:()=>kc,clone:()=>Io,complex:()=>Xa,concat:()=>oc,concat1d:()=>Nc,concat2d:()=>Ic,concat3d:()=>Sc,concat4d:()=>Tc,constraints:()=>x,conv1d:()=>Cc,conv2d:()=>Ec,conv2dTranspose:()=>Ac,conv3d:()=>Rc,conv3dTranspose:()=>Dc,copyRegisteredKernels:()=>As,cos:()=>Fc,cosh:()=>Mc,cosineWindow:()=>Tp,cumprod:()=>Oc,cumsum:()=>Lc,customGrad:()=>zo,data:()=>H,denseBincount:()=>zc,deprecationWarn:()=>ri,depthToSpace:()=>Pc,depthwiseConv2d:()=>Bc,deregisterOp:()=>gS,device_util:()=>a,diag:()=>Vc,dilation2d:()=>Uc,disableDeprecationWarnings:()=>ni,dispose:()=>li,disposeVariables:()=>si,div:()=>Co,divNoNan:()=>Hc,dot:()=>jc,dropout:()=>Ip,einsum:()=>Kc,elu:()=>qc,enableDebugMode:()=>ti,enableProdMode:()=>ei,enclosingPowerOfTwo:()=>Sp,engine:()=>ai,ensureShape:()=>Xc,env:()=>Xe,equal:()=>Wc,erf:()=>Yc,euclideanNorm:()=>ch,exp:()=>hh,expandDims:()=>dh,expm1:()=>ph,eye:()=>mh,fft:()=>Kd,fill:()=>Xo,findBackend:()=>gi,findBackendFactory:()=>yi,floor:()=>gh,floorDiv:()=>Eo,forceHalfFloat:()=>WL,fused:()=>m,gather:()=>yh,gatherND:()=>Np,gather_util:()=>h,getBackend:()=>fi,getGradient:()=>Is,getKernel:()=>Ns,getKernelsForBackend:()=>Ss,gpgpu_util:()=>q,grad:()=>Do,grads:()=>Fo,greater:()=>bh,greaterEqual:()=>xh,ifft:()=>qd,imag:()=>_u,image:()=>Mf,inTopKAsync:()=>Ep,initializers:()=>w,input:()=>nv,io:()=>u,irfft:()=>Xd,isFinite:()=>wh,isInf:()=>vh,isNaN:()=>kh,keep:()=>ci,kernel_impls:()=>b,layers:()=>v,leakyRelu:()=>Nh,less:()=>Ih,lessEqual:()=>Sh,linalg:()=>Of,linspace:()=>Th,loadGraphModel:()=>AT,loadGraphModelSync:()=>RT,loadLayersModel:()=>Qw,localResponseNormalization:()=>Eh,log:()=>Ch,log1p:()=>$h,logSigmoid:()=>Rh,logSoftmax:()=>_h,logSumExp:()=>Dh,logicalAnd:()=>Fh,logicalNot:()=>Mh,logicalOr:()=>Oh,logicalXor:()=>Lh,losses:()=>Lf,lowerBound:()=>Bh,matMul:()=>Au,math:()=>l,max:()=>ah,maxPool:()=>Vh,maxPool3d:()=>Uh,maxPoolWithArgmax:()=>Wh,maximum:()=>su,mean:()=>Gh,memory:()=>ii,meshgrid:()=>Kh,metrics:()=>k,min:()=>ih,minimum:()=>qh,mirrorPad:()=>Xh,mod:()=>Yh,model:()=>ev,models:()=>N,moments:()=>Zh,movingAverage:()=>wp,mul:()=>$o,multiRNNCell:()=>Qh,multinomial:()=>Jh,neg:()=>Du,nextFrame:()=>Uf,norm:()=>lh,notEqual:()=>ed,oneHot:()=>Ru,ones:()=>jh,onesLike:()=>td,op:()=>qa,outerProduct:()=>nd,pad:()=>rd,pad1d:()=>sd,pad2d:()=>ad,pad3d:()=>id,pad4d:()=>od,pool:()=>ld,pow:()=>Zo,prelu:()=>cd,print:()=>So,prod:()=>hd,profile:()=>oi,raggedGather:()=>dd,raggedRange:()=>pd,raggedTensorToTensor:()=>fd,rand:()=>md,randomGamma:()=>wd,randomNormal:()=>vd,randomStandardNormal:()=>kd,randomUniform:()=>Nd,randomUniformInt:()=>Id,range:()=>Sd,ready:()=>pi,real:()=>Fu,reciprocal:()=>Td,registerBackend:()=>bi,registerCallbackConstructor:()=>rv,registerGradient:()=>Es,registerKernel:()=>Ts,registerOp:()=>fS,regularizers:()=>I,relu:()=>Ed,relu6:()=>Cd,removeBackend:()=>mi,reshape:()=>sc,reverse:()=>$d,reverse1d:()=>Ad,reverse2d:()=>Rd,reverse3d:()=>_d,reverse4d:()=>Dd,rfft:()=>Zd,round:()=>Fd,rsqrt:()=>Md,scalar:()=>Bo,scatterND:()=>vp,scatter_util:()=>d,searchSorted:()=>Ph,selu:()=>Od,separableConv2d:()=>Ld,sequential:()=>tv,serialization:()=>i,setBackend:()=>di,setPlatform:()=>wi,setWebGLContext:()=>vF,setdiff1dAsync:()=>zd,shared:()=>j,sigmoid:()=>uc,sign:()=>Pd,signal:()=>Ff,sin:()=>Bd,sinh:()=>Vd,slice:()=>lc,slice1d:()=>Ud,slice2d:()=>Wd,slice3d:()=>Gd,slice4d:()=>Hd,slice_util:()=>p,softmax:()=>jd,softplus:()=>Ah,spaceToBatchND:()=>ud,sparse:()=>zf,sparseToDense:()=>kp,spectral:()=>Df,split:()=>Yd,sqrt:()=>Ao,square:()=>Ro,squaredDifference:()=>Qd,squeeze:()=>Jd,stack:()=>ep,step:()=>tp,stridedSlice:()=>np,string:()=>Pf,sub:()=>Qo,sum:()=>oh,sumOutType:()=>Na,tan:()=>rp,tanh:()=>cc,tensor:()=>Za,tensor1d:()=>sp,tensor2d:()=>ap,tensor3d:()=>Lu,tensor4d:()=>ip,tensor5d:()=>op,tensor6d:()=>up,tensorScatterUpdate:()=>lp,tensor_util:()=>s,test_util:()=>f,tidy:()=>ui,tile:()=>fh,time:()=>hi,topk:()=>cp,train:()=>Bf,transpose:()=>Mu,truncatedNormal:()=>hp,unique:()=>dp,unregisterGradient:()=>$s,unregisterKernel:()=>Cs,unsortedSegmentSum:()=>pp,unstack:()=>fp,upcastType:()=>ka,upperBound:()=>mp,util:()=>r,valueAndGrad:()=>Mo,valueAndGrads:()=>Oo,variable:()=>gp,variableGrads:()=>Lo,version:()=>MG,version_converter:()=>_T,version_core:()=>$l,version_cpu:()=>pA,version_layers:()=>Rw,version_webgl:()=>UL,webgl:()=>GL,webgl_util:()=>K,where:()=>Gc,whereAsync:()=>bp,zeros:()=>Hh,zerosLike:()=>_o});var r={};n.r(r),n.d(r,{arraysEqual:()=>de,arraysEqualWithNull:()=>he,assert:()=>ie,assertNonNegativeIntegerDimensions:()=>Ue,assertNonNull:()=>ue,assertShapesMatch:()=>oe,bytesFromStringArray:()=>Ce,bytesPerElement:()=>Ee,checkConversionForErrors:()=>Ie,clamp:()=>ee,computeStrides:()=>Me,convertBackendValuesAndArrayBuffer:()=>ze,createScalarValue:()=>Ks,createShuffledIndices:()=>ge,decodeString:()=>Qs,distSquared:()=>ae,encodeString:()=>Zs,fetch:()=>Ys,fingerPrint64:()=>js,flatten:()=>ea,getArrayFromDType:()=>Ne,getTypedArrayFromDType:()=>ke,hasEncodingLoss:()=>Te,hexToLong:()=>Ms,indexToLoc:()=>Ge,inferDtype:()=>_e,inferFromImplicitShape:()=>xe,isBoolean:()=>Ae,isFunction:()=>De,isInt:()=>pe,isNumber:()=>Re,isPromise:()=>He,isScalarShape:()=>ce,isString:()=>$e,isTypedArray:()=>Js,isValidDtype:()=>Se,locToIndex:()=>We,makeOnesTypedArray:()=>Pe,makeZerosNestedTypedArray:()=>Ve,makeZerosTypedArray:()=>Be,nearestDivisor:()=>Fe,nearestLargerEven:()=>te,now:()=>Xs,parseAxisParam:()=>we,randUniform:()=>se,repeatedTry:()=>be,rightPad:()=>ye,shuffle:()=>Q,shuffleCombo:()=>J,sizeFromShape:()=>le,sizeToSquarishShape:()=>me,squeezeShape:()=>ve,sum:()=>re,swap:()=>ne,tanh:()=>fe,toNestedArray:()=>Le,toTypedArray:()=>qs});var s={};n.r(s),n.d(s,{assertTypesMatch:()=>Ea,getTensorsInContainer:()=>$a,isTensorInList:()=>Ca,makeTypesMatch:()=>Ta});var a={};n.r(a),n.d(a,{isBrowser:()=>Ba,isMobile:()=>Pa,mockIsMobile:()=>za});var i={};n.r(i),n.d(i,{Serializable:()=>Wo,SerializationMap:()=>Go,getRegisteredName:()=>jo,registerClass:()=>Ho});var o={};n.r(o),n.d(o,{assertAndGetBroadcastShape:()=>ru,getBroadcastDims:()=>tu,getReductionAxes:()=>nu});var u={};n.r(u),n.d(u,{CompositeArrayBuffer:()=>Ja,browserFiles:()=>pu,browserHTTPRequest:()=>ku,concatenateArrayBuffers:()=>_i,copyModel:()=>bo,decodeWeights:()=>Ni,decodeWeightsStream:()=>Ci,encodeWeights:()=>ki,fromMemory:()=>Tu,fromMemorySync:()=>Eu,getLoadHandlers:()=>Wi,getModelArtifactsForJSON:()=>Oi,getModelArtifactsForJSONSync:()=>Mi,getModelArtifactsInfoForJSON:()=>Li,getSaveHandlers:()=>Ui,getWeightSpecs:()=>zi,http:()=>vu,isHTTPScheme:()=>xu,listModels:()=>go,loadWeights:()=>gu,moveModel:()=>xo,registerLoadRouter:()=>Vi,registerSaveRouter:()=>Bi,removeModel:()=>yo,weightsLoaderFactory:()=>yu,withSaveHandler:()=>Cu,withSaveHandlerSync:()=>$u});var l={};n.r(l),n.d(l,{confusionMatrix:()=>Ou});var c={};n.r(c),n.d(c,{draw:()=>Gu,fromPixels:()=>Hu,fromPixelsAsync:()=>Vu,toPixels:()=>Wu});var h={};n.r(h),n.d(h,{prepareAndValidate:()=>ju});var d={};n.r(d),n.d(d,{calculateShapes:()=>Xu,validateInput:()=>qu,validateUpdateShape:()=>Ku});var p={};n.r(p),n.d(p,{assertParamsValid:()=>Qu,computeFlatOffset:()=>hl,computeOutShape:()=>el,getNormalizedAxes:()=>sl,isSliceContinous:()=>cl,maskToAxes:()=>Ju,parseSliceParams:()=>dl,sliceInfo:()=>pl,startForAxis:()=>ul,startIndicesWithElidedDims:()=>al,stopForAxis:()=>ll,stopIndicesWithElidedDims:()=>il,stridesForAxis:()=>ol,stridesWithElidedDims:()=>tl});var f={};n.r(f),n.d(f,{TEST_EPSILON_FLOAT16:()=>gl,createVideoElement:()=>El,encodeStrings:()=>Tl,expectArrayBuffersEqual:()=>Sl,expectArraysClose:()=>yl,expectArraysEqual:()=>vl,expectNumbersClose:()=>kl,expectPromiseToFail:()=>wl,expectValuesInRange:()=>Il,play:()=>Cl,testEpsilon:()=>bl});var m={};n.r(m),n.d(m,{conv2d:()=>Dp,depthwiseConv2d:()=>Op,matMul:()=>Lp});var g={};n.r(g),n.d(g,{collectGatherOpShapeInfo:()=>Hm,computeOutShape:()=>Gm,segOpComputeOptimalWindowSize:()=>Wm});var y={};n.r(y),n.d(y,{ERF_A1:()=>om,ERF_A2:()=>um,ERF_A3:()=>lm,ERF_A4:()=>cm,ERF_A5:()=>hm,ERF_P:()=>im,PARALLELIZE_THRESHOLD:()=>Yf,RowPartitionType:()=>Hf,SELU_SCALE:()=>am,SELU_SCALEALPHA:()=>sm,applyActivation:()=>Rp,assertAndGetBroadcastShape:()=>ru,assertAxesAreInnerMostDims:()=>th,assertParamsConsistent:()=>Wf,assignToTypedArray:()=>ym,axesAreInnerMostDims:()=>Zc,calculateShapes:()=>Xu,checkEinsumDimSizes:()=>Tm,checkPadOnDimRoundingMode:()=>rc,combineLocations:()=>Qc,combineRaggedTensorToTensorShapes:()=>jf,complexWithEvenIndex:()=>fm,complexWithOddIndex:()=>mm,computeConv2DInfo:()=>jl,computeConv3DInfo:()=>Kl,computeDefaultPad:()=>ql,computeDilation2DInfo:()=>Wl,computeOptimalWindowSize:()=>Zf,computeOutAndReduceShapes:()=>Jc,computeOutShape:()=>Gf,computePool2DInfo:()=>Gl,computePool3DInfo:()=>Hl,convertConv2DDataFormat:()=>nc,decodeEinsumEquation:()=>Im,eitherStridesOrDilationsAreOne:()=>ec,expandShapeToKeepDim:()=>eh,exponent:()=>xm,exponents:()=>bm,fromStringArrayToUint8:()=>Km,fromUint8ToStringArray:()=>jm,getAxesPermutation:()=>nh,getBroadcastDims:()=>tu,getComplexWithIndex:()=>gm,getEinsumComputePath:()=>Em,getEinsumPermutation:()=>Sm,getFusedBiasGradient:()=>Ap,getFusedDyActivation:()=>$p,getImageCenter:()=>Qf,getInnerMostAxes:()=>sh,getPermuted:()=>em,getRaggedRank:()=>qf,getReductionAxes:()=>nu,getReshaped:()=>Jf,getReshapedPermuted:()=>tm,getRowPartitionTypesHelper:()=>Kf,getSliceBeginCoords:()=>nm,getSliceSize:()=>rm,getSparseFillEmptyRowsIndicesDenseShapeMismatch:()=>Rm,getSparseFillEmptyRowsNegativeIndexErrorMessage:()=>_m,getSparseFillEmptyRowsOutOfRangeIndexErrorMessage:()=>Dm,getSparseReshapeEmptyTensorZeroOutputDimErrorMessage:()=>Om,getSparseReshapeInputOutputMismatchErrorMessage:()=>zm,getSparseReshapeInputOutputMultipleErrorMessage:()=>Lm,getSparseReshapeMultipleNegativeOneOutputDimErrorMessage:()=>Fm,getSparseReshapeNegativeOutputDimErrorMessage:()=>Mm,getSparseSegmentReductionIndicesOutOfRangeErrorMessage:()=>Um,getSparseSegmentReductionNegativeSegmentIdsErrorMessage:()=>Pm,getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage:()=>Bm,getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage:()=>Vm,getUndoAxesPermutation:()=>rh,isIdentityPermutation:()=>Cm,log:()=>ws,mergeRealAndImagArrays:()=>dm,prepareAndValidate:()=>ju,prepareSplitSize:()=>Am,segment_util:()=>g,shouldFuse:()=>_p,slice_util:()=>p,splitRealAndImagArrays:()=>pm,stridesOrDilationsArePositive:()=>tc,tupleValuesAreOne:()=>Jl,upcastType:()=>ka,validateDefaultValueShape:()=>Xf,validateInput:()=>qu,validateUpdateShape:()=>Ku,warn:()=>xs});var b={};n.r(b),n.d(b,{nonMaxSuppressionV3Impl:()=>Zp,nonMaxSuppressionV4Impl:()=>Qp,nonMaxSuppressionV5Impl:()=>Jp,whereImpl:()=>yp});var x={};n.r(x),n.d(x,{maxNorm:()=>Sx,minMaxNorm:()=>Cx,nonNeg:()=>Ex,unitNorm:()=>Tx});var w={};n.r(w),n.d(w,{constant:()=>Rx,glorotNormal:()=>zx,glorotUniform:()=>Lx,heNormal:()=>Px,heUniform:()=>Bx,identity:()=>Mx,leCunNormal:()=>Vx,leCunUniform:()=>Ux,ones:()=>Ax,orthogonal:()=>Wx,randomNormal:()=>Dx,randomUniform:()=>_x,truncatedNormal:()=>Fx,varianceScaling:()=>Ox,zeros:()=>$x});var v={};n.r(v),n.d(v,{Layer:()=>sx,RNN:()=>rk,RNNCell:()=>sk,activation:()=>MN,add:()=>GN,alphaDropout:()=>FI,average:()=>HN,averagePooling1d:()=>eI,averagePooling2d:()=>rI,averagePooling3d:()=>iI,avgPool1d:()=>tI,avgPool2d:()=>sI,avgPool3d:()=>oI,avgPooling1d:()=>nI,avgPooling2d:()=>aI,avgPooling3d:()=>uI,batchNormalization:()=>ZN,bidirectional:()=>TI,categoryEncoding:()=>PI,centerCrop:()=>LI,concatenate:()=>jN,conv1d:()=>TN,conv2d:()=>EN,conv2dTranspose:()=>CN,conv3d:()=>$N,conv3dTranspose:()=>AN,convLstm2d:()=>kI,convLstm2dCell:()=>NI,cropping2D:()=>_N,dense:()=>ON,depthwiseConv2d:()=>FN,dot:()=>YN,dropout:()=>LN,elu:()=>wN,embedding:()=>WN,flatten:()=>PN,gaussianDropout:()=>DI,gaussianNoise:()=>_I,globalAveragePooling1d:()=>lI,globalAveragePooling2d:()=>cI,globalMaxPool1d:()=>CI,globalMaxPool2d:()=>$I,globalMaxPooling1d:()=>hI,globalMaxPooling2d:()=>dI,gru:()=>gI,gruCell:()=>yI,input:()=>nv,inputLayer:()=>xN,layerNormalization:()=>QN,leakyReLU:()=>kN,lstm:()=>bI,lstmCell:()=>xI,masking:()=>MI,maxPool1d:()=>AI,maxPool2d:()=>RI,maxPooling1d:()=>pI,maxPooling2d:()=>fI,maxPooling3d:()=>mI,maximum:()=>KN,minimum:()=>qN,multiply:()=>XN,permute:()=>UN,prelu:()=>NN,randomWidth:()=>BI,reLU:()=>vN,repeatVector:()=>BN,rescaling:()=>OI,reshape:()=>VN,resizing:()=>zI,rnn:()=>II,separableConv2d:()=>RN,simpleRNN:()=>wI,simpleRNNCell:()=>vI,softmax:()=>IN,spatialDropout1d:()=>zN,stackedRNNCells:()=>SI,thresholdedReLU:()=>SN,timeDistributed:()=>EI,upSampling2d:()=>DN,zeroPadding2d:()=>JN});var k={};n.r(k),n.d(k,{MAPE:()=>ZI,MSE:()=>eS,binaryAccuracy:()=>VI,binaryCrossentropy:()=>UI,categoricalAccuracy:()=>GI,categoricalCrossentropy:()=>HI,cosineProximity:()=>qI,mape:()=>QI,meanAbsoluteError:()=>XI,meanAbsolutePercentageError:()=>YI,meanSquaredError:()=>JI,mse:()=>tS,precision:()=>jI,r2Score:()=>nS,recall:()=>KI,sparseCategoricalAccuracy:()=>WI});var N={};n.r(N),n.d(N,{modelFromJSON:()=>Zw});var I={};n.r(I),n.d(I,{l1:()=>sS,l1l2:()=>rS,l2:()=>aS});var S={};n.r(S),n.d(S,{json:()=>SS});var T={};n.r(T),n.d(T,{json:()=>TS});var E={};n.r(E),n.d(E,{json:()=>ES});var C={};n.r(C),n.d(C,{json:()=>CS});var $={};n.r($),n.d($,{json:()=>$S});var A={};n.r(A),n.d(A,{json:()=>AS});var R={};n.r(R),n.d(R,{json:()=>RS});var _={};n.r(_),n.d(_,{json:()=>_S});var D={};n.r(D),n.d(D,{json:()=>DS});var F={};n.r(F),n.d(F,{json:()=>FS});var M={};n.r(M),n.d(M,{json:()=>MS});var O={};n.r(O),n.d(O,{json:()=>OS});var L={};n.r(L),n.d(L,{json:()=>LS});var z={};n.r(z),n.d(z,{json:()=>zS});var P={};n.r(P),n.d(P,{json:()=>PS});var B={};n.r(B),n.d(B,{json:()=>BS});var V={};n.r(V),n.d(V,{json:()=>VS});var U={};n.r(U),n.d(U,{json:()=>US});var W={};n.r(W),n.d(W,{json:()=>WS});var G={};n.r(G),n.d(G,{OP_SCOPE_SUFFIX:()=>Ka,abs:()=>eu,acos:()=>Rl,acosh:()=>_l,add:()=>To,addN:()=>Dl,all:()=>Fl,any:()=>Ml,argMax:()=>Ol,argMin:()=>Ll,asin:()=>zl,asinh:()=>Pl,atan:()=>Bl,atan2:()=>Vl,atanh:()=>Ul,avgPool:()=>ac,avgPool3d:()=>ic,basicLSTMCell:()=>hc,batchNorm:()=>pc,batchNorm2d:()=>fc,batchNorm3d:()=>mc,batchNorm4d:()=>gc,batchToSpaceND:()=>dc,bincount:()=>yc,bitwiseAnd:()=>bc,booleanMaskAsync:()=>xp,broadcastArgs:()=>xc,broadcastTo:()=>wc,buffer:()=>ko,cast:()=>No,ceil:()=>vc,clipByValue:()=>kc,clone:()=>Io,complex:()=>Xa,concat:()=>oc,concat1d:()=>Nc,concat2d:()=>Ic,concat3d:()=>Sc,concat4d:()=>Tc,conv1d:()=>Cc,conv2d:()=>Ec,conv2dTranspose:()=>Ac,conv3d:()=>Rc,conv3dTranspose:()=>Dc,cos:()=>Fc,cosh:()=>Mc,cosineWindow:()=>Tp,cumprod:()=>Oc,cumsum:()=>Lc,denseBincount:()=>zc,depthToSpace:()=>Pc,depthwiseConv2d:()=>Bc,diag:()=>Vc,dilation2d:()=>Uc,div:()=>Co,divNoNan:()=>Hc,dot:()=>jc,dropout:()=>Ip,einsum:()=>Kc,elu:()=>qc,enclosingPowerOfTwo:()=>Sp,ensureShape:()=>Xc,equal:()=>Wc,erf:()=>Yc,euclideanNorm:()=>ch,exp:()=>hh,expandDims:()=>dh,expm1:()=>ph,eye:()=>mh,fft:()=>Kd,fill:()=>Xo,floor:()=>gh,floorDiv:()=>Eo,fused:()=>m,gather:()=>yh,gatherND:()=>Np,greater:()=>bh,greaterEqual:()=>xh,ifft:()=>qd,imag:()=>_u,image:()=>Mf,inTopKAsync:()=>Ep,irfft:()=>Xd,isFinite:()=>wh,isInf:()=>vh,isNaN:()=>kh,leakyRelu:()=>Nh,less:()=>Ih,lessEqual:()=>Sh,linalg:()=>Of,linspace:()=>Th,localResponseNormalization:()=>Eh,log:()=>Ch,log1p:()=>$h,logSigmoid:()=>Rh,logSoftmax:()=>_h,logSumExp:()=>Dh,logicalAnd:()=>Fh,logicalNot:()=>Mh,logicalOr:()=>Oh,logicalXor:()=>Lh,losses:()=>Lf,lowerBound:()=>Bh,matMul:()=>Au,max:()=>ah,maxPool:()=>Vh,maxPool3d:()=>Uh,maxPoolWithArgmax:()=>Wh,maximum:()=>su,mean:()=>Gh,meshgrid:()=>Kh,min:()=>ih,minimum:()=>qh,mirrorPad:()=>Xh,mod:()=>Yh,moments:()=>Zh,movingAverage:()=>wp,mul:()=>$o,multiRNNCell:()=>Qh,multinomial:()=>Jh,neg:()=>Du,norm:()=>lh,notEqual:()=>ed,oneHot:()=>Ru,ones:()=>jh,onesLike:()=>td,op:()=>qa,outerProduct:()=>nd,pad:()=>rd,pad1d:()=>sd,pad2d:()=>ad,pad3d:()=>id,pad4d:()=>od,pool:()=>ld,pow:()=>Zo,prelu:()=>cd,print:()=>So,prod:()=>hd,raggedGather:()=>dd,raggedRange:()=>pd,raggedTensorToTensor:()=>fd,rand:()=>md,randomGamma:()=>wd,randomNormal:()=>vd,randomStandardNormal:()=>kd,randomUniform:()=>Nd,randomUniformInt:()=>Id,range:()=>Sd,real:()=>Fu,reciprocal:()=>Td,relu:()=>Ed,relu6:()=>Cd,reshape:()=>sc,reverse:()=>$d,reverse1d:()=>Ad,reverse2d:()=>Rd,reverse3d:()=>_d,reverse4d:()=>Dd,rfft:()=>Zd,round:()=>Fd,rsqrt:()=>Md,scalar:()=>Bo,scatterND:()=>vp,searchSorted:()=>Ph,selu:()=>Od,separableConv2d:()=>Ld,setdiff1dAsync:()=>zd,sigmoid:()=>uc,sign:()=>Pd,signal:()=>Ff,sin:()=>Bd,sinh:()=>Vd,slice:()=>lc,slice1d:()=>Ud,slice2d:()=>Wd,slice3d:()=>Gd,slice4d:()=>Hd,softmax:()=>jd,softplus:()=>Ah,spaceToBatchND:()=>ud,sparse:()=>zf,sparseToDense:()=>kp,spectral:()=>Df,split:()=>Yd,sqrt:()=>Ao,square:()=>Ro,squaredDifference:()=>Qd,squeeze:()=>Jd,stack:()=>ep,step:()=>tp,stridedSlice:()=>np,string:()=>Pf,sub:()=>Qo,sum:()=>oh,tan:()=>rp,tanh:()=>cc,tensor:()=>Za,tensor1d:()=>sp,tensor2d:()=>ap,tensor3d:()=>Lu,tensor4d:()=>ip,tensor5d:()=>op,tensor6d:()=>up,tensorScatterUpdate:()=>lp,tile:()=>fh,topk:()=>cp,transpose:()=>Mu,truncatedNormal:()=>hp,unique:()=>dp,unsortedSegmentSum:()=>pp,unstack:()=>fp,upperBound:()=>mp,variable:()=>gp,where:()=>Gc,whereAsync:()=>bp,zeros:()=>Hh,zerosLike:()=>_o});var H={};n.r(H),n.d(H,{CSVDataset:()=>wE,Dataset:()=>uE,FileDataSource:()=>_E,TextLineDataset:()=>pE,URLDataSource:()=>DE,array:()=>cE,csv:()=>FE,func:()=>ME,generator:()=>OE,microphone:()=>zE,version_data:()=>PE,webcam:()=>LE,zip:()=>hE});var j={};n.r(j),n.d(j,{addImpl:()=>sC,bincountImpl:()=>uC,bincountReduceImpl:()=>lC,bitwiseAndImpl:()=>cC,castImpl:()=>JE,ceilImpl:()=>gC,concatImpl:()=>xC,equalImpl:()=>wC,expImpl:()=>NC,expm1Impl:()=>TC,floorDivImpl:()=>_C,floorImpl:()=>$C,gatherNdImpl:()=>MC,gatherV2Impl:()=>OC,greaterEqualImpl:()=>BC,greaterImpl:()=>LC,lessEqualImpl:()=>jC,lessImpl:()=>WC,linSpaceImpl:()=>XC,logImpl:()=>YC,maxImpl:()=>JC,maximumImpl:()=>e$,minimumImpl:()=>r$,multiplyImpl:()=>i$,negImpl:()=>c$,notEqualImpl:()=>d$,prodImpl:()=>b$,raggedGatherImpl:()=>v$,raggedRangeImpl:()=>N$,raggedTensorToTensorImpl:()=>C$,rangeImpl:()=>$$,rsqrtImpl:()=>A$,scatterImpl:()=>D$,sigmoidImpl:()=>F$,simpleAbsImpl:()=>WE,sliceImpl:()=>L$,sparseFillEmptyRowsImpl:()=>B$,sparseReshapeImpl:()=>V$,sparseSegmentReductionImpl:()=>U$,sqrtImpl:()=>W$,squaredDifferenceImpl:()=>j$,staticRegexReplaceImpl:()=>X$,stridedSliceImpl:()=>Q$,stringNGramsImpl:()=>eA,stringSplitImpl:()=>nA,stringToHashBucketFastImpl:()=>rA,subImpl:()=>sA,tileImpl:()=>uA,topKImpl:()=>hA,transposeImpl:()=>m$,uniqueImpl:()=>dA});var K={};n.r(K),n.d(K,{assertNotComplex:()=>EM,bindCanvasToFramebuffer:()=>tM,bindColorTextureToFramebuffer:()=>nM,bindTextureToProgramUniformSampler:()=>eM,bindTextureUnit:()=>YF,bindVertexBufferToProgramAttribute:()=>XF,callAndCheck:()=>AF,canBeRepresented:()=>DF,createFragmentShader:()=>LF,createFramebuffer:()=>qF,createProgram:()=>BF,createStaticIndexBuffer:()=>GF,createStaticVertexBuffer:()=>WF,createTexture:()=>jF,createVertexShader:()=>OF,getBatchDim:()=>uM,getExtensionOrThrow:()=>MF,getFramebufferErrorMessage:()=>aM,getMaxTexturesInShader:()=>xM,getNumChannels:()=>HF,getProgramUniformLocation:()=>JF,getProgramUniformLocationOrThrow:()=>QF,getRowsCols:()=>lM,getShapeAs3D:()=>cM,getTextureShapeFromLogicalShape:()=>hM,getWebGLDisjointQueryTimerVersion:()=>wM,getWebGLErrorMessage:()=>FF,getWebGLMaxTextureSize:()=>gM,hasExtension:()=>vM,isCapableOfRenderingToFloatTexture:()=>NM,isDownloadFloatTextureEnabled:()=>IM,isReshapeFree:()=>pM,isWebGLFenceEnabled:()=>TM,isWebGLVersionEnabled:()=>kM,linkProgram:()=>VF,logShaderSourceAndInfoLog:()=>PF,resetMaxTextureSize:()=>yM,resetMaxTexturesInShader:()=>bM,unbindColorTextureFromFramebuffer:()=>rM,unbindTextureUnit:()=>ZF,validateFramebuffer:()=>sM,validateProgram:()=>UF,validateTextureSize:()=>KF});var q={};n.r(q),n.d(q,{bindVertexProgramAttributeStreams:()=>bO,createBufferFromOutputTexture:()=>vO,createFloat16MatrixTexture:()=>hO,createFloat16PackedMatrixTexture:()=>yO,createFloat32MatrixTexture:()=>lO,createIndexBuffer:()=>iO,createPackedMatrixTexture:()=>mO,createUnsignedBytesMatrixTexture:()=>pO,createVertexBuffer:()=>aO,createVertexShader:()=>sO,downloadByteEncodedFloatMatrixFromOutputTexture:()=>NO,downloadFloat32MatrixFromBuffer:()=>kO,downloadMatrixFromPackedOutputTexture:()=>SO,downloadPackedMatrixFromBuffer:()=>IO,getInternalFormatForFloat16MatrixTexture:()=>cO,getInternalFormatForFloat16PackedMatrixTexture:()=>gO,getInternalFormatForFloat32MatrixTexture:()=>uO,getInternalFormatForPackedMatrixTexture:()=>fO,getInternalFormatForUnsignedBytesMatrixTexture:()=>dO,uploadDenseMatrixToTexture:()=>xO,uploadPixelDataToTexture:()=>wO});class X{constructor(e,t){this.backend=e,this.dataMover=t,this.data=new WeakMap,this.dataIdsCount=0}get(e){return this.data.has(e)||this.dataMover.moveData(this.backend,e),this.data.get(e)}set(e,t){this.dataIdsCount++,this.data.set(e,t)}has(e){return this.data.has(e)}delete(e){return this.dataIdsCount--,this.data.delete(e)}numDataIds(){return this.dataIdsCount}}class Y{refCount(e){return Z("refCount")}incRef(e){return Z("incRef")}timerAvailable(){return!0}time(e){return Z("time")}read(e){return Z("read")}readSync(e){return Z("readSync")}readToGPU(e,t){return Z("readToGPU")}numDataIds(){return Z("numDataIds")}disposeData(e,t){return Z("disposeData")}write(e,t,n){return Z("write")}move(e,t,n,r,s){return Z("move")}createTensorFromGPUData(e,t,n){return Z("createTensorFromGPUData")}memory(){return Z("memory")}floatPrecision(){return Z("floatPrecision")}epsilon(){return 32===this.floatPrecision()?1e-7:1e-4}dispose(){return Z("dispose")}}function Z(e){throw new Error(`'${e}' not yet implemented or not found in the registry. This kernel may not be supported by the tfjs backend you have chosen`)}function Q(e){let t=e.length,n=0;for(;t>0;)n=Math.random()*t|0,t--,ne(e,t,n)}function J(e,t){if(e.length!==t.length)throw new Error(`Array sizes must match to be shuffled together First array length was ${e.length}Second array length was ${t.length}`);let n=e.length,r=0;for(;n>0;)r=Math.random()*n|0,n--,ne(e,n,r),ne(t,n,r)}function ee(e,t,n){return Math.max(e,Math.min(t,n))}function te(e){return e%2==0?e:e+1}function ne(e,t,n){const r=e[t];e[t]=e[n],e[n]=r}function re(e){let t=0;for(let n=0;n<e.length;n++)t+=e[n];return t}function se(e,t){const n=Math.random();return t*n+(1-n)*e}function ae(e,t){let n=0;for(let r=0;r<e.length;r++){const s=Number(e[r])-Number(t[r]);n+=s*s}return n}function ie(e,t){if(!e)throw new Error("string"==typeof t?t:t())}function oe(e,t,n=""){ie(de(e,t),()=>n+` Shapes ${e} and ${t} must match`)}function ue(e){ie(null!=e,()=>"The input to the tensor constructor must be a non-null value.")}function le(e){if(0===e.length)return 1;let t=e[0];for(let n=1;n<e.length;n++)t*=e[n];return t}function ce(e){return 0===e.length}function he(e,t){if(e===t)return!0;if(null==e||null==t)return!1;if(e.length!==t.length)return!1;for(let n=0;n<e.length;n++)if(null!==e[n]&&null!==t[n]&&e[n]!==t[n])return!1;return!0}function de(e,t){if(e===t)return!0;if(null==e||null==t)return!1;if(e.length!==t.length)return!1;for(let n=0;n<e.length;n++)if(e[n]!==t[n])return!1;return!0}function pe(e){return e%1==0}function fe(e){if(null!=Math.tanh)return Math.tanh(e);if(e===1/0)return 1;if(e===-1/0)return-1;{const t=Math.exp(2*e);return(t-1)/(t+1)}}function me(e){const t=Math.ceil(Math.sqrt(e));return[t,Math.ceil(e/t)]}function ge(e){const t=new Uint32Array(e);for(let n=0;n<e;++n)t[n]=n;return Q(t),t}function ye(e,t){return t<=e.length?e:e+" ".repeat(t-e.length)}function be(e,t=e=>0,n,r){return new Promise((s,a)=>{let i=0;const o=()=>{if(e())return void s();i++;const u=t(i);null!=n&&i>=n?a():null!=r?r(o,u):setTimeout(o,u)};o()})}function xe(e,t){let n=1,r=-1;for(let t=0;t<e.length;++t)if(e[t]>=0)n*=e[t];else if(-1===e[t]){if(-1!==r)throw Error(`Shapes can only have 1 implicit size. Found -1 at dim ${r} and dim ${t}`);r=t}else if(e[t]<0)throw Error(`Shapes can not be < 0. Found ${e[t]} at dim ${t}`);if(-1===r){if(t>0&&t!==n)throw Error(`Size(${t}) must match the product of shape ${e}`);return e}if(0===n)throw Error(`Cannot infer the missing size in [${e}] when there are 0 elements`);if(t%n!==0)throw Error(`The implicit shape can't be a fractional number. Got ${t} / ${n}`);const s=e.slice();return s[r]=t/n,s}function we(e,t){const n=t.length;return ie((e=null==e?t.map((e,t)=>t):[].concat(e)).every(e=>e>=-n&&e<n),()=>`All values in axis param must be in range [-${n}, ${n}) but got axis ${e}`),ie(e.every(e=>pe(e)),()=>`All values in axis param must be integers but got axis ${e}`),e.map(e=>e<0?n+e:e)}function ve(e,t){const n=[],r=[],s=null!=t&&Array.isArray(t)&&0===t.length,a=null==t||s?null:we(t,e).sort();let i=0;for(let t=0;t<e.length;++t){if(null!=a){if(a[i]===t&&1!==e[t])throw new Error(`Can't squeeze axis ${t} since its dim '${e[t]}' is not 1`);(null==a[i]||a[i]>t)&&1===e[t]&&(n.push(e[t]),r.push(t)),a[i]<=t&&i++}1!==e[t]&&(n.push(e[t]),r.push(t))}return{newShape:n,keptDims:r}}function ke(e,t){return Ne(e,t)}function Ne(e,t){let n=null;if(null==e||"float32"===e)n=new Float32Array(t);else if("int32"===e)n=new Int32Array(t);else if("bool"===e)n=new Uint8Array(t);else{if("string"!==e)throw new Error(`Unknown data type ${e}`);n=new Array(t)}return n}function Ie(e,t){for(let n=0;n<e.length;n++){const r=e[n];if(isNaN(r)||!isFinite(r))throw Error(`A tensor of type ${t} being uploaded contains ${r}.`)}}function Se(e){return"bool"===e||"complex64"===e||"float32"===e||"int32"===e||"string"===e}function Te(e,t){return!("complex64"===t||"float32"===t&&"complex64"!==e||"int32"===t&&"float32"!==e&&"complex64"!==e||"bool"===t&&"bool"===e)}function Ee(e){if("float32"===e||"int32"===e)return 4;if("complex64"===e)return 8;if("bool"===e)return 1;throw new Error(`Unknown dtype ${e}`)}function Ce(e){if(null==e)return 0;let t=0;return e.forEach(e=>t+=e.length),t}function $e(e){return"string"==typeof e||e instanceof String}function Ae(e){return"boolean"==typeof e}function Re(e){return"number"==typeof e}function _e(e){return Array.isArray(e)?_e(e[0]):e instanceof Float32Array?"float32":e instanceof Int32Array||e instanceof Uint8Array||e instanceof Uint8ClampedArray?"int32":Re(e)?"float32":$e(e)?"string":Ae(e)?"bool":"float32"}function De(e){return!!(e&&e.constructor&&e.call&&e.apply)}function Fe(e,t){for(let n=t;n<e;++n)if(e%n===0)return n;return e}function Me(e){const t=e.length;if(t<2)return[];const n=new Array(t-1);n[t-2]=e[t-1];for(let r=t-3;r>=0;--r)n[r]=n[r+1]*e[r+1];return n}function Oe(e,t,n,r=!1){const s=new Array;if(1===t.length){const a=t[0]*(r?2:1);for(let t=0;t<a;t++)s[t]=n[e+t]}else{const a=t[0],i=t.slice(1),o=i.reduce((e,t)=>e*t)*(r?2:1);for(let t=0;t<a;t++)s[t]=Oe(e+t*o,i,n,r)}return s}function Le(e,t,n=!1){if(0===e.length)return t[0];const r=e.reduce((e,t)=>e*t)*(n?2:1);if(0===r)return[];if(r!==t.length)throw new Error(`[${e}] does not match the input size ${t.length}${n?" for a complex tensor":""}.`);return Oe(0,e,t,n)}function ze(e,t){if(Array.isArray(e))return e;if("float32"===t)return e instanceof Float32Array?e:new Float32Array(e);if("int32"===t)return e instanceof Int32Array?e:new Int32Array(e);if("bool"===t||"string"===t)return Uint8Array.from(new Int32Array(e));throw new Error(`Unknown dtype ${t}`)}function Pe(e,t){const n=Be(e,t);for(let e=0;e<n.length;e++)n[e]=1;return n}function Be(e,t){if(null==t||"float32"===t||"complex64"===t)return new Float32Array(e);if("int32"===t)return new Int32Array(e);if("bool"===t)return new Uint8Array(e);throw new Error(`Unknown data type ${t}`)}function Ve(e,t){const n=e.reduce((e,t)=>e*t,1);if(null==t||"float32"===t)return Le(e,new Float32Array(n));if("int32"===t)return Le(e,new Int32Array(n));if("bool"===t)return Le(e,new Uint8Array(n));throw new Error(`Unknown data type ${t}`)}function Ue(e){e.forEach(t=>{ie(Number.isInteger(t)&&t>=0,()=>`Tensor must have a shape comprised of positive integers but got shape [${e}].`)})}function We(e,t,n){if(0===t)return 0;if(1===t)return e[0];let r=e[e.length-1];for(let t=0;t<e.length-1;++t)r+=n[t]*e[t];return r}function Ge(e,t,n){if(0===t)return[];if(1===t)return[e];const r=new Array(t);for(let t=0;t<r.length-1;++t)r[t]=Math.floor(e/n[t]),e-=r[t]*n[t];return r[r.length-1]=e,r}function He(e){return e&&e.then&&"function"==typeof e.then}const je="tfjsflags";class Ke{constructor(e){this.global=e,this.flags={},this.flagRegistry={},this.urlFlags={},this.getQueryParams=qe,this.populateURLFlags()}setPlatform(e,t){null!=this.platform&&(Xe().getBool("IS_TEST")||Xe().getBool("PROD")||console.warn(`Platform ${this.platformName} has already been set. Overwriting the platform with ${e}.`)),this.platformName=e,this.platform=t}registerFlag(e,t,n){if(this.flagRegistry[e]={evaluationFn:t,setHook:n},null!=this.urlFlags[e]){const t=this.urlFlags[e];Xe().getBool("IS_TEST")||Xe().getBool("PROD")||console.warn(`Setting feature override from URL ${e}: ${t}.`),this.set(e,t)}}async getAsync(e){return e in this.flags||(this.flags[e]=await this.evaluateFlag(e)),this.flags[e]}get(e){if(e in this.flags)return this.flags[e];const t=this.evaluateFlag(e);if(He(t))throw new Error(`Flag ${e} cannot be synchronously evaluated. Please use getAsync() instead.`);return this.flags[e]=t,this.flags[e]}getNumber(e){return this.get(e)}getBool(e){return this.get(e)}getString(e){return this.get(e)}getFlags(){return this.flags}get features(){return this.flags}set(e,t){if(null==this.flagRegistry[e])throw new Error(`Cannot set flag ${e} as it has not been registered.`);this.flags[e]=t,null!=this.flagRegistry[e].setHook&&this.flagRegistry[e].setHook(t)}evaluateFlag(e){if(null==this.flagRegistry[e])throw new Error(`Cannot evaluate flag '${e}': no evaluation function found.`);return this.flagRegistry[e].evaluationFn()}setFlags(e){this.flags=Object.assign({},e)}reset(){this.flags={},this.urlFlags={},this.populateURLFlags()}populateURLFlags(){if(void 0===this.global||void 0===this.global.location||void 0===this.global.location.search)return;const e=this.getQueryParams(this.global.location.search);je in e&&e[je].split(",").forEach(e=>{const[t,n]=e.split(":");this.urlFlags[t]=function(e,t){const n=t.toLowerCase();return"true"===n||"false"===n?"true"===n:""+ +n===n?+n:t}(0,n)})}}function qe(e){const t={};return e.replace(/[?&]([^=?&]+)(?:=([^&]*))?/g,(e,...n)=>(function(e,t,n){e[decodeURIComponent(t)]=decodeURIComponent(n||"")}(t,n[0],n[1]),n.join("="))),t}function Xe(){return Ze}let Ye,Ze=null;function Qe(){if(null==Ye){let e;if("undefined"!=typeof window)e=window;else if(void 0!==n.g)e=n.g;else if("undefined"!=typeof process)e=process;else{if("undefined"==typeof self)throw new Error("Could not find a global object");e=self}Ye=e}return Ye}function Je(e,t){const n=function(){const e=Qe();return null==e._tfGlobals&&(e._tfGlobals=new Map),e._tfGlobals}();if(n.has(e))return n.get(e);{const r=t();return n.set(e,r),n.get(e)}}const et="Abs",tt="Acos",nt="Acosh",rt="Add",st="AddN",at="All",it="Any",ot="ArgMax",ut="ArgMin",lt="Asin",ct="Asinh",ht="Atan",dt="Atanh",pt="Atan2",ft="AvgPool",mt="AvgPoolGrad",gt="AvgPool3D",yt="AvgPool3DGrad",bt="BatchMatMul",xt="BatchToSpaceND",wt="Bincount",vt="BitwiseAnd",kt="BroadcastTo",Nt="BroadcastArgs",It="Cast",St="Ceil",Tt="ClipByValue",Et="Complex",Ct="ComplexAbs",$t="Concat",At="Conv2D",Rt="Conv2DBackpropFilter",_t="Conv2DBackpropInput",Dt="Conv3D",Ft="Conv3DBackpropFilterV2",Mt="Conv3DBackpropInputV2",Ot="Cos",Lt="Cosh",zt="Cumprod",Pt="Cumsum",Bt="CropAndResize",Vt="DenseBincount",Ut="DepthToSpace",Wt="DepthwiseConv2dNative",Gt="DepthwiseConv2dNativeBackpropFilter",Ht="DepthwiseConv2dNativeBackpropInput",jt="Diag",Kt="Dilation2D",qt="Dilation2DBackpropInput",Xt="Dilation2DBackpropFilter",Yt="Draw",Zt="RealDiv",Qt="Einsum",Jt="Elu",en="EluGrad",tn="Erf",nn="Equal",rn="Exp",sn="ExpandDims",an="Expm1",on="FFT",un="Fill",ln="FlipLeftRight",cn="Floor",hn="FloorDiv",dn="FusedBatchNorm",pn="GatherV2",fn="GatherNd",mn="Greater",gn="GreaterEqual",yn="Identity",bn="IFFT",xn="Imag",wn="IsFinite",vn="IsInf",kn="IsNan",Nn="LeakyRelu",In="Less",Sn="LessEqual",Tn="LinSpace",En="Log",Cn="Log1p",$n="LogicalAnd",An="LogicalNot",Rn="LogicalOr",_n="LogicalXor",Dn="LogSoftmax",Fn="LowerBound",Mn="LRN",On="LRNGrad",Ln="MatrixBandPart",zn="Max",Pn="Maximum",Bn="MaxPool",Vn="MaxPoolGrad",Un="MaxPool3D",Wn="MaxPool3DGrad",Gn="MaxPoolWithArgmax",Hn="Mean",jn="Min",Kn="Minimum",qn="MirrorPad",Xn="Mod",Yn="Multinomial",Zn="Multiply",Qn="Neg",Jn="NotEqual",er="NonMaxSuppressionV3",tr="NonMaxSuppressionV4",nr="NonMaxSuppressionV5",rr="OnesLike",sr="OneHot",ar="Pack",ir="PadV2",or="Pool",ur="Pow",lr="Prelu",cr="Prod",hr="RaggedGather",dr="RaggedRange",pr="RaggedTensorToTensor",fr="Range",mr="Real",gr="Reciprocal",yr="Relu",br="Reshape",xr="ResizeNearestNeighbor",wr="ResizeNearestNeighborGrad",vr="ResizeBilinear",kr="ResizeBilinearGrad",Nr="Relu6",Ir="Reverse",Sr="Round",Tr="Rsqrt",Er="ScatterNd",Cr="TensorScatterUpdate",$r="SearchSorted",Ar="Select",Rr="Selu",_r="Slice",Dr="Sin",Fr="Sinh",Mr="Sign",Or="Sigmoid",Lr="Softplus",zr="Sqrt",Pr="Sum",Br="SpaceToBatchND",Vr="SplitV",Ur="Softmax",Wr="SparseFillEmptyRows",Gr="SparseReshape",Hr="SparseSegmentMean",jr="SparseSegmentSum",Kr="SparseToDense",qr="SquaredDifference",Xr="Square",Yr="StaticRegexReplace",Zr="StridedSlice",Qr="StringNGrams",Jr="StringSplit",es="StringToHashBucketFast",ts="Sub",ns="Tan",rs="Tanh",ss="Tile",as="TopK",is="Transform",os="Transpose",us="Unique",ls="Unpack",cs="UnsortedSegmentSum",hs="UpperBound",ds="ZerosLike",ps="Step",fs="FromPixels",ms="RotateWithOffset",gs="_FusedMatMul",ys="FusedConv2D",bs="FusedDepthwiseConv2D";function xs(...e){Xe().getBool("IS_TEST")||Xe().getBool("PROD")||console.warn(...e)}function ws(...e){Xe().getBool("IS_TEST")||Xe().getBool("PROD")||console.log(...e)}const vs=Je("kernelRegistry",()=>new Map),ks=Je("gradRegistry",()=>new Map);function Ns(e,t){const n=Rs(e,t);return vs.get(n)}function Is(e){return ks.get(e)}function Ss(e){const t=vs.entries(),n=[];for(;;){const{done:r,value:s}=t.next();if(r)break;const[a,i]=s,[o]=a.split("_");o===e&&n.push(i)}return n}function Ts(e){const{kernelName:t,backendName:n}=e,r=Rs(t,n);vs.has(r)&&xs(`The kernel '${t}' for backend '${n}' is already registered`),vs.set(r,e)}function Es(e){const{kernelName:t}=e;ks.has(t)&&Xe().getBool("DEBUG")&&xs(`Overriding the gradient for '${t}'`),ks.set(t,e)}function Cs(e,t){const n=Rs(e,t);if(!vs.has(n))throw new Error(`The kernel '${e}' for backend '${t}' is not registered`);vs.delete(n)}function $s(e){if(!ks.has(e))throw new Error(`The gradient '${e}' for backend is not registered`);ks.delete(e)}function As(e,t){Ss(e).forEach(e=>{Ts(Object.assign({},e,{backendName:t}))})}function Rs(e,t){return`${t}_${e}`}function _s(e){return e instanceof Float32Array||e instanceof Int32Array||e instanceof Uint8Array||e instanceof Uint8ClampedArray}var Ds=n(570);const Fs=n.n(Ds)()||Ds;function Ms(e){return Fs.fromString(e,!0,16)}const Os=Ms("c3a5c85c97cb3127"),Ls=Ms("b492b66fbe98f273"),zs=Ms("9ae16a3b2f90404f");function Ps(e){return e.xor(e.shru(47))}function Bs(e,t,n){const r=e.slice(t,t+n);return Fs.fromBytes(Array.from(r),!0,!0)}function Vs(e,t){return Bs(e,t,8)}function Us(e,t){return Bs(e,t,4)}function Ws(e,t){return 0===t?e:e.shru(t).or(e.shl(64-t))}function Gs(e,t,n=Ms("9ddfea08eb382d69")){let r=e.xor(t).mul(n);r=r.xor(r.shru(47));let s=t.xor(r).mul(n);return s=s.xor(s.shru(47)),s=s.mul(n),s}function Hs(e,t,n,r){return function(e,t,n,r,s,a){s=s.add(e),a=Ws(a.add(s).add(r),21);const i=s;return s=(s=s.add(t)).add(n),a=a.add(Ws(s,44)),[s.add(r),a.add(i)]}(Vs(e,t),Vs(e,t+8),Vs(e,t+16),Vs(e,t+24),n,r)}function js(e,t=e.length){const n=Fs.fromNumber(81,!0);if(t<=32)return t<=16?function(e,t=e.length){if(t>=8){const n=zs.add(2*t),r=Vs(e,0).add(zs),s=Vs(e,t-8);return Gs(Ws(s,37).mul(n).add(r),Ws(r,25).add(s).mul(n),n)}if(t>=4){const n=zs.add(2*t);return Gs(Us(e,0).shl(3).add(t),Us(e,t-4),n)}if(t>0){const n=e[0]+(e[t>>1]<<8),r=t+(e[t-1]<<2);return Ps(zs.mul(n).xor(Os.mul(r))).mul(zs)}return zs}(e,t):function(e,t=e.length){const n=zs.add(2*t),r=Vs(e,0).mul(Ls),s=Vs(e,8),a=Vs(e,t-8).mul(n),i=Vs(e,t-16).mul(zs);return Gs(Ws(r.add(s),43).add(Ws(a,30)).add(i),r.add(Ws(s.add(zs),18)).add(a),n)}(e,t);if(t<=64)return function(e,t=e.length){const n=zs.add(2*t),r=Vs(e,0).mul(zs),s=Vs(e,8),a=Vs(e,t-8).mul(n),i=Vs(e,t-16).mul(zs),o=Ws(r.add(s),43).add(Ws(a,30)).add(i),u=Gs(o,r.add(Ws(s.add(zs),18)).add(a),n),l=Vs(e,16).mul(n),c=Vs(e,24),h=o.add(Vs(e,t-32)).mul(n),d=u.add(Vs(e,t-24)).mul(n);return Gs(Ws(l.add(c),43).add(Ws(h,30)).add(d),l.add(Ws(c.add(r),18)).add(h),n)}(e,t);let r=n,s=n.mul(Ls).add(113),a=Ps(s.mul(zs).add(113)).mul(zs),i=[Fs.UZERO,Fs.UZERO],o=[Fs.UZERO,Fs.UZERO];r=r.mul(zs).add(Vs(e,0));let u=0;const l=64*(t-1>>6),c=l+(t-1&63)-63;do{r=Ws(r.add(s).add(i[0]).add(Vs(e,u+8)),37).mul(Ls),s=Ws(s.add(i[1]).add(Vs(e,u+48)),42).mul(Ls),r=r.xor(o[1]),s=s.add(i[0]).add(Vs(e,u+40)),a=Ws(a.add(o[0]),33).mul(Ls),i=Hs(e,u,i[1].mul(Ls),r.add(o[0])),o=Hs(e,u+32,a.add(o[1]),s.add(Vs(e,u+16))),[a,r]=[r,a],u+=64}while(u!==l);const h=Ls.add(a.and(255).shl(1));return u=c,o[0]=o[0].add(t-1&63),i[0]=i[0].add(o[0]),o[0]=o[0].add(i[0]),r=Ws(r.add(s).add(i[0]).add(Vs(e,u+8)),37).mul(h),s=Ws(s.add(i[1]).add(Vs(e,u+48)),42).mul(h),r=r.xor(o[1].mul(9)),s=s.add(i[0].mul(9).add(Vs(e,u+40))),a=Ws(a.add(o[0]),33).mul(h),i=Hs(e,u,i[1].mul(h),r.add(o[0])),o=Hs(e,u+32,a.add(o[1]),s.add(Vs(e,u+16))),[a,r]=[r,a],Gs(Gs(i[0],o[0],h).add(Ps(s).mul(Os)).add(a),Gs(i[1],o[1],h).add(r),h)}function Ks(e,t){return"string"===t?Zs(e):qs([e],t)}function qs(e,t){if("string"===t)throw new Error("Cannot convert a string[] to a TypedArray");if(Array.isArray(e)&&(e=ea(e)),Xe().getBool("DEBUG")&&Ie(e,t),function(e,t){return e instanceof Float32Array&&"float32"===t||e instanceof Int32Array&&"int32"===t||e instanceof Uint8Array&&"bool"===t}(e,t))return e;if(null==t||"float32"===t||"complex64"===t)return new Float32Array(e);if("int32"===t)return new Int32Array(e);if("bool"===t){const t=new Uint8Array(e.length);for(let n=0;n<t.length;++n)0!==Math.round(e[n])&&(t[n]=1);return t}throw new Error(`Unknown data type ${t}`)}function Xs(){return Xe().platform.now()}function Ys(e,t){return Xe().platform.fetch(e,t)}function Zs(e,t="utf-8"){return t=t||"utf-8",Xe().platform.encode(e,t)}function Qs(e,t="utf-8"){return t=t||"utf-8",Xe().platform.decode(e,t)}function Js(e){return null!=Xe().platform.isTypedArray?Xe().platform.isTypedArray(e):_s(e)}function ea(e,t=[],n=!1){if(null==t&&(t=[]),"boolean"==typeof e||"number"==typeof e||"string"==typeof e||He(e)||null==e||Js(e)&&n)t.push(e);else if(Array.isArray(e)||Js(e))for(let r=0;r<e.length;++r)ea(e[r],t,n);else{let r=-1;for(const t of Object.keys(e))/^([1-9]+[0-9]*|0)$/.test(t)&&(r=Math.max(r,Number(t)));for(let s=0;s<=r;s++)ea(e[s],t,n)}return t}class ta{constructor(e,t){this.backendTimer=e,this.logger=t,null==t&&(this.logger=new ra)}profileKernel(e,t,n){let r;const s=()=>{r=n()};let a;const i=Xs();if(this.backendTimer.timerAvailable())a=this.backendTimer.time(s);else{s();for(const e of r)e.dataSync();a=Promise.resolve({kernelMs:Xs()-i})}if(Xe().getBool("CHECK_COMPUTATION_FOR_ERRORS"))for(let t=0;t<r.length;t++){const n=r[t];n.data().then(t=>{na(t,n.dtype,e)})}return{kernelName:e,outputs:r,inputs:t,timeMs:a.then(e=>e.kernelMs),extraInfo:a.then(e=>null!=e.getExtraProfileInfo?e.getExtraProfileInfo():"")}}logKernelProfile(e){const{kernelName:t,outputs:n,timeMs:r,inputs:s,extraInfo:a}=e;n.forEach(e=>{Promise.all([e.data(),r,a]).then(n=>{this.logger.logKernelProfile(t,e,n[0],n[1],s,n[2])})})}}function na(e,t,n){if("float32"!==t)return!1;for(let t=0;t<e.length;t++){const r=e[t];if(isNaN(r)||!isFinite(r))return console.warn(`Found ${r} in the result of '${n}'`),!0}return!1}class ra{logKernelProfile(e,t,n,r,s,a){const i="number"==typeof r?ye(`${r}ms`,9):r.error,o=ye(e,25),u=t.rank,l=t.size,c=ye(t.shape.toString(),14);let h="";for(const e in s){const n=s[e];if(null!=n){const r=n.shape||t.shape,s=r.length;h+=`${e}: ${s}D ${s>0?r:""} `}}console.log(`%c${o}\t%c${i}\t%c${u}D ${c}\t%c${l}\t%c${h}\t%c${a}`,"font-weight:bold","color:red","color:blue","color: orange","color: green","color: steelblue")}}function sa(e,t,n,r){const s=Me(t),a=function(e,t,n,r){const s=le(t),a=r[r.length-1],i=new Array(a).fill(0),o=t.length,u="complex64"===n?ua(e):e;if(o>1)for(let e=0;e<s/a;e++){const t=e*a;for(let e=0;e<a;e++)i[e]=Math.max(i[e],aa(u[t+e],0,n).length)}return i}(e,t,n,s),i=t.length,o=oa(e,t,n,s,a),u=["Tensor"];return r&&(u.push(`  dtype: ${n}`),u.push(`  rank: ${i}`),u.push(`  shape: [${t}]`),u.push("  values:")),u.push(o.map(e=>"    "+e).join("\n")),u.join("\n")}function aa(e,t,n){let r;return r=Array.isArray(e)?`${parseFloat(e[0].toFixed(7))} + ${parseFloat(e[1].toFixed(7))}j`:$e(e)?`'${e}'`:"bool"===n?ia(e):parseFloat(e.toFixed(7)).toString(),ye(r,t)}function ia(e){return 0===e?"false":"true"}function oa(e,t,n,r,s,a=!0){const i="complex64"===n?2:1,o=t[0],u=t.length;if(0===u)return"complex64"===n?[aa(ua(e)[0],0,n)]:"bool"===n?[ia(e[0])]:[e[0].toString()];if(1===u){if(o>20){const t=3*i;let r=Array.from(e.slice(0,t)),a=Array.from(e.slice((o-3)*i,o*i));return"complex64"===n&&(r=ua(r),a=ua(a)),["["+r.map((e,t)=>aa(e,s[t],n)).join(", ")+", ..., "+a.map((e,t)=>aa(e,s[o-3+t],n)).join(", ")+"]"]}return["["+("complex64"===n?ua(e):Array.from(e)).map((e,t)=>aa(e,s[t],n)).join(", ")+"]"]}const l=t.slice(1),c=r.slice(1),h=r[0]*i,d=[];if(o>20){for(let t=0;t<3;t++){const r=t*h,a=r+h;d.push(...oa(e.slice(r,a),l,n,c,s,!1))}d.push("...");for(let t=o-3;t<o;t++){const r=t*h,a=r+h;d.push(...oa(e.slice(r,a),l,n,c,s,t===o-1))}}else for(let t=0;t<o;t++){const r=t*h,a=r+h;d.push(...oa(e.slice(r,a),l,n,c,s,t===o-1))}const p=2===u?",":"";d[0]="["+(o>0?d[0]+p:"");for(let e=1;e<d.length-1;e++)d[e]=" "+d[e]+p;let f=",\n";for(let e=2;e<u;e++)f+="\n";return d[d.length-1]=" "+d[d.length-1]+"]"+(a?"":f),d}function ua(e){const t=[];for(let n=0;n<e.length;n+=2)t.push([e[n],e[n+1]]);return t}class la{constructor(e,t,n){if(this.dtype=t,this.shape=e.slice(),this.size=le(e),null!=n){const e=n.length;ie(e===this.size,()=>`Length of values '${e}' does not match the size inferred by the shape '${this.size}'.`)}if("complex64"===t)throw new Error("complex64 dtype TensorBuffers are not supported. Please create a TensorBuffer for the real and imaginary parts separately and call tf.complex(real, imag).");this.values=n||Ne(t,this.size),this.strides=Me(e)}set(e,...t){0===t.length&&(t=[0]),ie(t.length===this.rank,()=>`The number of provided coordinates (${t.length}) must match the rank (${this.rank})`);const n=this.locToIndex(t);this.values[n]=e}get(...e){0===e.length&&(e=[0]);let t=0;for(const n of e){if(n<0||n>=this.shape[t]){const t=`Requested out of range element at ${e}.   Buffer shape=${this.shape}`;throw new Error(t)}t++}let n=e[e.length-1];for(let t=0;t<e.length-1;++t)n+=this.strides[t]*e[t];return this.values[n]}locToIndex(e){if(0===this.rank)return 0;if(1===this.rank)return e[0];let t=e[e.length-1];for(let n=0;n<e.length-1;++n)t+=this.strides[n]*e[n];return t}indexToLoc(e){if(0===this.rank)return[];if(1===this.rank)return[e];const t=new Array(this.shape.length);for(let n=0;n<t.length-1;++n)t[n]=Math.floor(e/this.strides[n]),e-=t[n]*this.strides[n];return t[t.length-1]=e,t}get rank(){return this.shape.length}toTensor(){return ca().makeTensor(this.values,this.shape,this.dtype)}}let ca=null,ha=null,da=null;class pa{constructor(e,t,n,r){this.kept=!1,this.isDisposedInternal=!1,this.shape=e.slice(),this.dtype=t||"float32",this.size=le(e),this.strides=Me(e),this.dataId=n,this.id=r,this.rankType=this.rank<5?this.rank.toString():"higher"}get rank(){return this.shape.length}async buffer(){const e=await this.data();return ha.buffer(this.shape,this.dtype,e)}bufferSync(){return ha.buffer(this.shape,this.dtype,this.dataSync())}async array(){const e=await this.data();return Le(this.shape,e,"complex64"===this.dtype)}arraySync(){return Le(this.shape,this.dataSync(),"complex64"===this.dtype)}async data(){this.throwIfDisposed();const e=ca().read(this.dataId);if("string"===this.dtype){const t=await e;try{return t.map(e=>Qs(e))}catch(e){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}}return e}dataToGPU(e){return this.throwIfDisposed(),ca().readToGPU(this.dataId,e)}dataSync(){this.throwIfDisposed();const e=ca().readSync(this.dataId);if("string"===this.dtype)try{return e.map(e=>Qs(e))}catch(e){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}return e}async bytes(){this.throwIfDisposed();const e=await ca().read(this.dataId);return"string"===this.dtype?e:new Uint8Array(e.buffer)}dispose(){this.isDisposed||(this.kerasMask&&this.kerasMask.dispose(),ca().disposeTensor(this),this.isDisposedInternal=!0)}get isDisposed(){return this.isDisposedInternal}throwIfDisposed(){if(this.isDisposed)throw new Error("Tensor is disposed.")}print(e=!1){return ha.print(this,e)}clone(){return this.throwIfDisposed(),ha.clone(this)}toString(e=!1){return sa(this.dataSync(),this.shape,this.dtype,e)}cast(e){return this.throwIfDisposed(),ha.cast(this,e)}variable(e=!0,t,n){return this.throwIfDisposed(),ca().makeVariable(this,e,t,n)}}function fa(){return Je("Tensor",()=>pa)}Object.defineProperty(pa,Symbol.hasInstance,{value:e=>!!e&&null!=e.data&&null!=e.dataSync&&null!=e.throwIfDisposed}),fa();class ma extends pa{constructor(e,t,n,r){super(e.shape,e.dtype,e.dataId,r),this.trainable=t,this.name=n}assign(e){if(e.dtype!==this.dtype)throw new Error(`dtype of the new value (${e.dtype}) and previous value (${this.dtype}) must match`);if(!de(e.shape,this.shape))throw new Error(`shape of the new value (${e.shape}) and previous value (${this.shape}) must match`);ca().disposeTensor(this),this.dataId=e.dataId,ca().incRef(this,null)}dispose(){ca().disposeVariable(this),this.isDisposedInternal=!0}}var ga,ya,ba,xa,wa;Object.defineProperty(ma,Symbol.hasInstance,{value:e=>e instanceof pa&&null!=e.assign&&e.assign instanceof Function}),function(e){e.R0="R0",e.R1="R1",e.R2="R2",e.R3="R3",e.R4="R4",e.R5="R5",e.R6="R6"}(ga||(ga={})),function(e){e.float32="float32",e.int32="int32",e.bool="int32",e.complex64="complex64"}(ya||(ya={})),function(e){e.float32="float32",e.int32="int32",e.bool="bool",e.complex64="complex64"}(ba||(ba={})),function(e){e.float32="float32",e.int32="float32",e.bool="float32",e.complex64="complex64"}(xa||(xa={})),function(e){e.float32="complex64",e.int32="complex64",e.bool="complex64",e.complex64="complex64"}(wa||(wa={}));const va={float32:xa,int32:ya,bool:ba,complex64:wa};function ka(e,t){if("string"===e||"string"===t){if("string"===e&&"string"===t)return"string";throw new Error(`Can not upcast ${e} with ${t}`)}return va[e][t]}function Na(e){return ka(e,"int32")}function Ia(e){return null!=e&&"object"==typeof e&&"texture"in e&&e.texture instanceof WebGLTexture}function Sa(e){return"undefined"!=typeof GPUBuffer&&null!=e&&"object"==typeof e&&"buffer"in e&&e.buffer instanceof GPUBuffer}function Ta(e,t){if(e.dtype===t.dtype)return[e,t];const n=ka(e.dtype,t.dtype);return[e.cast(n),t.cast(n)]}function Ea(e,t){ie(e.dtype===t.dtype,()=>`The dtypes of the first(${e.dtype}) and second(${t.dtype}) input must match`)}function Ca(e,t){return t.some(t=>t.id===e.id)}function $a(e){const t=[];return Aa(e,t,new Set),t}function Aa(e,t,n){if(null==e)return;if(e instanceof pa)return void t.push(e);if(r=e,!Array.isArray(r)&&"object"!=typeof r)return;var r;const s=e;for(const e in s){const r=s[e];n.has(r)||(n.add(r),Aa(r,t,n))}}function Ra(e){return null!=e.kernelName}class _a{constructor(){this.registeredVariables={},this.nextTapeNodeId=0,this.numBytes=0,this.numTensors=0,this.numStringTensors=0,this.numDataBuffers=0,this.gradientDepth=0,this.kernelDepth=0,this.scopeStack=[],this.numDataMovesStack=[],this.nextScopeId=0,this.tensorInfo=new WeakMap,this.profiling=!1,this.activeProfile={newBytes:0,newTensors:0,peakBytes:0,kernels:[],result:null,get kernelNames(){return Array.from(new Set(this.kernels.map(e=>e.name)))}}}dispose(){for(const e in this.registeredVariables)this.registeredVariables[e].dispose()}}class Da{constructor(e){this.ENV=e,this.registry={},this.registryFactory={},this.pendingBackendInitId=0,this.state=new _a}async ready(){if(null!=this.pendingBackendInit)return this.pendingBackendInit.then(()=>{});if(null!=this.backendInstance)return;const e=this.getSortedBackends();for(let t=0;t<e.length;t++){const n=e[t];if(await this.initializeBackend(n).success)return void await this.setBackend(n)}throw new Error("Could not initialize any backends, all backend initializations failed.")}get backend(){if(null!=this.pendingBackendInit)throw new Error(`Backend '${this.backendName}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);if(null==this.backendInstance){const{name:e,asyncInit:t}=this.initializeBackendsAndReturnBest();if(t)throw new Error(`The highest priority backend '${e}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);this.setBackend(e)}return this.backendInstance}backendNames(){return Object.keys(this.registryFactory)}findBackend(e){if(!(e in this.registry)){if(!(e in this.registryFactory))return null;{const{asyncInit:t}=this.initializeBackend(e);if(t)return null}}return this.registry[e]}findBackendFactory(e){return e in this.registryFactory?this.registryFactory[e].factory:null}registerBackend(e,t,n=1){return e in this.registryFactory?(xs(`${e} backend was already registered. Reusing existing backend factory.`),!1):(this.registryFactory[e]={factory:t,priority:n},!0)}async setBackend(e){if(null==this.registryFactory[e])throw new Error(`Backend name '${e}' not found in registry`);if(this.backendName=e,null==this.registry[e]){this.backendInstance=null;const{success:t,asyncInit:n}=this.initializeBackend(e);if(!(n?await t:t))return!1}return this.backendInstance=this.registry[e],this.setupRegisteredKernels(),this.profiler=new ta(this.backendInstance),!0}setupRegisteredKernels(){Ss(this.backendName).forEach(e=>{null!=e.setupFunc&&e.setupFunc(this.backendInstance)})}disposeRegisteredKernels(e){Ss(e).forEach(t=>{null!=t.disposeFunc&&t.disposeFunc(this.registry[e])})}initializeBackend(e){const t=this.registryFactory[e];if(null==t)throw new Error(`Cannot initialize backend ${e}, no registration found.`);try{const n=t.factory();if(!n||n instanceof Y||"function"!=typeof n.then)return this.registry[e]=n,{success:!0,asyncInit:!1};{const t=++this.pendingBackendInitId,r=n.then(n=>!(t<this.pendingBackendInitId||(this.registry[e]=n,this.pendingBackendInit=null,0))).catch(n=>(t<this.pendingBackendInitId||(this.pendingBackendInit=null,xs(`Initialization of backend ${e} failed`),xs(n.stack||n.message)),!1));return this.pendingBackendInit=r,{success:r,asyncInit:!0}}}catch(t){return xs(`Initialization of backend ${e} failed`),xs(t.stack||t.message),{success:!1,asyncInit:!1}}}removeBackend(e){if(!(e in this.registryFactory))throw new Error(`${e} backend not found in registry`);this.backendName===e&&null!=this.pendingBackendInit&&this.pendingBackendInitId++,e in this.registry&&(this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e]),delete this.registryFactory[e],this.backendName===e&&(this.pendingBackendInit=null,this.backendName=null,this.backendInstance=null)}getSortedBackends(){if(0===Object.keys(this.registryFactory).length)throw new Error("No backend found in registry.");return Object.keys(this.registryFactory).sort((e,t)=>this.registryFactory[t].priority-this.registryFactory[e].priority)}initializeBackendsAndReturnBest(){const e=this.getSortedBackends();for(let t=0;t<e.length;t++){const n=e[t],{success:r,asyncInit:s}=this.initializeBackend(n);if(s||r)return{name:n,asyncInit:s}}throw new Error("Could not initialize any backends, all backend initializations failed.")}moveData(e,t){const n=this.state.tensorInfo.get(t),r=n.backend,s=this.readSync(t),a=r.refCount(t);r.disposeData(t,!0),n.backend=e,e.move(t,s,n.shape,n.dtype,a),this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack[this.state.numDataMovesStack.length-1]++}tidy(e,t){let n,r=null;if(null==t){if("function"!=typeof e)throw new Error("Please provide a function to tidy()");t=e}else{if("string"!=typeof e&&!(e instanceof String))throw new Error("When calling with two arguments, the first argument to tidy() must be a string");if("function"!=typeof t)throw new Error("When calling with two arguments, the 2nd argument to tidy() must be a function");r=e}return this.scopedRun(()=>this.startScope(r),()=>this.endScope(n),()=>(n=t(),n instanceof Promise&&console.error("Cannot return a Promise inside of tidy."),n))}scopedRun(e,t,n){e();try{const e=n();return t(),e}catch(e){throw t(),e}}nextTensorId(){return Da.nextTensorId++}nextVariableId(){return Da.nextVariableId++}clone(e){const t=Ma.runKernel(yn,{x:e}),n={x:e};return this.addTapeNode(this.state.activeScope.name,n,[t],e=>({x:()=>{const t={x:e};return Ma.runKernel(It,t,{dtype:"float32"})}}),[],{}),t}runKernel(e,t,n){if(null==this.backendName&&this.backend,null==Ns(e,this.backendName))throw new Error(`Kernel '${e}' not registered for backend '${this.backendName}'`);return this.runKernelFunc({kernelName:e,inputs:t,attrs:n})}shouldCheckForMemLeaks(){return this.ENV.getBool("IS_TEST")}checkKernelForMemLeak(e,t,n){const r=this.backend.numDataIds();let s=0;n.forEach(e=>{s+="complex64"===e.dtype?3:1});const a=this.state.numDataMovesStack[this.state.numDataMovesStack.length-1],i=r-t-s-a;if(i>0)throw new Error(`Backend '${this.backendName}' has an internal memory leak (${i} data ids) after running '${e}'`)}runKernelFunc(e){let t,n=[];const r=this.isTapeOn(),s=this.state.numBytes,a=this.state.numTensors;let i,o;this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack.push(0),null==this.backendName&&this.backend;const u=Ra(e)?e.kernelName:null!=this.state.activeScope?this.state.activeScope.name:"";if(Ra(e)){const{kernelName:t,inputs:s,attrs:a}=e;null==this.backendName&&this.backend;const u=Ns(t,this.backendName);ie(null!=u,()=>`Cannot find registered kernel '${t}' for backend '${this.backendName}'`),i=()=>{const e=this.backend.numDataIds();o=u.kernelFunc({inputs:s,attrs:a,backend:this.backend});const i=Array.isArray(o)?o:[o];this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(t,e,i);const l=i.map(e=>null!=e.rank?e:this.makeTensorFromTensorInfo(e));if(r){const e=this.getTensorsForGradient(t,s,l);n=this.saveTensorsForBackwardMode(e)}return l}}else{const{forwardFunc:t}=e,s=e=>{r&&(n=e.map(e=>this.keep(this.clone(e))))};i=()=>{const e=this.backend.numDataIds();o=this.tidy(()=>t(this.backend,s));const n=Array.isArray(o)?o:[o];return this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(u,e,n),n}}const{inputs:l,attrs:c}=e,h=Ra(e)?null:e.backwardsFunc;let d;return this.scopedRun(()=>this.state.kernelDepth++,()=>this.state.kernelDepth--,()=>{this.ENV.getBool("DEBUG")||this.state.profiling?(d=this.profiler.profileKernel(u,l,()=>i()),this.ENV.getBool("DEBUG")&&this.profiler.logKernelProfile(d),t=d.outputs):t=i()}),r&&this.addTapeNode(u,l,t,h,n,c),this.state.profiling&&this.state.activeProfile.kernels.push({name:u,bytesAdded:this.state.numBytes-s,totalBytesSnapshot:this.state.numBytes,tensorsAdded:this.state.numTensors-a,totalTensorsSnapshot:this.state.numTensors,inputShapes:Object.keys(l).map(e=>null!=l[e]?l[e].shape:null),outputShapes:t.map(e=>e.shape),kernelTimeMs:d.timeMs,extraInfo:d.extraInfo}),Array.isArray(o)?t:t[0]}saveTensorsForBackwardMode(e){const t=e.map(e=>this.keep(this.clone(e)));return t}getTensorsForGradient(e,t,n){const r=Is(e);if(null!=r){const e=r.inputsToSave||[],s=r.outputsToSave||[];let a;r.saveAllInputs?(ie(Array.isArray(t),()=>"saveAllInputs is true, expected inputs to be an array."),a=Object.keys(t).map(e=>t[e])):a=e.map(e=>t[e]);const i=n.filter((e,t)=>s[t]);return a.concat(i)}return[]}makeTensor(e,t,n,r){if(null==e)throw new Error("Values passed to engine.makeTensor() are null");n=n||"float32",r=r||this.backend;let s=e;"string"===n&&$e(e[0])&&(s=e.map(e=>Zs(e)));const a=r.write(s,t,n),i=new pa(t,n,a,this.nextTensorId());if(this.trackTensor(i,r),"string"===n){const e=this.state.tensorInfo.get(a),t=Ce(s);this.state.numBytes+=t-e.bytes,e.bytes=t}return i}makeTensorFromDataId(e,t,n,r){const s={dataId:e,shape:t,dtype:n=n||"float32"};return this.makeTensorFromTensorInfo(s,r)}makeTensorFromTensorInfo(e,t){const{dataId:n,shape:r,dtype:s}=e,a=new pa(r,s,n,this.nextTensorId());return this.trackTensor(a,t),a}makeVariable(e,t=!0,n,r){n=n||this.nextVariableId().toString(),null!=r&&r!==e.dtype&&(e=e.cast(r));const s=new ma(e,t,n,this.nextTensorId());if(null!=this.state.registeredVariables[s.name])throw new Error(`Variable with name ${s.name} was already registered`);return this.state.registeredVariables[s.name]=s,this.incRef(s,this.backend),s}trackTensor(e,t){this.state.numTensors++,"string"===e.dtype&&this.state.numStringTensors++;let n=0;"complex64"!==e.dtype&&"string"!==e.dtype&&(n=e.size*Ee(e.dtype)),this.state.numBytes+=n,this.state.tensorInfo.has(e.dataId)||(this.state.numDataBuffers++,this.state.tensorInfo.set(e.dataId,{backend:t||this.backend,dtype:e.dtype,shape:e.shape,bytes:n})),e instanceof ma||this.track(e)}incRef(e,t){this.trackTensor(e,t),this.backend.incRef(e.dataId)}removeDataId(e,t){this.state.tensorInfo.has(e)&&this.state.tensorInfo.get(e).backend===t&&(this.state.tensorInfo.delete(e),this.state.numDataBuffers--)}disposeTensor(e){if(!this.state.tensorInfo.has(e.dataId))return;const t=this.state.tensorInfo.get(e.dataId);if(this.state.numTensors--,"string"===e.dtype&&(this.state.numStringTensors--,this.state.numBytes-=t.bytes),"complex64"!==e.dtype&&"string"!==e.dtype){const t=e.size*Ee(e.dtype);this.state.numBytes-=t}t.backend.disposeData(e.dataId)&&this.removeDataId(e.dataId,t.backend)}disposeVariables(){for(const e in this.state.registeredVariables){const t=this.state.registeredVariables[e];this.disposeVariable(t)}}disposeVariable(e){this.disposeTensor(e),null!=this.state.registeredVariables[e.name]&&delete this.state.registeredVariables[e.name]}memory(){const e=this.backend.memory();return e.numTensors=this.state.numTensors,e.numDataBuffers=this.state.numDataBuffers,e.numBytes=this.state.numBytes,this.state.numStringTensors>0&&(e.unreliable=!0,null==e.reasons&&(e.reasons=[]),e.reasons.push("Memory usage by string tensors is approximate (2 bytes per character)")),e}async profile(e){this.state.profiling=!0;const t=this.state.numBytes,n=this.state.numTensors;this.state.activeProfile.kernels=[],this.state.activeProfile.result=await e(),this.state.profiling=!1,this.state.activeProfile.peakBytes=Math.max(...this.state.activeProfile.kernels.map(e=>e.totalBytesSnapshot)),this.state.activeProfile.newBytes=this.state.numBytes-t,this.state.activeProfile.newTensors=this.state.numTensors-n;for(const e of this.state.activeProfile.kernels)e.kernelTimeMs=await e.kernelTimeMs,e.extraInfo=await e.extraInfo;return this.state.activeProfile}isTapeOn(){return this.state.gradientDepth>0&&0===this.state.kernelDepth}addTapeNode(e,t,n,r,s,a){const i={id:this.state.nextTapeNodeId++,kernelName:e,inputs:t,outputs:n,saved:s},o=Is(e);null!=o&&(r=o.gradFunc),null!=r&&(i.gradient=e=>(e=e.map((e,t)=>{if(null==e){const e=n[t],r=Be(e.size,e.dtype);return this.makeTensor(r,e.shape,e.dtype)}return e}),r(e.length>1?e:e[0],s,a))),this.state.activeTape.push(i)}keep(e){return e.kept=!0,e}startTape(){0===this.state.gradientDepth&&(this.state.activeTape=[]),this.state.gradientDepth++}endTape(){this.state.gradientDepth--}startScope(e){const t={track:[],name:"unnamed scope",id:this.state.nextScopeId++};e&&(t.name=e),this.state.scopeStack.push(t),this.state.activeScope=t}endScope(e){const t=$a(e),n=new Set(t.map(e=>e.id));for(let e=0;e<this.state.activeScope.track.length;e++){const t=this.state.activeScope.track[e];t.kept||n.has(t.id)||t.dispose()}const r=this.state.scopeStack.pop();this.state.activeScope=0===this.state.scopeStack.length?null:this.state.scopeStack[this.state.scopeStack.length-1],t.forEach(e=>{e.kept||e.scopeId!==r.id||this.track(e)})}gradients(e,t,n,r=!1){if(ie(t.length>0,()=>"gradients() received an empty list of xs."),null!=n&&"float32"!==n.dtype)throw new Error(`dy must have 'float32' dtype, but has '${n.dtype}'`);const s=this.scopedRun(()=>this.startTape(),()=>this.endTape(),()=>this.tidy("forward",e));ie(s instanceof pa,()=>"The result y returned by f() must be a tensor.");const a=function(e,t,n){const r={},s={};for(let e=0;e<t.length;e++)r[t[e].id]=!0;for(let n=0;n<e.length;n++){const a=e[n],i=a.inputs;for(const e in i){const n=i[e];let o=!1;for(let e=0;e<t.length;e++)if(r[n.id]){a.outputs.forEach(e=>r[e.id]=!0),o=!0,s[a.id]=!0;break}if(o)break}}const a={};a[n.id]=!0;const i={};for(let t=e.length-1;t>=0;t--){const n=e[t],r=n.inputs;for(let e=0;e<n.outputs.length;e++)if(a[n.outputs[e].id]){for(const e in r)a[r[e].id]=!0,i[n.id]=!0;break}}const o=[];for(let t=0;t<e.length;t++){const n=e[t];if(s[n.id]&&i[n.id]){const e={};for(const t in n.inputs){const s=n.inputs[t];r[s.id]&&(e[t]=s)}const t=Object.assign({},n);t.inputs=e,t.outputs=n.outputs,o.push(t)}}return o}(this.state.activeTape,t,s);if(!r&&0===a.length&&t.length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that the f you passed encloses all operations that lead from x to y.");return this.tidy("backward",()=>{const e={};e[s.id]=null==n?function(e){const t=Pe(le(e),"float32");return Ma.makeTensor(t,e,"float32")}(s.shape):n,function(e,t,n,r){for(let s=t.length-1;s>=0;s--){const a=t[s],i=[];if(a.outputs.forEach(t=>{const n=e[t.id];null!=n?i.push(n):i.push(null)}),null==a.gradient)throw new Error(`Cannot compute gradient: gradient function not found for ${a.kernelName}.`);const o=a.gradient(i);for(const t in a.inputs){if(!(t in o))throw new Error(`Cannot backprop through input ${t}. Available gradients found: ${Object.keys(o)}.`);const s=n(()=>o[t]());if("float32"!==s.dtype)throw new Error(`Error in gradient for op ${a.kernelName}. The gradient of input ${t} must have 'float32' dtype, but has '${s.dtype}'`);const i=a.inputs[t];if(!de(s.shape,i.shape))throw new Error(`Error in gradient for op ${a.kernelName}. The gradient of input '${t}' has shape '${s.shape}', which does not match the shape of the input '${i.shape}'`);if(null==e[i.id])e[i.id]=s;else{const t=e[i.id];e[i.id]=r(t,s),t.dispose()}}}}(e,a,e=>this.tidy(e),Oa);const r=t.map(t=>e[t.id]);return 0===this.state.gradientDepth&&(this.state.activeTape.forEach(e=>{for(const t of e.saved)t.dispose()}),this.state.activeTape=null),{value:s,grads:r}})}customGrad(e){return ie(De(e),()=>"The f passed in customGrad(f) must be a function."),(...t)=>{let n;ie(t.every(e=>e instanceof pa),()=>"The args passed in customGrad(f)(x1, x2,...) must all be tensors");const r={};return t.forEach((e,t)=>{r[t]=e}),this.runKernelFunc({forwardFunc:(r,s)=>(n=e(...t,s),ie(n.value instanceof pa,()=>"The function f passed in customGrad(f) must return an object where `obj.value` is a tensor"),ie(De(n.gradFunc),()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function."),n.value),backwardsFunc:(e,r)=>{const s=n.gradFunc(e,r),a=Array.isArray(s)?s:[s];ie(a.length===t.length,()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns the same number of tensors as inputs passed to f(...)."),ie(a.every(e=>e instanceof pa),()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns a list of only tensors.");const i={};return a.forEach((e,t)=>{i[t]=()=>e}),i},inputs:r})}}readSync(e){return this.state.tensorInfo.get(e).backend.readSync(e)}read(e){return this.state.tensorInfo.get(e).backend.read(e)}readToGPU(e,t){return this.state.tensorInfo.get(e).backend.readToGPU(e,t)}async time(e){const t=Xs(),n=await this.backend.time(e);return n.wallMs=Xs()-t,n}track(e){return null!=this.state.activeScope&&(e.scopeId=this.state.activeScope.id,this.state.activeScope.track.push(e)),e}get registeredVariables(){return this.state.registeredVariables}reset(){this.pendingBackendInitId++,this.state.dispose(),this.ENV.reset(),this.state=new _a;for(const e in this.registry)this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e];this.backendName=null,this.backendInstance=null,this.pendingBackendInit=null}}function Fa(){const e=Qe();if(null==e._tfengine){const t=new Ke(e);e._tfengine=new Da(t)}var t;return t=e._tfengine.ENV,Ze=t,ca=()=>e._tfengine,e._tfengine}Da.nextTensorId=0,Da.nextVariableId=0;const Ma=Fa();function Oa(e,t){const n={a:e,b:t};return Ma.runKernel(rt,n)}let La;function za(e){La=e}function Pa(e){if(void 0!==La)return La;if(e||"undefined"!=typeof navigator&&null!=navigator){if(e||(e=navigator),"ReactNative"===e.product)return!0;const t=e.userAgent||e.vendor||("undefined"!=typeof window?window.opera:"");if(!t){const t=e;return t.userAgentData&&t.userAgentData.mobile}return/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(t)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(t.substr(0,4))}return!1}function Ba(){return"undefined"!=typeof window&&null!=window.document||"undefined"!=typeof WorkerGlobalScope}const Va=Xe();function Ua(e,t){let n=e;if(Js(e))return"string"===t?[]:[e.length];if(Ia(e)){const t=e.channels||"RGBA";return[e.height,e.width*t.length]}if(Sa(e))return[e.buffer.size/(null==t?4:Ee(t))];if(!Array.isArray(e))return[];const r=[];for(;Array.isArray(n)||Js(n)&&"string"!==t;)r.push(n.length),n=n[0];return Array.isArray(e)&&Xe().getBool("TENSORLIKE_CHECK_SHAPE_CONSISTENCY")&&Wa(e,r,[]),r}function Wa(e,t,n){if(n=n||[],!Array.isArray(e)&&!Js(e))return void ie(0===t.length,()=>`Element arr[${n.join("][")}] is a primitive, but should be an array/TypedArray of ${t[0]} elements`);ie(t.length>0,()=>`Element arr[${n.join("][")}] should be a primitive, but is an array of ${e.length} elements`),ie(e.length===t[0],()=>`Element arr[${n.join("][")}] should have ${t[0]} elements, but has ${e.length} elements`);const r=t.slice(1);for(let t=0;t<e.length;++t)Wa(e[t],r,n.concat(t))}function Ga(e,t,n,r){if("string_or_numeric"!==e){if(null==e)throw new Error("Expected dtype cannot be null.");if("numeric"!==e&&e!==t||"numeric"===e&&"string"===t)throw new Error(`Argument '${n}' passed to '${r}' must be ${e} tensor, but got ${t} tensor`)}}function Ha(e,t,n,r="numeric"){if(e instanceof fa())return Ga(r,e.dtype,t,n),e;let s=_e(e);if("string"!==s&&["bool","int32","float32"].indexOf(r)>=0&&(s=r),Ga(r,s,t,n),null==e||!Js(e)&&!Array.isArray(e)&&"number"!=typeof e&&"boolean"!=typeof e&&"string"!=typeof e){const r=null==e?"null":e.constructor.name;throw new Error(`Argument '${t}' passed to '${n}' must be a Tensor or TensorLike, but got '${r}'`)}const a=Ua(e,s);Js(e)||Array.isArray(e)||(e=[e]);const i="string"!==s?qs(e,s):ea(e,[],!0);return Ma.makeTensor(i,a,s)}function ja(e,t,n,r="numeric"){if(!Array.isArray(e))throw new Error(`Argument ${t} passed to ${n} must be a \`Tensor[]\` or \`TensorLike[]\``);return e.map((e,s)=>Ha(e,`${t}[${s}]`,n,r))}Va.registerFlag("DEBUG",()=>!1,e=>{e&&console.warn("Debugging mode is ON. The output of every math call will be downloaded to CPU and checked for NaNs. This significantly impacts performance.")}),Va.registerFlag("IS_BROWSER",()=>Ba()),Va.registerFlag("IS_NODE",()=>"undefined"!=typeof process&&void 0!==process.versions&&void 0!==process.versions.node),Va.registerFlag("IS_CHROME",()=>"undefined"!=typeof navigator&&null!=navigator&&null!=navigator.userAgent&&/Chrome/.test(navigator.userAgent)&&/Google Inc/.test(navigator.vendor)),Va.registerFlag("IS_SAFARI",()=>"undefined"!=typeof navigator&&null!=navigator&&null!=navigator.userAgent&&/Safari/.test(navigator.userAgent)&&/Apple/.test(navigator.vendor)),Va.registerFlag("PROD",()=>!1),Va.registerFlag("TENSORLIKE_CHECK_SHAPE_CONSISTENCY",()=>Va.getBool("DEBUG")),Va.registerFlag("DEPRECATION_WARNINGS_ENABLED",()=>!0),Va.registerFlag("IS_TEST",()=>!1),Va.registerFlag("CHECK_COMPUTATION_FOR_ERRORS",()=>Va.getBool("DEBUG")),Va.registerFlag("WRAP_TO_IMAGEBITMAP",()=>!1),Va.registerFlag("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU",()=>!1),Va.registerFlag("USE_SETTIMEOUTCUSTOM",()=>!1);const Ka="__op";function qa(e){const t=Object.keys(e);if(1!==t.length)throw new Error(`Please provide an object with a single key (operation name) mapping to a function. Got an object with ${t.length} keys.`);let n=t[0];const r=e[n];n.endsWith("_")&&(n=n.substring(0,n.length-1)),n+=Ka;const s=(...e)=>{Ma.startScope(n);try{const t=r(...e);return He(t)&&console.error("Cannot return a Promise inside of tidy."),Ma.endScope(t),t}catch(e){throw Ma.endScope(null),e}};return Object.defineProperty(s,"name",{value:n,configurable:!0}),s}const Xa=qa({complex_:function(e,t){const n=Ha(e,"real","complex"),r=Ha(t,"imag","complex");oe(n.shape,r.shape,`real and imag shapes, ${n.shape} and ${r.shape}, must match in call to tf.complex().`);const s={real:n,imag:r};return Ma.runKernel(Et,s)}});function Ya(e,t,n,r){if(null==r)r=_e(e);else if("complex64"===r)throw new Error("Cannot construct a complex64 tensor directly. Please use tf.complex(real, imag).");if(Sa(e)||Ia(e)){if("float32"!==r&&"int32"!==r)throw new Error(`Creating tensor from GPU data only supports 'float32'|'int32' dtype, while the dtype is ${r}.`);return Ma.backend.createTensorFromGPUData(e,t||n,r)}if(!Js(e)&&!Array.isArray(e)&&"number"!=typeof e&&"boolean"!=typeof e&&"string"!=typeof e)throw new Error("values passed to tensor(values) must be a number/boolean/string or an array of numbers/booleans/strings, or a TypedArray");if(null!=t){Ue(t);const e=le(t),r=le(n);ie(e===r,()=>`Based on the provided shape, [${t}], the tensor should have ${e} values but has ${r}`);for(let e=0;e<n.length;++e){const r=n[e],s=e!==n.length-1||r!==le(t.slice(e));ie(n[e]===t[e]||!s,()=>`Error creating a new Tensor. Inferred shape (${n}) does not match the provided shape (${t}). `)}}return Js(e)||Array.isArray(e)||(e=[e]),t=t||n,e="string"!==r?qs(e,r):ea(e,[],!0),Ma.makeTensor(e,t,r)}function Za(e,t,n){return Ya(e,t,Ua(e,n),n)}const Qa={float32:4,float16:2,int32:4,uint16:2,uint8:1,bool:1,complex64:8};class Ja{static join(e){return new Ja(e).slice()}constructor(e){if(this.shards=[],this.previousShardIndex=0,null==e)return;if(e instanceof Array||(e=[e]),0===(e=e.map(e=>Js(e)?e.buffer:e)).length)return;this.bufferUniformSize=e[0].byteLength;let t=0;for(let n=0;n<e.length;n++){const r=e[n];n!==e.length-1&&r.byteLength!==this.bufferUniformSize&&(this.bufferUniformSize=void 0);const s=t+r.byteLength;this.shards.push({buffer:r,start:t,end:s}),t=s}0===this.shards.length&&(this.byteLength=0),this.byteLength=this.shards[this.shards.length-1].end}slice(e=0,t=this.byteLength){if(0===this.shards.length)return new ArrayBuffer(0);if(e=isNaN(Number(e))?0:e,t=isNaN(Number(t))?0:t,e=Math.max(0,e),(t=Math.min(this.byteLength,t))<=e)return new ArrayBuffer(0);const n=this.findShardForByte(e);if(-1===n)throw new Error(`Could not find start shard for byte ${e}`);const r=new ArrayBuffer(t-e),s=new Uint8Array(r);let a=0;for(let r=n;r<this.shards.length;r++){const n=this.shards[r],i=e+a-n.start,o=a,u=Math.min(t,n.end)-n.start,l=new Uint8Array(n.buffer,i,u-i);if(s.set(l,o),a+=l.length,t<n.end)break}return r}findShardForByte(e){if(0===this.shards.length||e<0||e>=this.byteLength)return-1;if(null!=this.bufferUniformSize)return this.previousShardIndex=Math.floor(e/this.bufferUniformSize),this.previousShardIndex;function t(t){return e<t.start?-1:e>=t.end?1:0}if(0===t(this.shards[this.previousShardIndex]))return this.previousShardIndex;const n=function(e,t){let n=0,r=e.length;for(;n<=r;){const s=Math.floor((r-n)/2)+n,a=t(e[s]);if(0===a)return s;a<0?r=s:n=s+1}return-1}(this.shards,t);return-1===n?-1:(this.previousShardIndex=n,this.previousShardIndex)}}function ei(){Xe().set("PROD",!0)}function ti(){Xe().set("DEBUG",!0)}function ni(){Xe().set("DEPRECATION_WARNINGS_ENABLED",!1),console.warn("TensorFlow.js deprecation warnings have been disabled.")}function ri(e){Xe().getBool("DEPRECATION_WARNINGS_ENABLED")&&console.warn(e+" You can disable deprecation warnings with tf.disableDeprecationWarnings().")}function si(){Ma.disposeVariables()}function ai(){return Ma}function ii(){return Ma.memory()}function oi(e){return Ma.profile(e)}function ui(e,t){return Ma.tidy(e,t)}function li(e){$a(e).forEach(e=>e.dispose())}function ci(e){return Ma.keep(e)}function hi(e){return Ma.time(e)}function di(e){return Ma.setBackend(e)}function pi(){return Ma.ready()}function fi(){return Ma.backendName}function mi(e){Ma.removeBackend(e)}function gi(e){return Ma.findBackend(e)}function yi(e){return Ma.findBackendFactory(e)}function bi(e,t,n=1){return Ma.registerBackend(e,t,n)}function xi(){return Ma.backend}function wi(e,t){Xe().setPlatform(e,t)}da=ri;const vi=4;async function ki(e,t){const n=[],r=[],s=Array.isArray(e)?e.map(e=>e.name):Object.keys(e);for(let a=0;a<s.length;++a){const i=s[a],o=Array.isArray(e)?e[a].tensor:e[i];if("float32"!==o.dtype&&"int32"!==o.dtype&&"bool"!==o.dtype&&"string"!==o.dtype&&"complex64"!==o.dtype)throw new Error(`Unsupported dtype in weight '${i}': ${o.dtype}`);const u={name:i,shape:o.shape,dtype:o.dtype};if("string"===o.dtype){const e=new Promise(async e=>{const t=await o.bytes(),n=t.reduce((e,t)=>e+t.length,0)+vi*t.length,r=new Uint8Array(n);let s=0;for(let e=0;e<t.length;e++){const n=t[e],a=new Uint8Array(new Uint32Array([n.length]).buffer);r.set(a,s),s+=vi,r.set(n,s),s+=n.length}e(r)});r.push(e)}else r.push(o.data());null!=t&&(u.group=t),n.push(u)}return{data:$i(await Promise.all(r)),specs:n}}function Ni(e,t){const n=new Ja(e),r={};let s=0;for(const e of t){const t=Ii(e,(e,t)=>n.slice(s+e,s+t));r[e.name]=Ti(e,n.slice(s,s+t)),s+=t}return r}function Ii(e,t){const n=le(e.shape);let r;if("quantization"in e){const t=e.quantization;r=Qa[t.dtype]}else{if("string"===e.dtype){let e=0;for(let r=0;r<n;r++)e+=vi+new Uint32Array(t(e,e+vi))[0];return e}r=Qa[e.dtype]}return n*r}async function Si(e,t){const n=le(e.shape);let r;if("quantization"in e){const t=e.quantization;r=Qa[t.dtype]}else{if("string"===e.dtype){let e=0;for(let r=0;r<n;r++)e+=vi+new Uint32Array(await t(e,e+vi))[0];return e}r=Qa[e.dtype]}return n*r}function Ti(e,t){const n=e.name,r=e.dtype,s=e.shape,a=le(s);let i,o=0;if("quantization"in e){const s=e.quantization;if("uint8"===s.dtype||"uint16"===s.dtype){if(!("min"in s)||!("scale"in s))throw new Error(`Weight ${e.name} with quantization ${s.dtype} doesn't have corresponding metadata min and scale.`)}else{if("float16"!==s.dtype)throw new Error(`Weight ${e.name} has unknown quantization dtype ${s.dtype}. Supported quantization dtypes are: 'uint8', 'uint16', and 'float16'.`);if("float32"!==r)throw new Error(`Weight ${e.name} is quantized with ${s.dtype} which only supports weights of type float32 not ${r}.`)}const u=Qa[s.dtype],l="uint8"===s.dtype?new Uint8Array(t):new Uint16Array(t);if("float32"===r)if("uint8"===s.dtype||"uint16"===s.dtype){i=new Float32Array(l.length);for(let e=0;e<l.length;e++){const t=l[e];i[e]=t*s.scale+s.min}}else{if("float16"!==s.dtype)throw new Error(`Unsupported quantization type ${s.dtype} for weight type float32.`);{const e=function(){const e=function(){const e=e=>{let t=e<<13,n=0;for(;!(8388608&t);)n-=8388608,t<<=1;return t&=-8388609,n+=947912704,t|n},t=new Uint32Array(2048);t[0]=0;for(let n=1;n<1024;n++)t[n]=e(n);for(let e=1024;e<2048;e++)t[e]=939524096+(e-1024<<13);return t}(),t=function(){const e=new Uint32Array(64);e[0]=0,e[31]=1199570944,e[32]=2147483648,e[63]=3347054592;for(let t=1;t<31;t++)e[t]=t<<23;for(let t=33;t<63;t++)e[t]=2147483648+(t-32<<23);return e}(),n=function(){const e=new Uint32Array(64);for(let t=0;t<64;t++)e[t]=1024;return e[0]=e[32]=0,e}();return r=>{const s=new ArrayBuffer(4*r.length),a=new Uint32Array(s);for(let s=0;s<r.length;s++){const i=r[s],o=e[n[i>>10]+(1023&i)]+t[i>>10];a[s]=o}return new Float32Array(s)}}();i=e(l)}}else{if("int32"!==r)throw new Error(`Unsupported dtype in weight '${n}': ${r}`);if("uint8"!==s.dtype&&"uint16"!==s.dtype)throw new Error(`Unsupported quantization type ${s.dtype} for weight type int32.`);i=new Int32Array(l.length);for(let e=0;e<l.length;e++){const t=l[e];i[e]=Math.round(t*s.scale+s.min)}}o+=a*u}else if("string"===r){const n=le(e.shape);i=[];for(let e=0;e<n;e++){const e=new Uint32Array(t.slice(o,o+vi))[0];o+=vi;const n=new Uint8Array(t.slice(o,o+e));i.push(n),o+=e}}else{const e=Qa[r];if("float32"===r)i=new Float32Array(t);else if("int32"===r)i=new Int32Array(t);else{if("bool"!==r){if("complex64"===r){i=new Float32Array(t);const e=new Float32Array(i.length/2),n=new Float32Array(i.length/2);for(let t=0;t<e.length;t++)e[t]=i[2*t],n[t]=i[2*t+1];const r=Za(e,s,"float32"),a=Za(n,s,"float32"),o=Xa(r,a);return r.dispose(),a.dispose(),o}throw new Error(`Unsupported dtype in weight '${n}': ${r}`)}i=new Uint8Array(t)}o+=a*e}return Za(i,s,r)}async function Ei(e,t,n){let r=new Uint8Array(t);for(;r.byteLength<n;){const{done:t,value:s}=await e.read();if(t&&null==s){const e=n-r.byteLength;throw new Error(`Reader is done but ${e} bytes are still expected`)}const a=new Uint8Array(r.length+s.byteLength);a.set(r,0),a.set(new Uint8Array(s),r.length),r=a}return r.buffer}async function Ci(e,t){const n={},r=e.getReader();let s=new ArrayBuffer(0);for(const e of t){const t=await Si(e,async(e,t)=>(s=await Ei(r,s,t),s.slice(e,t)));s=await Ei(r,s,t);const a=s.slice(0,t);s=s.slice(t);const i=Ti(e,a);if(n[e.name]=i,"webgpu"===fi()){const e=xi();"uploadToGPU"in e&&le(i.shape)>=Xe().get("WEBGPU_CPU_HANDOFF_SIZE_THRESHOLD")&&e.uploadToGPU(i.dataId)}}return n}function $i(e){if(null===e)throw new Error(`Invalid input value: ${JSON.stringify(e)}`);let t=0;const n=[];e.forEach(e=>{if(t+=e.byteLength,n.push(e.byteLength===e.buffer.byteLength?e:new e.constructor(e)),!(e instanceof Float32Array||e instanceof Int32Array||e instanceof Uint8Array))throw new Error(`Unsupported TypedArray subtype: ${e.constructor.name}`)});const r=new Uint8Array(t);let s=0;return n.forEach(e=>{r.set(new Uint8Array(e.buffer),s),s+=e.byteLength}),r.buffer}const Ai="undefined"!=typeof Buffer&&("undefined"==typeof Blob||"undefined"==typeof atob||"undefined"==typeof btoa);function Ri(e){return Ai?Buffer.byteLength(e,"utf8"):new Blob([e]).size}function _i(e){return Ja.join(e)}function Di(e){for(e=e.trim();e.endsWith("/");)e=e.slice(0,e.length-1);const t=e.split("/");return t[t.length-1]}function Fi(e,t){const n={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,weightsManifest:t};return null!=e.signature&&(n.signature=e.signature),null!=e.userDefinedMetadata&&(n.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(n.modelInitializer=e.modelInitializer),null!=e.initializerSignature&&(n.initializerSignature=e.initializerSignature),null!=e.trainingConfig&&(n.trainingConfig=e.trainingConfig),n}function Mi(e,t,n){const r={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy};if(null!=e.trainingConfig&&(r.trainingConfig=e.trainingConfig),null!=e.weightsManifest){if(!t)throw new Error("modelJSON has weightsManifest but weightSpecs is null");if(!n)throw new Error("modelJSON has weightsManifest but weightData is null");r.weightSpecs=t,r.weightData=n}return null!=e.signature&&(r.signature=e.signature),null!=e.userDefinedMetadata&&(r.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(r.modelInitializer=e.modelInitializer),null!=e.initializerSignature&&(r.initializerSignature=e.initializerSignature),r}async function Oi(e,t){let n,r;return null!=e.weightsManifest&&([n,r]=await t(e.weightsManifest)),Mi(e,n,r)}function Li(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("Expected JSON model topology, received ArrayBuffer.");return{dateSaved:new Date,modelTopologyType:"JSON",modelTopologyBytes:null==e.modelTopology?0:Ri(JSON.stringify(e.modelTopology)),weightSpecsBytes:null==e.weightSpecs?0:Ri(JSON.stringify(e.weightSpecs)),weightDataBytes:null==e.weightData?0:new Ja(e.weightData).byteLength}}function zi(e){const t=[];for(const n of e)t.push(...n.weights);return t}class Pi{constructor(){this.saveRouters=[],this.loadRouters=[]}static getInstance(){return null==Pi.instance&&(Pi.instance=new Pi),Pi.instance}static registerSaveRouter(e){Pi.getInstance().saveRouters.push(e)}static registerLoadRouter(e){Pi.getInstance().loadRouters.push(e)}static getSaveHandlers(e){return Pi.getHandlers(e,"save")}static getLoadHandlers(e,t){return Pi.getHandlers(e,"load",t)}static getHandlers(e,t,n){const r=[];return("load"===t?Pi.getInstance().loadRouters:Pi.getInstance().saveRouters).forEach(t=>{const s=t(e,n);null!==s&&r.push(s)}),r}}const Bi=e=>Pi.registerSaveRouter(e),Vi=e=>Pi.registerLoadRouter(e),Ui=e=>Pi.getSaveHandlers(e),Wi=(e,t)=>Pi.getLoadHandlers(e,t),Gi="tensorflowjs",Hi="models_store",ji="model_info_store";function Ki(){if(!Xe().getBool("IS_BROWSER"))throw new Error("Failed to obtain IndexedDB factory because the current environmentis not a web browser.");const e="undefined"==typeof window?self:window,t=e.indexedDB||e.mozIndexedDB||e.webkitIndexedDB||e.msIndexedDB||e.shimIndexedDB;if(null==t)throw new Error("The current browser does not appear to support IndexedDB.");return t}function qi(e){const t=e.result;t.createObjectStore(Hi,{keyPath:"modelPath"}),t.createObjectStore(ji,{keyPath:"modelPath"})}class Xi{constructor(e){if(this.indexedDB=Ki(),null==e||!e)throw new Error("For IndexedDB, modelPath must not be null, undefined or empty.");this.modelPath=e}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");return this.databaseAction(this.modelPath,e)}async load(){return this.databaseAction(this.modelPath)}databaseAction(e,t){return new Promise((e,n)=>{const r=this.indexedDB.open(Gi,1);r.onupgradeneeded=()=>qi(r),r.onsuccess=()=>{const s=r.result;if(null==t){const t=s.transaction(Hi,"readonly"),r=t.objectStore(Hi).get(this.modelPath);r.onsuccess=()=>{if(null==r.result)return s.close(),n(new Error(`Cannot find model with path '${this.modelPath}' in IndexedDB.`));e(r.result.modelArtifacts)},r.onerror=e=>(s.close(),n(r.error)),t.oncomplete=()=>s.close()}else{t.weightData=Ja.join(t.weightData);const r=Li(t),a=s.transaction(ji,"readwrite");let i,o,u=a.objectStore(ji);try{i=u.put({modelPath:this.modelPath,modelArtifactsInfo:r})}catch(e){return n(e)}i.onsuccess=()=>{o=s.transaction(Hi,"readwrite");const i=o.objectStore(Hi);let l;try{l=i.put({modelPath:this.modelPath,modelArtifacts:t,modelArtifactsInfo:r})}catch(e){return n(e)}l.onsuccess=()=>e({modelArtifactsInfo:r}),l.onerror=e=>{u=a.objectStore(ji);const t=u.delete(this.modelPath);t.onsuccess=()=>(s.close(),n(l.error)),t.onerror=e=>(s.close(),n(l.error))}},i.onerror=e=>(s.close(),n(i.error)),a.oncomplete=()=>{null==o?s.close():o.oncomplete=()=>s.close()}}},r.onerror=e=>n(r.error)})}}Xi.URL_SCHEME="indexeddb://";const Yi=e=>{return Xe().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(Xi.URL_SCHEME)?(t=e.slice(Xi.URL_SCHEME.length),new Xi(t)):null;var t};Pi.registerSaveRouter(Yi),Pi.registerLoadRouter(Yi);class Zi{constructor(){this.indexedDB=Ki()}async listModels(){return new Promise((e,t)=>{const n=this.indexedDB.open(Gi,1);n.onupgradeneeded=()=>qi(n),n.onsuccess=()=>{const r=n.result,s=r.transaction(ji,"readonly"),a=s.objectStore(ji).getAll();a.onsuccess=()=>{const t={};for(const e of a.result)t[e.modelPath]=e.modelArtifactsInfo;e(t)},a.onerror=e=>(r.close(),t(a.error)),s.oncomplete=()=>r.close()},n.onerror=e=>t(n.error)})}async removeModel(e){var t;return e=(t=e).startsWith(Xi.URL_SCHEME)?t.slice(Xi.URL_SCHEME.length):t,new Promise((t,n)=>{const r=this.indexedDB.open(Gi,1);r.onupgradeneeded=()=>qi(r),r.onsuccess=()=>{const s=r.result,a=s.transaction(ji,"readwrite"),i=a.objectStore(ji),o=i.get(e);let u;o.onsuccess=()=>{if(null==o.result)return s.close(),n(new Error(`Cannot find model with path '${e}' in IndexedDB.`));{const r=i.delete(e),a=()=>{u=s.transaction(Hi,"readwrite");const r=u.objectStore(Hi).delete(e);r.onsuccess=()=>t(o.result.modelArtifactsInfo),r.onerror=e=>n(o.error)};r.onsuccess=a,r.onerror=e=>(a(),s.close(),n(o.error))}},o.onerror=e=>(s.close(),n(o.error)),a.oncomplete=()=>{null==u?s.close():u.oncomplete=()=>s.close()}},r.onerror=e=>n(r.error)})}}const Qi="/",Ji="tensorflowjs_models",eo="info",to="model_topology",no="weight_specs",ro="weight_data",so="model_metadata";function ao(e){return{info:[Ji,e,eo].join(Qi),topology:[Ji,e,to].join(Qi),weightSpecs:[Ji,e,no].join(Qi),weightData:[Ji,e,ro].join(Qi),modelMetadata:[Ji,e,so].join(Qi)}}function io(e){for(const t of Object.values(e))window.localStorage.removeItem(t)}function oo(e){const t=e.split(Qi);if(t.length<3)throw new Error(`Invalid key format: ${e}`);return t.slice(1,t.length-1).join(Qi)}class uo{constructor(e){if(!Xe().getBool("IS_BROWSER")||"undefined"==typeof window||void 0===window.localStorage)throw new Error("The current environment does not support local storage.");if(this.LS=window.localStorage,null==e||!e)throw new Error("For local storage, modelPath must not be null, undefined or empty.");this.modelPath=e,this.keys=ao(this.modelPath)}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");{const t=JSON.stringify(e.modelTopology),n=JSON.stringify(e.weightSpecs),r=Li(e),s=Ja.join(e.weightData);try{this.LS.setItem(this.keys.info,JSON.stringify(r)),this.LS.setItem(this.keys.topology,t),this.LS.setItem(this.keys.weightSpecs,n),this.LS.setItem(this.keys.weightData,function(e){if(Ai)return Buffer.from(e).toString("base64");const t=new Uint8Array(e);let n="";for(let e=0,r=t.length;e<r;e++)n+=String.fromCharCode(t[e]);return btoa(n)}(s));const a={format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,signature:null!=e.signature?e.signature:void 0,userDefinedMetadata:null!=e.userDefinedMetadata?e.userDefinedMetadata:void 0,modelInitializer:null!=e.modelInitializer?e.modelInitializer:void 0,initializerSignature:null!=e.initializerSignature?e.initializerSignature:void 0,trainingConfig:null!=e.trainingConfig?e.trainingConfig:void 0};return this.LS.setItem(this.keys.modelMetadata,JSON.stringify(a)),{modelArtifactsInfo:r}}catch(e){throw io(this.keys),new Error(`Failed to save model '${this.modelPath}' to local storage: size quota being exceeded is a possible cause of this failure: modelTopologyBytes=${r.modelTopologyBytes}, weightSpecsBytes=${r.weightSpecsBytes}, weightDataBytes=${r.weightDataBytes}.`)}}}async load(){const e=JSON.parse(this.LS.getItem(this.keys.info));if(null==e)throw new Error(`In local storage, there is no model with name '${this.modelPath}'`);if("JSON"!==e.modelTopologyType)throw new Error("BrowserLocalStorage does not support loading non-JSON model topology yet.");const t={},n=JSON.parse(this.LS.getItem(this.keys.topology));if(null==n)throw new Error(`In local storage, the topology of model '${this.modelPath}' is missing.`);t.modelTopology=n;const r=JSON.parse(this.LS.getItem(this.keys.weightSpecs));if(null==r)throw new Error(`In local storage, the weight specs of model '${this.modelPath}' are missing.`);t.weightSpecs=r;const s=this.LS.getItem(this.keys.modelMetadata);if(null!=s){const e=JSON.parse(s);t.format=e.format,t.generatedBy=e.generatedBy,t.convertedBy=e.convertedBy,null!=e.signature&&(t.signature=e.signature),null!=e.userDefinedMetadata&&(t.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(t.modelInitializer=e.modelInitializer),null!=e.initializerSignature&&(t.initializerSignature=e.initializerSignature),null!=e.trainingConfig&&(t.trainingConfig=e.trainingConfig)}const a=this.LS.getItem(this.keys.weightData);if(null==a)throw new Error(`In local storage, the binary weight values of model '${this.modelPath}' are missing.`);return t.weightData=function(e){if(Ai){const t=Buffer.from(e,"base64");return t.buffer.slice(t.byteOffset,t.byteOffset+t.byteLength)}const t=atob(e),n=new Uint8Array(t.length);for(let e=0;e<t.length;++e)n.set([t.charCodeAt(e)],e);return n.buffer}(a),t}}uo.URL_SCHEME="localstorage://";const lo=e=>{return Xe().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(uo.URL_SCHEME)?(t=e.slice(uo.URL_SCHEME.length),new uo(t)):null;var t};Pi.registerSaveRouter(lo),Pi.registerLoadRouter(lo);class co{constructor(){ie(Xe().getBool("IS_BROWSER"),()=>"Current environment is not a web browser"),ie("undefined"==typeof window||void 0!==window.localStorage,()=>"Current browser does not appear to support localStorage"),this.LS=window.localStorage}async listModels(){const e={},t=Ji+Qi,n=Qi+eo;for(let r=0;r<this.LS.length;++r){const s=this.LS.key(r);s.startsWith(t)&&s.endsWith(n)&&(e[oo(s)]=JSON.parse(this.LS.getItem(s)))}return e}async removeModel(e){var t;const n=ao(e=(t=e).startsWith(uo.URL_SCHEME)?t.slice(uo.URL_SCHEME.length):t);if(null==this.LS.getItem(n.info))throw new Error(`Cannot find model at path '${e}'`);const r=JSON.parse(this.LS.getItem(n.info));return io(n),r}}const ho="://";class po{constructor(){this.managers={}}static getInstance(){return null==po.instance&&(po.instance=new po),po.instance}static registerManager(e,t){ie(null!=e,()=>"scheme must not be undefined or null."),e.endsWith(ho)&&(e=e.slice(0,e.indexOf(ho))),ie(e.length>0,()=>"scheme must not be an empty string.");const n=po.getInstance();ie(null==n.managers[e],()=>`A model store manager is already registered for scheme '${e}'.`),n.managers[e]=t}static getManager(e){const t=po.getInstance().managers[e];if(null==t)throw new Error(`Cannot find model manager for scheme '${e}'`);return t}static getSchemes(){return Object.keys(po.getInstance().managers)}}function fo(e){if(-1===e.indexOf(ho))throw new Error(`The url string provided does not contain a scheme. Supported schemes are: ${po.getSchemes().join(",")}`);return{scheme:e.split(ho)[0],path:e.split(ho)[1]}}async function mo(e,t,n=!1){ie(e!==t,()=>`Old path and new path are the same: '${e}'`);const r=Pi.getLoadHandlers(e);ie(r.length>0,()=>`Copying failed because no load handler is found for source URL ${e}.`),ie(r.length<2,()=>`Copying failed because more than one (${r.length}) load handlers for source URL ${e}.`);const s=r[0],a=Pi.getSaveHandlers(t);ie(a.length>0,()=>`Copying failed because no save handler is found for destination URL ${t}.`),ie(a.length<2,()=>`Copying failed because more than one (${r.length}) save handlers for destination URL ${t}.`);const i=a[0],o=fo(e).scheme,u=fo(e).path,l=o===fo(e).scheme,c=await s.load();n&&l&&await po.getManager(o).removeModel(u);const h=await i.save(c);return n&&!l&&await po.getManager(o).removeModel(u),h.modelArtifactsInfo}async function go(){const e=po.getSchemes(),t={};for(const n of e){const e=await po.getManager(n).listModels();for(const r in e)t[n+ho+r]=e[r]}return t}async function yo(e){const t=fo(e);return po.getManager(t.scheme).removeModel(t.path)}async function bo(e,t){return mo(e,t,!1)}async function xo(e,t){return mo(e,t,!0)}class wo{constructor(){this.messageName="setTimeoutCustom",this.functionRefs=[],this.handledMessageCount=0,this.hasEventListener=!1}fetch(e,t){return fetch(e,t)}now(){return performance.now()}encode(e,t){if("utf-8"!==t&&"utf8"!==t)throw new Error(`Browser's encoder only supports utf-8, but got ${t}`);return null==this.textEncoder&&(this.textEncoder=new TextEncoder),this.textEncoder.encode(e)}decode(e,t){return new TextDecoder(t).decode(e)}setTimeoutCustom(e,t){"undefined"!=typeof window&&Xe().getBool("USE_SETTIMEOUTCUSTOM")?(this.functionRefs.push(e),setTimeout(()=>{window.postMessage({name:this.messageName,index:this.functionRefs.length-1},"*")},t),this.hasEventListener||(this.hasEventListener=!0,window.addEventListener("message",e=>{e.source===window&&e.data.name===this.messageName&&(e.stopPropagation(),(0,this.functionRefs[e.data.index])(),this.handledMessageCount++,this.handledMessageCount===this.functionRefs.length&&(this.functionRefs=[],this.handledMessageCount=0))},!0))):setTimeout(e,t)}isTypedArray(e){return _s(e)}}if(Xe().get("IS_BROWSER")){Xe().setPlatform("browser",new wo);try{po.registerManager(uo.URL_SCHEME,new co)}catch(e){}try{po.registerManager(Xi.URL_SCHEME,new Zi)}catch(e){}}let vo;function ko(e,t="float32",n){return t=t||"float32",Ue(e),new la(e,t,n)}Xe().get("IS_NODE")&&!Xe().get("IS_BROWSER")&&Xe().setPlatform("node",new class{constructor(){this.util=n(590),this.textEncoder=new this.util.TextEncoder}fetch(e,t){return null!=Xe().global.fetch?Xe().global.fetch(e,t):(null==vo&&(vo=n(817)),vo(e,t))}now(){const e=process.hrtime();return 1e3*e[0]+e[1]/1e6}encode(e,t){if("utf-8"!==t&&"utf8"!==t)throw new Error(`Node built-in encoder only supports utf-8, but got ${t}`);return this.textEncoder.encode(e)}decode(e,t){return 0===e.length?"":new this.util.TextDecoder(t).decode(e)}isTypedArray(e){return this.util.types.isFloat32Array(e)||this.util.types.isInt32Array(e)||this.util.types.isUint8Array(e)||this.util.types.isUint8ClampedArray(e)}});const No=qa({cast_:function(e,t){const n=Ha(e,"x","cast");if(!Se(t))throw new Error(`Failed to cast to unknown dtype ${t}`);if("string"===t&&"string"!==n.dtype||"string"!==t&&"string"===n.dtype)throw new Error("Only strings can be casted to strings");const r={x:n},s={dtype:t};return Ma.runKernel(It,r,s)}}),Io=qa({clone_:function(e){const t={x:Ha(e,"x","clone","string_or_numeric")};return Ma.runKernel(yn,t)}});function So(e,t=!1){console.log(e.toString(t))}Fa(),ha={buffer:ko,cast:No,clone:Io,print:So};const To=qa({add_:function(e,t){let n=Ha(e,"a","add"),r=Ha(t,"b","add");[n,r]=Ta(n,r);const s={a:n,b:r};return Ma.runKernel(rt,s)}}),Eo=qa({floorDiv_:function(e,t){let n=Ha(e,"a","floorDiv"),r=Ha(t,"b","floorDiv");[n,r]=Ta(n,r);const s={a:n,b:r};return Ma.runKernel(hn,s)}}),Co=qa({div_:function(e,t){let n=Ha(e,"a","div"),r=Ha(t,"b","div");if([n,r]=Ta(n,r),"int32"===n.dtype&&"int32"===r.dtype)return Eo(n,r);const s={a:n,b:r};return Ma.runKernel(Zt,s,{})}}),$o=qa({mul_:function(e,t){let n=Ha(e,"a","mul"),r=Ha(t,"b","mul");[n,r]=Ta(n,r);const s={a:n,b:r};return Ma.runKernel(Zn,s)}}),Ao=qa({sqrt_:function(e){const t={x:Ha(e,"x","sqrt","float32")};return Ma.runKernel(zr,t)}}),Ro=qa({square_:function(e){const t=Ha(e,"x","square");return Ma.runKernel("Square",{x:t},{})}}),_o=qa({zerosLike_:function(e){const t={x:Ha(e,"x","zerosLike")};return Ma.runKernel(ds,t)}});function Do(e){return ie(De(e),()=>"The f passed in grad(f) must be a function"),(t,n)=>{const r=Ha(t,"x","tf.grad","string_or_numeric"),s=null!=n?Ha(n,"dy","tf.grad"):null;return Ma.tidy(()=>{const{value:t,grads:n}=Ma.gradients(()=>e(r),[r],s);return null!=s&&oe(t.shape,s.shape,"The shape of dy passed in grad(f)(x, dy) must match the shape returned by f(x)"),Po(n),n[0]})}}function Fo(e){return ie(De(e),()=>"The f passed in grads(f) must be a function"),(t,n)=>{ie(Array.isArray(t),()=>"The args passed in grads(f)(args) must be an array of `Tensor`s or `TensorLike`s");const r=ja(t,"args","tf.grads","string_or_numeric"),s=null!=n?Ha(n,"dy","tf.grads"):null;return Ma.tidy(()=>{const{value:t,grads:n}=Ma.gradients(()=>e(...r),r,s);return null!=s&&oe(t.shape,s.shape,"The shape of dy passed in grads(f)([x1,...], dy) must match the shape returned by f([x1,...])"),Po(n),n})}}function Mo(e){return ie(De(e),()=>"The f passed in valueAndGrad(f) must be a function"),(t,n)=>{ie(t instanceof pa,()=>"The x passed in valueAndGrad(f)(x) must be a tensor"),ie(null==n||n instanceof pa,()=>"The dy passed in valueAndGrad(f)(x, dy) must be a tensor");const{grads:r,value:s}=Ma.gradients(()=>e(t),[t],n);return Po(r),{grad:r[0],value:s}}}function Oo(e){return ie(De(e),()=>"The f passed in valueAndGrads(f) must be a function"),(t,n)=>{ie(Array.isArray(t)&&t.every(e=>e instanceof pa),()=>"The args passed in valueAndGrads(f)(args) must be array of tensors"),ie(null==n||n instanceof pa,()=>"The dy passed in valueAndGrads(f)(args, dy) must be a tensor");const r=Ma.gradients(()=>e(...t),t,n);return null!=n&&oe(r.value.shape,n.shape,"The shape of dy passed in valueAndGrads(f)([x1,...], dy) must match the shape returned by f([x1,...])"),Po(r.grads),r}}function Lo(e,t){ie(De(e),()=>"The f passed in variableGrads(f) must be a function"),ie(null==t||Array.isArray(t)&&t.every(e=>e instanceof ma),()=>"The varList passed in variableGrads(f, varList) must be an array of variables");const n=null!=t;if(!n){t=[];for(const e in Ma.registeredVariables)t.push(Ma.registeredVariables[e])}const r=n?t.filter(e=>!e.trainable):null,s=t.length;t=t.filter(e=>e.trainable),ie(t.length>0,()=>`variableGrads() expects at least one of the input variables to be trainable, but none of the ${s} variables is trainable.`);const{value:a,grads:i}=Ma.gradients(e,t,null,!0);ie(i.some(e=>null!=e),()=>"Cannot find a connection between any variable and the result of the loss function y=f(x). Please make sure the operations that use variables are inside the function f passed to minimize()."),ie(0===a.rank,()=>`The f passed in variableGrads(f) must return a scalar, but it returned a rank-${a.rank} tensor`);const o={};return t.forEach((e,t)=>{null!=i[t]&&(o[e.name]=i[t])}),null!=r&&r.forEach(e=>o[e.name]=null),{value:a,grads:o}}function zo(e){return Ma.customGrad(e)}function Po(e){if(e.filter(e=>null==e).length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that\n    the f you passed encloses all operations that lead from x to y.")}function Bo(e,t){if((Js(e)&&"string"!==t||Array.isArray(e))&&"complex64"!==t)throw new Error("Error creating a new Scalar: value must be a primitive (number|boolean|string)");if("string"===t&&Js(e)&&!(e instanceof Uint8Array))throw new Error("When making a scalar from encoded string, the value must be `Uint8Array`.");return Ya(e,[],[],t)}const Vo=new Map,Uo=new Map;class Wo{getClassName(){return this.constructor.className}static fromConfig(e,t){return new e(t)}}class Go{constructor(){this.classNameMap={}}static getMap(){return null==Go.instance&&(Go.instance=new Go),Go.instance}static register(e){Go.getMap().classNameMap[e.className]=[e,e.fromConfig]}}function Ho(e,t,n){ie(null!=e.className,()=>"Class being registered does not have the static className property defined."),ie("string"==typeof e.className,()=>"className is required to be a string, but got type "+typeof e.className),ie(e.className.length>0,()=>"Class being registered has an empty-string as its className, which is disallowed."),void 0===t&&(t="Custom"),void 0===n&&(n=e.className);const r=t+">"+n;return Go.register(e),Vo.set(r,e),Uo.set(e,r),e}function jo(e){return Uo.has(e)?Uo.get(e):e.className}class Ko extends Wo{minimize(e,t=!1,n){const{value:r,grads:s}=this.computeGradients(e,n);if(null!=n){const e=n.map(e=>({name:e.name,tensor:s[e.name]}));this.applyGradients(e)}else this.applyGradients(s);return li(s),t?r:(r.dispose(),null)}get iterations(){return null==this.iterations_&&(this.iterations_=0),this.iterations_}incrementIterations(){this.iterations_=this.iterations+1}computeGradients(e,t){return Lo(e,t)}dispose(){null!=this.iterations_&&li(this.iterations_)}async saveIterations(){return null==this.iterations_&&(this.iterations_=0),{name:"iter",tensor:Bo(this.iterations_,"int32")}}async getWeights(){throw new Error("getWeights() is not implemented for this optimizer yet.")}async setWeights(e){throw new Error(`setWeights() is not implemented for this optimizer class ${this.getClassName()}`)}async extractIterations(e){return this.iterations_=(await e[0].tensor.data())[0],e.slice(1)}}Object.defineProperty(Ko,Symbol.hasInstance,{value:e=>null!=e.minimize&&null!=e.computeGradients&&null!=e.applyGradients});class qo extends Ko{static get className(){return"Adadelta"}constructor(e,t,n=null){super(),this.learningRate=e,this.rho=t,this.epsilon=n,this.accumulatedGrads=[],this.accumulatedUpdates=[],null==n&&(this.epsilon=Ma.backend.epsilon())}applyGradients(e){(Array.isArray(e)?e.map(e=>e.name):Object.keys(e)).forEach((t,n)=>{const r=Ma.registeredVariables[t],s=!1;null==this.accumulatedGrads[n]&&(this.accumulatedGrads[n]={originalName:`${t}/accum_grad`,variable:ui(()=>_o(r).variable(s))}),null==this.accumulatedUpdates[n]&&(this.accumulatedUpdates[n]={originalName:`${t}/accum_var`,variable:ui(()=>_o(r).variable(s))});const a=Array.isArray(e)?e[n].tensor:e[t];if(null==a)return;const i=this.accumulatedGrads[n].variable,o=this.accumulatedUpdates[n].variable;ui(()=>{const e=To($o(i,this.rho),$o(Ro(a),1-this.rho)),t=$o(Co(Ao(To(o,this.epsilon)),Ao(To(i,this.epsilon))),a),n=To($o(o,this.rho),$o(Ro(t),1-this.rho));i.assign(e),o.assign(n);const s=To($o(t,-this.learningRate),r);r.assign(s)})}),this.incrementIterations()}dispose(){null!=this.accumulatedUpdates&&(li(this.accumulatedGrads.map(e=>e.variable)),li(this.accumulatedUpdates.map(e=>e.variable)))}async getWeights(){const e=[...this.accumulatedGrads,...this.accumulatedUpdates];return[await this.saveIterations()].concat(e.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(e){const t=(e=await this.extractIterations(e)).length/2,n=!1;this.accumulatedGrads=e.slice(0,t).map(e=>({originalName:e.name,variable:e.tensor.variable(n)})),this.accumulatedUpdates=e.slice(t,2*t).map(e=>({originalName:e.name,variable:e.tensor.variable(n)}))}getConfig(){return{learningRate:this.learningRate,rho:this.rho,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.rho,t.epsilon)}}function Xo(e,t,n){Ue(e);const r={shape:e,value:t,dtype:n=n||_e(t)};return Ma.runKernel(un,{},r)}class Yo extends Ko{static get className(){return"Adagrad"}constructor(e,t=.1){super(),this.learningRate=e,this.initialAccumulatorValue=t,this.accumulatedGrads=[]}applyGradients(e){(Array.isArray(e)?e.map(e=>e.name):Object.keys(e)).forEach((t,n)=>{const r=Ma.registeredVariables[t];if(null==this.accumulatedGrads[n]){const e=!1;this.accumulatedGrads[n]={originalName:`${t}/accumulator`,variable:ui(()=>Xo(r.shape,this.initialAccumulatorValue).variable(e))}}const s=Array.isArray(e)?e[n].tensor:e[t];if(null==s)return;const a=this.accumulatedGrads[n].variable;ui(()=>{const e=To(a,Ro(s));a.assign(e);const t=To($o(Co(s,Ao(To(e,Ma.backend.epsilon()))),-this.learningRate),r);r.assign(t)})}),this.incrementIterations()}dispose(){null!=this.accumulatedGrads&&li(this.accumulatedGrads.map(e=>e.variable))}async getWeights(){return[await this.saveIterations()].concat(this.accumulatedGrads.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(e){e=await this.extractIterations(e),this.accumulatedGrads=e.map(e=>({originalName:e.name,variable:e.tensor.variable(!1)}))}getConfig(){return{learningRate:this.learningRate,initialAccumulatorValue:this.initialAccumulatorValue}}static fromConfig(e,t){return new e(t.learningRate,t.initialAccumulatorValue)}}const Zo=qa({pow_:function(e,t){let n=Ha(e,"base","pow"),r=Ha(t,"exp","pow");[n,r]=Ta(n,r);const s={a:n,b:r};return Ma.runKernel(ur,s)}}),Qo=qa({sub_:function(e,t){let n=Ha(e,"a","sub"),r=Ha(t,"b","sub");[n,r]=Ta(n,r);const s={a:n,b:r};return Ma.runKernel(ts,s)}});class Jo extends Ko{static get className(){return"Adam"}constructor(e,t,n,r=null){super(),this.learningRate=e,this.beta1=t,this.beta2=n,this.epsilon=r,this.accumulatedFirstMoment=[],this.accumulatedSecondMoment=[],ui(()=>{this.accBeta1=Bo(t).variable(),this.accBeta2=Bo(n).variable()}),null==r&&(this.epsilon=Ma.backend.epsilon())}applyGradients(e){const t=Array.isArray(e)?e.map(e=>e.name):Object.keys(e);ui(()=>{const n=Qo(1,this.accBeta1),r=Qo(1,this.accBeta2);t.forEach((t,s)=>{const a=Ma.registeredVariables[t],i=!1;null==this.accumulatedFirstMoment[s]&&(this.accumulatedFirstMoment[s]={originalName:`${t}/m`,variable:ui(()=>_o(a).variable(i))}),null==this.accumulatedSecondMoment[s]&&(this.accumulatedSecondMoment[s]={originalName:`${t}/v`,variable:ui(()=>_o(a).variable(i))});const o=Array.isArray(e)?e[s].tensor:e[t];if(null==o)return;const u=this.accumulatedFirstMoment[s].variable,l=this.accumulatedSecondMoment[s].variable,c=To($o(u,this.beta1),$o(o,1-this.beta1)),h=To($o(l,this.beta2),$o(Ro(o),1-this.beta2)),d=Co(c,n),p=Co(h,r);u.assign(c),l.assign(h);const f=To($o(Co(d,To(Ao(p),this.epsilon)),-this.learningRate),a);a.assign(f)}),this.accBeta1.assign($o(this.accBeta1,this.beta1)),this.accBeta2.assign($o(this.accBeta2,this.beta2))}),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.accBeta2.dispose(),null!=this.accumulatedFirstMoment&&li(this.accumulatedFirstMoment.map(e=>e.variable)),null!=this.accumulatedSecondMoment&&li(this.accumulatedSecondMoment.map(e=>e.variable))}async getWeights(){const e=[...this.accumulatedFirstMoment,...this.accumulatedSecondMoment];return[await this.saveIterations()].concat(e.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(e){e=await this.extractIterations(e),ui(()=>{this.accBeta1.assign(Zo(this.beta1,this.iterations_+1)),this.accBeta2.assign(Zo(this.beta2,this.iterations_+1))});const t=e.length/2,n=!1;this.accumulatedFirstMoment=e.slice(0,t).map(e=>({originalName:e.name,variable:e.tensor.variable(n)})),this.accumulatedSecondMoment=e.slice(t,2*t).map(e=>({originalName:e.name,variable:e.tensor.variable(n)}))}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon)}}const eu=qa({abs_:function(e){const t=Ha(e,"x","abs");if("complex64"===t.dtype){const e={x:t};return Ma.runKernel(Ct,e)}{const e={x:t};return Ma.runKernel(et,e)}}});function tu(e,t){const n=e.length,r=[];for(let s=0;s<n;s++){const a=n-1-s,i=e[a]||1;(t[t.length-1-s]||1)>1&&1===i&&r.unshift(a)}return r}function nu(e,t){const n=[];for(let r=0;r<t.length;r++){const s=e[e.length-r-1],a=t.length-r-1,i=t[a];(null==s||1===s&&i>1)&&n.unshift(a)}return n}function ru(e,t){const n=Math.max(e.length,t.length),r=new Array(n);for(let s=0;s<n;s++){let a=e[e.length-s-1];null==a&&(a=1);let i=t[t.length-s-1];if(null==i&&(i=1),1===a)r[n-s-1]=i;else if(1===i)r[n-s-1]=a;else{if(a!==i)throw Error(`Operands could not be broadcast together with shapes ${e} and ${t}.`);r[n-s-1]=a}}return r}const su=qa({maximum_:function(e,t){let n=Ha(e,"a","maximum"),r=Ha(t,"b","maximum");[n,r]=Ta(n,r),"bool"===n.dtype&&(n=No(n,"int32"),r=No(r,"int32")),ru(n.shape,r.shape);const s={a:n,b:r};return Ma.runKernel(Pn,s)}});class au extends Ko{static get className(){return"Adamax"}constructor(e,t,n,r=null,s=0){super(),this.learningRate=e,this.beta1=t,this.beta2=n,this.epsilon=r,this.decay=s,this.accumulatedFirstMoment=[],this.accumulatedWeightedInfNorm=[],ui(()=>{this.iteration=Bo(0).variable(),this.accBeta1=Bo(t).variable()}),null==r&&(this.epsilon=Ma.backend.epsilon())}applyGradients(e){const t=Array.isArray(e)?e.map(e=>e.name):Object.keys(e);ui(()=>{const n=Qo(1,this.accBeta1),r=Co(-this.learningRate,To($o(this.iteration,this.decay),1));t.forEach((t,s)=>{const a=Ma.registeredVariables[t],i=!1;null==this.accumulatedFirstMoment[s]&&(this.accumulatedFirstMoment[s]={originalName:`${t}/m`,variable:_o(a).variable(i)}),null==this.accumulatedWeightedInfNorm[s]&&(this.accumulatedWeightedInfNorm[s]={originalName:`${t}/v`,variable:_o(a).variable(i)});const o=Array.isArray(e)?e[s].tensor:e[t];if(null==o)return;const u=this.accumulatedFirstMoment[s].variable,l=this.accumulatedWeightedInfNorm[s].variable,c=To($o(u,this.beta1),$o(o,1-this.beta1)),h=$o(l,this.beta2),d=eu(o),p=su(h,d);u.assign(c),l.assign(p);const f=To($o(Co(r,n),Co(c,To(p,this.epsilon))),a);a.assign(f)}),this.iteration.assign(To(this.iteration,1)),this.accBeta1.assign($o(this.accBeta1,this.beta1))}),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.iteration.dispose(),null!=this.accumulatedFirstMoment&&li(this.accumulatedFirstMoment.map(e=>e.variable)),null!=this.accumulatedWeightedInfNorm&&li(this.accumulatedWeightedInfNorm.map(e=>e.variable))}async getWeights(){throw new Error("getWeights() is not implemented for Adamax yet.")}async setWeights(e){throw new Error("setWeights() is not implemented for Adamax yet.")}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon,decay:this.decay}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon,t.decay)}}class iu extends Ko{static get className(){return"SGD"}constructor(e){super(),this.learningRate=e,this.setLearningRate(e)}applyGradients(e){(Array.isArray(e)?e.map(e=>e.name):Object.keys(e)).forEach((t,n)=>{const r=Array.isArray(e)?e[n].tensor:e[t];if(null==r)return;const s=Ma.registeredVariables[t];ui(()=>{const e=To($o(this.c,r),s);s.assign(e)})}),this.incrementIterations()}setLearningRate(e){this.learningRate=e,null!=this.c&&this.c.dispose(),this.c=ci(Bo(-e))}dispose(){this.c.dispose()}async getWeights(){return[await this.saveIterations()]}async setWeights(e){if(0!==(e=await this.extractIterations(e)).length)throw new Error("SGD optimizer does not have settable weights.")}getConfig(){return{learningRate:this.learningRate}}static fromConfig(e,t){return new e(t.learningRate)}}class ou extends iu{static get className(){return"Momentum"}constructor(e,t,n=!1){super(e),this.learningRate=e,this.momentum=t,this.useNesterov=n,this.accumulations=[],this.m=Bo(this.momentum)}applyGradients(e){(Array.isArray(e)?e.map(e=>e.name):Object.keys(e)).forEach((t,n)=>{const r=Ma.registeredVariables[t];if(null==this.accumulations[n]){const e=!1;this.accumulations[n]={originalName:`${t}/momentum`,variable:ui(()=>_o(r).variable(e))}}const s=this.accumulations[n].variable,a=Array.isArray(e)?e[n].tensor:e[t];null!=a&&ui(()=>{let e;const t=To($o(this.m,s),a);e=this.useNesterov?To($o(this.c,To(a,$o(t,this.m))),r):To($o(this.c,t),r),s.assign(t),r.assign(e)})}),this.incrementIterations()}dispose(){this.m.dispose(),null!=this.accumulations&&li(this.accumulations.map(e=>e.variable))}setMomentum(e){this.momentum=e}async getWeights(){return[await this.saveIterations()].concat(this.accumulations.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(e){e=await this.extractIterations(e),this.accumulations=e.map(e=>({originalName:e.name,variable:e.tensor.variable(!1)}))}getConfig(){return{learningRate:this.learningRate,momentum:this.momentum,useNesterov:this.useNesterov}}static fromConfig(e,t){return new e(t.learningRate,t.momentum,t.useNesterov)}}class uu extends Ko{static get className(){return"RMSProp"}constructor(e,t=.9,n=0,r=null,s=!1){if(super(),this.learningRate=e,this.decay=t,this.momentum=n,this.epsilon=r,this.accumulatedMeanSquares=[],this.accumulatedMoments=[],this.accumulatedMeanGrads=[],this.centered=s,null==r&&(this.epsilon=Ma.backend.epsilon()),null==e)throw new Error("learningRate for RMSPropOptimizer must be defined.")}applyGradients(e){(Array.isArray(e)?e.map(e=>e.name):Object.keys(e)).forEach((t,n)=>{const r=Ma.registeredVariables[t],s=!1;null==this.accumulatedMeanSquares[n]&&(this.accumulatedMeanSquares[n]={originalName:`${t}/rms`,variable:ui(()=>_o(r).variable(s))}),null==this.accumulatedMoments[n]&&(this.accumulatedMoments[n]={originalName:`${t}/momentum`,variable:ui(()=>_o(r).variable(s))}),null==this.accumulatedMeanGrads[n]&&this.centered&&(this.accumulatedMeanGrads[n]={originalName:`${t}/mg`,variable:ui(()=>_o(r).variable(s))});const a=Array.isArray(e)?e[n].tensor:e[t];if(null==a)return;const i=this.accumulatedMeanSquares[n].variable,o=this.accumulatedMoments[n].variable;ui(()=>{const e=To($o(i,this.decay),$o(Ro(a),1-this.decay));if(this.centered){const t=this.accumulatedMeanGrads[n].variable,s=To($o(t,this.decay),$o(a,1-this.decay)),u=Co($o(a,this.learningRate),Ao(Qo(e,To(Ro(s),this.epsilon)))),l=To($o(o,this.momentum),u);i.assign(e),t.assign(s),o.assign(l);const c=Qo(r,l);r.assign(c)}else{const e=To($o(i,this.decay),$o(Ro(a),1-this.decay)),t=To($o(o,this.momentum),Co($o(a,this.learningRate),Ao(To(e,this.epsilon))));i.assign(e),o.assign(t);const n=Qo(r,t);r.assign(n)}})}),this.incrementIterations()}dispose(){null!=this.accumulatedMeanSquares&&li(this.accumulatedMeanSquares.map(e=>e.variable)),null!=this.accumulatedMeanGrads&&this.centered&&li(this.accumulatedMeanGrads.map(e=>e.variable)),null!=this.accumulatedMoments&&li(this.accumulatedMoments.map(e=>e.variable))}async getWeights(){const e=[...this.accumulatedMeanSquares,...this.accumulatedMoments];return this.centered&&e.push(...this.accumulatedMeanGrads),[await this.saveIterations()].concat(e.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(e){e=await this.extractIterations(e);const t=this.centered?e.length/3:e.length/2,n=!1;this.accumulatedMeanSquares=e.slice(0,t).map(e=>({originalName:e.name,variable:e.tensor.variable(n)})),this.accumulatedMoments=e.slice(t,2*t).map(e=>({originalName:e.name,variable:e.tensor.variable(n)})),this.centered&&(this.accumulatedMeanGrads=e.slice(2*t,3*t).map(e=>({originalName:e.name,variable:e.tensor.variable(n)})))}getConfig(){return{learningRate:this.learningRate,decay:this.decay,momentum:this.momentum,epsilon:this.epsilon,centered:this.centered}}static fromConfig(e,t){return new e(t.learningRate,t.decay,t.momentum,t.epsilon,t.centered)}}const lu=[qo,Yo,Jo,au,ou,uu,iu];function cu(e){return new Promise(e=>setTimeout(e)).then(e)}class hu{constructor(e){if(!Xe().getBool("IS_BROWSER"))throw new Error("browserDownloads() cannot proceed because the current environment is not a browser.");e.startsWith(hu.URL_SCHEME)&&(e=e.slice(hu.URL_SCHEME.length)),null!=e&&0!==e.length||(e="model"),this.modelJsonFileName=e+".json",this.weightDataFileName=e+".weights.bin"}async save(e){if("undefined"==typeof document)throw new Error("Browser downloads are not supported in this environment since `document` is not present");const t=Ja.join(e.weightData),n=window.URL.createObjectURL(new Blob([t],{type:"application/octet-stream"}));if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserDownloads.save() does not support saving model topology in binary formats yet.");{const t=Fi(e,[{paths:["./"+this.weightDataFileName],weights:e.weightSpecs}]),r=window.URL.createObjectURL(new Blob([JSON.stringify(t)],{type:"application/json"})),s=null==this.modelJsonAnchor?document.createElement("a"):this.modelJsonAnchor;if(s.download=this.modelJsonFileName,s.href=r,await cu(()=>s.dispatchEvent(new MouseEvent("click"))),null!=e.weightData){const e=null==this.weightDataAnchor?document.createElement("a"):this.weightDataAnchor;e.download=this.weightDataFileName,e.href=n,await cu(()=>e.dispatchEvent(new MouseEvent("click")))}return{modelArtifactsInfo:Li(e)}}}}hu.URL_SCHEME="downloads://";class du{constructor(e){if(null==e||e.length<1)throw new Error(`When calling browserFiles, at least 1 file is required, but received ${e}`);this.jsonFile=e[0],this.weightsFiles=e.slice(1)}async load(){return new Promise((e,t)=>{const n=new FileReader;n.onload=n=>{const r=JSON.parse(n.target.result),s=r.modelTopology;if(null==s)return void t(new Error(`modelTopology field is missing from file ${this.jsonFile.name}`));if(null==r.weightsManifest)return void t(new Error(`weightManifest field is missing from file ${this.jsonFile.name}`));if(0===this.weightsFiles.length)return void e({modelTopology:s});const a=Oi(r,e=>this.loadWeights(e));e(a)},n.onerror=e=>t(`Failed to read model topology and weights manifest JSON from file '${this.jsonFile.name}'. BrowserFiles supports loading Keras-style tf.Model artifacts only.`),n.readAsText(this.jsonFile)})}loadWeights(e){const t=[],n=[];for(const r of e)t.push(...r.weights),n.push(...r.paths);const r=this.checkManifestAndWeightFiles(e),s=n.map(e=>this.loadWeightsFile(e,r[e]));return Promise.all(s).then(e=>[t,e])}loadWeightsFile(e,t){return new Promise((n,r)=>{const s=new FileReader;s.onload=e=>{const t=e.target.result;n(t)},s.onerror=t=>r(`Failed to weights data from file of path '${e}'.`),s.readAsArrayBuffer(t)})}checkManifestAndWeightFiles(e){const t=[],n=this.weightsFiles.map(e=>Di(e.name)),r={};for(const s of e)s.paths.forEach(e=>{const s=Di(e);if(-1!==t.indexOf(s))throw new Error(`Duplicate file basename found in weights manifest: '${s}'`);if(t.push(s),-1===n.indexOf(s))throw new Error(`Weight file with basename '${s}' is not provided.`);r[e]=this.weightsFiles[n.indexOf(s)]});if(t.length!==this.weightsFiles.length)throw new Error(`Mismatch in the number of files in weights manifest (${t.length}) and the number of weight files provided (${this.weightsFiles.length}).`);return r}}function pu(e){return new du(e)}function fu(e,t,n,r){!function(e){ie(null!=e&&Array.isArray(e)&&e.length>0,()=>"promises must be a none empty array")}(e),function(e,t){ie(e>=0&&e<=1,()=>`Progress fraction must be in range [0, 1], but got startFraction ${e}`),ie(t>=0&&t<=1,()=>`Progress fraction must be in range [0, 1], but got endFraction ${t}`),ie(t>=e,()=>`startFraction must be no more than endFraction, but got startFraction ${e} and endFraction ${t}`)}(n=null==n?0:n,r=null==r?1:r);let s=0;return Promise.all(e.map(a=>(a.then(a=>{const i=n+ ++s/e.length*(r-n);return t(i),a}),a)))}async function mu(e,t){null==t&&(t={});const n=null==t.fetchFunc?Xe().platform.fetch:t.fetchFunc,r=e.map(e=>n(e,t.requestInit,{isBinary:!0})),s=(null==t.onProgress?await Promise.all(r):await fu(r,t.onProgress,0,.5)).map(e=>e.arrayBuffer());return null==t.onProgress?await Promise.all(s):await fu(s,t.onProgress,.5,1)}async function gu(e,t="",n,r){return yu(e=>mu(e,{requestInit:r}))(e,t,n)}function yu(e){return async(t,n="",r)=>{const s=t.map(()=>!1),a={},i=null!=r?r.map(()=>!1):[],o=[];if(t.forEach((e,t)=>{let n=0;e.weights.forEach(e=>{const u="quantization"in e?e.quantization.dtype:e.dtype,l=Qa[u]*le(e.shape),c=()=>{s[t]=!0,null==a[t]&&(a[t]=[]),a[t].push({manifestEntry:e,groupOffset:n,sizeBytes:l})};null!=r?r.forEach((t,n)=>{t===e.name&&(c(),i[n]=!0)}):c(),o.push(e.name),n+=l})}),!i.every(e=>e)){const e=r.filter((e,t)=>!i[t]);throw new Error(`Could not find weights in manifest with names: ${e.join(", ")}. \nManifest JSON has weights with names: ${o.join(", ")}.`)}const u=s.reduce((e,t,n)=>(t&&e.push(n),e),[]),l=[];u.forEach(e=>{t[e].paths.forEach(e=>{const t=n+(n.endsWith("/")?"":"/")+e;l.push(t)})});const c=await e(l),h={};let d=0;return u.forEach(e=>{const n=t[e].paths.length,r=new Ja(c.slice(d,d+n));a[e].forEach(e=>{const t=Ni(r.slice(e.groupOffset,e.groupOffset+e.sizeBytes),[e.manifestEntry]);for(const e in t)h[e]=t[e]}),d+=n}),h}}Pi.registerSaveRouter(e=>Xe().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(hu.URL_SCHEME)?function(e="model"){return new hu(e)}(e.slice(hu.URL_SCHEME.length)):null);class bu{constructor(e,t){if(this.DEFAULT_METHOD="POST",null==t&&(t={}),this.weightPathPrefix=t.weightPathPrefix,this.weightUrlConverter=t.weightUrlConverter,null!=t.fetchFunc?(ie("function"==typeof t.fetchFunc,()=>"Must pass a function that matches the signature of `fetch` (see https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API)"),this.fetch=t.fetchFunc):this.fetch=Xe().platform.fetch,ie(null!=e&&e.length>0,()=>"URL path for http must not be null, undefined or empty."),Array.isArray(e)&&ie(2===e.length,()=>`URL paths for http must have a length of 2, (actual length is ${e.length}).`),this.path=e,null!=t.requestInit&&null!=t.requestInit.body)throw new Error("requestInit is expected to have no pre-existing body, but has one.");this.requestInit=t.requestInit||{},this.loadOptions=t}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserHTTPRequest.save() does not support saving model topology in binary formats yet.");const t=Object.assign({method:this.DEFAULT_METHOD},this.requestInit);t.body=new FormData;const n=Fi(e,[{paths:["./model.weights.bin"],weights:e.weightSpecs}]);if(t.body.append("model.json",new Blob([JSON.stringify(n)],{type:"application/json"}),"model.json"),null!=e.weightData){const n=Ja.join(e.weightData);t.body.append("model.weights.bin",new Blob([n],{type:"application/octet-stream"}),"model.weights.bin")}const r=await this.fetch(this.path,t);if(r.ok)return{modelArtifactsInfo:Li(e),responses:[r]};throw new Error(`BrowserHTTPRequest.save() failed due to HTTP response status ${r.status}.`)}async loadModelJSON(){const e=await this.fetch(this.path,this.requestInit);if(!e.ok)throw new Error(`Request to ${this.path} failed with status code ${e.status}. Please verify this URL points to the model JSON of the model to load.`);let t;try{t=await e.json()}catch(e){let t=`Failed to parse model JSON of response from ${this.path}.`;throw this.path.endsWith(".pb")?t+=" Your path contains a .pb file extension. Support for .pb models have been removed in TensorFlow.js 1.0 in favor of .json models. You can re-convert your Python TensorFlow model using the TensorFlow.js 1.0 conversion scripts or you can convert your.pb models with the 'pb2json'NPM script in the tensorflow/tfjs-converter repository.":t+=" Please make sure the server is serving valid JSON for this request.",new Error(t)}const n=t.modelTopology,r=t.weightsManifest;if(null==n&&null==r)throw new Error(`The JSON from HTTP path ${this.path} contains neither model topology or manifest for weights.`);return t}async load(){return this.loadOptions.streamWeights?this.loadStream():Oi(await this.loadModelJSON(),e=>this.loadWeights(e))}async loadStream(){const e=await this.loadModelJSON(),t=await this.getWeightUrls(e.weightsManifest),n=zi(e.weightsManifest);return Object.assign(Object.assign({},e),{weightSpecs:n,getWeightStream:()=>function(e,t){var n;const r=null==t.fetchFunc?Xe().platform.fetch:t.fetchFunc;let s,a=0;return null===(n=t.onProgress)||void 0===n||n.call(t,0),new ReadableStream({pull:async n=>{for(var i;a<e.length;){if(!s){const n=(await r(e[a],t.requestInit,{isBinary:!0})).body;s=n.getReader()}const{done:o,value:u}=await s.read();if(!o)return void n.enqueue(u);a++,s=void 0,null===(i=t.onProgress)||void 0===i||i.call(t,a/e.length)}n.close()}})}(t,this.loadOptions)})}async getWeightUrls(e){const t=Array.isArray(this.path)?this.path[1]:this.path,[n,r]=function(e){const t=e.lastIndexOf("/"),n=e.lastIndexOf("?");return[e.substring(0,t)+"/",n>t?e.substring(n):""]}(t),s=this.weightPathPrefix||n,a=[],i=[];for(const t of e)for(const e of t.paths)null!=this.weightUrlConverter?i.push(this.weightUrlConverter(e)):a.push(s+e+r);return this.weightUrlConverter&&a.push(...await Promise.all(i)),a}async loadWeights(e){const t=await this.getWeightUrls(e);return[zi(e),await mu(t,this.loadOptions)]}}function xu(e){return null!=e.match(bu.URL_SCHEME_REGEX)}bu.URL_SCHEME_REGEX=/^https?:\/\//;const wu=(e,t)=>{if("undefined"==typeof fetch&&(null==t||null==t.fetchFunc))return null;{let n=!0;if(n=Array.isArray(e)?e.every(e=>xu(e)):xu(e),n)return vu(e,t)}return null};function vu(e,t){return new bu(e,t)}function ku(e,t){return vu(e,t)}Pi.registerSaveRouter(wu),Pi.registerLoadRouter(wu);class Nu{constructor(e){this.modelArtifacts=e}load(){return this.modelArtifacts}}class Iu{constructor(e){this.saveHandler=e}save(e){return this.saveHandler(e)}}class Su{constructor(e){e.load&&(this.load=()=>Promise.resolve(e.load())),e.save&&(this.save=t=>Promise.resolve(e.save(t)))}}function Tu(e,t,n,r){return new Su(Eu(...arguments))}function Eu(e,t,n,r){return 1===arguments.length?null!=e.modelTopology||null!=e.weightSpecs?new Nu(e):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new Nu({modelTopology:e})):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new Nu({modelTopology:e,weightSpecs:t,weightData:n,trainingConfig:r}))}function Cu(e){return new Iu(e)}function $u(e){return new Iu(e)}const Au=qa({matMul_:function(e,t,n=!1,r=!1){let s=Ha(e,"a","matMul"),a=Ha(t,"b","matMul");[s,a]=Ta(s,a);const i={a:s,b:a},o={transposeA:n,transposeB:r};return Ma.runKernel(bt,i,o)}}),Ru=qa({oneHot_:function(e,t,n=1,r=0,s="int32"){if(t<2)throw new Error(`Error in oneHot: depth must be >=2, but it is ${t}`);const a={indices:Ha(e,"indices","oneHot","int32")},i={dtype:s,depth:t,onValue:n,offValue:r};return Ma.runKernel(sr,a,i)}}),_u=qa({imag_:function(e){const t={input:Ha(e,"input","imag")};return Ma.runKernel(xn,t)}}),Du=qa({neg_:function(e){const t={x:Ha(e,"x","neg")};return Ma.runKernel(Qn,t)}}),Fu=qa({real_:function(e){const t={input:Ha(e,"input","real")};return Ma.runKernel(mr,t)}}),Mu=qa({transpose_:function(e,t,n){const r=Ha(e,"x","transpose");if(null==t&&(t=r.shape.map((e,t)=>t).reverse()),ie(r.rank===t.length,()=>`Error in transpose: rank of input ${r.rank} must match length of perm ${t}.`),t.forEach(e=>{ie(e>=0&&e<r.rank,()=>"All entries in 'perm' must be between 0 and "+(r.rank-1)+` but got ${t}`)}),r.rank<=1)return r.clone();const s={x:r},a={perm:t};return"complex64"===r.dtype?ui(()=>{let e=Fu(r),t=_u(r);return e=Ma.runKernel(os,{x:e},a),t=Ma.runKernel(os,{x:t},a),n&&(t=Du(t)),Xa(e,t)}):Ma.runKernel(os,s,a)}}),Ou=qa({confusionMatrix_:function(e,t,n){const r=Ha(e,"labels","confusionMatrix"),s=Ha(t,"predictions","confusionMatrix");ie(null==n||n>0&&Number.isInteger(n),()=>`If provided, numClasses must be a positive integer, but got ${n}`),ie(1===r.rank,()=>`Expected the rank of labels to be 1, but got ${r.rank}`),ie(1===s.rank,()=>`Expected the rank of predictions to be 1, but got ${s.rank}`),ie(r.shape[0]===s.shape[0],()=>`Mismatch in the number of examples: ${r.shape[0]} vs. ${s.shape[0]}. Labels and predictions should have the same number of elements.`),ie(n>0&&Number.isInteger(n),()=>`numClasses is required to be a positive integer, but got ${n}`);const a=Ru(No(r,"int32"),n),i=Ru(No(s,"int32"),n),o=Mu(a),u=Au(o,i);return No(u,"int32")}});function Lu(e,t,n){if(ue(e),null!=t&&3!==t.length)throw new Error("tensor3d() requires shape to have three numbers");const r=Ua(e,n);if(3!==r.length&&1!==r.length)throw new Error("tensor3d() requires values to be number[][][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor3d() requires shape to be provided when `values` are a flat array");return Ya(e,t,r,n)}let zu,Pu=!1;function Bu(e,t=3){if(t>4)throw new Error("Cannot construct Tensor with more than 4 channels from pixels.");if(null==e)throw new Error("pixels passed to tf.browser.fromPixels() can not be null");let n=!1,r=!1,s=!1,a=!1,i=!1,o=!1;if(e.data instanceof Uint8Array)n=!0;else if("undefined"!=typeof ImageData&&e instanceof ImageData)r=!0;else if("undefined"!=typeof HTMLVideoElement&&e instanceof HTMLVideoElement)s=!0;else if("undefined"!=typeof HTMLImageElement&&e instanceof HTMLImageElement)a=!0;else if(null!=e.getContext)i=!0;else{if(!("undefined"!=typeof ImageBitmap&&e instanceof ImageBitmap))throw new Error(`pixels passed to tf.browser.fromPixels() must be either an HTMLVideoElement, HTMLImageElement, HTMLCanvasElement, ImageData in browser, or OffscreenCanvas, ImageData in webworker or {data: Uint32Array, width: number, height: number}, but was ${e.constructor.name}`);o=!0}if(null!=Ns(fs,Ma.backendName)){const n={pixels:e},r={numChannels:t};return Ma.runKernel(fs,n,r)}const[u,l]=s?[e.videoWidth,e.videoHeight]:[e.width,e.height];let c,h;if(i)c=e.getContext("2d").getImageData(0,0,u,l).data;else if(r||n)c=e.data;else if(a||s||o){if(null==zu)if("undefined"==typeof document){if("undefined"==typeof OffscreenCanvas||"undefined"==typeof OffscreenCanvasRenderingContext2D)throw new Error("Cannot parse input in current context. Reason: OffscreenCanvas Context2D rendering is not supported.");zu=new OffscreenCanvas(1,1).getContext("2d")}else zu=document.createElement("canvas").getContext("2d",{willReadFrequently:!0});zu.canvas.width=u,zu.canvas.height=l,zu.drawImage(e,0,0,u,l),c=zu.getImageData(0,0,u,l).data}if(4===t)h=new Int32Array(c);else{const e=u*l;h=new Int32Array(e*t);for(let n=0;n<e;n++)for(let e=0;e<t;++e)h[n*t+e]=c[4*n+e]}return Lu(h,[l,u,t],"int32")}async function Vu(e,t=3){let n=null;if(Xe().getBool("WRAP_TO_IMAGEBITMAP")&&function(e){return"undefined"!=typeof window&&"undefined"!=typeof ImageBitmap&&window.hasOwnProperty("createImageBitmap")&&!(e instanceof ImageBitmap)&&function(e){return null!=e&&0!==e.width&&0!==e.height}(e)&&!function(e){return null!=e&&e.data instanceof Uint8Array}(e)}(e)){let t;try{t=await createImageBitmap(e,{premultiplyAlpha:"none"})}catch(e){t=null}n=null!=t&&t.width===e.width&&t.height===e.height?t:e}else n=e;return Bu(n,t)}function Uu(e){if(2!==e.rank&&3!==e.rank)throw new Error(`toPixels only supports rank 2 or 3 tensors, got rank ${e.rank}.`);const t=2===e.rank?1:e.shape[2];if(t>4||2===t)throw new Error(`toPixels only supports depth of size 1, 3 or 4 but got ${t}`);if("float32"!==e.dtype&&"int32"!==e.dtype)throw new Error(`Unsupported type for toPixels: ${e.dtype}. Please use float32 or int32 tensors.`)}async function Wu(e,t){let n=Ha(e,"img","toPixels");if(!(e instanceof pa)){const e=n;n=No(e,"int32"),e.dispose()}Uu(n);const[r,s]=n.shape.slice(0,2),a=2===n.rank?1:n.shape[2],i=await n.data(),o="float32"===n.dtype?255:1,u=new Uint8ClampedArray(s*r*4);for(let e=0;e<r*s;++e){const t=[0,0,0,255];for(let r=0;r<a;r++){const s=i[e*a+r];if("float32"===n.dtype){if(s<0||s>1)throw new Error(`Tensor values for a float32 Tensor must be in the range [0 - 1] but encountered ${s}.`)}else if("int32"===n.dtype&&(s<0||s>255))throw new Error(`Tensor values for a int32 Tensor must be in the range [0 - 255] but encountered ${s}.`);1===a?(t[0]=s*o,t[1]=s*o,t[2]=s*o):t[r]=s*o}const r=4*e;u[r+0]=Math.round(t[0]),u[r+1]=Math.round(t[1]),u[r+2]=Math.round(t[2]),u[r+3]=Math.round(t[3])}if(null!=t){Pu||null!=Ns(Yt,Ma.backendName)&&(console.warn("tf.browser.toPixels is not efficient to draw tensor on canvas. Please try tf.browser.draw instead."),Pu=!0),t.width=s,t.height=r;const e=t.getContext("2d"),n=new ImageData(u,s,r);e.putImageData(n,0,0)}return n!==e&&n.dispose(),u}function Gu(e,t,n){let r=Ha(e,"img","draw");if(!(e instanceof pa)){const e=r;r=No(e,"int32"),e.dispose()}Uu(r),function(e){const t=(null==e?void 0:e.alpha)||1;if(t>1||t<0)throw new Error(`Alpha value ${t} is suppoed to be in range [0 - 1].`)}(null==n?void 0:n.imageOptions);const s={image:r},a={canvas:t,options:n};Ma.runKernel(Yt,s,a)}const Hu=qa({fromPixels_:Bu});function ju(e,t){const n=e.shape.length,r=t.shape.length;if(n<1)throw new Error(`tf.gatherND() expects the input to be rank 1 or higher, but the rank was ${n}.`);if(r<1)throw new Error(`tf.gatherND() expects the indices to be rank 1 or higher, but the rank was ${r}.`);if("int32"!==t.dtype)throw new Error(`tf.gatherND() expects the indices to be int32 type, but the dtype was ${t.dtype}.`);if(t.shape[r-1]>n)throw new Error(`index innermost dimension length must be <= tensor rank; saw: ${t.shape[r-1]} vs. ${n}`);if(0===le(e.shape))throw new Error(`Requested more than 0 entries, but input is empty. Input shape: ${e.shape}.`);const s=t.shape,a=s[s.length-1];let i=1;for(let e=0;e<s.length-1;++e)i*=s[e];const o=e.shape,u=s.slice();u.pop();let l=1;for(let e=a;e<n;++e)l*=o[e],u.push(o[e]);const c=[...Me(e.shape).map(e=>e/l),1].slice(0,a);return[u,i,l,c]}function Ku(e,t,n){const r=t.rank>1?t.shape[t.rank-1]:1,s=t.rank>1?t.rank-1:1,a=`Must have updates.shape = indices.shape[:batchDim] + shape[sliceDim:], got updates.shape: ${n.shape}, indices.shape: ${t.shape}, shape: ${e}, sliceDim: ${r}, and batchDim: ${s}.`;if(n.rank<s)throw new Error(a+` update.rank < ${s}. `);if(e.length<r+(n.rank-s))throw new Error(a+` Output shape length < ${r+(n.rank-s)}`);if(n.rank!==s+e.length-r)throw new Error(a+" update.rank != "+(s+e.length-r));for(let e=0;e<s;++e)if(n.shape[e]!==t.shape[e])throw new Error(a+` updates.shape[${e}] (${n.shape[e]}) != indices.shape[${e}] (${t.shape[e]}).`);for(let t=0;t<n.rank-s;++t)if(n.shape[t+s]!==e[t+r])throw new Error(a+` updates.shape[${t+s}] (${n.shape[t+s]}) != shape[${t+s}] (${e[t+s]})`)}function qu(e,t,n){if(t.rank<1)throw new Error(`tf.scatterND() expects the indices to be rank 1 or higher, but the rank was ${t.rank}.`);if(e.rank<1)throw new Error(`tf.scatterND() expects the updates to be rank 1 or higher, but the rank was ${e.rank}.`);if("int32"!==t.dtype)throw new Error(`The dtype of 'indices' should be int32, but got dtype: ${t.dtype}`);if(n.length<1)throw new Error(`Output rank must be greater or equal to 1, but got shape: ${n}`);if(0===n.length){if(0===t.size)throw new Error(`Indices specified for empty output. indices shape: ${t.shape}`);if(0===e.size)throw new Error(`Updates specified for empty output. updates shape: ${e.shape}`)}Ku(n,t,e)}function Xu(e,t,n){const r=t.shape.length,s=r>1?t.shape[r-1]:1,a=n.length;let i=1;for(let e=s;e<a;++e)i*=n[e];const o=s<1?1:s;return{sliceRank:s,numUpdates:le(t.shape)/o,sliceSize:i,strides:[...Me(n.slice(0,s)),1],outputSize:le(n)}}const Yu=-2,Zu=-1;function Qu(e,t,n){const r=e.shape.length;ie(r===t.length,()=>`Error in slice${r}D: Length of begin ${t} must match the rank of the array (${r}).`),ie(r===n.length,()=>`Error in slice${r}D: Length of size ${n} must match the rank of the array (${r}).`);for(let s=0;s<r;++s)ie(t[s]+n[s]<=e.shape[s],()=>`Error in slice${r}D: begin[${s}] + size[${s}] (${t[s]+n[s]}) would overflow input.shape[${s}] (${e.shape[s]})`)}function Ju(e){const t=[];let n=0;for(;e>0;)1&e&&t.push(n),e/=2,n++;return t}function el(e,t,n){const r=[];for(let s=0;s<e.length;s++)r[s]=Math.ceil((t[s]-e[s])/n[s]);return r}function tl(e,t,n,r){const s=[...e];for(let e=s.length;e<r.length;e++)s.push(1);for(let e=0;e<n;e++)0===e?s[t]=1:(s.splice(t,0,1),s.pop());return s}function nl(e,t,n){return n<=e?n:n-(t-1)}function rl(e,t){const n=[];for(let r=0;r<e;r++)n.push(t+r);return n}function sl(e,t,n,r,s,a,i,o,u){const l=e.length;let c=new Array(l),h=new Array(l),d=new Array(l);if(t.length&&n>0){const u=t[0],l=n+1;c=al(i,u,l,r,e),h=il(o,u,l,s,e),d=tl(a,u,l,e)}else for(let t=0;t<l;t++)c[t]=ul(i,r,a,e,t,u),h[t]=ll(o,s,a,e,t,u),d[t]=ol(a,t,u);return{begin:c,end:h,strides:d}}function al(e,t,n,r,s){const a=[...s],i=rl(n,t);for(let s=0;s<a.length;s++)if(i.indexOf(s)>-1)a[s]=0;else{const i=nl(t,n,s);let o=r[i];e&1<<i&&(o=0),a[s]=o}return a}function il(e,t,n,r,s){const a=[...s],i=rl(n,t);for(let s=0;s<a.length;s++)if(i.indexOf(s)>-1)a[s]=Number.MAX_SAFE_INTEGER;else{const i=nl(t,n,s);let o=r[i];e&1<<i&&(o=Number.MAX_SAFE_INTEGER),a[s]=o}for(let e=0;e<a.length;e++){const t=s[e];a[e]<0&&(a[e]+=t),a[e]=ee(0,a[e],s[e])}return a}function ol(e,t,n){let r=e[t];return(n&1<<t||null==r)&&(r=1),r}function ul(e,t,n,r,s,a){let i=t[s];const o=n[s]||1;(e&1<<s||a&1<<s||null==i)&&(i=o>0?Number.MIN_SAFE_INTEGER:Number.MAX_SAFE_INTEGER);const u=r[s];return i<0&&(i+=u),i=ee(0,i,u-1),i}function ll(e,t,n,r,s,a){let i=t[s];const o=n[s]||1;(e&1<<s||a&1<<s||null==i)&&(i=o>0?Number.MAX_SAFE_INTEGER:Number.MIN_SAFE_INTEGER);const u=r[s];return i<0&&(i+=u),i=o>0?ee(0,i,u):ee(-1,i,u-1),i}function cl(e,t,n){let r=n.length;for(let e=0;e<n.length;e++)if(n[e]>1){r=e;break}for(let s=r+1;s<n.length;s++)if(t[s]>0||n[s]!==e[s])return!1;return!0}function hl(e,t){let n=e.length>0?e[e.length-1]:1;for(let r=0;r<e.length-1;r++)n+=e[r]*t[r];return n}function dl(e,t,n){let r;const s=e.shape.length;let a;return r="number"==typeof t?[t,...new Array(s-1).fill(0)]:t.length<s?t.concat(new Array(s-t.length).fill(0)):t.slice(),r.forEach(e=>{ie(-1!==e,()=>"slice() does not support negative begin indexing.")}),a=null==n?new Array(s).fill(-1):"number"==typeof n?[n,...new Array(s-1).fill(-1)]:n.length<s?n.concat(new Array(s-n.length).fill(-1)):n,a=a.map((t,n)=>t>=0?t:(ie(-1===t,()=>`Negative size values should be exactly -1 but got ${t} for the slice() size at index ${n}.`),e.shape[n]-r[n])),[r,a]}function pl(e,t,n,r,s,a,i,o,u){let l;if(null==r?(l=new Array(t.length),l.fill(1)):l=r,null!=i&&i&i-1)throw new Error("Multiple ellipses in slice is not allowed.");let c=!1;const h={dims:l.length,numAddAxisAfterEllipsis:0,begin:t.slice(),end:n.slice(),strides:l.slice(),beginMask:s,endMask:a,ellipsisMask:i,newAxisMask:o,shrinkAxisMask:u};for(let e=0;e<h.dims;e++)c&&1<<e&o&&h.numAddAxisAfterEllipsis++,1<<e&i&&(c=!0);c||(h.ellipsisMask|=1<<h.dims,h.dims++);const d={dims:e.length,beginMask:0,endMask:0,beginValid:!1,endValid:!1};!function(e,t){t.beginMask=0,t.endMask=0,t.shrinkAxisMask=0;let n=0;t.beginValid=null!=e.begin,t.endValid=null!=e.end,t.begin=new Array(t.dims),t.end=new Array(t.dims),t.strides=new Array(t.dims),t.finalShapeGatherIndices=[],t.finalShapeGatherIndicesSparse=[],t.inputShapeGatherIndicesSparse=new Array(t.dims);for(let r=0;r<e.dims;r++)if(1<<r&e.ellipsisMask){const s=Math.min(t.dims-(e.dims-r)+1+e.numAddAxisAfterEllipsis,t.dims);for(;n<s;n++)t.begin[n]=0,t.end[n]=0,t.strides[n]=1,t.beginMask|=1<<n,t.endMask|=1<<n,t.finalShapeGatherIndices.push(n),t.finalShapeGatherIndicesSparse.push(-1),t.inputShapeGatherIndicesSparse[n]=r}else if(1<<r&e.newAxisMask)t.finalShapeGatherIndices.push(Yu),t.finalShapeGatherIndicesSparse.push(-1);else{if(n===t.begin.length)throw Error(`Index out of range using input dim ${n}; input has only ${t.dims} dims, ${t.begin.length}.`);null!=e.begin&&(t.begin[n]=e.begin[r]),null!=e.end&&(t.end[n]=e.end[r]),t.strides[n]=e.strides[r],e.beginMask&1<<r&&(t.beginMask|=1<<n),e.endMask&1<<r&&(t.endMask|=1<<n),e.shrinkAxisMask&1<<r?(t.finalShapeGatherIndices.push(Zu),t.finalShapeGatherIndicesSparse.push(-1),t.shrinkAxisMask|=1<<n):(t.finalShapeGatherIndices.push(n),t.finalShapeGatherIndicesSparse.push(r)),t.inputShapeGatherIndicesSparse[n]=r,n++}}(h,d);let p=!0,f=!0,m=!0;const g=[],y=[];for(let t=0;t<e.length;++t){if(0===d.strides[t])throw Error(`strides[${t}] must be non-zero`);const n=!!(d.shrinkAxisMask&1<<t),r=e[t];if(-1===r){g.push(n?1:-1);continue}const s=[d.beginMask&1<<t,d.endMask&1<<t],a=[d.strides[t]>0?0:-1,d.strides[t]>0?r:r-1];if(n&&d.strides[t]<=0)throw Error("only stride 1 allowed on non-range indexing.");m=m&&1===d.strides[t];const i=!!(d.beginMask&1<<t&&d.endMask&1<<t);if(d.beginValid&&d.endValid){if(n){const e=d.begin[t]<0?r+d.begin[t]:d.begin[t];if(d.begin[t]=e,d.end[t]=d.begin[t]+1,e<0||e>=r)throw Error(`slice index ${d.begin[t]} of dimension ${t} out of bounds.`)}else d.begin[t]=fl(d.begin[t],0,d.strides[t],r,s,a),d.end[t]=fl(d.end[t],1,d.strides[t],r,s,a);const e=1===d.strides[t]&&0===d.begin[t]&&d.end[t]===r;p=p&&e,f=f&&(0===t&&1===d.strides[t]||e)}else p=p&&1===d.strides[t]&&i,f=f&&(0===t&&1===d.strides[t]||i);let o,u=!1;if(d.beginValid&&d.endValid?(o=d.end[t]-d.begin[t],u=!0):n?(o=1,u=!0):i&&r>=0&&(o=d.strides[t]<0?-r:r,u=!0),u){let e;e=0===o||o<0!=d.strides[t]<0?0:Math.trunc(o/d.strides[t])+(o%d.strides[t]!==0?1:0),g.push(e)}else g.push(-1)}for(let e=0;e<d.finalShapeGatherIndices.length;++e){const t=d.finalShapeGatherIndices[e];t>=0?y.push(g[t]):t===Yu&&y.push(1)}return{finalShapeSparse:y.filter((e,t)=>d.finalShapeGatherIndices[t]!==Yu),finalShape:y,isIdentity:p,sliceDim0:f,isSimpleSlice:m,begin:d.begin,end:d.end,strides:d.strides}}function fl(e,t,n,r,s,a){if(s[t])return n>0?a[t]:a[t+1&1];{const t=e<0?r+e:e;return t<a[0]?a[0]:t>a[1]?a[1]:t}}const ml=.001,gl=.1;function yl(e,t,n){return null==n&&(n=bl()),xl(e,t,(e,t)=>Nl(e,t,n))}function bl(){return 32===Ma.backend.floatPrecision()?ml:gl}function xl(e,t,n){let r=!0;if((Js(e)||Js(t))&&(r=!1),Js(e)&&Js(t)&&(r=!0),r){const n=e.constructor.name,r=t.constructor.name;if(n!==r)throw new Error(`Arrays are of different type. Actual: ${n}. Expected: ${r}`)}if(Array.isArray(e)&&Array.isArray(t)){const n=Ua(e),r=Ua(t);if(!de(n,r))throw new Error(`Arrays have different shapes. Actual: [${n}]. Expected: [${r}]`)}const s=Js(e)?e:ea(e),a=Js(t)?t:ea(t);if(s.length!==a.length)throw new Error(`Arrays have different lengths actual: ${s.length} vs expected: ${a.length}.\nActual:   ${s}.\nExpected: ${a}.`);for(let e=0;e<a.length;++e){const t=s[e],r=a[e];if(!n(t,r))throw new Error(`Arrays differ: actual[${e}] = ${t}, expected[${e}] = ${r}.\nActual:   ${s}.\nExpected: ${a}.`)}"undefined"!=typeof expect&&expect().nothing()}function wl(e,t){e().then(()=>t.fail(),()=>t()),"undefined"!=typeof expect&&expect().nothing()}function vl(e,t){const n="string"==typeof t||"number"==typeof t||"boolean"==typeof t?[t]:t;return $e(e)||$e(e[0])||$e(t)||$e(t[0])?xl(e,n,(e,t)=>e==t):xl(e,t,(e,t)=>Nl(e,t,0))}function kl(e,t,n){if(null==n&&(n=bl()),!Nl(e,t,n))throw new Error(`Numbers differ: actual === ${e}, expected === ${t}`);"undefined"!=typeof expect&&expect().nothing()}function Nl(e,t,n){return!isFinite(e)&&!isFinite(t)||!(isNaN(e)||isNaN(t)||Math.abs(e-t)>n)}function Il(e,t,n){for(let r=0;r<e.length;r++)if(e[r]<t||e[r]>n)throw new Error(`Value out of range:${e[r]} low: ${t}, high: ${n}`)}function Sl(e,t){const n=new Float32Array(e),r=new Float32Array(t);if(n.length!==r.length)throw new Error(`Expected ArrayBuffer to be of length ${r.length}, but it was ${n.length}`);for(let e=0;e<r.length;e++)if(n[e]!==r[e])throw new Error(`Expected ArrayBuffer value at ${e} to be ${r[e]} but got ${n[e]} instead`)}function Tl(e){for(let t=0;t<e.length;t++){const n=e[t];Array.isArray(n)?Tl(n):e[t]=Zs(n)}return e}function El(e){const t=document.createElement("video");return"playsInline"in t&&(t.playsInline=!0),t.muted=!0,t.loop=!0,t.style.position="fixed",t.style.left="0px",t.style.top="0px",t.preload="auto",t.appendChild(e),new Promise(e=>{t.addEventListener("loadeddata",n=>e(t)),t.load()})}async function Cl(e){await e.play(),"requestVideoFrameCallback"in e&&await new Promise(t=>{e.requestVideoFrameCallback(t)})}const $l="4.22.0";class Al{static sgd(e){return new iu(e)}static momentum(e,t,n=!1){return new ou(e,t,n)}static rmsprop(e,t=.9,n=0,r=null,s=!1){return new uu(e,t,n,r,s)}static adam(e=.001,t=.9,n=.999,r=null){return new Jo(e,t,n,r)}static adadelta(e=.001,t=.95,n=null){return new qo(e,t,n)}static adamax(e=.002,t=.9,n=.999,r=null,s=0){return new au(e,t,n,r,s)}static adagrad(e,t=.1){return new Yo(e,t)}}const Rl=qa({acos_:function(e){const t={x:Ha(e,"x","acos")};return Ma.runKernel(tt,t)}}),_l=qa({acosh_:function(e){const t={x:Ha(e,"x","acosh")};return Ma.runKernel(nt,t)}}),Dl=qa({addN_:function(e){ie(Array.isArray(e),()=>"The argument passed to tf.addN() must be a list of tensors"),ie(e.length>=1,()=>`Must pass at least one tensor to tf.addN(), but got ${e.length}`);const t=e.map((e,t)=>Ha(e,`tensors${t}`,"addN")),n=t[0];t.forEach(e=>{if(e.dtype!==n.dtype)throw new Error("All tensors passed to tf.addN() must have the same dtype")}),t.forEach(e=>{if(!de(e.shape,n.shape))throw new Error("All tensors passed to tf.addN() must have the same shape")});const r=t;return Ma.runKernel(st,r)}}),Fl=qa({all_:function(e,t=null,n=!1){const r={x:Ha(e,"x","all","bool")},s={axis:t,keepDims:n};return Ma.runKernel(at,r,s)}}),Ml=qa({any_:function(e,t=null,n=!1){const r={x:Ha(e,"x","any","bool")},s={axis:t,keepDims:n};return Ma.runKernel(it,r,s)}}),Ol=qa({argMax_:function(e,t=0){const n={x:Ha(e,"x","argMax")},r={axis:t};return Ma.runKernel(ot,n,r)}}),Ll=qa({argMin_:function(e,t=0){const n={x:Ha(e,"x","argMin")},r={axis:t};return Ma.runKernel(ut,n,r)}}),zl=qa({asin_:function(e){const t={x:Ha(e,"x","asin")};return Ma.runKernel(lt,t)}}),Pl=qa({asinh_:function(e){const t={x:Ha(e,"x","asinh")};return Ma.runKernel(ct,t)}}),Bl=qa({atan_:function(e){const t={x:Ha(e,"x","atan")};return Ma.runKernel(ht,t)}}),Vl=qa({atan2_:function(e,t){let n=Ha(e,"a","atan2"),r=Ha(t,"b","atan2");[n,r]=Ta(n,r);const s={a:n,b:r};return Ma.runKernel(pt,s)}}),Ul=qa({atanh_:function(e){const t={x:Ha(e,"x","atanh")};return Ma.runKernel(dt,t)}});function Wl(e,t,n,r,s="NHWC",a){return jl(e,[...t,e[3]],n,a,r,null,null,nc(s))}function Gl(e,t,n,r,s,a,i="channelsLast"){const[o,u]=Xl(t);let l;if("channelsLast"===i)l=[o,u,e[3],e[3]];else{if("channelsFirst"!==i)throw new Error(`Unknown dataFormat ${i}`);l=[o,u,e[1],e[1]]}return jl(e,l,n,r,s,a,!1,i)}function Hl(e,t,n,r,s,a,i="NDHWC"){const[o,u,l]=Yl(t);let c,h;if("NDHWC"===i)h="channelsLast",c=[o,u,l,e[4],e[4]];else{if("NCDHW"!==i)throw new Error(`Unknown dataFormat ${i}`);h="channelsFirst",c=[o,u,l,e[1],e[1]]}return Kl(e,c,n,r,s,!1,h,a)}function jl(e,t,n,r,s,a,i=!1,o="channelsLast"){let[u,l,c,h]=[-1,-1,-1,-1];if("channelsLast"===o)[u,l,c,h]=e;else{if("channelsFirst"!==o)throw new Error(`Unknown dataFormat ${o}`);[u,h,l,c]=e}const[d,p,,f]=t,[m,g]=Xl(n),[y,b]=Xl(r),x=Zl(d,y),w=Zl(p,b),{padInfo:v,outHeight:k,outWidth:N}=function(e,t,n,r,s,a,i,o,u){let l,c,h;if("number"==typeof e){l={top:e,bottom:e,left:e,right:e,type:0===e?"VALID":"NUMBER"};const s=function(e,t,n,r,s){null==r&&(r=ql(e,t,n));const a=e[1];return[Ql((e[0]-t+2*r)/n+1,s),Ql((a-t+2*r)/n+1,s)]}([t,n],a,r,e,o);c=s[0],h=s[1]}else if("same"===e){c=Math.ceil(t/r),h=Math.ceil(n/s);const e=Math.max(0,(c-1)*r+a-t),o=Math.max(0,(h-1)*s+i-n),u=Math.floor(e/2),d=e-u,p=Math.floor(o/2);l={top:u,bottom:d,left:p,right:o-p,type:"SAME"}}else if("valid"===e)l={top:0,bottom:0,left:0,right:0,type:"VALID"},c=Math.ceil((t-a+1)/r),h=Math.ceil((n-i+1)/s);else{if("object"!=typeof e)throw Error(`Unknown padding parameter: ${e}`);{const d="channelsLast"===u?e[1][0]:e[2][0],p="channelsLast"===u?e[1][1]:e[2][1],f="channelsLast"===u?e[2][0]:e[3][0],m="channelsLast"===u?e[2][1]:e[3][1];l={top:d,bottom:p,left:f,right:m,type:0===d&&0===p&&0===f&&0===m?"VALID":"EXPLICIT"},c=Ql((t-a+d+p)/r+1,o),h=Ql((n-i+f+m)/s+1,o)}}return{padInfo:l,outHeight:c,outWidth:h}}(s,l,c,m,g,x,w,a,o),I=i?f*h:f;let S;return"channelsFirst"===o?S=[u,I,k,N]:"channelsLast"===o&&(S=[u,k,N,I]),{batchSize:u,dataFormat:o,inHeight:l,inWidth:c,inChannels:h,outHeight:k,outWidth:N,outChannels:I,padInfo:v,strideHeight:m,strideWidth:g,filterHeight:d,filterWidth:p,effectiveFilterHeight:x,effectiveFilterWidth:w,dilationHeight:y,dilationWidth:b,inShape:e,outShape:S,filterShape:t}}function Kl(e,t,n,r,s,a=!1,i="channelsLast",o){let[u,l,c,h,d]=[-1,-1,-1,-1,-1];if("channelsLast"===i)[u,l,c,h,d]=e;else{if("channelsFirst"!==i)throw new Error(`Unknown dataFormat ${i}`);[u,d,l,c,h]=e}const[p,f,m,,g]=t,[y,b,x]=Yl(n),[w,v,k]=Yl(r),N=Zl(p,w),I=Zl(f,v),S=Zl(m,k),{padInfo:T,outDepth:E,outHeight:C,outWidth:$}=function(e,t,n,r,s,a,i,o,u,l,c){let h,d,p,f;if("valid"===e&&(e=0),"number"==typeof e){h={top:e,bottom:e,left:e,right:e,front:e,back:e,type:0===e?"VALID":"NUMBER"};const m=function(e,t,n,r,s,a){null==s&&(s=ql(e,t[0],r[0]));const i=[0,0,0,1];for(let n=0;n<3;n++)e[n]+2*s>=t[n]&&(i[n]=Ql((e[n]-t[n]+2*s)/r[n]+1,a));return i}([t,n,r,1],[o,u,l],0,[s,a,i],e,c);d=m[0],p=m[1],f=m[2]}else{if("same"!==e)throw Error(`Unknown padding parameter: ${e}`);{d=Math.ceil(t/s),p=Math.ceil(n/a),f=Math.ceil(r/i);const e=(d-1)*s+o-t,c=(p-1)*a+u-n,m=(f-1)*i+l-r,g=Math.floor(e/2),y=e-g,b=Math.floor(c/2),x=c-b,w=Math.floor(m/2);h={top:b,bottom:x,left:w,right:m-w,front:g,back:y,type:"SAME"}}}return{padInfo:h,outDepth:d,outHeight:p,outWidth:f}}(s,l,c,h,y,b,x,N,I,S,o),A=a?g*d:g;let R;return"channelsFirst"===i?R=[u,A,E,C,$]:"channelsLast"===i&&(R=[u,E,C,$,A]),{batchSize:u,dataFormat:i,inDepth:l,inHeight:c,inWidth:h,inChannels:d,outDepth:E,outHeight:C,outWidth:$,outChannels:A,padInfo:T,strideDepth:y,strideHeight:b,strideWidth:x,filterDepth:p,filterHeight:f,filterWidth:m,effectiveFilterDepth:N,effectiveFilterHeight:I,effectiveFilterWidth:S,dilationDepth:w,dilationHeight:v,dilationWidth:k,inShape:e,outShape:R,filterShape:t}}function ql(e,t,n,r=1){const s=Zl(t,r);return Math.floor((e[0]*(n-1)-n+s)/2)}function Xl(e){return"number"==typeof e?[e,e,e]:2===e.length?[e[0],e[1],1]:e}function Yl(e){return"number"==typeof e?[e,e,e]:e}function Zl(e,t){return t<=1?e:e+(e-1)*(t-1)}function Ql(e,t){if(!t)return Math.trunc(e);switch(t){case"round":return Math.round(e);case"ceil":return Math.ceil(e);case"floor":return Math.floor(e);default:throw new Error(`Unknown roundingMode ${t}`)}}function Jl(e){const[t,n,r]=Xl(e);return 1===t&&1===n&&1===r}function ec(e,t){return Jl(e)||Jl(t)}function tc(e){return Xl(e).every(e=>e>0)}function nc(e){if("NHWC"===e)return"channelsLast";if("NCHW"===e)return"channelsFirst";throw new Error(`Unknown dataFormat ${e}`)}function rc(e,t,n){if(null!=n){if("string"==typeof t)throw Error(`Error in ${e}: pad must be an integer when using dimRoundingMode ${n} but got pad ${t}.`);if("number"==typeof t)ie(pe(t),()=>`Error in ${e}: pad must be an integer when using dimRoundingMode ${n} but got pad ${t}.`);else{if("object"!=typeof t)throw Error(`Error in ${e}: Unknown padding parameter: ${t}`);t.forEach(t=>{t.forEach(t=>{ie(pe(t),()=>`Error in ${e}: pad must be an integer when using dimRoundingMode ${n} but got pad ${t}.`)})})}}}const sc=qa({reshape_:function(e,t){const n={x:Ha(e,"x","reshape","string_or_numeric")},r={shape:t};return Ma.runKernel(br,n,r)}}),ac=qa({avgPool_:function(e,t,n,r,s){const a=Ha(e,"x","avgPool","float32");ie(ec(n,1),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${n} and dilations '1'`);let i=a,o=!1;3===a.rank&&(o=!0,i=sc(a,[1,a.shape[0],a.shape[1],a.shape[2]])),ie(4===i.rank,()=>`Error in avgPool: x must be rank 4 but got rank ${i.rank}.`),rc("avgPool",r,s);const u={x:i},l={filterSize:t,strides:n,pad:r,dimRoundingMode:s};let c=Ma.runKernel(ft,u,l);return c=No(c,a.dtype),o?sc(c,[c.shape[1],c.shape[2],c.shape[3]]):c}}),ic=qa({avgPool3d_:function(e,t,n,r,s,a="NDHWC"){const i=Ha(e,"x","avgPool3d","float32");let o=i,u=!1;4===i.rank&&(u=!0,o=sc(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),ie(5===o.rank,()=>`Error in avgPool3d: x must be rank 5 but got rank ${o.rank}.`),ie("NDHWC"===a,()=>`Error in avgPool3d: Only NDHWC is currently supported, but got dataFormat of ${a}`),ie("number"==typeof n&&n>0||Array.isArray(n)&&n[0]>0&&n[1]>0&&n[2]>0,()=>`Error in avgPool3d: Stride must be > 0, but got '${n}'`),rc("avgPool3d",r,s);const l={x:o},c={filterSize:t,strides:n,pad:r,dimRoundingMode:s,dataFormat:a};let h=Ma.runKernel(gt,l,c);return h=No(h,o.dtype),u?sc(h,[h.shape[1],h.shape[2],h.shape[3],h.shape[4]]):h}}),oc=qa({concat_:function(e,t=0){ie(e.length>=1,()=>"Pass at least one tensor to concat");const n=ja(e,"tensors","concat","string_or_numeric");if("complex64"===n[0].dtype&&n.forEach(e=>{if("complex64"!==e.dtype)throw new Error(`Cannot concatenate complex64 tensors with a tensor\n          with dtype ${e.dtype}. `)}),1===n.length)return Io(n[0]);const r=n,s={axis:t};return Ma.runKernel($t,r,s)}}),uc=qa({sigmoid_:function(e){const t={x:Ha(e,"x","sigmoid","float32")};return Ma.runKernel(Or,t)}}),lc=qa({slice_:function(e,t,n){const r=Ha(e,"x","slice","string_or_numeric");if(0===r.rank)throw new Error("Slicing scalar is not possible");const s={x:r},a={begin:t,size:n};return Ma.runKernel(_r,s,a)}}),cc=qa({tanh_:function(e){const t={x:Ha(e,"x","tanh","float32")};return Ma.runKernel(rs,t)}}),hc=qa({basicLSTMCell_:function(e,t,n,r,s,a){const i=Ha(e,"forgetBias","basicLSTMCell"),o=Ha(t,"lstmKernel","basicLSTMCell"),u=Ha(n,"lstmBias","basicLSTMCell"),l=Ha(r,"data","basicLSTMCell"),c=Ha(s,"c","basicLSTMCell"),h=Ha(a,"h","basicLSTMCell"),d=oc([l,h],1),p=Au(d,o),f=To(p,u),m=f.shape[0],g=f.shape[1]/4,y=[m,g],b=lc(f,[0,0],y),x=lc(f,[0,g],y),w=lc(f,[0,2*g],y),v=lc(f,[0,3*g],y),k=To($o(uc(b),cc(x)),$o(c,uc(To(i,w))));return[k,$o(cc(k),uc(v))]}}),dc=qa({batchToSpaceND_:function(e,t,n){const r=Ha(e,"x","batchToSpaceND"),s=t.reduce((e,t)=>e*t);ie(r.rank>=1+t.length,()=>`input rank is ${r.rank} but should be > than blockShape.length ${t.length}`),ie(n.length===t.length,()=>`crops.length is ${n.length} but should be equal to blockShape.length  ${t.length}`),ie(r.shape[0]%s===0,()=>`input tensor batch is ${r.shape[0]} but is not divisible by the product of the elements of blockShape ${t.join(" * ")} === ${s}`);const a={x:r},i={blockShape:t,crops:n};return Ma.runKernel(xt,a,i)}}),pc=qa({batchNorm_:function(e,t,n,r,s,a){null==a&&(a=.001);const i=Ha(e,"x","batchNorm"),o=Ha(t,"mean","batchNorm"),u=Ha(n,"variance","batchNorm");let l,c;null!=s&&(l=Ha(s,"scale","batchNorm")),null!=r&&(c=Ha(r,"offset","batchNorm")),ie(o.rank===u.rank,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),ie(null==c||o.rank===c.rank,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),ie(null==l||o.rank===l.rank,()=>"Batch normalization gradient requires mean and scale to have equal ranks.");const h={x:function(e){let t;return t=0===e.rank||1===e.rank?sc(e,[1,1,1,e.size]):2===e.rank?sc(e,[1,1,e.shape[0],e.shape[1]]):3===e.rank?sc(e,[1,e.shape[0],e.shape[1],e.shape[2]]):e,t}(i),scale:l,offset:c,mean:o,variance:u},d={varianceEpsilon:a},p=Ma.runKernel(dn,h,d);return sc(p,i.shape)}}),fc=qa({batchNorm2d_:function(e,t,n,r,s,a){const i=Ha(e,"x","batchNorm"),o=Ha(t,"mean","batchNorm"),u=Ha(n,"variance","batchNorm");let l,c;return null!=s&&(l=Ha(s,"scale","batchNorm")),null!=r&&(c=Ha(r,"offset","batchNorm")),ie(2===i.rank,()=>`Error in batchNorm2D: x must be rank 2 but got rank ${i.rank}.`),ie(2===o.rank||1===o.rank,()=>`Error in batchNorm2D: mean must be rank 2 or rank 1 but got rank ${o.rank}.`),ie(2===u.rank||1===u.rank,()=>`Error in batchNorm2D: variance must be rank 2 or rank 1 but got rank ${u.rank}.`),null!=l&&ie(2===l.rank||1===l.rank,()=>`Error in batchNorm2D: scale must be rank 2 or rank 1 but got rank ${l.rank}.`),null!=c&&ie(2===c.rank||1===c.rank,()=>`Error in batchNorm2D: offset must be rank 2 or rank 1 but got rank ${c.rank}.`),pc(i,o,u,c,l,a)}}),mc=qa({batchNorm3d_:function(e,t,n,r,s,a){const i=Ha(e,"x","batchNorm"),o=Ha(t,"mean","batchNorm"),u=Ha(n,"variance","batchNorm");let l,c;return null!=s&&(l=Ha(s,"scale","batchNorm")),null!=r&&(c=Ha(r,"offset","batchNorm")),ie(3===i.rank,()=>`Error in batchNorm3D: x must be rank 3 but got rank ${i.rank}.`),ie(3===o.rank||1===o.rank,()=>`Error in batchNorm3D: mean must be rank 3 or rank 1 but got rank ${o.rank}.`),ie(3===u.rank||1===u.rank,()=>`Error in batchNorm3D: variance must be rank 3 or rank 1 but got rank ${u.rank}.`),null!=l&&ie(3===l.rank||1===l.rank,()=>`Error in batchNorm3D: scale must be rank 3 or rank 1 but got rank ${l.rank}.`),null!=c&&ie(3===c.rank||1===c.rank,()=>`Error in batchNorm3D: offset must be rank 3 or rank 1 but got rank ${c.rank}.`),pc(i,o,u,c,l,a)}}),gc=qa({batchNorm4d_:function(e,t,n,r,s,a){const i=Ha(e,"x","batchNorm"),o=Ha(t,"mean","batchNorm"),u=Ha(n,"variance","batchNorm");let l,c;return null!=s&&(l=Ha(s,"scale","batchNorm")),null!=r&&(c=Ha(r,"offset","batchNorm")),ie(4===i.rank,()=>`Error in batchNorm4D: x must be rank 4 but got rank ${i.rank}.`),ie(4===o.rank||1===o.rank,()=>`Error in batchNorm4D: mean must be rank 4 or rank 1 but got rank ${o.rank}.`),ie(4===u.rank||1===u.rank,()=>`Error in batchNorm4D: variance must be rank 4 or rank 1 but got rank ${u.rank}.`),null!=l&&ie(4===l.rank||1===l.rank,()=>`Error in batchNorm4D: scale must be rank 4 or rank 1 but got rank ${l.rank}.`),null!=c&&ie(4===c.rank||1===c.rank,()=>`Error in batchNorm4D: offset must be rank 4 or rank 1 but got rank ${c.rank}.`),pc(i,o,u,c,l,a)}}),yc=qa({bincount_:function(e,t,n){const r=Ha(e,"x","bincount"),s=Ha(t,"weights","bincount");ie("int32"===r.dtype,()=>`Error in bincount: input dtype must be int32, but got ${r.dtype}`),ie(n>=0,()=>`size must be non-negative, but got ${n}.`),ie(s.size===r.size||0===s.size,()=>`Error in bincount: weights must have the same size as input or0-length, but got input shape: ${r.shape}, weights shape: ${s.shape}.`);const a={x:r,weights:s},i={size:n};return Ma.runKernel(wt,a,i)}}),bc=qa({bitwiseAnd_:function(e,t){const n=Ha(e,"x","bitwiseAnd"),r=Ha(t,"y","bitwiseAnd");if(!de(n.shape,r.shape))throw new Error(`BitwiseAnd: Tensors must have the same shape. x: ${n.shape}, y: ${r.shape}`);if("int32"!==n.dtype||"int32"!==r.dtype)throw new Error(`BitwiseAnd: Only supports 'int32' values in tensor, found type of x: ${n.dtype} and type of y: ${r.dtype}`);const s={a:n,b:r};return Ma.runKernel(vt,s)}}),xc=qa({broadcastArgs_:function(e,t){const n=Ha(e,"s0","broadcastArgs","int32"),r=Ha(t,"s1","broadcastArgs","int32");if(1!==n.rank)throw new Error(`broadcastArgs(): first input must be a vector (rank=1). Has rank ${n.rank}`);if(1!==r.rank)throw new Error(`broadcastArgs(): second input must be a vector (rank=1). Has rank ${r.rank}`);const s={s0:n,s1:r};return Ma.runKernel(Nt,s)}}),wc=qa({broadcastTo_:function(e,t){let n=Ha(e,"broadcastTo","x");const r=n.shape;if(Ue(t),t.length<n.rank)throw new Error(`broadcastTo(): shape.length=${t.length} < input.rank=${n.rank}.`);if(t.length>n.rank){const e=n.shape.slice();for(;e.length<t.length;)e.unshift(1);n=sc(n,e)}const s=n.shape,a=Array.from(t);for(let e=t.length-1;e>=0;e--)if(s[e]===t[e])a[e]=1;else if(1!==n.shape[e])throw new Error(`broadcastTo(): [${r}] cannot be broadcast to [${t}].`);if(0===a.map((e,t)=>e>1?t:-1).filter(e=>e>=0).length)return Io(n);const i={x:n},o={reps:a};return Ma.runKernel(ss,i,o)}}),vc=qa({ceil_:function(e){const t={x:Ha(e,"x","ceil","float32")};return Ma.runKernel(St,t)}}),kc=qa({clipByValue_:function(e,t,n){const r=Ha(e,"x","clipByValue");if(ie(t<=n,()=>`Error in clip: min (${t}) must be less than or equal to max (${n}).`),t===n)return Xo(r.shape,t,r.dtype);const s={x:r},a={clipValueMin:t,clipValueMax:n};return Ma.runKernel(Tt,s,a)}}),Nc=qa({concat1d_:function(e){return oc(e,0)}}),Ic=qa({concat2d_:function(e,t){return oc(e,t)}}),Sc=qa({concat3d_:function(e,t){return oc(e,t)}}),Tc=qa({concat4d_:function(e,t){return oc(e,t)}}),Ec=qa({conv2d_:function(e,t,n,r,s="NHWC",a=[1,1],i){const o=Ha(e,"x","conv2d","float32"),u=Ha(t,"filter","conv2d","float32");let l=o,c=!1;3===o.rank&&(c=!0,l=sc(o,[1,o.shape[0],o.shape[1],o.shape[2]])),ie(4===l.rank,()=>`Error in conv2d: input must be rank 4, but got rank ${l.rank}.`),ie(4===u.rank,()=>`Error in conv2d: filter must be rank 4, but got rank ${u.rank}.`),rc("conv2d",r,i);const h="NHWC"===s?l.shape[3]:l.shape[1];ie(h===u.shape[2],()=>`Error in conv2d: depth of input (${h}) must match input depth for filter ${u.shape[2]}.`),ie(ec(n,a),()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${n} and dilations '${a}'`),ie(tc(a),()=>"Error in conv2D: Dilated rates should be larger than 0."),ie(tc(n),()=>"Error in conv2D: Strides should be larger than 0.");const d={x:l,filter:u},p={strides:n,pad:r,dataFormat:s,dilations:a,dimRoundingMode:i},f=Ma.runKernel(At,d,p);return c?sc(f,[f.shape[1],f.shape[2],f.shape[3]]):f}}),Cc=qa({conv1d_:function(e,t,n,r,s="NWC",a=1,i){const o=Ha(e,"x","conv1d"),u=Ha(t,"filter","conv1d");let l=o,c=!1;2===o.rank&&(c=!0,l=sc(o,[1,o.shape[0],o.shape[1]])),ie(3===l.rank,()=>`Error in conv1d: input must be rank 3, but got rank ${l.rank}.`),ie(3===u.rank,()=>`Error in conv1d: filter must be rank 3, but got rank ${u.rank}.`),rc("conv1d",r,i),ie(l.shape[2]===u.shape[1],()=>`Error in conv1d: depth of input (${l.shape[2]}) must match input depth for filter ${u.shape[1]}.`),ie(ec(n,a),()=>`Error in conv1D: Either stride or dilation must be 1. Got stride ${n} and dilation '${a}'`),ie(tc(a),()=>"Error in conv1D: Dilated rates should be larger than 0."),ie(tc(n),()=>"Error in conv1D: Stride should be larger than 0."),ie("NWC"===s,()=>`Error in conv1d: got dataFormat of ${s} but only NWC is currently supported.`);const h=sc(u,[1,u.shape[0],u.shape[1],u.shape[2]]),d=sc(l,[l.shape[0],1,l.shape[1],l.shape[2]]),p=Ec(d,h,[1,n],r,"NHWC",[1,a],i);return sc(p,c?[p.shape[2],p.shape[3]]:[p.shape[0],p.shape[2],p.shape[3]])}}),$c=qa({conv2DBackpropInput_:function(e,t,n,r,s,a="NHWC",i){ie(e.length===t.rank,()=>`Length of inShape (${e.length}) and rank of dy (${t.rank}) must match`);let o=e,u=t,l=!1;3===t.rank&&(l=!0,u=sc(t,[1,t.shape[0],t.shape[1],t.shape[2]]),o=[1,e[0],e[1],e[2]]),ie(4===o.length,()=>`Error in conv2dDerInput: inShape must be length 4, but got length ${o.length}.`),ie(4===u.rank,()=>`Error in conv2dDerInput: dy must be rank 4, but got rank ${u.rank}`),ie(4===n.rank,()=>`Error in conv2dDerInput: filter must be rank 4, but got rank ${n.rank}`);const c="NHWC"===a?o[3]:o[1],h="NHWC"===a?u.shape[3]:u.shape[1];ie(c===n.shape[2],()=>`Error in conv2dDerInput: depth of input (${c}) must match input depth for filter ${n.shape[2]}.`),ie(h===n.shape[3],()=>`Error in conv2dDerInput: depth of output (${h}) must match output depth for filter ${n.shape[3]}.`),rc("conv2dDerInput",s,i);const d={dy:u,filter:n},p={strides:r,pad:s,dataFormat:a,dimRoundingMode:i,inputShape:o},f=Ma.runKernel(_t,d,p);return l?sc(f,[f.shape[1],f.shape[2],f.shape[3]]):f}}),Ac=qa({conv2dTranspose_:function(e,t,n,r,s,a){const i=Ha(e,"x","conv2dTranspose"),o=Ha(t,"filter","conv2dTranspose");return $c(n,i,o,r,s,"NHWC",a)}}),Rc=qa({conv3d_:function(e,t,n,r,s="NDHWC",a=[1,1,1]){const i=Ha(e,"x","conv3d"),o=Ha(t,"filter","conv3d");let u=i,l=!1;4===i.rank&&(l=!0,u=sc(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),ie(5===u.rank,()=>`Error in conv3d: input must be rank 5, but got rank ${u.rank}.`),ie(5===o.rank,()=>`Error in conv3d: filter must be rank 5, but got rank ${o.rank}.`),ie(u.shape[4]===o.shape[3],()=>`Error in conv3d: depth of input (${u.shape[4]}) must match input depth for filter ${o.shape[3]}.`),ie(ec(n,a),()=>`Error in conv3D: Either strides or dilations must be 1. Got strides ${n} and dilations '${a}'`),ie("NDHWC"===s,()=>`Error in conv3d: got dataFormat of ${s} but only NDHWC is currently supported.`),ie(tc(a),()=>"Error in conv3D: Dilated rates should be larger than 0."),ie(tc(n),()=>"Error in conv3D: Strides should be larger than 0.");const c={x:u,filter:o},h={strides:n,pad:r,dataFormat:s,dilations:a},d=Ma.runKernel(Dt,c,h);return l?sc(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}}),_c=qa({conv3DBackpropInput_:function(e,t,n,r,s){ie(e.length===t.rank,()=>`Length of inShape (${e.length}) and rank of dy (${t.rank}) must match`);let a=e,i=t,o=!1;4===t.rank&&(o=!0,i=sc(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]]),a=[1,e[0],e[1],e[2],e[3]]);const u=a[4],l=i.shape[4];ie(5===a.length,()=>`Error in conv3dDerInput: inShape must be length 5, but got length ${a.length}.`),ie(5===i.rank,()=>`Error in conv3dDerInput: dy must be rank 5, but got rank ${i.rank}`),ie(5===n.rank,()=>`Error in conv3dDerInput: filter must be rank 5, but got rank ${n.rank}`),ie(u===n.shape[3],()=>`Error in conv3dDerInput: depth of input (${u}) must match input depth for filter ${n.shape[3]}.`),ie(l===n.shape[4],()=>`Error in conv3dDerInput: depth of output (${l}) must match output depth for filter ${n.shape[4]}.`);const c={dy:i,filter:n},h={pad:s,strides:r,inputShape:a},d=Ma.runKernel(Mt,c,h);return o?sc(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}}),Dc=qa({conv3dTranspose_:function(e,t,n,r,s){const a=Ha(e,"x","conv3dTranspose"),i=Ha(t,"filter","conv3dTranspose");return _c(n,a,i,r,s)}}),Fc=qa({cos_:function(e){const t={x:Ha(e,"x","cos","float32")};return Ma.runKernel(Ot,t)}}),Mc=qa({cosh_:function(e){const t={x:Ha(e,"x","cosh","float32")};return Ma.runKernel(Lt,t)}}),Oc=qa({cumprod_:function(e,t=0,n=!1,r=!1){const s={x:Ha(e,"x","cumprod")},a={axis:t,exclusive:n,reverse:r};return Ma.runKernel(zt,s,a)}}),Lc=qa({cumsum_:function(e,t=0,n=!1,r=!1){const s={x:Ha(e,"x","cumsum")},a={axis:t,exclusive:n,reverse:r};return Ma.runKernel(Pt,s,a)}}),zc=qa({denseBincount_:function(e,t,n,r=!1){const s=Ha(e,"x","denseBincount"),a=Ha(t,"weights","denseBincount");ie("int32"===s.dtype,()=>`Error in denseBincount: input dtype must be int32, but got ${s.dtype}`),ie(s.rank<=2,()=>`Error in denseBincount: input must be at most rank 2, but got rank ${s.rank}.`),ie(n>=0,()=>`size must be non-negative, but got ${n}.`),ie(a.size===s.size||0===a.size,()=>`Error in denseBincount: weights must have the same shape as x or 0-length, but got x shape: ${s.shape}, weights shape: ${a.shape}.`);const i={x:s,weights:a},o={size:n,binaryOutput:r};return Ma.runKernel(Vt,i,o)}}),Pc=qa({depthToSpace_:function(e,t,n="NHWC"){const r=Ha(e,"x","depthToSpace","float32"),s="NHWC"===n?r.shape[1]:r.shape[2],a="NHWC"===n?r.shape[2]:r.shape[3],i="NHWC"===n?r.shape[3]:r.shape[1];ie(t>1,()=>`blockSize should be > 1 for depthToSpace, but was: ${t}`),ie(s*t>=0,()=>`Negative dimension size caused by overflow when multiplying\n    ${s} and ${t}  for depthToSpace with input shape\n    ${r.shape}`),ie(a*t>=0,()=>`Negative dimension size caused by overflow when multiplying\n    ${a} and ${t} for depthToSpace with input shape\n        ${r.shape}`),ie(i%(t*t)===0,()=>`Dimension size must be evenly divisible by ${t*t} but is ${i} for depthToSpace with input shape ${r.shape}`);const o={x:r},u={blockSize:t,dataFormat:n};return Ma.runKernel(Ut,o,u)}}),Bc=qa({depthwiseConv2d_:function(e,t,n,r,s="NHWC",a=[1,1],i){const o=Ha(e,"x","depthwiseConv2d","float32"),u=Ha(t,"filter","depthwiseConv2d","float32");let l=o,c=!1;3===o.rank&&(c=!0,l=sc(o,[1,o.shape[0],o.shape[1],o.shape[2]])),ie(4===l.rank,()=>`Error in depthwiseConv2d: input must be rank 4, but got rank ${l.rank}.`),ie(4===u.rank,()=>`Error in depthwiseConv2d: filter must be rank 4, but got rank ${u.rank}.`);const h="NHWC"===s?l.shape[3]:l.shape[1];ie(h===u.shape[2],()=>`Error in depthwiseConv2d: number of input channels (${h}) must match the inChannels dimension in filter ${u.shape[2]}.`),rc("depthwiseConv2d",r,i);const d={x:l,filter:u},p={strides:n,pad:r,dataFormat:s,dilations:a,dimRoundingMode:i},f=Ma.runKernel(Wt,d,p);return c?sc(f,[f.shape[1],f.shape[2],f.shape[3]]):f}}),Vc=qa({diag_:function(e){const t={x:Ha(e,"x","diag")};return Ma.runKernel(jt,t)}}),Uc=qa({dilation2d_:function(e,t,n,r,s=[1,1],a="NHWC"){const i=Ha(e,"x","dilation2d"),o=Ha(t,"filter","dilation2d");ie(3===i.rank||4===i.rank,()=>`Error in dilation2d: input must be rank 3 or 4, but got rank ${i.rank}.`),ie(3===o.rank,()=>`Error in dilation2d: filter must be rank 3, but got rank ${o.rank}.`),ie("NHWC"===a,()=>`Error in dilation2d: Only NHWC is currently supported, but got dataFormat of ${a}`);let u=i,l=!1;3===i.rank&&(u=sc(i,[1,i.shape[0],i.shape[1],i.shape[2]]),l=!0),ie(u.shape[3]===o.shape[2],()=>`Error in dilation2d:  input and filter must have the same depth: ${u.shape[3]} vs ${o.shape[2]}`);const c={x:u,filter:o},h={strides:n,pad:r,dilations:s},d=Ma.runKernel(Kt,c,h);return l?sc(d,[d.shape[1],d.shape[2],d.shape[3]]):d}}),Wc=qa({equal_:function(e,t){let n=Ha(e,"a","equal","string_or_numeric"),r=Ha(t,"b","equal","string_or_numeric");[n,r]=Ta(n,r),ru(n.shape,r.shape);const s={a:n,b:r};return Ma.runKernel(nn,s)}}),Gc=qa({where_:function(e,t,n){const r=Ha(t,"a","where"),s=Ha(n,"b","where"),a=Ha(e,"condition","where","bool"),i=ru(ru(a.shape,r.shape),s.shape),o={condition:wc(a,i),t:wc(r,i),e:wc(s,i)};return Ma.runKernel(Ar,o)}}),Hc=qa({divNoNan_:function(e,t){let n=Ha(e,"a","div"),r=Ha(t,"b","div");[n,r]=Ta(n,r);const s=Co(n,r),a=_o(s),i=Wc(r,a);return Gc(i,a,s)}}),jc=qa({dot_:function(e,t){const n=Ha(e,"t1","dot"),r=Ha(t,"t2","dot");ie(!(1!==n.rank&&2!==n.rank||1!==r.rank&&2!==r.rank),()=>`Error in dot: inputs must all be rank 1 or 2, but got ranks ${n.rank} and ${r.rank}.`);const s=1===n.rank?n.size:n.shape[1],a=1===r.rank?r.size:r.shape[0];if(ie(s===a,()=>`Error in dot: inner dimensions of inputs must match, but got ${s} and ${a}.`),1===n.rank&&1===r.rank){const e=sc(n,[1,-1]),t=sc(r,[-1,1]),s=Au(e,t);return sc(s,[])}if(1===n.rank&&2===r.rank){const e=sc(n,[1,-1]),t=sc(r,[r.shape[0],r.shape[1]]),s=Au(e,t);return sc(s,[s.size])}if(2===n.rank&&1===r.rank){const e=sc(r,[-1,1]),t=Au(n,e);return sc(t,[t.size])}{const e=sc(r,[r.shape[0],r.shape[1]]);return Au(n,e)}}}),Kc=qa({einsum_:function(e,...t){const n=t.map((e,t)=>Ha(e,`tensors${t}`,"einsum")),r={equation:e};return Ma.runKernel(Qt,n,r)}}),qc=qa({elu_:function(e){const t={x:Ha(e,"x","elu","float32")};return Ma.runKernel(Jt,t)}}),Xc=qa({ensureShape_:function(e,t){const n=Ha(e,"x","ensureShape","string_or_numeric");if(!he(n.shape,t))throw new Error(`EnsureShape: Shape of tensor ${n.shape} is not compatible with expected shape ${t}`);return e}}),Yc=qa({erf_:function(e){let t=Ha(e,"x","erf");ie("int32"===t.dtype||"float32"===t.dtype,()=>"Input dtype must be `int32` or `float32`."),"int32"===t.dtype&&(t=No(t,"float32"));const n={x:t};return Ma.runKernel(tn,n)}});function Zc(e,t){for(let n=0;n<e.length;++n)if(e[e.length-n-1]!==t-1-n)return!1;return!0}function Qc(e,t,n){const r=e.length+t.length,s=[];let a=0,i=0;for(let o=0;o<r;o++)-1===n.indexOf(o)?s.push(e[a++]):s.push(t[i++]);return s}function Jc(e,t){const n=[],r=e.length;for(let s=0;s<r;s++)-1===t.indexOf(s)&&n.push(e[s]);return[n,t.map(t=>e[t])]}function eh(e,t){return Qc(e,t.map(e=>1),t)}function th(e,t,n){ie(Zc(t,n),()=>`${e} supports only inner-most axes for now. Got axes ${t} and rank-${n} input.`)}function nh(e,t){if(Zc(e,t))return null;const n=[];for(let r=0;r<t;++r)-1===e.indexOf(r)&&n.push(r);return e.forEach(e=>n.push(e)),n}function rh(e){return e.map((e,t)=>[t,e]).sort((e,t)=>e[1]-t[1]).map(e=>e[0])}function sh(e,t){const n=[];for(let r=t-e;r<t;++r)n.push(r);return n}const ah=qa({max_:function(e,t=null,n=!1){const r={x:Ha(e,"x","max")},s={reductionIndices:t,keepDims:n};return Ma.runKernel(zn,r,s)}}),ih=qa({min_:function(e,t=null,n=!1){const r={x:Ha(e,"x","min")},s={axis:t,keepDims:n};return Ma.runKernel(jn,r,s)}}),oh=qa({sum_:function(e,t=null,n=!1){let r=Ha(e,"x","sum");"bool"===r.dtype&&(r=No(r,"int32"));const s={x:r},a={axis:t,keepDims:n};return Ma.runKernel(Pr,s,a)}});function uh(e,t,n=null){if(0===e.rank)return eu(e);if(1!==e.rank&&null===n)return uh(sc(e,[-1]),t,n);if(1===e.rank||"number"==typeof n||Array.isArray(n)&&1===n.length){if(1===t)return oh(eu(e),n);if(t===1/0)return ah(eu(e),n);if(t===-1/0)return ih(eu(e),n);if("euclidean"===t||2===t)return Ao(oh(Zo(eu(e),Bo(2,"int32")),n));throw new Error(`Error in norm: invalid ord value: ${t}`)}if(Array.isArray(n)&&2===n.length){if(1===t)return ah(oh(eu(e),n[0]),n[1]-1);if(t===1/0)return ah(oh(eu(e),n[1]),n[0]);if(t===-1/0)return ih(oh(eu(e),n[1]),n[0]);if("fro"===t||"euclidean"===t)return Ao(oh(Ro(e),n));throw new Error(`Error in norm: invalid ord value: ${t}`)}throw new Error(`Error in norm: invalid axis: ${n}`)}const lh=qa({norm_:function(e,t="euclidean",n=null,r=!1){const s=uh(e=Ha(e,"x","norm"),t,n);let a=s.shape;if(r){const t=we(n,e.shape);a=eh(s.shape,t)}return sc(s,a)}}),ch=qa({euclideanNorm_:function(e,t=null,n=!1){return lh(e,"euclidean",t,n)}}),hh=qa({exp_:function(e){const t={x:Ha(e,"x","exp")};return Ma.runKernel(rn,t)}}),dh=qa({expandDims_:function(e,t=0){const n=Ha(e,"x","expandDims","string_or_numeric");ie(t<=n.rank,()=>"Axis must be <= rank of the tensor");const r={input:n},s={dim:t};return Ma.runKernel(sn,r,s)}}),ph=qa({expm1_:function(e){const t={x:Ha(e,"x","expm1")};return Ma.runKernel(an,t)}}),fh=qa({tile_:function(e,t){const n=Ha(e,"x","tile","string_or_numeric");ie(n.rank===t.length,()=>`Error in transpose: rank of input ${n.rank} must match length of reps ${t}.`);const r={x:n},s={reps:t};return Ma.runKernel(ss,r,s)}}),mh=qa({eye_:function(e,t,n,r="float32"){null==t&&(t=e);const s=ko([e,t],r),a=e<=t?e:t;for(let e=0;e<a;++e)s.set(1,e,e);const i=sc(s.toTensor(),[e,t]);if(null==n)return i;if(1===n.length)return fh(dh(i,0),[n[0],1,1]);if(2===n.length)return fh(dh(dh(i,0),0),[n[0],n[1],1,1]);if(3===n.length)return fh(dh(dh(dh(i,0),0),0),[n[0],n[1],n[2],1,1]);throw new Error(`eye() currently supports only 1D and 2D batchShapes, but received ${n.length}D.`)}}),gh=qa({floor_:function(e){const t={x:Ha(e,"x","floor","float32")};return Ma.runKernel(cn,t)}}),yh=qa({gather_:function(e,t,n=0,r=0){const s={x:Ha(e,"x","gather"),indices:Ha(t,"indices","gather","int32")},a={axis:n,batchDims:r};return Ma.runKernel(pn,s,a)}}),bh=qa({greater_:function(e,t){let n=Ha(e,"a","greater","string_or_numeric"),r=Ha(t,"b","greater","string_or_numeric");[n,r]=Ta(n,r),ru(n.shape,r.shape);const s={a:n,b:r};return Ma.runKernel(mn,s)}}),xh=qa({greaterEqual_:function(e,t){let n=Ha(e,"a","greaterEqual","string_or_numeric"),r=Ha(t,"b","greaterEqual","string_or_numeric");[n,r]=Ta(n,r),ru(n.shape,r.shape);const s={a:n,b:r};return Ma.runKernel(gn,s)}}),wh=qa({isFinite_:function(e){const t={x:Ha(e,"x","isFinite")};return Ma.runKernel(wn,t)}}),vh=qa({isInf_:function(e){const t={x:Ha(e,"x","isInf")};return Ma.runKernel(vn,t)}}),kh=qa({isNaN_:function(e){const t={x:Ha(e,"x","isNaN")};return Ma.runKernel(kn,t)}}),Nh=qa({leakyRelu_:function(e,t=.2){const n={x:Ha(e,"x","leakyRelu")},r={alpha:t};return Ma.runKernel(Nn,n,r)}}),Ih=qa({less_:function(e,t){let n=Ha(e,"a","less","string_or_numeric"),r=Ha(t,"b","less","string_or_numeric");[n,r]=Ta(n,r),ru(n.shape,r.shape);const s={a:n,b:r};return Ma.runKernel(In,s)}}),Sh=qa({lessEqual_:function(e,t){let n=Ha(e,"a","lessEqual","string_or_numeric"),r=Ha(t,"b","lessEqual","string_or_numeric");[n,r]=Ta(n,r),ru(n.shape,r.shape);const s={a:n,b:r};return Ma.runKernel(Sn,s)}});function Th(e,t,n){if(n<=0)throw new Error("The number of values should be positive.");const r={start:e,stop:t,num:n};return Ma.runKernel(Tn,{},r)}const Eh=qa({localResponseNormalization_:function(e,t=5,n=1,r=1,s=.5){const a=Ha(e,"x","localResponseNormalization");ie(4===a.rank||3===a.rank,()=>`Error in localResponseNormalization: x must be rank 3 or 4 but got\n               rank ${a.rank}.`),ie(pe(t),()=>`Error in localResponseNormalization: depthRadius must be an integer but got depthRadius ${t}.`);let i=a,o=!1;3===a.rank&&(o=!0,i=sc(a,[1,a.shape[0],a.shape[1],a.shape[2]]));const u={x:i},l={depthRadius:t,bias:n,alpha:r,beta:s},c=Ma.runKernel(Mn,u,l);return o?sc(c,[c.shape[1],c.shape[2],c.shape[3]]):c}}),Ch=qa({log_:function(e){const t={x:Ha(e,"x","log","float32")};return Ma.runKernel(En,t)}}),$h=qa({log1p_:function(e){const t={x:Ha(e,"x","log1p")};return Ma.runKernel(Cn,t)}}),Ah=qa({softplus_:function(e){const t={x:Ha(e,"x","softplus")};return Ma.runKernel(Lr,t)}}),Rh=qa({logSigmoid_:function(e){const t=Ha(e,"x","logSigmoid");return zo(e=>({value:Du(Ah(Du(e))),gradFunc:t=>$o(t,uc(Du(e)))}))(t)}}),_h=qa({logSoftmax_:function(e,t=-1){const n=Ha(e,"logits","logSoftmax");if(-1===t&&(t=n.rank-1),t!==n.rank-1)throw Error(`Log Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and axis was ${t}`);const r=zo((e,n)=>{const r=ah(e,t,!0),s=Qo(e,r),a=Qo(No(s,"float32"),Ch(oh(hh(s),t,!0)));return n([a]),{value:a,gradFunc:(e,n)=>{const[r]=n,s=hh(r);return Qo(e,$o(oh(e,t,!0),s))}}});return r(n)}}),Dh=qa({logSumExp_:function(e,t=null,n=!1){const r=Ha(e,"x","logSumExp"),s=we(t,r.shape),a=ah(r,s,!0),i=Qo(r,a),o=hh(i),u=oh(o,s),l=Ch(u),c=To(sc(a,l.shape),l);if(n){const e=eh(c.shape,s);return sc(c,e)}return c}}),Fh=qa({logicalAnd_:function(e,t){const n=Ha(e,"a","logicalAnd","bool"),r=Ha(t,"b","logicalAnd","bool");ru(n.shape,r.shape);const s={a:n,b:r};return Ma.runKernel($n,s)}}),Mh=qa({logicalNot_:function(e){const t={x:Ha(e,"x","logicalNot","bool")};return Ma.runKernel(An,t)}}),Oh=qa({logicalOr_:function(e,t){const n=Ha(e,"a","logicalOr","bool"),r=Ha(t,"b","logicalOr","bool");ru(n.shape,r.shape);const s={a:n,b:r};return Ma.runKernel(Rn,s)}}),Lh=qa({logicalXor_:function(e,t){const n=Ha(e,"a","logicalXor","bool"),r=Ha(t,"b","logicalXor","bool");return ru(n.shape,r.shape),Fh(Oh(e,t),Mh(Fh(e,t)))}}),zh=2147483648,Ph=qa({searchSorted_:function(e,t,n="left"){const r=Ha(e,"sortedSequence","searchSorted"),s=Ha(t,"values","searchSorted"),a=r.shape[r.shape.length-1],i=s.shape[s.shape.length-1],o=sc(r,[-1,a]),u=sc(s,[-1,i]);if(o.rank<2)throw new Error("Sorted input argument must be at least 2-dimensional");if(o.shape[0]!==u.shape[0])throw new Error("Leading dimension of 'sortedSequence' and 'values' must match.");if(le(u.shape)>=zh)throw new Error("values tensor size must less than 2147483648");if(o.shape[1]>=zh)throw new Error(`trailing dim_size must less than 2147483648 for int32 output type, was ${o.shape[1]}`);const l={sortedSequence:o,values:u},c={side:n};return Ma.runKernel($r,l,c)}});function Bh(e,t){return Ph(e,t,"left")}const Vh=qa({maxPool_:function(e,t,n,r,s){const a=Ha(e,"x","maxPool");let i=a,o=!1;3===a.rank&&(o=!0,i=sc(a,[1,a.shape[0],a.shape[1],a.shape[2]])),ie(4===i.rank,()=>`Error in maxPool: input must be rank 4 but got rank ${i.rank}.`),ie(ec(n,1),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${n} and dilations '1'`),rc("maxPool",r,s);const u={x:i},l={filterSize:t,strides:n,pad:r,dimRoundingMode:s},c=Ma.runKernel(Bn,u,l);return o?sc(c,[c.shape[1],c.shape[2],c.shape[3]]):c}}),Uh=qa({maxPool3d_:function(e,t=[1,1,1],n,r,s,a="NDHWC"){const i=Ha(e,"x","maxPool3d");let o=i,u=!1;4===i.rank&&(u=!0,o=sc(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),ie(5===o.rank,()=>`Error in maxPool3d: x must be rank 5 but got rank ${o.rank}.`),ie("NDHWC"===a,()=>`Error in maxPool3d: Only NDHWC is currently supported, but got dataFormat of ${a}`),rc("maxPool3d",r,s);const l={x:o},c={filterSize:t,strides:n,pad:r,dimRoundingMode:s,dataFormat:a},h=Ma.runKernel(Un,l,c);return u?sc(h,[h.shape[1],h.shape[2],h.shape[3],h.shape[4]]):h}}),Wh=qa({maxPoolWithArgmax_:function(e,t,n,r,s=!1){const a={x:Ha(e,"x","maxPoolWithArgmax")},i={filterSize:t,strides:n,pad:r,includeBatchInIndex:s},o=Ma.runKernel(Gn,a,i);return{result:o[0],indexes:o[1]}}}),Gh=qa({mean_:function(e,t=null,n=!1){const r={x:Ha(e,"x","mean")},s={axis:t,keepDims:n};return Ma.runKernel(Hn,r,s)}});function Hh(e,t="float32"){if(Ue(e),"complex64"===t){const t=Hh(e,"float32"),n=Hh(e,"float32");return Xa(t,n)}const n=Be(le(e),t);return Ma.makeTensor(n,e,t)}function jh(e,t="float32"){if(Ue(e),"complex64"===t){const t=jh(e,"float32"),n=Hh(e,"float32");return Xa(t,n)}const n=Pe(le(e),t);return Ma.makeTensor(n,e,t)}function Kh(e,t,{indexing:n="xy"}={}){if("xy"!==n&&"ij"!==n)throw new TypeError(`${n} is not a valid third argument to meshgrid`);if(void 0===e)return[];let r=Ha(e,"x","meshgrid",e instanceof pa?e.dtype:"float32");if(void 0===t)return[r];let s=Ha(t,"y","meshgrid",t instanceof pa?t.dtype:"float32");const a=le(r.shape),i=le(s.shape);return"xy"===n?(r=sc(r,[1,-1]),s=sc(s,[-1,1]),[Au(jh([i,1],r.dtype),r),Au(s,jh([1,a],s.dtype))]):(r=sc(r,[-1,1]),s=sc(s,[1,-1]),[Au(r,jh([1,i],r.dtype)),Au(jh([a,1],s.dtype),s)])}const qh=qa({minimum_:function(e,t){let n=Ha(e,"a","minimum"),r=Ha(t,"b","minimum");[n,r]=Ta(n,r),"bool"===n.dtype&&(n=No(n,"int32"),r=No(r,"int32")),ru(n.shape,r.shape);const s={a:n,b:r};return Ma.runKernel(Kn,s)}}),Xh=qa({mirrorPad_:function(e,t,n){ie("reflect"===n||"symmetric"===n,()=>`Invalid mode. Mode must be either reflect or symmetric. Got ${n}.`);const r=Ha(e,"x","mirrorPad");if(0===r.rank)throw new Error("mirrorPad(scalar) is not defined. Pass non-scalar to mirrorPad");ie(t.length===r.rank,()=>`Padding doesn't match input. Must be ${r.rank}. Got ${t.length}.`);const s="reflect"===n?1:0;for(let e=0;e<r.rank;e++)ie(2===t[e].length,()=>"Invalid number of paddings. Must be length of 2 each."),ie(t[e][0]>=0&&t[e][0]<=r.shape[e]-s&&t[e][1]>=0&&t[e][1]<=r.shape[e]-s,()=>`Padding in dimension ${e} cannot be greater than or equal to ${r.shape[e]-s} or less than 0 for input of shape ${r.shape}`);const a={paddings:t,mode:n},i={x:r};return Ma.runKernel(qn,i,a)}}),Yh=qa({mod_:function(e,t){let n=Ha(e,"a","mod"),r=Ha(t,"b","mod");[n,r]=Ta(n,r);const s={a:n,b:r};return Ma.runKernel(Xn,s)}}),Zh=qa({moments_:function(e,t=null,n=!1){const r=we(t,(e=Ha(e,"x","moments")).shape),s=Gh(e,r,n);let a=s.shape;n||(a=eh(s.shape,r));const i=Ro(Qo(No(e,"float32"),sc(s,a)));return{mean:s,variance:Gh(i,r,n)}}}),Qh=qa({multiRNNCell_:function(e,t,n,r){const s=Ha(t,"data","multiRNNCell"),a=ja(n,"c","multiRNNCell"),i=ja(r,"h","multiRNNCell");let o=s;const u=[];for(let t=0;t<e.length;t++){const n=e[t](o,a[t],i[t]);u.push(n[0]),u.push(n[1]),o=n[1]}const l=[],c=[];for(let e=0;e<u.length;e+=2)l.push(u[e]),c.push(u[e+1]);return[l,c]}}),Jh=qa({multinomial_:function(e,t,n,r=!1){const s=Ha(e,"logits","multinomial"),a=s.size,i=s.rank;if(a<2)throw new Error(`Error in multinomial: you need at least 2 outcomes, but got ${a}.`);if(i>2)throw new Error(`Rank of probabilities must be 1 or 2, but is ${i}`);n=n||Math.random();const o={logits:1===i?sc(s,[1,-1]):s},u={numSamples:t,seed:n,normalized:r},l=Ma.runKernel(Yn,o,u);return 1===i?sc(l,[l.size]):l}}),ed=qa({notEqual_:function(e,t){let n=Ha(e,"a","notEqual","string_or_numeric"),r=Ha(t,"b","notEqual","string_or_numeric");[n,r]=Ta(n,r),ru(n.shape,r.shape);const s={a:n,b:r};return Ma.runKernel(Jn,s)}}),td=qa({onesLike_:function(e){const t={x:Ha(e,"x","onesLike")};return Ma.runKernel(rr,t)}}),nd=qa({outerProduct_:function(e,t){const n=Ha(e,"v1","outerProduct"),r=Ha(t,"v2","outerProduct");ie(1===n.rank&&1===r.rank,()=>`Error in outerProduct: inputs must be rank 1, but got ranks ${n.rank} and ${r.rank}.`);const s=sc(n,[-1,1]),a=sc(r,[1,-1]);return Au(s,a)}}),rd=qa({pad_:function(e,t,n=0){const r=Ha(e,"x","pad");if(0===r.rank)throw new Error("pad(scalar) is not defined. Pass non-scalar to pad");const s={paddings:t,constantValue:n},a={x:r};return Ma.runKernel(ir,a,s)}}),sd=qa({pad1d_:function(e,t,n=0){return ie(2===t.length,()=>"Invalid number of paddings. Must be length of 2."),rd(e,[t],n)}}),ad=qa({pad2d_:function(e,t,n=0){return ie(2===t.length&&2===t[0].length&&2===t[1].length,()=>"Invalid number of paddings. Must be length of 2 each."),rd(e,t,n)}}),id=qa({pad3d_:function(e,t,n=0){return ie(3===t.length&&2===t[0].length&&2===t[1].length&&2===t[2].length,()=>"Invalid number of paddings. Must be length of 2 each."),rd(e,t,n)}}),od=qa({pad4d_:function(e,t,n=0){return ie(4===t.length&&2===t[0].length&&2===t[1].length&&2===t[2].length&&2===t[3].length,()=>"Invalid number of paddings. Must be length of 2 each."),rd(e,t,n)}}),ud=qa({spaceToBatchND_:function(e,t,n){const r=Ha(e,"x","spaceToBatchND");ie(r.rank>=1+t.length,()=>`input rank ${r.rank} should be > than [blockShape] ${t.length}`),ie(n.length===t.length,()=>`paddings.shape[0] ${n.length} must be equal to [blockShape] ${t.length}`),ie(r.shape.reduce((e,r,s)=>s>0&&s<=t.length?e&&(r+n[s-1][0]+n[s-1][1])%t[s-1]===0:e,!0),()=>`input spatial dimensions ${r.shape.slice(1)} with paddings ${n.toString()} must be divisible by blockShapes ${t.toString()}`);const s={x:r},a={blockShape:t,paddings:n};return Ma.runKernel(Br,s,a)}}),ld=qa({pool_:function(e,t,n,r,s,a,i){null==s&&(s=[1,1]),null==a&&(a=1),0===r&&(r="valid");const o=Ha(e,"x","maxPool");let u=o,l=!1;3===o.rank&&(l=!0,u=sc(o,[1,o.shape[0],o.shape[1],o.shape[2]])),ie(ec(a,s),()=>`Error in pool: Either strides or dilations must be 1. Got strides ${a} and dilations '${s}'`);const c=Gl(u.shape,t,a,s,r),h=[c.dilationHeight,c.dilationWidth];let d;d="same"===r?function(e,t){const n=e.map((e,n)=>e+(e-1)*(t[n]-1)).map(e=>e-1),r=n.map(e=>Math.floor(e/2)),s=n.map((e,t)=>e-r[t]);return n.map((e,t)=>[r[t],s[t]])}([c.filterHeight,c.filterWidth],h):[[0,0],[0,0]];const p=1===h[0]&&1===h[1],[f,m]=function(e,t,n){const r=n.map(e=>e[0]),s=n.map(e=>e[1]),a=e.concat(r,s),i=t.map((e,t)=>(e-a[t]%e)%e),o=s.map((e,t)=>e+i[t]);return[t.map((e,t)=>[r[t],o[t]]),t.map((e,t)=>[0,i[t]])]}([c.inHeight,c.inWidth],h,d),g=p?r:"valid",y=p?u:ud(u,h,f),b=("avg"===n?()=>ac(y,t,a,g,i):()=>Vh(y,t,a,g,i))(),x=p?b:dc(b,h,m);return l?sc(x,[x.shape[1],x.shape[2],x.shape[3]]):x}}),cd=qa({prelu_:function(e,t){const n={x:Ha(e,"x","prelu"),alpha:Ha(t,"alpha","prelu")};return Ma.runKernel(lr,n)}}),hd=qa({prod_:function(e,t=null,n=!1){let r=Ha(e,"x","prod");"bool"===r.dtype&&(r=No(r,"int32"));const s={x:r},a={axis:t,keepDims:n};return Ma.runKernel(cr,s,a)}}),dd=qa({raggedGather_:function(e,t,n,r){const s={paramsNestedSplits:e.map((e,t)=>Ha(e,`tensors${t}`,"raggedGather","int32")),paramsDenseValues:Ha(t,"paramsDenseValues","raggedGather"),indices:Ha(n,"indices","raggedGather","int32")},a={outputRaggedRank:r},i=Ma.runKernel(hr,s,a);return{outputNestedSplits:i.slice(0,i.length-1),outputDenseValues:i[i.length-1]}}}),pd=qa({raggedRange_:function(e,t,n){const r=Ha(e,"starts","raggedRange"),s={starts:r,limits:Ha(t,"limits","raggedRange",r.dtype),deltas:Ha(n,"deltas","raggedRange",r.dtype)},a=Ma.runKernel(dr,s);return{rtNestedSplits:a[0],rtDenseValues:a[1]}}}),fd=qa({raggedTensorToTensor_:function(e,t,n,r,s){const a=Ha(e,"shape","raggedTensorToTensor","int32"),i=Ha(t,"values","raggedTensorToTensor"),o={shape:a,values:i,defaultValue:Ha(n,"defaultValue","raggedTensorToTensor",i.dtype),rowPartitionTensors:r.map((e,t)=>Ha(e,`tensors${t}`,"raggedTensorToTensor","int32"))},u={rowPartitionTypes:s};return Ma.runKernel(pr,o,u)}}),md=qa({rand_:function(e,t,n){Ue(e);const r=le(e);let s=null;if(null==n||"float32"===n)s=new Float32Array(r);else if("int32"===n)s=new Int32Array(r);else{if("bool"!==n)throw new Error(`Unknown data type ${n}`);s=new Uint8Array(r)}for(let e=0;e<r;e++)s[e]=t();return Ma.makeTensor(s,e,n)}});var gd=n(391);class yd{constructor(e,t,n,r,s){this.mean=e,this.stdDev=t,this.dtype=n,this.nextVal=NaN,this.truncated=r,this.truncated&&(this.upper=this.mean+2*this.stdDev,this.lower=this.mean-2*this.stdDev);const a=s||Math.random();this.random=gd.alea(a.toString())}nextValue(){if(!isNaN(this.nextVal)){const e=this.nextVal;return this.nextVal=NaN,e}let e,t,n=!1;for(;!n;){let r,s,a;do{r=2*this.random()-1,s=2*this.random()-1,a=r*r+s*s}while(a>=1||0===a);const i=Math.sqrt(-2*Math.log(a)/a);e=this.mean+this.stdDev*r*i,t=this.mean+this.stdDev*s*i,this.truncated&&!this.isValidTruncated(e)||(n=!0)}return this.truncated&&!this.isValidTruncated(t)||(this.nextVal=this.convertValue(t)),this.convertValue(e)}convertValue(e){return null==this.dtype||"float32"===this.dtype?e:Math.round(e)}isValidTruncated(e){return e<=this.upper&&e>=this.lower}}class bd{constructor(e,t,n,r){this.alpha=e,this.beta=1/t,this.dtype=n;const s=r||Math.random();this.randu=gd.alea(s.toString()),this.randn=new yd(0,1,n,!1,this.randu()),this.d=e<1?e+2/3:e-1/3,this.c=1/Math.sqrt(9*this.d)}nextValue(){let e,t,n,r,s,a;for(;;){do{r=this.randn.nextValue(),a=1+this.c*r}while(a<=0);if(a*=a*a,e=r*r,t=1-.331*e*e,n=.5*e+this.d*(1-a+Math.log(a)),s=this.randu(),s<t||Math.log(s)<n)break}return a=1/this.beta*this.d*a,this.alpha<1&&(a*=Math.pow(this.randu(),1/this.alpha)),this.convertValue(a)}convertValue(e){return"float32"===this.dtype?e:Math.round(e)}}class xd{constructor(e=0,t=1,n,r){if(this.canReturnFloat=()=>null==this.dtype||"float32"===this.dtype,this.min=e,this.range=t-e,this.dtype=n,null==r&&(r=Math.random()),"number"==typeof r&&(r=r.toString()),!this.canReturnFloat()&&this.range<=1)throw new Error(`The difference between ${e} - ${t} <= 1 and dtype is not float`);this.random=gd.alea(r)}convertValue(e){return this.canReturnFloat()?e:Math.round(e)}nextValue(){return this.convertValue(this.min+this.range*this.random())}}const wd=qa({randomGamma_:function(e,t,n=1,r="float32",s){if(Ue(e),null==n&&(n=1),null==r&&(r="float32"),"float32"!==r&&"int32"!==r)throw new Error(`Unsupported data type ${r}`);const a=new bd(t,n,r,s),i=ko(e,r);for(let e=0;e<i.values.length;e++)i.values[e]=a.nextValue();return i.toTensor()}}),vd=qa({randomNormal_:function(e,t=0,n=1,r,s){if(Ue(e),null!=r&&"bool"===r)throw new Error(`Unsupported data type ${r}`);const a=new yd(t,n,r,!1,s),i=ko(e,r);for(let e=0;e<i.values.length;e++)i.values[e]=a.nextValue();return i.toTensor()}}),kd=qa({randomStandardNormal_:function(e,t,n){if(null!=t&&"bool"===t)throw new Error(`Unsupported data type ${t}`);return vd(e,0,1,t,n)}}),Nd=qa({randomUniform_:function(e,t=0,n=1,r="float32",s){Ue(e);const a=ko(e,r),i=new xd(t,n,null,s);for(let e=0;e<a.values.length;e++)a.values[e]=i.nextValue();return a.toTensor()}}),Id=qa({randomUniformInt_:function(e,t,n,r){return Nd(e,t,n,"int32",r)}});function Sd(e,t,n=1,r="float32"){if(0===n)throw new Error("Cannot have a step of zero");const s={start:e,stop:t,step:n,dtype:r};return Ma.runKernel(fr,{},s)}const Td=qa({reciprocal_:function(e){const t={x:Ha(e,"x","reciprocal")};return Ma.runKernel(gr,t)}}),Ed=qa({relu_:function(e){const t={x:Ha(e,"x","relu")};return Ma.runKernel(yr,t)}}),Cd=qa({relu6_:function(e){const t={x:Ha(e,"x","relu6")};return Ma.runKernel(Nr,t)}}),$d=qa({reverse_:function(e,t){const n={x:Ha(e,"x","reverse")},r={dims:t};return Ma.runKernel(Ir,n,r)}}),Ad=qa({reverse1d_:function(e){const t=Ha(e,"x","reverse");return ie(1===t.rank,()=>`Error in reverse1D: x must be rank 1 but got rank ${t.rank}.`),$d(t,0)}}),Rd=qa({reverse2d_:function(e,t){const n=Ha(e,"x","reverse");return ie(2===n.rank,()=>`Error in reverse2D: x must be rank 2 but got rank ${n.rank}.`),$d(n,t)}}),_d=qa({reverse3d_:function(e,t){const n=Ha(e,"x","reverse");return ie(3===n.rank,()=>`Error in reverse3D: x must be rank 3 but got rank ${n.rank}.`),$d(n,t)}}),Dd=qa({reverse4d_:function(e,t){const n=Ha(e,"x","reverse");return ie(4===n.rank,()=>`Error in reverse4D: x must be rank 4 but got rank ${n.rank}.`),$d(n,t)}}),Fd=qa({round_:function(e){const t={x:Ha(e,"x","round")};return Ma.runKernel(Sr,t)}}),Md=qa({rsqrt_:function(e){const t={x:Ha(e,"x","rsqrt","float32")};return Ma.runKernel(Tr,t)}}),Od=qa({selu_:function(e){const t={x:Ha(e,"x","selu")};return Ma.runKernel(Rr,t)}}),Ld=qa({separableConv2d_:function(e,t,n,r,s,a=[1,1],i="NHWC"){const o=Ha(e,"x","separableConv2d"),u=Ha(t,"depthwiseFilter","separableConv2d"),l=Ha(n,"pointwiseFilter","separableConv2d");let c=o,h=!1;if(3===o.rank&&(h=!0,c=sc(o,[1,o.shape[0],o.shape[1],o.shape[2]])),"NCHW"===i)throw new Error("separableConv2d currently does not support dataFormat NCHW; only NHWC is supported");ie(4===c.rank,()=>`Error in separableConv2d: input must be rank 4, but got rank ${c.rank}.`),ie(4===u.rank,()=>`Error in separableConv2d: depthwise filter must be rank 4, but got rank ${u.rank}.`),ie(4===l.rank,()=>`Error in separableConv2d: pointwise filter must be rank 4, but got rank ${u.rank}.`),ie(1===l.shape[0],()=>`Error in separableConv2d: the first dimension of pointwise filter  must be 1, but got ${l.shape[0]}.`),ie(1===l.shape[1],()=>`Error in separableConv2d: the second dimension of pointwise filter must be 1, but got ${l.shape[1]}.`);const d=u.shape[2],p=u.shape[3];ie(l.shape[2]===d*p,()=>`Error in separableConv2d: the third dimension of pointwise filter must be ${d*p}, but got ${l.shape[2]}.`);const f=Bc(c,u,r,s,i,a),m=Ec(f,l,1,"valid",i);return h?sc(m,[m.shape[1],m.shape[2],m.shape[3]]):m}}),zd=async function(e,t){const n=Ha(e,"x","setdiff1d"),r=Ha(t,"y","setdiff1d");ie(n.dtype===r.dtype,()=>`x and y should have the same dtype, but got x (${n.dtype}) and y (${r.dtype}).`),ie(1===n.rank,()=>`x should be 1D tensor, but got x (${n.shape}).`),ie(1===r.rank,()=>`y should be 1D tensor, but got y (${r.shape}).`);const s=await n.data(),a=await r.data(),i=new Set(a);let o=0;for(let e=0;e<s.length;e++)i.has(s[e])||o++;const u=new la([o],n.dtype),l=new la([o],"int32");for(let e=0,t=0;e<s.length;e++)i.has(s[e])||(u.values[t]=s[e],l.values[t]=e,t++);return[u.toTensor(),l.toTensor()]},Pd=qa({sign_:function(e){const t={x:Ha(e,"x","sign")};return Ma.runKernel(Mr,t)}}),Bd=qa({sin_:function(e){const t={x:Ha(e,"x","sin","float32")};return Ma.runKernel(Dr,t)}}),Vd=qa({sinh_:function(e){const t={x:Ha(e,"x","sinh")};return Ma.runKernel(Fr,t)}}),Ud=qa({slice1d_:function(e,t,n){const r=Ha(e,"x","slice1d");return ie(1===r.rank,()=>`slice1d expects a rank-1 tensor, but got a rank-${r.rank} tensor`),lc(r,[t],[n])}}),Wd=qa({slice2d_:function(e,t,n){const r=Ha(e,"x","slice2d");return ie(2===r.rank,()=>`slice2d expects a rank-2 tensor, but got a rank-${r.rank} tensor`),lc(r,t,n)}}),Gd=qa({slice3d_:function(e,t,n){const r=Ha(e,"x","slice3d");return ie(3===r.rank,()=>`slice3d expects a rank-3 tensor, but got a rank-${r.rank} tensor`),lc(r,t,n)}}),Hd=qa({slice4d_:function(e,t,n){const r=Ha(e,"x","slice4d");return ie(4===r.rank,()=>`slice4d expects a rank-4 tensor, but got a rank-${r.rank} tensor`),lc(r,t,n)}}),jd=qa({softmax_:function(e,t=-1){const n=Ha(e,"logits","softmax","float32");if(-1===t&&(t=n.rank-1),t!==n.rank-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and dim was ${t}`);const r={logits:n},s={dim:t};return Ma.runKernel(Ur,r,s)}}),Kd=qa({fft_:function(e){ie("complex64"===e.dtype,()=>`The dtype for tf.spectral.fft() must be complex64 but got ${e.dtype}.`);const t={input:e};return Ma.runKernel(on,t)}}),qd=qa({ifft_:function(e){ie("complex64"===e.dtype,()=>`The dtype for tf.spectral.ifft() must be complex64 but got ${e.dtype}.`);const t={input:e};return Ma.runKernel(bn,t)}}),Xd=qa({irfft_:function(e){const t=e.shape[e.shape.length-1],n=e.size/t;let r;if(t<=2){const s=sc(e,[n,t]);r=qd(s)}else{const s=[n,2*(t-1)],a=sc(Fu(e),[n,t]),i=sc(_u(e),[n,t]),o=$d(lc(a,[0,1],[n,t-2]),1),u=$o($d(lc(i,[0,1],[n,t-2]),1),Bo(-1)),l=oc([a,o],1),c=oc([i,u],1),h=sc(Xa(l,c),[s[0],s[1]]);r=qd(h)}if(r=Fu(r),3===e.rank&&0!==e.shape[0]){const t=r,n=e.shape[0];r=sc(r,[n,r.shape[0]/n,r.shape[1]]),t.dispose()}return r}}),Yd=qa({split_:function(e,t,n=0){const r={x:Ha(e,"x","split")},s={numOrSizeSplits:t,axis:n};return Ma.runKernel(Vr,r,s)}}),Zd=qa({rfft_:function(e,t){ie("float32"===e.dtype,()=>`The dtype for rfft() must be real value but got ${e.dtype}`);let n=e.shape[e.shape.length-1];const r=e.size/n;let s;if(null!=t&&t<n){const r=e.shape.map(e=>0),a=e.shape.map(e=>e);a[e.shape.length-1]=t,s=lc(e,r,a),n=t}else if(null!=t&&t>n){const r=e.shape.map(e=>e);r[e.shape.length-1]=t-n,s=oc([e,Hh(r)],e.shape.length-1),n=t}else s=e;const a=_o(s),i=sc(Xa(s,a),[r,n]),o=Kd(i),u=Math.floor(n/2)+1,l=Fu(o),c=_u(o),h=Yd(l,[u,n-u],l.shape.length-1),d=Yd(c,[u,n-u],c.shape.length-1),p=s.shape.slice();return p[s.shape.length-1]=u,sc(Xa(h[0],d[0]),p)}}),Qd=qa({squaredDifference_:function(e,t){let n=Ha(e,"a","squaredDifference"),r=Ha(t,"b","squaredDifference");[n,r]=Ta(n,r),ru(n.shape,r.shape);const s={a:n,b:r};return Ma.runKernel(qr,s,{})}}),Jd=qa({squeeze_:function(e,t){const n=Ha(e,"x","squeeze","string_or_numeric");return sc(n,ve(n.shape,t).newShape)}}),ep=qa({stack_:function(e,t=0){const n=ja(e,"tensors","stack","string_or_numeric");ie(n.length>=1,()=>"Pass at least one tensor to tf.stack"),n.length>0&&ie(t<=n[0].rank,()=>"Axis must be <= rank of the tensor");const r=n,s={axis:t};return Ma.runKernel(ar,r,s)}}),tp=qa({step_:function(e,t=0){const n={x:Ha(e,"x","step")},r={alpha:t};return Ma.runKernel(ps,n,r)}}),np=qa({stridedSlice_:function(e,t,n,r,s=0,a=0,i=0,o=0,u=0){const l={x:Ha(e,"x","stridedSlice","string_or_numeric")},c={begin:t,end:n,strides:r,beginMask:s,endMask:a,ellipsisMask:i,newAxisMask:o,shrinkAxisMask:u};return Ma.runKernel(Zr,l,c)}}),rp=qa({tan_:function(e){const t={x:Ha(e,"x","tan","float32")};return Ma.runKernel(ns,t)}});function sp(e,t){ue(e);const n=Ua(e,t);if(1!==n.length)throw new Error("tensor1d() requires values to be a flat/TypedArray");return Ya(e,null,n,t)}function ap(e,t,n){if(ue(e),null!=t&&2!==t.length)throw new Error("tensor2d() requires shape to have two numbers");const r=Ua(e,n);if(2!==r.length&&1!==r.length)throw new Error("tensor2d() requires values to be number[][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor2d() requires shape to be provided when `values` are a flat/TypedArray");return Ya(e,t,r,n)}function ip(e,t,n){if(ue(e),null!=t&&4!==t.length)throw new Error("tensor4d() requires shape to have four numbers");const r=Ua(e,n);if(4!==r.length&&1!==r.length)throw new Error("tensor4d() requires values to be number[][][][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor4d() requires shape to be provided when `values` are a flat array");return Ya(e,t,r,n)}function op(e,t,n){if(ue(e),null!=t&&5!==t.length)throw new Error("tensor5d() requires shape to have five numbers");const r=Ua(e,n);if(5!==r.length&&1!==r.length)throw new Error("tensor5d() requires values to be number[][][][][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor5d() requires shape to be provided when `values` are a flat array");return Ya(e,t,r,n)}function up(e,t,n){if(ue(e),null!=t&&6!==t.length)throw new Error("tensor6d() requires shape to have six numbers");const r=Ua(e,n);if(6!==r.length&&1!==r.length)throw new Error("tensor6d() requires values to be number[][][][][][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor6d() requires shape to be provided when `values` are a flat array");return Ya(e,t=t||r,r,n)}const lp=qa({tensorScatterUpdate_:function(e,t,n){const r=Ha(e,"tensor","tensorScatterupdate"),s=Ha(t,"indices","tensorScatterupdate","int32"),a=Ha(n,"updates","tensorScatterupdate");if(qu(a,s,r.shape),r.dtype!==a.dtype)throw new Error(`tensor and updates must have the same dtype, instead they are ${r.dtype} and ${a.dtype}.`);const i={tensor:r,indices:s,updates:a};return Ma.runKernel(Cr,i,{})}}),cp=qa({topk_:function(e,t=1,n=!0){const r=Ha(e,"x","topk");if(0===r.rank)throw new Error("topk() expects the input to be of rank 1 or higher");const s=r.shape[r.shape.length-1];if(t<0)throw new Error(`'k' passed to topk() must be >= 0 but got ${t}`);if(t>s)throw new Error(`'k' passed to topk() must be <= the last dimension (${s}) but got ${t}`);const a={x:r},i={k:t,sorted:n},[o,u]=Ma.runKernel(as,a,i);return{values:o,indices:u}}}),hp=qa({truncatedNormal_:function(e,t=0,n=1,r,s){if(Ue(e),null!=r&&"bool"===r)throw new Error("Unsupported data type $ { dtype }");const a=new yd(t,n,r,!0,s),i=ko(e,r);for(let e=0;e<i.values.length;e++)i.values[e]=a.nextValue();return i.toTensor()}}),dp=qa({unique_:function(e,t=0){const n=Ha(e,"x","unique","string_or_numeric");ie(n.rank>0,()=>"The input tensor must be at least 1D");const r={x:n},s={axis:t},[a,i]=Ma.runKernel(us,r,s);return{values:a,indices:i}}}),pp=qa({unsortedSegmentSum_:function(e,t,n){const r=Ha(e,"x","unsortedSegmentSum"),s=Ha(t,"segmentIds","unsortedSegmentSum","int32");ie(pe(n),()=>"numSegments must be of dtype int");const a={x:r,segmentIds:s},i={numSegments:n};return Ma.runKernel(cs,a,i)}}),fp=qa({unstack_:function(e,t=0){const n=Ha(e,"x","unstack","string_or_numeric");ie(t>=-n.shape.length&&t<n.shape.length,()=>`Axis = ${t} is not in [-${n.shape.length}, ${n.shape.length})`);const r={value:n},s={axis:t};return Ma.runKernel(ls,r,s)}});function mp(e,t){return Ph(e,t,"right")}function gp(e,t=!0,n,r){return Ma.makeVariable(e,t,n,r)}function yp(e,t){const n=[];for(let e=0;e<t.length;e++)t[e]&&n.push(e);const r=ko(e,"int32"),s=ko([n.length,e.length],"int32");for(let t=0;t<n.length;t++){const a=r.indexToLoc(n[t]),i=t*e.length;s.values.set(a,i)}return s.toTensor()}const bp=async function(e){const t=Ha(e,"condition","whereAsync","bool"),n=await t.data(),r=yp(t.shape,n);return e!==t&&t.dispose(),r},xp=async function(e,t,n){const r=Ha(e,"tensor","boolMask"),s=Ha(t,"mask","boolMask","bool"),a=null==n?0:n,i=s.rank,o=r.shape;ie(i>0,()=>"mask cannot be scalar"),oe(o.slice(a,a+i),s.shape,"mask's shape must match the first K dimensions of tensor's shape,");let u=1;for(let e=a;e<a+i;e++)u*=o[e];const l=o.slice(0,a).concat([u],o.slice(a+i)),c=sc(r,l),h=sc(s,[-1]),d=await bp(h),p=Jd(d,[1]),f=yh(c,p,a);return e!==r&&r.dispose(),t!==s&&s.dispose(),p.dispose(),c.dispose(),h.dispose(),d.dispose(),f},wp=qa({movingAverage_:function(e,t,n,r,s=!0){const a=Ha(e,"v","movingAverage"),i=Ha(t,"x","movingAverage"),o=Ha(n,"decay","movingAverage");Ea(a,i),ie(de(a.shape,i.shape),()=>"Shape mismatch in v and x");const u=Bo(1),l=Qo(u,o);let c=$o(Qo(i,a),l);if(s){ie(null!=r,()=>"When using zeroDebias: true, step is required.");const e=Ha(r,"step","movingAverage");c=Co(c,Qo(u,Zo(o,e)))}return To(a,c)}}),vp=qa({scatterND_:function(e,t,n){Ue(n);const r=Ha(e,"indices","scatterND","int32"),s=Ha(t,"updates","scatterND");qu(s,r,n);const a={indices:r,updates:s},i={shape:n};return Ma.runKernel(Er,a,i)}}),kp=qa({sparseToDense_:function(e,t,n,r=0){Ue(n);const s=Ha(e,"sparseIndices","sparseToDense","int32"),a=Ha(t,"sparseValues","sparseToDense","string_or_numeric"),i=Ha(r,"defaultValue","sparseToDense",a.dtype);!function(e,t,n,r){if("int32"!==e.dtype)throw new Error(`tf.sparseToDense() expects the indices to be int32 type, but the dtype was ${e.dtype}.`);if(e.rank>2)throw new Error(`sparseIndices should be a scalar, vector, or matrix, but got shape ${e.shape}.`);const s=e.rank>0?e.shape[0]:1,a=e.rank>1?e.shape[1]:1;if(n.length!==a)throw new Error(`outputShape has incorrect number of elements:, ${n.length}, should be: ${a}.`);const i=t.size;if(0!==t.rank&&(1!==t.rank||i!==s))throw new Error(`sparseValues has incorrect shape ${t.shape}, should be [] or [${s}]`);if(t.dtype!==r.dtype)throw new Error("sparseValues.dtype must match defaultValues.dtype")}(s,a,n,i);const o={sparseIndices:s,sparseValues:a,defaultValue:i},u={outputShape:n};return Ma.runKernel(Kr,o,u)}}),Np=qa({gatherND_:function(e,t){const n=Ha(t,"indices","gatherND","int32"),r={params:Ha(e,"x","gatherND","string_or_numeric"),indices:n};return Ma.runKernel(fn,r)}}),Ip=qa({dropout_:function(e,t,n,r){const s=Ha(e,"x","dropout");if(ie("float32"===s.dtype,()=>`x has to be a floating point tensor since it's going to be scaled, but got a ${s.dtype} tensor instead.`),ie(t>=0&&t<1,()=>`rate must be a float in the range [0, 1), but got ${t}.`),0===t)return e instanceof pa?s.clone():s;const a=function(e,t){if(null==t)return e.shape.slice();if(de(e.shape,t))return t;if(e.shape.length===t.length){const n=[];for(let r=0;r<e.shape.length;r++)null==t[r]&&null!=e.shape[r]?n.push(e.shape[r]):n.push(t[r]);return n}return t}(s,n),i=1-t,o=Co(gh(To(Nd(a,0,1,"float32",r),i)),i);return $o(s,o)}});function Sp(e){return Math.floor(Math.pow(2,Math.ceil(Math.log(e)/Math.log(2))))}function Tp(e,t,n){const r=1-e%2,s=new Float32Array(e);for(let a=0;a<e;++a){const i=2*Math.PI*a/(e+r-1);s[a]=t-n*Math.cos(i)}return sp(s,"float32")}const Ep=async function(e,t,n=1){const r=Ha(e,"predictions","inTopK"),s=Ha(t,"targets","inTopK");ie(r.rank>1,()=>`inTopK() expects the predictions to be of rank 2 or higher, but got ${r.rank}`),ie(r.rank-1===s.rank,()=>`predictions rank should be 1 larger than targets rank, but got predictions rank ${r.rank} and targets rank ${s.rank}`),oe(r.shape.slice(0,r.shape.length-1),s.shape,"predictions's shape should be align with the targets' shape, except the last dimension.");const a=r.shape[r.shape.length-1];ie(n>0&&n<=a,()=>`'k' passed to inTopK() must be > 0 && <= the predictions last dimension (${a}), but got ${n}`);const i=await r.data(),o=await s.data(),[u,l]=[i.length/a,a],c=ke("bool",u);for(let e=0;e<u;e++){const t=e*l,r=i.subarray(t,t+l),s=[];for(let e=0;e<r.length;e++)s.push({value:r[e],index:e});s.sort((e,t)=>t.value-e.value),c[e]=0;for(let t=0;t<n;t++)if(s[t].index===o[e]){c[e]=1;break}}return e!==r&&r.dispose(),t!==s&&s.dispose(),Za(c,s.shape,"bool")},Cp=qa({conv2DBackpropFilter_:function(e,t,n,r,s,a="NHWC",i){let o=e;3===e.rank&&(o=sc(e,[1,e.shape[0],e.shape[1],e.shape[2]]));let u=t;3===u.rank&&(u=sc(t,[1,t.shape[0],t.shape[1],t.shape[2]])),ie(4===o.rank,()=>`Error in conv2dDerFilter: input must be rank 4, but got shape ${o.shape}.`),ie(4===u.rank,()=>`Error in conv2dDerFilter: dy must be rank 4, but got shape ${u.shape}.`),ie(4===n.length,()=>`Error in conv2dDerFilter: filterShape must be length 4, but got ${n}.`);const l="NHWC"===a?o.shape[3]:o.shape[1],c="NHWC"===a?u.shape[3]:u.shape[1];ie(l===n[2],()=>`Error in conv2dDerFilter: depth of input ${l}) must match input depth in filter (${n[2]}.`),ie(c===n[3],()=>`Error in conv2dDerFilter: depth of dy (${c}) must match output depth for filter (${n[3]}).`),rc("conv2dDerFilter",s,i);const h={x:o,dy:u},d={strides:r,pad:s,dataFormat:a,dimRoundingMode:i,filterShape:n};return Ma.runKernel(Rt,h,d)}});function $p(e,t,n){if(null==n||"linear"===n)return e;if("relu"===n)return $o(e,tp(t));throw new Error(`Cannot compute gradient for fused activation ${n}.`)}function Ap(e,t){let n=t;const r=nu(e.shape,t.shape);return r.length>0&&(n=oh(n,r)),sc(n,e.shape)}function Rp(e,t,n,r){if("linear"===t)return e;if("relu"===t)return Ed(e);if("elu"===t)return qc(e);if("relu6"===t)return Cd(e);if("prelu"===t)return cd(e,n);if("leakyrelu"===t)return Nh(e,r);if("sigmoid"===t)return uc(e);throw new Error(`Unknown fused activation ${t}.`)}const _p=(e,t)=>!(e>0)||"linear"===t,Dp=qa({fusedConv2d_:function({x:e,filter:t,strides:n,pad:r,dataFormat:s="NHWC",dilations:a=[1,1],dimRoundingMode:i,bias:o,activation:u="linear",preluActivationWeights:l,leakyreluAlpha:c}){if(u=u||"linear",!1===_p(Ma.state.gradientDepth,u)){ie("NHWC"===s,()=>`Error in fused conv2d: got dataFormat of ${s} but only NHWC is currently supported for the case of gradient depth is 0 and the activation is not linear.`);let h=Ec(e,t,n,r,s,a,i);return null!=o&&(h=To(h,o)),Rp(h,u,l,c)}const h=Ha(e,"x","conv2d","float32"),d=Ha(t,"filter","conv2d","float32");let p=h,f=!1;3===h.rank&&(f=!0,p=sc(h,[1,h.shape[0],h.shape[1],h.shape[2]])),ie(4===p.rank,()=>`Error in fused conv2d: input must be rank 4, but got rank ${p.rank}.`),ie(4===d.rank,()=>`Error in fused conv2d: filter must be rank 4, but got rank ${d.rank}.`),rc("fused conv2d",r,i);const m="NHWC"===s?p.shape[3]:p.shape[1];ie(d.shape[2]===m,()=>`Error in conv2d: depth of input (${m}) must match input depth for filter ${d.shape[2]}.`),ie(ec(n,a),()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${n} and dilations '${a}'`);const g=jl(p.shape,d.shape,n,a,r,i);let y,b;if(null!=o&&(y=Ha(o,"bias","fused conv2d"),[y]=Ta(y,h),"NHWC"===s?ru(g.outShape,y.shape):(ie(y.shape.length<=1,()=>`Error in fused conv2d: only supports scalar or 1-D Tensor bias for NCHW format but got the bias of rank-${y.shape.length}.`),ie(0===y.shape.length||y.shape[0]===g.outChannels||1===y.shape[0],()=>`Error in fused conv2d: bias shape (${y.shape}) is not compatible with the number of output channels (${g.outChannels})`))),null!=l){const e=l.shape;if(ie(e.length<=1||3===e.length,()=>`Error in fused conv2d: only supports scalar, 1-D Tensor or 3-D Tensor PReLU activation weights but got a tensor of rank-${e.length}.`),1===e.length)ie(1===e[0]||e[0]===g.outChannels,()=>`Error in fused conv2d: PReLU activation weights (${e}) is not compatible with the number of output channels (${g.outChannels}).`);else if(3===e.length)try{ru(e,g.outShape)}catch(t){const n=`Error in fused conv2d: PReLU activation weights (${e}) is not compatible with the output shape of the conv2d (${g.outShape}).`;throw Error(n)}b=Ha(l,"prelu weights","fused conv2d")}const x=(e,t)=>{ie("NHWC"===s,()=>`Error in gradient of fused conv2D: got dataFormat of ${s} but only NHWC is currently supported.`);const[i,o,l,c]=t,h=$p(e,l,u);ie(Jl(a),()=>`Error in gradient of fused conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${a}'`);const d=[$c(o.shape,h,i,n,r),Cp(o,h,i.shape,n,r)];if(null!=c){const e=Ap(c,h);d.push(e)}return d},w={x:p,filter:d,bias:y,preluActivationWeights:b},v={strides:n,pad:r,dataFormat:s,dilations:a,dimRoundingMode:i,activation:u,leakyreluAlpha:c};if(null==o){const e=zo((e,t,n)=>{let r=Ma.runKernel(ys,w,v);return n([t,e,r]),f&&(r=sc(r,[r.shape[1],r.shape[2],r.shape[3]])),{value:r,gradFunc:x}});return e(p,d)}{const e=zo((e,t,n,r)=>{let s=Ma.runKernel(ys,w,v);return r([t,e,s,n]),f&&(s=sc(s,[s.shape[1],s.shape[2],s.shape[3]])),{value:s,gradFunc:x}});return e(p,d,y)}}}),Fp=qa({depthwiseConv2dNativeBackpropFilter_:function(e,t,n,r,s,a=[1,1],i){let o=e;3===e.rank&&(o=sc(e,[1,e.shape[0],e.shape[1],e.shape[2]]));let u=t;3===u.rank&&(u=sc(t,[1,t.shape[0],t.shape[1],t.shape[2]]));const l={x:o,dy:u},c={strides:r,pad:s,dimRoundingMode:i,dilations:a,filterShape:n};return Ma.runKernel(Gt,l,c)}}),Mp=qa({depthwiseConv2dNativeBackpropInput_:function(e,t,n,r,s,a=[1,1],i){let o=t,u=!1;3===t.rank&&(u=!0,o=sc(t,[1,t.shape[0],t.shape[1],t.shape[2]]));const l={dy:o,filter:n},c={strides:r,pad:s,dimRoundingMode:i,dilations:a,inputShape:e},h=Ma.runKernel(Ht,l,c);return u?sc(h,[h.shape[1],h.shape[2],h.shape[3]]):h}}),Op=qa({fusedDepthwiseConv2d_:function({x:e,filter:t,strides:n,pad:r,dataFormat:s="NHWC",dilations:a=[1,1],dimRoundingMode:i,bias:o,activation:u="linear",preluActivationWeights:l,leakyreluAlpha:c}){if(!1===_p(Ma.state.gradientDepth,u)){let h=Bc(e,t,n,r,s,a,i);return null!=o&&(h=To(h,o)),Rp(h,u,l,c)}const h=Ha(e,"x","depthwiseConv2d","float32"),d=Ha(t,"filter","depthwiseConv2d","float32");let p=h,f=!1;3===h.rank&&(f=!0,p=sc(h,[1,h.shape[0],h.shape[1],h.shape[2]])),ie(4===p.rank,()=>`Error in fused depthwiseConv2d: input must be rank 4, but got rank ${p.rank}.`),ie(4===d.rank,()=>`Error in fused depthwiseConv2d: filter must be rank 4, but got rank ${d.rank}.`),ie(p.shape[3]===d.shape[2],()=>`Error in fused depthwiseConv2d: number of input channels (${p.shape[3]}) must match the inChannels dimension in filter ${d.shape[2]}.`),null==a&&(a=[1,1]),ie(ec(n,a),()=>`Error in fused depthwiseConv2d: Either strides or dilations must be 1. Got strides ${n} and dilations '${a}'`),rc("fused depthwiseConv2d",r,i);const m=jl(p.shape,d.shape,n,a,r,i,!0);let g,y;null!=o&&(g=Ha(o,"bias","fused conv2d"),[g]=Ta(g,h),ru(m.outShape,g.shape)),null!=l&&(y=Ha(l,"prelu weights","fused depthwiseConv2d"));const b=(e,t)=>{ie(Jl(a),()=>`Error in gradient of fused depthwiseConv2d: dilation rates greater than 1 are not yet supported. Got dilations '${a}'`);const[s,o,l,c]=t,h=$p(e,l,u),d=Mp(o.shape,h,s,n,r,a,i),p=Fp(o,h,s.shape,n,r,a,i);return null!=c?[d,p,Ap(g,h)]:[d,p]},x={x:p,filter:d,bias:g,preluActivationWeights:y},w={strides:n,pad:r,dataFormat:s,dilations:a,dimRoundingMode:i,activation:u,leakyreluAlpha:c};if(null==o){const e=zo((e,t,n)=>{let r=Ma.runKernel(bs,x,w);return n([t,e,r]),f&&(r=sc(r,[r.shape[1],r.shape[2],r.shape[3]])),{value:r,gradFunc:b}});return e(p,d)}{const e=zo((e,t,n,r)=>{let s=Ma.runKernel(bs,x,w);return r([t,e,s,n]),f&&(s=sc(s,[s.shape[1],s.shape[2],s.shape[3]])),{value:s,gradFunc:b}});return e(p,d,g)}}}),Lp=qa({fusedMatMul_:function({a:e,b:t,transposeA:n=!1,transposeB:r=!1,bias:s,activation:a="linear",preluActivationWeights:i,leakyreluAlpha:o=.2}){if(!1===_p(Ma.state.gradientDepth,a)){let u=Au(e,t,n,r);return null!=s&&(u=To(u,s)),Rp(u,a,i,o)}let u=Ha(e,"a","fused matMul"),l=Ha(t,"b","fused matMul");[u,l]=Ta(u,l);const c=n?u.shape[u.rank-2]:u.shape[u.rank-1],h=r?l.shape[l.rank-1]:l.shape[l.rank-2],d=n?u.shape[u.rank-1]:u.shape[u.rank-2],p=r?l.shape[l.rank-2]:l.shape[l.rank-1],f=u.shape.slice(0,-2),m=l.shape.slice(0,-2),g=le(f),y=le(m);ie(c===h,()=>`Error in fused matMul: inner shapes (${c}) and (${h}) of Tensors with shapes ${u.shape} and ${l.shape} and transposeA=${n} and transposeB=${r} must match.`);const b=ru(u.shape.slice(0,-2),l.shape.slice(0,-2)).concat([d,p]),x=sc(u,n?[g,c,d]:[g,d,c]),w=sc(l,r?[y,p,h]:[y,h,p]);let v,k;null!=s&&(v=Ha(s,"bias","fused matMul"),[v]=Ta(v,u),ru(b,v.shape)),null!=i&&(k=Ha(i,"prelu weights","fused matMul"));const N=(e,t)=>{const[i,o,u,l]=t,c=$p(sc(e,u.shape),u,a);let h,d;return n||r?!n&&r?(h=Au(c,o,!1,!1),d=Au(c,i,!0,!1)):n&&!r?(h=Au(o,c,!1,!0),d=Au(i,c,!1,!1)):(h=Au(o,c,!0,!0),d=Au(c,i,!0,!0)):(h=Au(c,o,!1,!0),d=Au(i,c,!0,!1)),null!=s?[h,d,Ap(l,c)]:[h,d]},I={a:x,b:w,bias:v,preluActivationWeights:k},S={transposeA:n,transposeB:r,activation:a,leakyreluAlpha:o};if(null==s){const e=zo((e,t,n)=>{const r=Ma.runKernel(gs,I,S);return n([e,t,r]),{value:sc(r,b),gradFunc:N}});return e(x,w)}{const e=zo((e,t,n,r)=>{const s=Ma.runKernel(gs,I,S);return r([e,t,s,n]),{value:sc(s,b),gradFunc:N}});return e(x,w,v)}}}),zp=qa({hammingWindow_:function(e){return Tp(e,.54,.46)}}),Pp=qa({hannWindow_:function(e){return Tp(e,.5,.5)}}),Bp=qa({frame_:function(e,t,n,r=!1,s=0){let a=0;const i=[];for(;a+t<=e.size;)i.push(lc(e,a,t)),a+=n;if(r)for(;a<e.size;){const r=a+t-e.size,o=oc([lc(e,a,t-r),Xo([r],s)]);i.push(o),a+=n}return 0===i.length?ap([],[0,t]):sc(oc(i),[i.length,t])}}),Vp=qa({stft_:function(e,t,n,r,s=Pp){null==r&&(r=Sp(t));const a=Bp(e,t,n),i=$o(a,s(t));return Zd(i,r)}}),Up=qa({cropAndResize_:function(e,t,n,r,s="bilinear",a=0){const i=Ha(e,"image","cropAndResize"),o=Ha(t,"boxes","cropAndResize","float32"),u=Ha(n,"boxInd","cropAndResize","int32"),l=o.shape[0];ie(4===i.rank,()=>`Error in cropAndResize: image must be rank 4,but got rank ${i.rank}.`),ie(2===o.rank&&4===o.shape[1],()=>`Error in cropAndResize: boxes must be have size [${l},4] but had shape ${o.shape}.`),ie(1===u.rank&&u.shape[0]===l,()=>`Error in cropAndResize: boxInd must be have size [${l}] but had shape ${o.shape}.`),ie(2===r.length,()=>`Error in cropAndResize: cropSize must be of length 2, but got length ${r.length}.`),ie(r[0]>=1&&r[1]>=1,()=>`cropSize must be atleast [1,1], but was ${r}`),ie("bilinear"===s||"nearest"===s,()=>`method must be bilinear or nearest, but was ${s}`);const c={image:i,boxes:o,boxInd:u},h={method:s,extrapolationValue:a,cropSize:r};return Ma.runKernel(Bt,c,h)}}),Wp=qa({flipLeftRight_:function(e){const t=Ha(e,"image","flipLeftRight","float32");ie(4===t.rank,()=>`Error in flipLeftRight: image must be rank 4,but got rank ${t.rank}.`);const n={image:t};return Ma.runKernel(ln,n,{})}}),Gp=qa({grayscaleToRGB_:function(e){const t=Ha(e,"image","grayscaleToRGB"),n=t.rank-1,r=t.shape[n];ie(t.rank>=2,()=>`Error in grayscaleToRGB: images must be at least rank 2, but got rank ${t.rank}.`),ie(1===r,()=>`Error in grayscaleToRGB: last dimension of a grayscale image should be size 1, but got size ${r}.`);const s=new Array(t.rank);return s.fill(1,0,n),s[n]=3,fh(t,s)}}),Hp=qa({rgbToGrayscale_:function(e){const t=Ha(e,"image","RGBToGrayscale"),n=t.rank-1,r=t.shape[n];ie(t.rank>=2,()=>`Error in RGBToGrayscale: images must be at least rank 2, but got rank ${t.rank}.`),ie(3===r,()=>`Error in RGBToGrayscale: last dimension of an RGB image should be size 3, but got size ${r}.`);const s=t.dtype,a=No(t,"float32"),i=sp([.2989,.587,.114]);let o;switch(t.rank){case 2:o=Kc("ij,j->i",a,i);break;case 3:o=Kc("ijk,k->ij",a,i);break;case 4:o=Kc("ijkl,l->ijk",a,i);break;case 5:o=Kc("ijklm,m->ijkl",a,i);break;case 6:o=Kc("ijklmn,n->ijklm",a,i);break;default:throw new Error("Not a valid tensor rank.")}return o=dh(o,-1),No(o,s)}}),jp=qa({rotateWithOffset_:function(e,t,n=0,r=.5){const s=Ha(e,"image","rotateWithOffset","float32");ie(4===s.rank,()=>`Error in rotateWithOffset: image must be rank 4,but got rank ${s.rank}.`);const a={image:s},i={radians:t,fillValue:n,center:r};return Ma.runKernel(ms,a,i)}});function Kp(e,t,n,r,s,a){null==r&&(r=.5),null==s&&(s=Number.NEGATIVE_INFINITY),null==a&&(a=0);const i=e.shape[0];return n=Math.min(n,i),ie(0<=r&&r<=1,()=>`iouThreshold must be in [0, 1], but was '${r}'`),ie(2===e.rank,()=>`boxes must be a 2D tensor, but was of rank '${e.rank}'`),ie(4===e.shape[1],()=>`boxes must have 4 columns, but 2nd dimension was ${e.shape[1]}`),ie(1===t.rank,()=>"scores must be a 1D tensor"),ie(t.shape[0]===i,()=>`scores has incompatible shape with boxes. Expected ${i}, but was ${t.shape[0]}`),ie(0<=a&&a<=1,()=>`softNmsSigma must be in [0, 1], but was '${a}'`),{maxOutputSize:n,iouThreshold:r,scoreThreshold:s,softNmsSigma:a}}const qp=qa({nonMaxSuppression_:function(e,t,n,r=.5,s=Number.NEGATIVE_INFINITY){const a=Ha(e,"boxes","nonMaxSuppression","float32"),i=Ha(t,"scores","nonMaxSuppression","float32"),o=Kp(a,i,n,r,s),u={maxOutputSize:n=o.maxOutputSize,iouThreshold:r=o.iouThreshold,scoreThreshold:s=o.scoreThreshold};return Ma.runKernel(er,{boxes:a,scores:i},u)}});function Xp(e,t,n){const r=function(e,t,n){return function(e,t,n){let r=0,s=e.length,a=0,i=!1;for(;r<s;){a=r+(s-r>>>1);const o=n(t,e[a]);o>0?r=a+1:(s=a,i=!o)}return i?r:-r-1}(e,t,n||Yp)}(e,t,n),s=r<0?-(r+1):r;e.splice(s,0,t)}function Yp(e,t){return e>t?1:e<t?-1:0}function Zp(e,t,n,r,s){return ef(e,t,n,r,s,0)}function Qp(e,t,n,r,s,a){return ef(e,t,n,r,s,0,!1,a,!0)}function Jp(e,t,n,r,s,a){return ef(e,t,n,r,s,a,!0)}function ef(e,t,n,r,s,a,i=!1,o=!1,u=!1){const l=[];for(let e=0;e<t.length;e++)t[e]>s&&l.push({score:t[e],boxIndex:e,suppressBeginIndex:0});l.sort(rf);const c=a>0?-.5/a:0,h=[],d=[];for(;h.length<n&&l.length>0;){const t=l.pop(),{score:n,boxIndex:a,suppressBeginIndex:i}=t;if(n<s)break;let o=!1;for(let n=h.length-1;n>=i;--n){const i=tf(e,a,h[n]);if(i>=r){o=!0;break}if(t.score=t.score*nf(r,c,i),t.score<=s)break}t.suppressBeginIndex=h.length,o||(t.score===n?(h.push(a),d.push(t.score)):t.score>s&&Xp(l,t,rf))}const p=h.length,f=n-p;o&&f>0&&(h.push(...new Array(f).fill(0)),d.push(...new Array(f).fill(0)));const m={selectedIndices:h};return i&&(m.selectedScores=d),u&&(m.validOutputs=p),m}function tf(e,t,n){const r=e.subarray(4*t,4*t+4),s=e.subarray(4*n,4*n+4),a=Math.min(r[0],r[2]),i=Math.min(r[1],r[3]),o=Math.max(r[0],r[2]),u=Math.max(r[1],r[3]),l=Math.min(s[0],s[2]),c=Math.min(s[1],s[3]),h=Math.max(s[0],s[2]),d=Math.max(s[1],s[3]),p=(o-a)*(u-i),f=(h-l)*(d-c);if(p<=0||f<=0)return 0;const m=Math.max(a,l),g=Math.max(i,c),y=Math.min(o,h),b=Math.min(u,d),x=Math.max(y-m,0)*Math.max(b-g,0);return x/(p+f-x)}function nf(e,t,n){const r=Math.exp(t*n*n);return n<=e?r:0}function rf(e,t){return e.score-t.score||e.score===t.score&&t.boxIndex-e.boxIndex}const sf=qa({nonMaxSuppressionWithScore_:function(e,t,n,r=.5,s=Number.NEGATIVE_INFINITY,a=0){const i=Ha(e,"boxes","nonMaxSuppression"),o=Ha(t,"scores","nonMaxSuppression"),u=Kp(i,o,n,r,s,a),l={boxes:i,scores:o},c={maxOutputSize:n=u.maxOutputSize,iouThreshold:r=u.iouThreshold,scoreThreshold:s=u.scoreThreshold,softNmsSigma:a=u.softNmsSigma},h=Ma.runKernel(nr,l,c);return{selectedIndices:h[0],selectedScores:h[1]}}}),af=qa({nonMaxSuppressionPadded_:function(e,t,n,r=.5,s=Number.NEGATIVE_INFINITY,a=!1){const i=Ha(e,"boxes","nonMaxSuppression"),o=Ha(t,"scores","nonMaxSuppression"),u=Kp(i,o,n,r,s,null),l={boxes:i,scores:o},c={maxOutputSize:u.maxOutputSize,iouThreshold:u.iouThreshold,scoreThreshold:u.scoreThreshold,padToMaxOutputSize:a},h=Ma.runKernel(tr,l,c);return{selectedIndices:h[0],validOutputs:h[1]}}}),of=qa({resizeBilinear_:function(e,t,n=!1,r=!1){const s=Ha(e,"images","resizeBilinear");ie(3===s.rank||4===s.rank,()=>`Error in resizeBilinear: x must be rank 3 or 4, but got rank ${s.rank}.`),ie(2===t.length,()=>`Error in resizeBilinear: new shape must 2D, but got shape ${t}.`),ie(!1===r||!1===n,()=>"Error in resizeBilinear: If halfPixelCenters is true, alignCorners must be false.");let a=s,i=!1;3===s.rank&&(i=!0,a=sc(s,[1,s.shape[0],s.shape[1],s.shape[2]]));const[]=t,o={images:a},u={alignCorners:n,halfPixelCenters:r,size:t},l=Ma.runKernel(vr,o,u);return i?sc(l,[l.shape[1],l.shape[2],l.shape[3]]):l}}),uf=qa({resizeNearestNeighbor_:function(e,t,n=!1,r=!1){const s=Ha(e,"images","resizeNearestNeighbor");ie(3===s.rank||4===s.rank,()=>`Error in resizeNearestNeighbor: x must be rank 3 or 4, but got rank ${s.rank}.`),ie(2===t.length,()=>`Error in resizeNearestNeighbor: new shape must 2D, but got shape ${t}.`),ie("float32"===s.dtype||"int32"===s.dtype,()=>"`images` must have `int32` or `float32` as dtype"),ie(!1===r||!1===n,()=>"Error in resizeNearestNeighbor: If halfPixelCenters is true, alignCorners must be false.");let a=s,i=!1;3===s.rank&&(i=!0,a=sc(s,[1,s.shape[0],s.shape[1],s.shape[2]]));const[]=t,o={images:a},u={alignCorners:n,halfPixelCenters:r,size:t},l=Ma.runKernel(xr,o,u);return i?sc(l,[l.shape[1],l.shape[2],l.shape[3]]):l}}),lf=qa({threshold_:function(e,t="binary",n=!1,r=.5){const s=Ha(e,"image","threshold"),a=s.shape[0]*s.shape[1];let i,o,u,l,c=$o(sp([r]),255);if(ie(3===s.rank,()=>`Error in threshold: image must be rank 3,but got rank ${s.rank}.`),ie(3===s.shape[2]||1===s.shape[2],()=>`Error in threshold: image color channel must be equal to 3 or 1but got ${s.shape[2]}.`),ie("int32"===s.dtype||"float32"===s.dtype,()=>`Error in dtype: image dtype must be int32 or float32,but got dtype ${s.dtype}.`),ie("otsu"===t||"binary"===t,()=>`Method must be binary or otsu, but was ${t}`),3===s.shape[2]){[i,o,u]=Yd(s,[1,1,1],-1);const e=$o(i,.2989),t=$o(o,.587),n=$o(u,.114);l=To(To(e,t),n)}else l=e;"otsu"===t&&(c=function(e,t){let n,r,s,a,i,o,u=sp([-1]),l=sp([0]),c=sp([0]);for(let h=0;h<e.size-1;h++){n=lc(e,0,h+1),r=lc(e,h+1),i=Co(oh(n),t),o=Co(oh(r),t);const d=oh($o(n,Sd(0,n.size)));s=Co(d,oh(n));const p=Xo(r.shape,n.size),f=To(Sd(0,r.size),p),m=$o(r,f);a=Co(oh(m),oh(r));const g=Qo(s,a),y=Qo(s,a),b=$o(i,o);c=$o($o(b,g),y);const x=bh(c,l);l=Gc(x,c,l),u=Gc(x,sp([h]),u)}return u}(yc(No(Fd(l),"int32"),Za([]),256),a));const h=n?Sh(l,c):bh(l,c);return No($o(h,255),"int32")}}),cf=qa({transform_:function(e,t,n="nearest",r="constant",s=0,a){const i=Ha(e,"image","transform","float32"),o=Ha(t,"transforms","transform","float32");ie(4===i.rank,()=>`Error in transform: image must be rank 4,but got rank ${i.rank}.`),ie(2===o.rank&&(o.shape[0]===i.shape[0]||1===o.shape[0])&&8===o.shape[1],()=>"Error in transform: Input transform should be batch x 8 or 1 x 8"),ie(null==a||2===a.length,()=>`Error in transform: outputShape must be [height, width] or null, but got ${a}.`);const u={image:i,transforms:o},l={interpolation:n,fillMode:r,fillValue:s,outputShape:a};return Ma.runKernel(is,u,l)}}),hf=qa({bandPart_:function(e,t,n){const r=Ha(e,"a","bandPart");ie(r.rank>=2,()=>`bandPart(): Rank must be at least 2, got ${r.rank}.`);const s=r.shape,[a,i]=r.shape.slice(-2);let o,u;"number"==typeof t?(ie(t%1==0,()=>`bandPart(): numLower must be an integer, got ${t}.`),ie(t<=a,()=>`bandPart(): numLower (${t}) must not be greater than the number of rows (${a}).`),o=Ha(t<0?a:t,"numLower","bandPart")):(ie("int32"===t.dtype,()=>"bandPart(): numLower's dtype must be an int32."),o=Gc(Ih(t,0),a,qh(t,a))),"number"==typeof n?(ie(n%1==0,()=>`bandPart(): numUpper must be an integer, got ${n}.`),ie(n<=i,()=>`bandPart(): numUpper (${n}) must not be greater than the number of columns (${i}).`),u=Ha(n<0?i:n,"numUpper","bandPart")):(ie("int32"===n.dtype,()=>"bandPart(): numUpper's dtype must be an int32."),u=Gc(Ih(n,0),i,qh(n,i)));const l=sc(Sd(0,a,1,"int32"),[-1,1]),c=Sd(0,i,1,"int32"),h=Qo(l,c),d=Fh(Sh(h,o),xh(h,Du(u))),p=Hh([a,i],r.dtype);return sc(ep(fp(sc(r,[-1,a,i])).map(e=>Gc(d,e,p))),s)}}),df=qa({gramSchmidt_:function(e){let t;if(Array.isArray(e)){t=!1,ie(null!=e&&e.length>0,()=>"Gram-Schmidt process: input must not be null, undefined, or empty");const n=e[0].shape[0];for(let t=1;t<e.length;++t)ie(e[t].shape[0]===n,()=>`Gram-Schmidt: Non-unique lengths found in the input vectors: (${e[t].shape[0]} vs. ${n})`)}else t=!0,e=Yd(e,e.shape[0],0).map(e=>Jd(e,[0]));ie(e.length<=e[0].shape[0],()=>`Gram-Schmidt: Number of vectors (${e.length}) exceeds number of dimensions (${e[0].shape[0]}).`);const n=[],r=e;for(let t=0;t<e.length;++t)n.push(Ma.tidy(()=>{let e=r[t];if(t>0)for(let r=0;r<t;++r){const t=$o(oh($o(n[r],e)),n[r]);e=Qo(e,t)}return Co(e,lh(e,"euclidean"))}));return t?ep(n,0):n}});function pf(e,t=!1){return Ma.tidy(()=>{ie(2===e.shape.length,()=>`qr2d() requires a 2D Tensor, but got a ${e.shape.length}D Tensor.`);const n=e.shape[0],r=e.shape[1];let s=mh(n),a=Io(e);const i=ap([[1]],[1,1]);let o=Io(i);const u=n>=r?r:n;for(let e=0;e<u;++e){const t=a,u=o,l=s;[o,a,s]=Ma.tidy(()=>{const t=lc(a,[e,e],[n-e,1]),u=lh(t),l=lc(a,[e,e],[1,1]),c=Gc(bh(l,0),ap([[-1]]),ap([[1]])),h=Qo(l,$o(c,u)),d=Co(t,h);o=1===d.shape[0]?Io(i):oc([i,lc(d,[1,0],[d.shape[0]-1,d.shape[1]])],0);const p=Du(Co(Au(c,h),u)),f=lc(a,[e,0],[n-e,r]),m=$o(p,o),g=Mu(o);if(0===e)a=Qo(f,Au(m,Au(g,f)));else{const t=Qo(f,Au(m,Au(g,f)));a=oc([lc(a,[0,0],[e,r]),t],0)}const y=Mu(m),b=lc(s,[0,e],[n,s.shape[1]-e]);if(0===e)s=Qo(b,Au(Au(b,o),y));else{const t=Qo(b,Au(Au(b,o),y));s=oc([lc(s,[0,0],[n,e]),t],1)}return[o,a,s]}),li([t,u,l])}return!t&&n>r&&(s=lc(s,[0,0],[n,r]),a=lc(a,[0,0],[r,r])),[s,a]})}const ff=qa({qr_:function(e,t=!1){if(ie(e.rank>=2,()=>`qr() requires input tensor to have a rank >= 2, but got rank ${e.rank}`),2===e.rank)return pf(e,t);{const n=e.shape.slice(0,e.shape.length-2).reduce((e,t)=>e*t),r=fp(sc(e,[n,e.shape[e.shape.length-2],e.shape[e.shape.length-1]]),0),s=[],a=[];return r.forEach(e=>{const[n,r]=pf(e,t);s.push(n),a.push(r)}),[sc(ep(s,0),e.shape),sc(ep(a,0),e.shape)]}}});var mf;!function(e){e[e.NONE=0]="NONE",e[e.MEAN=1]="MEAN",e[e.SUM=2]="SUM",e[e.SUM_BY_NONZERO_WEIGHTS=3]="SUM_BY_NONZERO_WEIGHTS"}(mf||(mf={}));const gf=qa({computeWeightedLoss_:function(e,t,n=mf.SUM_BY_NONZERO_WEIGHTS){const r=Ha(e,"losses","computeWeightedLoss");let s=null;null!=t&&(s=Ha(t,"weights","computeWeightedLoss"));const a=null==s?r:$o(r,s);if(n===mf.NONE)return a;if(n===mf.SUM)return oh(a);if(n===mf.MEAN){if(null==s)return Gh(a);{const e=r.size/s.size,t=Co(oh(a),oh(s));return e>1?Co(t,Bo(e)):t}}if(n===mf.SUM_BY_NONZERO_WEIGHTS){if(null==s)return Co(oh(a),Bo(r.size));{const e=$o(s,jh(r.shape)),t=No(oh(ed(e,Bo(0))),"float32");return Co(oh(a),t)}}throw Error(`Unknown reduction: ${n}`)}}),yf=qa({absoluteDifference_:function(e,t,n,r=mf.SUM_BY_NONZERO_WEIGHTS){const s=Ha(e,"labels","absoluteDifference"),a=Ha(t,"predictions","absoluteDifference");let i=null;null!=n&&(i=Ha(n,"weights","absoluteDifference")),oe(s.shape,a.shape,"Error in absoluteDifference: ");const o=eu(Qo(s,a));return gf(o,i,r)}}),bf=qa({cosineDistance_:function(e,t,n,r,s=mf.SUM_BY_NONZERO_WEIGHTS){const a=Ha(e,"labels","cosineDistance"),i=Ha(t,"predictions","cosineDistance");let o=null;null!=r&&(o=Ha(r,"weights","cosineDistance")),oe(a.shape,i.shape,"Error in cosineDistance: ");const u=Bo(1),l=Qo(u,oh($o(a,i),n,!0));return gf(l,o,s)}}),xf=qa({hingeLoss_:function(e,t,n,r=mf.SUM_BY_NONZERO_WEIGHTS){let s=Ha(e,"labels","hingeLoss");const a=Ha(t,"predictions","hingeLoss");let i=null;null!=n&&(i=Ha(n,"weights","hingeLoss")),oe(s.shape,a.shape,"Error in hingeLoss: ");const o=Bo(1);s=Qo($o(Bo(2),s),o);const u=Ed(Qo(o,$o(s,a)));return gf(u,i,r)}}),wf=qa({huberLoss_:function(e,t,n,r=1,s=mf.SUM_BY_NONZERO_WEIGHTS){const a=Ha(e,"labels","huberLoss"),i=Ha(t,"predictions","huberLoss");let o=null;null!=n&&(o=Ha(n,"weights","huberLoss")),oe(a.shape,i.shape,"Error in huberLoss: ");const u=Bo(r),l=eu(Qo(i,a)),c=qh(l,u),h=Qo(l,c),d=To($o(Bo(.5),Ro(c)),$o(u,h));return gf(d,o,s)}}),vf=qa({logLoss_:function(e,t,n,r=1e-7,s=mf.SUM_BY_NONZERO_WEIGHTS){const a=Ha(e,"labels","logLoss"),i=Ha(t,"predictions","logLoss");let o=null;null!=n&&(o=Ha(n,"weights","logLoss")),oe(a.shape,i.shape,"Error in logLoss: ");const u=Bo(1),l=Bo(r),c=Du($o(a,Ch(To(i,l)))),h=$o(Qo(u,a),Ch(To(Qo(u,i),l))),d=Qo(c,h);return gf(d,o,s)}}),kf=qa({meanSquaredError_:function(e,t,n,r=mf.SUM_BY_NONZERO_WEIGHTS){const s=Ha(e,"labels","meanSquaredError"),a=Ha(t,"predictions","meanSquaredError");let i=null;null!=n&&(i=Ha(n,"weights","meanSquaredError")),oe(s.shape,a.shape,"Error in meanSquaredError: ");const o=Qd(s,a);return gf(o,i,r)}}),Nf=qa({sigmoidCrossEntropy_:function(e,t,n,r=0,s=mf.SUM_BY_NONZERO_WEIGHTS){let a=Ha(e,"multiClassLabels","sigmoidCrossEntropy");const i=Ha(t,"logits","sigmoidCrossEntropy");let o=null;if(null!=n&&(o=Ha(n,"weights","sigmoidCrossEntropy")),oe(a.shape,i.shape,"Error in sigmoidCrossEntropy: "),r>0){const e=Bo(r),t=Bo(1),n=Bo(.5);a=To($o(a,Qo(t,e)),$o(n,e))}const u=function(e,t){const n=Ha(e,"labels","sigmoidCrossEntropyWithLogits"),r=Ha(t,"logits","sigmoidCrossEntropyWithLogits");oe(n.shape,r.shape,"Error in sigmoidCrossEntropyWithLogits: ");const s=Ed(r),a=$o(r,n),i=$h(hh(Du(eu(r))));return To(Qo(s,a),i)}(a,i);return gf(u,o,s)}}),If=qa({softmaxCrossEntropy_:function(e,t,n,r=0,s=mf.SUM_BY_NONZERO_WEIGHTS){let a=Ha(e,"onehotLabels","softmaxCrossEntropy");const i=Ha(t,"logits","softmaxCrossEntropy");let o=null;if(null!=n&&(o=Ha(n,"weights","softmaxCrossEntropy")),oe(a.shape,i.shape,"Error in softmaxCrossEntropy: "),r>0){const e=Bo(r),t=Bo(1),n=Bo(a.shape[1]);a=To($o(a,Qo(t,e)),Co(e,n))}const u=function(e,t,n=-1){if(-1===n&&(n=t.rank-1),n!==t.rank-1)throw Error(`Softmax cross entropy along a non-last dimension is not yet supported. Labels / logits was rank ${t.rank} and dim was ${n}`);const r=zo((e,t,r)=>{const s=Dh(t,[n],!0),a=Qo(No(t,"float32"),s);r([e,a]);const i=Du($o(a,e));return{value:oh(i,[n]),gradFunc:(e,t)=>{const[r,s]=t,a=eh(e.shape,[n]);return[$o(sc(e,a),Qo(No(r,"float32"),hh(s))),$o(sc(e,a),Qo(hh(s),No(r,"float32")))]}}});return r(e,t)}(a,i);return gf(u,o,s)}}),Sf=qa({sparseFillEmptyRows_:function(e,t,n,r){const s=Ha(e,"indices","sparseFillEmptyRows","int32"),a=Ha(t,"values","sparseFillEmptyRows"),i=Ha(n,"denseShape","sparseFillEmptyRows","int32"),o=Ha(r,"defaultValue","sparseFillEmptyRows",a.dtype);if(2!==s.rank)throw new Error(`Indices should be Tensor2D but received shape\n        ${s.shape}`);if(1!==a.rank)throw new Error(`Values should be Tensor1D but received shape ${a.shape}`);if(1!==i.rank)throw new Error(`Dense shape should be Tensor1D but received shape ${i.shape}`);if(0!==o.rank)throw new Error(`Default value should be a scalar but received shape ${o.shape}`);const u={indices:s,values:a,denseShape:i,defaultValue:o},l=Ma.runKernel(Wr,u);return{outputIndices:l[0],outputValues:l[1],emptyRowIndicator:l[2],reverseIndexMap:l[3]}}}),Tf=qa({sparseReshape_:function(e,t,n){const r=Ha(e,"inputIndices","sparseReshape","int32"),s=Ha(t,"inputShape","sparseReshape","int32"),a=Ha(n,"newShape","sparseReshape","int32");if(2!==r.rank)throw new Error(`Input indices should be Tensor2D but received shape\n        ${r.shape}`);if(1!==s.rank)throw new Error(`Input shape should be Tensor1D but received shape ${s.shape}`);if(1!==a.rank)throw new Error(`New shape should be Tensor1D but received shape ${a.shape}`);const i={inputIndices:r,inputShape:s,newShape:a},o=Ma.runKernel(Gr,i);return{outputIndices:o[0],outputShape:o[1]}}}),Ef=qa({sparseSegmentMean_:function(e,t,n){const r=Ha(e,"data","sparseSegmentMean"),s=Ha(t,"indices","sparseSegmentMean","int32"),a=Ha(n,"segmentIds","sparseSegmentMean","int32");if(r.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==s.rank)throw new Error(`Indices should be Tensor1D but received shape\n          ${s.shape}`);if(1!==a.rank)throw new Error(`Segment ids should be Tensor1D but received shape\n          ${a.shape}`);const i={data:r,indices:s,segmentIds:a};return Ma.runKernel(Hr,i)}}),Cf=qa({sparseSegmentSum_:function(e,t,n){const r=Ha(e,"data","sparseSegmentSum"),s=Ha(t,"indices","sparseSegmentSum","int32"),a=Ha(n,"segmentIds","sparseSegmentSum","int32");if(r.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==s.rank)throw new Error(`Indices should be Tensor1D but received shape\n         ${s.shape}`);if(1!==a.rank)throw new Error(`Segment ids should be Tensor1D but received shape\n         ${a.shape}`);const i={data:r,indices:s,segmentIds:a};return Ma.runKernel(jr,i)}}),$f=qa({stringNGrams_:function(e,t,n,r,s,a,i,o){const u=Ha(e,"data","stringNGrams","string");if("string"!==u.dtype)throw new Error("Data must be of datatype string");if(1!==u.shape.length)throw new Error(`Data must be a vector, saw: ${u.shape}`);const l=Ha(t,"dataSplits","stringNGrams");if("int32"!==l.dtype)throw new Error("Data splits must be of datatype int32");const c={separator:n,nGramWidths:r,leftPad:s,rightPad:a,padWidth:i,preserveShortSequences:o},h={data:u,dataSplits:l},d=Ma.runKernel(Qr,h,c);return{nGrams:d[0],nGramsSplits:d[1]}}}),Af=qa({stringSplit_:function(e,t,n=!0){const r=Ha(e,"input","stringSplit","string"),s=Ha(t,"delimiter","stringSplit","string");if(1!==r.rank)throw new Error(`Input should be Tensor1D but received shape ${r.shape}`);if(0!==s.rank)throw new Error(`Delimiter should be a scalar but received shape ${s.shape}`);const a={skipEmpty:n},i={input:r,delimiter:s},o=Ma.runKernel(Jr,i,a);return{indices:o[0],values:o[1],shape:o[2]}}}),Rf=qa({stringToHashBucketFast_:function(e,t){const n=Ha(e,"input","stringToHashBucketFast","string"),r={numBuckets:t};if(t<=0)throw new Error("Number of buckets must be at least 1");const s={input:n};return Ma.runKernel(es,s,r)}}),_f=qa({staticRegexReplace_:function(e,t,n,r=!0){const s=Ha(e,"input","staticRegexReplace","string"),a={pattern:t,rewrite:n,replaceGlobal:r};return Ma.runKernel(Yr,{x:s},a)}}),Df={fft:Kd,ifft:qd,rfft:Zd,irfft:Xd},Ff={hammingWindow:zp,hannWindow:Pp,frame:Bp,stft:Vp},Mf={flipLeftRight:Wp,grayscaleToRGB:Gp,resizeNearestNeighbor:uf,resizeBilinear:of,rgbToGrayscale:Hp,rotateWithOffset:jp,cropAndResize:Up,nonMaxSuppression:qp,nonMaxSuppressionAsync:async function(e,t,n,r=.5,s=Number.NEGATIVE_INFINITY){const a=Ha(e,"boxes","nonMaxSuppressionAsync"),i=Ha(t,"scores","nonMaxSuppressionAsync"),o=Kp(a,i,n,r,s);n=o.maxOutputSize,r=o.iouThreshold,s=o.scoreThreshold;const u=await Promise.all([a.data(),i.data()]),l=u[0],c=u[1],{selectedIndices:h}=Zp(l,c,n,r,s);return a!==e&&a.dispose(),i!==t&&i.dispose(),sp(h,"int32")},nonMaxSuppressionWithScore:sf,nonMaxSuppressionWithScoreAsync:async function(e,t,n,r=.5,s=Number.NEGATIVE_INFINITY,a=0){const i=Ha(e,"boxes","nonMaxSuppressionAsync"),o=Ha(t,"scores","nonMaxSuppressionAsync"),u=Kp(i,o,n,r,s,a);n=u.maxOutputSize,r=u.iouThreshold,s=u.scoreThreshold,a=u.softNmsSigma;const l=await Promise.all([i.data(),o.data()]),c=l[0],h=l[1],{selectedIndices:d,selectedScores:p}=Jp(c,h,n,r,s,a);return i!==e&&i.dispose(),o!==t&&o.dispose(),{selectedIndices:sp(d,"int32"),selectedScores:sp(p)}},nonMaxSuppressionPadded:af,nonMaxSuppressionPaddedAsync:async function(e,t,n,r=.5,s=Number.NEGATIVE_INFINITY,a=!1){const i=Ha(e,"boxes","nonMaxSuppressionAsync"),o=Ha(t,"scores","nonMaxSuppressionAsync"),u=Kp(i,o,n,r,s,null),l=u.maxOutputSize,c=u.iouThreshold,h=u.scoreThreshold,[d,p]=await Promise.all([i.data(),o.data()]),{selectedIndices:f,validOutputs:m}=Qp(d,p,l,c,h,a);return i!==e&&i.dispose(),o!==t&&o.dispose(),{selectedIndices:sp(f,"int32"),validOutputs:Bo(m,"int32")}},threshold:lf,transform:cf},Of={bandPart:hf,gramSchmidt:df,qr:ff},Lf={absoluteDifference:yf,computeWeightedLoss:gf,cosineDistance:bf,hingeLoss:xf,huberLoss:wf,logLoss:vf,meanSquaredError:kf,sigmoidCrossEntropy:Nf,softmaxCrossEntropy:If},zf={sparseFillEmptyRows:Sf,sparseReshape:Tf,sparseSegmentMean:Ef,sparseSegmentSum:Cf},Pf={stringNGrams:$f,stringSplit:Af,stringToHashBucketFast:Rf,staticRegexReplace:_f},Bf=Al,Vf="undefined"!=typeof requestAnimationFrame?requestAnimationFrame:"undefined"!=typeof setImmediate?setImmediate:e=>e();function Uf(){return new Promise(e=>Vf(()=>e()))}function Wf(e,t){const n=e[0].length;e.forEach((e,t)=>{ie(e.length===n,()=>`Error in concat${n}D: rank of tensors[${t}] must be the same as the rank of the rest (${n})`)}),ie(t>=0&&t<n,()=>`Error in concat${n}D: axis must be between 0 and ${n-1}.`);const r=e[0];e.forEach((e,s)=>{for(let a=0;a<n;a++)ie(a===t||e[a]===r[a],()=>`Error in concat${n}D: Shape of tensors[${s}] (${e}) does not match the shape of the rest (${r}) along the non-concatenated axis ${s}.`)})}function Gf(e,t){const n=e[0].slice();for(let r=1;r<e.length;r++)n[t]+=e[r][t];return n}var Hf;function jf(e,t,n){let r=new Array;if(null==n&&null==t)return r;if(null==t)for(;r.length<e+n.length;)r.push(-1);else r=t.slice();if(null==n)return r;if(e+n.length!==r.length)throw new Error(`rt input.shape and shape=${t} are incompatible: rt input.rank = ${e+n.length}, but shape.rank = ${r.length}`);for(let s=1;s<n.length;++s){const a=n[s],i=r[r.length-n.length+s],o=r[i];if(a>=0)if(o>=0){if(o!==a)throw new Error(`rt input.shape and shape=${t} are incompatible: rt input.shape[${s+e}] = ${a} but shape[${s+e}] = ${o}`)}else r[i]=a}return r}function Kf(e){const t={FIRST_DIM_SIZE:Hf.FIRST_DIM_SIZE,VALUE_ROWIDS:Hf.VALUE_ROWIDS,ROW_LENGTHS:Hf.ROW_LENGTHS,ROW_SPLITS:Hf.ROW_SPLITS,ROW_LIMITS:Hf.ROW_LIMITS,ROW_STARTS:Hf.ROW_STARTS},n=[];for(const r of e){if(!(r in t))break;n.push(t[r])}return n}function qf(e){return 0===e.length?0:e[0]===Hf.FIRST_DIM_SIZE?e.length-1:e.length}function Xf(e,t){if(null==e||null==t)return;const n=e.length,r=t.length;if(n>=r)throw new Error(`defaultValue.shape=${e} and ragged tensor flatValues.shape=${t}, are incompatible: defaultValue.rank = ${n} must be less than ragged tensor input flatValues.rank = ${r})`);for(let s=0;s<Math.min(n,r-1);++s){const n=e[s],r=t[s+1];if(n>=0&&r>=0&&1!==n&&n!==r)throw new Error(`defaultValue.shape=${e}, and ragged tensor input flatValues.shape=${t} are incompatible: defaultValue.shape[${s-e.length}] = ${n} but ragged tensor input.flatValues.shape[${s-e.length}] = ${r}`)}}!function(e){e[e.FIRST_DIM_SIZE=0]="FIRST_DIM_SIZE",e[e.VALUE_ROWIDS=1]="VALUE_ROWIDS",e[e.ROW_LENGTHS=2]="ROW_LENGTHS",e[e.ROW_SPLITS=3]="ROW_SPLITS",e[e.ROW_LIMITS=4]="ROW_LIMITS",e[e.ROW_STARTS=5]="ROW_STARTS"}(Hf||(Hf={}));const Yf=30;function Zf(e){return e<=Yf?e:Fe(e,Math.floor(Math.sqrt(e)))}function Qf(e,t,n){return[n*("number"==typeof e?e:e[0]),t*("number"==typeof e?e:e[1])]}function Jf(e,t,n,r=!0){let s=[];if(r)s=s.concat(t.slice(0)),s.push(e[0]/n),s=s.concat(e.slice(1));else{s=s.concat(e[0]);const n=t.length;for(let r=0;r<n;++r)s=s.concat([e[r+1]/t[r],t[r]]);s=s.concat(e.slice(n+1))}return s}function em(e,t,n=!0){const r=[];if(n){r.push(t);for(let n=t+1;n<e;++n)n<=2*t?(r.push(n),r.push(n-(t+1))):r.push(n)}else{const n=[],s=[];for(let r=1;r<e;++r)r>=2*t+1||r%2==1?s.push(r):n.push(r);r.push(...n),r.push(0),r.push(...s)}return r}function tm(e,t,n,r=!0){const s=[];r?s.push(e[0]/n):s.push(e[0]*n);for(let n=1;n<e.length;++n)n<=t.length?r?s.push(t[n-1]*e[n]):s.push(e[n]/t[n-1]):s.push(e[n]);return s}function nm(e,t){const n=[0];for(let r=0;r<t;++r)n.push(e[r][0]);return n}function rm(e,t,n){const r=e.slice(0,1);for(let s=0;s<n;++s)r.push(e[s+1]-t[s][0]-t[s][1]);return r}const sm=1.7580993408473768,am=1.0507009873554805,im=.3275911,om=.254829592,um=-.284496736,lm=1.421413741,cm=-1.453152027,hm=1.061405429;function dm(e,t){if(e.length!==t.length)throw new Error(`Cannot merge real and imag arrays of different lengths. real:${e.length}, imag: ${t.length}.`);const n=new Float32Array(2*e.length);for(let r=0;r<n.length;r+=2)n[r]=e[r/2],n[r+1]=t[r/2];return n}function pm(e){const t=new Float32Array(e.length/2),n=new Float32Array(e.length/2);for(let r=0;r<e.length;r+=2)t[r/2]=e[r],n[r/2]=e[r+1];return{real:t,imag:n}}function fm(e){const t=Math.ceil(e.length/4),n=new Float32Array(t),r=new Float32Array(t);for(let t=0;t<e.length;t+=4)n[Math.floor(t/4)]=e[t],r[Math.floor(t/4)]=e[t+1];return{real:n,imag:r}}function mm(e){const t=Math.floor(e.length/4),n=new Float32Array(t),r=new Float32Array(t);for(let t=2;t<e.length;t+=4)n[Math.floor(t/4)]=e[t],r[Math.floor(t/4)]=e[t+1];return{real:n,imag:r}}function gm(e,t){return{real:e[2*t],imag:e[2*t+1]}}function ym(e,t,n,r){e[2*r]=t,e[2*r+1]=n}function bm(e,t){const n=new Float32Array(e/2),r=new Float32Array(e/2);for(let s=0;s<Math.ceil(e/2);s++){const a=(t?2:-2)*Math.PI*(s/e);n[s]=Math.cos(a),r[s]=Math.sin(a)}return{real:n,imag:r}}function xm(e,t,n){const r=(n?2:-2)*Math.PI*(e/t);return{real:Math.cos(r),imag:Math.sin(r)}}const wm="->",vm=/->/g,km=",",Nm="...";function Im(e,t){const n=((e=e.replace(/\s/g,"")).length-e.replace(vm,"").length)/wm.length;if(n<1)throw new Error("Equations without an arrow are not supported.");if(n>1)throw new Error(`Equation must contain exactly one arrow ("${wm}").`);const[r,s]=e.split(wm);ie(-1===r.indexOf(Nm),()=>`The ellipsis notation ("${Nm}") is not supported yet.`);const a=r.split(km),i=a.length;if(t!==i)throw new Error(`Expected ${i} input tensors, received ${t}`);if(i>2)throw new Error("Support for more than 2 input tensors is not implemented yet.");const o=[];for(let e=0;e<s.length;++e){const t=s[e];if(!a.some(e=>-1!==e.indexOf(t)))throw new Error(`Output subscripts contain the label ${t} not present in the input subscripts.`);-1===o.indexOf(t)&&o.push(t)}for(let e=0;e<r.length;++e){const t=r[e];-1===o.indexOf(t)&&t!==km&&o.push(t)}const u=new Array(a.length);for(let e=0;e<i;++e){if(new Set(a[e].split("")).size!==a[e].length)throw new Error(`Found duplicate axes in input component ${a[e]}. Support for duplicate axes in input is not implemented yet.`);u[e]=[];for(let t=0;t<a[e].length;++t)u[e].push(o.indexOf(a[e][t]))}const l=o.length,c=[];for(let e=s.length;e<l;++e)c.push(e);return{allDims:o,summedDims:c,idDims:u}}function Sm(e,t){let n=new Array(e);n.fill(-1);for(let e=0;e<t.length;++e)n[t[e]]=e;const r=[];for(let t=0;t<e;++t)-1===n[t]&&r.push(t);return n=n.filter(e=>-1!==e),{permutationIndices:n,expandDims:r}}function Tm(e,t,n){const r=new Array(e);for(let e=0;e<n.length;++e){const s=n[e].shape;for(let n=0;n<t[e].length;++n)void 0===r[t[e][n]]?r[t[e][n]]=s[n]:ie(r[t[e][n]]===s[n],()=>`Expected dimension ${r[t[e][n]]} at axis ${n} of input shaped ${JSON.stringify(s)}, but got dimension ${s[n]}`)}}function Em(e,t){const n=e,r=[];let s=0;0===e.length&&n.push(-1),s=e.length+1;for(let e=0;e<s;++e)r.push([]);const a=[];for(let e=0;e<n.length;++e){const s=$m(t,n[e]);for(const t of s)-1===a.indexOf(t)&&(r[e].push(t),a.push(t))}return{path:n,steps:r}}function Cm(e){return e.every((e,t)=>e===t)}function $m(e,t){const n=[];for(let r=0;r<e.length;++r)0!==e[r].length&&-1===e[r].indexOf(t)&&-1!==t||n.push(r);return n}function Am(e,t,n=0){let r=[];if("number"==typeof t)ie(e.shape[n]%t===0,()=>"Number of splits must evenly divide the axis."),r=new Array(t).fill(e.shape[n]/t);else{const s=t.reduce((e,t)=>(-1===t&&(e+=1),e),0);ie(s<=1,()=>"There should be only one negative value in split array.");const a=t.indexOf(-1);if(-1!==a){const r=t.reduce((e,t)=>t>0?e+t:e);t[a]=e.shape[n]-r}ie(e.shape[n]===t.reduce((e,t)=>e+t),()=>"The sum of sizes must match the size of the axis dimension."),r=t}return r}function Rm(e){return`Received SparseTensor with denseShape[0] = 0 but\n  indices.shape[0] = ${e}`}function _m(e,t){return`indices(${e}, 0) is invalid: ${t} < 0`}function Dm(e,t,n){return`indices(${e}, 0) is invalid: ${t} >= ${n}`}function Fm(e,t){return`only one output dimension may be -1, not both ${e} and ${t}`}function Mm(e,t){return`size ${e} must be non-negative, not ${t}`}function Om(){return"reshape cannot infer the missing input size for an empty tensor unless all specified input sizes are non-zero"}function Lm(e,t){return`Input to reshape is a SparseTensor with ${le(e)}\n  dense values, but the requested shape requires a multiple of ${le(t)}. inputShape=${e} outputShape= ${t}`}function zm(e,t){return`Input to reshape is a tensor with ${le(e)} dense values, but the requested shape has ${le(t)}. inputShape=${e} outputShape=${t}`}function Pm(){return"segment ids must be >= 0"}function Bm(){return"segment ids are not increasing"}function Vm(e,t){return`Segment id ${e} out of range [0, ${t}), possibly because segmentIds input is not sorted.`}function Um(e,t,n){return`Bad: indices[${e}] == ${t} out of range [0, ${n})`}function Wm(e,t){let n,r=!1;for(e<=Yf?(n=e,r=!0):n=Fe(e,Math.floor(Math.sqrt(e)));!r;)n>t||n===e?r=!0:n=Fe(e,n+1);return n}function Gm(e,t,n){const r=[],s=e.length;for(let a=0;a<s;a++)a!==t?r.push(e[a]):r.push(n);return r}function Hm(e,t,n,r){const s=t.shape.length,a=e.shape.length;if(0!==r&&(r<-s||r>s))throw new Error(`Expect batchDims in the range of [-${s}, ${s}], but got ${r}`);if(r<0&&(r+=s),r>a)throw new Error(`batchDims (${r}) must be less than rank(x) (\n    ${a}).`);if(n<r)throw new Error(`batchDims (${r}) must be less than or equal to axis (${n}).`);for(let n=0;n<r;++n)if(e.shape[n]!==t.shape[n])throw new Error(`x.shape[${n}]: ${e.shape[n]} should be equal to indices.shape[${n}]: ${t.shape[n]}.`);const i=e.shape[n],o=[];let u=1,l=1,c=1;for(let t=0;t<r;++t)o.push(e.shape[t]),u*=e.shape[t];for(let t=r;t<n;t++)o.push(e.shape[t]),l*=e.shape[t];for(let e=r;e<s;e++)o.push(t.shape[e]);for(let t=n+1;t<a;t++)o.push(e.shape[t]),c*=e.shape[t];return{batchSize:u,sliceSize:c,outerSize:l,dimSize:i,outputShape:o}}function jm(e){try{return e.map(e=>Qs(e))}catch(e){throw new Error(`Failed to decode encoded string bytes into utf-8, error: ${e}`)}}function Km(e){return e.map(e=>Zs(e))}!function(){for(const e of lu)Ho(e)}();const qm={kernelName:et,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>$o(e,tp(No(n,"float32"),-1))}}},Xm={kernelName:tt,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=Ro(No(n,"float32")),r=Ao(Qo(Bo(1),t));return Du(Co(e,r))}}}},Ym={kernelName:nt,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=Ao(Qo(Ro(No(n,"float32")),1));return Co(e,t)}}}},Zm={kernelName:rt,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,s=ru(n.shape,r.shape);return{a:()=>{let t=e;const r=nu(n.shape,s);return r.length>0&&(t=oh(t,r)),sc(t,n.shape)},b:()=>{let t=e;const n=nu(r.shape,s);return n.length>0&&(t=oh(t,n)),sc(t,r.shape)}}}},Qm={kernelName:st,saveAllInputs:!0,gradFunc:(e,t)=>{const n={};return t.forEach((t,r)=>{n[r]=()=>e.clone()}),n}},Jm={kernelName:ot,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>_o(n)}}},eg={kernelName:ut,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>_o(n)}}},tg={kernelName:lt,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Co(e,Ao(Qo(Bo(1),Ro(No(n,"float32")))))}}},ng={kernelName:ct,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=Ao(To(Bo(1),Ro(No(n,"float32"))));return Co(e,t)}}}},rg={kernelName:pt,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,s=ru(n.shape,r.shape);return{a:()=>{const t=To(Ro(n),Ro(r));let a=$o(e,Co(r,t));const i=nu(n.shape,s);return i.length>0&&(a=oh(a,i)),sc(a,n.shape)},b:()=>{const t=To(Ro(n),Ro(r));let a=Du($o(e,Co(n,t)));const i=nu(r.shape,s);return i.length>0&&(a=oh(a,i)),sc(a,r.shape)}}}},sg={kernelName:ht,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Co(e,To(Ro(No(n,"float32")),1))}}},ag={kernelName:dt,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Co(e,Qo(Bo(1),Ro(No(n,"float32"))))}}},ig=qa({avgPool3dGrad_:function(e,t,n,r,s,a){const i=Ha(e,"dy","avgPool3dGrad"),o=Ha(t,"input","avgPool3dGrad");let u=i,l=o,c=!1;4===o.rank&&(c=!0,u=sc(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]]),l=sc(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]])),ie(5===u.rank,()=>`Error in avgPool3dGrad: dy must be rank 5 but got rank ${u.rank}.`),ie(5===l.rank,()=>`Error in avgPool3dGrad: input must be rank 5 but got rank ${l.rank}.`),rc("avgPool3dGrad",s,a);const h={dy:u,input:l},d={filterSize:n,strides:r,pad:s,dimRoundingMode:a},p=Ma.runKernel(yt,h,d);return c?sc(p,[p.shape[1],p.shape[2],p.shape[3],p.shape[4]]):p}}),og={kernelName:gt,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{filterSize:s,strides:a,pad:i,dimRoundingMode:o}=n;return{x:()=>ig(e,r,s,a,i,o)}}},ug=qa({avgPoolGrad_:function(e,t,n,r,s){const a=Ha(e,"dy","avgPoolGrad"),i=Ha(t,"input","avgPoolGrad");ie(i.rank===a.rank,()=>`Rank of input (${i.rank}) does not match rank of dy (${a.rank})`);let o=i,u=a,l=!1;3===i.rank&&(l=!0,o=sc(i,[1,i.shape[0],i.shape[1],i.shape[2]]),u=sc(a,[1,a.shape[0],a.shape[1],a.shape[2]])),ie(4===u.rank,()=>`Error in avgPoolGrad: dy must be rank 4 but got rank ${u.rank}.`),ie(4===o.rank,()=>`Error in avgPoolGrad: input must be rank 4 but got rank ${o.rank}.`);const c={dy:u,input:o},h={filterSize:n,strides:r,pad:s},d=Ma.runKernel(mt,c,h);return l?sc(d,[d.shape[1],d.shape[2],d.shape[3]]):d}}),lg={kernelName:ft,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{filterSize:s,strides:a,pad:i}=n;return{x:()=>ug(e,r,s,a,i)}}},cg={kernelName:bt,inputsToSave:["a","b"],gradFunc:(e,t,n)=>{const[r,s]=t,{transposeA:a,transposeB:i}=n;return a||i?!a&&i?{a:()=>Au(e,s,!1,!1),b:()=>Au(e,r,!0,!1)}:a&&!i?{a:()=>Au(s,e,!1,!0),b:()=>Au(r,e,!1,!1)}:{a:()=>Au(s,e,!0,!0),b:()=>Au(e,r,!0,!0)}:{a:()=>Au(e,s,!1,!0),b:()=>Au(r,e,!0,!1)}}},hg={kernelName:xt,gradFunc:(e,t,n)=>{const{blockShape:r,crops:s}=n;return{x:()=>ud(e,r,s)}}},dg={kernelName:kt,gradFunc:(e,t,n)=>{const r=n,s=r.inputShape,a=r.shape,i=Array.from(a);for(let e=s.length-1;e>=0;e--)if(s[e]===a[e])i[e]=1;else if(1!==s[e])throw new Error(`broadcastTo(): [${s}] cannot be broadcast to [${a}].`);const o=[];for(let e=0;e<i.length;e++)i[e]>1&&o.push(e);return{x:()=>oh(e,o,!0)}}},pg={kernelName:It,gradFunc:e=>({x:()=>e.clone()})},fg={kernelName:St,gradFunc:e=>({x:()=>_o(e)})},mg={kernelName:Tt,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{clipValueMin:s,clipValueMax:a}=n;return{x:()=>Gc(Fh(xh(r,s),Sh(r,a)),e,_o(e))}}},gg={kernelName:Ct,inputsToSave:["x"],gradFunc:qm.gradFunc},yg={kernelName:$t,saveAllInputs:!0,gradFunc:(e,t,n)=>{const r=t.map(e=>e.shape),{axis:s}=n,a=we(s,t[0].shape)[0],i=r.map(e=>e[a]);return Yd(e,i,a).map(e=>()=>e)}},bg={kernelName:At,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const[r,s]=t,{dilations:a,strides:i,pad:o,dataFormat:u}=n;return ie(Jl(a),()=>`Error in gradient of conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${a}'`),{x:()=>$c(r.shape,e,s,i,o,u),filter:()=>Cp(r,e,s.shape,i,o,u)}}},xg={kernelName:_t,inputsToSave:["dy","filter"],gradFunc:(e,t,n)=>{const[r,s]=t,{strides:a,pad:i,dataFormat:o,dimRoundingMode:u}=n;return{dy:()=>Ec(e,s,a,i,o,1,u),filter:()=>Cp(e,r,s.shape,a,i,o,u)}}},wg=qa({conv3DBackpropFilter_:function(e,t,n,r,s){let a=e;4===e.rank&&(a=sc(e,[1,e.shape[0],e.shape[1],e.shape[2],e.shape[3]]));let i=t;4===i.rank&&(i=sc(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]])),ie(5===a.rank,()=>`Error in conv3dDerFilter: input must be rank 5, but got shape ${a.shape}.`),ie(5===i.rank,()=>`Error in conv3dDerFilter: dy must be rank 5, but got shape ${i.shape}.`),ie(5===n.length,()=>`Error in conv3dDerFilter: filterShape must be length 5, but got ${n}.`),ie(a.shape[4]===n[3],()=>`Error in conv3dDerFilter: depth of input ${a.shape[4]}) must match input depth in filter (${n[3]}.`),ie(i.shape[4]===n[4],()=>`Error in conv3dDerFilter: depth of dy (${i.shape[4]}) must match output depth for filter (${n[4]}).`);const o={x:a,dy:i},u={strides:r,pad:s,filterShape:n};return Ma.runKernel(Ft,o,u)}}),vg={kernelName:Dt,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const{dilations:r,strides:s,pad:a}=n;ie(Jl(r),()=>`Error in gradient of conv3D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${r}'`);const[i,o]=t;return{x:()=>_c(i.shape,e,o,s,a),filter:()=>wg(i,e,o.shape,s,a)}}},kg={kernelName:Ot,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>$o(Du(Bd(No(n,"float32"))),e)}}},Ng={kernelName:Lt,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>$o(Vd(No(n,"float32")),e)}}},Ig={kernelName:Pt,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{axis:s,exclusive:a,reverse:i}=n;return{x:()=>{const t=nh([s],r.rank);let n=Lc(e,s,a,!i);return null!=t&&(n=Mu(n,t)),n}}}},Sg={kernelName:Wt,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const{dilations:r,strides:s,pad:a,dimRoundingMode:i}=n,o=null==r?[1,1]:r;ie(Jl(o),()=>`Error in gradient of depthwiseConv2dNative: dilation rates greater than 1 are not yet supported. Got dilations '${o}'`);const[u,l]=t;return ie(4===u.rank,()=>`Error in gradient of depthwiseConv2dNative: input must be rank 4, but got rank ${u.rank}.`),ie(4===l.rank,()=>`Error in gradient of depthwiseConv2dNative: filter must be rank 4, but got rank ${l.rank}.`),ie(u.shape[3]===l.shape[2],()=>`Error in gradient of depthwiseConv2d: number of input channels (${u.shape[3]}) must match the inChannels dimension in filter ${l.shape[2]}.`),ie(ec(s,o),()=>`Error in gradient of depthwiseConv2d: Either strides or dilations must be  1. Got strides ${s} and dilations '${o}'.`),rc("depthwiseConv2d",a,i),{x:()=>Mp(u.shape,e,l,s,a,o,i),filter:()=>Fp(u,e,l.shape,s,a,o,i)}}},Tg={kernelName:Kt,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const[r,s]=t,a={x:r,filter:s,dy:e},i={x:r,filter:s,dy:e};return{x:()=>Ma.runKernel(qt,a,n),filter:()=>Ma.runKernel(Xt,i,n)}}},Eg={kernelName:Jt,outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t,r={dy:e,y:n};return{x:()=>Ma.runKernel(en,r)}}},Cg={kernelName:tn,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t,r=$o(hh(Du(Ro(n))),2/Math.sqrt(Math.PI));return{x:()=>$o(e,r)}}},$g={kernelName:rn,outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t;return{x:()=>$o(e,n)}}},Ag={kernelName:sn,inputsToSave:["input"],gradFunc:(e,t)=>{const[n]=t;return{input:()=>sc(e,n.shape)}}},Rg={kernelName:an,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>$o(e,hh(n))}}},_g={kernelName:cn,gradFunc:e=>({x:()=>_o(e)})},Dg={kernelName:hn,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,s=ru(n.shape,r.shape);return{a:()=>{const t=Co(e,No(r,"float32")),a=nu(n.shape,s);return a.length>0?sc(oh(t,a),n.shape):t},b:()=>{let t=$o(e,No(n,"float32"));const a=nu(r.shape,s);a.length>0&&(t=sc(oh(t,a),r.shape));const i=Ro(r);return Du(Co(t,No(i,"float32")))}}}},Fg={kernelName:dn,inputsToSave:["x","mean","variance","scale"],gradFunc:(e,t,n)=>{const{varianceEpsilon:r}=n,[s,a,i,o]=t,u=null==o?Bo(1):o,l=nu(a.shape,s.shape),c=[];if(1===a.rank){for(let e=0;e<s.shape.length-1;++e)c.push(s.shape[e]);c.push(1)}const h=Qo(s,a),d=$o(e,u),p=Md(To(i,Bo(r))),f=$o($o($o(p,p),p),Bo(-.5));return{x:()=>1===a.rank?sc($o($o(e,fh(sc(p,[1,1,1,a.shape[0]]),c)),u),s.shape):sc($o($o(e,p),u),s.shape),mean:()=>{let e=$o($o(p,Bo(-1)),d);return 1===a.rank&&(e=oh(e,l)),sc(e,a.shape)},variance:()=>{let e=$o($o(f,h),d);return 1===a.rank&&(e=oh(e,l)),sc(e,a.shape)},scale:()=>{const t=$o(h,p);let n=$o(e,t);return 1===a.rank&&(n=oh(n,l)),sc(n,a.shape)},offset:()=>{let t=e;return 1===a.rank&&(t=oh(t,l)),sc(t,a.shape)}}}},Mg={kernelName:pn,inputsToSave:["x","indices"],gradFunc:(e,t,n)=>{const[r,s]=t,{axis:a,batchDims:i}=n,o=we(a,r.shape)[0],u=(e,t,n)=>()=>{const r=e.shape,s=t.size,i=r.slice(0,o),u=i.length,l=r.slice(a,r.length).slice(1),c=l.length,h=Og(0,u),d=Og(u+1,u+1+c),p=Lg([i,[s],l]),f=sc(n,p),m=sc(t,[s]),g=Lg([[u],h,d]),y=Mu(f,g);let b=pp(y,m,e.shape[o]);const x=rh(g);return b=Mu(b,x),b};if(1===i){const t=r.shape[0],n=r.split(t,0);return{x:()=>{const t=ep(n.map((t,n)=>u(t,s.slice(n,1),e.slice(n,1))()));return t.reshape(r.shape)},indices:()=>s}}return{x:u(r,s,e),indices:()=>s}}};function Og(e,t){const n=[];for(let r=e;r<t;++r)n.push(r);return n}function Lg(e){const t=[];for(let n=0;n<e.length;++n)for(let r=0;r<e[n].length;++r)t.push(e[n][r]);return t}const zg={kernelName:gn,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t;return{a:()=>_o(n),b:()=>_o(r)}}},Pg={kernelName:yn,gradFunc:e=>({x:()=>No(e,"float32")})},Bg={kernelName:wn,gradFunc:e=>({x:()=>_o(e)})},Vg={kernelName:vn,gradFunc:e=>({x:()=>_o(e)})},Ug={kernelName:kn,gradFunc:e=>({x:()=>_o(e)})},Wg={kernelName:Nn,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{alpha:s}=n,a=bh(r,0);return{x:()=>Gc(a,e,$o(e,s))}}},Gg={kernelName:Cn,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Co(e,To(n,1))}}},Hg={kernelName:En,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Co(e,No(n,"float32"))}}},jg={kernelName:Dn,inputsToSave:[],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[r]=t,{axis:s}=n;return{logits:()=>{const t=hh(r);return Qo(e,$o(oh(e,s,!0),t))}}}},Kg=qa({localResponseNormalizationBackprop_:function(e,t,n,r=5,s=1,a=1,i=.5){const o={x:e,y:t,dy:n},u={depthRadius:r,bias:s,alpha:a,beta:i};return Ma.runKernel(On,o,u)}}),qg={kernelName:Mn,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[r,s]=t,{depthRadius:a,bias:i,alpha:o,beta:u}=n;return{x:()=>Kg(r,s,e,a,i,o,u)}}};function Xg(e,t,n,r){return t.rank<n.rank&&(t=sc(t,eh(t.shape,r))),e.rank<n.rank&&(e=sc(e,eh(e.shape,r))),{x:()=>$o(e,No(Wc(n,t),e.dtype))}}const Yg={kernelName:zn,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const r=n,{reductionIndices:s}=r,a=t[0],i=Xg(e,t[1],a,we(s,a.shape));return{x:()=>i.x()}}},Zg={kernelName:Pn,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t;return{a:()=>$o(e,No(xh(n,r),"float32")),b:()=>$o(e,No(Ih(n,r),"float32"))}}},Qg=qa({maxPool3dGrad_:function(e,t,n,r,s,a,i){const o=Ha(e,"dy","maxPool3dGrad"),u=Ha(t,"input","maxPool3dGrad"),l=Ha(n,"output","maxPool3dGrad");let c=o,h=u,d=l,p=!1;4===u.rank&&(p=!0,c=sc(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]]),h=sc(u,[1,u.shape[0],u.shape[1],u.shape[2],u.shape[3]]),d=sc(l,[1,l.shape[0],l.shape[1],l.shape[2],l.shape[3]])),ie(5===c.rank,()=>`Error in maxPool3dGrad: dy must be rank 5 but got rank ${c.rank}.`),ie(5===h.rank,()=>`Error in maxPool3dGrad: input must be rank 5 but got rank ${h.rank}.`),ie(5===d.rank,()=>`Error in maxPool3dGrad: output must be rank 5 but got rank ${d.rank}.`),rc("maxPool3dGrad",a,i);const f={dy:c,input:h,output:d},m={filterSize:r,strides:s,pad:a,dimRoundingMode:i},g=Ma.runKernel(Wn,f,m);return p?sc(g,[g.shape[1],g.shape[2],g.shape[3],g.shape[4]]):g}}),Jg={kernelName:Un,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[r,s]=t,{filterSize:a,strides:i,pad:o,dimRoundingMode:u}=n;return{x:()=>Qg(e,r,s,a,i,o,u)}}},ey=qa({maxPoolGrad_:function(e,t,n,r,s,a,i){const o=Ha(e,"dy","maxPoolGrad"),u=Ha(t,"input","maxPoolGrad"),l=Ha(n,"output","maxPoolGrad");ie(u.rank===o.rank,()=>`Rank of input (${u.rank}) does not match rank of dy (${o.rank})`),ie(4===o.rank,()=>`Error in maxPoolGrad: dy must be rank 4 but got rank ${o.rank}.`),ie(4===u.rank,()=>`Error in maxPoolGrad: input must be rank 4 but got rank ${u.rank}.`),rc("maxPoolGrad",a,i);const c={dy:o,input:u,output:l},h={filterSize:r,strides:s,pad:a,dimRoundingMode:i};return Ma.runKernel(Vn,c,h)}}),ty={kernelName:Bn,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[r,s]=t,{filterSize:a,strides:i,pad:o}=n;return{x:()=>ey(e,r,s,a,i,o)}}},ny={kernelName:qn,inputsToSave:["x"],gradFunc:(e,t,n)=>{const r=t[0],{paddings:s}=n,a=s.map(e=>e[0]);return{x:()=>lc(e,a,r.shape)}}},ry={kernelName:ir,inputsToSave:["x"],gradFunc:(e,t,n)=>{const r=t[0],{paddings:s}=n,a=s.map(e=>e[0]);return{x:()=>lc(e,a,r.shape)}}},sy={kernelName:ur,inputsToSave:["a","b"],outputsToSave:[!0],gradFunc:(e,t)=>{const[n,r,s]=t,a=n,i=r,o=ru(a.shape,i.shape);return{a:()=>{const t=No(i,"float32");let n=$o(e,$o(t,Zo(a,Qo(t,Bo(1)))));const r=nu(a.shape,o);return r.length>0&&(n=oh(n,r)),sc(n,a.shape)},b:()=>{const t=bh(a,0),n=Gc(t,Ch(a),_o(a));let r=$o(e,$o(s,n));const u=nu(i.shape,o);return u.length>0&&(r=oh(r,u)),sc(r,i.shape)}}}};const ay={kernelName:Rr,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=bh(n,Bo(0)),r=Bo(sm),s=Bo(am),a=$o(e,s),i=$o($o(e,r),hh(No(n,"float32")));return Gc(t,a,i)}}}},iy={kernelName:Br,gradFunc:(e,t,n)=>{const{blockShape:r,paddings:s}=n;return{x:()=>dc(e,r,s)}}},oy={kernelName:Vr,gradFunc:(e,t,n)=>{const{axis:r}=n;return{x:()=>oc(e,r)}}},uy=[qm,Xm,Ym,Zm,Qm,Jm,eg,tg,ng,rg,sg,ag,og,lg,cg,hg,dg,pg,fg,mg,gg,yg,xg,bg,vg,kg,Ng,Ig,Sg,Tg,{kernelName:Zt,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,s=ru(n.shape,r.shape);return{a:()=>{const t=Co(e,No(r,"float32")),a=nu(n.shape,s);return a.length>0?sc(oh(t,a),n.shape):t},b:()=>{let t=$o(e,No(n,"float32"));const a=nu(r.shape,s);a.length>0&&(t=sc(oh(t,a),r.shape));const i=Ro(r);return Du(Co(t,No(i,"float32")))}}}},Eg,Cg,$g,Ag,Rg,Dg,_g,Fg,Mg,zg,Pg,Bg,Vg,Ug,Wg,Gg,Hg,jg,qg,Yg,Yg,Zg,Jg,ty,{kernelName:Hn,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{axis:s}=n,a=we(s,r.shape),i=le(Jc(r.shape,a)[1]);return{x:()=>{const t=r.shape.slice();a.forEach(e=>{t[e]=1});const n=sc(e,t);return Co($o(n,jh(r.shape,"float32")),i)}}}},{kernelName:jn,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const r=n,{axis:s}=r,[a,i]=t,o=Xg(e,i,a,we(s,a.shape));return{x:()=>o.x()}}},{kernelName:Kn,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t;return{a:()=>$o(e,No(Sh(n,r),"float32")),b:()=>$o(e,No(bh(n,r),"float32"))}}},ny,{kernelName:Xn,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,s=ru(n.shape,r.shape);return{a:()=>{const t=nu(n.shape,s);return t.length>0?sc(oh(e,t),n.shape):e},b:()=>{const t=$o(e,Du(gh(Co(n,r)))),a=nu(r.shape,s);return a.length>0?sc(oh(t,a),r.shape):t}}}},{kernelName:Zn,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,s=ru(n.shape,r.shape);return{a:()=>{const t=$o(e,No(r,"float32")),a=nu(n.shape,s);return a.length>0?sc(oh(t,a),n.shape):t},b:()=>{const t=$o(e,No(n,"float32")),a=nu(r.shape,s);return a.length>0?sc(oh(t,a),r.shape):t}}}},{kernelName:Qn,gradFunc:e=>({x:()=>Du(e)})},{kernelName:sr,inputsToSave:["indices"],gradFunc:(e,t)=>{const n=t[0];return{indices:()=>Hh(n.shape,"float32")}}},{kernelName:rr,gradFunc:e=>({x:()=>_o(e)})},{kernelName:ar,saveAllInputs:!0,gradFunc:(e,t,n)=>{const{axis:r}=n;return fp(e,r).map(e=>()=>e)}},ry,ry,sy,{kernelName:lr,inputsToSave:["x","alpha"],gradFunc:(e,t)=>{const[n,r]=t,s=bh(n,0);return{x:()=>Gc(s,e,$o(e,r)),alpha:()=>{let t=Gc(s,_o(e),$o(e,n));const a=nu(r.shape,e.shape);return a.length>0&&(t=oh(t,a)),sc(t,r.shape)}}}},{kernelName:cr,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{axis:s}=n;let a=[];return a=null==s?r.shape.map((e,t)=>t):"number"==typeof s?[s]:s,{x:()=>function(e,t,n){const r=e.shape.length,s=r-n.length,a=nh(n,r);let i=e;null!=a&&(i=Mu(e,a));const o=i.shape.slice(),u=o.splice(r-n.length,n.length).reduce((e,t)=>e*t,1);o.push(u);let l=function(e,t,n){const r=e.shape.slice();r[n]=1;const s=sc(t,r),a=Oc(e,n,!0,!1),i=Oc(e,n,!0,!0),o=$o(a,i);return $o(s,o)}(i.reshape(o),t,s);if(l=l.reshape(i.shape),null!=a){const e=rh(a);l=Mu(l,e)}return l}(r,e,a)}}},{kernelName:gr,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Co(e,Du(Ro(n)))}}},{kernelName:Nr,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t,r=$o(Sh(n,6),tp(n));return{x:()=>$o(e,No(r,"float32"))}}},{kernelName:yr,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>$o(e,No(tp(n),"float32"))}}},{kernelName:br,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>sc(e,n.shape)}}},{kernelName:vr,inputsToSave:["images"],gradFunc:(e,t,n)=>{const[r]=t,s={dy:e,images:r};return{images:()=>Ma.runKernel(kr,s,n)}}},{kernelName:xr,inputsToSave:["images"],gradFunc:(e,t,n)=>{const[r]=t,s={dy:e,images:r};return{images:()=>Ma.runKernel(wr,s,n)}}},{kernelName:Ir,gradFunc:(e,t,n)=>{const{dims:r}=n,s=we(r,e.shape);return{x:()=>$d(e,s)}}},{kernelName:Sr,gradFunc:e=>({x:()=>_o(e)})},{kernelName:Tr,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Du(Co(e,$o(Zo(n,1.5),2)))}}},{kernelName:Ar,inputsToSave:["condition"],gradFunc:(e,t)=>{const[n]=t;return{condition:()=>No(_o(n),"float32"),t:()=>$o(e,No(n,e.dtype)),e:()=>$o(e,No(Mh(n),e.dtype))}}},ay,{kernelName:Or,outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t;return{x:()=>$o(e,$o(n,Qo(Bo(1),n)))}}},{kernelName:Mr,gradFunc:e=>({x:()=>_o(e)})},{kernelName:Dr,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>$o(Fc(No(n,"float32")),e)}}},{kernelName:Fr,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>$o(Mc(No(n,"float32")),e)}}},{kernelName:_r,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{begin:s,size:a}=n,i=r.shape,[o,u]=dl(r,s,a),l=[];for(let t=0;t<e.rank;t++)l.push([o[t],i[t]-o[t]-u[t]]);return{x:()=>rd(e,l)}}},{kernelName:Ur,outputsToSave:[!0],gradFunc:(e,t,n)=>{const[r]=t,{dim:s}=n,a=$o(e,r);return{logits:()=>Qo(a,$o(oh(a,[s],!0),r))}}},{kernelName:Lr,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>$o(e,uc(n))}}},iy,iy,oy,oy,{kernelName:zr,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Co(e,$o(Ao(No(n,"float32")),2))}}},{kernelName:qr,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,s=Bo(2);return{a:()=>$o(e,$o(s,Qo(n,r))),b:()=>$o(e,$o(s,Qo(r,n)))}}},{kernelName:Xr,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>$o(e,$o(No(n,"float32"),2))}}},{kernelName:ps,gradFunc:e=>({x:()=>_o(e)})},{kernelName:ts,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,s=ru(n.shape,r.shape);return{a:()=>{let t=e;const r=nu(n.shape,s);return r.length>0&&(t=oh(t,r)),sc(t,n.shape)},b:()=>{let t=e;const n=nu(r.shape,s);return n.length>0&&(t=oh(t,n)),sc(Du(t),r.shape)}}}},{kernelName:Pr,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,s=r.shape.slice(),{axis:a}=n;we(a,r.shape).forEach(e=>{s[e]=1});const i=sc(e,s),o=$o(i,jh(r.shape,"float32"));return{x:()=>o}}},{kernelName:ns,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Co(e,Ro(Fc(n)))}}},{kernelName:rs,outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t;return{x:()=>$o(Qo(Bo(1),Ro(n)),e)}}},{kernelName:ss,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{reps:s}=n;return{x:()=>{let t=_o(r);if(1===r.rank)for(let n=0;n<s[0];++n)t=To(t,lc(e,[n*r.shape[0]],[r.shape[0]]));else if(2===r.rank)for(let n=0;n<s[0];++n)for(let a=0;a<s[1];++a)t=To(t,lc(e,[n*r.shape[0],a*r.shape[1]],[r.shape[0],r.shape[1]]));else if(3===r.rank)for(let n=0;n<s[0];++n)for(let a=0;a<s[1];++a)for(let i=0;i<s[2];++i)t=To(t,lc(e,[n*r.shape[0],a*r.shape[1],i*r.shape[2]],[r.shape[0],r.shape[1],r.shape[2]]));else{if(4!==r.rank)throw new Error(`Gradient for tile operation is not implemented for rank-${r.rank} tensors yet.`);for(let n=0;n<s[0];++n)for(let a=0;a<s[1];++a)for(let i=0;i<s[2];++i)for(let o=0;o<s[3];++o)t=To(t,lc(e,[n*r.shape[0],a*r.shape[1],i*r.shape[2],o*r.shape[3]],[r.shape[0],r.shape[1],r.shape[2],r.shape[3]]))}return t}}}},{kernelName:os,gradFunc:(e,t,n)=>{const r=n,{perm:s}=r,a=rh(s);return{x:()=>Mu(e,a)}}},{kernelName:ls,gradFunc:(e,t,n)=>{const r=n,{axis:s}=r;return{value:()=>ep(e,s)}}},{kernelName:cs,inputsToSave:["segmentIds"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>function(e,t){const n=su(t,_o(t)),r=yh(e,n);let s=xh(t,Bo(0,"int32"));const a=r.rank-s.rank;for(let e=0;e<a;++e)s=dh(s,e+1);s=Fh(s,jh(r.shape,"bool"));const i=_o(r);return Gc(s,r,i)}(e,n)}}},{kernelName:ds,gradFunc:e=>({x:()=>_o(e)})}];for(const e of uy)Es(e);fa().prototype.abs=function(){return this.throwIfDisposed(),eu(this)},fa().prototype.acos=function(){return this.throwIfDisposed(),Rl(this)},fa().prototype.acosh=function(){return this.throwIfDisposed(),_l(this)},fa().prototype.add=function(e){return this.throwIfDisposed(),To(this,e)},fa().prototype.all=function(e,t){return this.throwIfDisposed(),Fl(this,e,t)},fa().prototype.any=function(e,t){return this.throwIfDisposed(),Ml(this,e,t)},fa().prototype.argMax=function(e){return this.throwIfDisposed(),Ol(this,e)},fa().prototype.argMin=function(e){return this.throwIfDisposed(),Ll(this,e)},fa().prototype.asScalar=function(){return this.throwIfDisposed(),ie(1===this.size,()=>"The array must have only 1 element."),sc(this,[])},fa().prototype.asType=function(e){return this.throwIfDisposed(),No(this,e)},fa().prototype.as1D=function(){return this.throwIfDisposed(),sc(this,[this.size])},fa().prototype.as2D=function(e,t){return this.throwIfDisposed(),sc(this,[e,t])},fa().prototype.as3D=function(e,t,n){return this.throwIfDisposed(),sc(this,[e,t,n])},fa().prototype.as4D=function(e,t,n,r){return this.throwIfDisposed(),sc(this,[e,t,n,r])},fa().prototype.as5D=function(e,t,n,r,s){return this.throwIfDisposed(),sc(this,[e,t,n,r,s])},fa().prototype.asin=function(){return this.throwIfDisposed(),zl(this)},fa().prototype.asinh=function(){return this.throwIfDisposed(),Pl(this)},fa().prototype.atan=function(){return this.throwIfDisposed(),Bl(this)},fa().prototype.atan2=function(e){return this.throwIfDisposed(),Vl(this,e)},fa().prototype.atanh=function(){return this.throwIfDisposed(),Ul(this)},fa().prototype.avgPool=function(e,t,n,r){return this.throwIfDisposed(),ac(this,e,t,n,r)},fa().prototype.batchToSpaceND=function(e,t){return this.throwIfDisposed(),dc(this,e,t)},fa().prototype.batchNorm=function(e,t,n,r,s){return this.throwIfDisposed(),pc(this,e,t,n,r,s)},fa().prototype.broadcastTo=function(e){return this.throwIfDisposed(),wc(this,e)},fa().prototype.cast=function(e){return this.throwIfDisposed(),No(this,e)},fa().prototype.ceil=function(){return this.throwIfDisposed(),vc(this)},fa().prototype.clipByValue=function(e,t){return this.throwIfDisposed(),kc(this,e,t)},fa().prototype.concat=function(e,t){return this.throwIfDisposed(),e instanceof pa&&(e=[e]),oc([this,...e],t)},fa().prototype.conv1d=function(e,t,n,r,s,a){return this.throwIfDisposed(),Cc(this,e,t,n,r,s,a)},fa().prototype.conv2dTranspose=function(e,t,n,r,s){return this.throwIfDisposed(),Ac(this,e,t,n,r,s)},fa().prototype.conv2d=function(e,t,n,r,s,a){return this.throwIfDisposed(),Ec(this,e,t,n,r,s,a)},fa().prototype.cos=function(){return this.throwIfDisposed(),Fc(this)},fa().prototype.cosh=function(){return this.throwIfDisposed(),Mc(this)},fa().prototype.cumprod=function(e,t,n){return this.throwIfDisposed(),Oc(this,e,t,n)},fa().prototype.cumsum=function(e,t,n){return this.throwIfDisposed(),Lc(this,e,t,n)},fa().prototype.depthToSpace=function(e,t){return this.throwIfDisposed(),Pc(this,e,t)},fa().prototype.depthwiseConv2d=function(e,t,n,r,s,a){return this.throwIfDisposed(),Bc(this,e,t,n,r,s,a)},fa().prototype.dilation2d=function(e,t,n,r,s){return this.throwIfDisposed(),Uc(this,e,t,n,r,s)},fa().prototype.divNoNan=function(e){return this.throwIfDisposed(),Hc(this,e)},fa().prototype.div=function(e){return this.throwIfDisposed(),Co(this,e)},fa().prototype.dot=function(e){return this.throwIfDisposed(),jc(this,e)},fa().prototype.elu=function(){return this.throwIfDisposed(),qc(this)},fa().prototype.equal=function(e){return this.throwIfDisposed(),Wc(this,e)},fa().prototype.erf=function(){return this.throwIfDisposed(),Yc(this)},fa().prototype.euclideanNorm=function(e,t){return this.throwIfDisposed(),ch(this,e,t)},fa().prototype.exp=function(){return this.throwIfDisposed(),hh(this)},fa().prototype.expandDims=function(e){return this.throwIfDisposed(),dh(this,e)},fa().prototype.expm1=function(){return this.throwIfDisposed(),ph(this)},fa().prototype.fft=function(){return this.throwIfDisposed(),Kd(this)},fa().prototype.flatten=function(){return this.throwIfDisposed(),sc(this,[this.size])},fa().prototype.floor=function(){return this.throwIfDisposed(),gh(this)},fa().prototype.floorDiv=function(e){return this.throwIfDisposed(),Eo(this,e)},fa().prototype.gather=function(e,t,n){return this.throwIfDisposed(),yh(this,e,t,n)},fa().prototype.greaterEqual=function(e){return this.throwIfDisposed(),xh(this,e)},fa().prototype.greater=function(e){return this.throwIfDisposed(),bh(this,e)},fa().prototype.ifft=function(){return this.throwIfDisposed(),qd(this)},fa().prototype.irfft=function(){return this.throwIfDisposed(),Xd(this)},fa().prototype.isFinite=function(){return this.throwIfDisposed(),wh(this)},fa().prototype.isInf=function(){return this.throwIfDisposed(),vh(this)},fa().prototype.isNaN=function(){return this.throwIfDisposed(),kh(this)},fa().prototype.leakyRelu=function(e){return this.throwIfDisposed(),Nh(this,e)},fa().prototype.lessEqual=function(e){return this.throwIfDisposed(),Sh(this,e)},fa().prototype.less=function(e){return this.throwIfDisposed(),Ih(this,e)},fa().prototype.localResponseNormalization=function(e,t,n,r){return this.throwIfDisposed(),Eh(this,e,t,n,r)},fa().prototype.logSigmoid=function(){return this.throwIfDisposed(),Rh(this)},fa().prototype.logSoftmax=function(e){return this.throwIfDisposed(),_h(this,e)},fa().prototype.logSumExp=function(e,t){return this.throwIfDisposed(),Dh(this,e,t)},fa().prototype.log=function(){return this.throwIfDisposed(),Ch(this)},fa().prototype.log1p=function(){return this.throwIfDisposed(),$h(this)},fa().prototype.logicalAnd=function(e){return this.throwIfDisposed(),Fh(this,e)},fa().prototype.logicalNot=function(){return this.throwIfDisposed(),Mh(this)},fa().prototype.logicalOr=function(e){return this.throwIfDisposed(),Oh(this,e)},fa().prototype.logicalXor=function(e){return this.throwIfDisposed(),Lh(this,e)},fa().prototype.matMul=function(e,t,n){return this.throwIfDisposed(),Au(this,e,t,n)},fa().prototype.maxPool=function(e,t,n,r){return this.throwIfDisposed(),Vh(this,e,t,n,r)},fa().prototype.max=function(e,t){return this.throwIfDisposed(),ah(this,e,t)},fa().prototype.maximum=function(e){return this.throwIfDisposed(),su(this,e)},fa().prototype.mean=function(e,t){return this.throwIfDisposed(),Gh(this,e,t)},fa().prototype.min=function(e,t){return this.throwIfDisposed(),ih(this,e,t)},fa().prototype.minimum=function(e){return this.throwIfDisposed(),qh(this,e)},fa().prototype.mirrorPad=function(e,t){return this.throwIfDisposed(),Xh(this,e,t)},fa().prototype.mod=function(e){return this.throwIfDisposed(),Yh(this,e)},fa().prototype.mul=function(e){return this.throwIfDisposed(),$o(this,e)},fa().prototype.neg=function(){return this.throwIfDisposed(),Du(this)},fa().prototype.norm=function(e,t,n){return this.throwIfDisposed(),lh(this,e,t,n)},fa().prototype.notEqual=function(e){return this.throwIfDisposed(),ed(this,e)},fa().prototype.oneHot=function(e,t=1,n=0){return this.throwIfDisposed(),Ru(this,e,t,n)},fa().prototype.onesLike=function(){return this.throwIfDisposed(),td(this)},fa().prototype.pad=function(e,t){return this.throwIfDisposed(),rd(this,e,t)},fa().prototype.pool=function(e,t,n,r,s,a){return this.throwIfDisposed(),ld(this,e,t,n,r,s,a)},fa().prototype.pow=function(e){return this.throwIfDisposed(),Zo(this,e)},fa().prototype.prelu=function(e){return this.throwIfDisposed(),cd(this,e)},fa().prototype.prod=function(e,t){return this.throwIfDisposed(),hd(this,e,t)},fa().prototype.reciprocal=function(){return this.throwIfDisposed(),Td(this)},fa().prototype.relu=function(){return this.throwIfDisposed(),Ed(this)},fa().prototype.relu6=function(){return this.throwIfDisposed(),Cd(this)},fa().prototype.reshapeAs=function(e){return this.throwIfDisposed(),sc(this,e.shape)},fa().prototype.reshape=function(e){return this.throwIfDisposed(),sc(this,e)},fa().prototype.resizeBilinear=function(e,t,n){return this.throwIfDisposed(),of(this,e,t,n)},fa().prototype.resizeNearestNeighbor=function(e,t,n){return this.throwIfDisposed(),uf(this,e,t,n)},fa().prototype.reverse=function(e){return this.throwIfDisposed(),$d(this,e)},fa().prototype.rfft=function(){return this.throwIfDisposed(),Zd(this)},fa().prototype.round=function(){return this.throwIfDisposed(),Fd(this)},fa().prototype.rsqrt=function(){return this.throwIfDisposed(),Md(this)},fa().prototype.selu=function(){return this.throwIfDisposed(),Od(this)},fa().prototype.separableConv2d=function(e,t,n,r,s,a){return this.throwIfDisposed(),Ld(this,e,t,n,r,s,a)},fa().prototype.sigmoid=function(){return this.throwIfDisposed(),uc(this)},fa().prototype.sign=function(){return this.throwIfDisposed(),Pd(this)},fa().prototype.sin=function(){return this.throwIfDisposed(),Bd(this)},fa().prototype.sinh=function(){return this.throwIfDisposed(),Vd(this)},fa().prototype.slice=function(e,t){return this.throwIfDisposed(),lc(this,e,t)},fa().prototype.softmax=function(e){return this.throwIfDisposed(),jd(this,e)},fa().prototype.softplus=function(){return this.throwIfDisposed(),Ah(this)},fa().prototype.spaceToBatchND=function(e,t){return this.throwIfDisposed(),ud(this,e,t)},fa().prototype.split=function(e,t){return this.throwIfDisposed(),Yd(this,e,t)},fa().prototype.sqrt=function(){return this.throwIfDisposed(),Ao(this)},fa().prototype.square=function(){return this.throwIfDisposed(),Ro(this)},fa().prototype.squaredDifference=function(e){return this.throwIfDisposed(),Qd(this,e)},fa().prototype.squeeze=function(e){return this.throwIfDisposed(),Jd(this,e)},fa().prototype.stack=function(e,t){this.throwIfDisposed();const n=e instanceof pa?[this,e]:[this,...e];return ep(n,t)},fa().prototype.step=function(e){return this.throwIfDisposed(),tp(this,e)},fa().prototype.stridedSlice=function(e,t,n,r,s,a,i,o){return this.throwIfDisposed(),np(this,e,t,n,r,s,a,i,o)},fa().prototype.sub=function(e){return this.throwIfDisposed(),Qo(this,e)},fa().prototype.sum=function(e,t){return this.throwIfDisposed(),oh(this,e,t)},fa().prototype.tan=function(){return this.throwIfDisposed(),rp(this)},fa().prototype.tanh=function(){return this.throwIfDisposed(),cc(this)},fa().prototype.tile=function(e){return this.throwIfDisposed(),fh(this,e)},fa().prototype.toBool=function(){return this.throwIfDisposed(),No(this,"bool")},fa().prototype.toFloat=function(){return this.throwIfDisposed(),No(this,"float32")},fa().prototype.toInt=function(){return this.throwIfDisposed(),No(this,"int32")},fa().prototype.topk=function(e,t){return this.throwIfDisposed(),cp(this,e,t)},fa().prototype.transpose=function(e){return this.throwIfDisposed(),Mu(this,e)},fa().prototype.unique=function(e){return this.throwIfDisposed(),dp(this,e)},fa().prototype.unsortedSegmentSum=function(e,t){return this.throwIfDisposed(),pp(this,e,t)},fa().prototype.unstack=function(e){return this.throwIfDisposed(),fp(this,e)},fa().prototype.where=function(e,t){return this.throwIfDisposed(),Gc(e,this,t)},fa().prototype.zerosLike=function(){return this.throwIfDisposed(),_o(this)};class ly extends Error{constructor(e){super(e),Object.setPrototypeOf(this,ly.prototype)}}class cy extends Error{constructor(e){super(e),Object.setPrototypeOf(this,cy.prototype)}}class hy extends Error{constructor(e){super(e),Object.setPrototypeOf(this,hy.prototype)}}class dy extends Error{constructor(e){super(e),Object.setPrototypeOf(this,dy.prototype)}}class py extends Error{constructor(e){super(e),Object.setPrototypeOf(this,py.prototype)}}Error;class fy{constructor(e){this.maxEntries=e||100,this.cache=new Map}get(e){let t;return this.cache.has(e)&&(t=this.cache.get(e),this.cache.delete(e),this.cache.set(e,t)),t}put(e,t){if(this.cache.has(e))this.cache.delete(e);else if(this.cache.size>=this.maxEntries){const e=this.cache.keys().next().value;this.cache.delete(e)}this.cache.set(e,t)}getMaxEntries(){return this.maxEntries}setMaxEntries(e){if(e<0)throw new Error(`The maxEntries of LRU caches must be at least 0, but got ${e}.`);if(this.maxEntries>e)for(let t=0;t<this.maxEntries-e;t++){const e=this.cache.keys().next().value;this.cache.delete(e)}this.maxEntries=e}}function my(e,t){if(Array.isArray(e)){let n=[];for(let r=0;r<t;r++)n=n.concat(e);return n}{const n=new Array(t);return n.fill(e),n}}function gy(e,t){if(!e)throw new py(t)}function yy(e,t){let n=0;for(const r of e)r===t&&n++;return n}function by(e){return 1===e.length?e[0]:e}function xy(e){return Array.isArray(e)?e:[e]}function wy(e){const t=e.replace(/(.)([A-Z][a-z0-9]+)/g,"$1_$2").replace(/([a-z])([A-Z])/g,"$1_$2").toLowerCase();return"_"!==t[0]?t:"private"+t}function vy(e){return e.length<=1||-1===e.indexOf("_")?e:e.replace(/[_]+(\w|$)/g,(e,t)=>t.toUpperCase())}let ky={};function Ny(e){if(null==e)return null;const t={};return t.className=e.getClassName(),t.config=e.getConfig(),t}function Iy(e){if(null!=e&&"object"==typeof e)if(Array.isArray(e))e.forEach(e=>Iy(e));else{const t=Object.keys(e);for(const n of t){const t=e[n];null!=t&&"object"==typeof t&&(Array.isArray(t)||"ndarray"!==t.type||"number"!=typeof t.value?Iy(t):e[n]=t.value)}}}function Sy(e,t={},n={},r="object",s=!1){if("string"==typeof e){const s=e;let a;if(s in n)a=n[s];else if(s in ky)a=ky[s];else if(a=t[s],null==a)throw new hy(`Unknown ${r}: ${e}. This may be due to one of the following reasons:\n1. The ${r} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.\n2. The custom ${r} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);return a}{const a=e;if(null==a.className||null==a.config)throw new hy(`${r}: Improper config format: ${JSON.stringify(a)}.\n'className' and 'config' must set.`);const i=a.className;let o,u;if(i in n?[o,u]=n[i]:i in ky?[o,u]=ky.className:i in t&&([o,u]=t[i]),null==o)throw new hy(`Unknown ${r}: ${i}. This may be due to one of the following reasons:\n1. The ${r} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.\n2. The custom ${r} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);if(null!=u){const e={};for(const t of Object.keys(ky))e[t]=ky[t];for(const t of Object.keys(n))e[t]=n[t];a.config.customObjects=e;const t=Object.assign({},ky);for(const e of Object.keys(n))ky[e]=n[e];Iy(a.config);const r=u(o,a.config,n,s);return ky=Object.assign({},t),r}{const e=Object.assign({},ky);for(const e of Object.keys(n))ky[e]=n[e];const t=new o(a.config);return ky=Object.assign({},e),t}}}function Ty(e,t){return-1*function(e,t){return e<t?-1:e>t?1:0}(e,t)}function Ey(e){if(null==e)return e;const t=[];for(const n of e)-1===t.indexOf(n)&&t.push(n);return t}function Cy(e){if(null==e)throw new hy(`Invalid value in obj: ${JSON.stringify(e)}`);for(const t in e)if(e.hasOwnProperty(t))return!1;return!0}function $y(e,t,n){if(null!=n&&e.indexOf(n)<0)throw new hy(`${n} is not a valid ${t}.  Valid values are ${e} or null/undefined.`)}function Ay(e,t,n=0,r=1/0){return gy(n>=0),gy(r>=n),Array.isArray(e)&&e.length>=n&&e.length<=r&&e.every(e=>typeof e===t)}function Ry(e,t){Array.isArray(e)?(ie(e.length>0,()=>`${t} is unexpectedly an empty array.`),e.forEach((e,n)=>Ry(e,`element ${n+1} of ${t}`))):ie(Number.isInteger(e)&&e>0,()=>`Expected ${t} to be a positive integer, but got ${_y(e)}.`)}function _y(e){return null===e?"null":Array.isArray(e)?"["+e.map(e=>_y(e)).join(",")+"]":"string"==typeof e?`"${e}"`:`${e}`}function Dy(e){return"relu"===e?"relu":"linear"===e?"linear":"elu"===e?"elu":null}let Fy=0;function My(){return Fy++}const Oy={};function Ly(e=""){return e in Oy||(Oy[e]=0),Oy[e]+=1,e+Oy[e].toString()}const zy=["channelsFirst","channelsLast"],Py=["nearest","bilinear"],By=["valid","same","causal"],Vy=["max","avg"],Uy=["sum","mul","concat","ave"],Wy=new Map;function Gy(e){$y(zy,"DataFormat",e)}function Hy(e){$y(By,"PaddingMode",e)}function jy(e){$y(Vy,"PoolMode",e)}const Ky=[];function qy(e,t){Ky.push(e);try{const e=t();return Ky.pop(),e}catch(e){throw Ky.pop(),e}}function Xy(e){if(!Qy(e))throw new Error("Not a valid tensor name: '"+e+"'");return(0===Ky.length?"":Ky.join("/")+"/")+e}function Yy(e){if(!Qy(e))throw new Error("Not a valid tensor name: '"+e+"'");Wy.has(e)||Wy.set(e,0);const t=Wy.get(e);if(Wy.set(e,Wy.get(e)+1),t>0){const n=`${e}_${t}`;return Wy.set(n,1),n}return e}const Zy=new RegExp(/^[A-Za-z0-9][-A-Za-z0-9\._\/]*$/);function Qy(e){return!!e.match(Zy)}function Jy(e){return e===parseInt(e.toString(),10)}function eb(e,t,n){null==t&&(t=0),null==n&&(n=e.length);let r=1;for(let s=t;s<n;++s)r*=e[s];return r}function tb(e){if(0===e.length)return Number.NaN;let t=Number.POSITIVE_INFINITY;for(let n=0;n<e.length;n++){const r=e[n];r<t&&(t=r)}return t}function nb(e){if(0===e.length)return Number.NaN;let t=Number.NEGATIVE_INFINITY;for(let n=0;n<e.length;n++){const r=e[n];r>t&&(t=r)}return t}function rb(e,t){if(t<e)throw new hy(`end (${t}) < begin (${e}) is forbidden.`);const n=[];for(let r=e;r<t;++r)n.push(r);return n}let sb;function ab(){return null==sb&&(sb=xi().epsilon()),sb}function ib(e,t){return No(e,t)}function ob(e,t=-1){const n=e.shape.slice();return t<0&&(t=n.length+t+1),n.splice(t,0,1),sc(e,n)}function ub(e,t,n){return ui(()=>{switch(e.rank){case 1:return Ud(e,t,n);case 2:return Wd(e,[t,0],[n,e.shape[1]]);case 3:return Gd(e,[t,0,0],[n,e.shape[1],e.shape[2]]);case 4:return Hd(e,[t,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3]]);case 5:return lc(e,[t,0,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3],e.shape[4]]);case 6:return lc(e,[t,0,0,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3],e.shape[4],e.shape[5]]);default:throw new hy(`sliceAlongFirstAxis() received an unsupported tensor rank: ${e.rank}`)}})}function lb(e,t,n){return ui(()=>{switch(e.rank){case 1:return Ud(e,t,n);case 2:return Wd(e,[0,t],[e.shape[0],n]);case 3:return Gd(e,[0,0,t],[e.shape[0],e.shape[1],n]);case 4:return Hd(e,[0,0,0,t],[e.shape[0],e.shape[1],e.shape[2],n]);default:throw new hy(`sliceAlongLastAxis() received an unsupported tensor rank: ${e.rank}`)}})}function cb(e,t,n,r){return ui(()=>{switch(e.rank){case 1:return Ud(e,t,n);case 2:switch(r){case 1:return ub(e,t,n);case 2:return lb(e,t,n);default:throw new hy(`The axis is not within the rank of the tensor ${r}`)}case 3:switch(r){case 1:return ub(e,t,n);case 2:return Gd(e,[0,t,0],[e.shape[0],n,e.shape[2]]);case 3:return lb(e,t,n);default:throw new hy(`The axis is not within the rank of the tensor ${r}`)}case 4:switch(r){case 1:return ub(e,t,n);case 2:return Hd(e,[0,t,0,0],[e.shape[0],n,e.shape[2],e.shape[3]]);case 3:return Hd(e,[0,0,t,0],[e.shape[0],e.shape[1],n,e.shape[3]]);case 4:return lb(e,t,n);default:throw new hy(`The axis is not within the rank of the tensor ${r}`)}default:throw new hy(`sliceAlongLastAxis() received an unsupported tensor rank: ${e.rank}`)}})}function hb(e,t=-1){let n;return t<0&&(n=e[0].rank,t=0!==n?n:0),t===e[0].rank&&(t=-1),oc(e,t)}function db(e,t){switch(e.rank){case 1:return Nc([e,t]);case 2:return Ic([e,t],0);case 3:return Sc([e,t],0);case 4:return Tc([e,t],0);default:throw new hy(`concatAlongFirstAxis() received an unsupported tensor rank: ${e.rank}`)}}function pb(e,t){if(Array.isArray(t)||(t=[t]),e.rank!==t.length)throw new hy(`The length of input n (${t.length}) does not match the number of dimensions in input x (${e.rank})`);return fh(e,t)}function fb(e,t=0,n=1,r,s){return vd(e,t,n,r,s)}function mb(e,t,n,r){if(e.rank<2||t.rank<2)throw new dy(`dot requires both inputs to be rank >= 2 but got x shape = ${e.shape} and y shape = ${t.shape}`);if(t.rank>=3&&e.shape.slice(-1)[0]!==t.shape.slice(-2)[0])throw new dy(`If rank y >= 3, then the second last dim of y must equal the last dim of x but got x shape = ${e.shape} and  y shape = ${t.shape}`);if(2===e.rank&&2===t.rank)return Lp({a:e,b:t,transposeA:!1,transposeB:!1,bias:r?bb(e.rank,r,"channelsLast"):null,activation:n});{const s=e.shape.slice(),a=s.pop();e=sc(e,[-1,a]);const i=t.shape.slice(),o=i.pop(),u=i.pop(),l=[...i,o],c=Array.from({length:t.rank},(e,n)=>0===n?t.rank-2:n<=t.rank-2?n-1:n);t=sc(Mu(t,c),[u,-1]);const h=[...s,...l];return sc(Lp({a:e,b:t,transposeA:!1,transposeB:!1,bias:r?bb(e.rank,r,"channelsLast"):null,activation:n}),h)}}function gb(e,t,n){return ui(()=>(t=Array.isArray(t)?sp(t,"int32"):No(t,"int32"),yh(e,t,n)))}function yb(e){return $o(e,e)}function bb(e,t,n){const r=t.shape;if(1!==t.rank&&t.rank!==e)throw new hy(`Unexpected bias dimensions: ${t.rank}; expected it to be 1 or ${e}`);if(5===e){if("channelsFirst"===n)return 1===r.length?sc(t,[1,r[0],1,1,1]):sc(t,[1,r[3],r[0],r[1],r[2]]);if("channelsLast"===n)return 1===r.length?sc(t,[1,1,1,1,r[0]]):sc(t,[1].concat(r))}else if(4===e){if("channelsFirst"===n)return 1===r.length?sc(t,[1,r[0],1,1]):sc(t,[1,r[2],r[0],r[1]]);if("channelsLast"===n)return 1===r.length?sc(t,[1,1,1,r[0]]):sc(t,[1].concat(r))}else if(3===e){if("channelsFirst"===n)return 1===r.length?sc(t,[1,r[0],1]):sc(t,[1,r[1],r[0]]);if("channelsLast"===n)return 1===r.length?sc(t,[1,1,r[0]]):sc(t,[1].concat(r))}else if(e<3)return t;throw new hy(`Unsupported input rank by biasAdd: ${t.rank}`)}function xb(e,t,n){return ui(()=>(null==n&&(n="channelsLast"),Gy(n),To(e,bb(e.rank,t,n))))}function wb(e,t,n,r){return ui(()=>Ip(e,t,n,r))}function vb(e,t,n=!1){return n?e():t()}const kb=["fanIn","fanOut","fanAvg"],Nb=["normal","uniform","truncatedNormal"];class Ib extends Wo{fromConfigUsesCustomObjects(){return!1}getConfig(){return{}}}class Sb extends Ib{apply(e,t){return Hh(e,t)}}Sb.className="Zeros",Ho(Sb);class Tb extends Ib{apply(e,t){return jh(e,t)}}Tb.className="Ones",Ho(Tb);class Eb extends Ib{constructor(e){if(super(),"object"!=typeof e)throw new hy(`Expected argument of type ConstantConfig but got ${e}`);if(void 0===e.value)throw new hy(`config must have value set but got ${e}`);this.value=e.value}apply(e,t){return ui(()=>$o(Bo(this.value),jh(e,t)))}getConfig(){return{value:this.value}}}Eb.className="Constant",Ho(Eb);class Cb extends Ib{constructor(e){super(),this.DEFAULT_MINVAL=-.05,this.DEFAULT_MAXVAL=.05,this.minval=e.minval||this.DEFAULT_MINVAL,this.maxval=e.maxval||this.DEFAULT_MAXVAL,this.seed=e.seed}apply(e,t){return Nd(e,this.minval,this.maxval,t,this.seed)}getConfig(){return{minval:this.minval,maxval:this.maxval,seed:this.seed}}}Cb.className="RandomUniform",Ho(Cb);class $b extends Ib{constructor(e){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=e.mean||this.DEFAULT_MEAN,this.stddev=e.stddev||this.DEFAULT_STDDEV,this.seed=e.seed}apply(e,t){if("float32"!==(t=t||"float32")&&"int32"!==t)throw new dy(`randomNormal does not support dType ${t}.`);return fb(e,this.mean,this.stddev,t,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}$b.className="RandomNormal",Ho($b);class Ab extends Ib{constructor(e){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=e.mean||this.DEFAULT_MEAN,this.stddev=e.stddev||this.DEFAULT_STDDEV,this.seed=e.seed}apply(e,t){if("float32"!==(t=t||"float32")&&"int32"!==t)throw new dy(`truncatedNormal does not support dType ${t}.`);return hp(e,this.mean,this.stddev,t,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}Ab.className="TruncatedNormal",Ho(Ab);class Rb extends Ib{constructor(e){super(),this.gain=null!=e.gain?e.gain:1}apply(e,t){return ui(()=>{if(2!==e.length||e[0]!==e[1])throw new hy("Identity matrix initializer can only be used for 2D square matrices.");return $o(this.gain,mh(e[0]))})}getConfig(){return{gain:this.gain}}}Rb.className="Identity",Ho(Rb);class _b extends Ib{constructor(e){if(super(),e.scale<0)throw new hy(`scale must be a positive float. Got: ${e.scale}`);var t;this.scale=null==e.scale?1:e.scale,this.mode=null==e.mode?"fanIn":e.mode,t=this.mode,$y(kb,"FanMode",t),this.distribution=null==e.distribution?"normal":e.distribution,function(e){$y(Nb,"Distribution",e)}(this.distribution),this.seed=e.seed}apply(e,t){const n=function(e,t="channelsLast"){let n,r;if(Gy(t),2===e.length)n=e[0],r=e[1];else if(-1!==[3,4,5].indexOf(e.length)){if("channelsFirst"===t){const t=eb(e,2);n=e[1]*t,r=e[0]*t}else if("channelsLast"===t){const t=eb(e,0,e.length-2);n=e[e.length-2]*t,r=e[e.length-1]*t}}else{const t=eb(e);n=Math.sqrt(t),r=Math.sqrt(t)}return[n,r]}(e),r=n[0],s=n[1];let a=this.scale;if("fanIn"===this.mode?a/=Math.max(1,r):"fanOut"===this.mode?a/=Math.max(1,s):a/=Math.max(1,(r+s)/2),"normal"===this.distribution){const n=Math.sqrt(a);if("float32"!==(t=t||"float32")&&"int32"!==t)throw new dy(`${this.getClassName()} does not support dType ${t}.`);return hp(e,0,n,t,this.seed)}{const n=Math.sqrt(3*a);return Nd(e,-n,n,t,this.seed)}}getConfig(){return{scale:this.scale,mode:this.mode,distribution:this.distribution,seed:this.seed}}}_b.className="VarianceScaling",Ho(_b);class Db extends _b{constructor(e){super({scale:1,mode:"fanAvg",distribution:"uniform",seed:null==e?null:e.seed})}getClassName(){return _b.className}}Db.className="GlorotUniform",Ho(Db);class Fb extends _b{constructor(e){super({scale:1,mode:"fanAvg",distribution:"normal",seed:null==e?null:e.seed})}getClassName(){return _b.className}}Fb.className="GlorotNormal",Ho(Fb);class Mb extends _b{constructor(e){super({scale:2,mode:"fanIn",distribution:"normal",seed:null==e?null:e.seed})}getClassName(){return _b.className}}Mb.className="HeNormal",Ho(Mb);class Ob extends _b{constructor(e){super({scale:2,mode:"fanIn",distribution:"uniform",seed:null==e?null:e.seed})}getClassName(){return _b.className}}Ob.className="HeUniform",Ho(Ob);class Lb extends _b{constructor(e){super({scale:1,mode:"fanIn",distribution:"normal",seed:null==e?null:e.seed})}getClassName(){return _b.className}}Lb.className="LeCunNormal",Ho(Lb);class zb extends _b{constructor(e){super({scale:1,mode:"fanIn",distribution:"uniform",seed:null==e?null:e.seed})}getClassName(){return _b.className}}zb.className="LeCunUniform",Ho(zb);class Pb extends Ib{constructor(e){super(),this.DEFAULT_GAIN=1,this.ELEMENTS_WARN_SLOW=2e3,this.gain=null==e.gain?this.DEFAULT_GAIN:e.gain,this.seed=e.seed}apply(e,t){return ui(()=>{if(e.length<2)throw new dy("Shape must be at least 2D.");if("int32"!==t&&"float32"!==t&&void 0!==t)throw new TypeError(`Unsupported data type ${t}.`);const n=le(e.slice(0,-1)),r=e[e.length-1],s=n*r;s>this.ELEMENTS_WARN_SLOW&&console.warn(`Orthogonal initializer is being called on a matrix with more than ${this.ELEMENTS_WARN_SLOW} (${s}) elements: Slowness may result.`);const a=fb([Math.max(r,n),Math.min(r,n)],0,1,t,this.seed),i=Of.qr(a,!1);let o=i[0];const u=i[1].flatten().stridedSlice([0],[Math.min(r,n)*Math.min(r,n)],[Math.min(r,n)+1]);return o=$o(o,u.sign()),n<r&&(o=o.transpose()),$o(Bo(this.gain),o.reshape(e))})}getConfig(){return{gain:this.gain,seed:this.seed}}}Pb.className="Orthogonal",Ho(Pb);const Bb={constant:"Constant",glorotNormal:"GlorotNormal",glorotUniform:"GlorotUniform",heNormal:"HeNormal",heUniform:"HeUniform",identity:"Identity",leCunNormal:"LeCunNormal",leCunUniform:"LeCunUniform",ones:"Ones",orthogonal:"Orthogonal",randomNormal:"RandomNormal",randomUniform:"RandomUniform",truncatedNormal:"TruncatedNormal",varianceScaling:"VarianceScaling",zeros:"Zeros"};function Vb(e,t={}){return Sy(e,Go.getMap().classNameMap,t,"initializer")}function Ub(e){return Ny(e)}function Wb(e){if("string"==typeof e){const t=e in Bb?Bb[e]:e;if("GlorotNormal"===t)return new Fb;if("GlorotUniform"===t)return new Db;if("HeNormal"===t)return new Mb;if("HeUniform"===t)return new Ob;if("LeCunNormal"===t)return new Lb;if("LeCunUniform"===t)return new zb;{const e={};return e.className=t,e.config={},Vb(e)}}return e instanceof Ib?e:Vb(e)}function Gb(e){return Array.isArray(e)&&Array.isArray(e[0])}function Hb(e){return 0===e.length?[]:Array.isArray(e[0])?e:[e]}function jb(e){let t;if(Array.isArray(e)){if(1!==e.length)throw new hy(`Expected Tensor length to be 1; got ${e.length}`);t=e[0]}else t=e;return t}function Kb(e){if(Array.isArray(e)&&Array.isArray(e[0])){if(1===e.length)return e[0];throw new hy(`Expected exactly 1 Shape; got ${e.length}`)}return e}function qb(e){let t=0;for(const n of e)0===n.shape.length?t+=1:t+=n.shape.reduce((e,t)=>e*t);return t}const Xb="Variable";class Yb{constructor(e,t="float32",n=Xb,r=!0,s=null){this.dtype=null==t?"float32":t,this.shape=e.shape,this.id=My(),n=null==n?Xb:n,this.originalName=Xy(n),this.name=Yy(this.originalName),this.trainable_=r,this.constraint=s,this.val=gp(e,this.trainable_,this.name,this.dtype)}read(){return this.assertNotDisposed(),this.val}write(e){return this.assertNotDisposed(),function(e,t){if(e.shape.toString()!==t.shape.toString())throw new Error("Shape mismatch: "+JSON.stringify(e.shape)+" vs. "+JSON.stringify(t.shape))}(this.val,e),this.val.id!==e.id&&(this.val.assign(e),null!=this.constraint&&this.val.assign(this.constraint.apply(this.val))),this}dispose(){this.assertNotDisposed(),this.val.dispose()}assertNotDisposed(){if(this.val.isDisposed)throw new Error(`LayersVariable ${this.name} is already disposed.`)}get trainable(){return this.trainable_}set trainable(e){this.trainable_=e,this.val.trainable=e}}function Zb(e){return e.map(e=>e.read())}function Qb(e){e.forEach(e=>{e[0].write(e[1])})}class Jb{constructor(e){this.dtype=e.dtype,this.shape=e.shape,null!=e.shape?this.ndim=e.shape.length:this.ndim=e.ndim,this.maxNDim=e.maxNDim,this.minNDim=e.minNDim,this.axes=e.axes||{}}}class ex{constructor(e,t,n,r,s,a,i){this.dtype=e,this.shape=t,this.sourceLayer=n,this.inputs=r,this.callArgs=s,this.outputTensorIndex=i,this.id=My(),null!=a&&(this.originalName=Xy(a),this.name=Yy(this.originalName)),this.rank=t.length}}let tx=0;class nx{constructor(e,t){this.callArgs=t,this.id=tx++,this.outboundLayer=e.outboundLayer,this.inboundLayers=e.inboundLayers,this.nodeIndices=e.nodeIndices,this.tensorIndices=e.tensorIndices,this.inputTensors=e.inputTensors,this.outputTensors=e.outputTensors,this.inputMasks=e.inputMasks,this.outputMasks=e.outputMasks,this.inputShapes=e.inputShapes,this.outputShapes=e.outputShapes;for(const t of e.inboundLayers)null!=t&&t.outboundNodes.push(this);e.outboundLayer.inboundNodes.push(this)}getConfig(){const e=[];for(const t of this.inboundLayers)null!=t?e.push(t.name):e.push(null);return{outboundLayer:this.outboundLayer?this.outboundLayer.name:null,inboundLayers:e,nodeIndices:this.nodeIndices,tensorIndices:this.tensorIndices}}}let rx=0;class sx extends Wo{constructor(e={}){super(),this._callHook=null,this._addedWeightNames=[],this._stateful=!1,this.id=rx++,this.activityRegularizer=null,this.inputSpec=null,this.supportsMasking=!1,this._trainableWeights=[],this._nonTrainableWeights=[],this._losses=[],this._updates=[],this._built=!1,this.inboundNodes=[],this.outboundNodes=[];let t=e.name;if(!t){const e=this.getClassName();t=wy(e)+"_"+Ly(e)}if(this.name=t,this.trainable_=null==e.trainable||e.trainable,null!=e.inputShape||null!=e.batchInputShape){let t;if(null!=e.batchInputShape)t=e.batchInputShape;else if(null!=e.inputShape){let n=null;null!=e.batchSize&&(n=e.batchSize),t=[n].concat(e.inputShape)}this.batchInputShape=t;let n=e.dtype;null==n&&(n=e.inputDType),null==n&&(n="float32"),this.dtype=n}null!=e.weights?this.initialWeights=e.weights:this.initialWeights=null,this._refCount=null,this.fastWeightInitDuringBuild=!1}static nodeKey(e,t){return e.name+"_ib-"+t.toString()}getNodeAtIndex(e,t){if(0===this.inboundNodes.length)throw new cy(`The layer has never been called and thus has no defined ${t}.`);if(this.inboundNodes.length<=e)throw new hy(`Asked to get ${t} at node ${e}, but the layer has only ${this.inboundNodes.length} inbound nodes.`);return this.inboundNodes[e]}getInputAt(e){return by(this.getNodeAtIndex(e,"input").inputTensors)}getOutputAt(e){return by(this.getNodeAtIndex(e,"output").outputTensors)}get input(){if(this.inboundNodes.length>1)throw new ly(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer input" is ill-defined. Use \`getInputAt(nodeIndex)\` instead.`);if(0===this.inboundNodes.length)throw new ly(`Layer ${this.name} is not connected, no input to return.`);return by(this.getNodeAtIndex(0,"input").inputTensors)}get output(){if(0===this.inboundNodes.length)throw new ly(`Layer ${this.name} has no inbound nodes.`);if(this.inboundNodes.length>1)throw new ly(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer output" is ill-defined. Use \`getOutputAt(nodeIndex)\` instead.`);return by(this.getNodeAtIndex(0,"output").outputTensors)}get losses(){return this._losses}calculateLosses(){return this.losses.map(e=>e())}get updates(){return this._updates}get built(){return this._built}set built(e){this._built=e}get trainable(){return this.trainable_}set trainable(e){this._trainableWeights.forEach(t=>t.trainable=e),this.trainable_=e}get trainableWeights(){return this.trainable_?this._trainableWeights.filter(e=>e.trainable):[]}set trainableWeights(e){this._trainableWeights=e}get nonTrainableWeights(){return this.trainable?this._trainableWeights.filter(e=>!e.trainable).concat(this._nonTrainableWeights):this._trainableWeights.concat(this._nonTrainableWeights)}set nonTrainableWeights(e){this._nonTrainableWeights=e}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}get stateful(){return this._stateful}resetStates(){if(!this.stateful)throw new Error("Cannot call the resetStates() method of a non-stateful Layer object.")}assertInputCompatibility(e){const t=xy(e);if(null==this.inputSpec||0===this.inputSpec.length)return;const n=xy(this.inputSpec);if(t.length!==n.length)throw new hy(`Layer ${this.name} expects ${n.length} inputs, but it received ${t.length} input tensors. Input received: ${e}`);for(let e=0;e<t.length;e++){const r=t[e],s=n[e];if(null==s)continue;const a=r.rank;if(null!=s.ndim&&a!==s.ndim)throw new hy(`Input ${e} is incompatible with layer ${this.name}: expected ndim=${s.ndim}, found ndim=${a}`);if(null!=s.maxNDim&&a>s.maxNDim)throw new hy(`Input ${e} is incompatible with layer ${this.name}: expected max_ndim=${s.maxNDim}, found ndim=${a}`);if(null!=s.minNDim&&a<s.minNDim)throw new hy(`Input ${e} is incompatible with layer ${this.name}: expected min_ndim=${s.minNDim}, found ndim=${a}.`);if(null!=s.dtype&&r.dtype!==s.dtype)throw new hy(`Input ${e} is incompatible with layer ${this.name} : expected dtype=${s.dtype}, found dtype=${r.dtype}.`);if(s.axes){const t=r.shape;for(const n in s.axes){const r=Number(n),a=s.axes[n],i=r>=0?t[r]:t[t.length+r];if(null!=a&&-1===[a,null].indexOf(i))throw new hy(`Input ${e} is incompatible with layer ${this.name}: expected axis ${r} of input shape to have value ${a} but got shape ${t}.`)}}if(null!=s.shape)for(let t=0;t<s.shape.length;++t){const n=s.shape[t],a=r.shape[t];if(null!=n&&null!=a&&n!==a)throw new hy(`Input ${e} is incompatible with layer ${this.name}: expected shape=${s.shape}, found shape=${r.shape}.`)}}}call(e,t){return e}invokeCallHook(e,t){null!=this._callHook&&this._callHook(e,t)}setCallHook(e){this._callHook=e}clearCallHook(){this._callHook=null}apply(e,t){t=t||{},this.assertNotDisposed();const n=xy(e),r=function(e){let t=!0;for(const n of xy(e))if(!(n instanceof ex)){t=!1;break}return t}(e),s=function(e){let t=!0;for(const n of xy(e))if(n instanceof ex){t=!1;break}return t}(e);if(r===s)throw new hy("Arguments to apply() must be all SymbolicTensors or all Tensors");return qy(this.name,()=>{if(!this.built){this.assertInputCompatibility(e);const t=[];for(const n of xy(e))t.push(n.shape);this.build(by(t)),this.built=!0,this.initialWeights&&this.setWeights(this.initialWeights),null===this._refCount&&s&&(this._refCount=1)}if(this.assertInputCompatibility(e),s){let r=this.call(e,t);this.supportsMasking&&this.setMaskMetadata(e,r);const s=xy(r),a=[];for(let e of s)-1!==n.indexOf(e)&&(e=e.clone()),a.push(e);if(r=by(a),null!=this.activityRegularizer)throw new dy("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return r}{const n=function(e){e=xy(e);const t=[];for(const n of e)t.push(n.shape);return by(t)}(e),r=this.computeOutputShape(n);let s;const a="float32";if(this.warnOnIncompatibleInputShape(Array.isArray(e)?n[0]:n),s=null!=r&&r.length>0&&Array.isArray(r[0])?r.map((n,r)=>new ex(a,n,this,xy(e),t,this.name,r)):new ex(a,r,this,xy(e),t,this.name),this.addInboundNode(e,s,null,null,n,r,t),this._refCount++,null!=this.activityRegularizer)throw new dy("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return s}})}warnOnIncompatibleInputShape(e){if(null!=this.batchInputShape)if(e.length!==this.batchInputShape.length)console.warn(`The rank of the input tensor provided (shape: ${JSON.stringify(e)}) does not match that of the batchInputShape (${JSON.stringify(this.batchInputShape)}) of the layer ${this.name}`);else{let t=!1;this.batchInputShape.forEach((n,r)=>{null!=n&&null!=e[r]&&e[r]!==n&&(t=!0)}),t&&console.warn(`The shape of the input tensor (${JSON.stringify(e)}) does not match the expectation of layer ${this.name}: ${JSON.stringify(this.batchInputShape)}`)}}get outputShape(){if(null==this.inboundNodes||0===this.inboundNodes.length)throw new ly(`The layer ${this.name} has never been called and thus has no defined output shape.`);const e=[];for(const t of this.inboundNodes){const n=JSON.stringify(t.outputShapes);-1===e.indexOf(n)&&e.push(n)}if(1===e.length){const e=this.inboundNodes[0].outputShapes;return Array.isArray(e)&&Array.isArray(e[0])&&1===e.length?e[0]:e}throw new ly(`The layer ${this.name} has multiple inbound nodes with different output shapes. Hence the notion of "output shape" is ill-defined for the layer.`)}countParams(){if(!this.built)throw new cy(`You tried to call countParams() on ${this.name}, but the layer is not built yet. Build it first by calling build(batchInputShape).`);return qb(this.weights)}build(e){this.built=!0}getWeights(e=!1){return Zb(e?this.trainableWeights:this.weights)}setWeights(e){ui(()=>{const t=this.weights;if(t.length!==e.length)throw new hy(`You called setWeights(weights) on layer "${this.name}" with a weight list of length ${e.length}, but the layer was expecting ${t.length} weights. Provided weights: ${e}...`);if(0===t.length)return;const n=[],r=Zb(t);for(let s=0;s<r.length;++s){const a=r[s],i=t[s],o=e[s];if(!de(a.shape,o.shape))throw new hy(`Layer weight shape ${a.shape} not compatible with provided weight shape ${o.shape}`);n.push([i,o])}Qb(n)})}addWeight(e,t,n,r,s,a,i,o){if(-1!==this._addedWeightNames.indexOf(e))throw new hy(`Duplicate weight name ${e} for layer ${this.name}`);this._addedWeightNames.push(e),null==n&&(n="float32"),this.fastWeightInitDuringBuild&&(r=null!=o?o():Wb("zeros"));const u=r.apply(t,n),l=new Yb(u,n,e,a,i);return u.dispose(),null!=s&&this.addLoss(()=>s.apply(l.read())),null==a&&(a=!0),a?this._trainableWeights.push(l):this._nonTrainableWeights.push(l),l}setFastWeightInitDuringBuild(e){this.fastWeightInitDuringBuild=e}addLoss(e){null==e||Array.isArray(e)&&0===e.length||(e=xy(e),void 0!==this._losses&&null!==this._losses&&this.losses.push(...e))}computeOutputShape(e){return e}computeMask(e,t){if(!this.supportsMasking){if(null!=t){if(!Array.isArray(t))throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`);t.forEach(e=>{if(null!=e)throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`)})}return null}return t}setMaskMetadata(e,t,n){if(!this.supportsMasking)return;const r=this.computeMask(e,n),s=xy(t),a=xy(r);if(s.length!==a.length)throw new Error(`${this.name} outputs ${s.length} tensors but ${s.length} masks for those tensors`);for(let e=0;e<s.length;e++)s[e].kerasMask=a[e]}addInboundNode(e,t,n,r,s,a,i=null){const o=xy(e);t=xy(t),n=xy(n),r=xy(r),s=Hb(s),a=Hb(a);const u=[],l=[],c=[];for(const e of o)u.push(e.sourceLayer),l.push(e.nodeIndex),c.push(e.tensorIndex);new nx({outboundLayer:this,inboundLayers:u,nodeIndices:l,tensorIndices:c,inputTensors:o,outputTensors:t,inputMasks:n,outputMasks:r,inputShapes:s,outputShapes:a},i);for(let e=0;e<t.length;e++)t[e].sourceLayer=this,t[e].nodeIndex=this.inboundNodes.length-1,t[e].tensorIndex=e}getConfig(){const e={name:this.name,trainable:this.trainable};return null!=this.batchInputShape&&(e.batchInputShape=this.batchInputShape),null!=this.dtype&&(e.dtype=this.dtype),e}disposeWeights(){return this.weights.forEach(e=>e.dispose()),this.weights.length}assertNotDisposed(){if(0===this._refCount)throw new Error(`Layer '${this.name}' is already disposed.`)}dispose(){if(!this.built)throw new Error(`Cannot dispose Layer ${this.name} because it has not been built yet.`);if(null===this._refCount)throw new Error(`Cannot dispose Layer ${this.name} because it has not been used yet.`);this.assertNotDisposed();let e=0;return 0===--this._refCount&&(e=this.disposeWeights()),{refCountAfterDispose:this._refCount,numDisposedVariables:e}}}function ax(e,t,n){if((null==t||null!=n&&n>0)&&(t=e.sourceLayer,n=e.nodeIndex),0===t.inboundNodes.length)return[e];{const e=t.inboundNodes[n];if(0===e.inboundLayers.length)return e.inputTensors;{const t=[];for(let n=0;n<e.inboundLayers.length;n++){const r=ax(e.inputTensors[n],e.inboundLayers[n],e.nodeIndices[n]);for(const e of r)-1===t.indexOf(e)&&t.push(e)}return t}}}class ix extends sx{constructor(e){if(super({dtype:e.dtype,name:null!=e.name?e.name:Ly("input").toString()}),null==e.batchSize&&(e.batchSize=null),null==e.sparse&&(e.sparse=!1),this.trainable=!1,this.built=!0,this.sparse=e.sparse,null!=e.inputShape&&null!=e.batchInputShape)throw new hy("Only provide the inputShape OR batchInputShape argument to inputLayer, not both at the same time.");let t=e.batchInputShape;if(null==t){if(null==e.inputShape)throw new hy("An InputLayer should be passed either a `batchInputShape` or an `inputShape`.");t=[e.batchSize].concat(e.inputShape)}else if(null!=e.batchSize)throw new hy("Cannot specify batchSize if batchInputShape is specified when creating an InputLayer.");const n=e.dtype||"float32";this.batchInputShape=t,this.dtype=n,this.inputSpec=[{shape:t}];const r=new ex(this.dtype,this.batchInputShape,this,[],{},this.name);r.nodeIndex=0,r.tensorIndex=0,new nx({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:[r],outputTensors:[r],inputMasks:[null],outputMasks:[null],inputShapes:[t],outputShapes:[t]})}apply(e,t){throw new hy(`Cannot pass any input to an InputLayer's apply() method. InputLayer name: ${this.name}`)}dispose(){return{refCountAfterDispose:this._refCount,numDisposedVariables:0}}getConfig(){return{batchInputShape:this.batchInputShape,dtype:this.dtype,sparse:this.sparse,name:this.name}}}function ox(e){if(null==e.batchShape&&null==e.shape)throw new Error("Please provide to Input either a `shape` or a `batchShape` argument. Note that `shape` does not include the batch dimension.");if(null!=e.batchShape&&null!=e.shape)throw new hy("Please provide either a `shape` or `batchShape` argument to Input, but not both.");let t=e.batchShape;null!=e.shape&&null==t&&(t=[null].concat(e.shape));let n=e.dtype;return null==n&&(n="float32"),new ix({batchInputShape:t,name:e.name,dtype:n,sparse:e.sparse}).inboundNodes[0].outputTensors[0]}ix.className="InputLayer",Ho(ix);class ux{constructor(e){if(this.id2Value={},this.id2Mask={},this.name2Id={},e instanceof ux)for(const t in e.id2Value)this.id2Value[t]=e.id2Value[t],t in e.id2Mask&&(this.id2Mask[t]=e.id2Mask[t]);else{if(null==e)return;for(const t of e)this.add(t.key,t.value)}}add(e,t,n){if(null!=this.id2Value[e.id])throw new hy(`Duplicate key: name=${e.name}, id=${e.id}`);return this.id2Value[e.id]=function(e,t){if(null==e.dtype||e.dtype===t.dtype)return t;try{return No(t,e.dtype)}catch(n){throw new hy(`The dtype of the feed (${t.dtype}) can not be cast to the dtype of the key '${e.name}' (${e.dtype}).`)}}(e,t),this.name2Id[e.name]=e.id,null!=n&&(this.id2Mask[e.id]=n),this}addFeed(e){this.add(e.key,e.value)}hasKey(e){return null!=this.id2Value[e.id]}names(){return Object.keys(this.name2Id)}getValue(e){if(e instanceof ex){if(null==this.id2Value[e.id])throw new hy(`Nonexistent key: ${e.name}`);return this.id2Value[e.id]}{const t=this.name2Id[e];if(null==t)throw new hy(`Feed dict has no SymbolicTensor name: ${e}`);return this.id2Value[t]}}getMask(e){if(e instanceof ex){if(null==this.id2Value[e.id])throw new hy(`Nonexistent key: ${e.name}`);return this.id2Mask[e.id]}{const t=this.name2Id[e];if(null==t)throw new hy(`Feed dict has no SymbolicTensor name: ${e}`);return this.id2Mask[t]}}disposeMasks(){null!=this.id2Mask&&li(this.id2Mask)}}const lx=new fy,cx=new fy;function hx(e,t,n,r){const s=null!=n&&n.training,a=Array.isArray(e),i=a?e:[e],o=i.map(e=>e.name),u=[],l=t.names();for(const e of o)-1!==l.indexOf(e)?u.push(t.getValue(e)):u.push(null);null!=r&&(r.maxNumTensors=-1/0,r.minNumTensors=1/0);const c=o.join(",")+"|"+t.names().sort().join(",");let h,d=lx.get(c);if(null==d){const e=function(e,t){ie(null!=e&&e.length>0,()=>"Expected at least one fetch, got none");let n=[],r={};if(1===e.length){const s=px(e[0],t);n=s.sorted,r=s.recipientMap}else{const s=new Set;for(const a of e){const{sorted:e,recipientMap:i}=px(a,t);for(const t of e)s.has(t.name)||(n.push(t),s.add(t.name));for(const e in i)null==r[e]&&(r[e]=new Set),i[e].forEach(t=>r[e].add(t))}}return{sorted:n,recipientCounts:dx(r)}}(i,t);d=e.sorted,h=e.recipientCounts,lx.put(c,d),cx.put(c,h)}h={},s||Object.assign(h,cx.get(c));const p=new ux(t);for(let e=0;e<d.length;++e){if(null!=r){const e=ii().numTensors;e>r.maxNumTensors&&(r.maxNumTensors=e),e<r.minNumTensors&&(r.minNumTensors=e)}const a=d[e],i=a.sourceLayer;if(i instanceof ix)continue;const l=[],c=[],f=[];let m=!1;for(const e of a.inputs){const n=p.getValue(e),r=p.getMask(e);l.push(n),c.push(r),null!=r&&(m=!0),s||(h[e.name]--,0!==h[e.name]||t.hasKey(e)||-1!==o.indexOf(e.name)||n.isDisposed||!0===e.sourceLayer.stateful||f.push(n))}m&&((n=n||{}).mask=c[0]);const g=xy(i.apply(l,n));let y=null;i.supportsMasking&&(y=i.computeMask(l,c));const b=fx(a),x=Array.isArray(b)?b:[b];for(let e=0;e<x.length;++e){p.hasKey(x[e])||p.add(x[e],g[e],Array.isArray(y)?y[0]:y);const t=o.indexOf(x[e].name);-1!==t&&(u[t]=g[e])}s||li(f)}return p.disposeMasks(),a?u:u[0]}function dx(e){const t={};for(const n in e)t[n]=e[n].size;return t}function px(e,t){const n=new Set,r=[],s={};for(const e of t.names())n.add(e);const a=[],i=[];for(a.push(e);a.length>0;){const e=a[a.length-1];if(n.has(e.name)){a.pop();continue}const t=i[i.length-1]===a.length-1;if(0===e.inputs.length||t)a.pop(),r.push(e),n.add(e.name),t&&i.pop();else{i.push(a.length-1);for(const t of e.inputs)null==s[t.name]&&(s[t.name]=new Set),s[t.name].add(e.name),n.has(t.name)||a.push(t)}}return{sorted:r,recipientMap:s}}function fx(e){let t;if(1===e.sourceLayer.inboundNodes.length)t=e.sourceLayer.output;else{let n=null;for(let t=0;t<e.sourceLayer.inboundNodes.length;++t)for(const r of e.sourceLayer.inboundNodes[t].outputTensors)if(r.id===e.id){n=t;break}t=e.sourceLayer.getOutputAt(n)}return t}function mx(e,t){return ui(()=>Ao(oh($o(e,e),t,!0)))}Xe().registerFlag("TOPOLOGICAL_SORT_CACHE_MAX_ENTRIES",()=>100,function(e){null!=lx&&lx.setMaxEntries(e),null!=cx&&cx.setMaxEntries(e)});class gx extends Wo{getConfig(){return{}}}class yx extends gx{constructor(e){super(),this.defaultMaxValue=2,this.defaultAxis=0,this.maxValue=null!=e.maxValue?e.maxValue:this.defaultMaxValue,this.axis=null!=e.axis?e.axis:this.defaultAxis}apply(e){return ui(()=>{const t=mx(e,this.axis),n=kc(t,0,this.maxValue);return $o(e,Co(n,To(ab(),t)))})}getConfig(){return{maxValue:this.maxValue,axis:this.axis}}}yx.className="MaxNorm",Ho(yx);class bx extends gx{constructor(e){super(),this.defaultAxis=0,this.axis=null!=e.axis?e.axis:this.defaultAxis}apply(e){return ui(()=>Co(e,To(ab(),mx(e,this.axis))))}getConfig(){return{axis:this.axis}}}bx.className="UnitNorm",Ho(bx);class xx extends gx{apply(e){return Ed(e)}}xx.className="NonNeg",Ho(xx);class wx extends gx{constructor(e){super(),this.defaultMinValue=0,this.defaultMaxValue=1,this.defaultRate=1,this.defaultAxis=0,this.minValue=null!=e.minValue?e.minValue:this.defaultMinValue,this.maxValue=null!=e.maxValue?e.maxValue:this.defaultMaxValue,this.rate=null!=e.rate?e.rate:this.defaultRate,this.axis=null!=e.axis?e.axis:this.defaultAxis}apply(e){return ui(()=>{const t=mx(e,this.axis),n=To($o(this.rate,kc(t,this.minValue,this.maxValue)),$o(1-this.rate,t));return $o(e,Co(n,To(ab(),t)))})}getConfig(){return{minValue:this.minValue,maxValue:this.maxValue,rate:this.rate,axis:this.axis}}}wx.className="MinMaxNorm",Ho(wx);const vx={maxNorm:"MaxNorm",minMaxNorm:"MinMaxNorm",nonNeg:"NonNeg",unitNorm:"UnitNorm"};function kx(e){return Ny(e)}function Nx(e,t={}){return Sy(e,Go.getMap().classNameMap,t,"constraint")}function Ix(e){return null==e?null:"string"==typeof e?Nx({className:e in vx?vx[e]:e,config:{}}):e instanceof gx?e:Nx(e)}function Sx(e){return new yx(e)}function Tx(e){return new bx(e)}function Ex(){return new xx}function Cx(e){return new wx(e)}function $x(){return new Sb}function Ax(){return new Tb}function Rx(e){return new Eb(e)}function _x(e){return new Cb(e)}function Dx(e){return new $b(e)}function Fx(e){return new Ab(e)}function Mx(e){return new Rb(e)}function Ox(e){return new _b(e)}function Lx(e){return new Db(e)}function zx(e){return new Fb(e)}function Px(e){return new Mb(e)}function Bx(e){return new Ob(e)}function Vx(e){return new Lb(e)}function Ux(e){return new zb(e)}function Wx(e){return new Pb(e)}async function Gx(e){if(null==e)return;const t=[],n=[],r=[];for(const s in e){const a=e[s];if("number"!=typeof a){const e=a;t.push(e.data()),n.push(s),r.push(e)}}if(t.length>0){const s=await Promise.all(t);for(let t=0;t<s.length;++t)e[n[t]]=s[t][0];li(r)}}function Hx(e){if(null!=e)for(const t in e){const n=e[t];"number"!=typeof n&&n.dispose()}}var jx;!function(e){e[e.SILENT=0]="SILENT",e[e.VERBOSE=1]="VERBOSE"}(jx||(jx={}));class Kx{constructor(){this.validationData=null}setParams(e){this.params=e}async onEpochBegin(e,t){}async onEpochEnd(e,t){}async onBatchBegin(e,t){}async onBatchEnd(e,t){}async onTrainBegin(e){}async onTrainEnd(e){}setModel(e){}}class qx{constructor(e,t=10){null==e&&(e=[]),this.callbacks=e,this.queueLength=t}append(e){this.callbacks.push(e)}setParams(e){for(const t of this.callbacks)t.setParams(e)}setModel(e){for(const t of this.callbacks)t.setModel(e)}async onEpochBegin(e,t){null==t&&(t={});for(const n of this.callbacks)await n.onEpochBegin(e,t)}async onEpochEnd(e,t){null==t&&(t={});for(const n of this.callbacks)await n.onEpochEnd(e,t)}async onBatchBegin(e,t){null==t&&(t={});for(const n of this.callbacks)await n.onBatchBegin(e,t)}async onBatchEnd(e,t){null==t&&(t={});for(const n of this.callbacks)await n.onBatchEnd(e,t)}async onTrainBegin(e){null==e&&(e={});for(const t of this.callbacks)await t.onTrainBegin(e)}async onTrainEnd(e){null==e&&(e={});for(const t of this.callbacks)await t.onTrainEnd(e)}}class Xx extends Kx{constructor(){super()}async onEpochBegin(e){this.seen=0,this.totals={}}async onBatchEnd(e,t){null==t&&(t={});const n=null==t.size?0:t.size;this.seen+=n;for(const e in t){const r=t[e];if("number"==typeof r)this.totals.hasOwnProperty(e)||(this.totals[e]=0),this.totals[e]=this.totals[e]+r*n;else{let t;e in this.totals?t=this.totals[e]:this.totals[e]=0;const s=ui(()=>To(this.totals[e],$o(r,n)));this.totals[e]=s,null!=t&&t.dispose()}}}async onEpochEnd(e,t){if(null!=t)for(const e of this.params.metrics)null!=this.totals[e]&&("number"==typeof this.totals[e]?t[e]=this.totals[e]/this.seen:ui(()=>{const n=$o(Co(1,this.seen),this.totals[e]);t[e]=n,this.totals[e].dispose(),ci(t[e])}))}}class Yx extends Kx{async onTrainBegin(e){this.epoch=[],this.history={}}async onEpochEnd(e,t){null==t&&(t={}),this.epoch.push(e);for(const e in t)null==this.history[e]&&(this.history[e]=[]),this.history[e].push(t[e])}async syncData(){const e=[],t=[],n=[];for(const r in this.history){const s=this.history[r];for(let a=0;a<s.length;++a)if("number"!=typeof s[a]){const i=s[a];e.push(i.data()),t.push(r),n.push(a)}}const r=await Promise.all(e);for(let e=0;e<r.length;++e)this.history[t[e]][n[e]].dispose(),this.history[t[e]][n[e]]=r[e][0]}}class Zx extends Kx{constructor(e,t){if(super(),this.currentEpoch=0,this.nowFunc=e.nowFunc,this.nextFrameFunc=e.nextFrameFunc||Uf,this.yieldEvery=t||"auto","auto"===this.yieldEvery&&(this.yieldEvery=125),"never"===this.yieldEvery&&null!=e.onYield)throw new Error("yieldEvery is `never` but you provided an `onYield` callback. Either change `yieldEvery` or remove the callback");Re(this.yieldEvery)&&(this.maybeWait=function(e,t,n){let r,s=null!=n?n():Xs();return(...a)=>{const i=null!=n?n():Xs();return i-s<t||(s=i,r=e(...a)),r}}(this.maybeWait.bind(this),this.yieldEvery,this.nowFunc)),this.trainBegin=e.onTrainBegin,this.trainEnd=e.onTrainEnd,this.epochBegin=e.onEpochBegin,this.epochEnd=e.onEpochEnd,this.batchBegin=e.onBatchBegin,this.batchEnd=e.onBatchEnd,this.yield=e.onYield}async maybeWait(e,t,n){const r=[];null!=this.yield&&(await Gx(n),r.push(this.yield(e,t,n))),r.push(this.nextFrameFunc()),await Promise.all(r)}async onEpochBegin(e,t){this.currentEpoch=e,null!=this.epochBegin&&(await Gx(t),await this.epochBegin(e,t))}async onEpochEnd(e,t){const n=[];null!=this.epochEnd&&(await Gx(t),n.push(this.epochEnd(e,t))),"epoch"===this.yieldEvery&&n.push(this.nextFrameFunc()),await Promise.all(n)}async onBatchBegin(e,t){null!=this.batchBegin&&(await Gx(t),await this.batchBegin(e,t))}async onBatchEnd(e,t){const n=[];null!=this.batchEnd&&(await Gx(t),n.push(this.batchEnd(e,t))),"batch"===this.yieldEvery?n.push(this.nextFrameFunc()):Re(this.yieldEvery)&&n.push(this.maybeWait(this.currentEpoch,e,t)),await Promise.all(n)}async onTrainBegin(e){null!=this.trainBegin&&(await Gx(e),await this.trainBegin(e))}async onTrainEnd(e){null!=this.trainEnd&&(await Gx(e),await this.trainEnd(e))}}function Qx(e,t){return null==e&&(e={}),e instanceof Kx?[e]:Array.isArray(e)&&e[0]instanceof Kx?e:xy(e).map(e=>new Zx(e,t))}class Jx{constructor(){}static registerCallbackConstructor(e,t){ie(e>=0&&Number.isInteger(e),()=>`Verbosity level is expected to be an integer >= 0, but got ${e}`),Jx.checkForDuplicate(t),null==Jx.constructors[e]&&(Jx.constructors[e]=[]),Jx.constructors[e].push(t)}static checkForDuplicate(e){for(const t in Jx.constructors)Jx.constructors[+t].forEach(t=>{if(t===e)throw new hy("Duplicate callback constructor.")})}static clear(){Jx.constructors={}}static createCallbacks(e){const t=[];for(const n in Jx.constructors){const r=+n;e>=r&&t.push(...Jx.constructors[r])}return t.map(e=>new e)}}function ew(e,t,n,r,s,a,i,o,u){const l=new Yx,c=[new Xx,...Jx.createCallbacks(t)];null!=e&&c.push(...e),c.push(l);const h=new qx(c);return h.setParams({epochs:n,initialEpoch:r,samples:s,steps:a,batchSize:i,verbose:t,doValidation:o,metrics:u}),{callbackList:h,history:l}}function tw(e,t={},n=!1){return Sy(e,Go.getMap().classNameMap,t,"layer",n)}function nw(e,t){return ui(()=>{"float32"!==e.dtype&&(e=No(e,"float32"));const n=oh(yb(e),t,!0),r=Xo(n.shape,ab()),s=Ao(su(n,r));return Co(e,s)})}function rw(e,t){return ui(()=>Gh(yb(Qo(t,e)),-1))}function sw(e,t){return ui(()=>Gh(eu(Qo(t,e)),-1))}function aw(e,t){return ui(()=>{const n=Qo(e,t),r=kc(eu(e),ab(),Number.MAX_VALUE),s=eu(Co(n,r));return $o(100,Gh(s,-1))})}function iw(e,t,n=!1){return ui(()=>{if(n)t=jd(t);else{const e=oh(t,t.shape.length-1,!0);t=Co(t,e)}return t=kc(t,ab(),1-ab()),Du(oh($o(No(e,"float32"),Ch(t)),t.shape.length-1))})}function ow(e,t,n=!1){return ui(()=>{const r=No(gh(function(e){const t=[eb(e.shape)];return sc(e,t)}(e)),"int32"),s=(t=kc(t,ab(),1-ab())).shape;return iw(sc(Ru(r,s[s.length-1]),s),t,n)})}function uw(e,t){return ui(()=>{let n;return n=kc(t,ab(),1-ab()),n=Ch(Co(n,Qo(1,n))),Gh(function(e,t){if(!de(e.shape,t.shape))throw new hy(`logits and labels must have the same shape, but got shapes ${JSON.stringify(e.shape)} and ${JSON.stringify(t.shape)}`);return ui(()=>{const n=Ed(t),r=Du(eu(t));return To(Qo(n,$o(t,e)),$h(hh(r)))})}(e,n),-1)})}function lw(e,t){return ui(()=>{const n=nw(e,-1),r=nw(t,-1),s=$o(n,r);return Du(oh(s,-1))})}Jx.constructors={};const cw={meanSquaredError:rw,meanAbsoluteError:sw,meanAbsolutePercentageError:aw,meanSquaredLogarithmicError:function(e,t){return ui(()=>{const n=kc(t,ab(),Number.MAX_VALUE),r=Ch(To(1,n)),s=kc(e,ab(),Number.MAX_VALUE),a=Ch(To(1,s));return Gh(yb(Qo(r,a)),-1)})},squaredHinge:function(e,t){return ui(()=>{const n=su(0,Qo(1,$o(e,t)));return Gh(yb(n),-1)})},hinge:function(e,t){return ui(()=>{const n=su(0,Qo(1,$o(e,t)));return Gh(n,-1)})},categoricalHinge:function(e,t){return ui(()=>{const n=oh($o(e,t),-1),r=ah($o(Qo(1,e),t),-1);return su(0,To(1,Qo(r,n)))})},logcosh:function(e,t){return ui(()=>{const n=Math.log(2),r=Qo(t,e),s=Qo(To(r,Ah($o(-2,r))),n);return Gh(s,-1)})},categoricalCrossentropy:iw,sparseCategoricalCrossentropy:ow,binaryCrossentropy:uw,kullbackLeiblerDivergence:function(e,t){return ui(()=>{const n=kc(e,ab(),1),r=kc(t,ab(),1);return oh($o(e,Ch(Co(n,r))),-1)})},poisson:function(e,t){return ui(()=>{const n=Ch(To(ab(),t));return Gh(Qo(t,$o(e,n)),-1)})},cosineProximity:lw};function hw(e){if("string"==typeof e){if(e in cw)return cw[e];let t=`Unknown loss ${e}`;throw e.toLowerCase().includes("softmaxcrossentropy")&&(t=`Unknown loss ${e}. Use "categoricalCrossentropy" as the string name for tf.losses.softmaxCrossEntropy`),new hy(t)}return e}function dw(e,t){return ui(()=>{const n=$o(.5,td(t)),r=ib(bh(t,n),e.dtype);return Gh(Wc(e,r),-1)})}function pw(e,t){return ui(()=>ib(Wc(Ol(e,-1),Ol(t,-1)),"float32"))}function fw(e,t){return ui(()=>No(oh(Fh(Wc(e,1),Wc(t,1))),"float32"))}function mw(e,t){return ui(()=>{const n=fw(e,t),r=function(e,t){return ui(()=>No(oh(Fh(Wc(e,0),Wc(t,1))),"float32"))}(e,t),s=To(n,r);return No(Gc(bh(s,0),Co(n,s),0),"float32")})}function gw(e,t){return uw(e,t)}function yw(e,t){return e.rank===t.rank&&(e=Jd(e,[e.rank-1])),(t=Ol(t,-1)).dtype!==e.dtype&&(t=No(t,e.dtype)),No(Wc(e,t),"float32")}const bw=iw,xw=ow,ww={binaryAccuracy:dw,categoricalAccuracy:pw,precision:mw,categoricalCrossentropy:bw,sparseCategoricalCrossentropy:xw,mse:rw,MSE:rw,mae:sw,MAE:sw,mape:aw,MAPE:aw,cosine:lw};function vw(e){if("string"==typeof e&&e in ww)return ww[e];if("string"!=typeof e&&null!=e)return e;throw new hy(`Unknown metric ${e}`)}function kw(e){if(gy(null!==e,`Unknown LossOrMetricFn ${e}`),"string"==typeof e)return e;{let t;for(const n of Object.keys(cw))if(cw[n]===e){t=n;break}if(void 0!==t)return t;for(const n of Object.keys(ww))if(ww[n]===e){t=n;break}return void 0!==t?t:e.name}}function Nw(e,t,n=!1){if(null==e||"object"!=typeof e||Object.getPrototypeOf(e)!==Object.prototype||!Iw(e))throw new Error("User-defined metadata is expected to be a JSON object, but is not.");if(n){const n=JSON.stringify(e);n.length>1048576&&console.warn(`User-defined metadata of model "${t}" is too large in size (length=${n.length} when serialized). It is not recommended to store such large objects in user-defined metadata. Please make sure its serialized length is <= 1048576.`)}}function Iw(e){if(null===e)return!0;if("object"==typeof e){if(Object.getPrototypeOf(e)===Object.prototype){const t=Object.keys(e);for(const n of t){if("string"!=typeof n)return!1;if(!Iw(e[n]))return!1}return!0}if(Array.isArray(e)){for(const t of e)if(!Iw(t))return!1;return!0}return!1}{const t=typeof e;return"string"===t||"number"===t||"boolean"===t}}function Sw(e,t,n=console.log){let r="";for(let n=0;n<e.length;++n)n>0&&(r=r.slice(0,r.length-1)+" "),r+=e[n],r=r.slice(0,t[n]),r+=" ".repeat(t[n]-r.length);n(r)}function Tw(e,t,n){let r,s;try{s=e.inboundNodes.map(e=>JSON.stringify(e.inputShapes)).join(",")}catch(e){s="multiple"}try{r=JSON.stringify(e.outputShape)}catch(e){r="multiple"}Sw([`${e.name} (${e.getClassName()})`,s,r,e.countParams().toString()],t,n)}function Ew(e,t,n,r){let s,a;try{a=e.inboundNodes.map(e=>JSON.stringify(e.inputShapes)).join(",")}catch(e){a="multiple"}try{s=JSON.stringify(e.outputShape)}catch(e){s="multiple"}const i=[];for(const t of e.inboundNodes)if(!(null!=n&&n.length>0&&-1===n.indexOf(t)))for(let e=0;e<t.inboundLayers.length;++e){const n=t.inboundLayers[e].name,r=t.nodeIndices[e],s=t.tensorIndices[e];i.push(`${n}[${r}][${s}]`)}const o=e.name,u=e.getClassName(),l=0===i.length?"":i[0];Sw([`${o} (${u})`,a,s,e.countParams().toString(),l],t,r);for(let e=1;e<i.length;++e)Sw(["","","","",i[e]],t,r)}function Cw(e,t,n){return("inboundNodes"===e||"outputLayers"===e||"inputLayers"===e)&&0===t&&"string"==typeof n}function $w(e,t){if(null===e)return null;if("string"==typeof e)return vy(e);if("number"==typeof e||"boolean"==typeof e)return e;if(e instanceof Array){const n=[],r=e.length;for(let s=0;s<r;++s){const r=e[s];Cw(t,s,r)?n.push(r):n.push($w(r,t))}return n}{const t={};for(const n of Object.keys(e)){const r=e[n];if("name"===n&&"string"==typeof r)t[n]=r;else{const e=vy(n);t[e]=$w(r,e)}}return t}}function Aw(e,t){if(null==e)return null;if("string"==typeof e)return wy(e);if("number"==typeof e||"boolean"==typeof e)return e;if(e instanceof Array){const n=[],r=e.length;for(let s=0;s<r;++s){const r=e[s];Cw(t,s,r)?n.push(r):n.push(Aw(r,t))}return n}{const t={};for(const n of Object.keys(e)){const r=e[n];t[wy(n)]="name"!==n&&"className"!==n||"string"!=typeof r?Aw(r,n):r}return t}}const Rw="4.22.0";class _w extends sx{constructor(e){if(super({}),this.containerNodes=new Set,this.name=e.name,null==this.name){const e=this.getClassName().toLowerCase();this.name=Ly(e)}if(this.supportsMasking=!1,this.trainable_=!0,Array.isArray(e.inputs)?this.inputs=e.inputs.slice():this.inputs=[e.inputs],Array.isArray(e.outputs)?this.outputs=e.outputs.slice():this.outputs=[e.outputs],Ey(this.inputs).length!==this.inputs.length)throw new hy(`The list of inputs passed to the model is redundant. All inputs should only appear once. Found: ${this.inputs.map(e=>e.name)}`);Ey(this.outputs).length!==this.outputs.length&&console.warn(`The list of outputs passed to the model is redundant. All outputs should only appear once. Found: ${this.outputs.map(e=>e.name)}`),this.inputLayers=[],this.inputLayersNodeIndices=[],this.inputLayersTensorIndices=[],this.outputLayers=[],this.outputLayersNodeIndices=[],this.outputLayersTensorIndices=[],this.layers=[],this.internalContainerRefs=[];for(const e of this.outputs){const t=e.sourceLayer,n=e.nodeIndex,r=e.tensorIndex;this.outputLayers.push(t),this.outputLayersNodeIndices.push(n),this.outputLayersTensorIndices.push(r)}for(const e of this.inputs){const t=e.sourceLayer,n=e.nodeIndex,r=e.tensorIndex;gy(0===n,"input layer has >1 nodes"),gy(0===r,"input layer has >1 tensors"),this.inputLayers.push(t),this.inputLayersNodeIndices.push(n),this.inputLayersTensorIndices.push(r)}this.inputNames=[],this.outputNames=[],this.feedInputShapes=[],this.feedInputNames=[],this.feedOutputNames=[];for(let t=0;t<this.inputLayers.length;t++){const n=this.inputLayers[t];if(!(n instanceof ix))throw new TypeError(`Input layers to a LayersModel must be InputLayer objects. Received inputs: ${e.inputs}. Input ${t} (0-based) originates from layer type ${n.getClassName()}.`);this.inputNames.push(n.name),this.feedInputShapes.push(n.batchInputShape),this.feedInputNames.push(n.name)}for(const e of this.outputLayers)this.outputNames.push(e.name);this.internalInputShapes=this.inputs.map(e=>e.shape),this.internalOutputShapes=this.outputs.map(e=>e.shape);const t={},n={},r={},s={},a={},i=[],o=(e,t,n,r,s,u)=>{null!=r&&null!=s&&null!=u||(r=e.sourceLayer,s=e.nodeIndex,u=e.tensorIndex);const l=r.inboundNodes[s];if(-1!==n.indexOf(l))throw new cy(`The tensor ${e.name} at layer "${r.name}" is part of a cycle.`);if(-1!==t.indexOf(l))return;this.containerNodes.add(_w.nodeKey(r,s)),r.id in a||(a[r.id]=Object.keys(a).length),-1===n.indexOf(l)&&n.push(l);const c=l.inboundLayers.length;for(let e=0;e<c;e++){const r=l.inputTensors[e],s=l.inboundLayers[e],a=l.nodeIndices[e],i=l.tensorIndices[e];o(r,t,n,s,a,i)}for(t.push(l);n.indexOf(l)>=0;)n.splice(n.indexOf(l),1);i.push(l)},u=[],l=[];for(const e of this.outputs)o(e,u,l);const c=i.slice().reverse();for(const e of c){n[e.id]=e,e.id in t||(t[e.id]=0);let a=t[e.id];const i=null==r[e.outboundLayer.id]?0:r[e.outboundLayer.id];a=Math.max(a,i),r[e.outboundLayer.id]=a,s[e.outboundLayer.id]=e.outboundLayer,t[e.id]=a;for(let r=0;r<e.inboundLayers.length;r++){const s=e.inboundLayers[r],i=e.nodeIndices[r],o=s.inboundNodes[i],u=null==t[o.id]?0:t[o.id];t[o.id]=Math.max(a+1,u),n[o.id]=o}}const h={};for(const e in t){const r=t[e];r in h||(h[r]=[]),h[r].push(n[e])}const d={};for(const e in r){const t=r[e];t in d||(d[t]=[]),d[t].push(s[e])}let p=Object.keys(d).map(e=>parseInt(e,10)).sort(Ty);this.layers=[];for(const e of p){const t=d[e];t.sort((e,t)=>{const n=a[e.id],r=a[t.id];return n<r?-1:n>r?1:0});for(const e of t)e instanceof _w&&this.internalContainerRefs.push(e),this.layers.push(e)}this.layersByDepth=d,p=Object.keys(h).map(e=>parseInt(e,10)).sort(Ty);const f=this.inputs.slice(),m=[];for(const e of p)for(const t of h[e]){const e=t.outboundLayer;if(null!=e){for(const n of t.inputTensors)if(-1===f.indexOf(n))throw new cy(`Graph disconnected: cannot obtain value for tensor ${n} at layer "${e.name}". The following previous layers were accessed without issue: ${m}`);for(const e of t.outputTensors)f.push(e);m.push(e.name)}}this.nodesByDepth=h;const g=this.layers.map(e=>e.name);for(const e of g){const t=g.filter(t=>t===e).length;if(1!==t)throw new cy(`The name "${e}" is used ${t} times in the model. All layer names should be unique. Layer names: `+JSON.stringify(g))}this.outboundNodes=[],this.inboundNodes=[],new nx({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:this.inputs.map(e=>null),outputMasks:this.outputs.map(e=>null),inputShapes:this.inputs.map(e=>e.shape),outputShapes:this.outputs.map(e=>e.shape)}),this.built=!0,this._refCount=1}assertNotDisposed(){if(0===this._refCount)throw new Error(`Container '${this.name}' is already disposed.`)}dispose(){this.assertNotDisposed();const e={refCountAfterDispose:null,numDisposedVariables:0};if(0===--this._refCount){for(const t of this.layers)e.numDisposedVariables+=t.dispose().numDisposedVariables;for(const t of this.internalContainerRefs)e.numDisposedVariables+=t.dispose().numDisposedVariables}return e.refCountAfterDispose=this._refCount,e}get trainable(){return this.trainable_}set trainable(e){this.layers.forEach(t=>{t._trainableWeights.forEach(t=>t.trainable=e)}),this.trainable_=e}get trainableWeights(){if(this._trainableWeights.length>0)throw new hy("Container instance unexpectedly contains _trainableWeights.The trainable weights of a Container are a union of the trainable weights of its consituent Layers. Its own _trainableWeights must remain an empty Array.");if(!this.trainable)return[];let e=[];for(const t of this.layers)e=e.concat(t.trainableWeights);return e}get nonTrainableWeights(){const e=[];for(const t of this.layers)e.push(...t.nonTrainableWeights);if(!this.trainable){const t=[];for(const e of this.layers)t.push(...e.trainableWeights);return t.concat(e)}return e}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}loadWeights(e,t=!0){const n={};let r=0;const s=(e=>{const t=Object.keys(e);if(0===t.length)return!1;const n=t[0].split("/");return!isNaN(parseInt(n[n.length-1],10))})(e);s&&this.parseWeights(e);for(const e of this.layers)for(const[t,a]of e.weights.entries()){const e=s?`${a.name.split("/").slice(0,-1).join("/")+"/"}${t}`:a.originalName;if(null!=n[e])throw new hy(`Duplicate weight name: ${e}`);n[e]=a,r++}const a=[];for(const r in e){let s=r;if(null==n[r]){const e=r.split("/");s=e.slice(0,-2).concat([e[e.length-1]]).join("/")}if(null!=n[s])a.push([n[s],e[r]]);else if(t)throw new hy(`Provided weight data has no target variable: ${r}`);delete n[s]}if(t){const e=[];for(const t in n)e.push(t);if(e.length>0)throw new hy(`${e.length} of ${r} weights are not set: ${e}`)}Qb(a)}parseWeights(e){for(const t in Object.keys(e)){const n=t.split("/"),r=["vars","layer_checkpoint_dependencies"],s=n.map(e=>e.startsWith("_")?e.slice(1):e).filter(e=>!r.includes(e)).join("/");s!==t&&(e[s]=e[t],delete e[t])}}updatedConfig(){const e=this.getConfig(),t={};return t.className=this.getClassName(),t.config=e,t.kerasVersion=`tfjs-layers ${Rw}`,t.backend="TensorFlow.js",t}toJSON(e,t=!0){const n=Aw(this.updatedConfig());return t?JSON.stringify(n):n}call(e,t){return ui(()=>{e=xy(e);const n=new ux;for(let t=0;t<this.inputs.length;++t)n.add(this.inputs[t],e[t]);return hx(this.outputs,n,t)})}computeMask(e,t){return ui(()=>{let n;return e=xy(e),n=null==t?my(null,e.length):xy(t),this.runInternalGraph(e,n)[1]})}computeOutputShape(e){const t=Hb(e);if(t.length!==this.inputLayers.length)throw new hy(`Invalid inputShape argument ${e}: model has ${this.inputLayers.length} tensor inputs.`);const n={};for(let e=0;e<t.length;e++){const r=this.inputLayers[e],s=t[e];n[r.name+"_0_0"]=s}const r=Object.keys(this.nodesByDepth).map(e=>parseInt(e,10)).sort(Ty);if(r.length>1)for(const e of r){const t=this.nodesByDepth[e];for(const e of t){const t=e.outboundLayer;if(-1!==this.inputLayers.map(e=>e.id).indexOf(t.id))continue;const r=[];for(let t=0;t<e.inboundLayers.length;t++){const s=e.inboundLayers[t],a=e.nodeIndices[t],i=e.tensorIndices[t],o=n[`${s.name}_${a}_${i}`];r.push(o)}const s=Hb(t.computeOutputShape(by(r))),a=t.inboundNodes.indexOf(e);for(let e=0;e<s.length;e++)n[`${t.name}_${a}_${e}`]=s[e]}}const s=[],a=[];for(let e=0;e<this.outputLayers.length;e++){const t=this.outputLayers[e],n=this.outputLayersNodeIndices[e],r=this.outputLayersTensorIndices[e],s=`${t.name}_${n}_${r}`;a.push(s)}for(let e=0;e<a.length;e++){const t=a[e];gy(t in n),s.push(n[t])}return by(s)}runInternalGraph(e,t){null==t&&(t=my(null,e.length));const n={};for(let r=0;r<this.inputs.length;++r){const s=this.inputs[r],a=e[r],i=t[r];n[s.id]=[a,i]}const r=Object.keys(this.nodesByDepth).map(e=>parseInt(e,10)).sort(Ty);for(const e of r){const t=this.nodesByDepth[e];for(const e of t){const t=e.outboundLayer,r=e.inputTensors,s=e.outputTensors,a=new Array;for(const e of r)e.id in n&&a.push(n[e.id]);if(a.length===r.length){let r,i,o,u,l={};if(null!=e.callArgs&&(l=e.callArgs),1===a.length){const[e,n]=a[0];null==l.mask&&(l.mask=n),o=xy(t.call(e,l)),u=xy(t.computeMask(e,n)),r=[e],i=[n]}else r=a.map(e=>e[0]),i=a.map(e=>e[1]),null==l.mask&&(l.mask=i),o=xy(t.call(r,l)),u=xy(t.computeMask(r,i));if(t.activityRegularizer)throw new dy("LayersModel invocation with concrete Tensor value(s) in the presence of activity regularizer(s) is not supported yet.");for(let e=0;e<s.length;++e){const t=s[e],r=o[e],a=u[e];n[t.id]=[r,a]}}}}const s=[],a=[],i=[];for(const e of this.outputs){gy(e.id in n,`Could not compute output ${e.name} : ${e.id}`);const[t,r]=n[e.id];i.push(t.shape),s.push(t),a.push(r)}return[s,a,i]}buildNodeConversionMap(e){const t={};let n;for(const e of this.layers){n=e instanceof _w?1:0;for(let r=0;r<e.inboundNodes.length;r++){const s=_w.nodeKey(e,r);this.containerNodes.has(s)&&(t[s]=n,n+=1)}}return t}getLayer(e,t){if(null!=t)return this.findLayer(t);if(null==e)throw new hy("Provide either a layer name or layer index");if("number"==typeof e)return this.findLayer(e);for(const t of this.layers)if(t.name===e)return t;throw new hy(`No such layer: ${e}`)}findLayer(e){if(this.layers.length<=e)throw new hy(`Was asked to retrieve layer at index ${e}, but model only has ${this.layers.length} layer(s).`);return this.layers[e]}calculateLosses(){return ui(()=>{const e=[];for(const t of this.layers)for(let n=0;n<t.inboundNodes.length;++n){const r=_w.nodeKey(t,n);this.containerNodes.has(r)&&e.push(...t.calculateLosses())}return e})}getConfig(){const e={name:this.name},t=this.buildNodeConversionMap(this.layers),n=[];for(const e of this.layers){const r=e.getClassName(),s=e.getConfig(),a=[];for(let n=0;n<e.inboundNodes.length;n++){const r=e.inboundNodes[n],s=_w.nodeKey(e,n);let i={};if(this.containerNodes.has(s)){if(r.callArgs)try{JSON.stringify(r.callArgs),i=r.callArgs}catch(t){console.warn(`Layer ${e.name} was passed non-serializable keyword arguments: ${r.callArgs}. They will not be included in the serialized model (and thus will be missing at deserialization time).`),i={}}if(r.inboundLayers.length>0){const e=[];for(let n=0;n<r.inboundLayers.length;n++){const s=r.inboundLayers[n],a=r.nodeIndices[n],o=r.tensorIndices[n];let u=t[_w.nodeKey(s,a)];null==u&&(u=0),e.push([s.name,u,o,i])}a.push(e)}}}const i={};i.name=e.name,i.className=r,i.config=s,i.inboundNodes=a,n.push(i)}e.layers=n;const r=[];for(let e=0;e<this.inputLayers.length;e++){const n=this.inputLayers[e],s=this.inputLayersNodeIndices[e],a=_w.nodeKey(n,s);if(!this.containerNodes.has(a))continue;let i=t[a];null==i&&(i=0);const o=this.inputLayersTensorIndices[e];r.push([n.name,i,o])}e.inputLayers=r;const s=[];for(let e=0;e<this.outputLayers.length;e++){const n=this.outputLayers[e],r=this.outputLayersNodeIndices[e],a=_w.nodeKey(n,r);if(!this.containerNodes.has(a))continue;let i=t[a];null==i&&(i=0);const o=this.outputLayersTensorIndices[e];s.push([n.name,i,o])}return e.outputLayers=s,e}static fromConfig(e,t,n={},r=!1){const s={},a={};function i(e,t){e.name in a?a[e.name].push(t):a[e.name]=[t]}function o(e,t){const n=[];let r;for(const a of t){const o=a[0],u=a[1],l=a[2];if(r=null==a[3]?{}:a[3],!(o in s))return void i(e,t);const c=s[o];if(c.inboundNodes.length<=u)return void i(e,t);const h=c.inboundNodes[u];n.push(h.outputTensors[l])}n.length>0&&e.apply(by(n),r)}function u(e){const n=e.name,a=tw(e,null!=t.customObjects?t.customObjects:{});a.setFastWeightInitDuringBuild(r),s[n]=a,e.inboundNodes.forEach(e=>{if(!(e instanceof Array))throw new hy(`Corrupted configuration, expected array for nodeData: ${e}`);i(a,e)})}const l=t.name,c=t.layers;for(const e of c)u(e);for(;!Cy(a);)for(const e of c){const t=s[e.name];if(t.name in a){const e=a[t.name];delete a[t.name];for(const n of e)o(t,n)}}const h=[],d=[],p=t.inputLayers;for(const e of p){const t=e[0],n=e[1],r=e[2];gy(t in s);const a=s[t].inboundNodes[n].outputTensors;h.push(a[r])}const f=t.outputLayers;for(const e of f){const t=e[0],n=e[1],r=e[2];gy(t in s);const a=s[t].inboundNodes[n].outputTensors;d.push(a[r])}return new e({inputs:h,outputs:d,name:l})}get stateful(){if(this._stateful)throw new hy("Container instance unexpectedly has _stateful = true. The statefulness of a Container is determined by the Layers it contains. Its _stateful property must remain the default false.");for(const e of this.layers)if(e.stateful)return!0;return!1}resetStates(){ui(()=>{this.layers.forEach(e=>{e.stateful&&e.resetStates()})})}}function Dw(e,t){return function(e,t,n){const r=t.length;if(null==e||Array.isArray(e)&&0===e.length)return t.map(e=>null);if(1===r)return Array.isArray(e)&&1===e.length?e:"object"==typeof e&&t[0]in e?[e[t[0]]]:[e];if(Array.isArray(e)){if(e.length!==r)throw new Error(`Provided ${n} is an array of ${e.length} element(s), but the model has ${r} outputs. Make sure a set of weights is provided for each model output.`);return e}if("object"==typeof e&&Object.keys(e).length>0&&"object"==typeof e[Object.keys(e)[0]]){const n=[];return t.forEach(t=>{t in e?n.push(e[t]):n.push(null)}),n}throw new Error(`The model has multiple (${r}) outputs, so ${n} must be either an array with ${r} elements or an object with ${t} keys. Provided ${n} not understood: ${JSON.stringify(e)}`)}(e,t,"classWeight")}async function Fw(e,t,n,r){if(null!=t||null!=r)throw new Error("Support sampleWeight is not implemented yet");if(null!=n){const t=ui(()=>{if(1===e.shape.length)return Io(e);if(2===e.shape.length){if(e.shape[1]>1)return Ol(e,1);if(1===e.shape[1])return sc(e,[e.shape[0]]);throw new Error(`Encountered unexpected last-dimension size (${e.shape[1]}) during handling of class weights. The size is expected to be >= 1.`)}throw new Error(`Unexpected rank of target (y) tensor (${e.rank}) during handling of class weights. The rank is expected to be 1 or 2.`)}),r=Array.from(await t.data());li(t);const s=[];return r.forEach(e=>{if(null==n[e])throw new Error(`classWeight must contain all classes in the training data. The class ${e} exists in the data but not in classWeight`);s.push(n[e])}),sp(s,"float32")}return null}function Mw(e,t){return $o(e,t)}function Ow(e,t){let n,r;const s=t;n=s.xs,r=s.ys,ie(null!=n&&null!=r,()=>`A Dataset iterator for fitDataset() is expected to generate objects of the form \`{xs: xVal, ys: yVal}\`, where the two values may be \`tf.Tensor\`, an array of Tensors, or a map of string to Tensor.  The provided Dataset instead generates ${t}`);const a=Lw("input",e.inputNames,n),i=Lw("output",e.outputNames,r),o=a[0].shape[0];ie(a.length===e.inputs.length,()=>`LayersModel has ${e.inputs.length} inputs, but the dataset provides ${a.length} inputs.  (Expected input keys: ${JSON.stringify(e.inputNames)})`),ie(i.length===e.outputs.length,()=>`LayersModel has ${e.outputs.length} outputs, but the dataset provides ${i.length} outputs.  (Expected output keys: ${JSON.stringify(e.outputNames)})`);for(let t=0;t<a.length;t++)ie(a[t].shape[0]===o,()=>`Batch size mismatch: input ${e.inputNames[t]} has ${a[t].shape[0]}; expected  ${o} based on input ${e.inputNames[0]}.`);for(let t=0;t<i.length;t++)ie(i[t].shape[0]===o,()=>`Batch size mismatch: output ${e.outputNames[t]} has ${i[t].shape[0]}; expected  ${o} based on input ${e.inputNames[0]}.`);return{xs:a,ys:i}}function Lw(e,t,n){if(n instanceof pa)return[n];if(Array.isArray(n))return ie(n.length===t.length,()=>`Received an array of ${n.length} Tensors, but expected ${t.length} to match the ${e} keys ${t}.`),n;{const r=[];for(const s of t){if(null==n[s])throw new hy(`The feature data generated by the dataset lacks the required ${e} key '${s}'.`);r.push(n[s])}return r}}function zw(e){return"function"==typeof e.iterator}function Pw(e){ie(e>0&&Number.isInteger(e),()=>`batchSize is required to be a positive integer, but got ${e}`)}function Bw(e,t,n){return null==e?[null]:Array.isArray(e)?e.map(e=>ub(e,t,n-t)):ub(e,t,n-t)}function Vw(e,t){return ui(()=>null==e?null:Array.isArray(e)?e.map(e=>Vw(e,t)):gb(e,"int32"===t.dtype?t:No(t,"int32")))}function Uw(e,t){const n=[];let r=0,s=null;for(;r<e;)s=r+t,s>=e&&(s=e),n.push([r,s]),r=s;return n}function Ww(e){const t=[];e instanceof pa&&(e=[e]);for(let n=0;n<e.length;++n){const r=e[n];if(1===r.rank)t.push(ob(r,1));else{if(0===r.rank)throw new Error("Expected tensor to be at least 1D, but received a 0D tensor (scalar).");t.push(r)}}return t}function Gw(e,t){if(null==e)return;const n=[];if(t instanceof pa)n.push(t.id);else if(Array.isArray(t))t.forEach(e=>n.push(e.id));else if(null!=t)for(const e in t){const r=t[e];n.push(r.id)}const r=[];if(e instanceof pa)-1===n.indexOf(e.id)&&r.push(e);else if(Array.isArray(e))e.forEach(e=>{-1===n.indexOf(e.id)&&r.push(e)});else if(null!=e)for(const t in e){const s=e[t];-1===n.indexOf(s.id)&&r.push(s)}r.forEach(e=>{e.isDisposed||e.dispose()})}function Hw(e){return Array.isArray(e)}function jw(e){return!function(e){return e instanceof pa}(e)&&!Hw(e)}function Kw(e,t,n,r=!0,s=""){if(null==t||0===t.length){if(null!=e){let t=!1;if(Hw(e)&&e.length>0)t=!0;else if(jw(e)){for(const n in e)if(e.hasOwnProperty(n)){t=!0;break}}else t=!0;if(t)throw new hy(`Error when checking model ${s} expected no data, but got ${e}`)}return[]}if(null==e)return t.map(e=>null);let a;if(jw(e)){a=[];for(const n of t){if(null==e[n])throw new hy(`No data provided for "${n}". Need data for each key in: ${t}`);a.push(e[n])}}else if(Hw(e)){if(e.length!==t.length)throw new hy(`Error when checking model ${s}: the Array of Tensors that you are passing to your model is not the size the model expected. Expected to see ${t.length} Tensor(s), but instead got the following list of Tensor(s): ${e}`);a=e}else{if(t.length>1)throw new hy(`The model ${s} expects ${t.length} Tensor(s), but only received one Tensor. Found: Tensor with shape ${e.shape}`);a=[e]}if(a=Ww(a),null!=n)for(let e=0;e<t.length;++e){if(null==n[e])continue;const i=a[e];if(i.shape.length!==n[e].length)throw new hy(`Error when checking ${s}: expected ${t[e]} to have ${n[e].length} dimension(s). but got array with shape ${i.shape}`);for(let t=0;t<n[e].length;++t){if(0===t&&!r)continue;const a=i.shape[t],o=n[e][t];if(null!=o&&o>=0&&a!==o)throw new hy(`${s} expected a batch of elements where each example has shape [${n[e].slice(1,n[e].length)}] (i.e.,tensor shape [*,${n[e].slice(1,n[e].length)}]) but the ${s} received an input with ${i.shape[0]} examples, each with shape [${i.shape.slice(1,i.shape.length)}] (tensor shape [${i.shape}])`)}}return a}function qw(e,t,n,r=!0,s=""){let a;if(Array.isArray(e)){if(e.length!==t.length)throw new hy(`Error when checking model ${s}: the Array of Tensors that you are passing to your model is not the size the the model expected. Expected to see ${t.length} Tensor(s), but instead got ${e.length} Tensors(s).`);a=e}else{if(t.length>1)throw new hy(`The model expects ${t.length} ${s} Tensors, but only received one Tensor. Found: array with shape ${JSON.stringify(e.shape)}.`);a=[e]}if(null!=n)for(let e=0;e<t.length;++e){if(null==n[e])continue;const i=a[e];if(i.shape.length!==n[e].length)throw new hy(`Error when checking ${s}: expected ${t[e]} to have ${n[e].length} dimension(s), but got array with shape ${JSON.stringify(i.shape)}`);for(let a=0;a<n[e].length;++a){if(0===a&&!r)continue;const o=i.shape[a],u=n[e][a];if(null!=u&&u!==o)throw new hy(`Error when checking ${s}: expected ${t[e]} to have shape ${JSON.stringify(n[e])} but got array with shape ${JSON.stringify(i.shape)}.`)}}}class Xw extends _w{constructor(e){super(e),this.isTraining=!1}summary(e,t,n=console.log){if(!this.built)throw new hy("This model has never been called, thus its weights have not been created yet. So no summary can be displayed. Build the model first (e.g., by calling it on some test data).");!function(e,t,n,r=console.log){const s=function(e){let t=!0;const n=[],r=[];for(const t in e.nodesByDepth)n.push(e.nodesByDepth[t]);for(const e of n){if(e.length>1||1===e.length&&e[0].inboundLayers.length>1){t=!1;break}r.push(...e)}if(t)for(const n of e.layers){let e=!1;for(const s of n.inboundNodes)if(-1!==r.indexOf(s)){if(e){t=!1;break}e=!0}if(!t)break}return t}(e),a=["Layer (type)","Input Shape","Output shape","Param #"];let i;if(s?(t=t||90,n=n||[.32,.61,.89,1]):(t=t||115,n=n||[.24,.48,.7,.8,1]),n[n.length-1]<=1&&(n=n.map(e=>Math.floor(t*e))),!s){a.push("Receives inputs"),i=[];for(const t in e.nodesByDepth)i.push(...e.nodesByDepth[t])}r("_".repeat(t)),Sw(a,n,r),r("=".repeat(t));const o=e.layers;for(let e=0;e<o.length;++e)s?Tw(o[e],n,r):Ew(o[e],n,i,r),r((e===o.length-1?"=":"_").repeat(t));e.checkTrainableWeightsConsistency();const u=function(e){let t;return t=null!=e.collectedTrainableWeights?qb(e.collectedTrainableWeights):qb(e.trainableWeights),t}(e),l=qb(e.nonTrainableWeights);r(`Total params: ${u+l}`),r(`Trainable params: ${u}`),r(`Non-trainable params: ${l}`),r("_".repeat(t))}(this,e,t,n)}compile(e){if(null==e.loss&&(e.loss=[]),this.loss=e.loss,"string"==typeof e.optimizer)this.optimizer_=function(e){const t={Adagrad:()=>Bf.adagrad(.01),Adadelta:()=>Bf.adadelta(1,.95,ab()),Adam:()=>Bf.adam(.001,.9,.999,ab()),Adamax:()=>Bf.adamax(.002,.9,.999,ab(),0),RMSProp:()=>Bf.rmsprop(.001,.9,0,ab()),SGD:()=>Bf.sgd(.01)};if(t.adagrad=t.Adagrad,t.adadelta=t.Adadelta,t.adam=t.Adam,t.adamax=t.Adamax,t.rmsprop=t.RMSProp,t.sgd=t.SGD,e in t)return t[e]();throw new hy(`Unknown Optimizer ${e}`)}(e.optimizer),this.isOptimizerOwned=!0;else{if(!(e.optimizer instanceof Ko))throw new hy("User-defined optimizer must be an instance of tf.Optimizer.");this.optimizer_=e.optimizer,this.isOptimizerOwned=!1}let t=[];if(Array.isArray(e.loss)||"string"==typeof e.loss||"function"==typeof e.loss)if(Array.isArray(e.loss)){if(e.loss.length!==this.outputs.length)throw new hy(`When passing an Array as loss, it should have one entry per model output. The model has ${this.outputs.length} output(s), but you passed loss=${e.loss}.`);const n=e.loss;t=n.map(e=>hw(e))}else{const n=hw(e.loss);this.outputs.forEach(e=>{t.push(n)})}else{e.loss=e.loss;for(const t in e.loss)if(-1===this.outputNames.indexOf(t))throw new hy(`Unknown entry in loss dictionary: "${t}". Only expected the following keys: ${this.outputNames}`);for(const n of this.outputNames)null==e.loss[n]&&console.warn(`Output "${n}" is missing from loss dictionary. We assume this was done on purpose, and we will not be expecting data to be passed to ${n} during training`),t.push(hw(e.loss[n]))}this.lossFunctions=t,this.feedOutputNames=[],this.feedOutputShapes=[],this.feedLossFns=[];for(let e=0;e<this.outputs.length;++e){const t=this.internalOutputShapes[e],n=this.outputNames[e];this.feedOutputNames.push(n),this.feedOutputShapes.push(t),this.feedLossFns.push(this.lossFunctions[e])}const n=[];this.metrics=e.metrics,this.metricsNames=["loss"],this.metricsTensors=[],qy("loss",()=>{for(let e=0;e<this.outputs.length;++e){if(-1!==n.indexOf(e))continue;const t=this.lossFunctions[e];this.outputs.length>1&&(this.metricsTensors.push([t,e]),this.metricsNames.push(this.outputNames[e]+"_loss"))}});const r=function(e,t){if(null==e||Array.isArray(e)&&0===e.length)return t.map(e=>[]);let n;if("string"==typeof e||"function"==typeof e)n=[e];else{if(!Array.isArray(e)&&"object"!=typeof e)throw new TypeError(`Type of metrics argument not understood. Expected an string,function, Array, or Object, found: ${e}`);n=e}if(Array.isArray(n))return t.map(e=>n);{const e=[];for(const r of t){let t=n.hasOwnProperty(r)?n[r]:[];Array.isArray(t)||(t=[t]),e.push(t)}return e}}(e.metrics,this.outputNames),s=(e,t,n)=>{this.outputNames.length>1&&(t=this.outputNames[e]+"_"+t),this.metricsNames.push(t),this.metricsTensors.push([n,e])};qy("metric",()=>{for(let e=0;e<this.outputs.length;++e)-1===n.indexOf(e)&&(t=>{let n,r,a;for(const i of t){if("string"==typeof i&&-1!==["accuracy","acc","crossentropy","ce"].indexOf(i)){const t=this.internalOutputShapes[e];let s;1===t[t.length-1]||this.lossFunctions[e]===uw?-1!==["accuracy","acc"].indexOf(i)?r=dw:-1!==["crossentropy","ce"].indexOf(i)&&(r=gw):this.lossFunctions[e]===ow?-1!==["accuracy","acc"].indexOf(i)?r=yw:-1!==["crossentropy","ce"].indexOf(i)&&(r=xw):-1!==["accuracy","acc"].indexOf(i)?r=pw:-1!==["crossentropy","ce"].indexOf(i)&&(r=bw),-1!==["accuracy","acc"].indexOf(i)?s="acc":-1!==["crossentropy","ce"].indexOf(i)&&(s="ce"),a=r,n=""+s}else{const e=vw(i);a=e,n=""+kw(i)}let t;qy(n,()=>{t=a}),s(e,n,t)}})(r[e])}),this.collectedTrainableWeights=this.trainableWeights}checkTrainableWeightsConsistency(){null!=this.collectedTrainableWeights&&this.trainableWeights.length!==this.collectedTrainableWeights.length&&console.warn("Discrepancy between trainableweights and collected trainable weights. Did you set `model.trainable` without calling `model.compile()` afterwards?")}evaluate(e,t,n={}){const r=null==n.batchSize?32:n.batchSize;Pw(r);const s=this.standardizeUserDataXY(e,t,!0,r);try{const e=s[0].concat(s[1]);this.makeTestFunction();const t=this.testFunction;return by(this.testLoop(t,e,r,n.verbose,n.steps))}finally{Gw(s[0],e),Gw(s[1],t)}}async evaluateDataset(e,t){return this.makeTestFunction(),async function(e,t,n){const r=null!=(n=n||{}).batches,s=e.testFunction;let a=[];if(n.verbose>0)throw new dy("Verbose mode is not implemented yet.");ie(!r||n.batches>0&&Number.isInteger(n.batches),()=>`Test loop expects \`batches\` to be a positive integer, but received ${JSON.stringify(n.batches)}`);const i="function"==typeof t.next?t:await t.iterator();let o=0,u=0;for(;!r||u<n.batches;){const t=await i.next();if(a=ui(()=>{if(t.value){const{xs:n,ys:r}=Ow(e,t.value),i=n.concat(r),l=ui(()=>s(i));if(li(i),0===u)for(let e=0;e<l.length;++e)a.push(Bo(0));const c=i[0].shape[0];for(let e=0;e<l.length;++e){const t=l[e],n=a[e];a[e]=ui(()=>To(a[e],$o(c,t))),u>0&&li(n)}li(l),o+=c,++u}return a}),t.done){r&&console.warn(`Your dataset iterator ran out of data during evaluateDataset(). Interrupting evalution. Make sure that your dataset can generate at least \`batches\` batches (in this case, ${n.batches} batches). You may need to use the repeat() function when building your dataset.`);break}}for(let e=0;e<a.length;++e){const t=a[e];a[e]=Co(a[e],o),li(t)}return by(a)}(this,e,t)}checkNumSamples(e,t,n,r="steps"){let s;if(null!=n){if(s=null,null!=t)throw new hy(`If ${r} is set, batchSize must be null or undefined.Got batchSize = ${t}`)}else{if(null==e)throw new hy(`Either the input data should have a defined shape, or ${r} shoud be specified.`);s=Array.isArray(e)?e[0].shape[0]:e.shape[0]}return s}execute(e,t){if(Array.isArray(t)&&0===t.length)throw new hy("`outputs` is an empty Array, which is not allowed.");const n=Array.isArray(t),r=n?t:[t],s=this.retrieveSymbolicTensors(r),a=new ux;if(e instanceof pa&&(e=[e]),Array.isArray(e)){if(e.length!==this.inputs.length)throw new hy(`The number of inputs provided (${e.length}) does not match the number of inputs of this model (${this.inputs.length}).`);for(let t=0;t<this.inputs.length;++t)a.add(this.inputs[t],e[t])}else for(const t of this.inputs){const n=e[t.name];if(null==n)throw new hy(`No value is provided for the model's input ${t.name}`);a.add(t,n)}const i=hx(s,a);return n?i:i[0]}retrieveSymbolicTensors(e){const t=my(null,e.length);let n=e.length;for(const r of this.layers){const s=Array.isArray(r.output)?r.output:[r.output],a=s.map(e=>e.name);for(let r=0;r<e.length;++r){const i=a.indexOf(e[r]);if(-1!==i&&(t[r]=s[i],n--),0===n)break}if(0===n)break}if(n>0){const n=[];throw t.forEach((t,r)=>{null==t&&n.push(e[r])}),new hy(`Cannot find SymbolicTensors for output name(s): ${JSON.stringify(n)}`)}return t}predictLoop(e,t=32,n=!1){return ui(()=>{const r=this.checkNumSamples(e);if(n)throw new dy("Verbose predictLoop() is not implemented yet.");const s=Uw(r,t),a=this.outputs.map(e=>[]);for(let t=0;t<s.length;++t)ui(()=>{const n=s[t][0],r=s[t][1],a=Bw(e,n,r),i=[];if(Array.isArray(a))for(let e=0;e<a.length;++e)i.push({key:this.inputs[e],value:a[e]});else i.push({key:this.inputs[0],value:a});const o=new ux(i);return hx(this.outputs,o)}).forEach((e,t)=>a[t].push(e));return by(a.map(e=>oc(e,0)))})}predict(e,t={}){const n=Ww(e);qw(n,this.inputNames,this.feedInputShapes,!1);try{const e=null==t.batchSize?32:t.batchSize;return Pw(e),this.predictLoop(n,e)}finally{Gw(n,e)}}predictOnBatch(e){qw(e,this.inputNames,this.feedInputShapes,!0);const t=(Array.isArray(e)?e[0]:e).shape[0];return this.predictLoop(e,t)}standardizeUserDataXY(e,t,n=!0,r){if(null==this.optimizer_)throw new cy("You must compile a model before training/testing. Use LayersModel.compile(modelCompileArgs).");const s=[];for(let e=0;e<this.feedOutputShapes.length;++e){const t=this.feedOutputShapes[e];this.feedLossFns[e]===ow?s.push(t.slice(0,t.length-1).concat([1])):s.push(t)}if(function(e,t){const n=Ey(e.map(e=>e.shape[0]));n.sort();const r=Ey(t.map(e=>e.shape[0]));if(r.sort(),n.length>1)throw new hy(`All input Tensors (x) should have the same number of samples. Got array shapes: ${JSON.stringify(e.map(e=>e.shape))}`);if(r.length>1)throw new hy(`All target Tensors (y) should have the same number of samples. Got array shapes: ${JSON.stringify(t.map(e=>e.shape))}`);if(n.length>0&&r.length>0&&!de(n,r))throw new hy(`Input Tensors should have the same number of samples as target Tensors. Found ${n[0]} input sample(s) and ${r[0]} target sample(s).`)}(e=Kw(e,this.feedInputNames,this.feedInputShapes,!1,"input"),t=Kw(t,this.feedOutputNames,s,!1,"target")),function(e,t,n){const r=[rw,uw,iw];for(let s=0;s<e.length;++s){const a=e[s],i=t[s],o=n[s];if(null!=i){if(i===iw&&1===a.shape[a.shape.length-1])throw new hy(`You are passing a target array of shape ${a.shape} while using a loss 'categorical_crossentropy'. 'categorical_crossentropy'expects targets to be binary matrices (1s and 0s) of shape [samples, classes].`);if(-1!==r.indexOf(i)){const e=a.shape.slice(1),t=o.slice(1);for(let n=0;n<e.length;++n){const r=e[n],s=t[n];if(null!=s&&r!==s)throw new hy(`A target Tensor with shape ${a.shape} was passed for an output of shape ${o}, while using a loss function that expects targets to have the same shape as the output.`)}}}}}(t,this.feedLossFns,this.feedOutputShapes),this.stateful&&null!=r&&r>0&&e[0].shape[0]%r!==0)throw new hy(`In a stateful network, you should only pass inputs with a number of samples that is divisible by the batch size ${r}. Found: ${e[0].shape[0]} sample(s).`);return[e,t]}async standardizeUserData(e,t,n,r,s=!0,a){const[i,o]=this.standardizeUserDataXY(e,t,s,a);if(null!=n)throw new Error("sample weight is not supported yet.");let u=null;if(null!=r){const e=Dw(r,this.outputNames);u=[];for(let t=0;t<e.length;++t)u.push(await Fw(o[t],null,e[t]))}return[i,o,u]}testLoop(e,t,n,r=0,s){return ui(()=>{const a=this.checkNumSamples(t,n,s,"steps"),i=[];if(r>0)throw new dy("Verbose mode is not implemented yet.");if(null!=s)throw new dy("steps mode in testLoop() is not implemented yet");{const r=Uw(a,n),s=sp(rb(0,a));for(let n=0;n<r.length;++n){const a=r[n][0],o=r[n][1],u=ub(s,a,o-a),l=Vw(t,u),c=e(l);if(0===n)for(let e=0;e<c.length;++e)i.push(Bo(0));for(let e=0;e<c.length;++e){const t=c[e];i[e]=To(i[e],$o(o-a,t))}}for(let e=0;e<i.length;++e)i[e]=Co(i[e],a)}return i})}getDedupedMetricsNames(){const e=this.metricsNames,t=[];for(let n=0;n<e.length;++n){const r=e[n];let s=r;yy(e,r)>1&&(s+=`_${yy(e.slice(0,n),r)}`),t.push(s)}return t}makeTrainFunction(){return e=>{const t=[],n=e.slice(0,this.inputs.length),r=e.slice(this.inputs.length,this.inputs.length+this.outputs.length),s=e.slice(this.inputs.length+this.outputs.length,this.inputs.length+2*this.outputs.length),a=[],i=this.collectedTrainableWeights.map(e=>e.read());return[this.optimizer_.minimize(()=>{const e=[];for(let t=0;t<this.inputs.length;++t)e.push({key:this.inputs[t],value:n[t]});const i=new ux(e),o=hx(this.outputs,i,{training:!0});let u;for(let e=0;e<this.lossFunctions.length;++e){let n=(0,this.lossFunctions[e])(r[e],o[e]);null!=s[e]&&(n=Mw(n,s[e]));const a=Gh(n);t.push(a),u=0===e?n:To(u,n)}for(let e=0;e<this.metricsTensors.length;++e){let n;if(this.outputs.length>1&&e<this.outputs.length)n=t[e];else{const t=this.metricsTensors[e][0],s=this.metricsTensors[e][1];n=Gh(t(r[s],o[s]))}ci(n),a.push(n)}return u=Gh(u),this.calculateLosses().forEach(e=>{u=To(u,e)}),u},!0,i)].concat(a)}}makeTestFunction(){this.testFunction=e=>ui(()=>{const t=[];let n;const r=e.slice(0,this.inputs.length),s=e.slice(this.inputs.length,this.inputs.length+this.outputs.length),a=[];for(let e=0;e<this.inputs.length;++e)a.push({key:this.inputs[e],value:r[e]});const i=new ux(a),o=hx(this.outputs,i);for(let e=0;e<this.lossFunctions.length;++e){const r=this.lossFunctions[e],a=Gh(r(s[e],o[e]));n=0===e?a:To(n,a),t.push(n)}for(let e=0;e<this.metricsTensors.length;++e){const n=this.metricsTensors[e][0],r=this.metricsTensors[e][1],a=Gh(n(s[r],o[r]));t.push(a)}return t})}async fit(e,t,n={}){if(this.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");let r,s,a,i,o,u,l,c,h;this.isTraining=!0;try{const d=null==n.batchSize?32:n.batchSize;Pw(d);const p=!1,f=await this.standardizeUserData(e,t,n.sampleWeight,n.classWeight,p,d);r=f[0],s=f[1],h=f[2];let m,g=!1;if(null!=n.validationData&&n.validationData.length>0){if(g=!0,2!==n.validationData.length)throw 3===n.validationData.length?new dy("validationData including sample weights is not supported yet."):new hy(`When passing validation data, it must contain 2 (valX, valY) or 3 (valX, valY, valSampleWeight) items; ${n.validationData} is invalid.`);o=n.validationData[0],u=n.validationData[1];const e=!0,t=await this.standardizeUserData(o,u,null,null,e,d);l=t[0],c=t[1],m=l.concat(c)}else if(null!=n.validationSplit&&n.validationSplit>0&&n.validationSplit<1){g=!0;const e=Math.floor(r[0].shape[0]*(1-n.validationSplit)),t=r[0].shape[0];l=Bw(r,e,t),a=r,r=Bw(r,0,e),c=Bw(s,e,t),i=s,s=Bw(s,0,e),m=l.concat(c)}else null!=n.validationSteps&&(g=!0);const y=r.concat(s).concat(h);this.checkTrainableWeightsConsistency();const b=this.makeTrainFunction(),x=this.getDedupedMetricsNames();let w,v;g?(this.makeTestFunction(),w=this.testFunction,v=x.slice().concat(x.map(e=>"val_"+e))):(w=null,m=[],v=x.slice());const k=Qx(n.callbacks,n.yieldEvery);return await this.fitLoop(b,y,x,d,n.epochs,n.verbose,k,w,m,n.shuffle,v,n.initialEpoch,null,null)}finally{this.isTraining=!1,Gw(r,e),Gw(s,t),Gw(a,e),Gw(i,t),Gw(l,o),Gw(c,u),null!=h&&li(h)}}async fitLoop(e,t,n,r,s,a,i,o,u,l,c,h,d,p){null==r&&(r=32),null==s&&(s=1),null==l&&(l=!0),null==h&&(h=0);let f=!1;if(null!=o&&null!=u&&(f=!0),null!=p&&(f=!0,null==d))throw new hy("Can only use `validationSteps` when doing step-wise training, i.e., `stepsPerEpoch` must be set.");const m=this.checkNumSamples(t,r,d,"steps_per_epoch");let g;null!=m&&(g=rb(0,m)),null==a&&(a=1);const{callbackList:y,history:b}=ew(i,a,s,h,m,d,r,f,c);y.setModel(this),this.history=b,await y.onTrainBegin(),this.stopTraining_=!1;for(let a=h;a<s;++a){await y.onEpochBegin(a);const s={};if(null!=d)throw new dy("stepsPerEpoch mode is not implemented yet.");{if("batch"===l)throw new dy("batch shuffling is not implemneted yet");l&&Q(g);const a=sp(g),i=Uw(m,r);for(let l=0;l<i.length;++l){const c={};if(await y.onBatchBegin(l,c),ui(()=>{const h=i[l][0],d=i[l][1],p=ub(a,h,d-h);c.batch=l,c.size=d-h;const m=Vw(t,p),g=e(m);for(let e=0;e<n.length;++e){const t=n[e],r=g[e];c[t]=r,ci(r)}if(l===i.length-1&&f){const e=this.testLoop(o,u,r);for(let t=0;t<n.length;++t){const r=n[t],a=e[t];ci(a),s["val_"+r]=a}}}),await y.onBatchEnd(l,c),Hx(c),this.stopTraining_)break}a.dispose()}if(await y.onEpochEnd(a,s),this.stopTraining_)break}return await y.onTrainEnd(),await this.history.syncData(),this.history}async fitDataset(e,t){return async function(e,t,n){const r=null!=n.batchesPerEpoch;if(ie(null!=e.optimizer,()=>"You must compile a model before training/testing. Use LayersModel.compile(modelCompileConfig)."),ie(null!=n,()=>"For fitDataset(), the 2nd argument (config) is required, but it is not provided in this call."),ie(null!=n.epochs&&n.epochs>0&&Number.isInteger(n.epochs),()=>`For fitDataset(), config.epochs is expected to be a positive integer, but got ${n.epochs}`),ie(!r||n.batchesPerEpoch>0&&Number.isInteger(n.batchesPerEpoch),()=>`For fitDataset(), config.batchesPerEpoch is expected to be a positive integer if specified, but got ${n.batchesPerEpoch}`),ie(null==n.validationSplit,()=>"`validationSplit` is not supported by `fitDataset()`. Use validationData instead."),e.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");e.isTraining=!0;try{const s=null!=n.validationData;let a,i;if(s)if(zw(n.validationData))ie(null==n.validationBatches||n.validationBatches>0&&Number.isInteger(n.validationBatches),()=>`For fitDataset() with dataset-based validation, config.validationBatches is expected not to be provided, or to be a positive integer, but got ${n.validationBatches}`);else{const e=function(e){if(3===e.length)throw new dy("Validation with sample weights is not implemented yet.");return{xs:e[0],ys:e[1]}}(n.validationData);a=e.xs,i=e.ys}const o=e.makeTrainFunction(),u=e.getDedupedMetricsNames();let l;l=s?u.slice().concat(u.map(e=>"val_"+e)):u.slice();const c=Qx(n.callbacks,n.yieldEvery),h=null==n.verbose?1:n.verbose,{callbackList:d,history:p}=ew(c,h,n.epochs,null,null,function(e,t){let n=null;return null!=t.batchesPerEpoch?n=t.batchesPerEpoch:Number.isFinite(e.size)&&(n=e.size),n}(t,n),null,s,l);d.setModel(e),e.history=p,await d.onTrainBegin(),e.stopTraining_=!1;let f=null==n.initialEpoch?0:n.initialEpoch,m=await t.iterator();for(;f<n.epochs;){const l={};await d.onEpochBegin(f);let c=0,h=0;for(r||(m=await t.iterator());!r||c<n.batchesPerEpoch;){const t=await m.next();if(r&&t.done){console.warn(`You provided \`batchesPerEpoch\` as ${n.batchesPerEpoch}, but your dataset iterator ran out of data after ${c} batches; interrupting training. Make sure that your dataset can generate at least \`batchesPerEpoch * epochs\` batches (in this case, `+n.batchesPerEpoch*n.epochs+" batches). You may need to use the repeat() function when building your dataset.");break}if(null!=t.value){const{xs:r,ys:s}=Ow(e,t.value),a={};a.batch=h,a.size=r[0].shape[0],await d.onBatchBegin(h,a);const i=[];if(null!=n.classWeight){const t=Dw(n.classWeight,e.outputNames);for(let e=0;e<t.length;++e)i.push(await Fw(s[e],null,t[e]))}const l=r.concat(s).concat(i),p=o(l);li(l);for(let e=0;e<u.length;++e){const t=u[e],n=p[e];a[t]=n,ci(n)}await d.onBatchEnd(h,a),Hx(a),h++,c++}if(r?c>=n.batchesPerEpoch:t.done){if(s){let t;t=zw(n.validationData)?xy(await e.evaluateDataset(n.validationData,{batches:n.validationBatches})):xy(e.evaluate(a,i,{batchSize:null==n.validationBatchSize?32:n.validationBatchSize,verbose:0}));for(let n=0;n<e.metricsNames.length;++n)l[`val_${e.metricsNames[n]}`]=t[n]}break}if(e.stopTraining_)break}if(await d.onEpochEnd(f,l),f++,e.stopTraining_)break}return await d.onTrainEnd(),await e.history.syncData(),e.history}finally{e.isTraining=!1}}(this,e,t)}async trainOnBatch(e,t){const n=await this.standardizeUserData(e,t),r=n[0],s=n[1],a=this.makeTrainFunction()(r.concat(s)),i=[];for(const e of a){const t=await e.data();i.push(t[0])}return li(a),Gw(n[0],e),Gw(n[1],t),by(i)}getNamedWeights(e){const t=[],n=null!=e&&e.trainableOnly,r=n?this.trainableWeights:this.weights,s=this.getWeights(n);for(let e=0;e<r.length;++e)n&&!r[e].trainable||t.push({name:r[e].originalName,tensor:s[e]});return t}set stopTraining(e){this.stopTraining_=e}get stopTraining(){return this.stopTraining_}get optimizer(){return this.optimizer_}set optimizer(e){this.optimizer_!==e&&(this.optimizer_=e,this.isOptimizerOwned=!1)}dispose(){const e=super.dispose();if(0===e.refCountAfterDispose&&null!=this.optimizer&&this.isOptimizerOwned){const t=ii().numTensors;this.optimizer_.dispose(),e.numDisposedVariables+=t-ii().numTensors}return e}getLossIdentifiers(){let e;if("string"==typeof this.loss)e=wy(this.loss);else if(Array.isArray(this.loss)){for(const e of this.loss)if("string"!=typeof e)throw new Error("Serialization of non-string loss is not supported.");e=this.loss.map(e=>wy(e))}else{const t=Object.keys(this.loss);e={};const n=this.loss;for(const r of t){if("string"!=typeof n[r])throw new Error("Serialization of non-string loss is not supported.");e[r]=wy(n[r])}}return e}getMetricIdentifiers(){if("string"==typeof this.metrics||"function"==typeof this.metrics)return[wy(kw(this.metrics))];if(Array.isArray(this.metrics))return this.metrics.map(e=>wy(kw(e)));{const e={};for(const t in this.metrics)e[t]=wy(kw(this.metrics[t]));return e}}getTrainingConfig(){return{loss:this.getLossIdentifiers(),metrics:this.getMetricIdentifiers(),optimizer_config:{class_name:this.optimizer.getClassName(),config:this.optimizer.getConfig()}}}loadTrainingConfig(e){if(null!=e.weighted_metrics)throw new Error("Loading weight_metrics is not supported yet.");if(null!=e.loss_weights)throw new Error("Loading loss_weights is not supported yet.");if(null!=e.sample_weight_mode)throw new Error("Loading sample_weight_mode is not supported yet.");const t=tw($w(e.optimizer_config));let n,r;if("string"==typeof e.loss)n=vy(e.loss);else if(Array.isArray(e.loss))n=e.loss.map(e=>vy(e));else if(null!=e.loss){n={};for(const t in e.loss)n[t]=vy(e.loss[t])}if(Array.isArray(e.metrics))r=e.metrics.map(e=>vy(e));else if(null!=e.metrics){r={};for(const t in e.metrics)r[t]=vy(e.metrics[t])}this.compile({loss:n,metrics:r,optimizer:t})}async save(e,t){if("string"==typeof e){const t=Ui(e);if(0===t.length)throw new hy(`Cannot find any save handlers for URL '${e}'`);if(t.length>1)throw new hy(`Found more than one (${t.length}) save handlers for URL '${e}'`);e=t[0]}if(null==e.save)throw new hy("LayersModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");const n=await ki(this.getNamedWeights(t)),r={modelTopology:this.toJSON(null,!1),format:"layers-model",generatedBy:`TensorFlow.js tfjs-layers v${Rw}`,convertedBy:null};if(null!=t&&t.includeOptimizer&&null!=this.optimizer){r.trainingConfig=this.getTrainingConfig();const e="optimizer",{data:t,specs:s}=await ki(await this.optimizer.getWeights(),e);n.specs.push(...s),n.data=_i([n.data,t])}if(null!=this.userDefinedMetadata){const e=!0;Nw(this.userDefinedMetadata,this.name,e),r.userDefinedMetadata=this.userDefinedMetadata}return r.weightData=n.data,r.weightSpecs=n.specs,e.save(r)}setUserDefinedMetadata(e){Nw(e,this.name),this.userDefinedMetadata=e}getUserDefinedMetadata(){return this.userDefinedMetadata}}Xw.className="Model",Ho(Xw);class Yw extends Xw{}async function Zw(e,t){"modelTopology"in e||(e={modelTopology:e});let n=e.modelTopology;null!=n.model_config&&(n=n.model_config);const r=tw($w(n),t);if(null!=e.weightsManifest){const t=await gu(e.weightsManifest,e.pathPrefix,r.weights.map(e=>e.originalName)),n={};for(const e of r.weights)n[e.originalName]=t[e.originalName];r.loadWeights(n),li(t)}return r}async function Qw(e,t){if(null==t&&(t={}),"string"==typeof e){const n=Wi(e,t);if(0===n.length)n.push(ku(e,t));else if(n.length>1)throw new hy(`Found more than one (${n.length}) load handlers for URL '${e}'`);e=n[0]}return async function(e,t,n){if(null==n&&(n={}),null==e.load)throw new hy("Cannot proceed with model loading because the IOHandler provided does not have the `load` method implemented.");const r=await e.load();let s=r.modelTopology;null!=s.model_config&&(s=s.model_config);const a=null==n.strict||n.strict,i=null!=r.weightData&&null!=r.weightSpecs&&a,o=tw($w(s),void 0,i),u=r.trainingConfig;if(null!=u&&o.loadTrainingConfig(u),null!=r.userDefinedMetadata&&o.setUserDefinedMetadata(r.userDefinedMetadata),null!=r.weightData){if(null==r.weightSpecs)throw new hy("LayersModel artifacts contains weight data, but not weight specs. Therefore loading of weights cannot proceed.");const{modelWeights:e,optimizerWeights:t}=function(e,t){const n=Ni(e,t),r={},s=[];return t.forEach(e=>{"optimizer"===e.group?s.push({name:e.name,tensor:n[e.name]}):r[e.name]=n[e.name]}),{modelWeights:r,optimizerWeights:s}}(r.weightData,r.weightSpecs);o.loadWeights(e,a),null!=o.optimizer&&t.length>0&&await o.optimizer.setWeights(t),li(e),li(t.map(e=>e.tensor))}return o}(e,0,t)}Yw.className="Functional",Ho(Yw);class Jw extends Xw{constructor(e){if(super({inputs:[],outputs:[]}),e=e||{},this.trainable=!0,this.built=!1,this.name=null!=e.name?e.name:Ly("sequential_"),null!=e.layers)for(const t of e.layers)this.add(t)}checkShape(e){if(e.inboundNodes[0].outputTensors[0].shape.some(e=>e<0))throw new hy(`Negative dimension size caused by adding layer ${e.name} with input shape [${e.inboundNodes[0].inputTensors[0].shape}]`)}add(e){const t=e instanceof Jw||e instanceof Xw;let n;if(t){if(n=e,1!==n.outputs.length)throw new hy("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");if(1!==n.inputs.length)throw new hy("All layers in a Sequential model should have a single input tensor. For multi-input layers, use the functional API.")}if(0===this.outputs.length){if(0===e.inboundNodes.length){if(null==e.batchInputShape)throw new hy("The first layer in a Sequential model must get an `inputShape` or `batchInputShape` argument.");const t=ox({batchShape:e.batchInputShape,dtype:e.dtype,name:e.name+"_input"});e.apply(t)}if(t)this.outputs=n.outputs,this.inputs=n.inputs;else{if(1!==e.inboundNodes.length)throw new hy(`A layer added to a Sequential model must not already be connected somewhere else. LayersModel received layer ${e.name} which has ${e.inboundNodes.length} pre-existing inbound connections.`);if(1!==e.inboundNodes[0].outputTensors.length)throw new hy("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(e),this.outputs=[e.inboundNodes[0].outputTensors[0]],this.inputs=ax(this.outputs[0])}this.inboundNodes=[],new nx({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:my(null,this.inputs.length),outputMasks:[null],inputShapes:this.inputs.map(e=>e.shape),outputShapes:this.outputs[0].shape})}else{const t=e.apply(this.outputs[0]);if(Array.isArray(t))throw new TypeError("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(e),this.outputs=[t],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}this.layers.push(e),this.built=!1}pop(){if(0===this.layers.length)throw new TypeError("There are no layers in the model.");if(this.layers.pop(),0===this.layers.length)this.outputs=[],this.inboundNodes=[],this.outboundNodes=[];else{const e=this.layers.length-1;this.layers[e].outboundNodes=[],this.outputs=[this.layers[e].output],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}}call(e,t){return null==this.model&&this.build(),this.model.call(e,t)}build(e){if(Kb(e),0===this.inputs.length||0===this.outputs.length)throw new TypeError("Sequential model cannot be built: model is empty. Add some layers first.");this.model=new Xw({inputs:this.inputs,outputs:this.outputs[0],name:this.name+"_model"}),this.model.trainable=this.trainable,this.supportsMasking=this.model.supportsMasking,this.inputLayers=this.model.inputLayers,this.inputLayersNodeIndices=this.model.inputLayersNodeIndices,this.inputLayersTensorIndices=this.model.inputLayersTensorIndices,this.outputLayers=this.model.outputLayers,this.outputLayersNodeIndices=this.model.outputLayersNodeIndices,this.outputLayersTensorIndices=this.model.outputLayersTensorIndices,this.nodesByDepth=this.model.nodesByDepth,this.containerNodes=this.model.containerNodes,this.outputNames=this.model.outputNames,this.inputNames=this.model.inputNames,this.built=!0}countParams(){return this.built||this.build(),super.countParams()}summary(e,t,n=console.log){this.built||this.build(),super.summary(e,t,n)}setWeights(e){null==this.model&&this.build(),this.model.setWeights(e)}evaluate(e,t,n={}){if(!this.built)throw new cy("The model needs to be compiled before being used.");return this.model.evaluate(e,t,n)}async evaluateDataset(e,t){if(!this.built)throw new cy("The model needs to be compiled before being used.");return this.model.evaluateDataset(e,t)}predict(e,t={}){return null==this.model&&this.build(),this.model.predict(e,t)}predictOnBatch(e){return null==this.model&&this.build(),this.model.predictOnBatch(e)}compile(e){this.build(),this.model.compile(e),this.optimizer_=this.model.optimizer,this.isOptimizerOwned=this.model.isOptimizerOwned,this.loss=this.model.loss,this.metrics=this.model.metrics,this.metricsTensors=this.model.metricsTensors,this.metricsNames=this.model.metricsNames}get optimizer(){return null==this.model?void 0:this.model.optimizer}set optimizer(e){this.model.optimizer=e}async fit(e,t,n={}){if(!this.built)throw new cy("The model needs to be compiled before being used.");return this.model.fit(e,t,n)}async fitDataset(e,t){if(!this.built)throw new cy("The model needs to be compiled before being used.");return this.model.fitDataset(e,t)}async trainOnBatch(e,t){return this.model.trainOnBatch(e,t)}static fromConfig(e,t,n={},r=!1){let s,a={};if(t instanceof Array){if(null==t[0].className||"Merge"===t[0].className)throw new hy("Legacy serialization format not supported yet.");s=t}else ie(null!=t.layers,()=>"When the config data for a Sequential model is not an Array, it must be an Object that contains the 'layers' field."),s=t.layers,delete t.layers,a=t;const i=new e(a);if(!(i instanceof Jw))throw new dy(`Sequential.fromConfig called on non-Sequential input: ${i}`);for(const e of s){const t=tw(e,void 0,r);r&&t.setFastWeightInitDuringBuild(!0),i.add(t)}return i}set stopTraining(e){if(null==this.model)throw new hy("Cannot set the stopTraining property of a sequential model before it is compiled.");this.model.stopTraining=e}get stopTraining(){if(null==this.model)throw new hy("Cannot get the stopTraining property of a sequential model before it is compiled.");return this.model.stopTraining}getConfig(){const e=[];for(const t of this.layers){const n={};n.className=t.getClassName(),n.config=t.getConfig(),e.push(n)}return{name:this.name,layers:e}}}function ev(e){return new Xw(e)}function tv(e){return new Jw(e)}function nv(e){return ox(e)}function rv(e,t){Jx.registerCallbackConstructor(e,t)}Jw.className="Sequential",Ho(Jw);class sv extends Wo{getConfig(){return{}}}class av extends sv{apply(e,t=1){return function(e,t=1){if(1!==t)throw new dy(`Support for alpha values other than 1 (${t}) is not implemented yet.`);return qc(e)}(e,t)}}av.className="elu",Ho(av);class iv extends sv{apply(e){return Od(e)}}iv.className="selu",Ho(iv);class ov extends sv{apply(e){return Ed(e)}}ov.className="relu",Ho(ov);class uv extends sv{apply(e){return ui(()=>qh(6,Ed(e)))}}uv.className="relu6",Ho(uv);class lv extends sv{apply(e){return e}}lv.className="linear",Ho(lv);class cv extends sv{apply(e){return uc(e)}}cv.className="sigmoid",Ho(cv);class hv extends sv{apply(e){return function(e){return ui(()=>{const t=To(.5,$o(.2,e));return kc(t,0,1)})}(e)}}hv.className="hardSigmoid",Ho(hv);class dv extends sv{apply(e){return Ah(e)}}dv.className="softplus",Ho(dv);class pv extends sv{apply(e){return function(e){return ui(()=>Co(e,To(eu(e),1)))}(e)}}pv.className="softsign",Ho(pv);class fv extends sv{apply(e){return cc(e)}}fv.className="tanh",Ho(fv);class mv extends sv{apply(e,t=-1){return jd(e,t)}}mv.className="softmax",Ho(mv);class gv extends sv{apply(e,t=-1){return _h(e,t)}}gv.className="logSoftmax",Ho(gv);class yv extends sv{apply(e){return ui(()=>ui(()=>{const t=Math.sqrt(2),n=$o(.5,To(1,Yc(Co(e,t))));return $o(e,n)}))}}yv.className="gelu",Ho(yv);class bv extends sv{apply(e){return ui(()=>$o(.5,$o(e,To(1,cc($o(Ao(Co(2,Math.PI)),To(e,$o(.044715,Zo(e,3)))))))))}}bv.className="gelu_new",Ho(bv);class xv extends sv{apply(e){return ui(()=>$o(e,cc(Ah(e))))}}xv.className="mish",Ho(xv);class wv extends sv{apply(e,t=1){return ui(()=>$o(uc($o(e,t)),e))}}function vv(e){return e.getClassName()}function kv(e,t={}){return Sy(e,Go.getMap().classNameMap,t,"activation")}function Nv(e){if(null==e){return kv({className:"linear",config:{}})}if("string"==typeof e){const t={};return t.className=e,t.config={},kv(t)}return e instanceof sv?e:kv(e)}function Iv(e){if(null!=e&&"object"!=typeof e)throw new Error(`Argument to L1L2 regularizer's constructor is expected to be an object, but received: ${e}`)}wv.className="swish",Ho(wv);class Sv extends Wo{}class Tv extends Sv{constructor(e){super(),Iv(e),this.l1=null==e||null==e.l1?.01:e.l1,this.l2=null==e||null==e.l2?.01:e.l2,this.hasL1=0!==this.l1,this.hasL2=0!==this.l2}apply(e){return ui(()=>{let t=Hh([1]);return this.hasL1&&(t=To(t,oh($o(this.l1,eu(e))))),this.hasL2&&(t=To(t,oh($o(this.l2,yb(e))))),sc(t,[])})}getConfig(){return{l1:this.l1,l2:this.l2}}static fromConfig(e,t){return new e({l1:t.l1,l2:t.l2})}}Tv.className="L1L2",Ho(Tv);const Ev={l1l2:"L1L2"};function Cv(e){return Ny(e)}function $v(e,t={}){return Sy(e,Go.getMap().classNameMap,t,"regularizer")}function Av(e){return null==e?null:"string"==typeof e?$v({className:e in Ev?Ev[e]:e,config:{}}):e instanceof Sv?e:$v(e)}class Rv extends sx{constructor(e){super(null==e?{}:e),this.supportsMasking=!0,null!=e&&(this.maxValue=e.maxValue)}call(e,t){e=jb(e);let n=Ed(e);return null!=this.maxValue&&(n=kc(n,0,this.maxValue)),n}computeOutputShape(e){return e}getConfig(){const e={maxValue:this.maxValue},t=super.getConfig();return Object.assign(e,t),e}}Rv.className="ReLU",Ho(Rv);class _v extends sx{constructor(e){super(null==e?{}:e),this.DEFAULT_ALPHA=.3,null==e&&(e={}),this.alpha=null==e.alpha?this.DEFAULT_ALPHA:e.alpha}call(e,t){const n=jb(e);return Nh(n,this.alpha)}computeOutputShape(e){return e}getConfig(){const e={alpha:this.alpha},t=super.getConfig();return Object.assign(e,t),e}}_v.className="LeakyReLU",Ho(_v);class Dv extends sx{constructor(e){if(super(null==e?{}:e),this.DEFAULT_ALPHA_INITIALIZER="zeros",null==e&&(e={}),this.supportsMasking=!0,this.alphaInitializer=Wb(e.alphaInitializer||this.DEFAULT_ALPHA_INITIALIZER),this.alphaRegularizer=Av(e.alphaRegularizer),this.alphaConstraint=Ix(e.alphaConstraint),null==e.sharedAxes)this.sharedAxes=null;else if(Array.isArray(e.sharedAxes))this.sharedAxes=e.sharedAxes;else{if("number"!=typeof e.sharedAxes)throw new hy(`Expected sharedAxes to be a number or an array of numbers, but got ${e.sharedAxes}`);this.sharedAxes=[e.sharedAxes]}}build(e){const t=(e=Kb(e)).slice(1);if(null!=this.sharedAxes)for(const e of this.sharedAxes)t[e-1]=1;this.alpha=this.addWeight("alpha",t,"float32",this.alphaInitializer,this.alphaRegularizer,!0,this.alphaConstraint);const n={};if(null!=this.sharedAxes)for(let t=1;t<e.length;++t)n[t]=e[t];this.inputSpec=[new Jb({ndim:e.length,axes:n})],this.built=!0}call(e,t){return e=jb(e),cd(e,this.alpha.read())}getConfig(){const e={alphaInitializer:Ub(this.alphaInitializer),alphaRegularizer:Cv(this.alphaRegularizer),alphaConstraint:kx(this.alphaConstraint),sharedAxes:this.sharedAxes},t=super.getConfig();return Object.assign(e,t),e}}Dv.className="PReLU",Ho(Dv);class Fv extends sx{constructor(e){if(super(null==e?{}:e),this.DEFAULT_ALPHA=1,null==e&&(e={}),null!=e.alpha&&e.alpha!==this.DEFAULT_ALPHA)throw new dy(`Non-default alpha value (${e.alpha}) is not supported by the ELU layer yet.`);this.alpha=null==e.alpha?this.DEFAULT_ALPHA:e.alpha}call(e,t){const n=jb(e);return qc(n)}computeOutputShape(e){return e}getConfig(){const e={alpha:this.alpha},t=super.getConfig();return Object.assign(e,t),e}}Fv.className="ELU",Ho(Fv);class Mv extends sx{constructor(e){super(null==e?{}:e),this.DEFAULT_THETA=1,null==e&&(e={}),this.theta=null==e.theta?this.DEFAULT_THETA:e.theta}call(e,t){const n=jb(e);return $o(n,No(bh(n,this.theta),"float32"))}computeOutputShape(e){return e}getConfig(){const e={theta:this.theta},t=super.getConfig();return Object.assign(e,t),e}}Mv.className="ThresholdedReLU",Ho(Mv);class Ov extends sx{constructor(e){super(null==e?{}:e),this.DEFAULT_AXIS=1,null==e&&(e={}),this.softmax=(new mv).apply,this.axis=null==e.axis?this.DEFAULT_AXIS:e.axis}call(e,t){return ui(()=>{let n=jb(e);const r=t.mask;if(null!=r){const e=$o(Qo(jh(n.shape),No(r,n.dtype)),Bo(-1e9));n=To(n,e)}return this.axis instanceof Array?this.axis.length>1?hh(Qo(n,Dh(n,this.axis,!0))):this.softmax(n,this.axis[0]):this.softmax(n,this.axis)})}computeOutputShape(e){return e}getConfig(){const e={axis:this.axis},t=super.getConfig();return Object.assign(e,t),e}}function Lv(e,t,n){if("number"==typeof e)return my(e,t);if(e.length!==t)throw new hy(`The ${n} argument must be an integer or tuple of ${t} integers. Received: ${e.length} elements.`);for(let r=0;r<t;++r){const s=e[r];if(!Jy(s))throw new hy(`The ${n} argument must be an integer or tuple of ${t} integers. Received: ${JSON.stringify(e)} including a non-integer number ${s}`)}return e}function zv(e,t,n,r,s=1){if(null==e)return e;let a;return a="same"===n?e:e-(t+(t-1)*(s-1))+1,Math.floor((a+r-1)/r)}function Pv(e,t,n,r){if(null==e)return null;if("valid"===r)e=e*t+nb([n-t,0]);else{if("same"!==r)throw new hy(`Unsupport padding mode: ${r}.`);e*=t}return e}function Bv(e,t){return ui(()=>(Gy(t),"channelsFirst"===t?Mu(e,[0,2,3,1]):e))}function Vv(e,t){return ui(()=>(Gy(t),"channelsFirst"===t?Mu(e,[0,2,3,4,1]):e))}function Uv(e,t,n,r=[1,1],s="valid",a,i,o=null){return ui(()=>{if(null==a&&(a="channelsLast"),Gy(a),3!==e.rank&&4!==e.rank)throw new hy(`conv2dWithBiasActivation expects input to be of rank 3 or 4, but received ${e.rank}.`);if(3!==t.rank&&4!==t.rank)throw new hy(`conv2dWithBiasActivation expects kernel to be of rank 3 or 4, but received ${e.rank}.`);let u=Bv(e,a);if("causal"===s)throw new dy("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");return u=Dp({x:u,filter:t,strides:r,pad:"same"===s?"same":"valid",dilations:i,dataFormat:"NHWC",bias:n,activation:o}),"channelsFirst"===a&&(u=Mu(u,[0,3,1,2])),u})}Ov.className="Softmax",Ho(Ov);class Wv extends sx{constructor(e,t){if(super(t),this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",Wv.verifyArgs(t),this.rank=e,Ry(this.rank,"rank"),1!==this.rank&&2!==this.rank&&3!==this.rank)throw new dy(`Convolution layer for rank other than 1, 2, or 3 (${this.rank}) is not implemented yet.`);if(this.kernelSize=Lv(t.kernelSize,e,"kernelSize"),this.strides=Lv(null==t.strides?1:t.strides,e,"strides"),this.padding=null==t.padding?"valid":t.padding,Hy(this.padding),this.dataFormat=null==t.dataFormat?"channelsLast":t.dataFormat,Gy(this.dataFormat),this.activation=Nv(t.activation),this.useBias=null==t.useBias||t.useBias,this.biasInitializer=Wb(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.biasConstraint=Ix(t.biasConstraint),this.biasRegularizer=Av(t.biasRegularizer),this.activityRegularizer=Av(t.activityRegularizer),this.dilationRate=Lv(null==t.dilationRate?1:t.dilationRate,e,"dilationRate"),1===this.rank&&Array.isArray(this.dilationRate)&&1!==this.dilationRate.length)throw new hy(`dilationRate must be a number or an array of a single number for 1D convolution, but received ${JSON.stringify(this.dilationRate)}`);if(2===this.rank){if("number"==typeof this.dilationRate)this.dilationRate=[this.dilationRate,this.dilationRate];else if(2!==this.dilationRate.length)throw new hy(`dilationRate must be a number or array of two numbers for 2D convolution, but received ${JSON.stringify(this.dilationRate)}`)}else if(3===this.rank)if("number"==typeof this.dilationRate)this.dilationRate=[this.dilationRate,this.dilationRate,this.dilationRate];else if(3!==this.dilationRate.length)throw new hy(`dilationRate must be a number or array of three numbers for 3D convolution, but received ${JSON.stringify(this.dilationRate)}`)}static verifyArgs(e){if(gy("kernelSize"in e,"required key 'kernelSize' not in config"),"number"!=typeof e.kernelSize&&!Ay(e.kernelSize,"number",1,3))throw new hy(`BaseConv expects config.kernelSize to be number or number[] with length 1, 2, or 3, but received ${JSON.stringify(e.kernelSize)}.`)}getConfig(){const e={kernelSize:this.kernelSize,strides:this.strides,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,activation:vv(this.activation),useBias:this.useBias,biasInitializer:Ub(this.biasInitializer),biasRegularizer:Cv(this.biasRegularizer),activityRegularizer:Cv(this.activityRegularizer),biasConstraint:kx(this.biasConstraint)},t=super.getConfig();return Object.assign(e,t),e}}class Gv extends Wv{constructor(e,t){super(e,t),this.kernel=null,Gv.verifyArgs(t),this.filters=t.filters,Ry(this.filters,"filters"),this.kernelInitializer=Wb(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.kernelConstraint=Ix(t.kernelConstraint),this.kernelRegularizer=Av(t.kernelRegularizer)}build(e){e=Kb(e);const t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t])throw new hy(`The channel dimension of the input should be defined. Found ${e[t]}`);const n=e[t],r=this.kernelSize.concat([n,this.filters]);this.kernel=this.addWeight("kernel",r,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[{ndim:this.rank+2,axes:{[t]:n}}],this.built=!0}call(e,t){return ui(()=>{let t;e=jb(e);const n=null==this.bias?null:this.bias.read(),r=Dy(this.activation.getClassName());if(null!=r&&2===this.rank)t=Uv(e,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate,r);else{if(1===this.rank)t=function(e,t,n,r=1,s="valid",a,i=1){return ui(()=>{if(null==a&&(a="channelsLast"),Gy(a),3!==e.shape.length)throw new hy(`The input of a conv1dWithBias operation should be 3, but is ${e.shape.length} instead.`);if(3!==t.shape.length)throw new hy(`The kernel for a conv1dWithBias operation should be 3, but is ${t.shape.length} instead`);if(null!=n&&1!==n.shape.length)throw new hy(`The bias for a conv1dWithBias operation should be 1, but is ${n.shape.length} instead`);if("channelsFirst"===a&&(e=Mu(e,[0,2,1])),"causal"===s)throw new dy("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");let o=Cc(e,t,r,"same"===s?"same":"valid","NWC",i);return null!=n&&(o=xb(o,n)),o})}(e,this.kernel.read(),n,this.strides[0],this.padding,this.dataFormat,this.dilationRate[0]);else if(2===this.rank)t=Uv(e,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate);else{if(3!==this.rank)throw new dy("convolutions greater than 3D are not implemented yet.");t=function(e,t,n,r=[1,1,1],s="valid",a,i){return ui(()=>{if(null==a&&(a="channelsLast"),Gy(a),4!==e.rank&&5!==e.rank)throw new hy(`conv3dWithBias expects input to be of rank 4 or 5, but received ${e.rank}.`);if(4!==t.rank&&5!==t.rank)throw new hy(`conv3dWithBias expects kernel to be of rank 4 or 5, but received ${e.rank}.`);let o=Vv(e,a);if("causal"===s)throw new dy("The support for CAUSAL padding mode in conv3dWithBias is not implemented yet.");return o=Rc(o,t,r,"same"===s?"same":"valid","NDHWC",i),null!=n&&(o=xb(o,n)),"channelsFirst"===a&&(o=Mu(o,[0,4,1,2,3])),o})}(e,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate)}null!=this.activation&&(t=this.activation.apply(t))}return t})}computeOutputShape(e){e=Kb(e);const t=[],n="channelsLast"===this.dataFormat?e.slice(1,e.length-1):e.slice(2);for(let e=0;e<n.length;++e){const r=zv(n[e],this.kernelSize[e],this.padding,this.strides[e],"number"==typeof this.dilationRate?this.dilationRate:this.dilationRate[e]);t.push(r)}let r=[e[0]];return"channelsLast"===this.dataFormat?(r=r.concat(t),r.push(this.filters)):(r.push(this.filters),r=r.concat(t)),r}getConfig(){const e={filters:this.filters,kernelInitializer:Ub(this.kernelInitializer),kernelRegularizer:Cv(this.kernelRegularizer),kernelConstraint:kx(this.kernelConstraint)},t=super.getConfig();return Object.assign(e,t),e}static verifyArgs(e){if(!("filters"in e)||"number"!=typeof e.filters||e.filters<1)throw new hy(`Convolution layer expected config.filters to be a 'number' > 0 but got ${JSON.stringify(e.filters)}`)}}class Hv extends Gv{constructor(e){super(2,e),Hv.verifyArgs(e)}getConfig(){const e=super.getConfig();return delete e.rank,e}static verifyArgs(e){if("number"!=typeof e.kernelSize&&!Ay(e.kernelSize,"number",1,2))throw new hy(`Conv2D expects config.kernelSize to be number or number[] with length 1 or 2, but received ${JSON.stringify(e.kernelSize)}.`)}}Hv.className="Conv2D",Ho(Hv);class jv extends Gv{constructor(e){super(3,e),jv.verifyArgs(e)}getConfig(){const e=super.getConfig();return delete e.rank,e}static verifyArgs(e){if("number"!=typeof e.kernelSize&&(!Array.isArray(e.kernelSize)||1!==e.kernelSize.length&&3!==e.kernelSize.length))throw new hy(`Conv3D expects config.kernelSize to be number or [number, number, number], but received ${JSON.stringify(e.kernelSize)}.`)}}jv.className="Conv3D",Ho(jv);class Kv extends Hv{constructor(e){if(super(e),this.inputSpec=[new Jb({ndim:4})],"same"!==this.padding&&"valid"!==this.padding)throw new hy(`Conv2DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(e){if(4!==(e=Kb(e)).length)throw new hy("Input should have rank 4; Received input shape: "+JSON.stringify(e));const t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t])throw new hy("The channel dimension of the inputs should be defined. Found `None`.");const n=e[t],r=this.kernelSize.concat([this.filters,n]);this.kernel=this.addWeight("kernel",r,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new Jb({ndim:4,axes:{[t]:n}})],this.built=!0}call(e,t){return ui(()=>{let t=jb(e);if(4!==t.shape.length)throw new hy(`Conv2DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${t.shape.length}`);const n=t.shape,r=n[0];let s,a;"channelsFirst"===this.dataFormat?(s=2,a=3):(s=1,a=2);const i=n[s],o=n[a],u=this.kernelSize[0],l=this.kernelSize[1],c=this.strides[0],h=this.strides[1],d=[r,Pv(i,c,u,this.padding),Pv(o,h,l,this.padding),this.filters];"channelsLast"!==this.dataFormat&&(t=Mu(t,[0,2,3,1]));let p=Ac(t,this.kernel.read(),d,this.strides,this.padding);return"channelsLast"!==this.dataFormat&&(p=Mu(p,[0,3,1,2])),null!=this.bias&&(p=xb(p,this.bias.read(),this.dataFormat)),null!=this.activation&&(p=this.activation.apply(p)),p})}computeOutputShape(e){const t=(e=Kb(e)).slice();let n,r,s;"channelsFirst"===this.dataFormat?(n=1,r=2,s=3):(n=3,r=1,s=2);const a=this.kernelSize[0],i=this.kernelSize[1],o=this.strides[0],u=this.strides[1];return t[n]=this.filters,t[r]=Pv(t[r],o,a,this.padding),t[s]=Pv(t[s],u,i,this.padding),t}getConfig(){const e=super.getConfig();return delete e.dilationRate,e}}Kv.className="Conv2DTranspose",Ho(Kv);class qv extends jv{constructor(e){if(super(e),this.inputSpec=[new Jb({ndim:5})],"same"!==this.padding&&"valid"!==this.padding)throw new hy(`Conv3DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(e){if(5!==(e=Kb(e)).length)throw new hy("Input should have rank 5; Received input shape: "+JSON.stringify(e));const t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t])throw new hy("The channel dimension of the inputs should be defined. Found `None`.");const n=e[t],r=this.kernelSize.concat([this.filters,n]);this.kernel=this.addWeight("kernel",r,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new Jb({ndim:5,axes:{[t]:n}})],this.built=!0}call(e,t){return ui(()=>{let t=jb(e);if(5!==t.shape.length)throw new hy(`Conv3DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${t.shape.length}`);const n=t.shape,r=n[0];let s,a,i;"channelsFirst"===this.dataFormat?(i=2,s=3,a=4):(i=1,s=2,a=3);const o=n[i],u=n[s],l=n[a],c=this.kernelSize[0],h=this.kernelSize[1],d=this.kernelSize[2],p=this.strides[0],f=this.strides[1],m=this.strides[2],g=[r,Pv(o,p,c,this.padding),Pv(u,f,h,this.padding),Pv(l,m,d,this.padding),this.filters];"channelsLast"!==this.dataFormat&&(t=Mu(t,[0,2,3,4,1]));let y=Dc(t,this.kernel.read(),g,this.strides,this.padding);return"channelsLast"!==this.dataFormat&&(y=Mu(y,[0,4,1,2,3])),null!==this.bias&&(y=xb(y,this.bias.read(),this.dataFormat)),null!==this.activation&&(y=this.activation.apply(y)),y})}computeOutputShape(e){const t=(e=Kb(e)).slice();let n,r,s,a;"channelsFirst"===this.dataFormat?(n=1,r=2,s=3,a=4):(n=4,r=1,s=2,a=3);const i=this.kernelSize[0],o=this.kernelSize[1],u=this.kernelSize[2],l=this.strides[0],c=this.strides[1],h=this.strides[2];return t[n]=this.filters,t[r]=Pv(t[r],l,i,this.padding),t[s]=Pv(t[s],c,o,this.padding),t[a]=Pv(t[a],h,u,this.padding),t}getConfig(){const e=super.getConfig();return delete e.dilationRate,e}}qv.className="Conv3DTranspose",Ho(qv);class Xv extends Gv{constructor(e,t){if(super(e,t),this.DEFAULT_DEPTHWISE_INITIALIZER="glorotUniform",this.DEFAULT_POINTWISE_INITIALIZER="glorotUniform",this.depthwiseKernel=null,this.pointwiseKernel=null,null==t.filters)throw new hy("The `filters` configuration field is required by SeparableConv, but is unspecified.");if(null!=t.kernelInitializer||null!=t.kernelRegularizer||null!=t.kernelConstraint)throw new hy("Fields kernelInitializer, kernelRegularizer and kernelConstraint are invalid for SeparableConv2D. Use depthwiseInitializer, depthwiseRegularizer, depthwiseConstraint, pointwiseInitializer, pointwiseRegularizer and pointwiseConstraint instead.");if(null!=t.padding&&"same"!==t.padding&&"valid"!==t.padding)throw new hy(`SeparableConv${this.rank}D supports only padding modes: 'same' and 'valid', but received ${JSON.stringify(t.padding)}`);this.depthMultiplier=null==t.depthMultiplier?1:t.depthMultiplier,this.depthwiseInitializer=Wb(t.depthwiseInitializer||this.DEFAULT_DEPTHWISE_INITIALIZER),this.depthwiseRegularizer=Av(t.depthwiseRegularizer),this.depthwiseConstraint=Ix(t.depthwiseConstraint),this.pointwiseInitializer=Wb(t.depthwiseInitializer||this.DEFAULT_POINTWISE_INITIALIZER),this.pointwiseRegularizer=Av(t.pointwiseRegularizer),this.pointwiseConstraint=Ix(t.pointwiseConstraint)}build(e){if((e=Kb(e)).length<this.rank+2)throw new hy(`Inputs to SeparableConv${this.rank}D should have rank ${this.rank+2}, but received input shape: ${JSON.stringify(e)}`);const t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t]||e[t]<0)throw new hy(`The channel dimension of the inputs should be defined, but found ${JSON.stringify(e[t])}`);const n=e[t],r=this.kernelSize.concat([n,this.depthMultiplier]),s=[];for(let e=0;e<this.rank;++e)s.push(1);s.push(n*this.depthMultiplier,this.filters);const a=!0;this.depthwiseKernel=this.addWeight("depthwise_kernel",r,"float32",this.depthwiseInitializer,this.depthwiseRegularizer,a,this.depthwiseConstraint),this.pointwiseKernel=this.addWeight("pointwise_kernel",s,"float32",this.pointwiseInitializer,this.pointwiseRegularizer,a,this.pointwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,a,this.biasConstraint):this.bias=null,this.inputSpec=[new Jb({ndim:this.rank+2,axes:{[t]:n}})],this.built=!0}call(e,t){return ui(()=>{let t;if(e=jb(e),1===this.rank)throw new dy("1D separable convolution is not implemented yet.");return 2===this.rank&&("channelsFirst"===this.dataFormat&&(e=Mu(e,[0,2,3,1])),t=Ld(e,this.depthwiseKernel.read(),this.pointwiseKernel.read(),this.strides,this.padding,this.dilationRate,"NHWC")),this.useBias&&(t=xb(t,this.bias.read(),this.dataFormat)),null!=this.activation&&(t=this.activation.apply(t)),"channelsFirst"===this.dataFormat&&(t=Mu(t,[0,3,1,2])),t})}getConfig(){const e=super.getConfig();return delete e.rank,delete e.kernelInitializer,delete e.kernelRegularizer,delete e.kernelConstraint,e.depthwiseInitializer=Ub(this.depthwiseInitializer),e.pointwiseInitializer=Ub(this.pointwiseInitializer),e.depthwiseRegularizer=Cv(this.depthwiseRegularizer),e.pointwiseRegularizer=Cv(this.pointwiseRegularizer),e.depthwiseConstraint=kx(this.depthwiseConstraint),e.pointwiseConstraint=kx(this.pointwiseConstraint),e}}Xv.className="SeparableConv";class Yv extends Xv{constructor(e){super(2,e)}}Yv.className="SeparableConv2D",Ho(Yv);class Zv extends Gv{constructor(e){super(1,e),Zv.verifyArgs(e),this.inputSpec=[{ndim:3}]}getConfig(){const e=super.getConfig();return delete e.rank,delete e.dataFormat,e}static verifyArgs(e){if("number"!=typeof e.kernelSize&&!Ay(e.kernelSize,"number",1,1))throw new hy(`Conv1D expects config.kernelSize to be number or number[] with length 1, but received ${JSON.stringify(e.kernelSize)}.`)}}Zv.className="Conv1D",Ho(Zv);class Qv extends sx{constructor(e){super(e),"number"==typeof e.cropping?this.cropping=[[e.cropping,e.cropping],[e.cropping,e.cropping]]:"number"==typeof e.cropping[0]?this.cropping=[[e.cropping[0],e.cropping[0]],[e.cropping[1],e.cropping[1]]]:this.cropping=e.cropping,this.dataFormat=void 0===e.dataFormat?"channelsLast":e.dataFormat,this.inputSpec=[{ndim:4}]}computeOutputShape(e){return"channelsFirst"===this.dataFormat?[e[0],e[1],e[2]-this.cropping[0][0]-this.cropping[0][1],e[3]-this.cropping[1][0]-this.cropping[1][1]]:[e[0],e[1]-this.cropping[0][0]-this.cropping[0][1],e[2]-this.cropping[1][0]-this.cropping[1][1],e[3]]}call(e,t){return ui(()=>{if(e=jb(e),"channelsLast"===this.dataFormat){const t=cb(e,this.cropping[0][0],e.shape[1]-this.cropping[0][0]-this.cropping[0][1],2);return cb(t,this.cropping[1][0],e.shape[2]-this.cropping[1][1]-this.cropping[1][0],3)}{const t=cb(e,this.cropping[0][0],e.shape[2]-this.cropping[0][0]-this.cropping[0][1],3);return cb(t,this.cropping[1][0],e.shape[3]-this.cropping[1][1]-this.cropping[1][0],4)}})}getConfig(){const e={cropping:this.cropping,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}Qv.className="Cropping2D",Ho(Qv);class Jv extends sx{constructor(e){var t;super(e),this.DEFAULT_SIZE=[2,2],this.inputSpec=[{ndim:4}],this.size=null==e.size?this.DEFAULT_SIZE:e.size,this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,Gy(this.dataFormat),this.interpolation=null==e.interpolation?"nearest":e.interpolation,t=this.interpolation,$y(Py,"InterpolationFormat",t)}computeOutputShape(e){if("channelsFirst"===this.dataFormat){const t=null==e[2]?null:this.size[0]*e[2],n=null==e[3]?null:this.size[1]*e[3];return[e[0],e[1],t,n]}{const t=null==e[1]?null:this.size[0]*e[1],n=null==e[2]?null:this.size[1]*e[2];return[e[0],t,n,e[3]]}}call(e,t){return ui(()=>{let t=jb(e);const n=t.shape;if("channelsFirst"===this.dataFormat){t=Mu(t,[0,2,3,1]);const e=this.size[0]*n[2],r=this.size[1]*n[3],s="nearest"===this.interpolation?Mf.resizeNearestNeighbor(t,[e,r]):Mf.resizeBilinear(t,[e,r]);return Mu(s,[0,3,1,2])}{const e=this.size[0]*n[1],r=this.size[1]*n[2];return"nearest"===this.interpolation?Mf.resizeNearestNeighbor(t,[e,r]):Mf.resizeBilinear(t,[e,r])}})}getConfig(){const e={size:this.size,dataFormat:this.dataFormat,interpolation:this.interpolation},t=super.getConfig();return Object.assign(e,t),e}}Jv.className="UpSampling2D",Ho(Jv);class ek extends Wv{constructor(e){super(2,e),this.depthwiseKernel=null,this.depthMultiplier=null==e.depthMultiplier?1:e.depthMultiplier,this.depthwiseInitializer=Wb(e.depthwiseInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.depthwiseConstraint=Ix(e.depthwiseConstraint),this.depthwiseRegularizer=Av(e.depthwiseRegularizer)}build(e){if((e=Kb(e)).length<4)throw new hy(`Inputs to DepthwiseConv2D should have rank 4. Received input shape: ${JSON.stringify(e)}.`);const t="channelsFirst"===this.dataFormat?1:3;if(null==e[t]||e[t]<0)throw new hy(`The channel dimension of the inputs to DepthwiseConv2D should be defined, but is not (${e[t]}).`);const n=e[t],r=[this.kernelSize[0],this.kernelSize[1],n,this.depthMultiplier];this.depthwiseKernel=this.addWeight("depthwise_kernel",r,null,this.depthwiseInitializer,this.depthwiseRegularizer,!0,this.depthwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[n*this.depthMultiplier],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return ui(()=>{let t=function(e,t,n=[1,1],r="valid",s,a){return ui(()=>{null==s&&(s="channelsLast"),Gy(s);let i=Bv(e,s);if(4!==e.rank)throw new hy(`Input for depthwiseConv2d is required to be 4-D, but is instead ${e.rank}-D`);if(4!==t.rank)throw new hy(`depthwiseKernel is required to be 4-D, but is instead ${t.rank}-D`);return i=Bc(i,t,n,"same"===r?"same":"valid","NHWC",a),"channelsFirst"===s&&(i=Mu(i,[0,3,1,2])),i})}(e=jb(e),this.depthwiseKernel.read(),this.strides,this.padding,this.dataFormat,null);return this.useBias&&(t=xb(t,this.bias.read(),this.dataFormat)),null!=this.activation&&(t=this.activation.apply(t)),t})}computeOutputShape(e){e=Kb(e);const t="channelsFirst"===this.dataFormat?e[2]:e[1],n="channelsFirst"===this.dataFormat?e[3]:e[2],r="channelsFirst"===this.dataFormat?e[1]*this.depthMultiplier:e[3]*this.depthMultiplier,s=zv(t,this.kernelSize[0],this.padding,this.strides[0]),a=zv(n,this.kernelSize[1],this.padding,this.strides[1]);return"channelsFirst"===this.dataFormat?[e[0],r,s,a]:[e[0],s,a,r]}getConfig(){const e=super.getConfig();return e.depthMultiplier=this.depthMultiplier,e.depthwiseInitializer=Ub(this.depthwiseInitializer),e.depthwiseRegularizer=Cv(this.depthwiseRegularizer),e.depthwiseConstraint=kx(this.depthwiseRegularizer),e}}function tk(e,t,n,r){if(Array.isArray(e)){if(null!=t||null!=n)throw new hy("When inputs is an array, neither initialState or constants should be provided");null!=r&&(n=e.slice(e.length-r,e.length),e=e.slice(0,e.length-r)),e.length>1&&(t=e.slice(1,e.length)),e=e[0]}function s(e){return null==e||Array.isArray(e)?e:[e]}return{inputs:e,initialState:t=s(t),constants:n=s(n)}}function nk(e,t,n,r=!1,s,a,i=!1,o=!1){return ui(()=>{const u=t.shape.length;if(u<3)throw new hy(`Input should be at least 3D, but is ${u}D.`);const l=[1,0].concat(rb(2,u));if(t=Mu(t,l),null!=a)throw new dy("The rnn() functoin of the deeplearn.js backend does not support constants yet.");i&&console.warn("Backend rnn(): the unroll = true option is not applicable to the imperative deeplearn.js backend."),null!=s&&((s=No(No(s,"bool"),"float32")).rank===u-1&&(s=dh(s,-1)),s=Mu(s,l)),r&&(t=$d(t,0),null!=s&&(s=$d(s,0)));const c=[];let h,d=n;const p=t.shape[0],f=fp(t);let m,g;null!=s&&(m=fp(s));for(let t=0;t<p;++t){const n=f[t],r=ui(()=>e(n,d));if(null==s)h=r[0],d=r[1];else{const e=ui(()=>{const e=m[t],n=Qo(td(e),e);return{output:To($o(r[0],e),$o(d[0],n)),newStates:d.map((t,s)=>To($o(r[1][s],e),$o(t,n)))}});h=e.output,d=e.newStates}o&&c.push(h)}return o&&(g=ep(c,1)),[h,g,d]})}ek.className="DepthwiseConv2D",Ho(ek);class rk extends sx{constructor(e){let t;if(super(e),null==e.cell)throw new hy("cell property is missing for the constructor of RNN.");if(t=Array.isArray(e.cell)?new hk({cells:e.cell}):e.cell,null==t.stateSize)throw new hy("The RNN cell should have an attribute `stateSize` (tuple of integers, one integer per RNN state).");this.cell=t,this.returnSequences=null!=e.returnSequences&&e.returnSequences,this.returnState=null!=e.returnState&&e.returnState,this.goBackwards=null!=e.goBackwards&&e.goBackwards,this._stateful=null!=e.stateful&&e.stateful,this.unroll=null!=e.unroll&&e.unroll,this.supportsMasking=!0,this.inputSpec=[new Jb({ndim:3})],this.stateSpec=null,this.states_=null,this.numConstants=null,this.keptStates=[]}getStates(){return null==this.states_?rb(0,Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1).map(e=>null):this.states_}setStates(e){this.states_=e}computeOutputShape(e){Gb(e)&&(e=e[0]);let t=this.cell.stateSize;Array.isArray(t)||(t=[t]);const n=t[0];let r;if(r=this.returnSequences?[e[0],e[1],n]:[e[0],n],this.returnState){const n=[];for(const r of t)n.push([e[0],r]);return[r].concat(n)}return r}computeMask(e,t){return ui(()=>{Array.isArray(t)&&(t=t[0]);const e=this.returnSequences?t:null;if(this.returnState){const t=this.states.map(e=>null);return[e].concat(t)}return e})}get states(){if(null==this.states_){const e=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1,t=[];for(let n=0;n<e;++n)t.push(null);return t}return this.states_}set states(e){this.states_=e}build(e){if(null!=this.numConstants)throw new dy("Constants support is not implemented in RNN yet.");Gb(e)&&(e=e[0]);const t=this.stateful?e[0]:null,n=e.slice(2);this.inputSpec[0]=new Jb({shape:[t,null,...n]});const r=[e[0]].concat(e.slice(2));let s;if(this.cell.build(r),s=Array.isArray(this.cell.stateSize)?this.cell.stateSize:[this.cell.stateSize],null!=this.stateSpec){if(!de(this.stateSpec.map(e=>e.shape[e.shape.length-1]),s))throw new hy(`An initialState was passed that is not compatible with cell.stateSize. Received stateSpec=${this.stateSpec}; However cell.stateSize is ${this.cell.stateSize}`)}else this.stateSpec=s.map(e=>new Jb({shape:[null,e]}));this.stateful&&this.resetStates()}resetStates(e,t=!1){ui(()=>{if(!this.stateful)throw new ly("Cannot call resetStates() on an RNN Layer that is not stateful.");const n=this.inputSpec[0].shape[0];if(null==n)throw new hy("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(null==this.states_)Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(e=>Hh([n,e])):this.states_=[Hh([n,this.cell.stateSize])];else if(null==e)li(this.states_),null!=this.keptStates&&(li(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(e=>Hh([n,e])):this.states_[0]=Hh([n,this.cell.stateSize]);else{if(Array.isArray(e)||(e=[e]),e.length!==this.states_.length)throw new hy(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${e.length} state value(s). Input received: ${e}`);!0===t?this.keptStates.push(this.states_.slice()):li(this.states_);for(let t=0;t<this.states_.length;++t){const r=e[t],s=Array.isArray(this.cell.stateSize)?this.cell.stateSize[t]:this.cell.stateSize,a=[n,s];if(!de(r.shape,a))throw new hy(`State ${t} is incompatible with layer ${this.name}: expected shape=${a}, received shape=${r.shape}`);this.states_[t]=r}}this.states_=this.states_.map(e=>ci(e.clone()))})}apply(e,t){let n=null==t?null:t.initialState,r=null==t?null:t.constants;null==t&&(t={});const s=tk(e,n,r,this.numConstants);e=s.inputs,n=s.initialState,r=s.constants;let a=[],i=[];if(null!=n){t.initialState=n,a=a.concat(n),this.stateSpec=[];for(const e of n)this.stateSpec.push(new Jb({shape:e.shape}));i=i.concat(this.stateSpec)}if(null!=r&&(t.constants=r,a=a.concat(r),this.numConstants=r.length),a[0]instanceof ex){const n=[e].concat(a),r=this.inputSpec.concat(i),s=this.inputSpec;this.inputSpec=r;const o=super.apply(n,t);return this.inputSpec=s,o}return super.apply(e,t)}call(e,t){return ui(()=>{const n=null==t?null:t.mask,r=null==t?null:t.training;let s=null==t?null:t.initialState;e=jb(e),null==s&&(s=this.stateful?this.states_:this.getInitialState(e));const a=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1;if(s.length!==a)throw new hy(`RNN Layer has ${a} state(s) but was passed ${s.length} initial state(s).`);this.unroll&&console.warn("Ignoring unroll = true for RNN layer, due to imperative backend.");const i={training:r},o=nk((e,t)=>{const n=this.cell.call([e].concat(t),i);return[n[0],n.slice(1)]},e,s,this.goBackwards,n,null,this.unroll,this.returnSequences),u=o[0],l=o[1],c=o[2];this.stateful&&this.resetStates(c,r);const h=this.returnSequences?l:u;return this.returnState?[h].concat(c):h})}getInitialState(e){return ui(()=>{let t=Hh(e.shape);return t=oh(t,[1,2]),t=ob(t),Array.isArray(this.cell.stateSize)?this.cell.stateSize.map(e=>e>1?pb(t,[1,e]):t):this.cell.stateSize>1?[pb(t,[1,this.cell.stateSize])]:[t]})}get trainableWeights(){return this.trainable?this.cell.trainableWeights:[]}get nonTrainableWeights(){return this.trainable?this.cell.nonTrainableWeights:this.cell.weights}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),null!=this.cell&&this.cell.setFastWeightInitDuringBuild(e)}getConfig(){const e=super.getConfig(),t={returnSequences:this.returnSequences,returnState:this.returnState,goBackwards:this.goBackwards,stateful:this.stateful,unroll:this.unroll};null!=this.numConstants&&(t.numConstants=this.numConstants);const n=this.cell.getConfig();return this.getClassName()===rk.className&&(t.cell={className:this.cell.getClassName(),config:n}),Object.assign(Object.assign(Object.assign({},n),e),t)}static fromConfig(e,t,n={}){const r=tw(t.cell,n);return new e(Object.assign(t,{cell:r}))}}rk.className="RNN",Ho(rk);class sk extends sx{}class ak extends sk{constructor(e){super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=e.units,Ry(this.units,"units"),this.activation=Nv(null==e.activation?this.DEFAULT_ACTIVATION:e.activation),this.useBias=null==e.useBias||e.useBias,this.kernelInitializer=Wb(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=Wb(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=Wb(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=Av(e.kernelRegularizer),this.recurrentRegularizer=Av(e.recurrentRegularizer),this.biasRegularizer=Av(e.biasRegularizer),this.kernelConstraint=Ix(e.kernelConstraint),this.recurrentConstraint=Ix(e.recurrentConstraint),this.biasConstraint=Ix(e.biasConstraint),this.dropout=tb([1,nb([0,null==e.dropout?0:e.dropout])]),this.recurrentDropout=tb([1,nb([0,null==e.recurrentDropout?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){e=Kb(e),this.kernel=this.addWeight("kernel",[e[e.length-1],this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return ui(()=>{if(2!==e.length)throw new hy(`SimpleRNNCell expects 2 input Tensors, got ${e.length}.`);let n=e[1];e=e[0];const r=null!=t.training&&t.training;let s;0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=dk({ones:()=>td(e),rate:this.dropout,training:r,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=dk({ones:()=>td(n),rate:this.recurrentDropout,training:r,dropoutFunc:this.dropoutFunc}));const a=this.dropoutMask,i=this.recurrentDropoutMask;s=mb(null!=a?$o(e,a):e,this.kernel.read()),null!=this.bias&&(s=xb(s,this.bias.read())),null!=i&&(n=$o(n,i));let o=To(s,mb(n,this.recurrentKernel.read()));return null!=this.activation&&(o=this.activation.apply(o)),[o,o]})}getConfig(){const e=super.getConfig(),t={units:this.units,activation:vv(this.activation),useBias:this.useBias,kernelInitializer:Ub(this.kernelInitializer),recurrentInitializer:Ub(this.recurrentInitializer),biasInitializer:Ub(this.biasInitializer),kernelRegularizer:Cv(this.kernelRegularizer),recurrentRegularizer:Cv(this.recurrentRegularizer),biasRegularizer:Cv(this.biasRegularizer),activityRegularizer:Cv(this.activityRegularizer),kernelConstraint:kx(this.kernelConstraint),recurrentConstraint:kx(this.recurrentConstraint),biasConstraint:kx(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout};return Object.assign(Object.assign({},e),t)}}ak.className="SimpleRNNCell",Ho(ak);class ik extends rk{constructor(e){e.cell=new ak(e),super(e)}call(e,t){return ui(()=>{null!=this.cell.dropoutMask&&(li(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(li(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const n=null==t?null:t.mask,r=null==t?null:t.training,s=null==t?null:t.initialState;return super.call(e,{mask:n,training:r,initialState:s})})}static fromConfig(e,t){return new e(t)}}ik.className="SimpleRNN",Ho(ik);class ok extends sk{constructor(e){if(super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",e.resetAfter)throw new hy("GRUCell does not support reset_after parameter set to true.");this.units=e.units,Ry(this.units,"units"),this.activation=Nv(void 0===e.activation?this.DEFAULT_ACTIVATION:e.activation),this.recurrentActivation=Nv(void 0===e.recurrentActivation?this.DEFAULT_RECURRENT_ACTIVATION:e.recurrentActivation),this.useBias=null==e.useBias||e.useBias,this.kernelInitializer=Wb(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=Wb(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=Wb(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=Av(e.kernelRegularizer),this.recurrentRegularizer=Av(e.recurrentRegularizer),this.biasRegularizer=Av(e.biasRegularizer),this.kernelConstraint=Ix(e.kernelConstraint),this.recurrentConstraint=Ix(e.recurrentConstraint),this.biasConstraint=Ix(e.biasConstraint),this.dropout=tb([1,nb([0,null==e.dropout?0:e.dropout])]),this.recurrentDropout=tb([1,nb([0,null==e.recurrentDropout?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.implementation=e.implementation,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){const t=(e=Kb(e))[e.length-1];this.kernel=this.addWeight("kernel",[t,3*this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,3*this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[3*this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return ui(()=>{if(2!==e.length)throw new hy(`GRUCell expects 2 input Tensors (inputs, h, c), got ${e.length}.`);const n=null!=t.training&&t.training;let r=e[1];e=e[0],0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=dk({ones:()=>td(e),rate:this.dropout,training:n,count:3,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=dk({ones:()=>td(r),rate:this.recurrentDropout,training:n,count:3,dropoutFunc:this.dropoutFunc}));const s=this.dropoutMask,a=this.recurrentDropoutMask;let i,o,u;0<this.dropout&&this.dropout<1&&(e=$o(e,s[0]));let l=mb(e,this.kernel.read());this.useBias&&(l=xb(l,this.bias.read())),0<this.recurrentDropout&&this.recurrentDropout<1&&(r=$o(r,a[0]));const c=this.recurrentKernel.read(),[h,d]=Yd(c,[2*this.units,this.units],c.rank-1),p=mb(r,h),[f,m,g]=Yd(l,3,l.rank-1),[y,b]=Yd(p,2,p.rank-1);i=this.recurrentActivation.apply(To(f,y)),o=this.recurrentActivation.apply(To(m,b));const x=mb($o(o,r),d);u=this.activation.apply(To(g,x));const w=To($o(i,r),$o(To(1,Du(i)),u));return[w,w]})}getConfig(){const e=super.getConfig(),t={units:this.units,activation:vv(this.activation),recurrentActivation:vv(this.recurrentActivation),useBias:this.useBias,kernelInitializer:Ub(this.kernelInitializer),recurrentInitializer:Ub(this.recurrentInitializer),biasInitializer:Ub(this.biasInitializer),kernelRegularizer:Cv(this.kernelRegularizer),recurrentRegularizer:Cv(this.recurrentRegularizer),biasRegularizer:Cv(this.biasRegularizer),activityRegularizer:Cv(this.activityRegularizer),kernelConstraint:kx(this.kernelConstraint),recurrentConstraint:kx(this.recurrentConstraint),biasConstraint:kx(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation,resetAfter:!1};return Object.assign(Object.assign({},e),t)}}ok.className="GRUCell",Ho(ok);class uk extends rk{constructor(e){0===e.implementation&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),e.cell=new ok(e),super(e)}call(e,t){return ui(()=>{null!=this.cell.dropoutMask&&(li(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(li(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const n=null==t?null:t.mask,r=null==t?null:t.training,s=null==t?null:t.initialState;return super.call(e,{mask:n,training:r,initialState:s})})}static fromConfig(e,t){return 0===t.implmentation&&(t.implementation=1),new e(t)}}uk.className="GRU",Ho(uk);class lk extends sk{constructor(e){super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=e.units,Ry(this.units,"units"),this.activation=Nv(void 0===e.activation?this.DEFAULT_ACTIVATION:e.activation),this.recurrentActivation=Nv(void 0===e.recurrentActivation?this.DEFAULT_RECURRENT_ACTIVATION:e.recurrentActivation),this.useBias=null==e.useBias||e.useBias,this.kernelInitializer=Wb(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=Wb(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=Wb(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.unitForgetBias=e.unitForgetBias,this.kernelRegularizer=Av(e.kernelRegularizer),this.recurrentRegularizer=Av(e.recurrentRegularizer),this.biasRegularizer=Av(e.biasRegularizer),this.kernelConstraint=Ix(e.kernelConstraint),this.recurrentConstraint=Ix(e.recurrentConstraint),this.biasConstraint=Ix(e.biasConstraint),this.dropout=tb([1,nb([0,null==e.dropout?0:e.dropout])]),this.recurrentDropout=tb([1,nb([0,null==e.recurrentDropout?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.implementation=e.implementation,this.stateSize=[this.units,this.units],this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){var t;const n=(e=Kb(e))[e.length-1];let r;if(this.kernel=this.addWeight("kernel",[n,4*this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,4*this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){if(this.unitForgetBias){const e=this.biasInitializer,n=this.units;r=new((t=class extends Ib{apply(t,r){const s=e.apply([n]),a=(new Tb).apply([n]),i=e.apply([2*n]);return db(db(s,a),i)}}).className="CustomInit",t)}else r=this.biasInitializer;this.bias=this.addWeight("bias",[4*this.units],null,r,this.biasRegularizer,!0,this.biasConstraint)}else this.bias=null;this.built=!0}call(e,t){return ui(()=>{const n=null!=t.training&&t.training;if(3!==e.length)throw new hy(`LSTMCell expects 3 input Tensors (inputs, h, c), got ${e.length}.`);let r=e[1];const s=e[2];e=e[0],0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=dk({ones:()=>td(e),rate:this.dropout,training:n,count:4,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=dk({ones:()=>td(r),rate:this.recurrentDropout,training:n,count:4,dropoutFunc:this.dropoutFunc}));const a=this.dropoutMask,i=this.recurrentDropoutMask;let o,u,l,c;0<this.dropout&&this.dropout<1&&(e=$o(e,a[0]));let h=mb(e,this.kernel.read());0<this.recurrentDropout&&this.recurrentDropout<1&&(r=$o(r,i[0])),h=To(h,mb(r,this.recurrentKernel.read())),this.useBias&&(h=xb(h,this.bias.read()));const[d,p,f,m]=Yd(h,4,h.rank-1);o=this.recurrentActivation.apply(d),u=this.recurrentActivation.apply(p),l=To($o(u,s),$o(o,this.activation.apply(f))),c=this.recurrentActivation.apply(m);const g=$o(c,this.activation.apply(l));return[g,g,l]})}getConfig(){const e=super.getConfig(),t={units:this.units,activation:vv(this.activation),recurrentActivation:vv(this.recurrentActivation),useBias:this.useBias,kernelInitializer:Ub(this.kernelInitializer),recurrentInitializer:Ub(this.recurrentInitializer),biasInitializer:Ub(this.biasInitializer),unitForgetBias:this.unitForgetBias,kernelRegularizer:Cv(this.kernelRegularizer),recurrentRegularizer:Cv(this.recurrentRegularizer),biasRegularizer:Cv(this.biasRegularizer),activityRegularizer:Cv(this.activityRegularizer),kernelConstraint:kx(this.kernelConstraint),recurrentConstraint:kx(this.recurrentConstraint),biasConstraint:kx(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation};return Object.assign(Object.assign({},e),t)}}lk.className="LSTMCell",Ho(lk);class ck extends rk{constructor(e){0===e.implementation&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),e.cell=new lk(e),super(e)}call(e,t){return ui(()=>{null!=this.cell.dropoutMask&&(li(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(li(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const n=null==t?null:t.mask,r=null==t?null:t.training,s=null==t?null:t.initialState;return super.call(e,{mask:n,training:r,initialState:s})})}static fromConfig(e,t){return 0===t.implmentation&&(t.implementation=1),new e(t)}}ck.className="LSTM",Ho(ck);class hk extends sk{constructor(e){super(e),this.cells=e.cells}get stateSize(){const e=[];for(const t of this.cells.slice().reverse())Array.isArray(t.stateSize)?e.push(...t.stateSize):e.push(t.stateSize);return e}call(e,t){return ui(()=>{let n=e.slice(1);const r=[];for(const e of this.cells.slice().reverse())Array.isArray(e.stateSize)?r.push(n.splice(0,e.stateSize.length)):r.push(n.splice(0,1));r.reverse();const s=[];let a;for(let i=0;i<this.cells.length;++i){const o=this.cells[i];n=r[i],a=0===i?[e[0]].concat(n):[a[0]].concat(n),a=o.call(a,t),s.push(a.slice(1))}n=[];for(const e of s.slice().reverse())n.push(...e);return[a[0]].concat(n)})}build(e){let t;Gb(e)&&(e=e[0]),this.cells.forEach((n,r)=>{qy(`RNNCell_${r}`,()=>{n.build(e),t=Array.isArray(n.stateSize)?n.stateSize[0]:n.stateSize,e=[e[0],t]})}),this.built=!0}getConfig(){const e=super.getConfig(),t={cells:this.cells.map(e=>({className:e.getClassName(),config:e.getConfig()}))};return Object.assign(Object.assign({},e),t)}static fromConfig(e,t,n={}){const r=[];for(const e of t.cells)r.push(tw(e,n));return new e({cells:r})}get trainableWeights(){if(!this.trainable)return[];const e=[];for(const t of this.cells)e.push(...t.trainableWeights);return e}get nonTrainableWeights(){const e=[];for(const t of this.cells)e.push(...t.nonTrainableWeights);if(!this.trainable){const t=[];for(const e of this.cells)t.push(...e.trainableWeights);return t.concat(e)}return e}getWeights(){const e=[];for(const t of this.cells)e.push(...t.weights);return Zb(e)}setWeights(e){const t=[];for(const n of this.cells){const r=n.weights.length,s=e.splice(r);for(let e=0;e<n.weights.length;++e)t.push([n.weights[e],s[e]])}Qb(t)}}function dk(e){const{ones:t,rate:n,training:r=!1,count:s=1,dropoutFunc:a}=e,i=()=>null!=a?a(t(),n):wb(t(),n),o=()=>vb(i,t,r);return!s||s<=1?ci(o().clone()):Array(s).fill(void 0).map(o).map(e=>ci(e.clone()))}hk.className="StackedRNNCells",Ho(hk);class pk extends rk{constructor(e){if(e.unroll)throw new dy("Unrolling is not possible with convolutional RNNs.");if(Array.isArray(e.cell))throw new dy("It is not possible at the moment to stack convolutional cells.");super(e),this.inputSpec=[new Jb({ndim:5})]}call(e,t){return ui(()=>{if(null!=this.cell.dropoutMask&&(li(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(li(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null),t&&t.constants)throw new hy("ConvRNN2D cell does not support constants");const n=null==t?null:t.mask,r=null==t?null:t.training,s=null==t?null:t.initialState;return super.call(e,{mask:n,training:r,initialState:s})})}computeOutputShape(e){let t=this.computeSingleOutputShape(e);return this.returnSequences||(t=[t[0],...t.slice(2)]),this.returnState&&(t=[t,...Array(2).fill([e[0],...t.slice(-3)])]),t}getInitialState(e){return ui(()=>{const{stateSize:t}=this.cell,n=e.shape,r=this.computeSingleOutputShape(n),s=Hh([r[0],...r.slice(2)]);return Array.isArray(t)?Array(t.length).fill(s):[s]})}resetStates(e,t=!1){ui(()=>{if(!this.stateful)throw new ly("Cannot call resetStates() on an RNN Layer that is not stateful.");const n=this.inputSpec[0].shape,r=this.computeSingleOutputShape(n),s=[r[0],...r.slice(2)];if(null==n[0])throw new hy("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(null==this.getStates())Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(()=>Hh(s)):this.states_=[Hh(s)];else if(null==e)li(this.states_),null!=this.keptStates&&(li(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(()=>Hh(s)):this.states_[0]=Hh(s);else{if(Array.isArray(e)||(e=[e]),e.length!==this.states_.length)throw new hy(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${e.length} state value(s). Input received: ${e}`);t?this.keptStates.push(this.states_.slice()):li(this.states_);for(let t=0;t<this.states_.length;++t){const n=e[t],r=s;if(!de(n.shape,r))throw new hy(`State ${t} is incompatible with layer ${this.name}: expected shape=${r}, received shape=${n.shape}`);this.states_[t]=n}}this.states_=this.states_.map(e=>ci(e.clone()))})}computeSingleOutputShape(e){const{dataFormat:t,filters:n,kernelSize:r,padding:s,strides:a,dilationRate:i}=this.cell,o="channelsFirst"===t,u=e[o?3:2],l=e[o?4:3],c=zv(u,r[0],s,a[0],i[0]),h=zv(l,r[1],s,a[1],i[1]);return[...e.slice(0,2),...o?[n,c,h]:[c,h,n]]}}pk.className="ConvRNN2D";class fk extends lk{constructor(e){const{filters:t,kernelSize:n,strides:r,padding:s,dataFormat:a,dilationRate:i}=e;super(Object.assign(Object.assign({},e),{units:t})),this.filters=t,Ry(this.filters,"filters"),this.kernelSize=Lv(n,2,"kernelSize"),this.kernelSize.forEach(e=>Ry(e,"kernelSize")),this.strides=Lv(r||1,2,"strides"),this.strides.forEach(e=>Ry(e,"strides")),this.padding=s||"valid",Hy(this.padding),this.dataFormat=a||"channelsLast",Gy(this.dataFormat),this.dilationRate=Lv(i||1,2,"dilationRate"),this.dilationRate.forEach(e=>Ry(e,"dilationRate"))}build(e){var t;e=Kb(e);const n="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[n])throw new hy(`The channel dimension of the input should be defined. Found ${e[n]}`);const r=e[n],s=this.kernelSize.concat([r,4*this.filters]);this.kernel=this.addWeight("kernel",s,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint);const a=this.kernelSize.concat([this.filters,4*this.filters]);if(this.recurrentKernel=this.addWeight("recurrent_kernel",a,null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){let e;if(this.unitForgetBias){const n=this.biasInitializer,r=this.filters;e=new((t=class extends Ib{apply(e,t){return hb([n.apply([r]),jh([r]),n.apply([2*r])])}}).className="CustomInit",t)}else e=this.biasInitializer;this.bias=this.addWeight("bias",[4*this.filters],null,e,this.biasRegularizer,!0,this.biasConstraint)}this.built=!0}call(e,t){return ui(()=>{if(3!==e.length)throw new hy(`ConvLSTM2DCell expects 3 input Tensors (inputs, h, c), got ${e.length}.`);const n=t.training||!1,r=e[0],s=e[1],a=e[2];0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=dk({ones:()=>td(r),rate:this.dropout,training:n,count:4,dropoutFunc:this.dropoutFunc}));const i=this.dropoutMask,o=(e,t,n)=>t&&t[n]?$o(t[n],e):e;let u=o(r,i,0),l=o(r,i,1),c=o(r,i,2),h=o(r,i,3);0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=dk({ones:()=>td(s),rate:this.recurrentDropout,training:n,count:4,dropoutFunc:this.dropoutFunc}));const d=this.recurrentDropoutMask;let p=o(s,d,0),f=o(s,d,1),m=o(s,d,2),g=o(s,d,3);const[y,b,x,w]=Yd(this.kernel.read(),4,3),[v,k,N,I]=this.useBias?Yd(this.bias.read(),4):[null,null,null,null];u=this.inputConv(u,y,v,this.padding),l=this.inputConv(l,b,k,this.padding),c=this.inputConv(c,x,N,this.padding),h=this.inputConv(h,w,I,this.padding);const[S,T,E,C]=Yd(this.recurrentKernel.read(),4,3);p=this.recurrentConv(p,S),f=this.recurrentConv(f,T),m=this.recurrentConv(m,E),g=this.recurrentConv(g,C);const $=this.recurrentActivation.apply(To(u,p)),A=this.recurrentActivation.apply(To(l,f)),R=To($o(A,a),$o($,this.activation.apply(To(c,m)))),_=$o(this.recurrentActivation.apply(To(h,g)),this.activation.apply(R));return[_,_,R]})}getConfig(){const e=super.getConfig(),{units:t}=e,n=function(e,t){var n={};for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&t.indexOf(r)<0&&(n[r]=e[r]);if(null!=e&&"function"==typeof Object.getOwnPropertySymbols){var s=0;for(r=Object.getOwnPropertySymbols(e);s<r.length;s++)t.indexOf(r[s])<0&&Object.prototype.propertyIsEnumerable.call(e,r[s])&&(n[r[s]]=e[r[s]])}return n}(e,["units"]),r={filters:this.filters,kernelSize:this.kernelSize,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,strides:this.strides};return Object.assign(Object.assign({},n),r)}inputConv(e,t,n,r){const s=Ec(e,t,this.strides,r||"valid","channelsFirst"===this.dataFormat?"NCHW":"NHWC",this.dilationRate);return n?xb(s,n,this.dataFormat):s}recurrentConv(e,t){return Ec(e,t,1,"same","channelsFirst"===this.dataFormat?"NCHW":"NHWC")}}fk.className="ConvLSTM2DCell",Ho(fk);class mk extends pk{constructor(e){const t=new fk(e);super(Object.assign(Object.assign({},e),{cell:t}))}static fromConfig(e,t){return new e(t)}}mk.className="ConvLSTM2D",Ho(mk);class gk extends sx{constructor(e){super(e),this.rate=Math.max(Math.min(e.rate,1),0),this.noiseShape=e.noiseShape,this.seed=e.seed,this.supportsMasking=!0}getNoiseShape(e){if(null==this.noiseShape)return this.noiseShape;const t=e.shape,n=[];for(let e=0;e<this.noiseShape.length;++e)n.push(null==this.noiseShape[e]?t[e]:this.noiseShape[e]);return n}call(e,t){return ui(()=>{this.invokeCallHook(e,t);const n=jb(e);if(0<this.rate&&this.rate<1){const e=null!=t.training&&t.training,r=this.getNoiseShape(n);return vb(()=>wb(n,this.rate,r,this.seed),()=>n,e)}return e})}getConfig(){const e={rate:this.rate,noiseShape:this.noiseShape,seed:this.seed},t=super.getConfig();return Object.assign(e,t),e}dispose(){return super.dispose()}}gk.className="Dropout",Ho(gk);class yk extends gk{constructor(e){super(e),this.inputSpec=[{ndim:3}]}getNoiseShape(e){const t=e.shape;return[t[0],1,t[2]]}}yk.className="SpatialDropout1D",Ho(yk);class bk extends sx{constructor(e){if(super(e),this.activation=null,this.useBias=!0,this.kernel=null,this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",null==e.batchInputShape&&null==e.inputShape&&null!=e.inputDim){let t=null;null!=e.batchSize&&(t=e.batchSize),this.batchInputShape=[t,e.inputDim]}this.units=e.units,Ry(this.units,"units"),this.activation=Nv(e.activation),null!=e.useBias&&(this.useBias=e.useBias),this.kernelInitializer=Wb(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.biasInitializer=Wb(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelConstraint=Ix(e.kernelConstraint),this.biasConstraint=Ix(e.biasConstraint),this.kernelRegularizer=Av(e.kernelRegularizer),this.biasRegularizer=Av(e.biasRegularizer),this.activityRegularizer=Av(e.activityRegularizer),this.supportsMasking=!0,this.inputSpec=[{minNDim:2}]}build(e){const t=(e=Kb(e))[e.length-1];null==this.kernel&&(this.kernel=this.addWeight("kernel",[t,this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint))),this.inputSpec=[{minNDim:2,axes:{[-1]:t}}],this.built=!0}computeOutputShape(e){const t=(e=Kb(e)).slice();return t[t.length-1]=this.units,t}call(e,t){return ui(()=>{this.invokeCallHook(e,t);const n=jb(e),r=Dy(this.activation.getClassName());let s;return null!=r?s=mb(n,this.kernel.read(),r,this.bias?this.bias.read():null):(s=mb(n,this.kernel.read()),null!=this.bias&&(s=xb(s,this.bias.read())),null!=this.activation&&(s=this.activation.apply(s))),s})}getConfig(){const e={units:this.units,activation:vv(this.activation),useBias:this.useBias,kernelInitializer:Ub(this.kernelInitializer),biasInitializer:Ub(this.biasInitializer),kernelRegularizer:Cv(this.kernelRegularizer),biasRegularizer:Cv(this.biasRegularizer),activityRegularizer:Cv(this.activityRegularizer),kernelConstraint:kx(this.kernelConstraint),biasConstraint:kx(this.biasConstraint)},t=super.getConfig();return Object.assign(e,t),e}}bk.className="Dense",Ho(bk);class xk extends sx{constructor(e){super(e=e||{}),this.inputSpec=[{minNDim:3}],this.dataFormat=e.dataFormat}computeOutputShape(e){e=Kb(e);for(const t of e.slice(1))if(null==t)throw new hy(`The shape of the input to "Flatten" is not fully defined (got ${e.slice(1)}). Make sure to pass a complete "input_shape" or "batch_input_shape" argument to the first layer in your model.`);return[e[0],eb(e,1)]}call(e,t){return ui(()=>{this.invokeCallHook(e,t);let n=jb(e);if("channelsFirst"===this.dataFormat&&n.rank>1){const e=[0];for(let t=2;t<n.rank;++t)e.push(t);e.push(1),n=Mu(n,e)}return function(e){if(e.rank<=1)throw new hy(`batchFlatten requires a minimum rank of 2. Got rank: ${e.rank}.`);const t=[e.shape[0],eb(e.shape,1)];return sc(e,t)}(n)})}getConfig(){const e={};null!=this.dataFormat&&(e.dataFormat=this.dataFormat);const t=super.getConfig();return Object.assign(e,t),e}}xk.className="Flatten",Ho(xk);class wk extends sx{constructor(e){super(e),this.supportsMasking=!0,this.activation=Nv(e.activation)}call(e,t){return ui(()=>{this.invokeCallHook(e,t);const n=jb(e);return this.activation.apply(n)})}getConfig(){const e={activation:vv(this.activation)},t=super.getConfig();return Object.assign(e,t),e}}wk.className="Activation",Ho(wk);class vk extends sx{constructor(e){super(e),this.n=e.n,this.inputSpec=[{ndim:2}]}computeOutputShape(e){return[e[0],this.n,e[1]]}call(e,t){return ui(()=>{return e=jb(e),t=e,n=this.n,ui(()=>{if(2!==t.shape.length)throw new hy(`repeat() expects a rank-2 tensor, but received a rank-${t.shape.length} tensor.`);return pb(ob(t,1),[1,n,1])});var t,n})}getConfig(){const e={n:this.n},t=super.getConfig();return Object.assign(e,t),e}}vk.className="RepeatVector",Ho(vk);class kk extends sx{constructor(e){super(e),this.targetShape=e.targetShape;for(let e=0;e<this.targetShape.length;++e)this.isUnknown(this.targetShape[e])&&(this.targetShape[e]=null)}isUnknown(e){return e<0||null==e}fixUnknownDimension(e,t){const n="Total size of new array must be unchanged.",r=t.slice();let s=1,a=null;for(let e=0;e<r.length;++e){const t=r[e];if(this.isUnknown(t)){if(null!==a)throw new hy("Can only specifiy one unknown dimension.");a=e}else s*=t}const i=eb(e);if(null!==a){if(0===s||i%s!==0)throw new hy(n);r[a]=i/s}else if(i!==s)throw new hy(n);return r}computeOutputShape(e){let t=!1;for(let n=0;n<e.length;++n)if(this.isUnknown(e[n])){t=!0;break}return t?e.slice(0,1).concat(this.targetShape):e.slice(0,1).concat(this.fixUnknownDimension(e.slice(1),this.targetShape))}call(e,t){return ui(()=>{this.invokeCallHook(e,t);const n=jb(e),r=n.shape,s=r.slice(0,1).concat(this.fixUnknownDimension(r.slice(1),this.targetShape));return sc(n,s)})}getConfig(){const e={targetShape:this.targetShape},t=super.getConfig();return Object.assign(e,t),e}}kk.className="Reshape",Ho(kk);class Nk extends sx{constructor(e){if(super(e),null==e.dims)throw new Error("Required configuration field `dims` is missing during Permute constructor call.");if(!Array.isArray(e.dims))throw new Error(`Permute constructor requires \`dims\` to be an Array, but received ${e.dims} instead.`);const t=rb(1,e.dims.length+1);if(!de(e.dims.slice().sort(),t))throw new Error("Invalid permutation `dims`: "+JSON.stringify(e.dims)+" `dims` must contain consecutive integers starting from 1.");this.dims=e.dims,this.dimsIncludingBatch=[0].concat(this.dims),this.inputSpec=[new Jb({ndim:this.dims.length+1})]}computeOutputShape(e){const t=(e=Kb(e)).slice();return this.dims.forEach((n,r)=>{t[r+1]=e[n]}),t}call(e,t){return Mu(jb(e),this.dimsIncludingBatch)}getConfig(){const e={dims:this.dims},t=super.getConfig();return Object.assign(e,t),e}}Nk.className="Permute",Ho(Nk);class Ik extends sx{constructor(e){super(null==e?{}:e),this.supportsMasking=!0,this.maskValue=null!=e?null==e.maskValue?0:e.maskValue:0}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={maskValue:this.maskValue};return Object.assign(t,e),t}computeMask(e,t){const n=jb(e);return Ml(ed(n,this.maskValue),-1)}call(e,t){return ui(()=>{this.invokeCallHook(e,t);const n=jb(e),r=Ml(ed(n,this.maskValue),-1,!0);return $o(n,No(r,n.dtype))})}}Ik.className="Masking",Ho(Ik);class Sk extends sx{constructor(e){if(super(e),this.embeddings=null,this.DEFAULT_EMBEDDINGS_INITIALIZER="randomUniform",null==e.batchInputShape&&null==e.inputShape){let t=null;null!=e.batchSize&&(t=e.batchSize),null==e.inputLength?this.batchInputShape=[t,null]:this.batchInputShape=[t].concat(xy(e.inputLength))}this.inputDim=e.inputDim,Ry(this.inputDim,"inputDim"),this.outputDim=e.outputDim,Ry(this.outputDim,"outputDim"),this.embeddingsInitializer=Wb(e.embeddingsInitializer||this.DEFAULT_EMBEDDINGS_INITIALIZER),this.embeddingsRegularizer=Av(e.embeddingsRegularizer),this.activityRegularizer=Av(e.activityRegularizer),this.embeddingsConstraint=Ix(e.embeddingsConstraint),this.maskZero=e.maskZero,this.supportsMasking=e.maskZero,this.inputLength=e.inputLength}build(e){this.embeddings=this.addWeight("embeddings",[this.inputDim,this.outputDim],this.dtype,this.embeddingsInitializer,this.embeddingsRegularizer,!0,this.embeddingsConstraint),this.built=!0}warnOnIncompatibleInputShape(e){}computeMask(e,t){return ui(()=>this.maskZero?(e=jb(e),ed(e,_o(e))):null)}computeOutputShape(e){if(e=Kb(e),null==this.inputLength)return[...e,this.outputDim];const t=xy(this.inputLength);if(t.length!==e.length-1)throw new hy(`"inputLength" is ${this.inputLength}, but received input shape has shape ${e}`);{let n=0;for(let r=0;r<t.length;++r){const s=t[r],a=e[r+1];if(null!=s&&null!=a&&s!==a)throw new hy(`"inputLength" is ${this.inputLength}, but received input shape has shape ${e}`);null==s&&(t[n]=a),n++}}return[e[0],...t,this.outputDim]}call(e,t){return ui(()=>{this.invokeCallHook(e,t);let n=jb(e);"int32"!==n.dtype&&(n=ib(n,"int32"));const r=gb(this.embeddings.read(),sc(n,[n.size]));return sc(r,Kb(this.computeOutputShape(n.shape)))})}getConfig(){const e={inputDim:this.inputDim,outputDim:this.outputDim,embeddingsInitializer:Ub(this.embeddingsInitializer),embeddingsRegularizer:Cv(this.embeddingsRegularizer),activityRegularizer:Cv(this.activityRegularizer),embeddingsConstraint:kx(this.embeddingsConstraint),maskZero:this.maskZero,inputLength:this.inputLength},t=super.getConfig();return Object.assign(e,t),e}}Sk.className="Embedding",Ho(Sk);class Tk extends sx{constructor(e){super(e||{}),this.supportsMasking=!0}mergeFunction(e){throw new dy}computeElementwiseOpOutputShape(e,t){if(null==e||null==t)return null;if(e.length<t.length)return this.computeElementwiseOpOutputShape(t,e);if(0===t.length)return e;const n=e.slice(0,e.length-t.length);for(let r=0;r<t.length;++r){const s=e[e.length-t.length+r],a=t[r];if(null==s||null==a||s<0||a<0)n.push(null);else if(1===s)n.push(a);else if(1===a)n.push(s);else{if(s!==a)throw new hy("Operands could not be broadcast together with shapes "+JSON.stringify(e)+" "+JSON.stringify(t));n.push(s)}}return n}build(e){if(Array.isArray(e)&&!Array.isArray(e[0])&&(e=[Kb(e)]),e.length<2)throw new hy(`A merge layer should be called on an Array of at least 2 inputs. Got ${e.length} input(s).`);let t=[];for(const n of e)null!=n&&null!==n[0]&&t.push(n[0]);if(t=Ey(t),t.length>1)throw new hy(`Can not merge tensors with different batch sizes. Got tensors with shapes: ${JSON.stringify(e)}.`);let n=null==e[0]?null:e[0].slice(1);for(let t=1;t<e.length;++t){const r=null==e[t]?null:e[t].slice(1);n=this.computeElementwiseOpOutputShape(n,r)}const r=e.map(e=>e.length);-1===e.indexOf(null)&&1===Ey(r).length?this.reshapeRequired=!1:this.reshapeRequired=!0}call(e,t){return ui(()=>{if(this.reshapeRequired){const t=[],n=e.map(e=>e.rank);if(-1===n.indexOf(null)){const r=nb(n);for(let n of e){const e=n.rank;for(let t=0;t<r-e;++t)n=ob(n,1);t.push(n)}return this.mergeFunction(t)}{let n=!1;for(const r of e){const e=r.rank;if(null==e){const e=r.shape,s=e[0],a=e.slice(1).concat([s]);let i=sc(r,[s].concat(eb(e.slice(1))));i=Mu(i,[1,0]),i=sc(i,a),t.push(i),n=!0}else if(e>1){const s=rb(1,e).concat([0]);t.push(Mu(r,s)),n=!0}else t.push(r)}let r=this.mergeFunction(t);const s=r.rank;if(n)if(null==s){const e=r.shape,t=e[e.length-1],n=[t].concat(e.slice(0,e.length-1));r=sc(Mu(sc(r,[-1,t]),[1,0]),n)}else if(s>1){const e=[s-1].concat(rb(0,s-1));r=Mu(r,e)}return r}}return this.mergeFunction(e)})}computeOutputShape(e){let t;t=null==e[0]?null:e[0].slice(1);for(let n=1;n<e.length;++n){const r=null==e[n]?null:e[n].slice(1);t=this.computeElementwiseOpOutputShape(t,r)}let n=[];for(const t of e)null!=t&&null!==t[0]&&n.push(t[0]);return n=Ey(n),t=1===n.length?n.concat(t):[null].concat(t),t}computeMask(e,t){return ui(()=>{if(null==t)return null;if(!Array.isArray(t))throw new hy("`mask` should be an Array");if(!Array.isArray(e))throw new hy("`inputs` should be an Array");if(t.length!==e.length)throw new hy(`The Array 'inputs' and 'mask' are expected to have the same length, but have different lengths (${e.length} vs ${t.length})`);if(t.every(e=>null==e))return null;let n=(t=t.map(e=>null==e?e:dh(e,0)))[0];for(let e=1;e<t.length-1;++e)n=Fh(n,t[e]);return n})}}class Ek extends Tk{constructor(e){super(e)}mergeFunction(e){return ui(()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=To(t,e[n]);return t})}}Ek.className="Add",Ho(Ek);class Ck extends Tk{constructor(e){super(e)}mergeFunction(e){return ui(()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=$o(t,e[n]);return t})}}Ck.className="Multiply",Ho(Ck);class $k extends Tk{constructor(e){super(e)}mergeFunction(e){return ui(()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=To(t,e[n]);return $o(1/e.length,t)})}}$k.className="Average",Ho($k);class Ak extends Tk{constructor(e){super(e)}mergeFunction(e){return ui(()=>{let t=e[0];for(let n=1;n<e.length;++n)t=su(t,e[n]);return t})}}Ak.className="Maximum",Ho(Ak);class Rk extends Tk{constructor(e){super(e)}mergeFunction(e){return ui(()=>{let t=e[0];for(let n=1;n<e.length;++n)t=qh(t,e[n]);return t})}}Rk.className="Minimum",Ho(Rk);class _k extends Tk{constructor(e){super(e),this.DEFAULT_AXIS=-1,null==e&&(e={}),this.axis=null==e.axis?this.DEFAULT_AXIS:e.axis,this.supportsMasking=!0,this.reshapeRequired=!1}build(e){if(!Array.isArray(e)||!Array.isArray(e[0])||1===e.length)throw new hy("A `Concatenate` layer should be called on a list of at least 2 inputs");let t=!0;for(const n of e)if(null!=n){t=!1;break}if(t)return;const n=[];for(let t=0;t<e.length;++t){const r=e[t].slice();r.splice(this.axis,1);let s=!1;for(const e of n)if(de(e,r)){s=!0;break}s||n.push(r)}if(n.length>1)throw new hy("A `Concatenate` layer requires inputs with matching shapes except for the concat axis. Got input shapes: "+JSON.stringify(e))}mergeFunction(e){return ui(()=>hb(e,this.axis))}computeOutputShape(e){if(!Array.isArray(e)||!Array.isArray(e[0]))throw new hy("A `Concatenate` layer should be called on a list of inputs.");const t=e,n=t[0].slice(),r=this.axis<0?n.length+this.axis:this.axis;for(const e of t.slice(1)){if(null==n[r]||null==e[r]){n[r]=null;break}n[r]+=e[r]}return n}computeMask(e,t){if(null==t)return null;if(!Array.isArray(t))throw new hy("`mask` should be an array for Concatenate");if(!Array.isArray(e))throw new hy("`inputs` should be an array for Concatenate");if(t.length!==e.length)throw new hy(`Mismatch in the length of mask (${t.length}) and the legnth of inputs (${e.length})`);return ui(()=>{let n=!0;if(t.forEach(e=>{null==e||(n=!1)}),n)return null;const r=[];for(let n=0;n<e.length;++n)null==t[n]?r.push(No(td(e[n]),"bool")):t[n].rank<e[n].rank?r.push(dh(t[n],-1)):r.push(t[n]);const s=oc(r,this.axis);return Fl(s,-1,!1)})}getConfig(){const e={axis:this.axis},t=super.getConfig();return Object.assign(e,t),e}}function Dk(e,t){for(;e<0;)e+=t;return e}_k.className="Concatenate",Ho(_k);class Fk extends Tk{constructor(e){super(e),this.axes=e.axes,this.normalize=null!=e.normalize&&e.normalize,this.supportsMasking=!0,this.reshapeRequired=!1}build(e){ie(Array.isArray(e)&&2===e.length&&Array.isArray(e[0])&&Array.isArray(e[1]),()=>"A `Dot` layer should be called on a list of exactly 2 inputs.");const t=e[0],n=e[1];if(t.length>3||n.length>3)throw new dy("Dot layer does not support tensors of 4D or higher rank yet.");const r=this.interpretAxes(t,n);if(t[r[0]]!==n[r[1]])throw new hy(`Dimension incompatibility: ${t[r[0]]} !== ${n[r[1]]}`)}mergeFunction(e){if(2!==e.length)throw new hy(`A \`Dot\` layer must be called on exactly 2 inputs, but received ${e.length} input(s).`);let t,n=e[0],r=e[1];return t=Array.isArray(this.axes)?this.axes.map((t,n)=>Dk(t,e[n].shape.length)):[Dk(this.axes,n.shape.length),Dk(this.axes,r.shape.length)],this.normalize&&(n=nw(n,t[0]),r=nw(r,t[1])),function(e,t,n){if(e.shape.length>3||t.shape.length>3)throw new dy("batchDot is not implemented for tensors of 4D or higher rank yet");if(ie(e.shape.length>=2,()=>`batchDot requires the rank of x to be >= 2, but got ${e.shape.length}`),ie(e.shape.length>=2,()=>`batchDot requires the rank of y to be >= 2, but got ${t.shape.length}`),"number"==typeof n&&(n=[n,n]),"complex64"===e.dtype||"complex64"===t.dtype)throw new dy("batchDot is not implemented for complex64-type Tensors yet.");const r=e.shape.length,s=t.shape.length;null==n&&(n=[r-1,s-2]);const a=n;return ui(()=>{let n,i;if(r>s){n=r-s;const e=[];for(let t=0;t<n;++t)e.push(1);t=sc(t,t.shape.concat(e))}else if(s>r){n=s-r;const t=[];for(let e=0;e<n;++e)t.push(1);e=sc(e,e.shape.concat(t))}else n=0;if(2===e.shape.length&&2===t.shape.length)i=a[0]===a[1]?oh($o(e,t),a[0]):oh($o(Mu(e,[1,0]),t),a[1]);else{const n=a[0]!==e.shape.length-1,r=a[1]===t.shape.length-1;i=Au(e,t,n,r)}if(n>0){let e;e=r>s?r+s-3:r-1;const t=[];for(let r=e;r<e+n;++r)t.push(r);i=Jd(i,t)}return 1===i.shape.length&&(i=dh(i,1)),i})}(n,r,t)}interpretAxes(e,t){let n;return n=Array.isArray(this.axes)?this.axes:[Dk(this.axes,e.length),Dk(this.axes,t.length)],n}computeOutputShape(e){ie(Array.isArray(e)&&2===e.length&&Array.isArray(e[0])&&Array.isArray(e[1]),()=>"A `Dot` layer should be called on a list of exactly 2 inputs.");const t=e[0].slice(),n=e[1].slice();if(t.length>3||n.length>3)throw new dy("Dot layer does not support tensors of 4D or higher rank yet.");const r=this.interpretAxes(t,n);t.splice(r[0],1),n.splice(r[1],1),n.splice(0,1);const s=t.concat(n);return 1===s.length&&s.push(1),s}computeMask(e,t){return null}getConfig(){const e={axes:this.axes,normalize:this.normalize},t=super.getConfig();return Object.assign(e,t),e}}Fk.className="Dot",Ho(Fk);class Mk extends sx{constructor(e){super(e),this.supportsMasking=!0,this.stddev=e.stddev}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={stddev:this.stddev};return Object.assign(t,e),t}call(e,t){return ui(()=>{this.invokeCallHook(e,t);const n=jb(e);return vb(()=>To(fb(n.shape,0,this.stddev),n),()=>n,t.training||!1)})}}Mk.className="GaussianNoise",Ho(Mk);class Ok extends sx{constructor(e){super(e),this.supportsMasking=!0,this.rate=e.rate}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={rate:this.rate};return Object.assign(t,e),t}call(e,t){return ui(()=>{this.invokeCallHook(e,t);const n=jb(e);return this.rate>0&&this.rate<1?vb(()=>{const e=Math.sqrt(this.rate/(1-this.rate));return $o(n,fb(n.shape,1,e))},()=>n,t.training||!1):n})}}Ok.className="GaussianDropout",Ho(Ok);class Lk extends sx{constructor(e){super(e),this.supportsMasking=!0,this.rate=e.rate,this.noiseShape=e.noiseShape}_getNoiseShape(e){return this.noiseShape||jb(e).shape}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={rate:this.rate};return Object.assign(t,e),t}call(e,t){return ui(()=>{if(this.rate<1&&this.rate>0){const n=this._getNoiseShape(e),r=()=>{const t=jb(e),r=-1.7580993408473766;let s=xh(Nd(n),this.rate);s=ib(s,"float32");const a=((1-this.rate)*(1+this.rate*r**2))**-.5,i=-a*r*this.rate,o=To($o(t,s),$o(To(s,-1),r));return To($o(o,a),i)};return vb(r,()=>jb(e),t.training||!1)}return e})}}function zk(e,t,n,r,s,a=.001){let i;if(2===e.rank)i=fc(e,t,n,r,s,a);else if(3===e.rank)i=mc(e,t,n,r,s,a);else{if(4!==e.rank)throw new dy(`batchNormalization is not implemented for array of rank ${e.rank} yet`);i=gc(e,t,n,r,s,a)}return i}Lk.className="AlphaDropout",Ho(Lk);class Pk extends sx{constructor(e){null==e&&(e={}),super(e),this.supportsMasking=!0,this.axis=null==e.axis?-1:e.axis,this.momentum=null==e.momentum?.99:e.momentum,this.epsilon=null==e.epsilon?.001:e.epsilon,this.center=null==e.center||e.center,this.scale=null==e.scale||e.scale,this.betaInitializer=Wb(e.betaInitializer||"zeros"),this.gammaInitializer=Wb(e.gammaInitializer||"ones"),this.movingMeanInitializer=Wb(e.movingMeanInitializer||"zeros"),this.movingVarianceInitializer=Wb(e.movingVarianceInitializer||"ones"),this.betaConstraint=Ix(e.betaConstraint),this.gammaConstraint=Ix(e.gammaConstraint),this.betaRegularizer=Av(e.betaRegularizer),this.gammaRegularizer=Av(e.gammaRegularizer)}build(e){e=Kb(e);const t=this.axis>=0?this.axis:this.axis+e.length,n=e[t];if(null==n)throw new hy(`Axis ${t} of input tensor should have a defined dimension but the layer received an input with shape ${JSON.stringify(e)}.`);this.inputSpec=[new Jb({ndim:e.length,axes:{[t]:n}})];const r=[n];this.scale&&(this.gamma=this.addWeight("gamma",r,null,this.gammaInitializer,this.gammaRegularizer,!0,this.gammaConstraint)),this.center&&(this.beta=this.addWeight("beta",r,null,this.betaInitializer,this.betaRegularizer,!0,this.betaConstraint)),this.movingMean=this.addWeight("moving_mean",r,null,this.movingMeanInitializer,null,!1),this.movingVariance=this.addWeight("moving_variance",r,null,this.movingVarianceInitializer,null,!1),this.built=!0}call(e,t){return ui(()=>{const n=null!=t.training&&t.training,r=jb(e),s=r.shape,a=s.length,i=rb(0,a),o=this.axis>=0?this.axis:this.axis+a;i.splice(o,1);const u=my(1,a);u[o]=s[o];const l=i.slice();l.sort();const c=!de(l,rb(0,a).slice(0,a-1));if(!n)return(()=>{if(c){const e=sc(this.movingMean.read(),u),t=sc(this.movingVariance.read(),u),n=this.center?sc(this.beta.read(),u):null,s=this.scale?sc(this.gamma.read(),u):null;return zk(r,e,t,n,s,this.epsilon)}return zk(r,this.movingMean.read(),this.movingVariance.read(),null==this.beta?null:this.beta.read(),null==this.gamma?null:this.gamma.read(),this.epsilon)})();const[h,d,p]=function(e,t,n,r,s=.001){return de(r.slice().sort(),rb(0,e.rank-1))?function(e,t,n,r,s=.001){return ui(()=>{const a=Zh(e,r),i=a.mean,o=a.variance;return[zk(e,i,o,n,t,s),i,o]})}(e,t,n,r,s):function(e,t,n,r,s=.001){return ui(()=>{const a=Zh(e,r),i=a.mean,o=a.variance,u=[];for(const t of rb(0,e.rank))-1!==r.indexOf(t)?u.push(1):u.push(e.shape[t]);const l=sc(i,u),c=sc(o,u),h=null==t?null:sc(t,u),d=null==n?null:sc(n,u);return[zk(e,l,c,d,h,s),i,o]})}(e,t,n,r,s)}(r,this.gamma.read(),this.beta.read(),i,this.epsilon),f=(e,t,n)=>{ui(()=>{const r=1-n,s=e.read(),a=$o(Qo(s,t),r);e.write(Qo(s,a))})};return(()=>{f(this.movingMean,d,this.momentum),f(this.movingVariance,p,this.momentum)})(),h})}getConfig(){const e={axis:this.axis,momentum:this.momentum,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:Ub(this.betaInitializer),gammaInitializer:Ub(this.gammaInitializer),movingMeanInitializer:Ub(this.movingMeanInitializer),movingVarianceInitializer:Ub(this.movingVarianceInitializer),betaRegularizer:Cv(this.betaRegularizer),gammaRegularizer:Cv(this.gammaRegularizer),betaConstraint:kx(this.betaConstraint),gammaConstraint:kx(this.gammaConstraint)},t=super.getConfig();return Object.assign(e,t),e}}Pk.className="BatchNormalization",Ho(Pk);class Bk extends sx{constructor(e){if(null==e&&(e={}),super(e),this.axis=null==e.axis?-1:e.axis,"number"==typeof this.axis){if(!Number.isInteger(this.axis))throw new Error(`Expected axis to be an integer, but received ${this.axis}`)}else{if(!Array.isArray(this.axis))throw new Error(`Expected axis to be an integer or an array of integers, but received ${JSON.stringify(this.axis)}`);for(const e of this.axis)if(!Number.isInteger(e))throw new Error(`Expected axis to be an array of integers, but received ${JSON.stringify(this.axis)}`)}this.epsilon=null==e.epsilon?.001:e.epsilon,this.center=null==e.center||e.center,this.scale=null==e.scale||e.scale,this.betaInitializer=Wb(e.betaInitializer||"zeros"),this.gammaInitializer=Wb(e.gammaInitializer||"ones"),this.betaRegularizer=Av(e.betaRegularizer),this.gammaRegularizer=Av(e.gammaRegularizer),this.supportsMasking=!0}build(e){const t=(e=Kb(e)).length;"number"==typeof this.axis&&(this.axis=[this.axis]);for(let e=0;e<this.axis.length;++e)this.axis[e]<0&&(this.axis[e]+=t);for(const e of this.axis)if(e<0||e>=t)throw new Error(`Invalid axis: ${e}`);if(this.axis.length!==Ey(this.axis).length)throw new Error(`Found duplicate axes in: ${this.axis}`);const n=this.axis.map(t=>e[t]),r=!0;this.scale?this.gamma=this.addWeight("gamma",n,"float32",this.gammaInitializer,this.gammaRegularizer,r):this.gamma=null,this.center?this.beta=this.addWeight("beta",n,"float32",this.betaInitializer,this.betaRegularizer,r):this.beta=null,this.built=!0}call(e,t){const n=jb(e),r=n.shape,s=r.length;return ui(()=>{let{mean:e,variance:t}=Zh(n,this.axis,!0);const a=my(1,s);for(const e of this.axis)a[e]=r[e];const i=e=>null!=e&&e.shape.length!==s?sc(e,a):e;let o=this.scale?i(this.gamma.read()):null,u=this.center?i(this.beta.read()):null;const l=[],c=[];for(let e=0;e<s;++e)-1!==this.axis.indexOf(e)?(l.push(r[e]),c.push(1)):(l.push(1),c.push(r[e]));return e=fh(e,l),t=fh(t,l),null!=o&&(o=fh(o,c)),null!=u&&(u=fh(u,c)),zk(n,e,t,u,o,this.epsilon)})}getConfig(){const e={axis:this.axis,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:Ub(this.betaInitializer),gammaInitializer:Ub(this.gammaInitializer),betaRegularizer:Cv(this.betaRegularizer),gammaRegularizer:Cv(this.gammaRegularizer)},t=super.getConfig();return Object.assign(e,t),e}}Bk.className="LayerNormalization",Ho(Bk);class Vk extends sx{constructor(e){if(null==e&&(e={}),super(e),this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,null==e.padding)this.padding=[[1,1],[1,1]];else if("number"==typeof e.padding)this.padding=[[e.padding,e.padding],[e.padding,e.padding]];else{if(e.padding=e.padding,2!==e.padding.length)throw new hy(`ZeroPadding2D expects padding to be a length-2 array, but received a length-${e.padding.length} array.`);let t,n;if("number"==typeof e.padding[0])t=[e.padding[0],e.padding[0]],n=[e.padding[1],e.padding[1]];else{if(e.padding=e.padding,2!==e.padding[0].length)throw new hy(`ZeroPadding2D expects height padding to be a length-2 array, but received a length-${e.padding[0].length} array.`);if(t=e.padding[0],2!==e.padding[1].length)throw new hy(`ZeroPadding2D expects width padding to be a length-2 array, but received a length-${e.padding[1].length} array.`);n=e.padding[1]}this.padding=[t,n]}this.inputSpec=[new Jb({ndim:4})]}computeOutputShape(e){let t,n;return e=Kb(e),"channelsFirst"===this.dataFormat?(t=null!=e[2]&&e[2]>=0?e[2]+this.padding[0][0]+this.padding[0][1]:null,n=null!=e[3]&&e[3]>=0?e[3]+this.padding[1][0]+this.padding[1][1]:null,[e[0],e[1],t,n]):(t=null!=e[1]&&e[1]>=0?e[1]+this.padding[0][0]+this.padding[0][1]:null,n=null!=e[2]&&e[2]>=0?e[2]+this.padding[1][0]+this.padding[1][1]:null,[e[0],t,n,e[3]])}call(e,t){return ui(()=>{return t=jb(e),n=this.padding,r=this.dataFormat,ui(()=>{if(4!==t.rank)throw new hy(`temporalPadding expects input tensor to be 4-D, but received a ${t.rank}-D tensor.`);if(null==n&&(n=[[1,1],[1,1]]),2!==n.length||2!==n[0].length||2!==n[1].length)throw new hy("spatial2dPadding expects `padding` to be an Array of two Arrays, each of which is an Array of two integers.");if(null==r&&(r="channelsLast"),"channelsLast"!==r&&"channelsFirst"!==r)throw new hy(`Unknown data format: ${r}. Supported data formats are 'channelsLast' and 'channelsFirst.`);let e;return e="channelsFirst"===r?[[0,0],[0,0],n[0],n[1]]:[[0,0],n[0],n[1],[0,0]],rd(t,e)});var t,n,r})}getConfig(){const e={padding:this.padding,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}function Uk(e,t,n,r,s,a){return ui(()=>{let i;Gy(s),jy(a),Hy(r),null==n&&(n=[1,1]),null==r&&(r="valid"),null==s&&(s="channelsLast"),null==a&&(a="max"),e=Bv(e,s);const o="same"===r?"same":"valid";return i="max"===a?Vh(e,t,n,o):ac(e,t,n,o),"channelsFirst"===s&&(i=Mu(i,[0,3,1,2])),i})}function Wk(e,t,n,r,s,a){return ui(()=>{let i;Gy(s),jy(a),Hy(r),null==n&&(n=[1,1,1]),null==r&&(r="valid"),null==s&&(s="channelsLast"),null==a&&(a="max"),e=Vv(e,s);const o="same"===r?"same":"valid";return i="max"===a?Uh(e,t,n,o):ic(e,t,n,o),"channelsFirst"===s&&(i=Mu(i,[0,4,1,2,3])),i})}Vk.className="ZeroPadding2D",Ho(Vk);class Gk extends sx{constructor(e){if(null==e.poolSize&&(e.poolSize=2),super(e),"number"==typeof e.poolSize)this.poolSize=[e.poolSize];else{if(!Array.isArray(e.poolSize)||1!==e.poolSize.length||"number"!=typeof e.poolSize[0])throw new hy(`poolSize for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(e.poolSize)}`);this.poolSize=e.poolSize}if(Ry(this.poolSize,"poolSize"),null==e.strides)this.strides=this.poolSize;else if("number"==typeof e.strides)this.strides=[e.strides];else{if(!Array.isArray(e.strides)||1!==e.strides.length||"number"!=typeof e.strides[0])throw new hy(`strides for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(e.strides)}`);this.strides=e.strides}Ry(this.strides,"strides"),this.padding=null==e.padding?"valid":e.padding,Hy(this.padding),this.inputSpec=[new Jb({ndim:3})]}computeOutputShape(e){const t=zv((e=Kb(e))[1],this.poolSize[0],this.padding,this.strides[0]);return[e[0],t,e[2]]}call(e,t){return ui(()=>{this.invokeCallHook(e,t),e=ob(jb(e),2);const n=this.poolingFunction(jb(e),[this.poolSize[0],1],[this.strides[0],1],this.padding,"channelsLast");return Jd(n,[2])})}getConfig(){const e={poolSize:this.poolSize,padding:this.padding,strides:this.strides},t=super.getConfig();return Object.assign(e,t),e}}class Hk extends Gk{constructor(e){super(e)}poolingFunction(e,t,n,r,s){return Gy(s),Hy(r),Uk(e,t,n,r,s,"max")}}Hk.className="MaxPooling1D",Ho(Hk);class jk extends Gk{constructor(e){super(e)}poolingFunction(e,t,n,r,s){return Gy(s),Hy(r),Uk(e,t,n,r,s,"avg")}}jk.className="AveragePooling1D",Ho(jk);class Kk extends sx{constructor(e){if(null==e.poolSize&&(e.poolSize=[2,2]),super(e),this.poolSize=Array.isArray(e.poolSize)?e.poolSize:[e.poolSize,e.poolSize],null==e.strides)this.strides=this.poolSize;else if(Array.isArray(e.strides)){if(2!==e.strides.length)throw new hy(`If the strides property of a 2D pooling layer is an Array, it is expected to have a length of 2, but received length ${e.strides.length}.`);this.strides=e.strides}else this.strides=[e.strides,e.strides];Ry(this.poolSize,"poolSize"),Ry(this.strides,"strides"),this.padding=null==e.padding?"valid":e.padding,this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,Gy(this.dataFormat),Hy(this.padding),this.inputSpec=[new Jb({ndim:4})]}computeOutputShape(e){e=Kb(e);let t="channelsFirst"===this.dataFormat?e[2]:e[1],n="channelsFirst"===this.dataFormat?e[3]:e[2];return t=zv(t,this.poolSize[0],this.padding,this.strides[0]),n=zv(n,this.poolSize[1],this.padding,this.strides[1]),"channelsFirst"===this.dataFormat?[e[0],e[1],t,n]:[e[0],t,n,e[3]]}call(e,t){return ui(()=>(this.invokeCallHook(e,t),this.poolingFunction(jb(e),this.poolSize,this.strides,this.padding,this.dataFormat)))}getConfig(){const e={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}class qk extends Kk{constructor(e){super(e)}poolingFunction(e,t,n,r,s){return Gy(s),Hy(r),Uk(e,t,n,r,s,"max")}}qk.className="MaxPooling2D",Ho(qk);class Xk extends Kk{constructor(e){super(e)}poolingFunction(e,t,n,r,s){return Gy(s),Hy(r),Uk(e,t,n,r,s,"avg")}}Xk.className="AveragePooling2D",Ho(Xk);class Yk extends sx{constructor(e){if(null==e.poolSize&&(e.poolSize=[2,2,2]),super(e),this.poolSize=Array.isArray(e.poolSize)?e.poolSize:[e.poolSize,e.poolSize,e.poolSize],null==e.strides)this.strides=this.poolSize;else if(Array.isArray(e.strides)){if(3!==e.strides.length)throw new hy(`If the strides property of a 3D pooling layer is an Array, it is expected to have a length of 3, but received length ${e.strides.length}.`);this.strides=e.strides}else this.strides=[e.strides,e.strides,e.strides];Ry(this.poolSize,"poolSize"),Ry(this.strides,"strides"),this.padding=null==e.padding?"valid":e.padding,this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,Gy(this.dataFormat),Hy(this.padding),this.inputSpec=[new Jb({ndim:5})]}computeOutputShape(e){e=Kb(e);let t="channelsFirst"===this.dataFormat?e[2]:e[1],n="channelsFirst"===this.dataFormat?e[3]:e[2],r="channelsFirst"===this.dataFormat?e[4]:e[3];return t=zv(t,this.poolSize[0],this.padding,this.strides[0]),n=zv(n,this.poolSize[1],this.padding,this.strides[1]),r=zv(r,this.poolSize[2],this.padding,this.strides[2]),"channelsFirst"===this.dataFormat?[e[0],e[1],t,n,r]:[e[0],t,n,r,e[4]]}call(e,t){return ui(()=>(this.invokeCallHook(e,t),this.poolingFunction(jb(e),this.poolSize,this.strides,this.padding,this.dataFormat)))}getConfig(){const e={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}class Zk extends Yk{constructor(e){super(e)}poolingFunction(e,t,n,r,s){return Gy(s),Hy(r),Wk(e,t,n,r,s,"max")}}Zk.className="MaxPooling3D",Ho(Zk);class Qk extends Yk{constructor(e){super(e)}poolingFunction(e,t,n,r,s){return Gy(s),Hy(r),Wk(e,t,n,r,s,"avg")}}Qk.className="AveragePooling3D",Ho(Qk);class Jk extends sx{constructor(e){super(e),this.inputSpec=[new Jb({ndim:3})]}computeOutputShape(e){return[e[0],e[2]]}call(e,t){throw new dy}}class eN extends Jk{constructor(e){super(e||{})}call(e,t){return ui(()=>{const t=jb(e);return Gh(t,1)})}}eN.className="GlobalAveragePooling1D",Ho(eN);class tN extends Jk{constructor(e){super(e||{})}call(e,t){return ui(()=>{const t=jb(e);return ah(t,1)})}}tN.className="GlobalMaxPooling1D",Ho(tN);class nN extends sx{constructor(e){super(e),this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,Gy(this.dataFormat),this.inputSpec=[new Jb({ndim:4})]}computeOutputShape(e){return"channelsLast"===this.dataFormat?[e[0],e[3]]:[e[0],e[1]]}call(e,t){throw new dy}getConfig(){const e={dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}class rN extends nN{call(e,t){return ui(()=>{const t=jb(e);return"channelsLast"===this.dataFormat?Gh(t,[1,2]):Gh(t,[2,3])})}}rN.className="GlobalAveragePooling2D",Ho(rN);class sN extends nN{call(e,t){return ui(()=>{const t=jb(e);return"channelsLast"===this.dataFormat?ah(t,[1,2]):ah(t,[2,3])})}}sN.className="GlobalMaxPooling2D",Ho(sN);class aN extends sx{constructor(e){super(e),this.layer=e.layer}build(e){this.built=!0}get trainable(){return null!=this.layer&&this.layer.trainable}set trainable(e){null!=this.layer&&(this.layer.trainable=e)}get trainableWeights(){return this.layer.trainableWeights}get nonTrainableWeights(){return this.layer.nonTrainableWeights}get updates(){return this.layer._updates}get losses(){return this.layer.losses}getWeights(){return this.layer.getWeights()}setWeights(e){this.layer.setWeights(e)}getConfig(){const e={layer:{className:this.layer.getClassName(),config:this.layer.getConfig()}},t=super.getConfig();return Object.assign(e,t),e}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),null!=this.layer&&this.layer.setFastWeightInitDuringBuild(e)}static fromConfig(e,t,n={}){const r=tw(t.layer,n);delete t.layer;const s={layer:r};return Object.assign(s,t),new e(s)}}class iN extends aN{constructor(e){super(e),this.supportsMasking=!0}build(e){if((e=Kb(e)).length<3)throw new hy(`TimeDistributed layer expects an input shape >= 3D, but received input shape ${JSON.stringify(e)}`);this.inputSpec=[{shape:e}];const t=[e[0]].concat(e.slice(2));this.layer.built||(this.layer.build(t),this.layer.built=!0),super.build(e)}computeOutputShape(e){const t=[(e=Kb(e))[0]].concat(e.slice(2)),n=this.layer.computeOutputShape(t),r=e[1];return[n[0],r].concat(n.slice(1))}call(e,t){return ui(()=>nk((e,n)=>[jb(this.layer.call(e,t)),[]],e=jb(e),[],!1,null,null,!1,!0)[1])}}iN.className="TimeDistributed",Ho(iN);class oN extends aN{constructor(e){super(e);const t=e.layer.getConfig(),n={};n.className=e.layer.getClassName(),n.config=t,this.forwardLayer=tw(n),t.goBackwards=!0!==t.goBackwards;const r={};var s;if(r.className=e.layer.getClassName(),r.config=t,this.backwardLayer=tw(r),this.forwardLayer.name="forward_"+this.forwardLayer.name,this.backwardLayer.name="backward_"+this.backwardLayer.name,this.mergeMode=void 0===e.mergeMode?"concat":e.mergeMode,s=this.mergeMode,$y(Uy,"BidirectionalMergeMode",s),e.weights)throw new dy("weights support is not implemented for Bidirectional layer yet.");this._stateful=e.layer.stateful,this.returnSequences=e.layer.returnSequences,this.returnState=e.layer.returnState,this.supportsMasking=!0,this._trainable=!0,this.inputSpec=e.layer.inputSpec,this.numConstants=null}get trainable(){return this._trainable}set trainable(e){this._trainable=e,null!=this.forwardLayer&&(this.forwardLayer.trainable=e),null!=this.backwardLayer&&(this.backwardLayer.trainable=e)}getWeights(){return this.forwardLayer.getWeights().concat(this.backwardLayer.getWeights())}setWeights(e){const t=e.length,n=Math.floor(t/2);this.forwardLayer.setWeights(e.slice(0,n)),this.backwardLayer.setWeights(e.slice(n))}computeOutputShape(e){let t,n,r,s=this.forwardLayer.computeOutputShape(e);return Array.isArray(s)&&Array.isArray(s[0])||(s=[s]),this.returnState?(r=s.slice(1),t=s[0]):t=s[0],"concat"===this.mergeMode?(t[t.length-1]*=2,n=[t]):n=null==this.mergeMode?[t,t.slice()]:[t],this.returnState?null==this.mergeMode?n.concat(r).concat(r.slice()):[t].concat(r).concat(r.slice()):by(n)}apply(e,t){let n=null==t?null:t.initialState,r=null==t?null:t.constants;null==t&&(t={});const s=tk(e,n,r,this.numConstants);if(e=s.inputs,n=s.initialState,r=s.constants,Array.isArray(e)&&(n=e.slice(1),e=e[0]),(null==n||0===n.length)&&null==r)return super.apply(e,t);const a=[],i=[];if(null!=n){const e=n.length;if(e%2>0)throw new hy("When passing `initialState` to a Bidrectional RNN, the state should be an Array containing the states of the underlying RNNs.");t.initialState=n,a.push(...n);const r=n.map(e=>new Jb({shape:e.shape}));this.forwardLayer.stateSpec=r.slice(0,e/2),this.backwardLayer.stateSpec=r.slice(e/2),i.push(...r)}if(null!=r)throw new dy("Support for constants in Bidirectional layers is not implemented yet.");const o=a[0]instanceof ex;for(const e of a)if(e instanceof ex!==o)throw new hy("The initial state of a Bidirectional layer cannot be specified as a mix of symbolic and non-symbolic tensors");if(o){const n=[e].concat(a),r=this.inputSpec.concat(i),s=this.inputSpec;this.inputSpec=r;const o=super.apply(n,t);return this.inputSpec=s,o}return super.apply(e,t)}call(e,t){return ui(()=>{const n=t.initialState;let r,s,a,i;if(null==n)r=this.forwardLayer.call(e,t),s=this.backwardLayer.call(e,t);else{const a=n.slice(0,n.length/2),i=n.slice(n.length/2);r=this.forwardLayer.call(e,Object.assign(t,{initialState:a})),s=this.backwardLayer.call(e,Object.assign(t,{initialState:i}))}return this.returnState&&(Array.isArray(r)&&(a=r.slice(1).concat(s.slice(1))),r=r[0],s=s[0]),this.returnSequences&&(s=$d(s,1)),"concat"===this.mergeMode?i=hb([r,s]):"sum"===this.mergeMode?i=To(r,s):"ave"===this.mergeMode?i=$o(.5,To(r,s)):"mul"===this.mergeMode?i=$o(r,s):null==this.mergeMode&&(i=[r,s]),this.returnState?null==this.mergeMode?i.concat(a):[i].concat(a):i})}resetStates(e){this.forwardLayer.resetStates(),this.backwardLayer.resetStates()}build(e){qy(this.forwardLayer.name,()=>{this.forwardLayer.build(e)}),qy(this.backwardLayer.name,()=>{this.backwardLayer.build(e)}),this.built=!0}computeMask(e,t){let n;if(Array.isArray(t)&&(t=t[0]),n=this.returnSequences?null==this.mergeMode?[t,t]:t:null==this.mergeMode?[null,null]:null,this.returnState){const e=this.forwardLayer.states.map(e=>null);return Array.isArray(n)?n.concat(e).concat(e):[n].concat(e).concat(e)}return n}get trainableWeights(){return this.forwardLayer.trainableWeights.concat(this.backwardLayer.trainableWeights)}get nonTrainableWeights(){return this.forwardLayer.nonTrainableWeights.concat(this.backwardLayer.nonTrainableWeights)}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),null!=this.forwardLayer&&this.forwardLayer.setFastWeightInitDuringBuild(e),null!=this.backwardLayer&&this.backwardLayer.setFastWeightInitDuringBuild(e)}getConfig(){const e={mergeMode:this.mergeMode},t=super.getConfig();return Object.assign(e,t),e}static fromConfig(e,t){const n=tw(t.layer);if(delete t.layer,null!=t.numConstants)throw new dy("Deserialization of a Bidirectional layer with numConstants present is not supported yet.");const r=t;return r.layer=n,new e(r)}}oN.className="Bidirectional",Ho(oN);class uN extends sx{constructor(e){super(e),this.scale=e.scale,e.offset?this.offset=e.offset:this.offset=0}getConfig(){const e={scale:this.scale,offset:this.offset},t=super.getConfig();return Object.assign(e,t),e}call(e,t){return ui(()=>("float32"!==(e=jb(e)).dtype&&(e=ib(e,"float32")),To($o(e,this.scale),this.offset)))}}uN.className="Rescaling",Ho(uN);const{resizeBilinear:lN,cropAndResize:cN}=Mf;class hN extends sx{constructor(e){super(e),this.height=e.height,this.width=e.width}centerCrop(e,t,n,r,s,a,i,o){return ui(()=>{let u,l=!1;const c=[t/a,n/i,(r+t)/a,(s+n)/i],h=[];3===e.rank?(l=!0,u=ep([e])):u=e;for(let e=0;e<u.shape[0];e++)h.push(c);const d=Za(h,[h.length,4]),p=Sd(0,h.length,1,"int32"),f=cN(u,d,p,[r,s],"nearest");return ib(l?jb(fp(f)):f,o)})}upsize(e,t,n,r){return ui(()=>ib(lN(e,[t,n]),r))}call(e,t){return ui(()=>{const t=jb(e),n=t.dtype,r=t.shape,s=r[r.length-3],a=r[r.length-2];let i=0;s!==this.height&&(i=Math.floor((s-this.height)/2));let o=0;return a!==this.width&&(o=Math.floor((a-this.width)/2),0===o&&(o=1)),i>=0&&o>=0?this.centerCrop(t,i,o,this.height,this.width,s,a,n):this.upsize(e,this.height,this.width,n)})}getConfig(){const e={height:this.height,width:this.width},t=super.getConfig();return Object.assign(e,t),e}computeOutputShape(e){const t=(e=Kb(e)).length-3,n=e.length-2;return e[t]=this.height,e[n]=this.width,e}}hN.className="CenterCrop",Ho(hN);class dN extends sx{constructor(e){super(e),this.numTokens=e.numTokens,e.outputMode?this.outputMode=e.outputMode:this.outputMode="multiHot"}getConfig(){const e={numTokens:this.numTokens,outputMode:this.outputMode},t=super.getConfig();return Object.assign(e,t),e}computeOutputShape(e){return null==(e=Kb(e))?[this.numTokens]:"oneHot"===this.outputMode&&1!==e[e.length-1]?(e.push(this.numTokens),e):(e[e.length-1]=this.numTokens,e)}call(e,t){return ui(()=>{let n;if("int32"!==(e=jb(e)).dtype&&(e=ib(e,"int32")),void 0!==t.countWeights){if("count"!==this.outputMode)throw new hy(`countWeights is not used when outputMode !== count.\n              Received countWeights=${t.countWeights}`);n=jb(t.countWeights)}const r=ah(e),s=ih(e),a=bh(this.numTokens,r).bufferSync().get(0),i=xh(s,0).bufferSync().get(0);if(!a||!i)throw new hy(`Input values must be between 0 < values <= numTokens with numTokens=${this.numTokens}`);return function(e,t,n,r){let s=jb(e);if("int32"!==s.dtype&&(s=ib(s,"int32")),"int"===t)return s;const a=s.shape;if(0===s.rank&&(s=dh(s,-1)),"oneHot"===t&&1!==s.shape[s.shape.length-1]&&(s=dh(s,-1)),s.rank>2)throw new hy(`When outputMode is not int, maximum output rank is 2 Received outputMode ${t} and input shape ${a} which would result in output rank ${s.rank}.`);const i=["multiHot","oneHot"].includes(t);let o;if(o=zc(s,void 0!==r&&"count"===t?r:[],n,i),"tfIdf"!==t)return o;if(r)return $o(o,r);throw new hy("When outputMode is 'tfIdf', weights must be provided.")}(e,this.outputMode,this.numTokens,n)})}}dN.className="CategoryEncoding",Ho(dN);const pN=new Set(["bilinear","nearest"]);class fN extends sx{constructor(e){if(super(e),this.height=e.height,this.width=e.width,e.interpolation){if(!pN.has(e.interpolation))throw new hy(`Invalid interpolation parameter: ${e.interpolation} is not implemented`);this.interpolation=e.interpolation}else this.interpolation="bilinear";this.cropToAspectRatio=Boolean(e.cropToAspectRatio)}computeOutputShape(e){const t=(e=Kb(e))[2];return[this.height,this.width,t]}getConfig(){const e={height:this.height,width:this.width,interpolation:this.interpolation,cropToAspectRatio:this.cropToAspectRatio},t=super.getConfig();return Object.assign(e,t),e}call(e,t){return ui(()=>{const t=[this.height,this.width];if("bilinear"===this.interpolation)return Mf.resizeBilinear(e,t,!this.cropToAspectRatio);if("nearest"===this.interpolation)return Mf.resizeNearestNeighbor(e,t,!this.cropToAspectRatio);throw new Error(`Interpolation is ${this.interpolation} but only ${[...pN]} are supported`)})}}fN.className="Resizing",Ho(fN);class mN{constructor(e){this.seed=e}next(){if(void 0!==this.seed)return this.seed++}}mN.className="RandomSeed";class gN extends sx{constructor(e){super(e),this.randomGenerator=new mN(e.seed)}getConfig(){const e={seed:this.randomGenerator.seed},t=super.getConfig();return Object.assign(e,t),e}}gN.className="BaseRandomLayer";const yN=new Set(["bilinear","nearest"]);class bN extends gN{constructor(e){super(e);const{factor:t,interpolation:n="bilinear"}=e;if(this.factor=t,Array.isArray(this.factor)&&2===this.factor.length)this.widthLower=this.factor[0],this.widthUpper=this.factor[1];else{if(Array.isArray(this.factor)||!(this.factor>0))throw new hy(`Invalid factor: ${this.factor}. Must be positive number or tuple of 2 numbers`);this.widthLower=-this.factor,this.widthUpper=this.factor}if(this.widthLower<-1||this.widthUpper<-1)throw new hy(`factor must have values larger than -1. Got: ${this.factor}`);if(this.widthUpper<this.widthLower)throw new hy(`factor cannot have upper bound less than lower bound.\n        Got upper bound: ${this.widthUpper}.\n        Got lower bound: ${this.widthLower}\n      `);if(n){if(!yN.has(n))throw new hy(`Invalid interpolation parameter: ${n} is not implemented`);this.interpolation=n}}getConfig(){const e={factor:this.factor,interpolation:this.interpolation},t=super.getConfig();return Object.assign(e,t),e}computeOutputShape(e){const t=(e=Kb(e))[2];return[this.imgHeight,-1,t]}call(e,t){return ui(()=>{const t=jb(e);this.imgHeight=t.shape[t.shape.length-3];const n=t.shape[t.shape.length-2];this.widthFactor=Nd([1],1+this.widthLower,1+this.widthUpper,"float32",this.randomGenerator.next());let r=this.widthFactor.dataSync()[0]*n;r=Math.round(r);const s=[this.imgHeight,r];switch(this.interpolation){case"bilinear":return Mf.resizeBilinear(e,s);case"nearest":return Mf.resizeNearestNeighbor(e,s);default:throw new Error(`Interpolation is ${this.interpolation}\n          but only ${[...yN]} are supported`)}})}}function xN(e){return new ix(e)}function wN(e){return new Fv(e)}function vN(e){return new Rv(e)}function kN(e){return new _v(e)}function NN(e){return new Dv(e)}function IN(e){return new Ov(e)}function SN(e){return new Mv(e)}function TN(e){return new Zv(e)}function EN(e){return new Hv(e)}function CN(e){return new Kv(e)}function $N(e){return new jv(e)}function AN(e){return new qv(e)}function RN(e){return new Yv(e)}function _N(e){return new Qv(e)}function DN(e){return new Jv(e)}function FN(e){return new ek(e)}function MN(e){return new wk(e)}function ON(e){return new bk(e)}function LN(e){return new gk(e)}function zN(e){return new yk(e)}function PN(e){return new xk(e)}function BN(e){return new vk(e)}function VN(e){return new kk(e)}function UN(e){return new Nk(e)}function WN(e){return new Sk(e)}function GN(e){return new Ek(e)}function HN(e){return new $k(e)}function jN(e){return new _k(e)}function KN(e){return new Ak(e)}function qN(e){return new Rk(e)}function XN(e){return new Ck(e)}function YN(e){return new Fk(e)}function ZN(e){return new Pk(e)}function QN(e){return new Bk(e)}function JN(e){return new Vk(e)}function eI(e){return new jk(e)}function tI(e){return eI(e)}function nI(e){return eI(e)}function rI(e){return new Xk(e)}function sI(e){return rI(e)}function aI(e){return rI(e)}function iI(e){return new Qk(e)}function oI(e){return iI(e)}function uI(e){return iI(e)}function lI(e){return new eN(e)}function cI(e){return new rN(e)}function hI(e){return new tN(e)}function dI(e){return new sN(e)}function pI(e){return new Hk(e)}function fI(e){return new qk(e)}function mI(e){return new Zk(e)}function gI(e){return new uk(e)}function yI(e){return new ok(e)}function bI(e){return new ck(e)}function xI(e){return new lk(e)}function wI(e){return new ik(e)}function vI(e){return new ak(e)}function kI(e){return new mk(e)}function NI(e){return new fk(e)}function II(e){return new rk(e)}function SI(e){return new hk(e)}function TI(e){return new oN(e)}function EI(e){return new iN(e)}bN.className="RandomWidth",Ho(bN);const CI=hI,$I=dI,AI=pI,RI=fI;function _I(e){return new Mk(e)}function DI(e){return new Ok(e)}function FI(e){return new Lk(e)}function MI(e){return new Ik(e)}function OI(e){return new uN(e)}function LI(e){return new hN(e)}function zI(e){return new fN(e)}function PI(e){return new dN(e)}function BI(e){return new bN(e)}function VI(e,t){return dw(e,t)}function UI(e,t){return gw(e,t)}function WI(e,t){return yw(e,t)}function GI(e,t){return pw(e,t)}function HI(e,t){return bw(e,t)}function jI(e,t){return mw(e,t)}function KI(e,t){return function(e,t){return ui(()=>{const n=fw(e,t),r=function(e,t){return ui(()=>No(oh(Fh(Wc(e,1),Wc(t,0))),"float32"))}(e,t),s=To(n,r);return No(Gc(bh(s,0),Co(n,s),0),"float32")})}(e,t)}function qI(e,t){return lw(e,t)}function XI(e,t){return sw(e,t)}function YI(e,t){return aw(e,t)}function ZI(e,t){return aw(e,t)}function QI(e,t){return aw(e,t)}function JI(e,t){return rw(e,t)}function eS(e,t){return rw(e,t)}function tS(e,t){return rw(e,t)}function nS(e,t){return function(e,t){return ui(()=>{const n=e.sub(t).square().sum(),r=e.sub(e.mean()).square().sum();return Bo(1).sub(n.div(r))})}(e,t)}function rS(e){return new Tv(e)}function sS(e){return Iv(t=e),new Tv({l1:null!=t?t.l1:null,l2:0});var t}function aS(e){return Iv(t=e),new Tv({l2:null!=t?t.l2:null,l1:0});var t}class iS extends Kx{constructor(){super(...arguments),this.model=null}setModel(e){if(!(e instanceof Xw))throw new Error("model must be a LayersModel, not some other Container");this.model=e}}function oS(e,t){return e<t}function uS(e,t){return e>t}class lS extends iS{constructor(e){if(super(),null==e&&(e={}),e.restoreBestWeights)throw new dy("restoreBestWeights = True is not implemented in EarlyStopping yet.");this.monitor=e.monitor||"val_loss",this.minDelta=Math.abs(e.minDelta||0),this.patience=e.patience||0,this.verbose=e.verbose||0,this.mode=e.mode||"auto",this.baseline=e.baseline,-1===["auto","min","max"].indexOf(this.mode)&&(console.warn(`EarlyStopping mode '${this.mode}' is invalid. Falling back to mode 'auto'.`),this.mode="auto"),"min"===this.mode?this.monitorFunc=oS:"max"===this.mode||-1!==this.monitor.indexOf("acc")?this.monitorFunc=uS:this.monitorFunc=oS,this.monitorFunc===oS&&(this.minDelta*=-1)}async onTrainBegin(e){this.wait=0,this.stoppedEpoch=0,null!=this.baseline?this.best=this.baseline:this.best=this.monitorFunc===oS?1/0:-1/0}async onEpochEnd(e,t){await Gx(t);const n=this.getMonitorValue(t);null!=n&&(this.monitorFunc(n-this.minDelta,this.best)?(this.best=n,this.wait=0):(this.wait++,this.wait>=this.patience&&(this.stoppedEpoch=e,this.model.stopTraining=!0)))}async onTrainEnd(e){this.stoppedEpoch>0&&this.verbose&&console.log(`Epoch ${this.stoppedEpoch}: early stopping.`)}getMonitorValue(e){null==e&&(e={});const t=e[this.monitor];return null==t&&console.warn(`Metric for EarlyStopping ${this.monitor} is not available. Available metrics are: ${Object.keys(e)}`),t}}const cS={earlyStopping:function(e){return new lS(e)}};var hS,dS;Xe().registerFlag("KEEP_INTERMEDIATE_TENSORS",()=>!1,e=>{e&&console.warn("Keep intermediate tensors is ON. This will print the values of all intermediate tensors during model inference. Not all models support this mode. For details, check e2e/benchmarks/ model_config.js. This significantly impacts performance.")}),function(e){e[e.DT_INVALID=0]="DT_INVALID",e[e.DT_FLOAT=1]="DT_FLOAT",e[e.DT_DOUBLE=2]="DT_DOUBLE",e[e.DT_INT32=3]="DT_INT32",e[e.DT_UINT8=4]="DT_UINT8",e[e.DT_INT16=5]="DT_INT16",e[e.DT_INT8=6]="DT_INT8",e[e.DT_STRING=7]="DT_STRING",e[e.DT_COMPLEX64=8]="DT_COMPLEX64",e[e.DT_INT64=9]="DT_INT64",e[e.DT_BOOL=10]="DT_BOOL",e[e.DT_QINT8=11]="DT_QINT8",e[e.DT_QUINT8=12]="DT_QUINT8",e[e.DT_QINT32=13]="DT_QINT32",e[e.DT_BFLOAT16=14]="DT_BFLOAT16",e[e.DT_QINT16=15]="DT_QINT16",e[e.DT_QUINT16=16]="DT_QUINT16",e[e.DT_UINT16=17]="DT_UINT16",e[e.DT_COMPLEX128=18]="DT_COMPLEX128",e[e.DT_HALF=19]="DT_HALF",e[e.DT_RESOURCE=20]="DT_RESOURCE",e[e.DT_VARIANT=21]="DT_VARIANT",e[e.DT_UINT32=22]="DT_UINT32",e[e.DT_UINT64=23]="DT_UINT64",e[e.DT_FLOAT_REF=101]="DT_FLOAT_REF",e[e.DT_DOUBLE_REF=102]="DT_DOUBLE_REF",e[e.DT_INT32_REF=103]="DT_INT32_REF",e[e.DT_UINT8_REF=104]="DT_UINT8_REF",e[e.DT_INT16_REF=105]="DT_INT16_REF",e[e.DT_INT8_REF=106]="DT_INT8_REF",e[e.DT_STRING_REF=107]="DT_STRING_REF",e[e.DT_COMPLEX64_REF=108]="DT_COMPLEX64_REF",e[e.DT_INT64_REF=109]="DT_INT64_REF",e[e.DT_BOOL_REF=110]="DT_BOOL_REF",e[e.DT_QINT8_REF=111]="DT_QINT8_REF",e[e.DT_QUINT8_REF=112]="DT_QUINT8_REF",e[e.DT_QINT32_REF=113]="DT_QINT32_REF",e[e.DT_BFLOAT16_REF=114]="DT_BFLOAT16_REF",e[e.DT_QINT16_REF=115]="DT_QINT16_REF",e[e.DT_QUINT16_REF=116]="DT_QUINT16_REF",e[e.DT_UINT16_REF=117]="DT_UINT16_REF",e[e.DT_COMPLEX128_REF=118]="DT_COMPLEX128_REF",e[e.DT_HALF_REF=119]="DT_HALF_REF",e[e.DT_RESOURCE_REF=120]="DT_RESOURCE_REF",e[e.DT_VARIANT_REF=121]="DT_VARIANT_REF",e[e.DT_UINT32_REF=122]="DT_UINT32_REF",e[e.DT_UINT64_REF=123]="DT_UINT64_REF"}(hS||(hS={})),function(e){let t;!function(e){e[e.LEGACY=0]="LEGACY",e[e.V1=1]="V1",e[e.V2=2]="V2"}(t=e.CheckpointFormatVersion||(e.CheckpointFormatVersion={}))}(dS||(dS={}));const pS={};function fS(e,t){const n={tfOpName:e,category:"custom",inputs:[],attrs:[],customExecutor:t};pS[e]=n}function mS(e){return pS[e]}function gS(e){delete pS[e]}function yS(e,t,n,r,s){const a=t.inputParams[e];if(a&&void 0!==a.inputIndexStart){const e=a.inputIndexStart,i=0===a.inputIndexEnd?void 0:void 0===a.inputIndexEnd?e+1:a.inputIndexEnd,o=e<0?t.inputNames.length+e:e;if("tensor"===a.type)return bS(t.inputNames[o],n,r,s);if("tensors"===a.type){const a=t.inputs.slice(e,i);return t.inputNames.slice(e,i).filter((e,t)=>{var n;return"NoOp"!==(null===(n=a[t])||void 0===n?void 0:n.op)}).map(e=>bS(e,n,r,s))}const u=bS(t.inputNames[o],n,r,s),l=u.dataSync();return"number"===a.type?l[0]:Le(u.shape,l)}const i=t.attrParams[e];return i&&i.value}function bS(e,t,n,r){const[s,a]=kS(e,n);if(null!=r){const e=r.getHashTableHandleByName(s);if(null!=e)return e}const i=n.currentContextIds.find(e=>!!t[vS(s,e)]);return void 0!==i?t[vS(s,i)][a]:void 0}function xS(e,t,n){return t[vS(e,n.currentContextId)]}function wS(e,t){const[n,r,s]=kS(e,t);return[vS(n,t&&t.currentContextId),r,s]}function vS(e,t){return t?`${e}-${t}`:e}function kS(e,t){if(""===e)return["",0,void 0];const n=null!=t&&null!=t.parseNodeNameCache;if(n){const n=t.parseNodeNameCache.get(e);if(null!=n)return n}const r=e.split(":");let s;if(1===r.length)s=[e,0,void 0];else{const e=r[0],t=3===r.length?r[1]:void 0;s=[e,Number(r[r.length-1]),t]}return n&&t.parseNodeNameCache.set(e,s),s}function NS(e,t,n){let r=yS("pad",e,t,n);if("explicit"===r){r=yS("explicitPaddings",e,t,n);const s=[[0,0],[0,0],[0,0],[0,0]];for(let e=0;e<4;e++)s[e][0]=r[2*e],s[e][1]=r[2*e+1];return s}return r}function IS(e){return e.kept?e:Io(e)}const SS=[{tfOpName:"Add",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddV2",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddN",category:"arithmetic",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"BiasAdd",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"Sub",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"RealDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Div",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"DivNoNan",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mul",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Maximum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Minimum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Pow",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SquaredDifference",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorMod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],TS=[{tfOpName:"Abs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan2",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Ceil",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ClipByValue",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"clipValueMin",type:"number"},{start:2,name:"clipValueMax",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Complex",category:"basic_math",inputs:[{start:0,name:"real",type:"tensor"},{start:1,name:"imag",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ComplexAbs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Elu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Exp",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Floor",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Imag",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Neg",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Real",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Prelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"alpha",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu6",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Selu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sigmoid",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Rsqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Square",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sign",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Round",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Expm1",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log1p",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Reciprocal",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Softplus",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Erf",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LeakyRelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"alpha",name:"alpha",type:"number",defaultValue:.2},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"IsNan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"IsFinite",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"IsInf",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],ES=[{tfOpName:"EmptyTensorList",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"maxNumElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"LoopCond",category:"control",inputs:[{start:0,name:"pred",type:"tensor"}]},{tfOpName:"Switch",category:"control",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"pred",type:"tensor"}]},{tfOpName:"Merge",category:"control",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"Enter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"frame_name",name:"frameName",type:"string"},{tfName:"is_constant",name:"isConstant",type:"bool"}]},{tfOpName:"Exit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NextIteration",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayV3",category:"control",inputs:[{start:0,name:"size",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"dynamic_size",name:"dynamicSize",type:"bool"},{tfName:"clear_after_read",name:"clearAfterRead",type:"bool"},{tfName:"identical_element_shapes",name:"identicalElementShapes",type:"bool"},{tfName:"tensor_array_name",name:"name",type:"string"}]},{tfOpName:"TensorArrayWriteV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayReadV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayGatherV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"}]},{tfOpName:"TensorArrayScatterV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArrayConcatV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape_except0",name:"elementShapeExcept0",type:"shape",notSupported:!0}]},{tfOpName:"TensorArraySplitV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"tensor",type:"tensor"},{start:2,name:"lengths",type:"number[]"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArraySizeV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}]},{tfOpName:"TensorArrayCloseV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"}]},{tfOpName:"StatelessIf",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"If",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"StatelessWhile",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"While",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"TensorListScatter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListScatterV2",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"},{start:3,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGather",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListSetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListReserve",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListFromTensor",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListStack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"},{tfName:"num_elements",name:"numElements",type:"dtype"}]},{tfOpName:"TensorListSplit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"},{start:2,name:"lengths",type:"number[]"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListConcat",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}],attrs:[{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListConcatV2",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}],attrs:[{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPopBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPushBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListLength",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}]},{tfOpName:"TensorListResize",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"size",type:"number"}]}],CS=[{tfOpName:"AvgPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[],notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPoolWithArgmax",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"include_batch_in_index",name:"includeBatchInIndex",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AvgPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Conv1D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"stride",name:"stride",type:"number"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NWC"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"dilation",name:"dilation",type:"number",defaultValue:1}]},{tfOpName:"Conv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"useCudnnOnGpu",name:"useCudnnOnGpu",type:"bool"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"_FusedConv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"use_cudnn_on_gpu",name:"useCudnnOnGpu",type:"bool",defaultValue:!0},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"leakyrelu_alpha",name:"leakyreluAlpha",type:"number",defaultValue:.2}]},{tfOpName:"Conv2DBackpropInput",category:"convolution",inputs:[{start:2,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:0,name:"outputShape",type:"number[]"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]",notSupported:!0}]},{tfOpName:"DepthwiseConv2d",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"DepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"FusedDepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]}]},{tfOpName:"Conv3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"Dilation2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"rates",name:"dilations",type:"number[]"},{tfName:"padding",name:"pad",type:"string"}]}],$S=[{tfOpName:"Fill",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"},{start:1,name:"value",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"LinSpace",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"num",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"OneHot",category:"creation",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"depth",type:"number"},{start:2,name:"onValue",type:"number",defaultValue:1},{start:3,name:"offValue",type:"number",defaultValue:0}],attrs:[{tfName:"axis",name:"axis",type:"number",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"Ones",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"OnesLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"RandomStandardNormal",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"RandomUniform",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"minval",name:"minval",type:"number",defaultValue:0},{tfName:"maxval",name:"maxval",type:"number",defaultValue:1},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"RandomUniformInt",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"minval",name:"minval",type:"number"},{tfName:"maxval",name:"maxval",type:"number"},{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0}]},{tfOpName:"Range",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"step",type:"number",defaultValue:0}],attrs:[{tfName:"Tidx",name:"dtype",type:"dtype"}]},{tfOpName:"TruncatedNormal",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"means",name:"mean",type:"number",defaultValue:0},{tfName:"stddev",name:"stdDev",type:"number",defaultValue:1},{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Zeros",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"ZerosLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"Multinomial",category:"creation",inputs:[{start:0,name:"logits",type:"tensor"},{start:1,name:"numSamples",type:"number"}],attrs:[{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number"},{tfName:"T",name:"dtype",type:"dtype"},{tfName:"output_dtype",name:"output_dtype",type:"dtype"}]}],AS=[{tfOpName:"NonMaxSuppressionV2",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV3",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV4",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"T_threshold",name:"threshold",type:"dtype",notSupported:!0},{tfName:"pad_to_max_output_size",name:"padToMaxOutputSize",type:"bool"}]},{tfOpName:"NonMaxSuppressionV5",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"},{start:5,name:"softNmsSigma",type:"number"}]},{tfOpName:"Where",category:"dynamic",inputs:[{start:0,name:"condition",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ListDiff",category:"dynamic",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],RS=[{tfOpName:"LowerBound",category:"evaluation",inputs:[{start:0,name:"sortedSequence",type:"tensor"},{start:1,name:"values",type:"tensor"}]},{tfOpName:"TopKV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"k",type:"number"}],attrs:[{tfName:"sorted",name:"sorted",type:"bool"}]},{tfOpName:"UpperBound",category:"evaluation",inputs:[{start:0,name:"sortedSequence",type:"tensor"},{start:1,name:"values",type:"tensor"}]},{tfOpName:"Unique",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"UniqueV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]}],_S=[{tfOpName:"PlaceholderWithDefault",category:"graph",inputs:[{start:0,name:"default",type:"tensor"}],attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Placeholder",category:"graph",attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Const",category:"graph"},{tfOpName:"Identity",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IdentityN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Snapshot",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Rank",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Size",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Shape",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"ShapeN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Print",category:"graph",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"data",type:"tensors"}],attrs:[{tfName:"message",name:"message",type:"string"},{tfName:"first_n",name:"firstN",type:"number",notSupported:!0},{tfName:"summarize",name:"summarize",type:"number",defaultValue:3}]},{tfOpName:"NoOp",category:"graph",inputs:[]},{tfOpName:"StopGradient",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"FakeQuantWithMinMaxVars",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"min",name:"min",type:"number"},{tfName:"max",name:"max",type:"number"}]}],DS=[{tfOpName:"HashTable",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"HashTableV2",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"LookupTableImport",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableImportV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFind",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFindV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableSize",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]},{tfOpName:"LookupTableSizeV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]},{tfOpName:"InitializeTable",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}]},{tfOpName:"InitializeTableV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}]}],FS=[{tfOpName:"ResizeBilinear",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ResizeNearestNeighbor",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"CropAndResize",category:"image",inputs:[{start:0,name:"image",type:"tensor"},{start:1,name:"boxes",type:"tensor"},{start:2,name:"boxInd",type:"tensor"},{start:3,name:"cropSize",type:"number[]"}],attrs:[{tfName:"method",name:"method",type:"string"},{tfName:"extrapolation_value",name:"extrapolationValue",type:"number"}]},{tfOpName:"ImageProjectiveTransformV3",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"transforms",type:"tensor"},{start:2,name:"outputShape",type:"number[]"},{start:3,name:"fillValue",type:"number"}],attrs:[{tfName:"interpolation",name:"interpolation",type:"string"},{tfName:"fill_mode",name:"fillMode",type:"string"}]}],MS=[{tfOpName:"Equal",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NotEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Greater",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"GreaterEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Less",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LessEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalAnd",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalNot",category:"logical",inputs:[{start:0,name:"a",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalOr",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Select",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SelectV2",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BitwiseAnd",category:"logical",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}]}],OS=[{tfOpName:"_FusedMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"leakyrelu_alpha",name:"leakyreluAlpha",type:"number",defaultValue:.2},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMulV2",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Transpose",category:"matrices",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"perm",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Einsum",category:"matrices",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"equation",name:"equation",type:"string"},{tfName:"N",name:"n",type:"number",defaultValue:2},{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"MatrixBandPart",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"numLower",type:"tensor"},{start:1,name:"numUpper",type:"tensor"}]}],LS=[{tfOpName:"EuclideanNorm",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool",defaultValue:!1}]},{tfOpName:"FusedBatchNorm",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV2",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV3",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"LRN",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"depth_radius",name:"radius",type:"number",defaultValue:5},{tfName:"bias",name:"bias",type:"number",defaultValue:1},{tfName:"alpha",name:"alpha",type:"number",defaultValue:1},{tfName:"beta",name:"beta",type:"number",defaultValue:.5}]},{tfOpName:"Softmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"LogSoftmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]}],zS=[{tfOpName:"Bincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}]},{tfOpName:"DenseBincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}],attrs:[{tfName:"binary_output",name:"binaryOutput",type:"bool"}]},{tfOpName:"Max",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Mean",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Min",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Sum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"All",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Any",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"ArgMax",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"ArgMin",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"Prod",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cumprod",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}],attrs:[{tfName:"exclusive",name:"exclusive",type:"bool"},{tfName:"reverse",name:"reverse",type:"bool"}]},{tfOpName:"Cumsum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}],attrs:[{tfName:"exclusive",name:"exclusive",type:"bool"},{tfName:"reverse",name:"reverse",type:"bool"}]}],PS=[{tfOpName:"ConcatV2",category:"slice_join",inputs:[{start:0,end:-1,name:"tensors",type:"tensors"},{start:-1,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"Concat",category:"slice_join",inputs:[{start:1,end:0,name:"tensors",type:"tensors"},{start:0,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"GatherV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"axis",type:"number",defaultValue:0}],attrs:[{tfName:"batch_dims",name:"batchDims",type:"number",defaultValue:0}]},{tfOpName:"Gather",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",notSupported:!0}]},{tfOpName:"Reverse",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"dims",type:"bool[]"}]},{tfOpName:"ReverseV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}]},{tfOpName:"Slice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"size",type:"number[]"}]},{tfOpName:"StridedSlice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"end",type:"number[]"},{start:3,name:"strides",type:"number[]"}],attrs:[{tfName:"begin_mask",name:"beginMask",type:"number",defaultValue:0},{tfName:"end_mask",name:"endMask",type:"number",defaultValue:0},{tfName:"new_axis_mask",name:"newAxisMask",type:"number",defaultValue:0},{tfName:"ellipsis_mask",name:"ellipsisMask",type:"number",defaultValue:0},{tfName:"shrink_axis_mask",name:"shrinkAxisMask",type:"number",defaultValue:0}]},{tfOpName:"Pack",category:"slice_join",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0}]},{tfOpName:"Unpack",category:"slice_join",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0},{tfName:"num",name:"num",type:"number",defaultValue:0,notSupported:!0}]},{tfOpName:"Tile",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"reps",type:"number[]"}]},{tfOpName:"Split",category:"slice_join",inputs:[{start:0,name:"axis",type:"number",defaultValue:0},{start:1,name:"x",type:"tensor"}],attrs:[{tfName:"num_split",name:"numOrSizeSplits",type:"number",defaultValue:1}]},{tfOpName:"SplitV",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"numOrSizeSplits",type:"number[]"},{start:2,name:"axis",type:"number",defaultValue:0}]},{tfOpName:"ScatterNd",category:"slice_join",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"shape",type:"number[]"}]},{tfOpName:"GatherNd",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}]},{tfOpName:"SparseToDense",category:"slice_join",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!1,notSupported:!0}]},{tfOpName:"TensorScatterUpdate",category:"slice_join",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"values",type:"tensor"}]}],BS=[{tfOpName:"SparseFillEmptyRows",category:"sparse",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"denseShape",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}]},{tfOpName:"SparseReshape",category:"sparse",inputs:[{start:0,name:"inputIndices",type:"tensor"},{start:1,name:"inputShape",type:"tensor"},{start:2,name:"newShape",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SparseSegmentMean",category:"sparse",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"segmentIds",type:"tensor"}]},{tfOpName:"SparseSegmentSum",category:"sparse",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"segmentIds",type:"tensor"}]}],VS=[{tfOpName:"FFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"RFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]},{tfOpName:"IRFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]}],US=[{tfOpName:"StaticRegexReplace",category:"string",inputs:[{start:0,name:"input",type:"tensor"}],attrs:[{tfName:"pattern",name:"pattern",type:"string"},{tfName:"rewrite",name:"rewrite",type:"string"},{tfName:"replace_global",name:"replaceGlobal",type:"bool"}]},{tfOpName:"StringNGrams",category:"string",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"dataSplits",type:"tensor"}],attrs:[{tfName:"separator",name:"separator",type:"string"},{tfName:"ngram_widths",name:"nGramWidths",type:"number[]"},{tfName:"left_pad",name:"leftPad",type:"string"},{tfName:"right_pad",name:"rightPad",type:"string"},{tfName:"pad_width",name:"padWidth",type:"number"},{tfName:"preserve_short_sequences",name:"preserveShortSequences",type:"bool"}],outputs:["ngrams","ngrams_splits"]},{tfOpName:"StringSplit",category:"string",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"delimiter",type:"tensor"}],attrs:[{tfName:"skip_empty",name:"skipEmpty",type:"bool"}],outputs:["indices","values","shape"]},{tfOpName:"StringToHashBucketFast",category:"string",inputs:[{start:0,name:"input",type:"tensor"}],attrs:[{tfName:"num_buckets",name:"numBuckets",type:"number"}]}],WS=[{tfOpName:"Cast",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"SrcT",name:"sdtype",type:"dtype",notSupported:!0},{tfName:"DstT",name:"dtype",type:"dtype"}]},{tfOpName:"ExpandDims",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"MirrorPad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"mode",name:"mode",type:"string"}]},{tfOpName:"Pad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"constant_value",name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"PadV2",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"},{start:2,name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"Reshape",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}]},{tfOpName:"EnsureShape",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}]},{tfOpName:"Squeeze",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"axis",tfDeprecatedName:"squeeze_dims",name:"axis",type:"number[]"}]},{tfOpName:"SpaceToBatchND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"paddings",type:"number[]"}]},{tfOpName:"BatchToSpaceND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"crops",type:"number[]"}]},{tfOpName:"DepthToSpace",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"block_size",name:"blockSize",type:"number"},{tfName:"data_format",name:"dataFormat",type:"string"}]},{tfOpName:"BroadcastTo",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}],attrs:[]},{tfOpName:"BroadcastArgs",category:"transformation",inputs:[{start:0,name:"s0",type:"tensor"},{start:1,name:"s1",type:"tensor"}],attrs:[]}];class GS{static get Instance(){return this._instance||(this._instance=new this)}constructor(){const e=[].concat(...[S,T,E,C,$,A,R,_,D,F,M,O,L,z,P,B,V,U,W].map(e=>e.json));this.opMappers=e.reduce((e,t)=>(e[t.tfOpName]=t,e),{})}transformGraph(e,t={}){const n=e.node,r=[],s=[],a=[],i=n.reduce((e,t)=>(e[t.name]=this.mapNode(t),t.op.startsWith("Placeholder")?r.push(e[t.name]):"Const"===t.op?s.push(e[t.name]):null!=t.input&&0!==t.input.length||a.push(e[t.name]),e),{});let o=[];const u=[];let l={},c={};null!=t&&(l=this.mapSignatureEntries(t.inputs),c=this.mapSignatureEntries(t.outputs));const h=Object.keys(i);h.forEach(e=>{const t=i[e];t.inputNames.forEach((e,n)=>{const[r,,s]=wS(e),a=i[r];if(null!=a.outputs){const e=a.outputs.indexOf(s);if(-1!==e){const s=`${r}:${e}`;t.inputNames[n]=s}}t.inputs.push(a),a.children.push(t)})}),0===Object.keys(c).length?h.forEach(e=>{const t=i[e];0===t.children.length&&u.push(t)}):Object.keys(c).forEach(e=>{const[t]=wS(e),n=i[t];null!=n&&(n.signatureKey=c[e],u.push(n))}),Object.keys(l).length>0?Object.keys(l).forEach(e=>{const[t]=wS(e),n=i[t];n&&(n.signatureKey=l[e],o.push(n))}):o=r;let d={};null!=e.library&&null!=e.library.function&&(d=e.library.function.reduce((e,t)=>(e[t.signature.name]=this.mapFunction(t),e),{}));const p={nodes:i,inputs:o,outputs:u,weights:s,placeholders:r,signature:t,functions:d};return a.length>0&&(p.initNodes=a),p}mapSignatureEntries(e){return Object.keys(e||{}).reduce((t,n)=>(t[e[n].name]=n,t),{})}mapNode(e){const t=mS(e.op)||this.opMappers[e.op]||{};null==e.attr&&(e.attr={});const n={name:e.name,op:e.op,category:t.category,inputNames:(e.input||[]).map(e=>e.startsWith("^")?e.slice(1):e),inputs:[],children:[],inputParams:{},attrParams:{},rawAttrs:e.attr,outputs:t.outputs};return null!=t.inputs&&(n.inputParams=t.inputs.reduce((e,t)=>(e[t.name]={type:t.type,inputIndexStart:t.start,inputIndexEnd:t.end},e),{})),null!=t.attrs&&(n.attrParams=t.attrs.reduce((t,n)=>{const r=n.type;let s;switch(n.type){case"string":s=jS(e.attr,n.tfName,n.defaultValue),void 0===s&&n.tfDeprecatedName&&(s=jS(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"string[]":s=nT(e.attr,n.tfName,n.defaultValue),void 0===s&&n.tfDeprecatedName&&(s=nT(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"number":s=qS(e.attr,n.tfName,n.defaultValue||0),void 0===s&&n.tfDeprecatedName&&(s=qS(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"number[]":s=tT(e.attr,n.tfName,n.defaultValue),void 0===s&&n.tfDeprecatedName&&(s=tT(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"bool":s=KS(e.attr,n.tfName,n.defaultValue),void 0===s&&n.tfDeprecatedName&&(s=KS(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"bool[]":s=sT(e.attr,n.tfName,n.defaultValue),void 0===s&&n.tfDeprecatedName&&(s=sT(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"shape":s=eT(e.attr,n.tfName,n.defaultValue),void 0===s&&n.tfDeprecatedName&&(s=eT(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"shape[]":s=rT(e.attr,n.tfName,n.defaultValue),void 0===s&&n.tfDeprecatedName&&(s=rT(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"dtype":s=ZS(e.attr,n.tfName,n.defaultValue),void 0===s&&n.tfDeprecatedName&&(s=ZS(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"dtype[]":s=QS(e.attr,n.tfName,n.defaultValue),void 0===s&&n.tfDeprecatedName&&(s=QS(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"func":s=YS(e.attr,n.tfName,n.defaultValue),void 0===s&&n.tfDeprecatedName&&(s=YS(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"tensor":case"tensors":break;default:throw new Error(`Unsupported param type: ${n.type} for op: ${e.op}`)}return t[n.name]={value:s,type:r},t},{})),n}mapFunction(e){const t=e.nodeDef,n=[];let r={};null!=t&&(r=t.reduce((e,t)=>(e[t.name]=this.mapNode(t),"Const"===t.op&&n.push(e[t.name]),e),{}));const s=[],a=[];e.signature.inputArg.forEach(e=>{const[t]=wS(e.name),n={name:t,op:"Placeholder",inputs:[],inputNames:[],category:"graph",inputParams:{},attrParams:{dtype:{value:XS(e.type),type:"dtype"}},children:[]};n.signatureKey=e.name,s.push(n),r[t]=n}),Object.keys(r).forEach(e=>{const t=r[e];t.inputNames.forEach((e,n)=>{const[s,,a]=wS(e),i=r[s];if(null!=i.outputs){const e=i.outputs.indexOf(a);if(-1!==e){const r=`${s}:${e}`;t.inputNames[n]=r}}t.inputs.push(i),i.children.push(t)})});const i=e.ret;e.signature.outputArg.forEach(e=>{const[t,n]=wS(i[e.name]),s=r[t];null!=s&&(s.defaultOutput=n,a.push(s))});const o=this.mapArgsToSignature(e);return{nodes:r,inputs:s,outputs:a,weights:n,placeholders:[],signature:o}}mapArgsToSignature(e){return{methodName:e.signature.name,inputs:e.signature.inputArg.reduce((e,t)=>(e[t.name]=this.mapArgToTensorInfo(t),e),{}),outputs:e.signature.outputArg.reduce((t,n)=>(t[n.name]=this.mapArgToTensorInfo(n,e.ret),t),{})}}mapArgToTensorInfo(e,t){let n=e.name;return null!=t&&(n=t[n]),{name:n,dtype:e.type}}}function HS(e,t){const n=Array.isArray(e)?String.fromCharCode.apply(null,e):function(e){const t=Xe().global;if(void 0!==t.atob)return t.atob(e);if("undefined"!=typeof Buffer)return new Buffer(e,"base64").toString();throw new Error("Unable to decode base64 in this environment. Missing built-in atob() or Buffer()")}(e);return t?n:n.toLowerCase()}function jS(e,t,n,r=!1){const s=e[t];return null!=s?HS(s.s,r):n}function KS(e,t,n){const r=e[t];return r?r.b:n}function qS(e,t,n){const r=e[t]||{},s=null!=r.i?r.i:null!=r.f?r.f:n;return"number"==typeof s?s:parseInt(s,10)}function XS(e){switch("string"==typeof e&&(e=hS[e]),e){case hS.DT_FLOAT:case hS.DT_HALF:return"float32";case hS.DT_INT32:case hS.DT_INT64:case hS.DT_INT8:case hS.DT_UINT8:return"int32";case hS.DT_BOOL:return"bool";case hS.DT_DOUBLE:return"float32";case hS.DT_STRING:return"string";case hS.DT_COMPLEX64:case hS.DT_COMPLEX128:return"complex64";default:return null}}function YS(e,t,n){const r=e[t];return r&&r.func?r.func.name:n}function ZS(e,t,n){const r=e[t];return r&&r.type?XS(r.type):n}function QS(e,t,n){const r=e[t];return r&&r.list&&r.list.type?r.list.type.map(e=>XS(e)):n}function JS(e){if(!e.unknownRank)return null!=e.dim?e.dim.map(e=>"number"==typeof e.size?e.size:parseInt(e.size,10)):[]}function eT(e,t,n){const r=e[t];return r&&r.shape?JS(r.shape):n}function tT(e,t,n){const r=e[t];return r?((r.list.f&&r.list.f.length?r.list.f:r.list.i)||[]).map(e=>"number"==typeof e?e:parseInt(e,10)):n}function nT(e,t,n,r=!1){const s=e[t];return s&&s.list&&s.list.s?s.list.s.map(e=>HS(e,r)):n}function rT(e,t,n){const r=e[t];return r&&r.list&&r.list.shape?r.list.shape.map(e=>JS(e)):n}function sT(e,t,n){const r=e[t];return r&&r.list&&r.list.b?r.list.b:n}class aT{constructor(e,t,n){this.node=e,this.tensorMap=t,this.context=n,this.inputs=[],this.attrs={},this.inputs=e.inputNames.map(e=>this.getInput(e)),null!=e.rawAttrs&&(this.attrs=Object.keys(e.rawAttrs).reduce((e,t)=>(e[t]=this.getAttr(t),e),{}))}getInput(e){return bS(e,this.tensorMap,this.context)}getAttr(e,t){const n=this.node.rawAttrs[e];if(null!=n.tensor)return bS(e,this.tensorMap,this.context);if(null!=n.i||null!=n.f)return qS(this.node.rawAttrs,e,t);if(null!=n.s)return jS(this.node.rawAttrs,e,t);if(null!=n.b)return KS(this.node.rawAttrs,e,t);if(null!=n.shape)return eT(this.node.rawAttrs,e,t);if(null!=n.type)return ZS(this.node.rawAttrs,e,t);if(null!=n.list){if(null!=n.list.i||null!=n.list.f)return tT(this.node.rawAttrs,e,t);if(null!=n.list.s)return nT(this.node.rawAttrs,e,t);if(null!=n.list.shape)return rT(this.node.rawAttrs,e,t);if(null!=n.list.b)return sT(this.node.rawAttrs,e,t);if(null!=n.list.type)return QS(this.node.rawAttrs,e,t)}return t}}function iT(e,t,n=""){if("number"!=typeof e&&"number"!=typeof t){ie(e.length===t.length,()=>n+` Shapes ${e} and ${t} must match`);for(let r=0;r<e.length;r++){const s=e[r],a=t[r];ie(s<0||a<0||s===a,()=>n+` Shapes ${e} and ${t} must match`)}}}function oT(e){return"number"!=typeof e&&!e.some(e=>e<0)}function uT(e,t,n){let r=lT(e,n);const s=!oT(r);if(s&&0===t.length)throw new Error(`Tried to calculate elements of an empty list with non-fully-defined elementShape: ${r}`);if(s&&t.forEach(e=>{r=lT(e.shape,r)}),!oT(r))throw new Error(`Non-fully-defined elementShape: ${r}`);return r}function lT(e,t){if("number"==typeof e)return t;if("number"==typeof t)return e;if(e.length!==t.length)throw new Error(`Incompatible ranks during merge: ${e} vs. ${t}`);const n=[];for(let r=0;r<e.length;++r){const s=e[r],a=t[r];if(s>=0&&a>=0&&s!==a)throw new Error(`Incompatible shape during merge: ${e} vs. ${t}`);n[r]=s>=0?s:a}return n}class cT{constructor(e,t,n,r,s,a,i){this.name=e,this.dtype=t,this.maxSize=n,this.elementShape=r,this.identicalElementShapes=s,this.dynamicSize=a,this.clearAfterRead=i,this.tensors=[],this.closed_=!1,this.idTensor=Bo(0),ci(this.idTensor)}get id(){return this.idTensor.id}get closed(){return this.closed_}clearAndClose(e){this.tensors.forEach(t=>{null!=e&&e.has(t.tensor.id)||t.tensor.dispose()}),this.tensors=[],this.closed_=!0,this.idTensor.dispose()}size(){return this.tensors.length}read(e){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(e<0||e>=this.size())throw new Error(`Tried to read from index ${e}, but array size is: ${this.size()}`);const t=this.tensors[e];if(t.cleared)throw new Error(`TensorArray ${this.name}: Could not read index ${e} twice because it was cleared after a previous read (perhaps try setting clear_after_read = false?).`);return this.clearAfterRead&&(t.cleared=!0),t.read=!0,t.tensor}readMany(e){return e.map(e=>this.read(e))}write(e,t){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(e<0||!this.dynamicSize&&e>=this.maxSize)throw new Error(`Tried to write to index ${e}, but array is not resizeable and size is: ${this.maxSize}`);const n=this.tensors[e]||{};if(t.dtype!==this.dtype)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e},\n          because the value dtype is ${t.dtype}, but TensorArray dtype is ${this.dtype}.`);if(0!==this.size()||null!=this.elementShape&&0!==this.elementShape.length||(this.elementShape=t.shape),iT(this.elementShape,t.shape,`TensorArray ${this.name}: Could not write to TensorArray index ${e}.`),n.read)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e}, because it has already been read.`);if(n.written)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e}, because it has already been written.`);n.tensor=t,ci(t),n.written=!0,this.tensors[e]=n}writeMany(e,t){if(e.length!==t.length)throw new Error(`TensorArray ${this.name}: could not write multiple tensors,because the index size: ${e.length} is not the same as tensors size: ${t.length}.`);e.forEach((e,n)=>this.write(e,t[n]))}gather(e,t){if(t&&t!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but gather requested dtype ${t}`);if(e)e=e.slice(0,this.size());else{e=[];for(let t=0;t<this.size();t++)e.push(t)}if(0===e.length)return Za([],[0].concat(this.elementShape));const n=this.readMany(e);return iT(this.elementShape,n[0].shape,"TensorArray shape mismatch: "),ep(n,0)}concat(e){if(e&&e!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but concat requested dtype ${e}`);if(0===this.size())return Za([],[0].concat(this.elementShape));const t=[];for(let e=0;e<this.size();e++)t.push(e);const n=this.readMany(t);return iT(this.elementShape,n[0].shape,`TensorArray shape mismatch: tensor array shape (${this.elementShape}) vs first tensor shape (${n[0].shape})`),oc(n,0)}scatter(e,t){if(t.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${t.dtype}`);if(e.length!==t.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${e.length} vs. ${t.shape[0]}`);const n=Math.max(...e);if(!this.dynamicSize&&n>=this.maxSize)throw new Error(`Max index must be < array size (${n}  vs. ${this.maxSize})`);this.writeMany(e,fp(t,0))}split(e,t){if(t.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${t.dtype}`);let n=0;const r=e.map(e=>(n+=e,n));if(n!==t.shape[0])throw new Error(`Expected sum of lengths to be equal to\n          tensor.shape[0], but sum of lengths is\n        ${n}, and tensor's shape is: ${t.shape}`);if(!this.dynamicSize&&e.length!==this.maxSize)throw new Error(`TensorArray's size is not equal to the size of lengths (${this.maxSize} vs. ${e.length}), and the TensorArray is not marked as dynamically resizeable`);const s=0===n?0:t.size/n,a=[];ui(()=>{t=sc(t,[1,n,s]);for(let n=0;n<e.length;++n){const i=[0,0===n?0:r[n-1],0],o=[1,e[n],s];a[n]=sc(lc(t,i,o),this.elementShape)}return a});const i=[];for(let t=0;t<e.length;t++)i[t]=t;this.writeMany(i,a)}}class hT{get id(){return this.idTensor.id}constructor(e,t,n,r=-1){this.tensors=e,this.elementShape=t,this.elementDtype=n,null!=e&&e.forEach(e=>{if(n!==e.dtype)throw new Error(`Invalid data types; op elements ${n}, but list elements ${e.dtype}`);iT(t,e.shape,"TensorList shape mismatch: "),ci(e)}),this.idTensor=Bo(0),this.maxNumElements=r,ci(this.idTensor)}copy(){return new hT([...this.tensors],this.elementShape,this.elementDtype)}clearAndClose(e){this.tensors.forEach(t=>{null!=e&&e.has(t.id)||t.dispose()}),this.tensors.length=0,this.idTensor.dispose()}size(){return this.tensors.length}stack(e,t,n=-1){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);if(-1!==n&&this.tensors.length!==n)throw new Error(`Operation expected a list with ${n} elements but got a list with ${this.tensors.length} elements.`);iT(e,this.elementShape,"TensorList shape mismatch: ");const r=uT(this.elementShape,this.tensors,e);return ui(()=>{const e=this.tensors.map(e=>sc(e,r));return ep(e,0)})}popBack(e,t){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);if(0===this.size())throw new Error("Trying to pop from an empty list.");const n=uT(this.elementShape,this.tensors,e),r=this.tensors.pop();return r.kept=!1,iT(r.shape,e,"TensorList shape mismatch: "),sc(r,n)}pushBack(e){if(e.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${e.dtype}, but list elements ${this.elementDtype}`);if(iT(e.shape,this.elementShape,"TensorList shape mismatch: "),this.maxNumElements===this.size())throw new Error("Trying to push element into a full list.");ci(e),this.tensors.push(e)}resize(e){if(e<0)throw new Error(`TensorListResize expects size to be non-negative. Got: ${e}`);if(-1!==this.maxNumElements&&e>this.maxNumElements)throw new Error(`TensorListResize input size ${e} is greater maxNumElement ${this.maxNumElements}.`);const t=new hT([],this.elementShape,this.elementDtype,this.maxNumElements);t.tensors.length=e;for(let n=0;n<Math.min(this.tensors.length,e);++n)t.tensors[n]=this.tensors[n];return t}getItem(e,t,n){if(n!==this.elementDtype)throw new Error(`Invalid data types; op elements ${n}, but list elements ${this.elementDtype}`);if(e<0||e>this.tensors.length)throw new Error(`Trying to access element ${e} in a list with ${this.tensors.length} elements.`);if(null==this.tensors[e])throw new Error(`element at index ${e} is null.`);iT(this.tensors[e].shape,t,"TensorList shape mismatch: ");const r=uT(this.elementShape,this.tensors,t);return sc(this.tensors[e],r)}setItem(e,t){if(t.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t.dtype}, but list elements ${this.elementDtype}`);if(e<0||-1!==this.maxNumElements&&e>=this.maxNumElements)throw new Error(`Trying to set element ${e} in a list with max ${this.maxNumElements} elements.`);iT(this.elementShape,t.shape,"TensorList shape mismatch: "),ci(t),null!=this.tensors[e]&&(this.tensors[e].kept=!1),this.tensors[e]=t}gather(e,t,n){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);iT(this.elementShape,n,"TensorList shape mismatch: "),e=e.slice(0,this.size());const r=uT(this.elementShape,this.tensors,n);return 0===e.length?Za([],[0].concat(r)):ui(()=>{const t=e.map(e=>sc(this.tensors[e],r));return ep(t,0)})}concat(e,t){if(e&&e!==this.elementDtype)throw new Error(`TensorList dtype is ${this.elementDtype} but concat requested dtype ${e}`);iT(this.elementShape,t,"TensorList shape mismatch: ");const n=uT(this.elementShape,this.tensors,t);return 0===this.size()?Za([],[0].concat(n)):ui(()=>{const e=this.tensors.map(e=>sc(e,n));return oc(e,0)})}}function dT(e,t,n){const[r,s]=yS("fusedOps",e,t,n),a="biasadd"===r,i=!a,o="prelu"===s,u="fusedbatchnorm"===r,l=yS("numArgs",e,t,n);if(a){if(o&&2!==l)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!o&&a&&1!==l)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd must have one extra argument: bias.")}if(u)throw new Error("FusedConv2d and DepthwiseConv2d with FusedBatchNorm is not supported");const c=yS("strides",e,t,n),h=NS(e,t,n),d=yS("dataFormat",e,t,n).toUpperCase(),p=yS("dilations",e,t,n);let[f,m]=yS("args",e,t,n);return i&&(m=f,f=void 0),{stride:c,pad:h,dataFormat:d,dilations:p,biasArg:f,preluArg:m,activationFunc:s,leakyreluAlpha:yS("leakyreluAlpha",e,t,n)}}function pT(e,t,n){return{boxes:yS("boxes",e,t,n),scores:yS("scores",e,t,n),maxOutputSize:yS("maxOutputSize",e,t,n),iouThreshold:yS("iouThreshold",e,t,n),scoreThreshold:yS("scoreThreshold",e,t,n),softNmsSigma:yS("softNmsSigma",e,t,n)}}class fT{get id(){return this.handle.id}constructor(e,t){this.keyDType=e,this.valueDType=t,this.handle=Bo(0),this.tensorMap=new Map,ci(this.handle)}clearAndClose(){this.tensorMap.forEach(e=>e.dispose()),this.tensorMap.clear(),this.handle.dispose()}size(){return this.tensorMap.size}tensorSize(){return Bo(this.size(),"int32")}async import(e,t){this.checkKeyAndValueTensor(e,t);const n=await e.data();return this.tensorMap.forEach(e=>e.dispose()),this.tensorMap.clear(),ui(()=>{const e=fp(t),r=n.length,s=e.length;ie(r===s,()=>`The number of elements doesn't match, keys has ${r} elements, the values has ${s} elements.`);for(let t=0;t<r;t++){const r=n[t],s=e[t];ci(s),this.tensorMap.set(r,s)}return this.handle})}async find(e,t){this.checkKeyAndValueTensor(e,t);const n=await e.data();return ui(()=>{const e=[];for(let r=0;r<n.length;r++){const s=n[r],a=this.findWithDefault(s,t);e.push(a)}return ep(e)})}findWithDefault(e,t){const n=this.tensorMap.get(e);return null!=n?n:t}checkKeyAndValueTensor(e,t){if(e.dtype!==this.keyDType)throw new Error(`Expect key dtype ${this.keyDType}, but got ${e.dtype}`);if(t.dtype!==this.valueDType)throw new Error(`Expect value dtype ${this.valueDType}, but got ${t.dtype}`)}}function mT(e,t,n,r,s=ui){const a=((e,t,n)=>{switch(e.category){case"arithmetic":return s(()=>((e,t,n,r=G)=>{switch(e.op){case"BiasAdd":case"AddV2":case"Add":return[r.add(yS("a",e,t,n),yS("b",e,t,n))];case"AddN":return[r.addN(yS("tensors",e,t,n))];case"FloorMod":case"Mod":return[r.mod(yS("a",e,t,n),yS("b",e,t,n))];case"Mul":return[r.mul(yS("a",e,t,n),yS("b",e,t,n))];case"RealDiv":case"Div":return[r.div(yS("a",e,t,n),yS("b",e,t,n))];case"DivNoNan":return[r.divNoNan(yS("a",e,t,n),yS("b",e,t,n))];case"FloorDiv":return[r.floorDiv(yS("a",e,t,n),yS("b",e,t,n))];case"Sub":return[r.sub(yS("a",e,t,n),yS("b",e,t,n))];case"Minimum":return[r.minimum(yS("a",e,t,n),yS("b",e,t,n))];case"Maximum":return[r.maximum(yS("a",e,t,n),yS("b",e,t,n))];case"Pow":return[r.pow(yS("a",e,t,n),yS("b",e,t,n))];case"SquaredDifference":return[r.squaredDifference(yS("a",e,t,n),yS("b",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n));case"basic_math":return s(()=>((e,t,n,r=G)=>{switch(e.op){case"Abs":case"ComplexAbs":return[r.abs(yS("x",e,t,n))];case"Acos":return[r.acos(yS("x",e,t,n))];case"Acosh":return[r.acosh(yS("x",e,t,n))];case"Asin":return[r.asin(yS("x",e,t,n))];case"Asinh":return[r.asinh(yS("x",e,t,n))];case"Atan":return[r.atan(yS("x",e,t,n))];case"Atan2":return[r.atan2(yS("x",e,t,n),yS("y",e,t,n))];case"Atanh":return[r.atanh(yS("x",e,t,n))];case"Ceil":return[r.ceil(yS("x",e,t,n))];case"Complex":return[r.complex(yS("real",e,t,n),yS("imag",e,t,n))];case"Cos":return[r.cos(yS("x",e,t,n))];case"Cosh":return[r.cosh(yS("x",e,t,n))];case"Elu":return[r.elu(yS("x",e,t,n))];case"Erf":return[r.erf(yS("x",e,t,n))];case"Exp":return[r.exp(yS("x",e,t,n))];case"Expm1":return[r.expm1(yS("x",e,t,n))];case"Floor":return[r.floor(yS("x",e,t,n))];case"Log":return[r.log(yS("x",e,t,n))];case"Log1p":return[r.log1p(yS("x",e,t,n))];case"Imag":return[r.imag(yS("x",e,t,n))];case"Neg":return[r.neg(yS("x",e,t,n))];case"Reciprocal":return[r.reciprocal(yS("x",e,t,n))];case"Real":return[r.real(yS("x",e,t,n))];case"Relu":return[r.relu(yS("x",e,t,n))];case"Round":return[r.round(yS("x",e,t,n))];case"Selu":return[r.selu(yS("x",e,t,n))];case"Sigmoid":return[r.sigmoid(yS("x",e,t,n))];case"Sin":return[r.sin(yS("x",e,t,n))];case"Sign":return[r.sign(yS("x",e,t,n))];case"Sinh":return[r.sinh(yS("x",e,t,n))];case"Softplus":return[r.softplus(yS("x",e,t,n))];case"Sqrt":return[r.sqrt(yS("x",e,t,n))];case"Square":return[r.square(yS("x",e,t,n))];case"Tanh":return[r.tanh(yS("x",e,t,n))];case"Tan":return[r.tan(yS("x",e,t,n))];case"ClipByValue":return[r.clipByValue(yS("x",e,t,n),yS("clipValueMin",e,t,n),yS("clipValueMax",e,t,n))];case"Relu6":return[r.relu6(yS("x",e,t,n))];case"Rsqrt":return[r.rsqrt(bS(e.inputNames[0],t,n))];case"LeakyRelu":return[r.leakyRelu(yS("x",e,t,n),yS("alpha",e,t,n))];case"Prelu":return[r.prelu(yS("x",e,t,n),yS("alpha",e,t,n))];case"IsNan":return[r.isNaN(bS(e.inputNames[0],t,n))];case"IsInf":return[r.isInf(bS(e.inputNames[0],t,n))];case"IsFinite":return[r.isFinite(bS(e.inputNames[0],t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n));case"control":return(async(e,t,n)=>{switch(e.op){case"If":case"StatelessIf":{const r=yS("thenBranch",e,t,n),s=yS("elseBranch",e,t,n),a=yS("cond",e,t,n),i=yS("args",e,t,n);return(await a.data())[0]?n.functionMap[r].executeFunctionAsync(i,n.tensorArrayMap,n.tensorListMap):n.functionMap[s].executeFunctionAsync(i,n.tensorArrayMap,n.tensorListMap)}case"While":case"StatelessWhile":{const r=yS("body",e,t,n),s=yS("cond",e,t,n),a=yS("args",e,t,n),i=await n.functionMap[s].executeFunctionAsync(a,n.tensorArrayMap,n.tensorListMap),o=a.map(e=>e.id);let u=await i[0].data();i.forEach(e=>{e.kept||-1!==o.indexOf(e.id)||e.dispose()});let l=a;for(;u[0];){const e=l;l=await n.functionMap[r].executeFunctionAsync(l,n.tensorArrayMap,n.tensorListMap);const t=l.map(e=>e.id);e.forEach(e=>{e.kept||-1!==o.indexOf(e.id)||-1!==t.indexOf(e.id)||e.dispose()});const a=await n.functionMap[s].executeFunctionAsync(l,n.tensorArrayMap,n.tensorListMap);u=await a[0].data(),a.forEach(e=>{e.kept||-1!==o.indexOf(e.id)||-1!==t.indexOf(e.id)||e.dispose()})}return l}case"LoopCond":return[IS(yS("pred",e,t,n))];case"Switch":{const r=yS("pred",e,t,n);let s=yS("data",e,t,n);return s.kept||(s=IS(s)),(await r.data())[0]?[void 0,s]:[s,void 0]}case"Merge":{const r=e.inputNames.find(e=>void 0!==bS(e,t,n));return r?[IS(bS(r,t,n))]:void 0}case"Enter":{const r=yS("frameName",e,t,n),s=yS("tensor",e,t,n);return n.enterFrame(r),[IS(s)]}case"Exit":{const r=yS("tensor",e,t,n);return n.exitFrame(),[IS(r)]}case"NextIteration":{const r=yS("tensor",e,t,n);return n.nextIteration(),[IS(r)]}case"TensorArrayV3":{const r=yS("size",e,t,n),s=yS("dtype",e,t,n),a=yS("elementShape",e,t,n),i=yS("dynamicSize",e,t,n),o=yS("clearAfterRead",e,t,n),u=yS("identicalElementShapes",e,t,n),l=yS("name",e,t,n),c=new cT(l,s,r,a,u,i,o);return n.addTensorArray(c),[c.idTensor,Bo(1)]}case"TensorArrayWriteV3":{const r=yS("tensorArrayId",e,t,n),s=yS("index",e,t,n),a=yS("tensor",e,t,n),i=n.getTensorArray(r.id);return i.write(s,a),[i.idTensor]}case"TensorArrayReadV3":{const r=yS("tensorArrayId",e,t,n),s=yS("index",e,t,n);return[n.getTensorArray(r.id).read(s)]}case"TensorArrayGatherV3":{const r=yS("tensorArrayId",e,t,n),s=yS("indices",e,t,n),a=yS("dtype",e,t,n);return[n.getTensorArray(r.id).gather(s,a)]}case"TensorArrayScatterV3":{const r=yS("tensorArrayId",e,t,n),s=yS("indices",e,t,n),a=yS("tensor",e,t,n),i=n.getTensorArray(r.id);return i.scatter(s,a),[i.idTensor]}case"TensorArrayConcatV3":{const r=yS("tensorArrayId",e,t,n),s=n.getTensorArray(r.id),a=yS("dtype",e,t,n);return[s.concat(a)]}case"TensorArraySplitV3":{const r=yS("tensorArrayId",e,t,n),s=yS("tensor",e,t,n),a=yS("lengths",e,t,n),i=n.getTensorArray(r.id);return i.split(a,s),[i.idTensor]}case"TensorArraySizeV3":{const r=yS("tensorArrayId",e,t,n);return[Bo(n.getTensorArray(r.id).size(),"int32")]}case"TensorArrayCloseV3":{const r=yS("tensorArrayId",e,t,n),s=n.getTensorArray(r.id);return s.clearAndClose(),[s.idTensor]}case"TensorListSetItem":{const r=yS("tensorListId",e,t,n),s=yS("index",e,t,n),a=yS("tensor",e,t,n),i=n.getTensorList(r.id);return i.setItem(s,a),[i.idTensor]}case"TensorListGetItem":{const r=yS("tensorListId",e,t,n),s=yS("index",e,t,n),a=yS("elementShape",e,t,n),i=yS("elementDType",e,t,n);return[n.getTensorList(r.id).getItem(s,a,i)]}case"TensorListScatterV2":case"TensorListScatter":{const r=yS("indices",e,t,n),s=function(e,t,n,r){if(t.length!==e.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${t.length} vs. ${e.shape[0]}`);const s=Math.max(...t);if(null!=r&&-1!==r&&s>=r)throw new Error(`Max index must be < array size (${s}  vs. ${r})`);const a=new hT([],n,e.dtype,r),i=fp(e,0);return t.forEach((e,t)=>{a.setItem(e,i[t])}),a}(yS("tensor",e,t,n),r,yS("elementShape",e,t,n),yS("numElements",e,t,n));return n.addTensorList(s),[s.idTensor]}case"TensorListReserve":case"EmptyTensorList":{const r=yS("elementShape",e,t,n),s=yS("elementDType",e,t,n);let a;a="TensorListReserve"===e.op?"numElements":"maxNumElements";const i=yS(a,e,t,n),o=function(e,t,n,r){return new hT([],e,t,r)}(r,s,0,"TensorListReserve"===e.op?-1:i);return n.addTensorList(o),[o.idTensor]}case"TensorListGather":{const r=yS("tensorListId",e,t,n),s=yS("indices",e,t,n),a=yS("elementShape",e,t,n),i=yS("elementDType",e,t,n);return[n.getTensorList(r.id).gather(s,i,a)]}case"TensorListStack":{const r=yS("tensorListId",e,t,n),s=yS("elementShape",e,t,n),a=yS("elementDType",e,t,n),i=yS("numElements",e,t,n);return[n.getTensorList(r.id).stack(s,a,i)]}case"TensorListFromTensor":{const r=function(e,t,n){const r=e.dtype;if(e.shape.length<1)throw new Error(`Tensor must be at least a vector, but saw shape: ${e.shape}`);if(e.dtype!==n)throw new Error(`Invalid data types; op elements ${e.dtype}, but list elements ${n}`);iT(e.shape.slice(1),t,"TensorList shape mismatch: ");const s=fp(e);return new hT(s,t,r)}(yS("tensor",e,t,n),yS("elementShape",e,t,n),yS("elementDType",e,t,n));return n.addTensorList(r),[r.idTensor]}case"TensorListConcat":case"TensorListConcatV2":{const r=yS("tensorListId",e,t,n),s=n.getTensorList(r.id),a=yS("dtype",e,t,n),i=yS("elementShape",e,t,n);return[s.concat(a,i)]}case"TensorListPushBack":{const r=yS("tensorListId",e,t,n),s=yS("tensor",e,t,n),a=n.getTensorList(r.id);return a.pushBack(s),[a.idTensor]}case"TensorListPopBack":{const r=yS("tensorListId",e,t,n),s=yS("elementShape",e,t,n),a=yS("elementDType",e,t,n);return[n.getTensorList(r.id).popBack(s,a)]}case"TensorListSplit":{const r=yS("tensor",e,t,n),s=yS("elementShape",e,t,n),a=function(e,t,n){let r=0;const s=t.map(e=>(r+=e,r));if(r!==e.shape[0])throw new Error(`Expected sum of lengths to be equal to\n          tensor.shape[0], but sum of lengths is\n        ${r}, and tensor's shape is: ${e.shape}`);const a=lT(e.shape.slice(1),n),i=0===r?0:e.size/r,o=ui(()=>{const n=[];e=sc(e,[1,r,i]);for(let r=0;r<t.length;++r){const o=[0,0===r?0:s[r-1],0],u=[1,t[r],i];n[r]=sc(lc(e,o,u),a)}return e.dispose(),n}),u=new hT([],n,e.dtype,t.length);for(let e=0;e<o.length;e++)u.setItem(e,o[e]);return u}(r,yS("lengths",e,t,n),s);return n.addTensorList(a),[a.idTensor]}case"TensorListLength":{const r=yS("tensorListId",e,t,n);return[Bo(n.getTensorList(r.id).size(),"int32")]}case"TensorListResize":{const r=yS("tensorListId",e,t,n),s=yS("size",e,t,n),a=n.getTensorList(r.id).resize(s);return n.addTensorList(a),[a.idTensor]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n);case"convolution":return s(()=>((e,t,n,r=G)=>{switch(e.op){case"Conv1D":{const s=yS("stride",e,t,n),a=yS("pad",e,t,n),i=yS("dataFormat",e,t,n).toUpperCase(),o=yS("dilation",e,t,n);return[r.conv1d(yS("x",e,t,n),yS("filter",e,t,n),s,a,i,o)]}case"Conv2D":{const s=yS("strides",e,t,n),a=NS(e,t,n),i=yS("dataFormat",e,t,n).toUpperCase(),o=yS("dilations",e,t,n);return[r.conv2d(yS("x",e,t,n),yS("filter",e,t,n),[s[1],s[2]],a,i,[o[1],o[2]])]}case"_FusedConv2D":{const{stride:s,pad:a,dataFormat:i,dilations:o,biasArg:u,preluArg:l,activationFunc:c,leakyreluAlpha:h}=dT(e,t,n);return[r.fused.conv2d({x:yS("x",e,t,n),filter:yS("filter",e,t,n),strides:[s[1],s[2]],pad:a,dataFormat:i,dilations:[o[1],o[2]],bias:u,activation:c,preluActivationWeights:l,leakyreluAlpha:h})]}case"FusedDepthwiseConv2dNative":{const{stride:s,pad:a,dataFormat:i,dilations:o,biasArg:u,preluArg:l,activationFunc:c,leakyreluAlpha:h}=dT(e,t,n);return[r.fused.depthwiseConv2d({x:yS("x",e,t,n),filter:yS("filter",e,t,n),strides:[s[1],s[2]],pad:a,dataFormat:i,dilations:[o[1],o[2]],bias:u,activation:c,preluActivationWeights:l,leakyreluAlpha:h})]}case"Conv2DBackpropInput":case"Conv2dTranspose":{const s=yS("outputShape",e,t,n),a=yS("strides",e,t,n),i=NS(e,t,n);return[r.conv2dTranspose(yS("x",e,t,n),yS("filter",e,t,n),s,[a[1],a[2]],i)]}case"DepthwiseConv2dNative":case"DepthwiseConv2d":{const s=yS("strides",e,t,n),a=NS(e,t,n),i=yS("dilations",e,t,n),o=yS("dataFormat",e,t,n).toUpperCase();return[r.depthwiseConv2d(yS("input",e,t,n),yS("filter",e,t,n),[s[1],s[2]],a,o,[i[1],i[2]])]}case"Conv3D":{const s=yS("strides",e,t,n),a=yS("pad",e,t,n),i=yS("dataFormat",e,t,n).toUpperCase(),o=yS("dilations",e,t,n);return[r.conv3d(yS("x",e,t,n),yS("filter",e,t,n),[s[1],s[2],s[3]],a,i,[o[1],o[2],o[3]])]}case"AvgPool":{const s=yS("strides",e,t,n),a=yS("pad",e,t,n),i=yS("kernelSize",e,t,n);return[r.avgPool(yS("x",e,t,n),[i[1],i[2]],[s[1],s[2]],a)]}case"MaxPool":{const s=yS("strides",e,t,n),a=yS("pad",e,t,n),i=yS("kernelSize",e,t,n);return[r.maxPool(yS("x",e,t,n),[i[1],i[2]],[s[1],s[2]],a)]}case"MaxPoolWithArgmax":{const s=yS("strides",e,t,n),a=yS("pad",e,t,n),i=yS("kernelSize",e,t,n),o=yS("includeBatchInIndex",e,t,n),{result:u,indexes:l}=r.maxPoolWithArgmax(yS("x",e,t,n),[i[1],i[2]],[s[1],s[2]],a,o);return[u,l]}case"AvgPool3D":{const s=yS("strides",e,t,n),a=yS("pad",e,t,n),i=yS("kernelSize",e,t,n);return[r.avgPool3d(yS("x",e,t,n),[i[1],i[2],i[3]],[s[1],s[2],s[3]],a)]}case"MaxPool3D":{const s=yS("strides",e,t,n),a=yS("pad",e,t,n),i=yS("kernelSize",e,t,n);return[r.maxPool3d(yS("x",e,t,n),[i[1],i[2],i[3]],[s[1],s[2],s[3]],a)]}case"Dilation2D":{const s=yS("strides",e,t,n),a=yS("pad",e,t,n),i=yS("dilations",e,t,n),o=s[1],u=s[2],l=i[1],c=i[2];return[r.dilation2d(yS("x",e,t,n),yS("filter",e,t,n),[o,u],a,[l,c],"NHWC")]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n));case"creation":return s(()=>((e,t,n,r=G)=>{switch(e.op){case"Fill":{const s=yS("shape",e,t,n),a=yS("dtype",e,t,n),i=yS("value",e,t,n);return[r.fill(s,i,a)]}case"LinSpace":{const s=yS("start",e,t,n),a=yS("stop",e,t,n),i=yS("num",e,t,n);return[r.linspace(s,a,i)]}case"Multinomial":{const s=yS("logits",e,t,n),a=yS("numSamples",e,t,n),i=yS("seed",e,t,n);return[r.multinomial(s,a,i)]}case"OneHot":{const s=yS("indices",e,t,n),a=yS("depth",e,t,n),i=yS("onValue",e,t,n),o=yS("offValue",e,t,n),u=yS("dtype",e,t,n);return[r.oneHot(s,a,i,o,u)]}case"Ones":return[r.ones(yS("shape",e,t,n),yS("dtype",e,t,n))];case"OnesLike":return[r.onesLike(yS("x",e,t,n))];case"RandomStandardNormal":return[r.randomStandardNormal(yS("shape",e,t,n),yS("dtype",e,t,n),yS("seed",e,t,n))];case"RandomUniform":return[r.randomUniform(yS("shape",e,t,n),yS("minval",e,t,n),yS("maxval",e,t,n),yS("dtype",e,t,n))];case"RandomUniformInt":return[r.randomUniformInt(yS("shape",e,t,n),yS("minval",e,t,n),yS("maxval",e,t,n),yS("seed",e,t,n))];case"Range":{const s=yS("start",e,t,n),a=yS("stop",e,t,n),i=yS("step",e,t,n);return[r.range(s,a,i,yS("dtype",e,t,n))]}case"TruncatedNormal":{const s=yS("shape",e,t,n),a=yS("mean",e,t,n),i=yS("stdDev",e,t,n),o=yS("seed",e,t,n);return[r.truncatedNormal(s,a,i,yS("dtype",e,t,n),o)]}case"Zeros":return[r.zeros(yS("shape",e,t,n),yS("dtype",e,t,n))];case"ZerosLike":return[r.zerosLike(yS("x",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n));case"dynamic":return(async(e,t,n,r,s=G)=>{switch(e.op){case"NonMaxSuppressionV5":{const{boxes:r,scores:a,maxOutputSize:i,iouThreshold:o,scoreThreshold:u,softNmsSigma:l}=pT(e,t,n),c=await s.image.nonMaxSuppressionWithScoreAsync(r,a,i,o,u,l);return[c.selectedIndices,c.selectedScores]}case"NonMaxSuppressionV4":{const{boxes:r,scores:a,maxOutputSize:i,iouThreshold:o,scoreThreshold:u}=pT(e,t,n),l=yS("padToMaxOutputSize",e,t,n),c=await s.image.nonMaxSuppressionPaddedAsync(r,a,i,o,u,l);return[c.selectedIndices,c.validOutputs]}case"NonMaxSuppressionV3":case"NonMaxSuppressionV2":{const{boxes:r,scores:a,maxOutputSize:i,iouThreshold:o,scoreThreshold:u}=pT(e,t,n);return[await s.image.nonMaxSuppressionAsync(r,a,i,o,u)]}case"Where":{const r=s.cast(yS("condition",e,t,n),"bool"),a=[await s.whereAsync(r)];return r.dispose(),a}case"ListDiff":return s.setdiff1dAsync(yS("x",e,t,n),yS("y",e,t,n));default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n);case"evaluation":return s(()=>((e,t,n,r=G)=>{switch(e.op){case"LowerBound":{const s=yS("sortedSequence",e,t,n),a=yS("values",e,t,n);return[r.lowerBound(s,a)]}case"TopKV2":{const s=yS("x",e,t,n),a=yS("k",e,t,n),i=yS("sorted",e,t,n),o=r.topk(s,a,i);return[o.values,o.indices]}case"UpperBound":{const s=yS("sortedSequence",e,t,n),a=yS("values",e,t,n);return[r.upperBound(s,a)]}case"Unique":{const s=yS("x",e,t,n),a=r.unique(s);return[a.values,a.indices]}case"UniqueV2":{const s=yS("x",e,t,n),a=yS("axis",e,t,n),i=r.unique(s,a);return[i.values,i.indices]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n));case"image":return s(()=>((e,t,n,r=G)=>{switch(e.op){case"ResizeBilinear":{const s=yS("images",e,t,n),a=yS("size",e,t,n),i=yS("alignCorners",e,t,n),o=yS("halfPixelCenters",e,t,n);return[r.image.resizeBilinear(s,[a[0],a[1]],i,o)]}case"ResizeNearestNeighbor":{const s=yS("images",e,t,n),a=yS("size",e,t,n),i=yS("alignCorners",e,t,n),o=yS("halfPixelCenters",e,t,n);return[r.image.resizeNearestNeighbor(s,[a[0],a[1]],i,o)]}case"CropAndResize":{const s=yS("image",e,t,n),a=yS("boxes",e,t,n),i=yS("boxInd",e,t,n),o=yS("cropSize",e,t,n),u=yS("method",e,t,n),l=yS("extrapolationValue",e,t,n);return[r.image.cropAndResize(s,a,i,o,u,l)]}case"ImageProjectiveTransformV3":{const s=yS("images",e,t,n),a=yS("transforms",e,t,n),i=yS("outputShape",e,t,n),o=yS("fillValue",e,t,n),u=yS("interpolation",e,t,n),l=yS("fillMode",e,t,n);return[r.image.transform(s,a,u.toLowerCase(),l.toLowerCase(),o,i)]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n));case"graph":return s(()=>((e,t,n,r=G)=>{switch(e.op){case"Const":return t[e.name];case"PlaceholderWithDefault":const s=yS("default",e,t,n);return[bS(e.name,t,n)||s];case"Placeholder":return[bS(e.name,t,n)];case"Identity":case"StopGradient":case"FakeQuantWithMinMaxVars":case"Snapshot":return[IS(yS("x",e,t,n))];case"IdentityN":return yS("x",e,t,n).map(e=>IS(e));case"Shape":return[r.tensor1d(yS("x",e,t,n).shape,"int32")];case"ShapeN":return yS("x",e,t,n).map(e=>r.tensor1d(e.shape));case"Size":return[r.scalar(yS("x",e,t,n).size,"int32")];case"Rank":return[r.scalar(yS("x",e,t,n).rank,"int32")];case"NoOp":return[r.scalar(1)];case"Print":const a=yS("x",e,t,n),i=yS("data",e,t,n),o=yS("message",e,t,n),u=yS("summarize",e,t,n);console.warn("The graph has a tf.print() operation,usually used for debugging, which slows down performance."),console.log(o);for(let e=0;e<i.length;e++)console.log(Array.prototype.slice.call(i[e].dataSync()).slice(0,u));return[a];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n));case"logical":return s(()=>((e,t,n,r=G)=>{switch(e.op){case"Equal":return[r.equal(yS("a",e,t,n),yS("b",e,t,n))];case"NotEqual":return[r.notEqual(yS("a",e,t,n),yS("b",e,t,n))];case"Greater":return[r.greater(yS("a",e,t,n),yS("b",e,t,n))];case"GreaterEqual":return[r.greaterEqual(yS("a",e,t,n),yS("b",e,t,n))];case"Less":return[r.less(yS("a",e,t,n),yS("b",e,t,n))];case"LessEqual":return[r.lessEqual(yS("a",e,t,n),yS("b",e,t,n))];case"LogicalAnd":return[r.logicalAnd(yS("a",e,t,n),yS("b",e,t,n))];case"LogicalNot":return[r.logicalNot(yS("a",e,t,n))];case"LogicalOr":return[r.logicalOr(yS("a",e,t,n),yS("b",e,t,n))];case"Select":case"SelectV2":return[r.where(yS("condition",e,t,n),yS("a",e,t,n),yS("b",e,t,n))];case"BitwiseAnd":return[r.bitwiseAnd(yS("a",e,t,n),yS("b",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n));case"matrices":return s(()=>((e,t,n,r=G)=>{switch(e.op){case"BatchMatMul":case"BatchMatMulV2":case"MatMul":return[r.matMul(yS("a",e,t,n),yS("b",e,t,n),yS("transposeA",e,t,n),yS("transposeB",e,t,n))];case"Einsum":return[r.einsum(yS("equation",e,t,n),...yS("tensors",e,t,n))];case"Transpose":return[r.transpose(yS("x",e,t,n),yS("perm",e,t,n))];case"_FusedMatMul":const[s,a]=yS("fusedOps",e,t,n),i="biasadd"===s,o="prelu"===a,u=yS("numArgs",e,t,n),l=yS("leakyreluAlpha",e,t,n);if(i){if(o&&2!==u)throw new Error("Fused MatMul with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!o&&1!==u)throw new Error("Fused MatMul with BiasAdd must have one extra argument: bias.")}const[c,h]=yS("args",e,t,n);return[r.fused.matMul({a:yS("a",e,t,n),b:yS("b",e,t,n),transposeA:yS("transposeA",e,t,n),transposeB:yS("transposeB",e,t,n),bias:c,activation:a,preluActivationWeights:h,leakyreluAlpha:l})];case"MatrixBandPart":return[r.linalg.bandPart(yS("a",e,t,n),yS("numLower",e,t,n),yS("numUpper",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n));case"normalization":return s(()=>((e,t,n,r=G)=>{switch(e.op){case"EuclideanNorm":return[r.euclideanNorm(yS("x",e,t,n),yS("axis",e,t,n),yS("keepDims",e,t,n))];case"FusedBatchNorm":case"FusedBatchNormV2":case"FusedBatchNormV3":return[r.batchNorm(yS("x",e,t,n),yS("mean",e,t,n),yS("variance",e,t,n),yS("offset",e,t,n),yS("scale",e,t,n),yS("epsilon",e,t,n))];case"LRN":return[r.localResponseNormalization(yS("x",e,t,n),yS("radius",e,t,n),yS("bias",e,t,n),yS("alpha",e,t,n),yS("beta",e,t,n))];case"Softmax":return[r.softmax(yS("x",e,t,n))];case"LogSoftmax":return[r.logSoftmax(yS("x",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n));case"ragged":return s(()=>((e,t,n,r=G)=>{switch(e.op){case"RaggedGather":{const{outputNestedSplits:s,outputDenseValues:a}=r.raggedGather(yS("paramsNestedSplits",e,t,n),yS("paramsDenseValues",e,t,n),yS("indices",e,t,n),yS("outputRaggedRank",e,t,n));return s.concat(a)}case"RaggedRange":{const{rtNestedSplits:s,rtDenseValues:a}=r.raggedRange(yS("starts",e,t,n),yS("limits",e,t,n),yS("splits",e,t,n));return[s,a]}case"RaggedTensorToTensor":return[r.raggedTensorToTensor(yS("shape",e,t,n),yS("values",e,t,n),yS("defaultValue",e,t,n),yS("rowPartitionTensors",e,t,n),yS("rowPartitionTypes",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n));case"reduction":return s(()=>((e,t,n,r=G)=>{switch(e.op){case"Max":{const s=yS("axis",e,t,n),a=yS("keepDims",e,t,n);return[r.max(yS("x",e,t,n),s,a)]}case"Mean":{const s=yS("axis",e,t,n),a=yS("keepDims",e,t,n);return[r.mean(yS("x",e,t,n),s,a)]}case"Min":{const s=yS("axis",e,t,n),a=yS("keepDims",e,t,n);return[r.min(yS("x",e,t,n),s,a)]}case"Sum":{const s=yS("axis",e,t,n),a=yS("keepDims",e,t,n);return[r.sum(yS("x",e,t,n),s,a)]}case"All":{const s=yS("axis",e,t,n),a=yS("keepDims",e,t,n);return[r.all(yS("x",e,t,n),s,a)]}case"Any":{const s=yS("axis",e,t,n),a=yS("keepDims",e,t,n);return[r.any(yS("x",e,t,n),s,a)]}case"ArgMax":{const s=yS("axis",e,t,n);return[r.argMax(yS("x",e,t,n),s)]}case"ArgMin":{const s=yS("axis",e,t,n);return[r.argMin(yS("x",e,t,n),s)]}case"Prod":{const s=yS("axis",e,t,n),a=yS("keepDims",e,t,n);return[r.prod(yS("x",e,t,n),s,a)]}case"Cumprod":{const s=yS("axis",e,t,n),a=yS("exclusive",e,t,n),i=yS("reverse",e,t,n);return[r.cumprod(yS("x",e,t,n),s,a,i)]}case"Cumsum":{const s=yS("axis",e,t,n),a=yS("exclusive",e,t,n),i=yS("reverse",e,t,n);return[r.cumsum(yS("x",e,t,n),s,a,i)]}case"Bincount":const s=yS("x",e,t,n),a=yS("weights",e,t,n),i=yS("size",e,t,n);return[r.bincount(s,a,i)];case"DenseBincount":{const s=yS("x",e,t,n),a=yS("weights",e,t,n),i=yS("size",e,t,n),o=yS("binaryOutput",e,t,n);return[r.denseBincount(s,a,i,o)]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n));case"slice_join":return s(()=>((e,t,n,r=G)=>{switch(e.op){case"ConcatV2":case"Concat":{const s=yS("n",e,t,n),a=yS("axis",e,t,n);let i=yS("tensors",e,t,n);return i=i.slice(0,s),[r.concat(i,a)]}case"Gather":{const s=yS("x",e,t,n),a=yS("indices",e,t,n);return[r.gather(s,r.cast(a,"int32"),0)]}case"GatherV2":{const s=yS("axis",e,t,n),a=yS("batchDims",e,t,n),i=yS("x",e,t,n),o=yS("indices",e,t,n);return[r.gather(i,r.cast(o,"int32"),s,a)]}case"Reverse":{const s=yS("dims",e,t,n),a=[];for(let e=0;e<s.length;e++)s[e]&&a.push(e);const i=yS("x",e,t,n);return[r.reverse(i,a)]}case"ReverseV2":{const s=yS("axis",e,t,n),a=yS("x",e,t,n);return[r.reverse(a,s)]}case"Slice":{const s=yS("begin",e,t,n),a=yS("size",e,t,n);return[r.slice(yS("x",e,t,n),s,a)]}case"StridedSlice":{const s=yS("begin",e,t,n),a=yS("end",e,t,n),i=yS("strides",e,t,n),o=yS("beginMask",e,t,n),u=yS("endMask",e,t,n),l=yS("ellipsisMask",e,t,n),c=yS("newAxisMask",e,t,n),h=yS("shrinkAxisMask",e,t,n),d=yS("x",e,t,n);return[r.stridedSlice(d,s,a,i,o,u,l,c,h)]}case"Pack":return ui(()=>{const s=yS("axis",e,t,n),a=yS("tensors",e,t,n),i=a[0].shape,o=r.squeeze(a[0]).shape,u=a.map(e=>{const t=de(e.shape,i);if(!t&&!de(r.squeeze(e).shape,o))throw new Error("the input tensors shape does not match");return t?e:r.reshape(e,i)});return[r.stack(u,s)]});case"Unpack":{const s=yS("axis",e,t,n),a=yS("tensor",e,t,n);return r.unstack(a,s)}case"Tile":{const s=yS("reps",e,t,n);return[r.tile(yS("x",e,t,n),s)]}case"Split":case"SplitV":{const s=yS("axis",e,t,n),a=yS("numOrSizeSplits",e,t,n),i=yS("x",e,t,n);return r.split(i,a,s)}case"ScatterNd":{const s=yS("indices",e,t,n),a=yS("values",e,t,n),i=yS("shape",e,t,n);return[r.scatterND(s,a,i)]}case"GatherNd":{const s=yS("x",e,t,n),a=yS("indices",e,t,n);return[r.gatherND(s,a)]}case"SparseToDense":{const s=yS("sparseIndices",e,t,n),a=yS("outputShape",e,t,n),i=yS("sparseValues",e,t,n),o=yS("defaultValue",e,t,n);return[r.sparseToDense(s,i,a,i.dtype===o.dtype?o:r.cast(o,i.dtype))]}case"TensorScatterUpdate":{const s=yS("indices",e,t,n),a=yS("values",e,t,n),i=yS("tensor",e,t,n);return[r.tensorScatterUpdate(i,s,a)]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n));case"sparse":return s(()=>((e,t,n,r=G)=>{switch(e.op){case"SparseFillEmptyRows":{const{outputIndices:s,outputValues:a,emptyRowIndicator:i,reverseIndexMap:o}=r.sparse.sparseFillEmptyRows(yS("indices",e,t,n),yS("values",e,t,n),yS("denseShape",e,t,n),yS("defaultValue",e,t,n));return[s,a,i,o]}case"SparseReshape":{const{outputIndices:s,outputShape:a}=r.sparse.sparseReshape(yS("inputIndices",e,t,n),yS("inputShape",e,t,n),yS("newShape",e,t,n));return[s,a]}case"SparseSegmentMean":return[r.sparse.sparseSegmentMean(yS("data",e,t,n),yS("indices",e,t,n),yS("segmentIds",e,t,n))];case"SparseSegmentSum":return[r.sparse.sparseSegmentSum(yS("data",e,t,n),yS("indices",e,t,n),yS("segmentIds",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n));case"spectral":return s(()=>((e,t,n,r=G)=>{switch(e.op){case"FFT":return[r.fft(yS("x",e,t,n))];case"IFFT":return[r.ifft(yS("x",e,t,n))];case"RFFT":return[r.rfft(yS("x",e,t,n))];case"IRFFT":return[r.irfft(yS("x",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n));case"string":return s(()=>((e,t,n,r=G)=>{switch(e.op){case"StaticRegexReplace":return[r.string.staticRegexReplace(yS("input",e,t,n),yS("pattern",e,t,n),yS("rewrite",e,t,n),yS("replaceGlobal",e,t,n))];case"StringNGrams":{const{nGrams:s,nGramsSplits:a}=r.string.stringNGrams(yS("data",e,t,n),yS("dataSplits",e,t,n),yS("separator",e,t,n),yS("nGramWidths",e,t,n),yS("leftPad",e,t,n),yS("rightPad",e,t,n),yS("padWidth",e,t,n),yS("preserveShortSequences",e,t,n));return[s,a]}case"StringSplit":{const{indices:s,values:a,shape:i}=r.string.stringSplit(yS("input",e,t,n),yS("delimiter",e,t,n),yS("skipEmpty",e,t,n));return[s,a,i]}case"StringToHashBucketFast":return[r.string.stringToHashBucketFast(yS("input",e,t,n),yS("numBuckets",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n));case"transformation":return s(()=>((e,t,n,r=G)=>{switch(e.op){case"Cast":return[r.cast(yS("x",e,t,n),yS("dtype",e,t,n))];case"ExpandDims":{const s=yS("axis",e,t,n);return[r.expandDims(yS("x",e,t,n),s)]}case"Squeeze":{const s=yS("axis",e,t,n);return[r.squeeze(yS("x",e,t,n),s)]}case"Reshape":return[r.reshape(yS("x",e,t,n),yS("shape",e,t,n))];case"EnsureShape":return[r.ensureShape(yS("x",e,t,n),yS("shape",e,t,n))];case"MirrorPad":return[r.mirrorPad(yS("x",e,t,n),yS("padding",e,t,n),yS("mode",e,t,n))];case"PadV2":case"Pad":return[r.pad(yS("x",e,t,n),yS("padding",e,t,n),yS("constantValue",e,t,n))];case"SpaceToBatchND":{const s=yS("blockShape",e,t,n),a=yS("paddings",e,t,n);return[r.spaceToBatchND(yS("x",e,t,n),s,a)]}case"BatchToSpaceND":{const s=yS("blockShape",e,t,n),a=yS("crops",e,t,n);return[r.batchToSpaceND(yS("x",e,t,n),s,a)]}case"DepthToSpace":{const s=yS("blockSize",e,t,n),a=yS("dataFormat",e,t,n).toUpperCase();return[r.depthToSpace(yS("x",e,t,n),s,a)]}case"BroadcastTo":return[r.broadcastTo(yS("x",e,t,n),yS("shape",e,t,n))];case"BroadcastArgs":return[r.broadcastArgs(yS("s0",e,t,n),yS("s1",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n));case"hash_table":return(async(e,t,n,r)=>{switch(e.op){case"HashTable":case"HashTableV2":{const s=r.getHashTableHandleByName(e.name);if(null!=s)return[s];{const s=yS("keyDType",e,t,n),a=yS("valueDType",e,t,n),i=new fT(s,a);return r.addHashTable(e.name,i),[i.handle]}}case"InitializeTable":case"InitializeTableV2":case"LookupTableImport":case"LookupTableImportV2":{const s=yS("tableHandle",e,t,n,r),a=yS("keys",e,t,n),i=yS("values",e,t,n),o=r.getHashTableById(s.id);return[await o.import(a,i)]}case"LookupTableFind":case"LookupTableFindV2":{const s=yS("tableHandle",e,t,n,r),a=yS("keys",e,t,n),i=yS("defaultValue",e,t,n),o=r.getHashTableById(s.id);return[await o.find(a,i)]}case"LookupTableSize":case"LookupTableSizeV2":{const s=yS("tableHandle",e,t,n,r);return[r.getHashTableById(s.id).tensorSize()]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n,r);case"custom":const a=mS(e.op);if(a&&a.customExecutor)return a.customExecutor(new aT(e,t,n));throw TypeError(`Custom op ${e.op} is not registered.`);default:throw TypeError(`Unknown op '${e.op}'. File an issue at https://github.com/tensorflow/tfjs/issues so we can add it, or register a custom execution with tf.registerOp()`)}})(e,t,n);return He(a)?a.then(e=>[].concat(e)):[].concat(a)}class gT{constructor(e={},t={},n={},r={},s){this.weightMap=e,this.tensorArrayMap=t,this.tensorListMap=n,this.functionMap=r,this.parseNodeNameCache=s,this.rootContext={id:0,frameName:"",iterationId:0},this.contexts=[this.rootContext],this.lastId=0,this.generateCurrentContextIds()}newFrame(e,t){return{id:e,frameName:t,iterationId:0}}set currentContext(e){this.contexts!==e&&(this.contexts=e,this.generateCurrentContextIds())}get currentContext(){return this.contexts}get currentContextId(){return this._currentContextIds[0]}get currentContextIds(){return this._currentContextIds}generateCurrentContextIds(){const e=[];for(let t=0;t<this.contexts.length-1;t++){const n=this.contexts.slice(0,this.contexts.length-t);e.push(this.contextIdforContexts(n))}e.push(""),this._currentContextIds=e}contextIdforContexts(e){return e?e.map(e=>0===e.id&&0===e.iterationId?"":`${e.frameName}-${e.iterationId}`).join("/"):""}enterFrame(e){this.contexts&&(this.lastId++,this.contexts=this.contexts.slice(),this.contexts.push(this.newFrame(this.lastId,e)),this._currentContextIds.unshift(this.contextIdforContexts(this.contexts)))}exitFrame(){if(!(this.contexts&&this.contexts.length>1))throw new Error("Cannot exit frame, the context is empty");this.contexts=this.contexts.slice(),this.contexts.splice(-1),this.currentContextIds.shift()}nextIteration(){if(!(this.contexts&&this.contexts.length>0))throw new Error("Cannot increase frame iteration, the context is empty");{this.contexts=this.contexts.slice(),this.lastId++;const e=Object.assign({},this.contexts[this.contexts.length-1]);e.iterationId+=1,e.id=this.lastId,this.contexts.splice(-1,1,e),this._currentContextIds.splice(0,1,this.contextIdforContexts(this.contexts))}}getWeight(e){return this.weightMap[e]}addTensorArray(e){this.tensorArrayMap[e.id]=e}getTensorArray(e){return this.tensorArrayMap[e]}addTensorList(e){this.tensorListMap[e.id]=e}getTensorList(e){return this.tensorListMap[e]}dispose(e){for(const t in this.tensorArrayMap)this.tensorArrayMap[t].clearAndClose(e);for(const t in this.tensorListMap)this.tensorListMap[t].clearAndClose(e)}}function yT(e,t,n,r){const s=new Set,a=[];let i=null,o=null;const u=new Set,l=new Set(Object.keys(e).map(e=>kS(e)[0]));r=r||[];const c=new Set(r.map(e=>kS(e.name)[0])),h=[...t];for(;h.length>0;){const e=h.pop();(kT(e)||NT(e)||IT(e))&&null==i&&(i=e,o=i.children.map(e=>e.name).filter(e=>s.has(e))),s.add(e.name),null==n[e.name]&&(l.has(e.name)||c.has(e.name)||(0!==e.inputs.length?e.inputs.forEach(e=>{u.has(e.name)||(u.add(e.name),h.push(e))}):a.push(e.name)))}return{inputs:e,outputs:t,usedNodes:s,missingInputs:a,dynamicNode:i,syncInputs:o}}class bT extends Error{constructor(e){super(`NodesExecutionOrderError: ${e}`)}}const xT=new Set(["Switch","Merge","Enter","Exit","NextIteration","StatelessIf","StatelessWhile","if","While"]),wT=new Set(["NonMaxSuppressionV2","NonMaxSuppressionV3","NonMaxSuppressionV5","Where"]),vT=new Set(["HashTable","HashTableV2","LookupTableImport","LookupTableImportV2","LookupTableFind","LookupTableFindV2","LookupTableSize","LookupTableSizeV2"]);function kT(e){return xT.has(e.op)}function NT(e){return wT.has(e.op)}function IT(e){return vT.has(e.op)}class ST{get weightIds(){return this.parent?this.parent.weightIds:this._weightIds}get functionExecutorMap(){return this.parent?this.parent.functionExecutorMap:this._functionExecutorMap}get weightMap(){return this.parent?this.parent.weightMap:this._weightMap}set weightMap(e){const t=Object.keys(e).map(t=>e[t].map(e=>e.id));this._weightIds=[].concat(...t),this._weightMap=e}set resourceManager(e){this._resourceManager=e}get inputs(){return this._inputs.map(e=>({name:e.name,shape:e.attrParams.shape?e.attrParams.shape.value:void 0,dtype:e.attrParams.dtype?e.attrParams.dtype.value:void 0}))}get outputs(){return this._outputs.map(e=>({name:e.name,shape:e.attrParams.shape?e.attrParams.shape.value:void 0,dtype:e.attrParams.dtype?e.attrParams.dtype.value:void 0}))}get inputNodes(){return this._inputs.map(e=>e.signatureKey||e.name)}get outputNodes(){return this._outputs.map(e=>{const t=e.signatureKey||e.name;return e.defaultOutput?`${t}:${e.defaultOutput}`:t})}get functions(){return Object.keys(this._functions).reduce((e,t)=>(e[t]=this._functions[t].signature,e),{})}constructor(e,t){this.graph=e,this.parent=t,this.compiledMap=new Map,this.parseNodeNameCache=new Map,this._weightMap={},this.SEPARATOR=",",this._functions={},this._functionExecutorMap={},this.keepIntermediateTensors=!1,this._outputs=e.outputs,this._inputs=e.inputs,this._initNodes=e.initNodes,this._signature=e.signature,this._functions=e.functions,null!=e.functions&&Object.keys(e.functions).forEach(t=>{this._functionExecutorMap[t]=new ST(e.functions[t],this)})}getCompilationKey(e,t){const n=e.map(e=>e.name).sort(),r=t.map(e=>e.name).sort();return n.join(this.SEPARATOR)+"--"+r.join(this.SEPARATOR)}compile(e,t){const n=yT(e,t,this.weightMap,this._initNodes),{missingInputs:r,dynamicNode:s,syncInputs:a}=n;if(null!=s)throw new Error(`This execution contains the node '${s.name}', which has the dynamic op '${s.op}'. Please use model.executeAsync() instead. Alternatively, to avoid the dynamic ops, specify the inputs [${a}]`);if(r.length>0){const n=t.map(e=>e.name),s=Object.keys(e);throw new Error(`Cannot compute the outputs [${n}] from the provided inputs [${s}]. Missing the following inputs: [${r}]`)}const i=function(e,t){const{usedNodes:n,inputs:r}=t,s=Object.keys(r).map(e=>kS(e)[0]).map(t=>e.nodes[t]),a=e.initNodes||[],i=e=>n.has("string"==typeof e?e:e.name);function o(e){return[...new Map(e.map(e=>[e.name,e])).values()]}const u=o([...s,...e.weights,...a]).filter(i),l=o([...u,...Object.values(e.nodes)]).filter(i),c=new Map(l.map(e=>[e.name,e])),h={};for(const e of l){h[e.name]=h[e.name]||0;for(const t of e.children)i(t)||(h[t.name]=Number.POSITIVE_INFINITY),h[t.name]=(h[t.name]||0)+1}const d=Object.entries(h).filter(([,e])=>0===e).map(([e])=>e),p=[...d];for(;d.length>0;){const e=d.pop(),t=c.get(e);for(const e of t.children.filter(i))0===--h[e.name]&&(p.push(e.name),d.push(e.name))}const f=function(e,t){const n=new Map(e.map(e=>[e.name,e])),r=t.map(e=>e.name),s=new Set(r);for(;r.length>0;){const e=r.pop(),t=n.get(e);for(const e of t.children)n.has(e.name)&&!s.has(e.name)&&(s.add(e.name),r.push(e.name))}return e.filter(e=>s.has(e.name))}(p.map(e=>c.get(e)),u);return function(e,t){const n=new Map(e.map((e,t)=>[e.name,t])),r=new Set(t.map(e=>e.name)),s=e=>r.has("string"==typeof e?e:e.name),a=new Set(e.map(e=>e.name)),i=e=>a.has("string"==typeof e?e:e.name);for(const t of e){for(const e of t.children.filter(i)){if(!n.has(e.name))throw new bT(`Child ${e.name} of node ${t.name} is unreachable.`);if(n.get(t.name)>n.get(e.name))throw new bT(`Node ${t.name} is scheduled to run after its child ${e.name}.`)}if(!s(t))for(const e of t.inputs){if(!n.has(e.name))throw new bT(`Input ${e.name} of node ${t.name} is unreachable.`);if(n.get(e.name)>n.get(t.name))throw new bT(`Node ${t.name} is scheduled to run before its input ${e.name}.`)}}}(f,u),f}(this.graph,n),o=function(e){const t=new Map(e.map((e,t)=>[e.name,t])),n=Number.MAX_SAFE_INTEGER,r=e.map((e,t)=>kT(e)?n:t),s=e=>{const n=r[t.get(e.name)];return null==n?-1:n},a=e.map((e,t)=>e.children.map(s).reduce((e,t)=>Math.max(e,t),r[t])),i=new Map;for(let t=0;t<e.length;++t){const r=a[t];if(r===n)continue;const s=e[t],o=e[r];i.has(o.name)||i.set(o.name,[]),i.get(o.name).push(s)}return i}(i);return{orderedNodes:i,nodeLiveUntilMap:o}}cloneAndKeepTensor(e){if(null==e)return null;const t=e.clone();return ci(t),t}cloneTensorList(e){if(!e)return null;const t=e.map(e=>this.cloneAndKeepTensor(e));return t}cloneTensorMap(e){return Object.fromEntries(Object.entries(e).map(([e,t])=>[e,this.cloneTensorList(t)]))}execute(e,t){this.disposeIntermediateTensors(),e=this.mapInputs(e);const n=Object.keys(e).sort();this.checkInputs(e),this.checkInputShapeAndType(e),t=this.mapOutputs(t),this.checkOutputs(t);const r=n.map(e=>this.graph.nodes[kS(e)[0]]),s=t.map(e=>kS(e)[0]),a=new Set(s);let i=s.map(e=>this.graph.nodes[e]);0===i.length&&(i=this._outputs);const o=this.getCompilationKey(r,i);let u=this.compiledMap.get(o);null==u&&(u=this.compile(e,i),this.compiledMap.set(o,u));try{this.keepIntermediateTensors=Xe().getBool("KEEP_INTERMEDIATE_TENSORS")}catch(e){this.keepIntermediateTensors=!1,console.warn(e.message)}const l={},c={};return ui(()=>{const n=new gT(this.weightMap,l,c,this.functionExecutorMap,this.parseNodeNameCache),r=Object.assign({},this.weightMap);this.keepIntermediateTensors&&(this.clonedTensorsMap=this.cloneTensorMap(this.weightMap)),Object.keys(e).forEach(t=>{const[s,a]=kS(t,n),i=[];i[a]=e[t],r[s]=i,this.keepIntermediateTensors&&(this.clonedTensorsMap[s]=this.cloneTensorList(i))});const s=this.getFrozenTensorIds(r),{orderedNodes:i,nodeLiveUntilMap:o}=u;for(const e of i){if(r[e.name])continue;const t=mT(e,r,n,this._resourceManager);if(He(t))throw new Error(`The execution of the op '${e.op}' returned a promise. Please use model.executeAsync() instead.`);r[e.name]=t,this.keepIntermediateTensors&&(this.clonedTensorsMap[e.name]=this.cloneTensorList(t)),this.checkTensorForDisposalWithNodeLiveUntilInfo(e,r,n,s,a,o.get(e.name))}return null==this.parent&&n.dispose(s),t.map(e=>bS(e,r,n))})}getFrozenTensorIds(e){const t=[].concat.apply([],Object.keys(e).map(t=>e[t]).map(e=>e.map(e=>e.id)));return new Set(t)}checkTensorForDisposal(e,t,n,r,s,a,i){if(!kT(t)&&!a.has(e)){for(const r of n[e])null!=r&&(i[r.id]=(i[r.id]||0)+t.children.length);for(const e of t.inputs){if(kT(e))continue;const t=xS(e.name,n,r);if(null!=t)for(const e of t){if(!e||e.kept||s.has(e.id))continue;const t=i[e.id];1===t?(e.dispose(),delete i[e.id]):null!=t&&i[e.id]--}}}}checkTensorForDisposalWithNodeLiveUntilInfo(e,t,n,r,s,a){function i(e){return kT(e)||s.has(e.name)}if(!kT(e)&&null!=a)for(const e of a){if(i(e))continue;const s=xS(e.name,t,n);for(const e of s)!e||e.kept||r.has(e.id)||e.dispose()}}async executeAsync(e,t){return this._executeAsync(e,t)}disposeIntermediateTensors(){this.clonedTensorsMap&&(Object.values(this.clonedTensorsMap).forEach(e=>{for(const t of e)t&&!t.isDisposed&&t.dispose()}),this.clonedTensorsMap=null)}getIntermediateTensors(){return this.clonedTensorsMap}async _executeAsync(e,t,n=!1,r={},s={}){this.disposeIntermediateTensors(),n||(e=this.mapInputs(e),this.checkInputs(e),this.checkInputShapeAndType(e),t=this.mapOutputs(t),this.checkOutputs(t));try{this.keepIntermediateTensors=Xe().getBool("KEEP_INTERMEDIATE_TENSORS")}catch(e){this.keepIntermediateTensors=!1,console.warn(e.message)}const a=new gT(this.weightMap,r,s,this.functionExecutorMap,this.parseNodeNameCache);this.keepIntermediateTensors&&(this.clonedTensorsMap=this.cloneTensorMap(this.weightMap));const i=await this.executeWithControlFlow(e,a,t,n),o=t.map(e=>bS(e,i,a)),u=o.map(e=>e.id),l=Object.keys(e).map(t=>e[t].id),c=new Set([...u,...l,...this.weightIds]);return Object.values(i).forEach(e=>{e.forEach(e=>{!e||e.isDisposed||c.has(e.id)||e.dispose()})}),null==this.parent&&a.dispose(c),o}async executeFunctionAsync(e,t,n){const r=e.reduce((e,t,n)=>(e[this.inputs[n].name]=t,e),{});return this._executeAsync(r,this.outputNodes,!0,t,n)}async executeWithControlFlow(e,t,n,r){const s=Object.keys(e),a=s.map(e=>this.graph.nodes[kS(e)[0]]),i=n.map(e=>kS(e)[0]),o=new Set(i);let u=i.map(e=>this.graph.nodes[e]);0===u.length&&(u=this._outputs);const{usedNodes:l,missingInputs:c,dynamicNode:h,syncInputs:d}=yT(e,u,this.weightMap,this._initNodes),p=[...a,...this.graph.weights,...this._initNodes||[]].map(e=>({node:e,contexts:t.currentContext})),f=Object.assign({},this.weightMap);Object.keys(e).forEach(t=>{const[n,r]=kS(t),s=[];s[r]=e[t],f[n]=s});const m={},g=this.getFrozenTensorIds(f),y={};for(;p.length>0;){const e=this.processStack(a,p,t,f,y,g,o,m,l);await Promise.all(e)}null!=h||r||console.warn("This model execution did not contain any nodes with control flow or dynamic output shapes. You can use model.execute() instead.");const b=u.filter(e=>!kT(e)&&!bS(e.name,f,t)).map(e=>e.name);if(b.length>0){let e="";throw null!=h&&(e=`Alternatively, to avoid the dynamic ops, use model.execute() and specify the inputs [${d}]`),new Error(`Cannot compute the outputs [${b}] from the provided inputs [${s}]. Consider providing the following inputs: [${c}]. ${e}`)}return f}processStack(e,t,n,r,s,a,i,o,u){const l=[];for(;t.length>0;){const e=t.pop();n.currentContext=e.contexts;let c="";if("Enter"===e.node.op&&yS("isConstant",e.node,r,n)&&([c]=wS(e.node.name,n)),null==r[e.node.name]){const h=mT(e.node,r,n,this._resourceManager);c||([c]=wS(e.node.name,n));const d=n.currentContext;He(h)?l.push(h.then(l=>(r[c]=l,this.keepIntermediateTensors&&(this.clonedTensorsMap[c]=this.cloneTensorList(l)),n.currentContext=d,this.checkTensorForDisposal(c,e.node,r,n,a,i,o),this.processChildNodes(e.node,t,n,r,s,u),l))):(r[c]=h,this.keepIntermediateTensors&&(this.clonedTensorsMap[c]=this.cloneTensorList(h)),this.checkTensorForDisposal(c,e.node,r,n,a,i,o),this.processChildNodes(e.node,t,n,r,s,u))}else this.processChildNodes(e.node,t,n,r,s,u)}return l}processChildNodes(e,t,n,r,s,a){e.children.forEach(e=>{const[i]=wS(e.name,n);!s[i]&&a.has(e.name)&&("Merge"===e.op?e.inputNames.some(e=>!!bS(e,r,n))&&(s[i]=!0,t.push({contexts:n.currentContext,node:e})):e.inputNames.every(e=>!!bS(e,r,n))&&(s[i]=!0,t.push({contexts:n.currentContext,node:e})))})}dispose(){Object.keys(this.weightMap).forEach(e=>this.weightMap[e].forEach(e=>e.dispose()))}checkInputShapeAndType(e){Object.keys(e).forEach(t=>{const n=e[t],[r]=kS(t),s=this.graph.nodes[r];if(s.attrParams.shape&&s.attrParams.shape.value){const e=s.attrParams.shape.value;ie(e.length===n.shape.length&&n.shape.every((t,n)=>-1===e[n]||e[n]===t),()=>`The shape of dict['${s.name}'] provided in model.execute(dict) must be [${e}], but was [${n.shape}]`)}s.attrParams.dtype&&s.attrParams.dtype.value&&ie(n.dtype===s.attrParams.dtype.value,()=>`The dtype of dict['${s.name}'] provided in model.execute(dict) must be ${s.attrParams.dtype.value}, but was ${n.dtype}`)})}mapInputs(e){var t,n;const r={};for(const s in e){const a=null===(n=null===(t=this._signature)||void 0===t?void 0:t.inputs)||void 0===n?void 0:n[s];null!=a?r[a.name]=e[s]:r[s]=e[s]}return r}checkInputs(e){const t=Object.keys(e).filter(e=>{const[t]=kS(e);return null==this.graph.nodes[t]});if(t.length>0)throw new Error(`The dict provided in model.execute(dict) has keys: [${t}] that are not part of graph`)}mapOutputs(e){return e.map(e=>{var t,n;const r=null===(n=null===(t=this._signature)||void 0===t?void 0:t.outputs)||void 0===n?void 0:n[e];return null!=r?r.name:e},{})}checkOutputs(e){e.forEach(e=>{const[t]=kS(e);if(!this.graph.nodes[t])throw new Error(`The output '${e}' is not found in the graph`)})}}class TT{constructor(e={},t={}){this.hashTableNameToHandle=e,this.hashTableMap=t}addHashTable(e,t){this.hashTableNameToHandle[e]=t.handle,this.hashTableMap[t.id]=t}getHashTableHandleByName(e){return this.hashTableNameToHandle[e]}getHashTableById(e){return this.hashTableMap[e]}dispose(){for(const e in this.hashTableMap)this.hashTableMap[e].clearAndClose(),delete this.hashTableMap[e];for(const e in this.hashTableNameToHandle)this.hashTableNameToHandle[e].dispose(),delete this.hashTableNameToHandle[e]}}const ET="?tfjs-format=file",CT="model.json";class $T{get modelVersion(){return this.version}get inputNodes(){return this.executor.inputNodes}get outputNodes(){return this.executor.outputNodes}get inputs(){return this.executor.inputs}get outputs(){return this.executor.outputs}get weights(){return this.executor.weightMap}get metadata(){return this.artifacts.userDefinedMetadata}get modelSignature(){return this.signature}get modelStructuredOutputKeys(){return this.structuredOutputKeys}constructor(e,t={},n=u){this.modelUrl=e,this.loadOptions=t,this.version="n/a",this.io=n,null==t&&(this.loadOptions={}),this.resourceManager=new TT}findIOHandler(){const e=this.modelUrl;if(null!=e.load)this.handler=e;else if(null!=this.loadOptions.requestInit)this.handler=this.io.browserHTTPRequest(e,this.loadOptions);else{const t=this.io.getLoadHandlers(e,this.loadOptions);if(0===t.length)t.push(this.io.browserHTTPRequest(e,this.loadOptions));else if(t.length>1)throw new Error(`Found more than one (${t.length}) load handlers for URL '${[e]}'`);this.handler=t[0]}}load(){if(this.findIOHandler(),null==this.handler.load)throw new Error("Cannot proceed with model loading because the IOHandler provided does not have the `load` method implemented.");const e=this.handler.load();return He(e)?e.then(e=>null==e.getWeightStream?this.loadSync(e):this.loadStreaming(e)):this.loadSync(e)}loadSync(e){const t=this.io.decodeWeights(e.weightData,e.weightSpecs);return this.loadWithWeightMap(e,t)}async loadStreaming(e){if(null==e.getWeightStream)throw new Error("Model artifacts missing streamWeights function");const t=await Ci(e.getWeightStream(),e.weightSpecs);return this.loadWithWeightMap(e,t)}loadWithWeightMap(e,t){this.artifacts=e;const n=this.artifacts.modelTopology;let r=this.artifacts.signature;if(null!=this.artifacts.userDefinedMetadata){const e=this.artifacts.userDefinedMetadata;null!=e.signature&&(r=e.signature),null!=e.structuredOutputKeys&&(this.structuredOutputKeys=e.structuredOutputKeys)}if(this.signature=r,this.version=`${n.versions.producer}.${n.versions.minConsumer}`,this.executor=new ST(GS.Instance.transformGraph(n,this.signature)),this.executor.weightMap=this.convertTensorMapToTensorsMap(t),this.executor.resourceManager=this.resourceManager,null!=e.modelInitializer&&null!=e.modelInitializer.node){const t=GS.Instance.transformGraph(e.modelInitializer);this.initializer=new ST(t),this.initializer.weightMap=this.executor.weightMap,this.initializer.resourceManager=this.resourceManager,this.initializerSignature=e.initializerSignature}return!0}async save(e,t){if("string"==typeof e){const t=this.io.getSaveHandlers(e);if(0===t.length)throw new Error(`Cannot find any save handlers for URL '${e}'`);if(t.length>1)throw new Error(`Found more than one (${t.length}) save handlers for URL '${e}'`);e=t[0]}if(null==e.save)throw new Error("GraphModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");return e.save(this.artifacts)}addStructuredOutputNames(e){if(this.structuredOutputKeys){const t={};return(e instanceof pa?[e]:e).forEach((e,n)=>t[this.structuredOutputKeys[n]]=e),t}return e}predict(e,t){const n=this.execute(e,this.outputNodes);return this.addStructuredOutputNames(n)}async predictAsync(e,t){const n=await this.executeAsync(e,this.outputNodes);return this.addStructuredOutputNames(n)}normalizeInputs(e){var t;if(!(e instanceof pa||Array.isArray(e))){const n=null===(t=this.signature)||void 0===t?void 0:t.inputs;if(null!=n)for(const t in n){const r=n[t];null!=r.resourceId&&(e[t]=this.resourceIdToCapturedInput[r.resourceId])}return e}e=Array.isArray(e)?e:[e];const n=Object.keys(this.resourceIdToCapturedInput).length;if(e.length+n!==this.inputNodes.length)throw new Error(`Input tensor count mismatch, the graph model has ${this.inputNodes.length-n} non-resource placeholders, while there are ${e.length} input tensors provided.`);let r=0;return this.inputNodes.reduce((t,n)=>{var s,a,i;const o=null===(i=null===(a=null===(s=this.signature)||void 0===s?void 0:s.inputs)||void 0===a?void 0:a[n])||void 0===i?void 0:i.resourceId;return t[n]=null!=o?this.resourceIdToCapturedInput[o]:e[r++],t},{})}normalizeOutputs(e){return e=e||this.outputNodes,Array.isArray(e)?e:[e]}executeInitializerGraph(){return null==this.initializer?[]:null==this.initializerSignature?this.initializer.execute({},[]):this.initializer.execute({},Object.keys(this.initializerSignature.outputs))}async executeInitializerGraphAsync(){return null==this.initializer?[]:null==this.initializerSignature?this.initializer.executeAsync({},[]):this.initializer.executeAsync({},Object.keys(this.initializerSignature.outputs))}setResourceIdToCapturedInput(e){if(this.resourceIdToCapturedInput={},this.initializerSignature){const t=this.initializerSignature.outputs,n=Object.keys(t);for(let r=0;r<n.length;r++){const s=t[n[r]];this.resourceIdToCapturedInput[s.resourceId]=e[r]}}}execute(e,t){null==this.resourceIdToCapturedInput&&this.setResourceIdToCapturedInput(this.executeInitializerGraph()),e=this.normalizeInputs(e),t=this.normalizeOutputs(t);const n=this.executor.execute(e,t);return n.length>1?n:n[0]}async executeAsync(e,t){null==this.resourceIdToCapturedInput&&this.setResourceIdToCapturedInput(await this.executeInitializerGraphAsync()),e=this.normalizeInputs(e),t=this.normalizeOutputs(t);const n=await this.executor.executeAsync(e,t);return n.length>1?n:n[0]}getIntermediateTensors(){return this.executor.getIntermediateTensors()}disposeIntermediateTensors(){this.executor.disposeIntermediateTensors()}convertTensorMapToTensorsMap(e){return Object.keys(e).reduce((t,n)=>(t[n]=[e[n]],t),{})}dispose(){this.executor.dispose(),this.initializer&&(this.initializer.dispose(),this.resourceIdToCapturedInput&&li(this.resourceIdToCapturedInput)),this.resourceManager.dispose()}}async function AT(e,t={},n=u){if(null==e)throw new Error("modelUrl in loadGraphModel() cannot be null. Please provide a url or an IOHandler that loads the model");null==t&&(t={}),t.fromTFHub&&"string"==typeof e&&(e=function(e){return e.endsWith("/")||(e+="/"),`${e}${CT}${ET}`}(e));const r=new $T(e,t,n);return await r.load(),r}function RT(e){if(null==e)throw new Error("modelUrl in loadGraphModelSync() cannot be null. Please provide model artifacts or an IOHandler that loads the model");let t;if(e instanceof Array){const[n,r]=e;if(!n)throw new Error("modelJSON must be the first element of the array");if(!(r&&r instanceof ArrayBuffer))throw new Error("An ArrayBuffer of weights must be the second element of the array");if(!("modelTopology"in n))throw new Error("Model JSON is missing 'modelTopology'");if(!("weightsManifest"in n))throw new Error("Model JSON is missing 'weightsManifest'");t=Eu(Mi(n,zi(n.weightsManifest),r))}else if("load"in e)t=e;else{if(!("modelTopology"in e&&"weightSpecs"in e&&"weightData"in e))throw new Error("Unknown model format");t=Eu(e)}const n=new $T(t);return n.load(),n}const _T="4.22.0";function DT(e,t,n=new Map,r=new Set){if(null==e)return null;if("function"==typeof Blob&&e instanceof Blob)return e.slice();if(r.has(e))throw new Error("Circular references are not supported.");if(n.has(e))return n.get(e);const s=t(e);if(s.recurse&&null!==s.value)throw new Error("A deep map function may not return both a value and recurse=true.");if(s.recurse){if(zT(e)){const s=Array.isArray(e)?[]:{};r.add(e);for(const a in e){const i=DT(e[a],t,n,r);s[a]=i}return r.delete(e),e.__proto__&&(s.__proto__=e.__proto__),s}throw new Error(`Can't recurse into non-iterable type: ${e}`)}return n.set(e,s.value),s.value}function FT(e,t=OT){return MT(e,t)}function MT(e,t,n=new Set){const r=e[0];if(n.has(r))throw new Error("Circular references are not supported.");const s=t(e);if(s.recurse&&null!==s.value)throw new Error("A deep zip function may not return both a value and recurse=true.");if(s.recurse){if(zT(r)){const s=Array.isArray(r)?[]:{};n.add(r);for(const a in r){const r=MT(e.map(e=>e[a]),t,n);s[a]=r}return n.delete(r),s}throw new Error(`Can't recurse into non-iterable type: ${r}`)}return s.value}function OT(e){return null===e?null:zT(e[0])?{value:null,recurse:!0}:{value:e,recurse:!1}}async function LT(e,t){const n=new Map;DT(e,t,n);for(const e of Array.from(n.keys())){const t=n.get(e);if(He(t)){const r=await t;n.set(e,r)}}return DT(e,t,n)}function zT(e){let t=!1;if(Xe().get("IS_BROWSER"))t=e instanceof TextDecoder;else{const{StringDecoder:r}=n(551);t=e instanceof r}return null!=e&&!ArrayBuffer.isView(e)&&(Array.isArray(e)||"object"==typeof e&&!(e instanceof pa)&&!(e instanceof Promise)&&!t)}function PT(e){return e instanceof pa?{value:e.clone(),recurse:!1}:zT(e)?{value:null,recurse:!0}:{value:e,recurse:!1}}class BT{constructor(e){if(this.capacity=e,this.begin=0,this.end=0,null==e)throw new RangeError("Can't create a ring buffer of unknown capacity.");if(e<1)throw new RangeError("Can't create ring buffer of capacity < 1.");this.data=new Array(e),this.doubledCapacity=2*e}wrap(e){for(;e<0;)e+=this.doubledCapacity;return e%this.doubledCapacity}get(e){if(e<0)throw new RangeError("Can't get item at a negative index.");return this.data[e%this.capacity]}set(e,t){if(e<0)throw new RangeError("Can't set item at a negative index.");this.data[e%this.capacity]=t}length(){let e=this.end-this.begin;return e<0&&(e=this.doubledCapacity+e),e}isFull(){return this.length()===this.capacity}isEmpty(){return 0===this.length()}push(e){if(this.isFull())throw new RangeError("Ring buffer is full.");this.set(this.end,e),this.end=this.wrap(this.end+1)}pushAll(e){for(const t of e)this.push(t)}pop(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");this.end=this.wrap(this.end-1);const e=this.get(this.end);return this.set(this.end,void 0),e}unshift(e){if(this.isFull())throw new RangeError("Ring buffer is full.");this.begin=this.wrap(this.begin-1),this.set(this.begin,e)}shift(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");const e=this.get(this.begin);return this.set(this.begin,void 0),this.begin=this.wrap(this.begin+1),e}shuffleExcise(e){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");const t=this.wrap(this.begin+e),n=this.get(t);return this.set(t,this.pop()),n}}class VT extends BT{constructor(){super(VT.INITIAL_CAPACITY)}isFull(){return!1}push(e){super.isFull()&&this.expand(),super.push(e)}unshift(e){super.isFull()&&this.expand(),super.unshift(e)}expand(){const e=2*this.capacity,t=new Array(e),n=this.length();for(let e=0;e<n;e++)t[e]=this.get(this.wrap(this.begin+e));this.data=t,this.capacity=e,this.doubledCapacity=2*this.capacity,this.begin=0,this.end=n}}function UT(e){return new HT(e)}function WT(e){return new jT(e)}VT.INITIAL_CAPACITY=32;class GT{async toArray(){const e=[];let t=await this.next();for(;!t.done;)e.push(t.value),t=await this.next();return e}async toArrayForTest(){const e=this.prefetch(100),t=[];let n=await e.next();for(;!n.done;)t.push(n.value),n=await e.next();return t}async resolveFully(){let e=await this.next();for(;!e.done;)e=await this.next()}async resolveWhile(e){let t=await this.next(),n=e(t.value);for(;!t.done&&n;)t=await this.next(),n=e(t.value)}handleErrors(e){return new JT(this,e)}filter(e){return new ZT(this,e)}map(e){return new QT(this,e)}mapAsync(e){return new eE(this,e)}serialMapAsync(e){return new eE(this,e).serial()}flatmap(e){return new nE(this,e)}async forEachAsync(e){return this.map(e).resolveFully()}async serialForEach(e){return this.serialMapAsync(e).resolveWhile(e=>!0===e)}rowMajorBatch(e,t=!0){return new YT(this,e,t)}columnMajorBatch(e,t=!0,n=OT){return this.rowMajorBatch(e,t).map(e=>FT(e,n))}concatenate(e,t){return new rE(UT([this,e]),t)}take(e){return e<0||null==e?this:new XT(this,e)}skip(e){return e<0||null==e?this:new qT(this,e)}prefetch(e){return new iE(this,e)}shuffle(e,t){return new oE(this,e,t)}serial(){return new KT(this)}}class HT extends GT{constructor(e){super(),this.items=e,this.trav=0}summary(){return`Array of ${this.items.length} items`}async next(){if(this.trav>=this.items.length)return{value:null,done:!0};const e=this.items[this.trav];return this.trav++,{value:(t=e,function(e,t){return DT(e,t)}(t,PT)),done:!1};var t}}class jT extends GT{constructor(e){super(),this.nextFn=e}summary(){return"Function call"}async next(){try{return this.nextFn()}catch(e){throw e.message=`Error thrown while iterating through a dataset: ${e.message}`,e}}}class KT extends GT{constructor(e){super(),this.upstream=e,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Serial`}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){return this.upstream.next()}}class qT extends GT{constructor(e,t){super(),this.upstream=e,this.maxCount=t,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Skip`}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){for(;this.count++<this.maxCount;){const e=await this.upstream.next();if(e.done)return e;li(e.value)}return this.upstream.next()}}class XT extends GT{constructor(e,t){super(),this.upstream=e,this.maxCount=t,this.count=0}summary(){return`${this.upstream.summary()} -> Take`}async next(){return this.count++>=this.maxCount?{value:null,done:!0}:this.upstream.next()}}class YT extends GT{constructor(e,t,n=!0){super(),this.upstream=e,this.batchSize=t,this.enableSmallLastBatch=n,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> RowMajorBatch`}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){const e=[];for(;e.length<this.batchSize;){const t=await this.upstream.next();if(t.done)return this.enableSmallLastBatch&&e.length>0?{value:e,done:!1}:{value:null,done:!0};e.push(t.value)}return{value:e,done:!1}}}class ZT extends GT{constructor(e,t){super(),this.upstream=e,this.predicate=t,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Filter`}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){for(;;){const e=await this.upstream.next();if(e.done||this.predicate(e.value))return e;li(e.value)}}}class QT extends GT{constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return`${this.upstream.summary()} -> Map`}async next(){const e=await this.upstream.next();if(e.done)return{value:null,done:!0};const t=$a(e.value),n=this.transform(e.value),r=$a(n);for(const e of t)Ca(e,r)||e.dispose();return{value:n,done:!1}}}class JT extends GT{constructor(e,t){super(),this.upstream=e,this.handler=t,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> handleErrors`}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){for(;;)try{return await this.upstream.next()}catch(e){if(!this.handler(e))return{value:null,done:!0}}}}class eE extends GT{constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return`${this.upstream.summary()} -> AsyncMap`}async next(){const e=await this.upstream.next();if(e.done)return{value:null,done:!0};const t=$a(e.value),n=await this.transform(e.value),r=$a(n);for(const e of t)Ca(e,r)||e.dispose();return{value:n,done:!1}}}class tE extends GT{constructor(){super(),this.outputQueue=new VT,this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){for(;0===this.outputQueue.length();)if(!await this.pump())return{value:null,done:!0};return{value:this.outputQueue.shift(),done:!1}}}class nE extends tE{constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return`${this.upstream.summary()} -> Flatmap`}async pump(){const e=await this.upstream.next();if(e.done)return!1;const t=$a(e.value),n=this.transform(e.value),r=$a(n);this.outputQueue.pushAll(n);for(const e of t)Ca(e,r)||e.dispose();return!0}}class rE extends GT{constructor(e,t){super(),this.baseErrorHandler=t,this.lastRead=null,this.iterator=null,this.moreIterators=e}summary(){return"TODO: fill in upstream of chained summaries -> Chained"}async next(){return this.lastRead=this.readFromChain(this.lastRead),this.lastRead}async readFromChain(e){if(await e,null==this.iterator){const e=await this.moreIterators.next();if(e.done)return{value:null,done:!0};this.iterator=e.value,null!=this.baseErrorHandler&&(this.iterator=this.iterator.handleErrors(this.baseErrorHandler))}const t=await this.iterator.next();return t.done?(this.iterator=null,this.readFromChain(e)):t}}var sE;!function(e){e[e.FAIL=0]="FAIL",e[e.SHORTEST=1]="SHORTEST",e[e.LONGEST=2]="LONGEST"}(sE||(sE={}));class aE extends GT{constructor(e,t=sE.FAIL){super(),this.iterators=e,this.mismatchMode=t,this.count=0,this.currentPromise=null}summary(){return"{TODO: fill in upstream of zip summaries} -> Zip"}async nextState(e){await e;let t=0,n=0;const r=await LT(this.iterators,function(e){return e instanceof GT?{value:e.next().then(e=>(t++,e.done&&n++,e.value)),recurse:!1}:{value:null,recurse:!0}});if(t===n)return{value:null,done:!0};if(n>0)switch(this.mismatchMode){case sE.FAIL:throw new Error(`Zipped streams should have the same length. Mismatched at element ${this.count}.`);case sE.SHORTEST:return{value:null,done:!0};case sE.LONGEST:}return this.count++,{value:r,done:!1}}async next(){return this.currentPromise=this.nextState(this.currentPromise),this.currentPromise}}class iE extends GT{constructor(e,t){super(),this.upstream=e,this.bufferSize=t,this.buffer=new BT(t)}summary(){return`${this.upstream.summary()} -> Prefetch`}refill(){for(;!this.buffer.isFull();){const e=this.upstream.next();this.buffer.push(e)}}next(){return this.refill(),this.buffer.shift()}}class oE extends iE{constructor(e,t,n){super(e,t),this.upstream=e,this.windowSize=t,this.upstreamExhausted=!1,this.random=gd.alea(n||Xs().toString()),this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}randomInt(e){return Math.floor(this.random()*e)}chooseIndex(){return this.randomInt(this.buffer.length())}async serialNext(){for(this.upstreamExhausted||this.refill();!this.buffer.isEmpty();){const e=this.chooseIndex(),t=await this.buffer.shuffleExcise(e);if(!t.done)return this.refill(),t;this.upstreamExhausted=!0}return{value:null,done:!0}}}class uE{constructor(){this.size=null}batch(e,t=!0){const n=this;let r;return ie(e>0,()=>`batchSize needs to be positive, but it is\n      ${e}`),r=this.size===1/0||null==this.size?this.size:t?Math.ceil(this.size/e):Math.floor(this.size/e),lE(async()=>(await n.iterator()).columnMajorBatch(e,t,dE),r)}concatenate(e){const t=this;let n;return n=this.size===1/0||e.size===1/0?1/0:null!=this.size&&null!=e.size?this.size+e.size:null,lE(async()=>(await t.iterator()).concatenate(await e.iterator()),n)}filter(e){const t=this;let n;return n=this.size===1/0?1/0:null,lE(async()=>(await t.iterator()).filter(t=>ui(()=>e(t))),n)}async forEachAsync(e){return(await this.iterator()).forEachAsync(e)}map(e){const t=this;return lE(async()=>(await t.iterator()).map(t=>ui(()=>e(t))),this.size)}mapAsync(e){const t=this;return lE(async()=>(await t.iterator()).mapAsync(e),this.size)}prefetch(e){if(null==e)throw new RangeError("`Dataset.prefetch()` requires bufferSize to be specified.");const t=this;return lE(async()=>(await t.iterator()).prefetch(e),this.size)}repeat(e){const t=this;let n;return n=null!=this.size&&e>0?this.size*e:0===e?0:null!=this.size&&(void 0===e||e<0)?1/0:null,lE(async()=>{return n=WT(async()=>({value:await t.iterator(),done:!1})).take(e),new rE(n,r);var n,r},n)}skip(e){const t=this;let n;return n=null!=this.size&&e>=0&&this.size>=e?this.size-e:null!=this.size&&(this.size<e||void 0===e||e<0)?0:null,lE(async()=>(await t.iterator()).skip(e),n)}shuffle(e,t,n=!0){if(null==e||e<0)throw null==this.size?new RangeError("`Dataset.shuffle()` requires bufferSize to be specified."):new RangeError(`\`Dataset.shuffle()\` requires bufferSize to be specified.  If your data fits in main memory (for regular JS objects), and/or GPU memory (for \`tf.Tensor\`s), consider setting bufferSize to the dataset size (${this.size} elements)`);const r=this,s=gd.alea(t||Xs().toString());return lE(async()=>{let t=s.int32();return n&&(t+=s.int32()),(await r.iterator()).shuffle(e,t.toString())},this.size)}take(e){const t=this;let n;return n=null!=this.size&&this.size>e?e:null!=this.size&&this.size<=e?this.size:null,lE(async()=>(await t.iterator()).take(e),n)}async toArray(){if(this.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArray()}async toArrayForTest(){if(this.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArrayForTest()}}function lE(e,t=null){return new class extends uE{constructor(){super(...arguments),this.size=t}async iterator(){return e()}}}function cE(e){return lE(async()=>UT(e),e.length)}function hE(e){if(!zT(e))throw new Error("The argument to zip() must be an object or array.");let t;if(Array.isArray(e))for(let n=0;n<e.length;n++)t=null==t?e[n].size:Math.min(t,e[n].size);else if(e instanceof Object)for(const n in e)t=null==t?e[n].size:Math.min(t,e[n].size);return lE(async()=>function(e,t=sE.FAIL){return new aE(e,t)}(await LT(e,e=>{if(e instanceof uE)return{value:e.iterator(),recurse:!1};if(zT(e))return{value:null,recurse:!0};throw new Error("Leaves of the structure passed to zip() must be Datasets, not primitives.")}),sE.SHORTEST),t)}function dE(e){if(null===e)return null;return null==(t=e[0])||null===(n=t)||"object"!=typeof n&&"function"!=typeof n||Array.isArray(t)||"object"==typeof t&&t instanceof pa||Js(t)?{value:function(e){if(0===e.length)throw new Error("Can't make a batch of zero elements.");return e[0]instanceof pa?ep(e):Za(e)}(e),recurse:!1}:{value:null,recurse:!0};var t,n}uE.MAX_BUFFER_SIZE=1e4;class pE extends uE{constructor(e){super(),this.input=e}async iterator(){return(await this.input.iterator()).decodeUTF8().split("\n").map(e=>(e.endsWith("\r")&&(e=e.slice(0,-1)),e))}}const fE='"',mE=Symbol("out"),gE=Symbol("field"),yE=Symbol("quote"),bE=Symbol("quoteafterquote"),xE=Symbol("quoteinquote");class wE extends uE{async columnNames(){return this.columnNamesValidated||await this.setColumnNames(),this.configuredColumnsOnly?Object.keys(this.columnConfigs):this.fullColumnNames}async setColumnNames(){const e=await this.maybeReadHeaderLine();if(!this.fullColumnNames&&!e)throw new Error("Column names must be provided if there is no header line.");this.fullColumnNames&&e&&ie(e.length===this.fullColumnNames.length,()=>"The length of provided columnNames ("+this.fullColumnNames.length.toString()+") does not match the length of the header line read from file ("+e.length.toString()+")."),this.fullColumnNames||(this.fullColumnNames=e);const t=this.fullColumnNames.reduce((e,t)=>(e[t]=e[t]+1||1,e),{}),n=Object.keys(t).filter(e=>t[e]>1);if(ie(0===n.length,()=>"Duplicate column names found: "+n.toString()),this.columnConfigs)for(const e of Object.keys(this.columnConfigs))if(-1===this.fullColumnNames.indexOf(e))throw new Error('The key "'+e+'" provided in columnConfigs does not match any of the column names ('+this.fullColumnNames.toString()+").");this.columnNamesValidated=!0}async maybeReadHeaderLine(){if(this.hasHeader){const e=await this.base.iterator(),t=await e.next();if(t.done)throw new Error("No data was found for CSV parsing.");const n=t.value;return this.parseRow(n,!1)}return null}constructor(e,t){super(),this.input=e,this.hasHeader=!0,this.fullColumnNames=null,this.columnNamesValidated=!1,this.columnConfigs=null,this.configuredColumnsOnly=!1,this.delimiter=",",this.delimWhitespace=!1,this.base=new pE(e),t||(t={}),this.hasHeader=!1!==t.hasHeader,this.fullColumnNames=t.columnNames,this.columnConfigs=t.columnConfigs,this.configuredColumnsOnly=t.configuredColumnsOnly,t.delimWhitespace?(ie(null==t.delimiter,()=>"Delimiter should not be provided when delimWhitespace is true."),this.delimWhitespace=!0,this.delimiter=" "):this.delimiter=t.delimiter?t.delimiter:","}async iterator(){this.columnNamesValidated||await this.setColumnNames();let e=await this.base.iterator();return this.hasHeader&&(e=e.skip(1)),e.map(e=>this.makeDataElement(e))}makeDataElement(e){const t=this.parseRow(e),n={},r={};for(let s=0;s<this.fullColumnNames.length;s++){const a=this.fullColumnNames[s],i=this.columnConfigs?this.columnConfigs[a]:null;if(!this.configuredColumnsOnly||i){const o=t[s];let u=null;if(""===o)if(i&&void 0!==i.default)u=i.default;else{if(i&&(i.required||i.isLabel))throw new Error(`Required column ${a} is empty in this line: ${e}`);u=void 0}else{const e=Number(o);if(isNaN(e))u=i&&"bool"===i.dtype?this.getBoolean(o):o;else if(i&&i.dtype)switch(i.dtype){case"float32":default:u=e;break;case"int32":u=Math.floor(e);break;case"bool":u=this.getBoolean(o)}else u=e}i&&i.isLabel?r[a]=u:n[a]=u}}return 0===Object.keys(r).length?n:{xs:n,ys:r}}getBoolean(e){return"1"===e||"true"===e.toLowerCase()?1:0}parseRow(e,t=!0){const n=[];let r=0;const s=e.length;let a=mE;for(let t=0;t<s;t++)switch(a){case mE:switch(e.charAt(t)){case fE:r=t+1,a=yE;break;case this.delimiter:if(r=t+1," "===this.delimiter&&this.delimWhitespace)break;n.push(""),a=mE;break;default:a=gE,r=t}break;case gE:e.charAt(t)===this.delimiter&&(n.push(e.substring(r,t)),a=mE,r=t+1);break;case yE:e.charAt(t)===fE&&(a=bE);break;case bE:switch(e.charAt(t)){case this.delimiter:n.push(e.substring(r,t-1)),a=mE,r=t+1;break;case fE:a=yE;break;default:a=xE}break;case xE:e.charAt(t)===fE&&(a=yE)}if(a===bE?n.push(e.substring(r,s-1)):n.push(e.substring(r)),t&&n.length!==this.fullColumnNames.length)throw new Error(`Invalid row in csv file. Should have ${this.fullColumnNames.length} elements in a row, but got ${n}`);return n}}class vE extends GT{constructor(e){super(),this.microphoneConfig=e,this.isClosed=!1,this.fftSize=e.fftSize||1024;const t=Math.log2(this.fftSize);if(this.fftSize<0||t<4||t>14||!Number.isInteger(t))throw new Error(`Invalid fftSize: it must be a power of 2 between 2 to 4 and 2 to 14, but got ${this.fftSize}`);if(this.numFrames=e.numFramesPerSpectrogram||43,this.sampleRateHz=e.sampleRateHz,this.columnTruncateLength=e.columnTruncateLength||this.fftSize,this.audioTrackConstraints=e.audioTrackConstraints,this.smoothingTimeConstant=e.smoothingTimeConstant||0,this.includeSpectrogram=!1!==e.includeSpectrogram,this.includeWaveform=!0===e.includeWaveform,!this.includeSpectrogram&&!this.includeWaveform)throw new Error("Both includeSpectrogram and includeWaveform are false. At least one type of data should be returned.")}summary(){return"microphone"}static async create(e={}){if(!Xe().get("IS_BROWSER"))throw new Error("microphone API is only supported in browser environment.");const t=new vE(e);return await t.start(),t}async start(){try{this.stream=await navigator.mediaDevices.getUserMedia({audio:null==this.audioTrackConstraints||this.audioTrackConstraints,video:!1})}catch(e){throw new Error(`Error thrown while initializing video stream: ${e.message}`)}if(!this.stream)throw new Error("Could not obtain audio from microphone.");const e=window.AudioContext||window.webkitAudioContext;if(this.audioContext=new e,this.sampleRateHz){if(this.audioContext.sampleRate!==this.sampleRateHz)throw new Error(`Mismatch in sampling rate: Expected: ${this.sampleRateHz}; Actual: ${this.audioContext.sampleRate}`)}else this.sampleRateHz=this.audioContext.sampleRate;const t=this.audioContext.createMediaStreamSource(this.stream);this.analyser=this.audioContext.createAnalyser(),this.analyser.fftSize=2*this.fftSize,this.analyser.smoothingTimeConstant=this.smoothingTimeConstant,t.connect(this.analyser),this.freqData=new Float32Array(this.fftSize),this.timeData=new Float32Array(this.fftSize)}async next(){if(this.isClosed)return{value:null,done:!0};let e,t;const n=await this.getAudioData();if(this.includeSpectrogram){const t=this.flattenQueue(n.freqDataQueue);e=this.getTensorFromAudioDataArray(t,[this.numFrames,this.columnTruncateLength,1])}if(this.includeWaveform){const e=this.flattenQueue(n.timeDataQueue);t=this.getTensorFromAudioDataArray(e,[this.numFrames*this.fftSize,1])}return{value:{spectrogram:e,waveform:t},done:!1}}async capture(){return(await this.next()).value}async getAudioData(){const e=[],t=[];let n=0;return new Promise(r=>{const s=setInterval(()=>{this.includeSpectrogram&&(this.analyser.getFloatFrequencyData(this.freqData),this.freqData[0]===-1/0&&r({freqDataQueue:e,timeDataQueue:t}),e.push(this.freqData.slice(0,this.columnTruncateLength))),this.includeWaveform&&(this.analyser.getFloatTimeDomainData(this.timeData),t.push(this.timeData.slice())),++n===this.numFrames&&(clearInterval(s),r({freqDataQueue:e,timeDataQueue:t}))},this.fftSize/this.sampleRateHz*1e3)})}stop(){this.isClosed||(this.isClosed=!0,this.analyser.disconnect(),this.audioContext.close(),null!=this.stream&&this.stream.getTracks().length>0&&this.stream.getTracks()[0].stop())}toArray(){throw new Error("Can not convert infinite audio stream to array.")}getSampleRate(){return this.sampleRateHz}flattenQueue(e){const t=e[0].length,n=new Float32Array(e.length*t);return e.forEach((e,r)=>n.set(e,r*t)),n}getTensorFromAudioDataArray(e,t){const n=new Float32Array(le(t));return n.set(e,n.length-e.length),Za(n,t)}}class kE extends GT{constructor(e,t){if(super(),this.webcamVideoElement=e,this.webcamConfig=t,this.isClosed=!0,this.resize=!1,this.needToResize())if(this.resize=!0,this.cropSize=[this.webcamConfig.resizeHeight,this.webcamConfig.resizeWidth],this.cropBoxInd=sp([0],"int32"),this.webcamConfig.centerCrop){const e=1*this.webcamConfig.resizeWidth/this.webcamVideoElement.width,t=1*this.webcamConfig.resizeHeight/this.webcamVideoElement.height,n=(1-e)/2,r=(1-t)/2,s=n+e,a=t+r;this.cropBox=ap([r,n,a,s],[1,4])}else this.cropBox=ap([0,0,1,1],[1,4])}summary(){return"webcam"}static async create(e,t={}){if(!Xe().get("IS_BROWSER"))throw new Error("tf.data.webcam is only supported in browser environment.");if(!e){if(e=document.createElement("video"),!t.resizeWidth||!t.resizeHeight)throw new Error("Please provide webcam video element, or resizeWidth and resizeHeight to create a hidden video element.");e.width=t.resizeWidth,e.height=t.resizeHeight}const n=new kE(e,t);return await n.start(),n}async start(){this.webcamConfig.facingMode&&ie("user"===this.webcamConfig.facingMode||"environment"===this.webcamConfig.facingMode,()=>`Invalid webcam facing mode: ${this.webcamConfig.facingMode}. Please provide 'user' or 'environment'`);try{this.stream=await navigator.mediaDevices.getUserMedia({video:{deviceId:this.webcamConfig.deviceId,facingMode:this.webcamConfig.facingMode?this.webcamConfig.facingMode:"user",width:this.webcamVideoElement.width,height:this.webcamVideoElement.height}})}catch(e){throw e.message=`Error thrown while initializing video stream: ${e.message}`,e}if(!this.stream)throw new Error("Could not obtain video from webcam.");try{this.webcamVideoElement.srcObject=this.stream}catch(e){console.log(e),this.webcamVideoElement.src=window.URL.createObjectURL(this.stream)}return this.webcamVideoElement.play(),this.isClosed=!1,new Promise(e=>{this.webcamVideoElement.onloadedmetadata=()=>{e()}})}async next(){if(this.isClosed)return{value:null,done:!0};let e;try{e=Hu(this.webcamVideoElement)}catch(e){throw new Error(`Error thrown converting video to pixels: ${JSON.stringify(e)}`)}if(!this.resize)return{value:e,done:!1};try{return{value:this.cropAndResizeFrame(e),done:!1}}catch(e){throw new Error(`Error thrown cropping the video: ${e.message}`)}finally{e.dispose()}}needToResize(){return!(!this.webcamConfig.resizeWidth||!this.webcamConfig.resizeHeight||this.webcamVideoElement.width===this.webcamConfig.resizeWidth&&this.webcamVideoElement.height===this.webcamConfig.resizeHeight)}cropAndResizeFrame(e){return ui(()=>{const t=dh(No(e,"float32"),0);let n;n=Mf.cropAndResize(t,this.cropBox,this.cropBoxInd,this.cropSize,"bilinear");const r=n.shape;return sc(n,r.slice(1))})}async capture(){return(await this.next()).value}stop(){this.stream.getTracks().forEach(e=>e.stop());try{this.webcamVideoElement.srcObject=null}catch(e){console.log(e),this.webcamVideoElement.src=null}this.isClosed=!0}toArray(){throw new Error("Can not convert infinite video stream to array.")}}class NE{}class IE extends GT{split(e){return new SE(this,e)}}class SE extends IE{constructor(e,t){super(),this.upstream=e,this.impl=new TE(e,t)}summary(){return this.impl.summary()}async next(){return this.impl.next()}}class TE extends tE{constructor(e,t){super(),this.upstream=e,this.separator=t,this.carryover=""}summary(){return`${this.upstream.summary()} -> Split('${this.separator}')`}async pump(){const e=await this.upstream.next();if(e.done)return""!==this.carryover&&(this.outputQueue.push(this.carryover),this.carryover="",!0);const t=e.value.split(this.separator);t[0]=this.carryover+t[0];for(const e of t.slice(0,-1))this.outputQueue.push(e);return this.carryover=t[t.length-1],!0}}class EE extends GT{decodeUTF8(){return new CE(this)}}class CE extends IE{constructor(e){super(),this.upstream=e,this.impl=new $E(e)}summary(){return this.impl.summary()}async next(){return this.impl.next()}}class $E extends tE{constructor(e){if(super(),this.upstream=e,Xe().get("IS_BROWSER"))this.decoder=new TextDecoder("utf-8");else{const{StringDecoder:e}=n(530);this.decoder=new e("utf8")}}summary(){return`${this.upstream.summary()} -> Utf8`}async pump(){const e=await this.upstream.next();let t,n;return!e.done&&(t=e.value,n=Xe().get("IS_BROWSER")?this.decoder.decode(t,{stream:!0}):this.decoder.write(Buffer.from(t.buffer)),this.outputQueue.push(n),!0)}}class AE extends EE{constructor(e,t={}){super(),this.file=e,this.options=t,ie(e instanceof Uint8Array||!!Xe().get("IS_BROWSER")&&(e instanceof File||e instanceof Blob),()=>"FileChunkIterator only supports File, Blob and Uint8Array right now."),this.offset=t.offset||0,this.chunkSize=t.chunkSize||1048576}summary(){return`FileChunks ${this.file}`}async next(){if(this.offset>=(this.file instanceof Uint8Array?this.file.byteLength:this.file.size))return{value:null,done:!0};const e=new Promise((e,t)=>{const n=this.offset+this.chunkSize;if(this.file instanceof Uint8Array)e(new Uint8Array(this.file.slice(this.offset,n)));else{const r=new FileReader;r.onload=n=>{let s=r.result;if(s instanceof ArrayBuffer&&(s=new Uint8Array(s)),!(s instanceof Uint8Array))return t(new TypeError("FileReader returned unknown type."));e(s)},r.onabort=e=>t(new Error("Aborted")),r.onerror=e=>t(new Error(e.type));const s=this.file.slice(this.offset,n);r.readAsArrayBuffer(s)}this.offset=n});return{value:await e,done:!1}}}function RE(e){return"string"==typeof e&&"file://"===e.slice(0,7)}class _E extends NE{constructor(e,t={}){super(),this.input=e,this.options=t}async iterator(){if(RE(this.input)&&Xe().get("IS_NODE")){const e=n(108);this.input=e.readFileSync(this.input.slice(7))}return new AE(this.input,this.options)}}class DE extends NE{constructor(e,t={}){super(),this.url=e,this.fileOptions=t}async iterator(){return RE(this.url)?new _E(this.url,this.fileOptions).iterator():async function(e,t={},n){let r,s;var a;"string"==typeof e?r=e:(r=e.url,s={method:(a=e).method,headers:a.headers,body:a.body,mode:a.mode,credentials:a.credentials,cache:a.cache,redirect:a.redirect,referrer:a.referrer,integrity:a.integrity});const i=await(n||Ys)(r,s);if(i.ok){const e=new Uint8Array(await i.arrayBuffer());return new AE(e,t)}throw new Error(i.statusText)}(this.url,this.fileOptions)}}function FE(e,t={}){return new wE(new DE(e),t)}function ME(e){const t=WT(e);return lE(async()=>t)}function OE(e){return lE(async()=>{const t=await e();return WT(()=>t.next())})}async function LE(e,t){return kE.create(e,t)}async function zE(e){return vE.create(e)}const PE="4.22.0";function BE(e,t){Array.isArray(e)||(e=[e]),e.forEach(e=>{null!=e&&ie("complex64"!==e.dtype,()=>`${t} does not support complex64 tensors in the CPU backend.`)})}const VE=yp;class UE extends Y{nextDataId(){return UE.nextDataId++}constructor(){super(),this.blockSize=48,this.firstUse=!0,this.data=new X(this,ai())}write(e,t,n){this.firstUse&&(this.firstUse=!1,Xe().get("IS_NODE")&&xs("\n============================\nHi, looks like you are running TensorFlow.js in Node.js. To speed things up dramatically, install our node backend, visit https://github.com/tensorflow/tfjs-node for more details. \n============================"));const r={id:this.nextDataId()};return this.data.set(r,{values:e,dtype:n,refCount:1}),r}makeTensorInfo(e,t,n){let r;if("string"===t&&null!=n&&n.length>0&&$e(n[0])){const s=n.map(e=>Zs(e));r=this.write(s,e,t)}else r=this.write(n,e,t);return{dataId:r,shape:e,dtype:t}}refCount(e){return this.data.has(e)?this.data.get(e).refCount:0}incRef(e){this.data.get(e).refCount++}decRef(e){this.data.has(e)&&this.data.get(e).refCount--}move(e,t,n,r,s){this.data.set(e,{values:t,dtype:r,refCount:s})}numDataIds(){return this.data.numDataIds()}async read(e){return this.readSync(e)}readSync(e){const{dtype:t,complexTensorInfos:n}=this.data.get(e);return"complex64"===t?dm(this.readSync(n.real.dataId),this.readSync(n.imag.dataId)):ze(this.data.get(e).values,t)}bufferSync(e){const t=this.readSync(e.dataId);if("string"===e.dtype)try{const n=t.map(e=>Qs(e));return ko(e.shape,e.dtype,n)}catch(e){throw new Error("Failed to decode encoded string bytes into utf-8")}return ko(e.shape,e.dtype,t)}makeOutput(e,t,n){return ai().makeTensorFromTensorInfo(this.makeTensorInfo(t,n,e),this)}disposeData(e,t=!1){if(this.data.has(e)){if(this.data.get(e).refCount--,!t&&this.data.get(e).refCount>0)return!1;const{complexTensorInfos:n}=this.data.get(e);null!=n&&(this.disposeData(n.real.dataId,!0),this.disposeData(n.imag.dataId,!0)),this.data.delete(e)}return!0}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}async time(e){const t=Xs();return e(),{kernelMs:Xs()-t}}memory(){return{unreliable:!0,reasons:["The reported memory is an upper bound. Due to automatic garbage collection, the true allocated memory may be less."]}}where(e){BE([e],"where");const t=this.readSync(e.dataId);return VE(e.shape,t)}dispose(){}floatPrecision(){return 32}epsilon(){return super.epsilon()}}function WE(e){const t=new Float32Array(e.length);for(let n=0;n<e.length;++n)t[n]=Math.abs(e[n]);return t}UE.nextDataId=0;const GE={kernelName:et,backendName:"cpu",kernelFunc:e=>{const{x:t}=e.inputs,n=e.backend;BE(t,"abs");let r=new Float32Array(le(t.shape));return r=WE(n.data.get(t.dataId).values),n.makeOutput(r,t.shape,t.dtype)}};function HE(e){return(t,n,r,s,a)=>{const i=ru(t,n),o=i.length,u=Me(i),l=ke(a,le(i)),c=t.length,h=n.length,d=Me(t),p=Me(n),f=tu(t,i),m=tu(n,i);if(f.length+m.length===0)for(let t=0;t<l.length;++t)l[t]=e(r[t%r.length],s[t%s.length]);else for(let t=0;t<l.length;++t){const n=Ge(t,o,u),a=n.slice(-c);f.forEach(e=>a[e]=0);const i=We(a,c,d),g=n.slice(-h);m.forEach(e=>g[e]=0);const y=We(g,h,p);l[t]=e(r[i],s[y])}return[l,i]}}function jE(e){const{inputs:t,backend:n}=e,{real:r,imag:s}=t,a=n.data.get(r.dataId).values,i=n.data.get(s.dataId).values,o=n.makeTensorInfo(r.shape,"complex64");return n.data.get(o.dataId).complexTensorInfos={real:n.makeTensorInfo(r.shape,"float32",a),imag:n.makeTensorInfo(s.shape,"float32",i)},o}const KE={kernelName:Et,backendName:"cpu",kernelFunc:jE};function qE(e,t,n="float32"){if("complex64"===n)return jE({inputs:{real:qE(e,t,"float32"),imag:qE(e,t,"float32")},backend:e});const r=Be(le(t),n);return e.makeTensorInfo(t,n,r)}function XE(e){const{inputs:t,backend:n}=e,{x:r}=t;return n.incRef(r.dataId),{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}const YE={kernelName:yn,backendName:"cpu",kernelFunc:XE};function ZE(e){const{inputs:t,backend:n}=e,{input:r}=t,s=n.data.get(r.dataId).complexTensorInfos.real,a=n.data.get(s.dataId).values;return n.makeTensorInfo(s.shape,s.dtype,a)}const QE={kernelName:mr,backendName:"cpu",kernelFunc:ZE};function JE(e,t,n,r){if("int32"===r)return[t,"int32",Int32Array.from(e)];if("bool"===r){const r=qs([0],n),[s,a]=HE((e,t)=>e!==t?1:0)(t,[],e,r,"bool");return[a,"bool",s]}throw new Error(`Error in Cast: failed to cast ${n} to ${r}`)}function eC(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{dtype:a}=r;if("complex64"===a){if("complex64"===s.dtype)return XE({inputs:{x:s},backend:n});const e=qE(n,s.shape,s.dtype),t=eC({inputs:{x:s},backend:n,attrs:{dtype:"float32"}}),r=jE({inputs:{real:t,imag:e},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),r}if("complex64"===s.dtype){const e=ZE({inputs:{input:s},backend:n}),t=eC({inputs:{x:e},backend:n,attrs:{dtype:a}});return n.disposeIntermediateTensorInfo(e),t}if(!Te(s.dtype,a)){const e=XE({inputs:{x:s},backend:n});return{dataId:e.dataId,shape:e.shape,dtype:a}}const i=n.data.get(s.dataId).values,[o,u,l]=JE(i,s.shape,s.dtype,a);return n.makeTensorInfo(o,u,l)}const tC={kernelName:It,backendName:"cpu",kernelFunc:eC};function nC(e,t,n,r){return null==n?({inputs:n,backend:s})=>{const{a,b:i}=n,o=s;BE([a,i],e);const u=o.data.get(a.dataId).values,l=o.data.get(i.dataId).values,c="string"===a.dtype?jm(u):u,h="string"===a.dtype?jm(l):l,d=r||a.dtype,[p,f]=t(a.shape,i.shape,c,h,d);return o.makeTensorInfo(f,d,p)}:({inputs:e,backend:s})=>{const{a,b:i}=e,o=s;if("complex64"===a.dtype||"complex64"===i.dtype){const e=eC({inputs:{x:a},backend:o,attrs:{dtype:"complex64"}}),t=o.data.get(e.dataId),r=t.complexTensorInfos.real,s=t.complexTensorInfos.imag,u=o.data.get(r.dataId).values,l=o.data.get(s.dataId).values,c=eC({inputs:{x:i},backend:o,attrs:{dtype:"complex64"}}),h=o.data.get(c.dataId),d=h.complexTensorInfos.real,p=h.complexTensorInfos.imag,f=o.data.get(d.dataId).values,m=o.data.get(p.dataId).values,[g,y,b]=n(a.shape,i.shape,u,l,f,m),x=o.makeTensorInfo(b,"float32",g),w=o.makeTensorInfo(b,"float32",y),v=jE({inputs:{real:x,imag:w},backend:o});return o.disposeIntermediateTensorInfo(e),o.disposeIntermediateTensorInfo(c),o.disposeIntermediateTensorInfo(x),o.disposeIntermediateTensorInfo(w),v}{const e=o.data.get(a.dataId).values,n=o.data.get(i.dataId).values,s=r||a.dtype,[u,l]=t(a.shape,i.shape,e,n,s);return o.makeTensorInfo(l,s,u)}}}function rC(e){return(t,n,r,s,a,i)=>{const o=ru(t,n),u=le(o),l=o.length,c=Me(o),h=ke("float32",u),d=ke("float32",u),p=tu(t,o),f=tu(n,o),m=dm(r,s),g=dm(a,i),y=t.length,b=Me(t),x=n.length,w=Me(n);if(p.length+f.length===0)for(let t=0;t<h.length;t++){const n=t%m.length,r=t%g.length,s=e(m[2*n],m[2*n+1],g[2*r],g[2*r+1]);h[t]=s.real,d[t]=s.imag}else for(let t=0;t<h.length;t++){const n=Ge(t,l,c),r=n.slice(-y);p.forEach(e=>r[e]=0);const s=We(r,y,b),a=n.slice(-x);f.forEach(e=>a[e]=0);const i=We(a,x,w),o=e(m[2*s],m[2*s+1],g[2*i],g[2*i+1]);h[t]=o.real,d[t]=o.imag}return[h,d,o]}}const sC=HE((e,t)=>e+t),aC=rC((e,t,n,r)=>({real:e+n,imag:t+r})),iC=nC(rt,sC,aC),oC={kernelName:rt,backendName:"cpu",kernelFunc:iC};function uC(e,t,n,r,s){const a=le(r),i=Be(s,n);for(let n=0;n<e.length;n++){const r=e[n];if(r<0)throw new Error("Input x must be non-negative!");r>=s||(i[r]+=a>0?t[n]:1)}return i}function lC(e,t,n,r=!1){const s=e.shape[0],a=e.shape[1],i=ko([s,n],t.dtype);for(let o=0;o<s;o++)for(let s=0;s<a;s++){const a=e.get(o,s);if(a<0)throw new Error("Input x must be non-negative!");a>=n||(r?i.set(1,o,a):t.size>0?i.set(i.get(o,a)+t.get(o,s),o,a):i.set(i.get(o,a)+1,o,a))}return i}const cC=HE((e,t)=>e&t),hC=nC(vt,cC),dC={kernelName:vt,backendName:"cpu",kernelFunc:hC};function pC(e){return(t,n,r)=>{const s=Ne(n,t.length);for(let n=0;n<t.length;++n)s[n]=e(t[n],r);return s}}function fC(e,t,n){return mC(e,pC(t),n)}function mC(e,t,n){return({inputs:r,attrs:s,backend:a})=>{const{x:i}=r;BE(i,e);const o=a,u=o.data.get(i.dataId).values;let l;if("string"===i.dtype){if(!Array.isArray(u))throw new Error("String tensor's value was not an instance of Array");l=jm(u)}else l=u;const c=n||i.dtype,h=t(l,c,s);return o.makeTensorInfo(i.shape,c,h)}}const gC=pC(e=>Math.ceil(e)),yC=mC(St,gC),bC={kernelName:St,backendName:"cpu",kernelFunc:yC};function xC(e,t,n,r){const s=Ne(n,le(t));if(r&&"string"!==n){let t=0;e.forEach(e=>{const n=le(e.shape);s.set(e.vals,t),t+=n})}else{let r=0;e.forEach(e=>{const a="string"===n?jm(e.vals):e.vals;let i=0;for(let n=0;n<e.shape[0];++n){const o=n*t[1]+r;for(let t=0;t<e.shape[1];++t)s[o+t]=a[i++]}r+=e.shape[1]})}return s}const wC=HE((e,t)=>e===t?1:0),vC=nC(nn,wC,null,"bool"),kC={kernelName:nn,backendName:"cpu",kernelFunc:vC},NC=pC(e=>Math.exp(e)),IC=mC(rn,NC,"float32"),SC={kernelName:rn,backendName:"cpu",kernelFunc:IC},TC=pC(e=>Math.expm1(e)),EC=mC(an,TC),CC={kernelName:an,backendName:"cpu",kernelFunc:EC},$C=pC(e=>Math.floor(e)),AC=mC(cn,$C),RC={kernelName:cn,backendName:"cpu",kernelFunc:AC},_C=HE((e,t)=>Math.floor(e/t)),DC=nC(hn,_C,null,"int32"),FC={kernelName:hn,backendName:"cpu",kernelFunc:DC};function MC(e,t,n,r,s,a,i,o,u){const l=ko([r,a],n);for(let n=0;n<r;n++){const r=[];let c=0;for(let t=0;t<s;t++){const a=e[n*s+t];c+=a*i[t],r.push(a)}if(c<0||c>=u/a)throw new Error(`Invalid indices: ${r} does not index into ${o}`);for(let e=0;e<a;e++)l.values[n*a+e]=t.get(...t.indexToLoc(c*a+e))}return l}function OC(e,t,n){const r=ko(n,e.dtype);for(let n=0;n<r.size;++n){const s=r.indexToLoc(n).slice(),a=s[0],i=s[2],o=t.locToIndex([a,i]);s[2]=t.values[o];const u=e.locToIndex(s);0<=u&&u<e.values.length&&(r.values[n]=e.values[u])}return r}const LC=HE((e,t)=>e>t?1:0),zC=nC(mn,LC,null,"bool"),PC={kernelName:mn,backendName:"cpu",kernelFunc:zC},BC=HE((e,t)=>e>=t?1:0),VC=nC(gn,BC,null,"bool"),UC={kernelName:gn,backendName:"cpu",kernelFunc:VC},WC=HE((e,t)=>e<t?1:0),GC=nC(In,WC,null,"bool"),HC={kernelName:In,backendName:"cpu",kernelFunc:GC},jC=HE((e,t)=>e<=t?1:0),KC=nC(Sn,jC,null,"bool"),qC={kernelName:Sn,backendName:"cpu",kernelFunc:KC};function XC(e,t,n){const r=(t-e)/(n-1),s=Be(n,"float32");s[0]=e;for(let e=1;e<s.length;e++)s[e]=s[e-1]+r;return s}const YC=pC(e=>Math.log(e)),ZC=mC(En,YC),QC={kernelName:En,backendName:"cpu",kernelFunc:ZC};function JC(e,t,n,r){const s=ke(r,le(n));for(let n=0;n<s.length;++n){const r=n*t;let a=e[r];for(let n=0;n<t;++n){const t=e[r+n];(Number.isNaN(t)||t>a)&&(a=t)}s[n]=a}return s}const e$=HE((e,t)=>Math.max(e,t)),t$=nC(Pn,e$),n$={kernelName:Pn,backendName:"cpu",kernelFunc:t$},r$=HE((e,t)=>Math.min(e,t)),s$=nC(Kn,r$),a$={kernelName:Kn,backendName:"cpu",kernelFunc:s$},i$=HE((e,t)=>e*t),o$=rC((e,t,n,r)=>({real:e*n-t*r,imag:e*r+t*n})),u$=nC(Zn,i$,o$),l$={kernelName:Zn,backendName:"cpu",kernelFunc:u$};function c$(e,t,n){const r=Ks(-1,n);return i$([],t,r,e,n)}const h$={kernelName:Qn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r}=t;BE(r,"neg");const s=n.data.get(r.dataId).values,[a,i]=c$(s,r.shape,r.dtype);return n.makeTensorInfo(i,r.dtype,a)}},d$=HE((e,t)=>e!==t?1:0),p$=nC(Jn,d$,null,"bool"),f$={kernelName:Jn,backendName:"cpu",kernelFunc:p$};function m$(e,t,n,r,s){const a=t.length,i=le(t),o=Me(t),u=Me(s),l=ke(n,le(s));for(let t=0;t<i;++t){const n=Ge(t,a,o),s=new Array(n.length);for(let e=0;e<s.length;e++)s[e]=n[r[e]];l[We(s,a,u)]=e[t]}return l}function g$(e){const{inputs:t,attrs:n,backend:r}=e,{x:s}=t,{perm:a}=n;BE(s,"transpose");const i=s.shape.length,o=new Array(i);for(let e=0;e<o.length;e++)o[e]=s.shape[a[e]];const u=m$(r.data.get(s.dataId).values,s.shape,s.dtype,a,o);return{dataId:r.write(u,o,s.dtype),shape:o,dtype:s.dtype}}const y$={kernelName:os,backendName:"cpu",kernelFunc:g$};function b$(e,t,n,r){const[s,a]=Jc(e,r),i=ka(t,"int32"),o=Be(le(s),i),u=le(a);for(let e=0;e<o.length;++e){const t=e*u;let r=1;for(let e=0;e<u;++e)r*=n[t+e];o[e]=r}return{outVals:o,outShape:s,outDtype:i}}const x$={kernelName:cr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a,keepDims:i}=r;BE(s,"prod");const o=s.shape.length,u=we(a,s.shape),l=nh(u,o);let c=u,h=s;const d=[];null!=l&&(h=g$({inputs:{x:s},backend:n,attrs:{perm:l}}),d.push(h),c=sh(c.length,o));const p=n.data.get(h.dataId).values,{outVals:f,outShape:m,outDtype:g}=b$(h.shape,h.dtype,p,c);let y=m;return i&&(y=eh(m,u)),d.forEach(e=>n.disposeIntermediateTensorInfo(e)),n.makeTensorInfo(y,g,f)}};function w$(e,t){const n=e.slice(0,t);for(;n.length<t;)n.push(1);for(let r=t;r<e.length;r++)n[t-1]*=e[r];return n}function v$(e,t,n,r,s,a,i,o){if(0===e.length)throw new Error("paramsNestedSplits must be non empty");if(0===t[0].length)throw new Error("Split tensors must not be scalars");if(function(e,t,n){e.forEach((e,r)=>{if(e<0||e>=n){const s=Ge(r,t.length,Me(t)).join(",");throw new Error(`indices[${s}] = ${e} is not in [0, ${n})`)}})}(a,i,t[0][0]-1),0===r.length)throw new Error("params.rank must be nonzero");const u=r[0],{outSplits:l,valueSlices:c,numValues:h}=function(e,t,n,r){const s=[];let a=0;const i=t.length-1+n.length,o=new Array(i).fill(null).map(()=>[0]);!function(e,t){for(let n=0;n<e.length;++n){const r=e[n],s=n===e.length-1?t:e[n+1].length;if(0===r.length)throw new Error("Ragged splits may not be empty");if(r[0]<0)throw new Error("Ragged splits must be non-negative");if(r[r.length-1]>s)throw new Error("Ragged splits must not point past values");for(let e=1;e<r.length;++e)if(r[e-1]>r[e])throw new Error("Ragged splits must be sorted in ascending order")}}(n,r);let u=1;for(let e=0;e<t.length-1;++e){u*=t[e];const n=t[e+1];for(let t=1;t<u+1;++t)o[e].push(t*n)}for(let r=0;r<e.length;++r){let i=e[r],u=e[r]+1;for(let e=0;e<n.length;++e){const r=n[e],s=e+t.length-1;if(s>=0){const e=o[s],t=e[e.length-1]-r[i];for(let e=i;e<u;++e)o[s].push(r[e+1]+t)}i=r[i],u=r[u]}u!==i&&(s.push([i,u]),a+=u-i)}return{outSplits:o,valueSlices:s,numValues:a}}(a,i,e,u),d=function(e){const t=[];for(let n=0;n<e.length;++n){const r=Ne("int32",e[n].length);t.push(r),e[n].forEach((e,t)=>r[t]=e)}return t}(l),p=function(e,t,n,r,s){const a=t.slice();a[0]=s;const i=Ne(n,le(a)),o=e.length;return function(e,t,n,r,s,a){const i=w$(t,2)[1],o=w$(a,2)[1];let u=0;for(const t of n)for(let n=t[0];n<t[1];++n){for(let t=0;t<r;++t)s[u*o+t]=e[n*i+t];++u}}(e,t,r,0===o?0:o/t[0],i,a),[i,a]}(n,r,s,c,h);return[d,p[0],p[1]]}const k$=2147483647;function N$(e,t,n,r,s,a,i){if(t.length>1)throw new Error("starts must be a scalar or vector");if(s.length>1)throw new Error("limits must be a scalar or vector");if(i.length>1)throw new Error("deltas must be a scalar or vector");const o=0===t.length,u=0===s.length,l=0===i.length,c=[];o||c.push(t[0]),u||c.push(s[0]),l||c.push(i[0]);for(let e=1;e<c.length;++e)if(c[e]!==c[e-1])throw new Error("starts, limits, and deltas must have the same shape");const h=0===c.length?1:c[0],d=Ne("int32",h+1);d[0]=0;for(let t=0;t<h;++t){const n=o?e[0]:e[t],s=u?r[0]:r[t],i=l?a[0]:a[t];if(0===i)throw new Error("Requires delta != 0");let c;if(i>0&&s<n||i<0&&s>n)c=0;else if(c=Math.ceil(Math.abs((s-n)/i)),c>k$)throw new Error(`Requires ((limit - start) / delta) <= ${k$}`);d[t+1]=d[t]+c}const p=Ne(n,d[h]);let f=0;for(let t=0;t<h;++t){const n=d[t+1]-d[t];let r=o?e[0]:e[t];const s=l?a[0]:a[t];for(let e=0;e<n;++e)p[f++]=r,r+=s}return[d,p]}var I$=Hf;class S${constructor(e,t,n,r,s,a,i,o,u,l){this.shape=e,this.shapeShape=t,this.values=n,this.valuesShape=r,this.valuesDType=s,this.defaultValue=a,this.defaultValueShape=i,this.rowPartitionValues=o,this.rowPartitionValuesShapes=u,this.rowPartitionTypes=Kf(l),this.raggedRank=qf(this.rowPartitionTypes)}getRowPartitionTypeByDimension(e){return this.rowPartitionTypes[0]===I$.FIRST_DIM_SIZE?this.rowPartitionTypes[e+1]:this.rowPartitionTypes[e]}getRowPartitionTensor(e){return this.rowPartitionTypes[0]===I$.FIRST_DIM_SIZE?this.rowPartitionValues[e+1]:this.rowPartitionValues[e]}getMaxWidth(e){const t=this.getRowPartitionTensor(e-1);switch(this.getRowPartitionTypeByDimension(e-1)){case I$.VALUE_ROWIDS:return S$.getMaxWidthValueRowID(t);case I$.ROW_SPLITS:return S$.getMaxWidthRowSplit(t);default:throw new Error(`Cannot handle partition type ${I$[this.getRowPartitionTypeByDimension(e-1)]}`)}}static getMaxWidthRowSplit(e){const t=e.length;if(0===t||1===t)return 0;let n=0;for(let r=0;r<t-1;++r){const t=e[r+1]-e[r];t>n&&(n=t)}return n}static getMaxWidthValueRowID(e){const t=e.length;if(0===t)return 0;let n=0,r=e[0],s=0;for(let a=1;a<t;++a){const t=e[a];t!==r&&(r=t,s=Math.max(a-n,s),n=a)}return Math.max(t-n,s)}tensorShapeFromTensor(e,t,n=!0){if(0===t.length){if(-1===e[0])return[];throw new Error("The only valid scalar shape tensor is the fully unknown shape specified as -1.")}return E$(e,n)}calculateOutputSize(e){const t=this.valuesShape;Xf(this.defaultValueShape,t);const n=this.tensorShapeFromTensor(this.shape,this.shapeShape),r=jf(this.raggedRank,n,t);r[0]<0&&(r[0]=e);for(let e=1;e<=this.raggedRank;++e)r[e]<0&&(r[e]=this.getMaxWidth(e));return r}calculateFirstParentOutputIndex(e,t,n){const r=Math.min(e,n),s=[];let a=0;for(let e=0;e<r;++e,a+=t)s.push(a);for(let t=r;t<e;++t)s.push(-1);return ie(s.length===e,()=>"Final length of result must be equal to firstDimension."),s}calculateOutputIndexRowSplit(e,t,n,r){const s=e.length,a=[];for(let i=0;i<s-1;++i){const s=e[i+1]-e[i];let o=Math.min(r,s),u=t[i];-1===u&&(o=0);for(let e=0;e<o;++e)a.push(u),u+=n;for(let e=0;e<s-o;++e)a.push(-1)}if(s>0&&a.length!==e[s-1])throw new Error("Invalid row split size.");return a}calculateOutputIndexValueRowID(e,t,n,r){const s=e.length,a=[];if(0===s)return[];let i=0,o=e[0];if(o>=t.length)throw new Error(`Got currentValueRowId=${o}, which is not less than ${t.length}`);let u=t[o];a.push(u);for(let l=1;l<s;++l){const s=e[l];if(s===o)u>=0&&(++i,i<r?u+=n:u=-1);else{if(i=0,o=s,s>=t.length)throw new Error(`Got nextValueRowId=${s} which is not less than ${t.length}`);u=t[s]}a.push(u)}if(a.length!==e.length)throw new Error("Invalid row ids.");return a}calculateOutputIndex(e,t,n,r){const s=this.getRowPartitionTensor(e),a=this.getRowPartitionTypeByDimension(e);switch(a){case I$.VALUE_ROWIDS:return this.calculateOutputIndexValueRowID(s,t,n,r);case I$.ROW_SPLITS:if(s.length-1>t.length)throw new Error(`Row partition size is greater than output size: ${s.length-1} > ${t.length}`);return this.calculateOutputIndexRowSplit(s,t,n,r);default:throw new Error(`Unsupported partition type: ${I$[a]}`)}}getFirstDimensionSize(){const e=this.rowPartitionValues[0];if(0===this.rowPartitionTypes.length)throw new Error("No row_partition_types given.");const t=this.rowPartitionTypes[0];switch(t){case I$.FIRST_DIM_SIZE:return e[0];case I$.VALUE_ROWIDS:throw new Error("Cannot handle VALUE_ROWIDS in first dimension.");case I$.ROW_SPLITS:return this.rowPartitionValuesShapes[0][0]-1;default:throw new Error(`Cannot handle type ${I$[t]}`)}}compute(){if(this.rowPartitionValues[0].length<=0)throw new Error("Invalid first partition input. Tensor requires at least one element.");const e=this.getFirstDimensionSize(),t=this.calculateOutputSize(e),n=new Array(this.raggedRank+1);n[n.length-1]=1;for(let e=n.length-2;e>=0;--e)n[e]=n[e+1]*t[e+1];const r=E$(t,!1),s=Ne(this.valuesDType,le(r));if(n[0]*t[0]>0){let a=this.calculateFirstParentOutputIndex(e,n[0],t[0]);for(let e=1;e<=this.raggedRank;++e)a=this.calculateOutputIndex(e-1,a,n[e],t[e]);this.setOutput(this.raggedRank,a,s,r)}return[r,s]}setOutput(e,t,n,r){if(0===n.length)return;const s=this.values,a=n;let i=r.slice();i=i.slice(e+1);const o=le(i),u=t.length;let l=this.defaultValue;if(l.length!==o&&1!==l.length){const e=this.defaultValueShape;ui(()=>{const t=sc(l,e),n=wc(t,i);l=n.dataSync()})}let c=0,h=0,d=0;for(let e=0;e<=u;++e){let r=e<u?t[e]:-1;if(r!==d){if(h<d){const e=s.subarray(c*o);T$(a.subarray(h*o),e,(d-h)*o)}if(e>=u){const e=n.length;r=Math.floor(e/o)}if(r>d)if(1===this.defaultValue.length)a.subarray(d*o,r*o).fill(this.defaultValue[0]),d=r;else for(;r>d;)T$(a.slice(d*o),l,o),++d;r<0?(c=e+1,h=d):(c=e,h=d,d=h+1)}else++d}}}function T$(e,t,n){for(let r=0;r<n;r++)e[r]=t[r]}function E$(e,t){const n=[];for(let r of e){if(r<0){if(!t)throw new Error(`Dimension ${r} must be >= 0`);if(r<-1)throw new Error(`Dimension ${r} must be >= -1`);r=-1}n.push(r)}return n}function C$(e,t,n,r,s,a,i,o,u,l){return new S$(e,t,n,r,s,a,i,o,u,l).compute()}function $$(e,t,n,r){if(e===t||e<t&&n<0||t<e&&n>1)return Be(0,r);const s=Be(Math.abs(Math.ceil((t-e)/n)),r);t<e&&1===n&&(n=-1),s[0]=e;for(let e=1;e<s.length;e++)s[e]=s[e-1]+n;return s}const A$=pC(e=>1/Math.sqrt(e)),R$=mC(Tr,A$),_$={kernelName:Tr,backendName:"cpu",kernelFunc:R$};function D$(e,t,n,r,s,a,i,o,u,l){const c=[r/s,s],h=e.values,d=t.values;if(0===r)return ko(n,t.dtype);const p=u instanceof la?u:ko(c,t.dtype);"string"==typeof u||"number"==typeof u?p.values.fill(u):"boolean"==typeof u&&p.values.fill(+u);for(let e=0;e<a;e++){const a=[];let u=0;for(let t=0;t<i;t++){const n=h[e*i+t];a.push(n),u+=n*o[t]}if(u<0||u>=r/s)throw new Error(`Invalid indices: ${a} does not index into ${n}`);for(let n=0;n<s;n++)l?p.values[u*s+n]+=d[e*s+n]:p.values[u*s+n]=0===t.rank?d[0]:d[e*s+n]}return p}const F$=pC(e=>1/(1+Math.exp(-e))),M$=fC(Or,e=>1/(1+Math.exp(-e))),O$={kernelName:Or,backendName:"cpu",kernelFunc:M$};function L$(e,t,n,r,s){const a=cl(r,t,n),i=le(n),o=Me(r);if(a){const n=hl(t,o);return"string"===s?e.slice(n,n+i):e.subarray(n,n+i)}const u=ko(r,s,"string"===s?jm(e):e),l=ko(n,s);for(let e=0;e<l.size;++e){const n=l.indexToLoc(e),r=n.map((e,n)=>e+t[n]);l.set(u.get(...r),...n)}return"string"===s?Km(l.values):l.values}function z$(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{begin:a,size:i}=r;BE(s,"slice");const[o,u]=dl(s,a,i);Qu(s,o,u);const l=L$(n.data.get(s.dataId).values,o,u,s.shape,s.dtype);return n.makeTensorInfo(u,s.dtype,l)}const P$={kernelName:_r,backendName:"cpu",kernelFunc:z$};function B$(e,t,n,r,s,a,i){const o=t[0],u=a[0],l=new Array(u),c=new Array(o),h=t[1];if(0===u){if(0!==o)throw new Error(Rm(o));return[Ne(n,0),[0,h],Ne(s,0),l,c]}let d=!0,p=0;const f=new Array(u).fill(0);for(let t=0;t<o;++t){const n=e[t*h];if(n<0)throw new Error(_m(t,n));if(n>=u)throw new Error(Dm(t,n,u));++f[n],d=d&&n>=p,p=n}let m=!0;for(let e=0;e<u;++e){const t=0===f[e];l[e]=t,m=m&&!t,f[e]=Math.max(f[e],1),e>0&&(f[e]+=f[e-1])}if(m&&d){const t=e,n=r;for(let e=0;e<o;++e)c[e]=e;return[t,[o,h],n,l,c]}{const t=f[u-1],a=Ne(n,t*h),d=Ne(s,t),p=new Array(u).fill(0);for(let t=0;t<o;++t){const n=e[t*h],s=p[n],i=(0===n?0:f[n-1])+s;p[n]++;for(let n=0;n<h;++n)a[i*h+n]=e[t*h+n];d[i]=r[t],c[t]=i}for(let e=0;e<u;++e)if(0===p[e]){const t=0===e?0:f[e-1];a[t*h+0]=e;for(let e=1;e<h;++e)a[t*h+e]=0;d[t]=i}return[a,[t,h],d,l,c]}}function V$(e,t,n,r,s){const a=le(r),i=t[0],o=s.length,u=[];let l=1,c=-1;for(let e=0;e<o;++e){const t=s[e];if(-1===t){if(-1!==c)throw new Error(Fm(c,e));c=e,u.push(1)}else{if(t<0)throw new Error(Mm(e,t));l*=t,u.push(t)}}if(-1!==c){if(l<=0)throw new Error("reshape cannot infer the missing input size for an empty tensor unless all specified input sizes are non-zero");const e=Math.trunc(a/l);if(l*e!==a)throw new Error(Lm(r,u));u[c]=e}if(le(u)!==a)throw new Error(zm(r,u));const h=r.length,d=[];if(h>0){d[h-1]=1;for(let e=h-2;e>=0;--e)d[e]=d[e+1]*r[e+1]}const p=[];if(o>0){p[o-1]=1;for(let e=o-2;e>=0;--e)p[e]=p[e+1]*u[e+1]}const f=Ne(n,i*o);for(let t=0;t<i;++t){let n=0;for(let r=0;r<h;++r)n+=e[t*h+r]*d[r];for(let e=0;e<o;++e)f[t*o+e]=Math.trunc(n/p[e]),n%=p[e]}return[f,[i,o],u]}function U$(e,t,n,r,s,a=!1,i=0){const o=r.length,u=[t[0],e.length/t[0]],l=u[1],c=o>0?s[o-1]+1:0;if(c<0)throw new Error("segment ids must be >= 0");const h=t.slice();h[0]=c;const d=Ne(n,h.reduce((e,t)=>e*t,1));if(0===o)return c>0&&d.fill(i),[d,h];if(c<=0)throw new Error("segment ids must be >= 0");let p=0,f=1,m=0,g=s[p];for(;;){let t=0;if(f<o){if(t=s[f],g===t){++f;continue}if(g>=t)throw new Error(Bm())}if(g<0||g>=c)throw new Error(Vm(g,c));g>m&&d.fill(i,m*l,g*l);for(let t=p;t<f;++t){const n=r[t];if(n<0||n>=u[0])throw new Error(Um(t,r[t],u[0]));for(let t=0;t<l;t++)d[g*l+t]+=e[n*l+t]}if(a)for(let e=0;e<l;e++)d[g*l+e]/=f-p;if(p=f,++f,m=g+1,g=t,f>o)break}return m<c&&d.fill(i,m*l,c*l),[d,h]}const W$=pC(e=>Math.sqrt(e)),G$=fC(zr,e=>Math.sqrt(e)),H$={kernelName:zr,backendName:"cpu",kernelFunc:G$},j$=HE((e,t)=>{const n=e-t;return n*n}),K$=nC(qr,j$),q$={kernelName:qr,backendName:"cpu",kernelFunc:K$},X$=pC((e,t)=>{const{pattern:n,replaceGlobal:r,rewrite:s}=t;return e.replace(new RegExp(n,r?"g":""),s)}),Y$=mC(Yr,X$),Z$={kernelName:Yr,backendName:"cpu",kernelFunc:Y$};function Q$(e,t,n,r){const s=ko(e,t.dtype);for(let e=0;e<s.size;e++){const a=s.indexToLoc(e),i=new Array(a.length);for(let e=0;e<i.length;e++)i[e]=a[e]*n[e]+r[e];s.set(t.get(...i),...a)}return s}class J${constructor(e,t,n,r,s,a){this.separator=Zs(e),this.nGramWidths=t,this.leftPad=Zs(n),this.rightPad=Zs(r),this.padWidth=s,this.preserveShort=a}getPadWidth(e){return Math.min(this.padWidth<0?e-1:this.padWidth,e-1)}getNumNGrams(e,t){const n=this.getPadWidth(t);return Math.max(0,e+2*n-t+1)}createNGrams(e,t,n,r,s,a){for(let i=0;i<s;++i){const o=this.getPadWidth(a),u=Math.max(0,o-i),l=Math.max(0,o-(s-(i+1))),c=a-(u+l),h=t+(u>0?0:i-o);let d=0;d+=u*this.leftPad.length;for(let t=0;t<c;++t)d+=e[h+t].length;d+=l*this.rightPad.length,d+=(u+l+c-1)*this.separator.length,n[r+i]=new Uint8Array(d);const p=n[r+i];let f=0;const m=e=>e.forEach(e=>p[f++]=e);for(let e=0;e<u;++e)m(this.leftPad),m(this.separator);for(let t=0;t<c-1;++t)m(e[h+t]),m(this.separator);if(c>0){m(e[h+c-1]);for(let e=0;e<l;++e)m(this.separator),m(this.rightPad)}else{for(let e=0;e<l-1;++e)m(this.rightPad),m(this.separator);m(this.rightPad)}}}compute(e,t){const n=e.length,r=t.length;if(r>0){let e=t[0];if(0!==e)throw new Error(`First split value must be 0, got ${e}`);for(let s=1;s<r;++s){let r=t[s]>=e;if(r=r&&t[s]<=n,!r)throw new Error(`Invalid split value ${t[s]}, must be in [${e}, ${n}]`);e=t[s]}if(e!==n)throw new Error(`Last split value must be data size. Expected ${n}, got ${e}`)}const s=r-1,a=Ne("int32",r);if(0===n||0===r){const e=new Array(n);for(let e=0;e<=s;++e)a[e]=0;return[e,a]}a[0]=0;for(let e=1;e<=s;++e){const n=t[e]-t[e-1];let r=0;this.nGramWidths.forEach(e=>{r+=this.getNumNGrams(n,e)}),this.preserveShort&&n>0&&0===r&&(r=1),a[e]=a[e-1]+r}const i=new Array(a[s]);for(let n=0;n<s;++n){const r=t[n];let s=a[n];if(this.nGramWidths.forEach(a=>{const o=t[n+1]-t[n],u=this.getNumNGrams(o,a);this.createNGrams(e,r,i,s,u,a),s+=u}),this.preserveShort&&s===a[n]){const a=t[n+1]-t[n];if(0===a)continue;const o=a+2*this.padWidth,u=1;this.createNGrams(e,r,i,s,u,o)}}return[i,a]}}function eA(e,t,n,r,s,a,i,o){return new J$(n,r,s,a,i,o).compute(e,t)}function tA(e,t,n,r){if(!e.length)return;if(0===t.length){for(let t=0;t<e.length;++t)r.push(e.subarray(t,t+1));return}if(1===t.length){const s=t[0];let a=e.indexOf(s);for(;-1!==a;){const t=e.subarray(0,a);n&&0===t.length||r.push(t),a=(e=e.subarray(a+1)).indexOf(s)}return void(n&&0===e.length||r.push(e))}let s=0;for(let a=0;a<e.length+1;a++)if(a===e.length||-1!==t.indexOf(e[a])){const t=e.subarray(s,a);n&&0===t.length||r.push(t),s=a+1}}function nA(e,t,n){const r=e.length,s=[];let a=0,i=0;const o=new Array(r);for(let u=0;u<r;++u){const r=s.length;tA(e[u],t,n,s);const l=s.length-r;o[u]=l,a+=l,i=Math.max(i,l)}const u=Ne("int32",2*a),l=new Array(a),c=[r,i];let h=0;for(let e=0;e<r;++e)for(let t=0;t<o[e];++t)u[2*h]=e,u[2*h+1]=t,l[h]=s[h],++h;return[u,l,c]}function rA(e,t){const n=Ne("int32",e.length);for(let r=0;r<e.length;++r)n[r]=js(e[r]).modulo(t).getLowBitsUnsigned();return n}const sA=HE((e,t)=>e-t),aA=rC((e,t,n,r)=>({real:e-n,imag:t-r})),iA=nC(ts,sA,aA),oA={kernelName:ts,backendName:"cpu",kernelFunc:iA};function uA(e,t){const n=new Array(e.rank);for(let r=0;r<n.length;r++)n[r]=e.shape[r]*t[r];const r=ko(n,e.dtype);for(let t=0;t<r.values.length;++t){const n=r.indexToLoc(t),s=new Array(e.rank);for(let t=0;t<s.length;t++)s[t]=n[t]%e.shape[t];const a=e.locToIndex(s);r.values[t]=e.values[a]}return r}const lA=(e,t)=>{const n=t.value-e.value;return 0===n?e.index-t.index:n};function cA(e,t,n=0,r=e.length-1){for(;r>n;){if(r-n>600){const s=r-n+1,a=t-n+1,i=Math.log(s),o=.5*Math.exp(2*i/3),u=.5*Math.sqrt(i*o*(s-o)/s)*Math.sign(a-s/2);cA(e,t,Math.max(n,Math.floor(t-a*o/s+u)),Math.min(r,Math.floor(t+(s-a)*o/s+u)))}const s=e[t];let a=n,i=r;for(ne(e,n,t),lA(e[r],s)>0&&ne(e,n,r);a<i;){for(ne(e,a,i),a++,i--;lA(e[a],s)<0;)a+=1;for(;lA(e[i],s)>0;)i-=1}0===lA(e[n],s)?ne(e,n,i):(i+=1,ne(e,i,r)),i<=t&&(n=i+1),t<=i&&(r=i-1)}}function hA(e,t,n,r,s){const a=t[t.length-1],[i,o]=[e.length/a,a],u=ke(n,i*r),l=ke("int32",i*r);for(let t=0;t<i;t++){const n=t*o,a=e.subarray(n,n+o);let i=new Array(a.length);a.forEach((e,t)=>i[t]={value:e,index:t}),r<i.length&&(cA(i,r),i=i.slice(0,r)),s&&i.sort(lA);const c=t*r,h=u.subarray(c,c+r),d=l.subarray(c,c+r);for(let e=0;e<r;e++)h[e]=i[e].value,d[e]=i[e].index}const c=t.slice();return c[c.length-1]=r,[ko(c,n,u),ko(c,"int32",l)]}function dA(e,t,n,r){const s=we(t,n)[0],a=[1,n[0],1];for(let e=0;e<s;e++)a[0]*=n[e];a[1]=n[s];for(let e=s+1;e<n.length;e++)a[2]*=n[e];const i=new Map,o=new Int32Array(n[s]),u=new la(a,r,e),l=[],c=1===a[0]&&1===a[2];for(let t=0;t<n[s];t++){let n;if(c)n=e[t].toString();else{const e=[];for(let n=0;n<a[0];n++)for(let r=0;r<a[2];r++)e.push(u.get(n,t,r));n=e.join(",")}const r=i.get(n);if(null!=r)o[t]=r;else{const e=i.size;i.set(n,e),o[t]=e,l.push(t)}}const h=a.slice();h[1]=i.size;const d=new la(h,r);l.forEach((e,t)=>{for(let n=0;n<a[0];n++)for(let r=0;r<a[2];r++)d.set(u.get(n,e,r),n,t,r)});const p=n.slice();return p[s]=h[1],{outputValues:d.values,outputShape:p,indices:o}}const pA="4.22.0";bi("cpu",()=>new UE,1);const fA=fC(Jt,e=>e>=0?e:Math.exp(e)-1),mA={kernelName:Jt,backendName:"cpu",kernelFunc:fA};function gA(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{alpha:a}=r;BE([s],"leakyRelu");const i=le(s.shape),o=n.data.get(s.dataId).values,u=ke("float32",i);for(let e=0;e<o.length;e++)u[e]=o[e]<0?a*o[e]:o[e];return n.makeTensorInfo(s.shape,"float32",u)}const yA={kernelName:Nn,backendName:"cpu",kernelFunc:gA},bA=HE((e,t)=>e<0?t*e:e);function xA(e){const{inputs:t,backend:n}=e,{x:r,alpha:s}=t;BE([r,s],"prelu");const a=n.data.get(r.dataId).values,i=n.data.get(s.dataId).values,[o,u]=bA(r.shape,s.shape,a,i,"float32");return n.makeTensorInfo(u,"float32",o)}const wA={kernelName:lr,backendName:"cpu",kernelFunc:xA},vA=fC(yr,e=>Math.max(0,e)),kA={kernelName:yr,backendName:"cpu",kernelFunc:vA},NA=fC(Nr,e=>Math.min(Math.max(0,e),6)),IA={kernelName:Nr,backendName:"cpu",kernelFunc:NA};function SA(e,t,n,r,s){if("linear"===n)return XE({inputs:{x:t},backend:e});if("relu"===n)return vA({inputs:{x:t},backend:e});if("elu"===n)return fA({inputs:{x:t},backend:e});if("relu6"===n)return NA({inputs:{x:t},backend:e});if("prelu"===n)return xA({inputs:{x:t,alpha:r},backend:e});if("leakyrelu"===n)return gA({inputs:{x:t},backend:e,attrs:{alpha:s}});if("sigmoid"===n)return M$({inputs:{x:t},backend:e});throw new Error(`Activation ${n} has not been implemented for the CPU backend.`)}function TA(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{shape:a}=r,i=le(s.shape),o=xe(a,i),u=le(o);ie(i===u,()=>`The new shape (${o}) has ${u} elements and the old shape (${s.shape}) has ${i} elements. The new shape and old shape must have the same number of elements.`),n.incRef(s.dataId);const l=n.data.get(s.dataId);if(null!=l.complexTensorInfos){const e=l.complexTensorInfos.real,t=l.complexTensorInfos.imag;e.shape=o,t.shape=o}return{dataId:s.dataId,shape:o,dtype:s.dtype}}const EA={kernelName:br,backendName:"cpu",kernelFunc:TA};function CA(e){const{inputs:t,backend:n,attrs:r}=e,{a:s,b:a}=t,{transposeA:i,transposeB:o}=r;BE([s,a],"matMul");const u=s.shape.length,l=a.shape.length,c=i?s.shape[u-2]:s.shape[u-1],h=o?a.shape[l-1]:a.shape[l-2],d=i?s.shape[u-1]:s.shape[u-2],p=o?a.shape[l-2]:a.shape[l-1],f=s.shape.slice(0,-2),m=a.shape.slice(0,-2),g=le(f),y=le(m),b=ru(s.shape.slice(0,-2),a.shape.slice(0,-2)).concat([d,p]);ie(c===h,()=>`Error in matMul: inner shapes (${c}) and (${h}) of Tensors with shapes ${s.shape} and ${a.shape} and transposeA=${i} and transposeB=${o} must match.`);const x=o?[y,p,h]:[y,h,p],w=TA({inputs:{x:s},backend:n,attrs:{shape:i?[g,c,d]:[g,d,c]}}),v=TA({inputs:{x:a},backend:n,attrs:{shape:x}}),k=i?w.shape[1]:w.shape[2],N=i?w.shape[2]:w.shape[1],I=o?v.shape[1]:v.shape[2],S=Math.max(g,y),T=n.data.get(w.dataId).values,E=n.data.get(v.dataId).values,C=Me(w.shape),$=Me(v.shape),[A,R,_]=i?[C[0],1,C[1]]:[C[0],C[1],1],[D,F,M]=o?[1,$[1],$[0]]:[$[1],1,$[0]],O=N*I,L=ko([S,N,I],w.dtype),z=L.values,P=n.blockSize;for(let e=0;e<S;e++){const t=e%g,n=e%y;for(let r=0;r<N;r+=P){const s=Math.min(r+P,N);for(let a=0;a<I;a+=P){const i=Math.min(a+P,I);for(let o=0;o<k;o+=P){const u=Math.min(o+P,k);for(let l=r;l<s;l++)for(let r=a;r<i;r++){let s=0;for(let e=o;e<u;e++)s+=T[t*A+l*R+e*_]*E[e*D+r*F+n*M];z[e*O+(l*I+r)]+=s}}}}}return n.disposeIntermediateTensorInfo(w),n.disposeIntermediateTensorInfo(v),n.makeTensorInfo(b,L.dtype,L.values)}const $A={kernelName:bt,backendName:"cpu",kernelFunc:CA},AA={kernelName:gs,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{a:s,b:a,bias:i,preluActivationWeights:o}=t,{transposeA:u,transposeB:l,activation:c,leakyreluAlpha:h}=r;let d,p,f;const m=[];d=CA({inputs:{a:s,b:a},attrs:{transposeA:u,transposeB:l},backend:n}),i&&(p=iC({inputs:{a:d,b:i},backend:n}),m.push(d),d=p),c&&(f=SA(n,d,c,o,h),m.push(d),d=f);for(const e of m)n.disposeIntermediateTensorInfo(e);return d}},RA=fC(tt,e=>Math.acos(e)),_A={kernelName:tt,backendName:"cpu",kernelFunc:RA},DA=fC(nt,e=>Math.acosh(e)),FA={kernelName:nt,backendName:"cpu",kernelFunc:DA},MA={kernelName:st,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,r=t;BE(t,"addN");const s=r.map(e=>n.data.get(e.dataId).values),a=ko(r[0].shape,r[0].dtype),i=a.values;for(let e=0;e<r.length;e++){const t=s[e];for(let e=0;e<i.length;e++)i[e]+=t[e]}return n.makeTensorInfo(a.shape,a.dtype,a.values)}},OA={kernelName:at,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a,keepDims:i}=r;BE(s,"all");const o=we(a,s.shape);let u=o;const l=nh(u,s.shape.length);let c=s;null!=l&&(c=g$({inputs:{x:s},backend:n,attrs:{perm:l}}),u=sh(u.length,s.shape.length)),th("all",u,c.shape.length);const[h,d]=Jc(c.shape,u),p=le(d),f=Be(le(h),c.dtype),m=n.data.get(c.dataId).values;for(let e=0;e<f.length;++e){const t=e*p;let n=m[t];for(let e=0;e<p;++e){const r=m[t+e];n=n&&r}f[e]=n}null!=l&&n.disposeIntermediateTensorInfo(c);const g=n.makeTensorInfo(h,c.dtype,f);if(i){const e=TA({inputs:{x:g},backend:n,attrs:{shape:eh(h,o)}});return n.disposeIntermediateTensorInfo(g),e}return g}},LA={kernelName:it,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a,keepDims:i}=r;BE(s,"any");const o=we(a,s.shape);let u=o;const l=nh(u,s.shape.length);let c=s;null!=l&&(c=g$({inputs:{x:s},backend:n,attrs:{perm:l}}),u=sh(u.length,s.shape.length)),th("any",u,c.shape.length);const[h,d]=Jc(c.shape,u),p=le(d),f=Be(le(h),c.dtype),m=n.data.get(c.dataId).values;for(let e=0;e<f.length;++e){const t=e*p;let n=m[t];for(let e=0;e<p;++e){const r=m[t+e];n=n||r}f[e]=n}null!=l&&n.disposeIntermediateTensorInfo(c);const g=n.makeTensorInfo(h,c.dtype,f);if(i){const e=TA({inputs:{x:g},backend:n,attrs:{shape:eh(h,o)}});return n.disposeIntermediateTensorInfo(g),e}return g}},zA={kernelName:ot,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a}=r;BE(s,"argMax");let i=we(a,s.shape);const o=nh(i,s.shape.length);let u=s;const l=[];null!=o&&(u=g$({inputs:{x:s},backend:n,attrs:{perm:o}}),l.push(u),i=sh(i.length,u.shape.length)),i=[i[0]],th("argMax",i,u.shape.length);const[c,h]=Jc(u.shape,i),d=Be(le(c),"int32"),p=le(h),f=n.data.get(u.dataId).values;for(let e=0;e<d.length;++e){const t=e*p;let n=f[t],r=0;for(let e=0;e<p;++e){const s=f[t+e];s>n&&(n=s,r=e)}d[e]=r}return l.forEach(e=>n.disposeIntermediateTensorInfo(e)),n.makeTensorInfo(c,"int32",d)}},PA={kernelName:ut,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a}=r;BE(s,"argMin");let i=we(a,s.shape);const o=nh(i,s.shape.length);let u=s;const l=[];null!=o&&(u=g$({inputs:{x:s},backend:n,attrs:{perm:o}}),l.push(u),i=sh(i.length,u.shape.length)),i=[i[0]],th("argMin",i,u.shape.length);const[c,h]=Jc(u.shape,i),d=Be(le(c),"int32"),p=le(h),f=n.data.get(u.dataId).values;for(let e=0;e<d.length;++e){const t=e*p;let n=f[t],r=0;for(let e=0;e<p;++e){const s=f[t+e];s<n&&(n=s,r=e)}d[e]=r}return l.forEach(e=>n.disposeIntermediateTensorInfo(e)),n.makeTensorInfo(c,"int32",d)}},BA=fC(lt,e=>Math.asin(e)),VA={kernelName:lt,backendName:"cpu",kernelFunc:BA},UA=fC(ct,e=>Math.asinh(e)),WA={kernelName:ct,backendName:"cpu",kernelFunc:UA},GA=fC(ht,e=>Math.atan(e)),HA={kernelName:ht,backendName:"cpu",kernelFunc:GA},jA=HE((e,t)=>Math.atan2(e,t)),KA=nC(pt,jA),qA={kernelName:pt,backendName:"cpu",kernelFunc:KA},XA=fC(dt,e=>Math.atanh(e)),YA={kernelName:dt,backendName:"cpu",kernelFunc:XA};function ZA(e,t,n,r,s,a){const i=s.strideHeight,o=s.strideWidth,u=s.dilationHeight,l=s.dilationWidth,c=s.effectiveFilterHeight,h=s.effectiveFilterWidth,d=s.padInfo.top,p=s.padInfo.left,f="max"===a?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,m=ko(s.outShape,n),g=m.values,y=s.outShape[1]*s.outShape[2]*s.outShape[3],b=s.outShape[2]*s.outShape[3],x=s.outShape[3];for(let t=0;t<s.batchSize;++t){const n=t*y,m=t*r[0];for(let t=0;t<s.inChannels;++t)for(let y=0;y<s.outHeight;++y){const w=y*i-d,v=Math.max(0,w),k=Math.min(s.inHeight,c+w),N=n+y*b;for(let n=0;n<s.outWidth;++n){const i=n*o-p,c=Math.max(0,i),d=Math.min(s.inWidth,h+i);let y=f,b=0,w=0;for(let n=v;n<k;n+=u){const s=m+n*r[1];for(let n=c;n<d;n+=l){const i=e[s+n*r[2]+t];"max"===a&&i>y?y=i:"avg"===a&&(b+=i,w++)}if(isNaN(y))break}g[N+n*x+t]="avg"===a?b/w:y}}}return m}function QA(e,t,n,r,s=!1,a=!1){const i=ko(r.outShape,"int32"),o=r.strideHeight,u=r.strideWidth,l=r.dilationHeight,c=r.dilationWidth,h=r.effectiveFilterHeight,d=r.effectiveFilterWidth,p=r.padInfo.top,f=r.padInfo.left,m=ko(t,n,e);for(let e=0;e<r.batchSize;++e)for(let t=0;t<r.inChannels;++t)for(let n=0;n<r.outHeight;++n){const g=n*o-p;let y=g;for(;y<0;)y+=l;const b=Math.min(r.inHeight,h+g);for(let o=0;o<r.outWidth;++o){const h=o*u-f;let p=h;for(;p<0;)p+=c;const x=Math.min(r.inWidth,d+h);let w=Number.NEGATIVE_INFINITY,v=-1;for(let n=y;n<b;n+=l){const i=n-g;for(let o=p;o<x;o+=c){const u=o-h,l=m.get(e,n,o,t);l>w&&(w=l,v=s?a?((e*r.inHeight+n)*r.inWidth+o)*r.inChannels+t:(n*r.inWidth+o)*r.inChannels+t:i*d+u)}}i.set(v,e,n,o,t)}}return i}function JA(e,t,n,r,s,a){const i=s.strideDepth,o=s.strideHeight,u=s.strideWidth,l=s.dilationDepth,c=s.dilationHeight,h=s.dilationWidth,d=s.effectiveFilterDepth,p=s.effectiveFilterHeight,f=s.effectiveFilterWidth,m=s.padInfo.front,g=s.padInfo.top,y=s.padInfo.left,b="max"===a?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,x=ko(s.outShape,n),w=x.values,v=s.outShape[1]*s.outShape[2]*s.outShape[3]*s.outShape[4],k=s.outShape[2]*s.outShape[3]*s.outShape[4],N=s.outShape[3]*s.outShape[4],I=s.outShape[4];for(let t=0;t<s.batchSize;++t){const n=t*v,x=t*r[0];for(let t=0;t<s.inChannels;++t)for(let v=0;v<s.outDepth;++v){const S=v*i-m;let T=S;for(;T<0;)T+=l;const E=Math.min(s.inDepth,d+S),C=n+v*k;for(let n=0;n<s.outHeight;++n){const i=n*o-g;let d=i;for(;d<0;)d+=c;const m=Math.min(s.inHeight,p+i),v=C+n*N;for(let n=0;n<s.outWidth;++n){const i=n*u-y;let o=i;for(;o<0;)o+=h;const p=Math.min(s.inWidth,f+i),g=v+n*I;let k=b,N=0,S=0;for(let n=T;n<E;n+=l){const s=x+n*r[1];for(let n=d;n<m;n+=c){const i=s+n*r[2];for(let n=o;n<p;n+=h){const s=e[i+n*r[3]+t];if("max"===a&&s>k?k=s:"avg"===a&&(N+=s,S++),isNaN(k))break}if(isNaN(k))break}if(isNaN(k))break}w[g+t]="avg"===a?N/Math.max(S,1):k}}}}return x}const eR={kernelName:ft,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t;BE(s,"avgPool");const{filterSize:a,strides:i,pad:o,dimRoundingMode:u}=r;ie(ec(i,1),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${i} and dilations '1'`);const l=Gl(s.shape,a,i,1,o,u);let c;if(1===l.filterWidth&&1===l.filterHeight&&de(l.inShape,l.outShape))c=XE({inputs:{x:s},backend:n});else{const e=n.data.get(s.dataId).values,t=Me(s.shape),r=ZA(e,s.shape,s.dtype,t,l,"avg");c=n.makeTensorInfo(l.outShape,s.dtype,r.values)}return c}},tR={kernelName:gt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{filterSize:a,strides:i,pad:o,dimRoundingMode:u,dataFormat:l}=r;BE(s,"avgPool3d");const c=Hl(s.shape,a,i,1,o,u,l),h=JA(n.data.get(s.dataId).values,s.shape,s.dtype,Me(s.shape),c,"avg");return n.makeTensorInfo(h.shape,"float32",h.values)}},nR={kernelName:yt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,input:a}=t,{filterSize:i,strides:o,pad:u,dimRoundingMode:l}=r;BE([s,a],"avgPool3DGrad");const c=Hl(a.shape,i,o,1,u,l),h=c.strideDepth,d=c.strideHeight,p=c.strideWidth,f=c.filterDepth,m=c.filterHeight,g=c.filterWidth,y=c.dilationDepth,b=c.dilationHeight,x=c.dilationWidth,w=c.effectiveFilterDepth,v=c.effectiveFilterHeight,k=c.effectiveFilterWidth,N=w-1-c.padInfo.front,I=k-1-c.padInfo.left,S=v-1-c.padInfo.top,T=ko(a.shape,"float32"),E=1/(f*m*g),C=n.bufferSync(s);for(let e=0;e<c.batchSize;++e)for(let t=0;t<c.inChannels;++t)for(let n=0;n<c.inDepth;++n)for(let r=0;r<c.inHeight;++r)for(let s=0;s<c.inWidth;++s){const a=n-N,i=r-S,o=s-I;let u=0;for(let n=0;n<w;n+=y){const r=(a+n)/h;if(!(r<0||r>=c.outDepth||Math.floor(r)!==r))for(let n=0;n<v;n+=b){const s=(i+n)/d;if(!(s<0||s>=c.outHeight||Math.floor(s)!==s))for(let n=0;n<k;n+=x){const a=(o+n)/p;a<0||a>=c.outWidth||Math.floor(a)!==a||(u+=C.get(e,r,s,a,t))}}}T.set(u*E,e,n,r,s,t)}return n.makeTensorInfo(T.shape,T.dtype,T.values)}},rR={kernelName:mt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,input:a}=t,i=a;BE([s,a],"avgPoolGrad");const{filterSize:o,strides:u,pad:l}=r,c=Gl(i.shape,o,u,1,l),h=c.strideHeight,d=c.strideWidth,p=c.filterHeight,f=c.filterWidth,m=c.dilationHeight,g=c.dilationWidth,y=c.effectiveFilterHeight,b=c.effectiveFilterWidth,x=b-1-c.padInfo.left,w=y-1-c.padInfo.top,v=ko(i.shape,"float32"),k=1/(p*f),N=n.data.get(s.dataId).values,I=ko(s.shape,"float32",N);for(let e=0;e<c.batchSize;++e)for(let t=0;t<c.inChannels;++t)for(let n=0;n<c.inHeight;++n)for(let r=0;r<c.inWidth;++r){const s=n-w,a=r-x;let i=0;for(let n=0;n<y;n+=m){const r=(s+n)/h;if(!(r<0||r>=c.outHeight||Math.floor(r)!==r))for(let n=0;n<b;n+=g){const s=(a+n)/d;s<0||s>=c.outWidth||Math.floor(s)!==s||(i+=I.get(e,r,s,t))}}v.set(i*k,e,n,r,t)}return n.makeTensorInfo(v.shape,v.dtype,v.values)}},sR={kernelName:dn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,scale:a,offset:i,mean:o,variance:u}=t;ie(o.shape.length===u.shape.length,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),ie(null==i||o.shape.length===i.shape.length,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),ie(null==a||o.shape.length===a.shape.length,()=>"Batch normalization gradient requires mean and scale to have equal ranks."),BE([s,o,u,a,i],"batchNorm");let{varianceEpsilon:l}=r;null==l&&(l=.001);const c=n.data.get(s.dataId).values,h=n.data.get(o.dataId).values,d=n.data.get(u.dataId).values,p=a?n.data.get(a.dataId).values:new Float32Array([1]),f=i?n.data.get(i.dataId).values:new Float32Array([0]),m=new Float32Array(c.length),g=f.length,y=p.length,b=d.length,x=h.length;let w=0,v=0,k=0,N=0;for(let e=0;e<c.length;++e)m[e]=f[w++]+(c[e]-h[v++])*p[k++]/Math.sqrt(d[N++]+l),w>=g&&(w=0),v>=x&&(v=0),k>=y&&(k=0),N>=b&&(N=0);return n.makeTensorInfo(s.shape,s.dtype,m)}},aR={kernelName:xt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{blockShape:a,crops:i}=r;BE([s],"batchToSpaceND");const o=a.reduce((e,t)=>e*t),u=Jf(s.shape,a,o),l=em(u.length,a.length),c=tm(s.shape,a,o),h=nm(i,a.length),d=rm(c,i,a.length),p=TA({inputs:{x:s},backend:n,attrs:{shape:u}}),f=g$({inputs:{x:p},backend:n,attrs:{perm:l}}),m=TA({inputs:{x:f},backend:n,attrs:{shape:c}}),g=z$({inputs:{x:m},backend:n,attrs:{begin:h,size:d}});return n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),g}},iR={kernelName:wt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,weights:a}=t,{size:i}=r,o=uC(n.data.get(s.dataId).values,n.data.get(a.dataId).values,a.dtype,a.shape,i);return n.makeTensorInfo([i],a.dtype,o)}},oR={kernelName:Nt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{s0:r,s1:s}=t,a=n.data.get(r.dataId).values,i=n.data.get(s.dataId).values,o=ru(Array.from(a),Array.from(i));return n.makeTensorInfo([o.length],"int32",Int32Array.from(o))}},uR=fC(Tt,(e,t)=>{const n=t;return e>n.clipValueMax?n.clipValueMax:e<n.clipValueMin?n.clipValueMin:e}),lR={kernelName:Tt,backendName:"cpu",kernelFunc:uR},cR={kernelName:Ct,backendName:"cpu",kernelFunc:e=>{const{x:t}=e.inputs,n=e.backend,r=new Float32Array(le(t.shape)),s=n.data.get(t.dataId),a=s.complexTensorInfos.real,i=s.complexTensorInfos.imag,o=n.data.get(a.dataId).values,u=n.data.get(i.dataId).values;for(let e=0;e<o.length;e++){const t=o[e],n=u[e];r[e]=Math.hypot(t,n)}return n.makeOutput(r,t.shape,"float32")}};function hR(e){const{inputs:t,backend:n}=e,{input:r}=t,s=n.data.get(r.dataId).complexTensorInfos.imag,a=n.data.get(s.dataId).values;return n.makeTensorInfo(s.shape,s.dtype,a)}const dR={kernelName:xn,backendName:"cpu",kernelFunc:hR};function pR(e){const{inputs:t,backend:n,attrs:r}=e,{axis:s}=r,a=we(s,t[0].shape)[0];Wf(t.map(e=>e.shape),a);let i=Gf(t.map(e=>e.shape),a);if(0===le(i))return n.makeTensorInfo(i,t[0].dtype,[]);const o=t.filter(e=>le(e.shape)>0);if(1===o.length)return XE({inputs:{x:o[0]},backend:n});if("complex64"===o[0].dtype){const e=o.map(e=>ZE({inputs:{input:e},backend:n})),t=o.map(e=>hR({inputs:{input:e},backend:n})),r=pR({inputs:e,backend:n,attrs:{axis:a}}),s=pR({inputs:t,backend:n,attrs:{axis:a}}),i=jE({inputs:{real:r,imag:s},backend:n});return e.forEach(e=>n.disposeIntermediateTensorInfo(e)),t.forEach(e=>n.disposeIntermediateTensorInfo(e)),n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(s),i}const u=o.map(e=>{const t=le(e.shape.slice(a));return TA({inputs:{x:e},backend:n,attrs:{shape:[-1,t]}})}),l=u.map(e=>({vals:n.data.get(e.dataId).values,shape:e.shape}));i=Gf(u.map(e=>e.shape),1);const c=1===u[0].shape[0],h=xC(l,i,t[0].dtype,c),d=Gf(o.map(e=>e.shape),a),p=n.makeTensorInfo(d,t[0].dtype,h);return u.forEach(e=>n.disposeIntermediateTensorInfo(e)),p}const fR={kernelName:$t,backendName:"cpu",kernelFunc:pR};function mR(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:a}=t,{strides:i,pad:o,dataFormat:u,dilations:l,dimRoundingMode:c}=r;BE([s,a],"conv2d");const h=nc(u),d=jl(s.shape,a.shape,i,l,o,c,!1,h),p=d.filterHeight,f=d.filterWidth,m=d.dilationHeight,g=d.dilationWidth,y=d.padInfo.left,b=d.padInfo.top,x="channelsLast"===d.dataFormat,w=new la(d.outShape,s.dtype),v=Me(s.shape),k=Me(a.shape),N=v[0],I=x?v[1]:v[2],S=x?v[2]:1,T=x?1:v[1],E=w.strides[0],C=x?w.strides[1]:w.strides[2],$=x?w.strides[2]:1,A=x?1:w.strides[1],R=n.data.get(s.dataId).values,_=n.data.get(a.dataId).values,D=w.values;for(let e=0;e<d.batchSize;++e){const t=e*N,n=e*E;for(let e=0;e<d.outHeight;++e){const r=n+e*C,s=e*d.strideHeight-b;for(let e=0;e<p;++e){const n=s+e*m;if(n<0||n>=d.inHeight)continue;const a=e*k[0],i=t+n*I;for(let e=0;e<d.outWidth;++e){const t=r+e*$,n=e*d.strideWidth-y;for(let e=0;e<f;++e){const r=n+e*g;if(r<0||r>=d.inWidth)continue;const s=i+r*S;let o=a+e*k[1];for(let e=0;e<d.inChannels;++e){const n=R[s+e*T];for(let e=0;e<d.outChannels;++e)D[t+e*A]+=n*_[o+e];o+=d.outChannels}}}}}}return n.makeTensorInfo(w.shape,w.dtype,D)}const gR={kernelName:At,backendName:"cpu",kernelFunc:mR},yR={kernelName:Rt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,dy:a}=t,{strides:i,pad:o,dataFormat:u,dimRoundingMode:l,filterShape:c}=r;BE([s,a],"conv2dBackpropFilter");const h=nc(u),d=jl(s.shape,c,i,1,o,l,!1,h),{strideHeight:p,strideWidth:f,filterHeight:m,filterWidth:g}=d,y="channelsLast"===d.dataFormat,b=new la(d.filterShape,"float32"),x=d.padInfo.left,w=d.padInfo.top,v=n.data.get(s.dataId).values,k=n.data.get(a.dataId).values,N=new la(s.shape,s.dtype,v),I=new la(a.shape,a.dtype,k);for(let e=0;e<m;++e){const t=Math.max(0,Math.ceil((w-e)/p)),n=Math.min(d.outHeight,(d.inHeight+w-e)/p);for(let r=0;r<g;++r){const s=Math.max(0,Math.ceil((x-r)/f)),a=Math.min(d.outWidth,(d.inWidth+x-r)/f);for(let i=0;i<d.inChannels;++i)for(let o=0;o<d.outChannels;++o){let u=0;for(let l=0;l<d.batchSize;++l)for(let c=t;c<n;++c){const t=e+c*p-w;for(let e=s;e<a;++e){const n=r+e*f-x;u+=y?N.get(l,t,n,i)*I.get(l,c,e,o):N.get(l,i,t,n)*I.get(l,o,c,e)}}b.set(u,e,r,i,o)}}}return n.makeTensorInfo(b.shape,b.dtype,b.values)}},bR={kernelName:_t,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,filter:a}=t,{inputShape:i,strides:o,pad:u,dataFormat:l,dimRoundingMode:c}=r;BE([s,a],"conv2dBackpropInput");const h=Me(a.shape),d=Me(s.shape);let p=nc(l);const f=jl(i,a.shape,o,1,u,c,!1,p),m=new la(f.inShape,"float32"),g=m.values,y=n.data.get(s.dataId).values,b=n.data.get(a.dataId).values,[x,w,v]=h,{batchSize:k,filterHeight:N,filterWidth:I,inChannels:S,inHeight:T,inWidth:E,outChannels:C,outHeight:$,outWidth:A,strideHeight:R,strideWidth:_}=f;p=f.dataFormat;const D=N-1-f.padInfo.top,F=I-1-f.padInfo.left,M="channelsLast"===p,O=m.strides[0],L=M?m.strides[1]:m.strides[2],z=M?m.strides[2]:1,P=M?1:m.strides[1],B=d[0],V=M?d[1]:d[2],U=M?d[2]:1,W=M?1:d[1];for(let e=0;e<k;++e)for(let t=0;t<S;++t)for(let n=0;n<T;++n){const r=n-D,s=Math.max(0,Math.ceil(r/R)),a=Math.min($,(N+r)/R);for(let i=0;i<E;++i){const o=i-F,u=Math.max(0,Math.ceil(o/_)),l=Math.min(A,(I+o)/_);let c=0;for(let n=s;n<a;++n){const s=n*R-r;for(let r=u;r<l;++r){const a=B*e+V*n+U*r,i=x*(N-1-s)+w*(I-1-(r*_-o))+v*t;for(let e=0;e<C;++e)c+=y[a+W*e]*b[i+e]}}g[O*e+L*n+z*i+P*t]=c}}return n.makeTensorInfo(m.shape,m.dtype,m.values)}},xR={kernelName:Dt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:a}=t,{strides:i,pad:o,dilations:u}=r;BE([s,a],"conv3d");const l=Kl(s.shape,a.shape,i,u,o),{filterDepth:c,filterHeight:h,filterWidth:d,dilationDepth:p,dilationHeight:f,dilationWidth:m,padInfo:g}=l,y=g.front,b=g.left,x=g.top,w=new la(l.outShape,s.dtype),v=n.data.get(s.dataId).values,k=n.data.get(a.dataId).values,N=w.values,I=Me(s.shape),S=Me(a.shape);for(let e=0;e<l.batchSize;++e){const t=e*I[0],n=e*w.strides[0];for(let e=0;e<l.outDepth;++e){const r=n+e*w.strides[1],s=e*l.strideDepth-y;for(let e=0;e<c;++e){const n=s+e*p;if(n<0||n>=l.inDepth)continue;const a=e*S[0],i=t+n*I[1];for(let e=0;e<l.outHeight;++e){const t=r+e*w.strides[2],n=e*l.strideHeight-x;for(let e=0;e<h;++e){const r=n+e*f;if(r<0||r>=l.inHeight)continue;const s=a+e*S[1],o=i+r*I[2];for(let e=0;e<l.outWidth;++e){const n=t+e*l.outChannels,r=e*l.strideWidth-b;for(let e=0;e<d;++e){const t=r+e*m;if(t<0||t>=l.inWidth)continue;const a=s+e*S[2],i=o+t*l.inChannels;let u=a;for(let e=0;e<l.inChannels;++e){const t=v[i+e];for(let e=0;e<l.outChannels;++e)N[n+e]+=t*k[u+e];u+=l.outChannels}}}}}}}}return n.makeTensorInfo(w.shape,w.dtype,w.values)}},wR={kernelName:Ft,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,dy:a}=t,{strides:i,pad:o,filterShape:u}=r;BE([s,a],"conv3dBackpropFilterV2");const l=Me(s.shape),c=Me(a.shape),h=Kl(s.shape,u,i,1,o),d=h.strideDepth,p=h.strideHeight,f=h.strideWidth,m=h.filterDepth,g=h.filterHeight,y=h.filterWidth,b=new la(h.filterShape,"float32"),x=b.values,[w,v,k,N]=b.strides,I=n.data.get(a.dataId).values,[S,T,E,C]=c,$=n.data.get(s.dataId).values,[A,R,_,D]=l,F=h.padInfo.front,M=h.padInfo.left,O=h.padInfo.top;for(let e=0;e<m;++e){const t=Math.max(0,Math.ceil((F-e)/d)),n=Math.min(h.outDepth,(h.inDepth+F-e)/d),r=e*w;for(let s=0;s<g;++s){const a=Math.max(0,Math.ceil((O-s)/p)),i=Math.min(h.outHeight,(h.inHeight+O-s)/p),o=s*v+r;for(let r=0;r<y;++r){const u=Math.max(0,Math.ceil((M-r)/f)),l=Math.min(h.outWidth,(h.inWidth+M-r)/f),c=r*k+o;for(let o=0;o<h.inChannels;++o){const m=o*N+c;for(let c=0;c<h.outChannels;++c){let g=0;for(let m=0;m<h.batchSize;++m){const h=m*A,y=m*S;for(let m=t;m<n;++m){const t=(e+m*d-F)*R+h,n=m*T+y;for(let e=a;e<i;++e){const a=(s+e*p-O)*_+t,i=e*E+n;for(let e=u;e<l;++e){const t=e*C+i;g+=$[(r+e*f-M)*D+a+o]*I[t+c]}}}}x[m+c]=g}}}}}return n.makeTensorInfo(b.shape,b.dtype,b.values)}},vR={kernelName:Mt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,filter:a}=t,{pad:i,strides:o,inputShape:u}=r;BE([s],"conv3dBackpropInputV2");const l=Me(s.shape),c=Me(a.shape),h=Kl(u,a.shape,o,1,i),d=new la(h.inShape,"float32"),p=d.values,[f,m,g,y]=d.strides,b=n.data.get(s.dataId).values,[x,w,v,k]=l,N=n.data.get(a.dataId).values,[I,S,T,E]=c,{batchSize:C,filterDepth:$,filterHeight:A,filterWidth:R,inChannels:_,inDepth:D,inHeight:F,inWidth:M,outChannels:O,outDepth:L,outHeight:z,outWidth:P,strideDepth:B,strideHeight:V,strideWidth:U}=h,W=$-1-h.padInfo.front,G=A-1-h.padInfo.top,H=R-1-h.padInfo.left;for(let e=0;e<C;++e)for(let t=0;t<_;++t)for(let n=0;n<D;++n){const r=n-W,s=Math.max(0,Math.ceil(r/B)),a=Math.min(L,($+r)/B);for(let i=0;i<F;++i){const o=i-G,u=Math.max(0,Math.ceil(o/V)),l=Math.min(z,(A+o)/V);for(let c=0;c<M;++c){const h=c-H,d=Math.max(0,Math.ceil(h/U)),C=Math.min(P,(R+h)/U);let _=0;for(let n=s;n<a;++n){const s=n*B-r;for(let r=u;r<l;++r){const a=r*V-o;for(let i=d;i<C;++i){const o=x*e+w*n+v*r+k*i,u=I*($-1-s)+S*(A-1-a)+T*(R-1-(i*U-h))+E*t;for(let e=0;e<O;++e)_+=b[o+e]*N[u+e]}}}p[f*e+m*n+g*i+y*c+t]=_}}}return n.makeTensorInfo(d.shape,d.dtype,d.values)}},kR=fC(Ot,e=>Math.cos(e)),NR={kernelName:Ot,backendName:"cpu",kernelFunc:kR},IR=fC(Lt,e=>Math.cosh(e)),SR={kernelName:Lt,backendName:"cpu",kernelFunc:IR},TR={kernelName:Bt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{image:s,boxes:a,boxInd:i}=t,{cropSize:o,method:u,extrapolationValue:l}=r,[c,h,d,p]=s.shape,f=a.shape[0],[m,g]=o,y=ko([f,m,g,p],"float32"),b=n.data.get(a.dataId).values,x=n.data.get(i.dataId).values,w=n.data.get(s.dataId).values,v=Me(s.shape),k=Me(y.shape);for(let e=0;e<f;e++){const t=4*e,n=b[t],r=b[t+1],s=b[t+2],a=b[t+3],i=x[e];if(i>=c)continue;const o=m>1?(s-n)*(h-1)/(m-1):0,f=g>1?(a-r)*(d-1)/(g-1):0;for(let t=0;t<m;t++){const c=m>1?n*(h-1)+t*o:.5*(n+s)*(h-1);if(c<0||c>h-1)for(let n=0;n<g;n++)for(let r=0;r<p;r++){const s=r+n*k[2]+t*k[1]+e*k[0];y.values[s]=l}else if("bilinear"===u){const n=Math.floor(c),s=Math.ceil(c),o=c-n;for(let u=0;u<g;u++){const c=g>1?r*(d-1)+u*f:.5*(r+a)*(d-1);if(c<0||c>d-1){for(let n=0;n<p;n++){const r=n+u*k[2]+t*k[1]+e*k[0];y.values[r]=l}continue}const h=Math.floor(c),m=Math.ceil(c),b=c-h;for(let r=0;r<p;r++){let a=r+h*v[2]+n*v[1]+i*v[0];const l=w[a];a=r+m*v[2]+n*v[1]+i*v[0];const c=w[a];a=r+h*v[2]+s*v[1]+i*v[0];const d=w[a];a=r+m*v[2]+s*v[1]+i*v[0];const p=l+(c-l)*b,f=d+(w[a]-d)*b;a=r+u*k[2]+t*k[1]+e*k[0],y.values[a]=p+(f-p)*o}}}else for(let n=0;n<g;++n){const s=g>1?r*(d-1)+n*f:.5*(r+a)*(d-1);if(s<0||s>d-1){for(let r=0;r<p;r++){const s=r+n*k[2]+t*k[1]+e*k[0];y.values[s]=l}continue}const o=Math.round(s),u=Math.round(c);for(let r=0;r<p;r++){const s=r+o*v[2]+u*v[1]+i*v[0],a=r+n*k[2]+t*k[1]+e*k[0];y.values[a]=w[s]}}}}return n.makeTensorInfo(y.shape,y.dtype,y.values)}},ER={kernelName:zt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a,exclusive:i,reverse:o}=r;BE(s,"cumprod");const u=nh([a],s.shape.length);let l=s;null!=u&&(l=g$({inputs:{x:s},backend:n,attrs:{perm:u}}));const c=sh(1,s.shape.length)[0];if(c!==l.shape.length-1)throw new Error(`backend.cumprod in CPU expects an inner-most axis=${l.shape.length-1} but got axis=${c}`);const h=ka(l.dtype,"int32"),d=Pe(le(l.shape),h),p=n.data.get(l.dataId).values,f=l.shape[l.shape.length-1],m=o?(e,t)=>e+f-t-1:(e,t)=>e+t;for(let e=0;e<p.length;e+=f)for(let t=0;t<f;t++){const n=m(e,t);if(0===t)d[n]=i?1:p[n];else{const r=m(e,t-1);d[n]=i?p[r]*d[r]:p[n]*d[r]}}const g=n.makeTensorInfo(l.shape,h,d);if(null!=u){const e=g$({inputs:{x:g},backend:n,attrs:{perm:rh(u)}});return n.disposeIntermediateTensorInfo(g),n.disposeIntermediateTensorInfo(l),e}return g}},CR={kernelName:Pt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a,exclusive:i,reverse:o}=r;BE(s,"cumsum");const u=nh([a],s.shape.length);let l=s;null!=u&&(l=g$({inputs:{x:s},backend:n,attrs:{perm:u}}));const c=sh(1,s.shape.length)[0];if(c!==l.shape.length-1)throw new Error(`backend.cumsum in CPU expects an inner-most axis=${l.shape.length-1} but got axis=${c}`);const h=ka(l.dtype,"int32"),d=Be(le(l.shape),h),p=n.data.get(l.dataId).values,f=l.shape[l.shape.length-1],m=o?(e,t)=>e+f-t-1:(e,t)=>e+t;for(let e=0;e<p.length;e+=f)for(let t=0;t<f;t++){const n=m(e,t);if(0===t)d[n]=i?0:p[n];else{const r=m(e,t-1);d[n]=i?p[r]+d[r]:p[n]+d[r]}}const g=n.makeTensorInfo(l.shape,h,d);if(null!=u){const e=g$({inputs:{x:g},backend:n,attrs:{perm:rh(u)}});return n.disposeIntermediateTensorInfo(g),n.disposeIntermediateTensorInfo(l),e}return g}},$R={kernelName:Vt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,weights:a}=t,{size:i,binaryOutput:o}=r;if(1===s.shape.length){const e=uC(n.data.get(s.dataId).values,n.data.get(a.dataId).values,a.dtype,a.shape,i);return n.makeTensorInfo([i],a.dtype,e)}if(2===s.shape.length){const e=lC(n.bufferSync(s),n.bufferSync(a),i,o);return n.makeTensorInfo(e.shape,a.dtype,e.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${s.shape.length}.`)}},AR={kernelName:Ut,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{blockSize:a,dataFormat:i}=r;ie("NHWC"===i,()=>`Only NHWC dataFormat supported on CPU for depthToSpace. Got ${i}`);const o=s.shape[0],u=s.shape[1],l=s.shape[2],c=s.shape[3],h=u*a,d=l*a,p=c/(a*a),f=n.data.get(s.dataId).values,m=new Float32Array(o*h*d*p);let g=0;for(let e=0;e<o;++e)for(let t=0;t<h;++t){const n=Math.floor(t/a),r=t%a;for(let t=0;t<d;++t){const s=Math.floor(t/a),i=(r*a+t%a)*p;for(let t=0;t<p;++t){const r=t+i+c*(s+l*(n+u*e));m[g++]=f[r]}}}return n.makeTensorInfo([o,h,d,p],s.dtype,m)}};function RR(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:a}=t,{strides:i,pad:o,dilations:u,dimRoundingMode:l}=r;BE([s,a],"depthwiseConv2DNative");const c=Me(s.shape),h=Me(a.shape);let d=u;null==d&&(d=[1,1]),ie(ec(i,d),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${i} and dilations '${d}'`);const p=jl(s.shape,a.shape,i,d,o,l,!0),{filterHeight:f,filterWidth:m,dilationHeight:g,dilationWidth:y,padInfo:b}=p,x=b.left,w=b.top,v=p.outChannels/p.inChannels,k=new la(p.outShape,s.dtype),N=n.data.get(s.dataId).values,I=n.data.get(a.dataId).values,S=k.values;for(let e=0;e<p.batchSize;++e){const t=e*c[0],n=e*k.strides[0];for(let e=0;e<p.outHeight;++e){const r=n+e*k.strides[1],s=e*p.strideHeight-w;for(let e=0;e<f;++e){const n=s+e*g;if(n<0||n>=p.inHeight)continue;const a=e*h[0],i=t+n*c[1];for(let e=0;e<p.outWidth;++e){const t=r+e*k.strides[2],n=e*p.strideWidth-x;for(let e=0;e<m;++e){const r=n+e*y;if(r<0||r>=p.inWidth)continue;const s=a+e*h[1],o=i+r*p.inChannels;let u=t,l=s;for(let e=0;e<p.inChannels;++e){const t=N[o+e];for(let e=0;e<v;++e)S[u+e]+=t*I[l+e];u+=v,l+=v}}}}}}return n.makeTensorInfo(k.shape,k.dtype,k.values)}const _R={kernelName:Wt,backendName:"cpu",kernelFunc:RR},DR={kernelName:Gt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,dy:a}=t,{strides:i,dilations:o,pad:u,dimRoundingMode:l,filterShape:c}=r;BE([s,a],"depthwiseConv2dNativeBackpropFilter");const h=jl(s.shape,c,i,o,u,l,!0),{strideHeight:d,strideWidth:p,filterHeight:f,filterWidth:m}=h,g=new la(h.filterShape,"float32"),y=h.padInfo.left,b=h.padInfo.top,x=h.outChannels/h.inChannels,w=n.data.get(s.dataId).values,v=new la(s.shape,s.dtype,w),k=n.data.get(a.dataId).values,N=new la(a.shape,a.dtype,k);for(let e=0;e<f;++e){const t=Math.max(0,Math.ceil((b-e)/d)),n=Math.min(h.outHeight,(h.inHeight+b-e)/d);for(let r=0;r<m;++r){const s=Math.max(0,Math.ceil((y-r)/p)),a=Math.min(h.outWidth,(h.inWidth+y-r)/p);for(let i=0;i<h.outChannels;++i){const o=Math.trunc(i/x),u=i%x;let l=0;for(let u=0;u<h.batchSize;++u)for(let c=t;c<n;++c){const t=e+c*d-b;for(let e=s;e<a;++e){const n=r+e*p-y;l+=v.get(u,t,n,o)*N.get(u,c,e,i)}}g.set(l,e,r,o,u)}}}return n.makeTensorInfo(g.shape,g.dtype,g.values)}},FR={kernelName:Ht,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,filter:a}=t,{strides:i,dilations:o,pad:u,dimRoundingMode:l,inputShape:c}=r;BE([s,a],"depthwiseConv2DNativeBackpropInput");const h=Me(s.shape),d=Me(a.shape),p=jl(c,a.shape,i,o,u,l,!0),f=new la(p.inShape,"float32"),m=f.values,[g,y,b]=f.strides,x=n.data.get(s.dataId).values,[w,v,k]=h,N=n.data.get(a.dataId).values,[I,S,T]=d,{batchSize:E,filterHeight:C,filterWidth:$,inChannels:A,inHeight:R,inWidth:_,outChannels:D,outHeight:F,outWidth:M,strideHeight:O,strideWidth:L}=p,z=C-1-p.padInfo.top,P=$-1-p.padInfo.left,B=D/A;for(let e=0;e<E;++e)for(let t=0;t<A;++t)for(let n=0;n<R;++n){const r=n-z,s=Math.max(0,Math.ceil(r/O)),a=Math.min(F,(C+r)/O);for(let i=0;i<_;++i){const o=i-P,u=Math.max(0,Math.ceil(o/L)),l=Math.min(M,($+o)/L);let c=0;for(let n=s;n<a;++n){const s=n*O-r;for(let r=u;r<l;++r){const a=w*e+v*n+k*r,i=I*(C-1-s)+S*($-1-(r*L-o))+T*t;for(let e=0;e<B;++e)c+=x[a+(t*B+e)]*N[i+e]}}m[g*e+y*n+b*i+t]=c}}return n.makeTensorInfo(f.shape,f.dtype,f.values)}},MR={kernelName:jt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r}=t,s=le(r.shape),a=n.data.get(r.dataId).values,i=ko([s,s],r.dtype),o=i.values;for(let e=0;e<a.length;e++)o[e*s+e]=a[e];const u=[...r.shape,...r.shape];return n.makeTensorInfo(u,i.dtype,i.values)}},OR={kernelName:Kt,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:r,filter:s}=e,{strides:a,pad:i,dilations:o}=n,u=t,l=u.data.get(r.dataId).values,c=r.shape.length,h=u.data.get(s.dataId).values,d=s.shape.length,{batchSize:p,inHeight:f,inWidth:m,inChannels:g,outHeight:y,outWidth:b,padInfo:x,strideHeight:w,strideWidth:v,filterHeight:k,filterWidth:N,dilationHeight:I,dilationWidth:S,outShape:T}=Wl(r.shape,s.shape,a,i,"NHWC",o),E=le(T),C=T.length,$=Ne(r.dtype,E);for(let e=0;e<p;++e)for(let t=0;t<y;++t){const n=t*w-x.top;for(let a=0;a<b;++a){const i=a*v-x.left;for(let o=0;o<g;++o){let u=Number.MIN_SAFE_INTEGER;for(let t=0;t<k;++t){const a=n+t*I;if(a>=0&&a<f)for(let n=0;n<N;++n){const p=i+n*S;if(p>=0&&p<m){const i=We([e,a,p,o],c,Me(r.shape)),f=We([t,n,o],d,Me(s.shape)),m=l[i]+h[f];m>u&&(u=m)}}}$[We([e,t,a,o],C,Me(T))]=u}}}return{dataId:u.write(qs($,r.dtype),T,r.dtype),shape:T,dtype:r.dtype}}},LR={kernelName:Xt,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:r,filter:s,dy:a}=e,{strides:i,pad:o,dilations:u}=n,l=t,c=Le(r.shape,l.data.get(r.dataId).values),h=Le(s.shape,l.data.get(s.dataId).values),{batchSize:d,inHeight:p,inWidth:f,inChannels:m,outHeight:g,outWidth:y,padInfo:b,strideHeight:x,strideWidth:w,filterHeight:v,filterWidth:k,dilationHeight:N,dilationWidth:I,outShape:S}=Wl(r.shape,s.shape,i,o,"NHWC",u);ie(a.rank===S.length,()=>`Error in ${Xt}, dy must have the same rank as output ${S.length}, but got ${a.rank}`);const T=Le(S,l.data.get(a.dataId).values),E=Ve(s.shape,s.dtype);for(let e=0;e<d;++e)for(let t=0;t<g;++t){const n=t*x-b.top;for(let r=0;r<y;++r){const s=r*w-b.left;for(let a=0;a<m;++a){let i=Number.MIN_SAFE_INTEGER,o=0,u=0;for(let t=0;t<v;++t){const r=n+t*N;if(r>=0&&r<p)for(let n=0;n<k;++n){const l=s+n*I;if(l>=0&&l<f){const s=c[e][r][l][a]+h[t][n][a];s>i&&(i=s,o=t,u=n)}}}E[o][u][a]+=T[e][t][r][a]}}}return{dataId:l.write(qs(E,r.dtype),s.shape,s.dtype),shape:s.shape,dtype:s.dtype}}},zR={kernelName:qt,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:r,filter:s,dy:a}=e,{strides:i,pad:o,dilations:u}=n,l=t,c=Le(r.shape,l.data.get(r.dataId).values),h=Le(s.shape,l.data.get(s.dataId).values),{batchSize:d,inHeight:p,inWidth:f,inChannels:m,outHeight:g,outWidth:y,padInfo:b,strideHeight:x,strideWidth:w,filterHeight:v,filterWidth:k,dilationHeight:N,dilationWidth:I,outShape:S}=Wl(r.shape,s.shape,i,o,"NHWC",u);ie(a.rank===S.length,()=>`Error in ${qt}, dy must have the same rank as output ${S.length}, but got ${a.rank}`);const T=Le(S,l.data.get(a.dataId).values),E=Ve(r.shape,r.dtype);for(let e=0;e<d;++e)for(let t=0;t<g;++t){const n=t*x-b.top;for(let r=0;r<y;++r){const s=r*w-b.left;for(let a=0;a<m;++a){let i=Number.MIN_SAFE_INTEGER,o=n<0?0:n,u=s<0?0:s;for(let t=0;t<v;++t){const r=n+t*N;if(r>=0&&r<p)for(let n=0;n<k;++n){const l=s+n*I;if(l>=0&&l<f){const s=c[e][r][l][a]+h[t][n][a];s>i&&(i=s,o=r,u=l)}}}E[e][o][u][a]+=T[e][t][r][a]}}}return{dataId:l.write(qs(E,r.dtype),r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}},PR={kernelName:Yt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{image:s}=t,{canvas:a,options:i}=r,{contextOptions:o,imageOptions:u}=i||{},l=(null==u?void 0:u.alpha)||1,c=(null==o?void 0:o.contextType)||"2d";if("2d"!==c)throw new Error(`Context type ${o.contextType} is not supported by the CPU backend.`);const h=a.getContext(c,(null==o?void 0:o.contextAttributes)||{});if(null==h)throw new Error(`Could not get the context with ${c} type.`);const[d,p]=s.shape.slice(0,2),f=2===s.shape.length?1:s.shape[2],m=n.data.get(s.dataId).values,g="float32"===s.dtype?255:1,y=new Uint8ClampedArray(p*d*4);for(let e=0;e<d*p;++e){const t=[0,0,0,255*l];for(let n=0;n<f;n++){const r=m[e*f+n];if("float32"===s.dtype){if(r<0||r>1)throw new Error(`Tensor values for a float32 Tensor must be in the range [0 - 1] but encountered ${r}.`)}else if("int32"===s.dtype&&(r<0||r>255))throw new Error(`Tensor values for a int32 Tensor must be in the range [0 - 255] but encountered ${r}.`);1===f?(t[0]=r*g,t[1]=r*g,t[2]=r*g):t[n]=r*g}const n=4*e;y[n+0]=Math.round(t[0]),y[n+1]=Math.round(t[1]),y[n+2]=Math.round(t[2]),y[n+3]=Math.round(t[3])}a.width=p,a.height=d;const b=new ImageData(y,p,d);return h.putImageData(b,0,0),s}};function BR(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a,keepDims:i}=r;let o;BE(s,"sum"),o="bool"===s.dtype?eC({inputs:{x:s},backend:n,attrs:{dtype:"int32"}}):XE({inputs:{x:s},backend:n});const u=o.shape.length,l=we(a,o.shape),c=nh(l,u);let h=l,d=o;null!=c&&(d=g$({inputs:{x:o},backend:n,attrs:{perm:c}}),h=sh(h.length,u)),th("sum",h,d.shape.length);const[p,f]=Jc(d.shape,h);let m=qE(n,p,ka(d.dtype,"int32"));const g=le(f),y=n.data.get(m.dataId).values,b=n.data.get(d.dataId).values;for(let e=0;e<y.length;++e){const t=e*g;let n=0;for(let e=0;e<g;++e)n+=b[t+e];y[e]=n}if(i){const e=m;m=TA({inputs:{x:m},backend:n,attrs:{shape:eh(m.shape,l)}}),n.disposeIntermediateTensorInfo(e)}return n.disposeIntermediateTensorInfo(o),null!=c&&n.disposeIntermediateTensorInfo(d),m}const VR={kernelName:Pr,backendName:"cpu",kernelFunc:BR},UR={kernelName:Qt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{equation:s}=r,a=t,{allDims:i,summedDims:o,idDims:u}=Im(s,a.length);Tm(i.length,u,a);const{path:l,steps:c}=Em(o,u),h=c.length;let d=null,p=i.length;const f=[];for(let e=0;e<h;++e){for(const t of c[e]){const{permutationIndices:e,expandDims:r}=Sm(p,u[t]);let s;Cm(e)?s=a[t]:(s=g$({inputs:{x:a[t]},backend:n,attrs:{perm:e}}),f.push(s));const i=s.shape.slice();for(let e=0;e<r.length;++e)i.splice(r[e],0,1);de(s.shape,i)||(s=TA({inputs:{x:s},backend:n,attrs:{shape:i}}),f.push(s)),null===d?d=s:(d=u$({inputs:{a:s,b:d},backend:n}),f.push(d))}e<h-1&&(l[e]>=0&&(d=BR({inputs:{x:d},backend:n,attrs:{axis:l[e]-(i.length-p),keepDims:!1}}),f.push(d)),p--)}for(const e of f)e!==d&&n.disposeIntermediateTensorInfo(e);return d}},WR={kernelName:en,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{dy:r,y:s}=t;BE([r,s],"eluGrad");const a=new Float32Array(le(s.shape)),i=n.data.get(s.dataId).values,o=n.data.get(r.dataId).values;for(let e=0;e<i.length;++e){const t=i[e];a[e]=t>=0?o[e]:o[e]*(t+1)}return n.makeTensorInfo(s.shape,"float32",a)}},GR=im,HR=om,jR=um,KR=lm,qR=cm,XR=hm,YR=fC(tn,e=>{const t=Math.sign(e),n=Math.abs(e),r=1/(1+GR*n);return t*(1-((((XR*r+qR)*r+KR)*r+jR)*r+HR)*r*Math.exp(-n*n))}),ZR={kernelName:tn,backendName:"cpu",kernelFunc:YR};function QR(e){const{inputs:t,backend:n,attrs:r}=e,{input:s}=t,{dim:a}=r,i=s.shape.length,o=s.shape.slice();let u=a;return a<0&&(ie(-(i+1)<=a,()=>`Axis must be in the interval [${-(i+1)}, ${i}]`),u=i+a+1),o.splice(u,0,1),TA({inputs:{x:s},backend:n,attrs:{shape:o}})}const JR={kernelName:sn,backendName:"cpu",kernelFunc:QR},e_=HE((e,t)=>e/t),t_=nC(Zt,e_),n_={kernelName:Zt,backendName:"cpu",kernelFunc:t_};function r_(e,t,n){const r=e.shape,s=r[0],a=r[1],i=n.data.get(e.dataId),o=i.complexTensorInfos.real,u=i.complexTensorInfos.imag,l=[s,a],c=le(l),h=ke("float32",c),d=ke("float32",c);for(let e=0;e<s;e++){const r=z$({inputs:{x:o},backend:n,attrs:{begin:[e,0],size:[1,a]}}),s=z$({inputs:{x:u},backend:n,attrs:{begin:[e,0],size:[1,a]}}),i=jE({inputs:{real:r,imag:s},backend:n}),{real:l,imag:c}=s_(i,t,n),p=dm(l,c);for(let t=0;t<a;t++){const n=gm(p,t);h[e*a+t]=n.real,d[e*a+t]=n.imag}n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(i)}const p=n.makeTensorInfo(l,"float32",h),f=n.makeTensorInfo(l,"float32",d),m=jE({inputs:{real:p,imag:f},backend:n});return n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),m}function s_(e,t,n){const r=le(e.shape),s=n.data.get(e.dataId),a=n.data.get(s.complexTensorInfos.real.dataId).values,i=n.data.get(s.complexTensorInfos.imag.dataId).values;if((o=r)&o-1){const e=function(e,t,n){const r=new Float32Array(2*t);for(let s=0;s<t;s++){let a=0,i=0;for(let r=0;r<t;r++){const o=xm(s*r,t,n),u=gm(e,r);a+=u.real*o.real-u.imag*o.imag,i+=u.real*o.imag+u.imag*o.real}n&&(a/=t,i/=t),ym(r,a,i,s)}return r}(dm(a,i),r,t);return pm(e)}{const s=a_(a,i,r,t,n),o=[e.shape[0],e.shape[1]];if(t){const e=n.makeTensorInfo(o,"float32",s.real),t=n.makeTensorInfo(o,"float32",s.imag),a=n.makeTensorInfo([],"float32",Ks(r,"float32")),i=XE({inputs:{x:a},backend:n}),u=n_.kernelFunc({inputs:{a:e,b:a},backend:n}),l=n_.kernelFunc({inputs:{a:t,b:i},backend:n}),c=n.data.get(u.dataId).values,h=n.data.get(l.dataId).values;return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(l),{real:c,imag:h}}return s}var o}function a_(e,t,n,r,s){if(1===n)return{real:e,imag:t};const a=dm(e,t),i=n/2,o=fm(a),u=o.real,l=o.imag,c=[u.length],h=s.makeTensorInfo(c,"float32",u),d=s.makeTensorInfo(c,"float32",l),p=jE({inputs:{real:h,imag:d},backend:s}),f=mm(a),m=f.real,g=f.imag,y=[m.length],b=s.makeTensorInfo(y,"float32",m),x=s.makeTensorInfo(y,"float32",g),w=jE({inputs:{real:b,imag:x},backend:s}),v=a_(u,l,i,r,s),k=v.real,N=v.imag,I=[k.length],S=s.makeTensorInfo(I,"float32",k),T=s.makeTensorInfo(I,"float32",N),E=jE({inputs:{real:S,imag:T},backend:s}),C=a_(m,g,i,r,s),$=C.real,A=C.imag,R=[$.length],_=s.makeTensorInfo(R,"float32",$),D=s.makeTensorInfo(R,"float32",A),F=jE({inputs:{real:_,imag:D},backend:s}),M=bm(n,r),O=[M.real.length],L=s.makeTensorInfo(O,"float32",M.real),z=s.makeTensorInfo(O,"float32",M.imag),P=jE({inputs:{real:L,imag:z},backend:s}),B=u$({inputs:{a:P,b:F},backend:s}),V=iC({inputs:{a:E,b:B},backend:s}),U=iA({inputs:{a:E,b:B},backend:s}),W=ZE({inputs:{input:V},backend:s}),G=ZE({inputs:{input:U},backend:s}),H=hR({inputs:{input:V},backend:s}),j=hR({inputs:{input:U},backend:s}),K=pR({inputs:[W,G],backend:s,attrs:{axis:0}}),q=pR({inputs:[H,j],backend:s,attrs:{axis:0}}),X=s.data.get(K.dataId).values,Y=s.data.get(q.dataId).values;return s.disposeIntermediateTensorInfo(h),s.disposeIntermediateTensorInfo(d),s.disposeIntermediateTensorInfo(p),s.disposeIntermediateTensorInfo(b),s.disposeIntermediateTensorInfo(x),s.disposeIntermediateTensorInfo(w),s.disposeIntermediateTensorInfo(S),s.disposeIntermediateTensorInfo(T),s.disposeIntermediateTensorInfo(E),s.disposeIntermediateTensorInfo(_),s.disposeIntermediateTensorInfo(D),s.disposeIntermediateTensorInfo(F),s.disposeIntermediateTensorInfo(L),s.disposeIntermediateTensorInfo(z),s.disposeIntermediateTensorInfo(P),s.disposeIntermediateTensorInfo(B),s.disposeIntermediateTensorInfo(V),s.disposeIntermediateTensorInfo(U),s.disposeIntermediateTensorInfo(W),s.disposeIntermediateTensorInfo(H),s.disposeIntermediateTensorInfo(G),s.disposeIntermediateTensorInfo(j),s.disposeIntermediateTensorInfo(K),s.disposeIntermediateTensorInfo(q),{real:X,imag:Y}}const i_={kernelName:on,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:r}=t,s=le(r.shape),a=r.shape[r.shape.length-1],i=TA({inputs:{x:r},backend:n,attrs:{shape:[s/a,a]}}),o=r_(i,!1,n),u=TA({inputs:{x:o},backend:n,attrs:{shape:r.shape}});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(o),u}};function o_(e){const{backend:t,attrs:n}=e,{shape:r,value:s,dtype:a}=n,i=a||_e(s),o=Ne(i,le(r));return function(e,t){e.fill(t)}(o,s),t.makeTensorInfo(r,i,o)}const u_={kernelName:un,backendName:"cpu",kernelFunc:o_},l_={kernelName:ln,backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{image:r}=e,s=n,a=ke(r.dtype,le(r.shape)),[i,o,u,l]=r.shape,c=s.data.get(r.dataId).values;for(let e=0;e<i;e++){const t=e*u*o*l;for(let e=0;e<o;e++){const n=e*(u*l);for(let e=0;e<u;e++){const r=e*l;for(let s=0;s<l;s++){const i=Math.round(u-e-1),o=t+n+r+s;let h=c[o];i>=0&&i<u&&(h=c[t+n+i*l+s]),a[o]=h}}}}return{dataId:s.write(a,r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}},c_={kernelName:ys,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:a,bias:i,preluActivationWeights:o}=t,{strides:u,pad:l,dataFormat:c,dilations:h,dimRoundingMode:d,activation:p,leakyreluAlpha:f}=r;let m=mR({inputs:{x:s,filter:a},backend:n,attrs:{strides:u,pad:l,dataFormat:c,dilations:h,dimRoundingMode:d}});if(i){const e=m;if("NCHW"===c&&1===i.shape.length&&1!==i.shape[0]){const e=TA({inputs:{x:i},backend:n,attrs:{shape:[i.shape[0],1,1]}});m=iC({inputs:{a:m,b:e},backend:n}),n.disposeIntermediateTensorInfo(e)}else m=iC({inputs:{a:m,b:i},backend:n});n.disposeIntermediateTensorInfo(e)}if(p){const e=m;if("NCHW"===c&&"prelu"===p&&1===o.shape.length&&1!==o.shape[0]){const e=TA({inputs:{x:o},backend:n,attrs:{shape:[o.shape[0],1,1]}});m=SA(n,m,p,e,f),n.disposeIntermediateTensorInfo(e)}else m=SA(n,m,p,o,f);n.disposeIntermediateTensorInfo(e)}return m}},h_={kernelName:bs,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:a,bias:i,preluActivationWeights:o}=t,{strides:u,pad:l,dataFormat:c,dilations:h,dimRoundingMode:d,activation:p,leakyreluAlpha:f}=r;let m=RR({inputs:{x:s,filter:a},backend:n,attrs:{strides:u,pad:l,dataFormat:c,dilations:h,dimRoundingMode:d}});if(i){const e=m;m=iC({inputs:{a:m,b:i},backend:n}),n.disposeIntermediateTensorInfo(e)}if(p){const e=m;m=SA(n,m,p,o,f),n.disposeIntermediateTensorInfo(e)}return m}},d_={kernelName:fn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{params:r,indices:s}=t,a=le(r.shape),i=s.shape,o=i[i.length-1],[u,l,c,h]=ju(r,s);if(0===l)return n.makeTensorInfo(u,r.dtype,[]);const d=MC(n.data.get(s.dataId).values,n.bufferSync(r),r.dtype,l,o,c,h,r.shape,a);return n.makeTensorInfo(u,r.dtype,d.values)}},p_={kernelName:pn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,indices:a}=t,{axis:i,batchDims:o}=r;BE([s,a],"gatherV2");const u=we(i,s.shape)[0],l=n.data.get(a.dataId).values,c=s.shape[u];for(let e=0;e<l.length;++e){const t=l[e];ie(t<=c-1&&t>=0,()=>`GatherV2: the index value ${t} is not in [0, ${c-1}]`)}let h=o;null==o&&(h=0);const d=le(a.shape),p=Hm(s,a,u,h),f=TA({inputs:{x:s},backend:n,attrs:{shape:[p.batchSize,p.outerSize,p.dimSize,p.sliceSize]}}),m=TA({inputs:{x:a},backend:n,attrs:{shape:[p.batchSize,d/p.batchSize]}}),g=[p.batchSize,p.outerSize,d/p.batchSize,p.sliceSize],y=n.bufferSync(m),b=OC(n.bufferSync(f),y,g);return n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),n.makeTensorInfo(p.outputShape,b.dtype,b.values)}},f_={kernelName:bn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:r}=t,s=le(r.shape),a=r.shape[r.shape.length-1],i=TA({inputs:{x:r},backend:n,attrs:{shape:[s/a,a]}}),o=r_(i,!0,n),u=TA({inputs:{x:o},backend:n,attrs:{shape:r.shape}});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(o),u}},m_=fC(wn,e=>Number.isFinite(e)?1:0,"bool"),g_={kernelName:wn,backendName:"cpu",kernelFunc:m_},y_=fC(vn,e=>Math.abs(e)===1/0?1:0,"bool"),b_={kernelName:vn,backendName:"cpu",kernelFunc:y_},x_=fC(kn,e=>Number.isNaN(e)?1:0,"bool"),w_={kernelName:kn,backendName:"cpu",kernelFunc:x_},v_={kernelName:Tn,backendName:"cpu",kernelFunc:function(e){const{backend:t,attrs:n}=e,{start:r,stop:s,num:a}=n,i=XC(r,s,a);return t.makeTensorInfo([i.length],"float32",i)}},k_=fC(Cn,e=>Math.log1p(e)),N_={kernelName:Cn,backendName:"cpu",kernelFunc:k_},I_=HE((e,t)=>e&&t),S_=nC($n,I_,null,"bool"),T_={kernelName:$n,backendName:"cpu",kernelFunc:S_},E_=fC(An,e=>e?0:1,"bool"),C_={kernelName:An,backendName:"cpu",kernelFunc:E_},$_=HE((e,t)=>e||t),A_=nC(Rn,$_,null,"bool"),R_={kernelName:Rn,backendName:"cpu",kernelFunc:A_},__={kernelName:Mn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{depthRadius:a,bias:i,alpha:o,beta:u}=r;BE(s,"LRN");const l=s.shape[3],c=l-1,h=n.data.get(s.dataId).values,d=le(s.shape),p=new Float32Array(d);function f(e){const t=e%l;let n=e-t+Math.max(0,t-a);const r=e-t+Math.min(t+a,c);let s=0;for(;n<=r;n++){const e=h[n];s+=e*e}return s}for(let e=0;e<d;e++){const t=f(e),n=h[e]*Math.pow(i+o*t,-u);p[e]=n}return n.makeTensorInfo(s.shape,s.dtype,p)}},D_={kernelName:On,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,y:a,dy:i}=t,{depthRadius:o,bias:u,alpha:l,beta:c}=r;BE(i,"LRNGrad");const h=le(i.shape),d=i.shape[3],p=n.data.get(i.dataId).values,f=n.data.get(s.dataId).values,m=n.data.get(a.dataId).values,g=new Float32Array(h),y=h;for(let e=0;e<y;e++){const t=e%d,n=e-t+Math.max(0,t-o),r=e-t+Math.min(d,t+o+1);let s=0;for(let e=n;e<r;e++)s+=Math.pow(f[e],2);s=l*s+u;for(let t=n;t<r;t++){let n=-2*l*c*f[t]*m[e]/s;e===t&&(n+=Math.pow(s,-c)),n*=p[e],g[t]+=n}}return n.makeTensorInfo(i.shape,s.dtype,g)}};function F_(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{reductionIndices:a,keepDims:i}=r,o=n;let u=s.shape;const l=u.length,c=we(a,u);let h=c;const d=nh(h,l);let p=o.data.get(s.dataId).values;if(null!=d){const e=new Array(l);for(let t=0;t<e.length;t++)e[t]=u[d[t]];p=m$(p,u,s.dtype,d,e),h=sh(h.length,l),u=e}BE(s,"max"),th("max",h,l);const[f,m]=Jc(u,h),g=JC(p,le(m),f,s.dtype),y=o.write(g,f,s.dtype);let b=f;return i&&(b=eh(f,c)),{dataId:y,shape:b,dtype:s.dtype}}const M_={kernelName:zn,backendName:"cpu",kernelFunc:F_},O_={kernelName:Bn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t;BE(s,"maxPool");const{filterSize:a,strides:i,pad:o,dimRoundingMode:u}=r;ie(ec(i,1),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${i} and dilations '1'`);const l=Gl(s.shape,a,i,1,o,u);let c;if(1===l.filterWidth&&1===l.filterHeight&&de(l.inShape,l.outShape))c=XE({inputs:{x:s},backend:n});else{const e=n.data.get(s.dataId).values,t=Me(s.shape),r=ZA(e,s.shape,s.dtype,t,l,"max");c=n.makeTensorInfo(l.outShape,s.dtype,r.values)}return c}},L_={kernelName:Un,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{filterSize:a,strides:i,pad:o,dimRoundingMode:u,dataFormat:l}=r;BE(s,"maxPool3d");const c=Hl(s.shape,a,i,1,o,u,l),h=JA(n.data.get(s.dataId).values,s.shape,s.dtype,Me(s.shape),c,"max");return n.makeTensorInfo(h.shape,"float32",h.values)}},z_={kernelName:Wn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,input:a}=t,{filterSize:i,strides:o,pad:u,dimRoundingMode:l}=r;BE([s,a],"maxPool3DGrad");const c=Hl(a.shape,i,o,1,u,l),h=function(e,t){const n=ko(t.outShape,"int32"),r=t.strideDepth,s=t.strideHeight,a=t.strideWidth,i=t.dilationDepth,o=t.dilationHeight,u=t.dilationWidth,l=t.effectiveFilterDepth,c=t.effectiveFilterHeight,h=t.effectiveFilterWidth,d=t.padInfo.front,p=t.padInfo.top,f=t.padInfo.left;for(let m=0;m<t.batchSize;++m)for(let g=0;g<t.inChannels;++g)for(let y=0;y<t.outDepth;++y){const b=y*r-d;let x=b;for(;x<0;)x+=i;const w=Math.min(t.inDepth,l+b);for(let r=0;r<t.outHeight;++r){const l=r*s-p;let d=l;for(;d<0;)d+=o;const v=Math.min(t.inHeight,c+l);for(let s=0;s<t.outWidth;++s){const p=s*a-f;let k=p;for(;k<0;)k+=u;const N=Math.min(t.inWidth,h+p);let I=Number.NEGATIVE_INFINITY,S=-1;for(let t=x;t<w;t+=i){const n=t-b;for(let r=d;r<v;r+=o){const s=r-l;for(let a=k;a<N;a+=u){const i=a-p,o=e.get(m,t,r,a,g);o>=I&&(I=o,S=n*c*h+s*c+i)}}}n.set(S,m,y,r,s,g)}}}return n}(n.bufferSync(a),c),d=c.strideDepth,p=c.strideHeight,f=c.strideWidth,m=c.dilationDepth,g=c.dilationHeight,y=c.dilationWidth,b=c.effectiveFilterDepth,x=c.effectiveFilterHeight,w=c.effectiveFilterWidth,v=b-1-c.padInfo.front,k=w-1-c.padInfo.left,N=x-1-c.padInfo.top,I=ko(a.shape,"float32"),S=n.bufferSync(s);for(let e=0;e<c.batchSize;++e)for(let t=0;t<c.inChannels;++t)for(let n=0;n<c.inDepth;++n)for(let r=0;r<c.inHeight;++r)for(let s=0;s<c.inWidth;++s){const a=n-v,i=r-N,o=s-k;let u=0;for(let n=0;n<b;n+=m){const r=(a+n)/d;if(!(r<0||r>=c.outDepth||Math.floor(r)!==r))for(let s=0;s<x;s+=g){const a=(i+s)/p;if(!(a<0||a>=c.outHeight||Math.floor(a)!==a))for(let i=0;i<w;i+=y){const l=(o+i)/f;if(l<0||l>=c.outWidth||Math.floor(l)!==l)continue;const d=b*x*w-1-h.get(e,r,a,l,t)===n*x*w+s*w+i?1:0;0!==d&&(u+=S.get(e,r,a,l,t)*d)}}}I.set(u,e,n,r,s,t)}return n.makeTensorInfo(I.shape,I.dtype,I.values)}},P_={kernelName:Vn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,input:a,output:i}=t,o=a;BE([a,i],"maxPoolGrad");const{filterSize:u,strides:l,pad:c,dimRoundingMode:h}=r,d=Gl(o.shape,u,l,1,c,h),p=n.data.get(o.dataId).values,f=ko(d.outShape,o.dtype,QA(p,o.shape,o.dtype,d).values),m=d.strideHeight,g=d.strideWidth,y=d.dilationHeight,b=d.dilationWidth,x=d.effectiveFilterHeight,w=d.effectiveFilterWidth,v=w-1-d.padInfo.left,k=x-1-d.padInfo.top,N=ko(o.shape,"float32"),I=n.data.get(s.dataId).values,S=ko(s.shape,"float32",I);for(let e=0;e<d.batchSize;++e)for(let t=0;t<d.inChannels;++t)for(let n=0;n<d.inHeight;++n)for(let r=0;r<d.inWidth;++r){const s=n-k,a=r-v;let i=0;for(let n=0;n<x;n+=y){const r=(s+n)/m;if(!(r<0||r>=d.outHeight||Math.floor(r)!==r))for(let s=0;s<w;s+=b){const o=(a+s)/g;if(o<0||o>=d.outWidth||Math.floor(o)!==o)continue;const u=x*w-1-f.get(e,r,o,t)===n*w+s?1:0;0!==u&&(i+=S.get(e,r,o,t)*u)}}N.set(i,e,n,r,t)}return n.makeTensorInfo(N.shape,N.dtype,N.values)}},B_={kernelName:Gn,backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{x:r}=e,{filterSize:s,strides:a,pad:i,includeBatchInIndex:o}=t,u=n;BE(r,"MaxPoolWithArgmax");const l=u.data.get(r.dataId).values,c=Gl(r.shape,s,a,[1,1],i),[h,d]=function(e,t,n,r,s){const a=ZA(e,0,n,Me(t),s,"max"),i=QA(e,t,n,s,!0,r);return[a.values,i.values]}(l,r.shape,r.dtype,o,c),p=u.write(h,c.outShape,r.dtype),f=u.write(d,c.outShape,r.dtype);return[{dataId:p,shape:c.outShape,dtype:r.dtype},{dataId:f,shape:c.outShape,dtype:"int32"}]}},V_={kernelName:Hn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a,keepDims:i}=r,o=we(a,s.shape),u=le(Jc(s.shape,o)[1]),l=[],c=n.makeTensorInfo([],"float32",new Float32Array([u]));l.push(c);const h=eC({inputs:{x:s},backend:n,attrs:{dtype:"float32"}});l.push(h);const d=t_({inputs:{a:h,b:c},backend:n});l.push(d);const p=BR({inputs:{x:d},backend:n,attrs:{axis:a,keepDims:i}});return l.forEach(e=>n.disposeIntermediateTensorInfo(e)),p}},U_={kernelName:jn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a,keepDims:i}=r;BE(s,"min");const o=we(a,s.shape);let u=o;const l=nh(u,s.shape.length);let c=s;null!=l&&(c=g$({inputs:{x:s},backend:n,attrs:{perm:l}}),u=sh(u.length,s.shape.length)),th("min",u,c.shape.length);const[h,d]=Jc(c.shape,u),p=le(d),f=Be(le(h),c.dtype),m=n.data.get(c.dataId).values;for(let e=0;e<f.length;++e){const t=e*p;let n=m[t];for(let e=0;e<p;++e){const r=m[t+e];(Number.isNaN(r)||r<n)&&(n=r)}f[e]=n}null!=l&&n.disposeIntermediateTensorInfo(c);const g=n.makeTensorInfo(h,c.dtype,f);if(i){const e=TA({inputs:{x:g},backend:n,attrs:{shape:eh(h,o)}});return n.disposeIntermediateTensorInfo(g),e}return g}},W_={kernelName:qn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{paddings:a,mode:i}=r;BE(s,"mirrorPad");const o=a.map((e,t)=>e[0]+s.shape[t]+e[1]),u=a.map(e=>e[0]),l=a.map((e,t)=>e[0]+s.shape[t]),c="reflect"===i?0:1,h=n.data.get(s.dataId).values,d=s.shape.length,p=Me(s.shape),f=le(o),m=o.length,g=Me(o),y=ke(s.dtype,f);for(let e=0;e<f;e++){let t=Ge(e,m,g);for(let e=0;e<m;e++)t[e]<u[e]?t[e]=2*u[e]-t[e]-c:t[e]>=l[e]&&(t[e]=2*(l[e]-1)-t[e]+c);t=t.map((e,t)=>e-u[t]);const n=We(t,d,p);y[e]=h[n]}return{dataId:n.write(y,o,s.dtype),shape:o,dtype:s.dtype}}},G_=HE((e,t)=>{const n=e%t;return e<0&&t<0||e>=0&&t>=0?n:(n+t)%t}),H_=nC(Xn,G_),j_={kernelName:Xn,backendName:"cpu",kernelFunc:H_};function K_(e){const{inputs:t,backend:n,attrs:r}=e,{logits:s}=t,{dim:a}=r,i=s.shape.length;let o=a;if(-1===o&&(o=i-1),o!==i-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${i} and dim was ${o}`);const u=we([o],s.shape),l=F_({inputs:{x:s},backend:n,attrs:{reductionIndices:u,keepDims:!1}}),c=eh(l.shape,u),h=TA({inputs:{x:l},backend:n,attrs:{shape:c}}),d=iA({inputs:{a:s,b:h},backend:n}),p=IC({inputs:{x:d},backend:n}),f=BR({inputs:{x:p},backend:n,attrs:{axis:u,keepDims:!1}}),m=TA({inputs:{x:f},backend:n,attrs:{shape:c}}),g=t_({inputs:{a:p,b:m},backend:n});return n.disposeIntermediateTensorInfo(l),n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),g}const q_={kernelName:Ur,backendName:"cpu",kernelFunc:K_},X_={kernelName:Yn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{logits:s}=t,{numSamples:a,seed:i,normalized:o}=r;BE(s,"multinomial");const u=o?s:K_({inputs:{logits:s},backend:n,attrs:{dim:-1}}),l=u.shape[0],c=u.shape[1],h=n.data.get(u.dataId).values,d=[l,a],p=Be(le(d),"int32");for(let e=0;e<l;++e){const t=e*c,n=new Float32Array(c-1);n[0]=h[t];for(let e=1;e<n.length;++e)n[e]=n[e-1]+h[t+e];const r=gd.alea(i.toString()),s=e*a;for(let e=0;e<a;++e){const t=r();p[s+e]=n.length;for(let r=0;r<n.length;r++)if(t<n[r]){p[s+e]=r;break}}}return o||n.disposeIntermediateTensorInfo(u),n.makeTensorInfo(d,"int32",p)}},Y_=Zp,Z_={kernelName:er,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{boxes:s,scores:a}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:u}=r;BE(s,"NonMaxSuppression");const l=n.data.get(s.dataId).values,c=n.data.get(a.dataId).values,{selectedIndices:h}=Y_(l,c,i,o,u);return n.makeTensorInfo([h.length],"int32",new Int32Array(h))}},Q_=Qp,J_={kernelName:tr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{boxes:s,scores:a}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:u,padToMaxOutputSize:l}=r;BE(s,"NonMaxSuppressionPadded");const c=n.data.get(s.dataId).values,h=n.data.get(a.dataId).values,{selectedIndices:d,validOutputs:p}=Q_(c,h,i,o,u,l);return[n.makeTensorInfo([d.length],"int32",new Int32Array(d)),n.makeTensorInfo([],"int32",new Int32Array([p]))]}},eD=Jp,tD={kernelName:nr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{boxes:s,scores:a}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:u,softNmsSigma:l}=r;BE(s,"NonMaxSuppressionWithScore");const c=n.data.get(s.dataId).values,h=n.data.get(a.dataId).values,d=i,p=o,f=u,m=l,{selectedIndices:g,selectedScores:y}=eD(c,h,d,p,f,m);return[n.makeTensorInfo([g.length],"int32",new Int32Array(g)),n.makeTensorInfo([y.length],"float32",new Float32Array(y))]}},nD={kernelName:sr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{indices:s}=t,{dtype:a,depth:i,onValue:o,offValue:u}=r;BE(s,"oneHot");const l=le(s.shape),c=new Float32Array(l*i);c.fill(u);const h=n.data.get(s.dataId).values;for(let e=0;e<l;++e)h[e]>=0&&h[e]<i&&(c[e*i+h[e]]=o);return n.makeTensorInfo([...s.shape,i],a,c)}};function rD(e){const{inputs:t,backend:n}=e,{x:r}=t;if("string"===r.dtype)throw new Error("zerosLike is not supported for string tensors");if("complex64"===r.dtype){const e=ZE({inputs:{input:r},backend:n}),t=rD({inputs:{x:e},backend:n}),s=hR({inputs:{input:r},backend:n}),a=rD({inputs:{x:s},backend:n}),i=jE({inputs:{real:t,imag:a},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(a),i}return o_({backend:n,attrs:{shape:r.shape,value:0,dtype:r.dtype}})}const sD={kernelName:ds,backendName:"cpu",kernelFunc:rD},aD={kernelName:rr,backendName:"cpu",kernelFunc:function e(t){const{inputs:n,backend:r}=t,{x:s}=n;if("string"===s.dtype)throw new Error("onesLike is not supported for string tensors");if("complex64"===s.dtype){const t=ZE({inputs:{input:s},backend:r}),n=e({inputs:{x:t},backend:r}),a=hR({inputs:{input:s},backend:r}),i=rD({inputs:{x:a},backend:r}),o=jE({inputs:{real:n,imag:i},backend:r});return r.disposeIntermediateTensorInfo(t),r.disposeIntermediateTensorInfo(n),r.disposeIntermediateTensorInfo(a),r.disposeIntermediateTensorInfo(i),o}return o_({backend:r,attrs:{shape:s.shape,value:1,dtype:s.dtype}})}};function iD(e){const{inputs:t,backend:n,attrs:r}=e,{axis:s}=r;if(1===t.length)return QR({inputs:{input:t[0]},backend:n,attrs:{dim:s}});const a=t[0].shape,i=t[0].dtype;t.forEach(e=>{oe(a,e.shape,"All tensors passed to stack must have matching shapes"),ie(i===e.dtype,()=>"All tensors passed to stack must have matching dtypes")});const o=[],u=pR({inputs:t.map(e=>{const t=QR({inputs:{input:e},backend:n,attrs:{dim:s}});return o.push(t),t}),backend:n,attrs:{axis:s}});return o.forEach(e=>n.disposeIntermediateTensorInfo(e)),u}const oD={kernelName:ar,backendName:"cpu",kernelFunc:iD},uD={kernelName:ir,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{paddings:a,constantValue:i}=r;BE(s,"pad");const o=a.map((e,t)=>e[0]+s.shape[t]+e[1]),u=a.map(e=>e[0]),l=n.data.get(s.dataId).values,c=le(s.shape),h=s.shape.length,d=Me(s.shape),p=le(o),f=o.length,m=Me(o),g=ke(s.dtype,p);0!==i&&g.fill(i);for(let e=0;e<c;e++)g[We(Ge(e,h,d).map((e,t)=>e+u[t]),f,m)]=l[e];return{dataId:n.write(g,o,s.dtype),shape:o,dtype:s.dtype}}},lD=HE((e,t)=>Math.pow(e,t)),cD=nC(ur,lD),hD={kernelName:ur,backendName:"cpu",kernelFunc:cD},dD={kernelName:hr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{paramsNestedSplits:s,paramsDenseValues:a,indices:i}=t,{outputRaggedRank:o}=r,u=s.map(e=>n.data.get(e.dataId).values),l=s.map(e=>e.shape),c=n.data.get(a.dataId).values,h=n.data.get(i.dataId).values,[d,p,f]=v$(u,l,c,a.shape,a.dtype,h,i.shape),m=d.map(e=>n.makeTensorInfo([e.length],"int32",e)),g=n.makeTensorInfo(f,a.dtype,p);return m.concat([g])}},pD={kernelName:dr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{starts:r,limits:s,deltas:a}=t,i=n.data.get(r.dataId).values,o=n.data.get(s.dataId).values,u=n.data.get(a.dataId).values,[l,c]=N$(i,r.shape,r.dtype,o,s.shape,u,a.shape);return[n.makeTensorInfo([l.length],"int32",l),n.makeTensorInfo([c.length],r.dtype,c)]}},fD={kernelName:pr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{shape:s,values:a,defaultValue:i,rowPartitionTensors:o}=t,{rowPartitionTypes:u}=r,l=n.data.get(s.dataId).values,c=n.data.get(a.dataId).values,h=n.data.get(i.dataId).values,d=o.map(e=>n.data.get(e.dataId).values),p=o.map(e=>e.shape),[f,m]=C$(l,s.shape,c,a.shape,a.dtype,h,i.shape,d,p,u);return n.makeTensorInfo(f,a.dtype,m)}},mD={kernelName:fr,backendName:"cpu",kernelFunc:function(e){const{backend:t,attrs:n}=e,{start:r,stop:s,dtype:a,step:i}=n,o=$$(r,s,i,a);return t.makeTensorInfo([o.length],a,o)}},gD=fC(gr,e=>1/e),yD={kernelName:gr,backendName:"cpu",kernelFunc:gD},bD={kernelName:vr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:s}=t,{alignCorners:a,halfPixelCenters:i,size:o}=r;BE(s,"resizeBilinear");const u=Me(s.shape),[l,c]=o,[h,d,p,f]=s.shape,m=n.data.get(s.dataId).values,g=new Float32Array(le([h,l,c,f])),y=[a&&l>1?d-1:d,a&&c>1?p-1:p],b=[a&&l>1?l-1:l,a&&c>1?c-1:c];let x=0;const w=y[0]/b[0],v=y[1]/b[1];for(let e=0;e<h;e++)for(let t=0;t<l;t++){let n;n=i?w*(t+.5)-.5:w*t;const r=Math.max(0,Math.floor(n)),s=n-r,a=Math.min(d-1,Math.ceil(n)),o=e*u[0]+r*u[1],l=e*u[0]+a*u[1];for(let e=0;e<c;e++){let t;t=i?v*(e+.5)-.5:v*e;const n=Math.max(0,Math.floor(t)),r=t-n,a=Math.min(p-1,Math.ceil(t)),c=o+n*u[2],h=l+n*u[2],d=o+a*u[2],y=l+a*u[2];for(let e=0;e<f;e++){const t=m[c+e],n=m[h+e],a=t+(m[d+e]-t)*r,i=a+(n+(m[y+e]-n)*r-a)*s;g[x++]=i}}}return n.makeTensorInfo([h,l,c,f],"float32",g)}},xD={kernelName:kr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:s,dy:a}=t,{alignCorners:i}=r;BE([a,s],"resizeBilinearGrad");const o=Me(s.shape),[u,l,c,h]=s.shape,[,d,p]=a.shape,f=new Float32Array(u*l*c*h),m=[i&&d>1?l-1:l,i&&p>1?c-1:c],g=[i&&d>1?d-1:d,i&&p>1?p-1:p],y=m[0]/g[0],b=m[1]/g[1],x=n.data.get(a.dataId).values;let w=0;for(let e=0;e<u;e++){const t=e*o[0];for(let e=0;e<d;e++){const n=e*y,r=Math.floor(n),s=Math.min(Math.ceil(n),l-1),a=t+r*o[1],i=t+s*o[1],u=n-r,d=1-u;for(let e=0;e<p;e++){const t=e*b,n=Math.floor(t),r=Math.min(Math.ceil(t),c-1),s=t-n,l=1-s,p=a+n*o[2],m=a+r*o[2],g=i+n*o[2],y=i+r*o[2],v=d*l,k=d*s,N=u*l,I=u*s;for(let e=0;e<h;e++){const t=x[w++];f[p+e]+=t*v,f[m+e]+=t*k,f[g+e]+=t*N,f[y+e]+=t*I}}}}return n.makeTensorInfo([u,c,l,h],"float32",f)}},wD={kernelName:xr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:s}=t,{alignCorners:a,halfPixelCenters:i,size:o}=r;BE(s,"resizeNearestNeighbor");const u=Me(s.shape),[l,c]=o,[h,d,p,f]=s.shape,m=n.data.get(s.dataId).values,g=new Float32Array(h*l*c*f),y=[a&&l>1?d-1:d,a&&c>1?p-1:p],b=[a&&l>1?l-1:l,a&&c>1?c-1:c],x=y[0]/b[0],w=y[1]/b[1];let v=0;for(let e=0;e<h;e++){const t=e*u[0];for(let e=0;e<l;e++){const n=i?x*(e+.5):x*e;let r=Math.min(d-1,a?Math.round(n):Math.floor(n));i&&(r=Math.max(0,r));const s=t+r*u[1];for(let e=0;e<c;e++){const t=i?w*(e+.5):w*e;let n=Math.min(p-1,a?Math.round(t):Math.floor(t));i&&(n=Math.max(0,n));const r=s+n*u[2];for(let e=0;e<f;e++){const t=m[r+e];g[v++]=t}}}}return n.makeTensorInfo([h,l,c,f],s.dtype,g)}},vD={kernelName:wr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:s,dy:a}=t,{alignCorners:i}=r;BE([a,s],"resizeNearestNeighborGrad");const o=Me(s.shape),u=Me(a.shape),[l,c,h,d]=s.shape,[,p,f]=a.shape,m=new Float32Array(l*c*h*d),g=n.data.get(a.dataId).values,y=[i&&p>1?c-1:c,i&&f>1?h-1:h],b=[i&&p>1?p-1:p,i&&f>1?f-1:f],x=y[0]/b[0],w=y[1]/b[1],v=1/x,k=1/w,N=2*Math.ceil(v)+2,I=2*Math.ceil(k)+2;for(let e=0;e<l;e++){const t=e*o[0];for(let e=0;e<c;e++){const n=t+e*o[1],r=Math.floor(e*v),s=Math.floor(r-N/2);for(let r=0;r<h;r++){const a=n+r*o[2],l=Math.floor(r*k),y=Math.floor(l-I/2);for(let n=0;n<d;n++){let o=0;for(let a=0;a<N;a++){const l=a+s;if(l<0||l>=p)continue;const d=t+l*u[1],m=l*x;if(e===Math.min(c-1,i?Math.round(m):Math.floor(m)))for(let e=0;e<I;e++){const t=e+y;if(t<0||t>=f)continue;const s=d+t*u[2],a=t*w;r===Math.min(h-1,i?Math.round(a):Math.floor(a))&&(o+=g[s+n])}}m[a+n]=o}}}}return n.makeTensorInfo(s.shape,s.dtype,m)}},kD={kernelName:Ir,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{dims:a}=r;BE(s,"reverse");const i=s.shape.length,o=we(a,s.shape);if(0===i)return XE({inputs:{x:s},backend:n});const u=new la(s.shape,s.dtype),l=n.bufferSync(s);for(let e=0;e<u.size;e++){const t=u.indexToLoc(e),n=t.slice();o.forEach(e=>n[e]=s.shape[e]-1-n[e]),u.set(l.get(...n),...t)}return n.makeTensorInfo(u.shape,u.dtype,u.values)}},ND={kernelName:ms,backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{image:r}=e,{radians:s,fillValue:a,center:i}=t,o=n,u=ke(r.dtype,le(r.shape)),[l,c,h,d]=r.shape,[p,f]=Qf(i,c,h),m=Math.sin(s),g=Math.cos(s),y=o.data.get(r.dataId).values;for(let e=0;e<l;e++){const t=e*h*c*d;for(let e=0;e<c;e++){const n=e*(h*d);for(let r=0;r<h;r++){const s=r*d;for(let i=0;i<d;i++){const o=[l,e,r,i],b=o[2],x=o[1];let w=(b-p)*g-(x-f)*m,v=(b-p)*m+(x-f)*g;w=Math.round(w+p),v=Math.round(v+f);let k=a;"number"!=typeof a&&(k=3===i?255:a[i]),w>=0&&w<h&&v>=0&&v<c&&(k=y[t+v*(h*d)+w*d+i]),u[t+n+s+i]=k}}}}return{dataId:o.write(u,r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}},ID=fC(Sr,e=>{const t=Math.floor(e);return e-t<.5?Math.floor(e):e-t>.5?Math.ceil(e):t%2==0?t:t+1}),SD={kernelName:Sr,backendName:"cpu",kernelFunc:ID},TD={kernelName:Er,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{indices:s,updates:a}=t,{shape:i}=r,{sliceRank:o,numUpdates:u,sliceSize:l,strides:c,outputSize:h}=Xu(0,s,i),d=D$(n.bufferSync(s),n.bufferSync(a),i,h,l,u,o,c,0,!0);return n.makeTensorInfo(i,d.dtype,d.values)}};function ED(e,t){let n=0,r=e.length,s=0;for(;n<r;)s=Math.floor((n+r)/2),e[s]<t?n=s+1:r=s;return r}function CD(e,t){let n=0,r=e.length,s=0;for(;n<r;)s=Math.floor((n+r)/2),e[s]<=t?n=s+1:r=s;return r}const $D={kernelName:$r,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{sortedSequence:s,values:a}=t,{side:i}=r,o=function(e,t,n,r,s,a){const i=Ne("int32",n*s);for(let o=0;o<n;++o){const n=e.slice(o*r,(o+1)*r),u=o*s;for(let e=0;e<s;++e)i[u+e]="left"===a?ED(n,t[e+u]):CD(n,t[e+u])}return i}(n.data.get(s.dataId).values,n.data.get(a.dataId).values,s.shape[0],s.shape[1],a.shape[1],i);return n.makeTensorInfo(a.shape,"int32",o)}},AD={kernelName:Ar,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{condition:r,t:s,e:a}=t;BE([r,s,a],"select");const i=r.shape.length,o=n.data.get(r.dataId).values,u=n.data.get(s.dataId).values,l=n.data.get(a.dataId).values,c=ka(s.dtype,a.dtype),h=Be(le(s.shape),c);let d=0;const p=0===i||i>1||1===s.shape.length?1:le(s.shape.slice(1));for(let e=0;e<o.length;e++)for(let t=0;t<p;t++)1===o[e]?h[d++]=u[e]:h[d++]=l[e];return n.makeTensorInfo(s.shape,c,h)}},RD=sm,_D=am,DD=fC(Rr,e=>e>=0?_D*e:RD*(Math.exp(e)-1)),FD={kernelName:Rr,backendName:"cpu",kernelFunc:DD},MD=fC(Mr,e=>e<0?-1:e>0?1:0),OD={kernelName:Mr,backendName:"cpu",kernelFunc:MD},LD=fC(Dr,e=>Math.sin(e)),zD={kernelName:Dr,backendName:"cpu",kernelFunc:LD},PD=fC(Fr,e=>Math.sinh(e)),BD={kernelName:Fr,backendName:"cpu",kernelFunc:PD},VD=Math.log(1.1920928955078125e-7)+2,UD=fC(Lr,e=>{const t=e>-VD,n=e<VD,r=Math.exp(e);let s;return s=n?r:t?e:Math.log(1+r),s}),WD={kernelName:Lr,backendName:"cpu",kernelFunc:UD},GD={kernelName:Br,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{blockShape:a,paddings:i}=r;BE([s],"spaceToBatchND");const o=le(a),u=[[0,0]];u.push(...i);for(let e=1+a.length;e<s.shape.length;++e)u.push([0,0]);const l=uD.kernelFunc({inputs:{x:s},backend:n,attrs:{paddings:u,constantValue:0}}),c=Jf(l.shape,a,o,!1),h=em(c.length,a.length,!1),d=tm(l.shape,a,o,!1),p=TA({inputs:{x:l},backend:n,attrs:{shape:c}}),f=g$({inputs:{x:p},backend:n,attrs:{perm:h}}),m=TA({inputs:{x:f},backend:n,attrs:{shape:d}});return n.disposeIntermediateTensorInfo(l),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),m}},HD={kernelName:Wr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{indices:r,values:s,denseShape:a,defaultValue:i}=t;if(1!==a.shape.length)throw new Error(`Dense shape must be a vector, saw:\n        ${a.shape}`);if(2!==r.shape.length)throw new Error(`Indices must be a matrix, saw:\n        ${r.shape}`);if(1!==s.shape.length)throw new Error(`Values must be a vector, saw:\n        ${s.shape}`);if(0!==i.shape.length)throw new Error(`Default value must be a scalar, saw:\n        ${i.shape}`);const o=n.data.get(r.dataId).values,u=n.data.get(s.dataId).values,l=n.data.get(a.dataId).values,c=n.data.get(i.dataId).values[0],[h,d,p,f,m]=B$(o,r.shape,r.dtype,u,s.dtype,l,c);return[n.makeTensorInfo(d,r.dtype,h),n.makeTensorInfo([d[0]],s.dtype,p),n.makeTensorInfo([f.length],"bool",new Uint8Array(f.map(e=>Number(e)))),n.makeTensorInfo([m.length],r.dtype,new Int32Array(m))]}},jD={kernelName:Gr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{inputIndices:r,inputShape:s,newShape:a}=t;if(2!==r.shape.length)throw new Error(`Input indices should be a matrix but received shape\n        ${r.shape}`);if(1!==s.shape.length)throw new Error(`Input shape should be a vector but received shape\n        ${s.shape}`);if(1!==a.shape.length)throw new Error(`Target shape should be a vector but received shape ${a.shape}`);const i=Array.from(n.data.get(s.dataId).values),o=n.data.get(r.dataId).values,u=Array.from(n.data.get(a.dataId).values),[l,c,h]=V$(o,r.shape,r.dtype,i,u);return[n.makeTensorInfo(c,r.dtype,l),n.makeTensorInfo([h.length],a.dtype,new Int32Array(h))]}},KD={kernelName:Hr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{data:r,indices:s,segmentIds:a}=t;if(r.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==s.shape.length)throw new Error(`Indices should be a vector but received shape\n          ${s.shape}`);if(1!==a.shape.length)throw new Error(`Segment ids should be a vector but received shape\n          ${a.shape}`);if(s.shape[0]!==a.shape[0])throw new Error("segmentIds and indices should have same size.");const i=n.data.get(r.dataId).values,o=n.data.get(s.dataId).values,u=n.data.get(a.dataId).values,[l,c]=U$(i,r.shape,r.dtype,o,u,!0);return n.makeTensorInfo(c,r.dtype,l)}},qD={kernelName:jr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{data:r,indices:s,segmentIds:a}=t;if(r.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==s.shape.length)throw new Error(`Indices should be a vector but received shape\n         ${s.shape}`);if(1!==a.shape.length)throw new Error(`Segment ids should be a vector but received shape\n         ${a.shape}`);if(s.shape[0]!==a.shape[0])throw new Error("segmentIds and indices should have same size.");const i=n.data.get(r.dataId).values,o=n.data.get(s.dataId).values,u=n.data.get(a.dataId).values,[l,c]=U$(i,r.shape,r.dtype,o,u);return n.makeTensorInfo(c,r.dtype,l)}},XD={kernelName:Kr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{sparseIndices:s,sparseValues:a,defaultValue:i}=t,{outputShape:o}=r,{sliceRank:u,numUpdates:l,sliceSize:c,strides:h,outputSize:d}=Xu(0,s,o),p=!1,f=n.bufferSync(s);let m;switch(a.dtype){case"bool":m=D$(f,n.bufferSync(a),o,d,c,l,u,h,Boolean(n.data.get(i.dataId).values[0]),p);break;case"float32":case"int32":m=D$(f,n.bufferSync(a),o,d,c,l,u,h,n.data.get(i.dataId).values[0],p);break;case"string":m=D$(f,n.bufferSync(a),o,d,c,l,u,h,Qs(n.data.get(i.dataId).values[0]),p);break;default:throw new Error(`Unsupported type ${a.dtype}`)}return n.makeTensorInfo(o,m.dtype,m.values)}},YD={kernelName:Vr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{numOrSizeSplits:a,axis:i}=r,o=we(i,s.shape)[0],u=Am(s,a,o),l=new Array(s.shape.length).fill(0),c=s.shape.slice();return u.map(e=>{const t=[...c];t[o]=e;const r=z$({inputs:{x:s},backend:n,attrs:{begin:l,size:t}});return l[o]+=e,r})}},ZD={kernelName:Xr,backendName:"cpu",kernelFunc:({inputs:e,backend:t})=>{const{x:n}=e,r=t;BE(n,"square");const s=r.data.get(n.dataId).values,a=new Float32Array(s.length);for(let e=0;e<s.length;++e){const t=s[e];a[e]=t*t}return{dataId:r.write(a,n.shape,n.dtype),shape:n.shape,dtype:n.dtype}}},QD=fC(ps,(e,t)=>{const n=t;return isNaN(e)?NaN:e>0?1:n.alpha}),JD={kernelName:ps,backendName:"cpu",kernelFunc:QD},eF={kernelName:Zr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{begin:a,end:i,strides:o,beginMask:u,endMask:l,ellipsisMask:c,newAxisMask:h,shrinkAxisMask:d}=r;BE(s,"stridedSlice");const{finalShapeSparse:p,finalShape:f,isIdentity:m,sliceDim0:g,isSimpleSlice:y,begin:b,end:x,strides:w}=pl(s.shape,a,i,o,u,l,c,h,d);let v;if(m)v=TA({inputs:{x:s},backend:n,attrs:{shape:f}});else if(g||y){ie(s.shape.length>=1,()=>`Input must have rank at least 1, got: ${s.shape.length}`);const e=el(b,x,w),t=z$({inputs:{x:s},backend:n,attrs:{begin:b,size:e}});v=TA({inputs:{x:t},backend:n,attrs:{shape:f}}),n.disposeIntermediateTensorInfo(t)}else{const e=Q$(p,n.bufferSync(s),w,b);v=n.makeTensorInfo(f,e.dtype,e.values)}return v}},tF={kernelName:Qr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{separator:s,nGramWidths:a,leftPad:i,rightPad:o,padWidth:u,preserveShortSequences:l}=r,{data:c,dataSplits:h}=t,d=n.data.get(c.dataId).values,p=n.data.get(h.dataId).values,[f,m]=eA(d,p,s,a,i,o,u,l);return[n.makeTensorInfo([f.length],"string",f),n.makeTensorInfo(h.shape,"int32",m)]}},nF={kernelName:Jr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{skipEmpty:s}=r,{input:a,delimiter:i}=t;if("string"!==a.dtype)throw new Error("Input must be of datatype string");if(1!==a.shape.length)throw new Error(`Input must be a vector, got shape: ${a.shape}`);if(0!==i.shape.length)throw new Error(`Delimiter must be a scalar, got shape: ${i.shape}`);const o=n.data.get(a.dataId).values,u=n.data.get(i.dataId).values[0],[l,c,h]=nA(o,u,s),d=c.length;return[n.makeTensorInfo([d,2],"int32",l),n.makeTensorInfo([d],"string",c),n.makeTensorInfo([2],"int32",new Int32Array(h))]}},rF={kernelName:es,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{numBuckets:s}=r,{input:a}=t;if("string"!==a.dtype)throw new Error("Input must be of datatype string");if(s<=0)throw new Error("Number of buckets must be at least 1");const i=rA(n.data.get(a.dataId).values,s);return n.makeTensorInfo(a.shape,"int32",i)}},sF=fC(ns,e=>Math.tan(e)),aF={kernelName:ns,backendName:"cpu",kernelFunc:sF},iF=fC(rs,e=>Math.tanh(e)),oF={kernelName:Cr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{tensor:r,indices:s,updates:a}=t,{sliceRank:i,numUpdates:o,sliceSize:u,strides:l,outputSize:c}=Xu(0,s,r.shape),h=n.bufferSync(s),d=n.bufferSync(a),p=n.bufferSync(r),f=D$(h,d,r.shape,c,u,o,i,l,p,!1);return n.makeTensorInfo(r.shape,f.dtype,f.values)}},uF={kernelName:ss,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{reps:a}=r;BE(s,"tile");const i=uA(n.bufferSync(s),a);return n.makeTensorInfo(i.shape,i.dtype,i.values)}},lF={kernelName:as,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{k:a,sorted:i}=r;BE(s,"topk");const o=n.data.get(s.dataId).values,[u,l]=hA(o,s.shape,s.dtype,a,i);return[n.makeTensorInfo(u.shape,u.dtype,u.values),n.makeTensorInfo(l.shape,l.dtype,l.values)]}},cF={kernelName:is,backendName:"cpu",kernelFunc:function(e){const{inputs:t,attrs:n,backend:r}=e,{image:s,transforms:a}=t,{interpolation:i,fillMode:o,fillValue:u,outputShape:l}=n,[c,h,d,p]=s.shape,[f,m]=null!=l?l:[h,d],g=[c,f,m,p],y=Me(s.shape),b=y[0],x=y[1],w=y[2],v=Me(g),k=v[0],N=v[1],I=v[2],S=ke(s.dtype,le(g));S.fill(u);const T=r.data.get(s.dataId).values,E=r.data.get(a.dataId).values;for(let e=0;e<c;++e){const t=1===a.shape[0]?E:E.subarray(8*e,8*e+8);for(let n=0;n<f;++n)for(let r=0;r<m;++r)for(let s=0;s<p;++s){let a;const l=t[6]*r+t[7]*n+1;if(0===l)continue;const c=(t[0]*r+t[1]*n+t[2])/l,p=(t[3]*r+t[4]*n+t[5])/l,f=hF(c,d,o),m=hF(p,h,o);switch(i){case"nearest":a=pF(T,h,d,b,x,w,e,m,f,s,u);break;case"bilinear":a=fF(T,h,d,b,x,w,e,m,f,s,u);break;default:throw new Error(`Error in Transform: Expect 'nearest' or 'bilinear', but got ${i}`)}S[e*k+n*N+r*I+s]=a}return r.makeTensorInfo(g,s.dtype,S)}return{dataId:r.write(S,g,s.dtype),shape:s.shape,dtype:s.dtype}}};function hF(e,t,n){switch(n){case"reflect":return function(e,t){let n=e;if(n<0)if(t<=1)n=0;else{const e=2*t;n<e&&(n=e*Math.trunc(-n/e)+n),n=n<-t?n+e:-n-1}else if(n>t-1)if(t<=1)n=0;else{const e=2*t;n-=e*Math.trunc(n/e),n>=t&&(n=e-n-1)}return ee(0,n,t-1)}(e,t);case"wrap":return function(e,t){let n=e;if(n<0)if(t<=1)n=0;else{const e=t-1;n+=t*(Math.trunc(-n/e)+1)}else if(n>t-1)if(t<=1)n=0;else{const e=t-1;n-=t*Math.trunc(n/e)}return ee(0,n,t-1)}(e,t);case"nearest":return function(e,t){return ee(0,e,t-1)}(e,t);default:return e}}function dF(e,t,n,r,s,a,i,o,u,l,c){return 0<=o&&o<t&&0<=u&&u<n?e[i*r+o*s+u*a+l]:c}function pF(e,t,n,r,s,a,i,o,u,l,c){return dF(e,t,n,r,s,a,i,Math.round(o),Math.round(u),l,c)}function fF(e,t,n,r,s,a,i,o,u,l,c){const h=Math.floor(o),d=Math.floor(u),p=h+1,f=d+1;return(p-o)*((f-u)*dF(e,t,n,r,s,a,i,h,d,l,c)+(u-d)*dF(e,t,n,r,s,a,i,h,f,l,c))+(o-h)*((f-u)*dF(e,t,n,r,s,a,i,p,d,l,c)+(u-d)*dF(e,t,n,r,s,a,i,p,f,l,c))}const mF={kernelName:us,backendName:"cpu",kernelFunc:function(e){const{inputs:t,attrs:n,backend:r}=e,{axis:s}=n,{x:a}=t;BE(a,"unique");const i=r.data.get(a.dataId).values,{outputValues:o,outputShape:u,indices:l}=dA(i,s,a.shape,a.dtype);return[r.makeTensorInfo(u,a.dtype,o),r.makeTensorInfo([l.length],"int32",l)]}},gF={kernelName:ls,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{value:s}=t;let{axis:a}=r;a<0&&(a+=s.shape.length);const i=s.shape.length,o=s.shape[a],u=new Array(i-1);let l=0;for(let e=0;e<i;e++)e!==a&&(u[l++]=s.shape[e]);const c=new Array(i).fill(0),h=s.shape.slice();h[a]=1;const d=new Array(o);for(let e=0;e<d.length;e++){c[a]=e;const t=z$({inputs:{x:s},backend:n,attrs:{begin:c,size:h}});d[e]=TA({inputs:{x:t},backend:n,attrs:{shape:u}}),n.disposeIntermediateTensorInfo(t)}return d}},yF={kernelName:cs,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,segmentIds:a}=t,{numSegments:i}=r;BE(s,"unsortedSegmentSum");const o=[],u=[],l=s.shape.length-a.shape.length;let c=a;for(let e=0;e<l;++e){const t=QR({inputs:{input:c},backend:n,attrs:{dim:e+1}});c=t,u.push(t)}for(let e=0;e<i;++e){const t=Ks(e,"int32"),r=n.makeTensorInfo([],"int32",t),a=vC({inputs:{a:r,b:c},backend:n}),i=eC({inputs:{x:a},backend:n,attrs:{dtype:"float32"}}),l=u$({inputs:{a:i,b:s},backend:n}),h=BR({inputs:{x:l},backend:n,attrs:{axis:0,keepDims:!1}});o.push(h),u.push(r),u.push(a),u.push(i),u.push(l),u.push(h)}const h=iD({inputs:o,backend:n,attrs:{axis:0}});return u.forEach(e=>n.disposeIntermediateTensorInfo(e)),h}},bF=[AA,GE,_A,FA,oC,MA,OA,LA,zA,PA,VA,WA,HA,qA,YA,eR,tR,nR,rR,$A,sR,aR,iR,dC,oR,tC,bC,lR,KE,cR,fR,gR,yR,bR,xR,wR,vR,NR,SR,TR,ER,CR,$R,AR,_R,DR,FR,MR,OR,LR,zR,PR,UR,mA,WR,kC,ZR,SC,JR,CC,i_,u_,l_,RC,FC,c_,h_,d_,p_,PC,UC,YE,f_,dR,g_,b_,w_,yA,HC,qC,v_,QC,N_,T_,C_,R_,__,D_,M_,n$,O_,L_,z_,P_,B_,V_,U_,a$,W_,j_,X_,l$,h$,Z_,J_,tD,f$,nD,aD,oD,uD,hD,wA,x$,dD,pD,fD,mD,QE,n_,yD,kA,IA,EA,bD,xD,wD,vD,kD,ND,SD,_$,TD,$D,AD,FD,O$,OD,zD,BD,P$,q_,WD,GD,HD,jD,KD,qD,XD,YD,H$,ZD,q$,Z$,JD,eF,tF,nF,rF,oA,VR,aF,{kernelName:rs,backendName:"cpu",kernelFunc:iF},oF,uF,lF,cF,y$,mF,gF,yF,sD];for(const e of bF)Ts(e);const xF={},wF={alpha:!1,antialias:!1,premultipliedAlpha:!1,preserveDrawingBuffer:!1,depth:!1,stencil:!1,failIfMajorPerformanceCaveat:!0};function vF(e,t){xF[e]=t}function kF(e,t){if(!(e in xF)||null!=t){const n=function(e,t){if(1!==e&&2!==e)throw new Error("Cannot get WebGL rendering context, WebGL is disabled.");const n=null==t?function(e){if(Xe().getBool("IS_SAFARI")||"undefined"==typeof OffscreenCanvas||2!==e){if("undefined"!=typeof document)return document.createElement("canvas");throw new Error("Cannot create a canvas in this context")}return new OffscreenCanvas(300,150)}(e):t;return n.addEventListener("webglcontextlost",t=>{t.preventDefault(),delete xF[e]},!1),Xe().getBool("SOFTWARE_WEBGL_ENABLED")&&(wF.failIfMajorPerformanceCaveat=!1),1===e?n.getContext("webgl",wF)||n.getContext("experimental-webgl",wF):n.getContext("webgl2",wF)}(e,t);if(null===n)return console.log("Could not get context for WebGL version",e),null;xF[e]=n}const n=xF[e];return null==n||n.isContextLost()?(delete xF[e],kF(e)):(n.disable(n.DEPTH_TEST),n.disable(n.STENCIL_TEST),n.disable(n.BLEND),n.disable(n.DITHER),n.disable(n.POLYGON_OFFSET_FILL),n.disable(n.SAMPLE_COVERAGE),n.enable(n.SCISSOR_TEST),n.enable(n.CULL_FACE),n.cullFace(n.BACK),xF[e])}var NF,IF,SF;function TF(e,t){return[t,e]}function EF(e){const t=le(e);return me(Math.ceil(t/4))}function CF(e,t){return[Math.max(1,Math.ceil(t/2)),Math.max(1,Math.ceil(e/2))]}function $F(e,t){const n=e;let r,s,a,i,o,u,l,c,h,d;return 2===Xe().getNumber("WEBGL_VERSION")?(r=n.R32F,s=n.R16F,a=n.RGBA16F,i=n.RGBA32F,o=n.RED,l=4,c=1,h=n.HALF_FLOAT,d=n.FLOAT,u=n.RGBA8):(r=e.RGBA,s=e.RGBA,a=e.RGBA,i=n.RGBA,o=e.RGBA,l=4,c=4,h=null!=t?t.HALF_FLOAT_OES:null,d=e.FLOAT,u=e.RGBA),{internalFormatFloat:r,internalFormatHalfFloat:s,internalFormatPackedHalfFloat:a,internalFormatPackedFloat:i,textureFormatFloat:o,downloadTextureFormat:u,downloadUnpackNumChannels:l,defaultNumChannels:c,textureTypeHalfFloat:h,textureTypeFloat:d}}function AF(e,t){const n=t();return Xe().getBool("DEBUG")&&function(e){const t=e.getError();if(t!==e.NO_ERROR)throw new Error("WebGL Error: "+FF(e,t))}(e),n}!function(e){e[e.DENSE=0]="DENSE",e[e.SHARED_BATCH=1]="SHARED_BATCH"}(NF||(NF={})),function(e){e[e.RENDER=0]="RENDER",e[e.UPLOAD=1]="UPLOAD",e[e.PIXELS=2]="PIXELS",e[e.DOWNLOAD=3]="DOWNLOAD"}(IF||(IF={})),function(e){e[e.UNPACKED_FLOAT16=0]="UNPACKED_FLOAT16",e[e.UNPACKED_FLOAT32=1]="UNPACKED_FLOAT32",e[e.PACKED_4X1_UNSIGNED_BYTE=2]="PACKED_4X1_UNSIGNED_BYTE",e[e.PACKED_2X2_FLOAT32=3]="PACKED_2X2_FLOAT32",e[e.PACKED_2X2_FLOAT16=4]="PACKED_2X2_FLOAT16"}(SF||(SF={}));const RF=5.96e-8,_F=65504;function DF(e){return!!(Xe().getBool("WEBGL_RENDER_FLOAT32_ENABLED")||0===e||RF<Math.abs(e)&&Math.abs(e)<_F)}function FF(e,t){switch(t){case e.NO_ERROR:return"NO_ERROR";case e.INVALID_ENUM:return"INVALID_ENUM";case e.INVALID_VALUE:return"INVALID_VALUE";case e.INVALID_OPERATION:return"INVALID_OPERATION";case e.INVALID_FRAMEBUFFER_OPERATION:return"INVALID_FRAMEBUFFER_OPERATION";case e.OUT_OF_MEMORY:return"OUT_OF_MEMORY";case e.CONTEXT_LOST_WEBGL:return"CONTEXT_LOST_WEBGL";default:return`Unknown error code ${t}`}}function MF(e,t){return iM(e,()=>e.getExtension(t),'Extension "'+t+'" not supported on this browser.')}function OF(e,t){const n=iM(e,()=>e.createShader(e.VERTEX_SHADER),"Unable to create vertex WebGLShader.");if(AF(e,()=>e.shaderSource(n,t)),AF(e,()=>e.compileShader(n)),!1===e.getShaderParameter(n,e.COMPILE_STATUS))throw console.log(e.getShaderInfoLog(n)),new Error("Failed to compile vertex shader.");return n}function LF(e,t){const n=iM(e,()=>e.createShader(e.FRAGMENT_SHADER),"Unable to create fragment WebGLShader.");if(AF(e,()=>e.shaderSource(n,t)),AF(e,()=>e.compileShader(n)),Xe().get("ENGINE_COMPILE_ONLY"))return n;if(!1===e.getShaderParameter(n,e.COMPILE_STATUS))throw PF(t,e.getShaderInfoLog(n)),new Error("Failed to compile fragment shader.");return n}const zF=/ERROR: [0-9]+:([0-9]+):/g;function PF(e,t){const n=zF.exec(t);if(null==n)return console.log(`Couldn't parse line number in error: ${t}`),void console.log(e);const r=+n[1],s=e.split("\n"),a=s.length.toString().length+2,i=s.map((e,t)=>ye((t+1).toString(),a)+e);let o=0;for(let e=0;e<i.length;e++)o=Math.max(i[e].length,o);const u=i.slice(0,r-1),l=i.slice(r-1,r),c=i.slice(r);console.log(u.join("\n")),console.log(t.split("\n")[0]),console.log(`%c ${ye(l[0],o)}`,"border:1px solid red; background-color:#e3d2d2; color:#a61717"),console.log(c.join("\n"))}function BF(e){return iM(e,()=>e.createProgram(),"Unable to create WebGLProgram.")}function VF(e,t){if(AF(e,()=>e.linkProgram(t)),!Xe().get("ENGINE_COMPILE_ONLY")&&!1===e.getProgramParameter(t,e.LINK_STATUS))throw console.log(e.getProgramInfoLog(t)),new Error("Failed to link vertex and fragment shaders.")}function UF(e,t){if(AF(e,()=>e.validateProgram(t)),!1===e.getProgramParameter(t,e.VALIDATE_STATUS))throw console.log(e.getProgramInfoLog(t)),new Error("Shader program validation failed.")}function WF(e,t){const n=iM(e,()=>e.createBuffer(),"Unable to create WebGLBuffer");return AF(e,()=>e.bindBuffer(e.ARRAY_BUFFER,n)),AF(e,()=>e.bufferData(e.ARRAY_BUFFER,t,e.STATIC_DRAW)),n}function GF(e,t){const n=iM(e,()=>e.createBuffer(),"Unable to create WebGLBuffer");return AF(e,()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,n)),AF(e,()=>e.bufferData(e.ELEMENT_ARRAY_BUFFER,t,e.STATIC_DRAW)),n}function HF(){return 2===Xe().getNumber("WEBGL_VERSION")?1:4}function jF(e){return iM(e,()=>e.createTexture(),"Unable to create WebGLTexture.")}function KF(e,t){const n=Xe().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(e<=0||t<=0)throw new Error(`Requested texture size [${e}x${t}] is invalid.`);if(e>n||t>n)throw new Error(`Requested texture size [${e}x${t}] greater than WebGL maximum on this browser / GPU [${n}x${n}].`)}function qF(e){return iM(e,()=>e.createFramebuffer(),"Unable to create WebGLFramebuffer.")}function XF(e,t,n,r,s,a,i){const o=e.getAttribLocation(t,n);return-1!==o&&(AF(e,()=>e.bindBuffer(e.ARRAY_BUFFER,r)),AF(e,()=>e.vertexAttribPointer(o,s,e.FLOAT,!1,a,i)),AF(e,()=>e.enableVertexAttribArray(o)),!0)}function YF(e,t,n){oM(e,n),AF(e,()=>e.activeTexture(e.TEXTURE0+n)),AF(e,()=>e.bindTexture(e.TEXTURE_2D,t))}function ZF(e,t){oM(e,t),AF(e,()=>e.activeTexture(e.TEXTURE0+t)),AF(e,()=>e.bindTexture(e.TEXTURE_2D,null))}function QF(e,t,n){return iM(e,()=>e.getUniformLocation(t,n),'uniform "'+n+'" not present in program.')}function JF(e,t,n){return e.getUniformLocation(t,n)}function eM(e,t,n,r){AF(e,()=>YF(e,t,r)),AF(e,()=>e.uniform1i(n,r))}function tM(e){AF(e,()=>e.bindFramebuffer(e.FRAMEBUFFER,null)),AF(e,()=>e.viewport(0,0,e.canvas.width,e.canvas.height)),AF(e,()=>e.scissor(0,0,e.canvas.width,e.canvas.height))}function nM(e,t,n){AF(e,()=>e.bindFramebuffer(e.FRAMEBUFFER,n)),AF(e,()=>e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,t,0))}function rM(e,t){AF(e,()=>e.bindFramebuffer(e.FRAMEBUFFER,t)),AF(e,()=>e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,null,0))}function sM(e){const t=e.checkFramebufferStatus(e.FRAMEBUFFER);if(t!==e.FRAMEBUFFER_COMPLETE)throw new Error("Error binding framebuffer: "+aM(e,t))}function aM(e,t){switch(t){case e.FRAMEBUFFER_INCOMPLETE_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_ATTACHMENT";case e.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT";case e.FRAMEBUFFER_INCOMPLETE_DIMENSIONS:return"FRAMEBUFFER_INCOMPLETE_DIMENSIONS";case e.FRAMEBUFFER_UNSUPPORTED:return"FRAMEBUFFER_UNSUPPORTED";default:return`unknown error ${t}`}}function iM(e,t,n){const r=AF(e,()=>t());if(null==r)throw new Error(n);return r}function oM(e,t){const n=e.MAX_COMBINED_TEXTURE_IMAGE_UNITS-1,r=t+e.TEXTURE0;if(r<e.TEXTURE0||r>n)throw new Error(`textureUnit must be in [gl.TEXTURE0, gl.TEXTURE${n}].`)}function uM(e,t=2){return le(e.slice(0,e.length-t))}function lM(e){if(0===e.length)throw Error("Cannot get rows and columns of an empty shape array.");return[e.length>1?e[e.length-2]:1,e[e.length-1]]}function cM(e){let t=[1,1,1];return 0===e.length||1===e.length&&1===e[0]||(t=[uM(e),...lM(e)]),t}function hM(e,t=!1){let n=Xe().getNumber("WEBGL_MAX_TEXTURE_SIZE"),r=Xe().getNumber("WEBGL_MAX_SIZE_FOR_NARROW_TEXTURE");if(r===1/0&&Xe().getBool("WEBGL_AUTO_SQUARIFY_NARROW_TEXTURE_SHAPE")&&(r=n/2),t&&(n*=2,r*=2,1===(e=e.map((t,n)=>n>=e.length-2?te(e[n]):e[n])).length&&(e=[2,e[0]])),2!==e.length){const t=ve(e);e=t.newShape}let s=le(e),a=null;e.length<=1&&s<=n?a=[1,s]:2===e.length&&e[0]<=n&&e[1]<=n?a=e:3===e.length&&e[0]*e[1]<=n&&e[2]<=n?a=[e[0]*e[1],e[2]]:3===e.length&&e[0]<=n&&e[1]*e[2]<=n?a=[e[0],e[1]*e[2]]:4===e.length&&e[0]*e[1]*e[2]<=n&&e[3]<=n?a=[e[0]*e[1]*e[2],e[3]]:4===e.length&&e[0]<=n&&e[1]*e[2]*e[3]<=n&&(a=[e[0],e[1]*e[2]*e[3]]);const i=null!=a&&Math.max(...a)>r&&Math.min(...a)<=(t?2:1)&&Math.min(...a)>0;if(null==a||i)if(t){const t=uM(e);let n=2,r=2;e.length&&([n,r]=lM(e)),s=t*(n/2)*(r/2),a=me(s).map(e=>2*e)}else a=me(s);return a}function dM(e){return e%2==0}function pM(e,t){if(de(e=e.slice(-2),t=t.slice(-2)))return!0;if(!e.length||!t.length)return!0;if(0===e[0]||0===e[1]||0===t[0]||0===t[1])return!0;if(e.length!==t.length){const n=e[e.length-1],r=t[t.length-1];if(n===r)return!0;if(dM(n)&&dM(r)&&(1===e[0]||1===t[0]))return!0}return e[1]===t[1]&&dM(e[0])&&dM(t[0])}let fM,mM;function gM(e){if(null==fM){const t=kF(e);fM=t.getParameter(t.MAX_TEXTURE_SIZE)}return fM}function yM(){fM=null}function bM(){mM=null}function xM(e){if(null==mM){const t=kF(e);mM=t.getParameter(t.MAX_TEXTURE_IMAGE_UNITS)}return Math.min(16,mM)}function wM(e){if(0===e)return 0;let t;const n=kF(e);return t=vM(n,"EXT_disjoint_timer_query_webgl2")&&2===e?2:vM(n,"EXT_disjoint_timer_query")?1:0,t}function vM(e,t){return null!=e.getExtension(t)}function kM(e){try{if(null!=kF(e))return!0}catch(e){return console.log("Error when getting WebGL context: ",e),!1}return!1}function NM(e){if(0===e)return!1;const t=kF(e);if(1===e){if(!vM(t,"OES_texture_float"))return!1}else if(!vM(t,"EXT_color_buffer_float"))return!1;return SM(t)}function IM(e){if(0===e)return!1;const t=kF(e);if(1!==e){if(vM(t,"EXT_color_buffer_float"))return SM(t);const e="EXT_color_buffer_half_float";if(vM(t,e)){const n=t.getExtension(e);return function(e,t){const n=$F(e,t),r=e.createTexture();e.bindTexture(e.TEXTURE_2D,r);e.texImage2D(e.TEXTURE_2D,0,n.internalFormatHalfFloat,1,1,0,n.textureFormatFloat,n.textureTypeHalfFloat,null);const s=e.createFramebuffer();e.bindFramebuffer(e.FRAMEBUFFER,s),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,r,0);const a=e.checkFramebufferStatus(e.FRAMEBUFFER)===e.FRAMEBUFFER_COMPLETE;return e.bindTexture(e.TEXTURE_2D,null),e.bindFramebuffer(e.FRAMEBUFFER,null),e.deleteTexture(r),e.deleteFramebuffer(s),a}(t,n)}return!1}return!!vM(t,"OES_texture_float")&&(!!vM(t,"WEBGL_color_buffer_float")&&SM(t))}function SM(e){const t=$F(e),n=e.createTexture();e.bindTexture(e.TEXTURE_2D,n),e.texImage2D(e.TEXTURE_2D,0,t.internalFormatFloat,1,1,0,t.textureFormatFloat,t.textureTypeFloat,null);const r=e.createFramebuffer();e.bindFramebuffer(e.FRAMEBUFFER,r),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,n,0);const s=e.checkFramebufferStatus(e.FRAMEBUFFER)===e.FRAMEBUFFER_COMPLETE;return e.bindTexture(e.TEXTURE_2D,null),e.bindFramebuffer(e.FRAMEBUFFER,null),e.deleteTexture(n),e.deleteFramebuffer(r),s}function TM(e){return 2===e&&null!=kF(e).fenceSync}function EM(e,t){Array.isArray(e)||(e=[e]),e.forEach(e=>{null!=e&&ie("complex64"!==e.dtype,()=>`${t} does not support complex64 tensors in the WebGL backend.`)})}const CM=Xe();function $M(){let e,t,n,r,s,a,i,o,u,l;return 2===Xe().getNumber("WEBGL_VERSION")?(e="#version 300 es",t="in",n="out",r="in",s="texture",a="outputColor",i="out vec4 outputColor;",o=Xe().getBool("WEBGL2_ISNAN_CUSTOM")?"\n      bool isnan_custom(float val) {\n        uint floatToUint = floatBitsToUint(val);\n        return (floatToUint & 0x7fffffffu) > 0x7f800000u;\n      }\n\n      bvec4 isnan_custom(vec4 val) {\n        return bvec4(isnan_custom(val.x),\n          isnan_custom(val.y), isnan_custom(val.z), isnan_custom(val.w));\n      }\n\n      #define isnan(value) isnan_custom(value)\n    ":"",u="",l="\n      #define round(value) newRound(value)\n      int newRound(float value) {\n        return int(floor(value + 0.5));\n      }\n\n      ivec4 newRound(vec4 value) {\n        return ivec4(floor(value + vec4(0.5)));\n      }\n    "):(e="",t="attribute",n="varying",r="varying",s="texture2D",a="gl_FragColor",i="",o="\n      #define isnan(value) isnan_custom(value)\n      bool isnan_custom(float val) {\n        return (val > 0. || val < 1. || val == 0.) ? false : true;\n      }\n      bvec4 isnan_custom(vec4 val) {\n        return bvec4(isnan(val.x), isnan(val.y), isnan(val.z), isnan(val.w));\n      }\n    ",u="\n      uniform float INFINITY;\n\n      bool isinf(float val) {\n        return abs(val) == INFINITY;\n      }\n      bvec4 isinf(vec4 val) {\n        return equal(abs(val), vec4(INFINITY));\n      }\n    ",l="\n      int round(float value) {\n        return int(floor(value + 0.5));\n      }\n\n      ivec4 round(vec4 value) {\n        return ivec4(floor(value + vec4(0.5)));\n      }\n    "),{version:e,attribute:t,varyingVs:n,varyingFs:r,texture2D:s,output:a,defineOutput:i,defineSpecialNaN:o,defineSpecialInf:u,defineRound:l}}function AM(e,t,n="index"){const r=Me(t);return r.map((t,s)=>`int ${e[s]} = ${n} / ${t}; ${s===r.length-1?`int ${e[s+1]} = ${n} - ${e[s]} * ${t}`:`index -= ${e[s]} * ${t}`};`).join("")}function RM(e,t,n="index"){const r=Me(t);return r.map((t,s)=>`int ${e[s]} = ${n} / outShapeStrides[${s}]; ${s===r.length-1?`int ${e[s+1]} = ${n} - ${e[s]} * outShapeStrides[${s}]`:`index -= ${e[s]} * outShapeStrides[${s}]`};`).join("")}function _M(e){const t=Me(e).map(e=>e.toString());return`\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * ${t[0]} + coords.y * ${t[1]} + coords.z;\n  }\n`}CM.registerFlag("HAS_WEBGL",()=>CM.getNumber("WEBGL_VERSION")>0),CM.registerFlag("WEBGL_VERSION",()=>kM(2)?2:kM(1)?1:0),CM.registerFlag("WEBGL_CHECK_NUMERICAL_PROBLEMS",()=>!1),CM.registerFlag("WEBGL_BUFFER_SUPPORTED",()=>2===CM.get("WEBGL_VERSION")),CM.registerFlag("WEBGL_CPU_FORWARD",()=>!0),CM.registerFlag("WEBGL_FORCE_F16_TEXTURES",()=>!1),CM.registerFlag("WEBGL_PACK",()=>CM.getBool("HAS_WEBGL")),CM.registerFlag("WEBGL_PACK_NORMALIZATION",()=>CM.getBool("WEBGL_PACK")),CM.registerFlag("WEBGL_PACK_CLIP",()=>CM.getBool("WEBGL_PACK")),CM.registerFlag("WEBGL_PACK_DEPTHWISECONV",()=>CM.getBool("WEBGL_PACK")),CM.registerFlag("WEBGL_PACK_BINARY_OPERATIONS",()=>CM.getBool("WEBGL_PACK")),CM.registerFlag("WEBGL_PACK_UNARY_OPERATIONS",()=>CM.getBool("WEBGL_PACK")),CM.registerFlag("WEBGL_PACK_ARRAY_OPERATIONS",()=>CM.getBool("WEBGL_PACK")),CM.registerFlag("WEBGL_PACK_IMAGE_OPERATIONS",()=>CM.getBool("WEBGL_PACK")),CM.registerFlag("WEBGL_PACK_REDUCE",()=>CM.getBool("WEBGL_PACK")),CM.registerFlag("WEBGL_LAZILY_UNPACK",()=>CM.getBool("WEBGL_PACK")),CM.registerFlag("WEBGL_CONV_IM2COL",()=>CM.getBool("WEBGL_PACK")),CM.registerFlag("WEBGL_PACK_CONV2DTRANSPOSE",()=>CM.getBool("WEBGL_PACK")),CM.registerFlag("WEBGL_MAX_TEXTURE_SIZE",()=>gM(CM.getNumber("WEBGL_VERSION"))),CM.registerFlag("WEBGL_MAX_TEXTURES_IN_SHADER",()=>xM(CM.getNumber("WEBGL_VERSION"))),CM.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION",()=>{const e=CM.getNumber("WEBGL_VERSION");return 0===e?0:wM(e)}),CM.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE",()=>CM.getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0&&!Pa()),CM.registerFlag("WEBGL_RENDER_FLOAT32_CAPABLE",()=>NM(CM.getNumber("WEBGL_VERSION"))),CM.registerFlag("WEBGL_RENDER_FLOAT32_ENABLED",()=>!CM.getBool("WEBGL_FORCE_F16_TEXTURES")&&CM.getBool("WEBGL_RENDER_FLOAT32_CAPABLE")),CM.registerFlag("WEBGL_DOWNLOAD_FLOAT_ENABLED",()=>IM(CM.getNumber("WEBGL_VERSION"))),CM.registerFlag("WEBGL_FENCE_API_ENABLED",()=>TM(CM.getNumber("WEBGL_VERSION"))),CM.registerFlag("WEBGL_SIZE_UPLOAD_UNIFORM",()=>CM.getBool("WEBGL_RENDER_FLOAT32_ENABLED")?4:0),CM.registerFlag("WEBGL_DELETE_TEXTURE_THRESHOLD",()=>-1,e=>{if("number"!=typeof e)throw new Error(`WEBGL_DELETE_TEXTURE_THRESHOLD must be a number but got ${e}.`);if(e<0&&-1!==e)throw new Error(`WEBGL_DELETE_TEXTURE_THRESHOLD must be -1 (indicating never delete) or at least 0, but got ${e}.`)}),CM.registerFlag("WEBGL_FLUSH_THRESHOLD",()=>Pa()?1:-1,e=>{if("number"!=typeof e)throw new Error(`WEBGL_FLUSH_THRESHOLD must be a number but got ${e}.`);if(e<0&&-1!==e)throw new Error(`WEBGL_FLUSH_THRESHOLD must be -1 (indicating never manual flush) or at least 0, but got ${e}.`)}),CM.registerFlag("CPU_HANDOFF_SIZE_THRESHOLD",()=>128),CM.registerFlag("WEBGL_USE_SHAPES_UNIFORMS",()=>!1),CM.registerFlag("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD",()=>1e5),CM.registerFlag("TOPK_K_CPU_HANDOFF_THRESHOLD",()=>128),CM.registerFlag("WEBGL_EXP_CONV",()=>!1),CM.registerFlag("SOFTWARE_WEBGL_ENABLED",()=>CM.getBool("IS_TEST")),CM.registerFlag("WEBGL_MAX_SIZE_FOR_NARROW_TEXTURE",()=>1/0),CM.registerFlag("WEBGL_AUTO_SQUARIFY_NARROW_TEXTURE_SHAPE",()=>!1),CM.registerFlag("WEBGL2_ISNAN_CUSTOM",()=>!1),CM.registerFlag("ENGINE_COMPILE_ONLY",()=>!1);const DM="\n  const float FLOAT_MAX = 1.70141184e38;\n  const float FLOAT_MIN = 1.17549435e-38;\n\n  lowp vec4 encode_float(highp float v) {\n    if (isnan(v)) {\n      return vec4(255, 255, 255, 255);\n    }\n\n    highp float av = abs(v);\n\n    if(av < FLOAT_MIN) {\n      return vec4(0.0, 0.0, 0.0, 0.0);\n    } else if(v > FLOAT_MAX) {\n      return vec4(0.0, 0.0, 128.0, 127.0) / 255.0;\n    } else if(v < -FLOAT_MAX) {\n      return vec4(0.0, 0.0,  128.0, 255.0) / 255.0;\n    }\n\n    highp vec4 c = vec4(0,0,0,0);\n\n    highp float e = floor(log2(av));\n    highp float m = exp2(fract(log2(av))) - 1.0;\n\n    c[2] = floor(128.0 * m);\n    m -= c[2] / 128.0;\n    c[1] = floor(32768.0 * m);\n    m -= c[1] / 32768.0;\n    c[0] = floor(8388608.0 * m);\n\n    highp float ebias = e + 127.0;\n    c[3] = floor(ebias / 2.0);\n    ebias -= c[3] * 2.0;\n    c[2] += floor(ebias) * 128.0;\n\n    c[3] += 128.0 * step(0.0, -v);\n\n    return c / 255.0;\n  }\n",{getBroadcastDims:FM}=y;function MM(e,t,n){const r=[];if(e.forEach(e=>{const t=le(e.shapeInfo.logicalShape);if(e.shapeInfo.isUniform?r.push(`uniform float ${e.name}${t>1?`[${t}]`:""};`):(r.push(`uniform sampler2D ${e.name};`),r.push(`uniform int offset${e.name};`)),n.enableShapeUniforms){const{uniformShape:t}=HM(n.packedInputs,e.shapeInfo.logicalShape,e.shapeInfo.texShape);switch(t.length){case 1:r.push(`uniform int ${e.name}Shape;`);break;case 2:r.push(`uniform ivec2 ${e.name}Shape;`);break;case 3:r.push(`uniform ivec3 ${e.name}Shape;`);break;case 4:r.push(`uniform ivec4 ${e.name}Shape;`)}r.push(`uniform ivec2 ${e.name}TexShape;`)}}),n.enableShapeUniforms){switch(t.logicalShape.length){case 1:r.push("uniform int outShape;");break;case 2:r.push("uniform ivec2 outShape;"),r.push("uniform int outShapeStrides;");break;case 3:r.push("uniform ivec3 outShape;"),r.push("uniform ivec2 outShapeStrides;");break;case 4:r.push("uniform ivec4 outShape;"),r.push("uniform ivec3 outShapeStrides;")}r.push("uniform ivec2 outTexShape;")}n.customUniforms&&n.customUniforms.forEach(e=>{r.push(`uniform ${e.type} ${e.name}${e.arrayIndex?`[${e.arrayIndex}]`:""};`)});const s=r.join("\n"),a=e.map(e=>function(e,t,n=!1,r){let s="";s+=n?LM(e,r):OM(e,r);const a=e.shapeInfo.logicalShape,i=t.logicalShape;return a.length<=i.length&&(s+=n?function(e,t){const n=e.name,r=n.charAt(0).toUpperCase()+n.slice(1),s="get"+r+"AtOutCoords",a=e.shapeInfo.logicalShape.length,i=t.logicalShape.length,o=FM(e.shapeInfo.logicalShape,t.logicalShape),u=GM(i),l=i-a;let c;const h=["x","y","z","w","u","v"];c=0===a?"":i<2&&o.length>=1?"coords = 0;":o.map(e=>`coords.${h[e+l]} = 0;`).join("\n");let d="";d=i<2&&a>0?"coords":e.shapeInfo.logicalShape.map((e,t)=>`coords.${h[t+l]}`).join(", ");let p="return outputValue;";const f=1===le(e.shapeInfo.logicalShape),m=1===le(t.logicalShape);if(1!==a||f||m){if(f&&!m)p=1===i?"\n        return vec4(outputValue.x, outputValue.x, 0., 0.);\n      ":"\n        return vec4(outputValue.x);\n      ";else if(o.length){const e=a-2,t=a-1;o.indexOf(e)>-1&&o.indexOf(t)>-1?p="return vec4(outputValue.x);":o.indexOf(e)>-1?p="return vec4(outputValue.x, outputValue.y, outputValue.x, outputValue.y);":o.indexOf(t)>-1&&(p="return vec4(outputValue.xx, outputValue.zz);")}}else p="\n      return vec4(outputValue.xy, outputValue.xy);\n    ";return`\n    vec4 ${s}() {\n      ${u} coords = getOutputCoords();\n      ${c}\n      vec4 outputValue = get${r}(${d});\n      ${p}\n    }\n  `}(e,t):function(e,t){const n=e.name,r=n.charAt(0).toUpperCase()+n.slice(1),s="get"+r+"AtOutCoords",a=t.texShape,i=e.shapeInfo.texShape,o=e.shapeInfo.logicalShape.length,u=t.logicalShape.length;if(!e.shapeInfo.isUniform&&o===u&&null==e.shapeInfo.flatOffset&&de(i,a))return`\n      float ${s}() {\n        return sampleTexture(${n}, resultUV);\n      }\n    `;const l=GM(u),c=FM(e.shapeInfo.logicalShape,t.logicalShape),h=u-o;let d;const p=["x","y","z","w","u","v"];d=0===o?"":u<2&&c.length>=1?"coords = 0;":c.map(e=>`coords.${p[e+h]} = 0;`).join("\n");let f="";return f=u<2&&o>0?"coords":e.shapeInfo.logicalShape.map((e,t)=>`coords.${p[t+h]}`).join(", "),`\n    float ${s}() {\n      ${l} coords = getOutputCoords();\n      ${d}\n      return get${r}(${f});\n    }\n  `}(e,t)),s}(e,t,n.packedInputs,n.enableShapeUniforms)).join("\n"),i=t.texShape,o=$M(),u=function(e){return`\n    float sampleTexture(sampler2D textureSampler, vec2 uv) {\n      return ${e.texture2D}(textureSampler, uv).r;\n    }\n  `}(o);let l,c,h=function(e){return`${e.version}\n    precision highp float;\n    precision highp int;\n    precision highp sampler2D;\n    ${e.varyingFs} vec2 resultUV;\n    ${e.defineOutput}\n    const vec2 halfCR = vec2(0.5, 0.5);\n\n    struct ivec5\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n    };\n\n    struct ivec6\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n      int v;\n    };\n\n    uniform float NAN;\n    ${e.defineSpecialNaN}\n    ${e.defineSpecialInf}\n    ${e.defineRound}\n\n    int imod(int x, int y) {\n      return x - y * (x / y);\n    }\n\n    int idiv(int a, int b, float sign) {\n      int res = a / b;\n      int mod = imod(a, b);\n      if (sign < 0. && mod != 0) {\n        res -= 1;\n      }\n      return res;\n    }\n\n    //Based on the work of Dave Hoskins\n    //https://www.shadertoy.com/view/4djSRW\n    #define HASHSCALE1 443.8975\n    float random(float seed){\n      vec2 p = resultUV * seed;\n      vec3 p3  = fract(vec3(p.xyx) * HASHSCALE1);\n      p3 += dot(p3, p3.yzx + 19.19);\n      return fract((p3.x + p3.y) * p3.z);\n    }\n\n    ${zM}\n    ${PM}\n    ${BM}\n  `}(o);return t.isPacked?(l=function(e,t,n){switch(e.length){case 0:return"\n    int getOutputCoords() {\n      return 0;\n    }\n  ";case 1:return function(e,t,n){const r=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];return 1===r[0]?n?"\n      int getOutputCoords() {\n        return 2 * int(resultUV.x * ceil(float(outTexShape[1]) / 2.0));\n      }\n    ":`\n      int getOutputCoords() {\n        return 2 * int(resultUV.x * ${r[1]}.0);\n      }\n    `:1===r[1]?n?"\n      int getOutputCoords() {\n        return 2 * int(resultUV.y * ceil(float(outTexShape[0]) / 2.0));\n      }\n    ":`\n      int getOutputCoords() {\n        return 2 * int(resultUV.y * ${r[0]}.0);\n      }\n    `:n?"\n    int getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n      return 2 * (resTexRC.x * packedTexShape[1] + resTexRC.y);\n    }\n  ":`\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${r[0]}, ${r[1]}));\n      return 2 * (resTexRC.x * ${r[1]} + resTexRC.y);\n    }\n  `}(0,t,n);case 2:return function(e,t,n){const r=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];if(de(e,t))return n?"\n      ivec2 getOutputCoords() {\n        ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n        return 2 * ivec2(resultUV.yx * vec2(packedTexShape[0], packedTexShape[1]));\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        return 2 * ivec2(resultUV.yx * vec2(${r[0]}, ${r[1]}));\n      }\n    `;const s=Math.ceil(e[1]/2);return n?"\n    ivec2 getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      int texelsInLogicalRow = int(ceil(float(outShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n\n      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;\n      int r = 2 * (index / texelsInLogicalRow);\n      int c = imod(index, texelsInLogicalRow) * 2;\n\n      return ivec2(r, c);\n    }\n  ":`\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${r[0]}, ${r[1]}));\n\n      int index = resTexRC.x * ${r[1]} + resTexRC.y;\n      int r = 2 * (index / ${s});\n      int c = imod(index, ${s}) * 2;\n\n      return ivec2(r, c);\n    }\n  `}(e,t,n);case 3:return function(e,t,n){if(n)return"\n    ivec3 getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      int texelsInLogicalRow = int(ceil(float(outShape[2]) / 2.0));\n      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;\n\n      int b = index / texelsInBatch;\n      index -= b * texelsInBatch;\n\n      int r = 2 * (index / texelsInLogicalRow);\n      int c = imod(index, texelsInLogicalRow) * 2;\n\n      return ivec3(b, r, c);\n    }\n  ";const r=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],s=Math.ceil(e[2]/2),a=s*Math.ceil(e[1]/2);return`\n    ivec3 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${r[0]}, ${r[1]}));\n      int index = resTexRC.x * ${r[1]} + resTexRC.y;\n\n      int b = index / ${a};\n      index -= b * ${a};\n\n      int r = 2 * (index / ${s});\n      int c = imod(index, ${s}) * 2;\n\n      return ivec3(b, r, c);\n    }\n  `}(e,t,n);default:return function(e,t,n){if(n)return"\n    ivec4 getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;\n\n      int texelsInLogicalRow = int(ceil(float(outShape[3]) / 2.0));\n      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[2]) / 2.0));\n      int texelsInBatchN = texelsInBatch * outShape[1];\n\n      int b2 = index / texelsInBatchN;\n      index -= b2 * texelsInBatchN;\n\n      int b = index / texelsInBatch;\n      index -= b * texelsInBatch;\n\n      int r = 2 * (index / texelsInLogicalRow);\n      int c = imod(index, texelsInLogicalRow) * 2;\n\n      return ivec4(b2, b, r, c);\n    }\n  ";const r=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],s=Math.ceil(e[e.length-1]/2),a=s*Math.ceil(e[e.length-2]/2);let i=a,o="",u="b, r, c";for(let t=2;t<e.length-1;t++)i*=e[e.length-t-1],o=`\n      int b${t} = index / ${i};\n      index -= b${t} * ${i};\n    `+o,u=`b${t}, `+u;return`\n    ivec${e.length} getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${r[0]}, ${r[1]}));\n      int index = resTexRC.x * ${r[1]} + resTexRC.y;\n\n      ${o}\n\n      int b = index / ${a};\n      index -= b * ${a};\n\n      int r = 2 * (index / ${s});\n      int c = imod(index, ${s}) * 2;\n\n      return ivec${e.length}(${u});\n    }\n  `}(e,t,n)}}(t.logicalShape,i,n.enableShapeUniforms),c=function(e){return`\n    void setOutput(vec4 val) {\n      ${e.output} = val;\n    }\n  `}(o)):(l=function(e,t,n){switch(e.length){case 0:return"\n    int getOutputCoords() {\n      return 0;\n    }\n  ";case 1:return function(e,t,n){return 1===t[0]?n?"\n      int getOutputCoords() {\n        return int(resultUV.x * float(outTexShape[1]));\n      }\n    ":`\n      int getOutputCoords() {\n        return int(resultUV.x * ${t[1]}.0);\n      }\n    `:1===t[1]?n?"\n      int getOutputCoords() {\n        return int(resultUV.y * float(outTexShape[0]));\n      }\n    ":`\n      int getOutputCoords() {\n        return int(resultUV.y * ${t[0]}.0);\n      }\n    `:n?"\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(outTexShape[0], outTexShape[1]));\n      return resTexRC.x * outTexShape[1] + resTexRC.y;\n    }\n  ":`\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${t[0]}, ${t[1]}));\n      return resTexRC.x * ${t[1]} + resTexRC.y;\n    }\n  `}(0,t,n);case 2:return function(e,t,n){return de(e,t)?n?"\n      ivec2 getOutputCoords() {\n        return ivec2(resultUV.yx * vec2(outTexShape[0], outTexShape[1]));\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        return ivec2(resultUV.yx * vec2(${t[0]}, ${t[1]}));\n      }\n    `:1===e[1]?n?"\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(outTexShape[0], outTexShape[1]));\n        int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n        return ivec2(index, 0);\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(${t[0]}, ${t[1]}));\n        int index = resTexRC.x * ${t[1]} + resTexRC.y;\n        return ivec2(index, 0);\n      }\n    `:1===e[0]?n?"\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(outTexShape[0], outTexShape[1]));\n        int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n        return ivec2(0, index);\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(${t[0]}, ${t[1]}));\n        int index = resTexRC.x * ${t[1]} + resTexRC.y;\n        return ivec2(0, index);\n      }\n    `:n?"\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(outTexShape[0], outTexShape[1]));\n      int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n      int r = index / outShape[1];\n      int c = index - r * outShape[1];\n      return ivec2(r, c);\n    }\n  ":`\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n      int r = index / ${e[1]};\n      int c = index - r * ${e[1]};\n      return ivec2(r, c);\n    }\n  `}(e,t,n);case 3:return function(e,t,n){if(n)return`\n  ivec3 getOutputCoords() {\n    ivec2 resTexRC = ivec2(resultUV.yx *\n                           vec2(outTexShape[0], outTexShape[1]));\n    int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n    ${RM(["r","c","d"],e)}\n    return ivec3(r, c, d);\n  }\n`;const r=AM(["r","c","d"],e);return`\n    ivec3 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n      ${r}\n      return ivec3(r, c, d);\n    }\n  `}(e,t,n);case 4:return function(e,t,n){if(n)return`\n    ivec4 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(outTexShape[0], outTexShape[1]));\n      int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n      ${RM(["r","c","d","d2"],e)}\n      return ivec4(r, c, d, d2);\n    }\n  `;const r=AM(["r","c","d","d2"],e);return`\n    ivec4 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n      ${r}\n      return ivec4(r, c, d, d2);\n    }\n  `}(e,t,n);case 5:return function(e,t){const n=AM(["r","c","d","d2","d3"],e);return`\n    ivec5 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx * vec2(${t[0]},\n                             ${t[1]}));\n\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n\n      ${n}\n\n      ivec5 outShape = ivec5(r, c, d, d2, d3);\n      return outShape;\n    }\n  `}(e,t);case 6:return function(e,t){const n=AM(["r","c","d","d2","d3","d4"],e);return`\n    ivec6 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n\n      ${n}\n\n      ivec6 result = ivec6(r, c, d, d2, d3, d4);\n      return result;\n    }\n  `}(e,t);default:throw new Error(`${e.length}-D output sampling is not yet supported`)}}(t.logicalShape,i,n.enableShapeUniforms),c=function(e){return`\n    void setOutput(float val) {\n      ${e.output} = vec4(val, 0, 0, 0);\n    }\n  `}(o)),n.packedInputs&&(h+=VM),[h,u,c,s,l,a,n.userCode].join("\n")}function OM(e,t=!1){const n=e.shapeInfo.logicalShape;switch(n.length){case 0:return function(e,t){const n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1);if(e.shapeInfo.isUniform)return`float ${r}() {return ${n};}`;const[s,a]=e.shapeInfo.texShape;if(1===s&&1===a)return`\n      float ${r}() {\n        return sampleTexture(${n}, halfCR);\n      }\n    `;const i=UM(n);if(t)return`\n    float ${r}() {\n      vec2 uv = uvFromFlat(${n}TexShape[0], ${n}TexShape[1], ${i});\n      return sampleTexture(${n}, uv);\n    }\n  `;const[o,u]=e.shapeInfo.texShape;return`\n    float ${r}() {\n      vec2 uv = uvFromFlat(${o}, ${u}, ${i});\n      return sampleTexture(${n}, uv);\n    }\n  `}(e,t);case 1:return function(e,t){const n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1);if(e.shapeInfo.isUniform)return`\n      float ${r}(int index) {\n        ${WM(e)}\n      }\n    `;const s=e.shapeInfo.texShape,a=s[0],i=s[1];if(1===i&&1===a)return`\n      float ${r}(int index) {\n        return sampleTexture(${n}, halfCR);\n      }\n    `;const o=UM(n);return 1===i?t?`\n      float ${r}(int index) {\n        vec2 uv = vec2(0.5, (float(index + ${o}) + 0.5) / float(${n}TexShape[0]));\n        return sampleTexture(${n}, uv);\n      }\n    `:`\n      float ${r}(int index) {\n        vec2 uv = vec2(0.5, (float(index + ${o}) + 0.5) / ${a}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `:1===a?t?`\n      float ${r}(int index) {\n        vec2 uv = vec2((float(index + ${o}) + 0.5) / float(${n}TexShape[1]), 0.5);\n        return sampleTexture(${n}, uv);\n      }\n    `:`\n      float ${r}(int index) {\n        vec2 uv = vec2((float(index + ${o}) + 0.5) / ${i}.0, 0.5);\n        return sampleTexture(${n}, uv);\n      }\n    `:t?`\n    float ${r}(int index) {\n      vec2 uv = uvFromFlat(${n}TexShape[0], ${n}TexShape[1], index + ${o});\n      return sampleTexture(${n}, uv);\n    }\n  `:`\n    float ${r}(int index) {\n      vec2 uv = uvFromFlat(${a}, ${i}, index + ${o});\n      return sampleTexture(${n}, uv);\n    }\n  `}(e,t);case 2:return function(e,t){const n=e.shapeInfo.logicalShape,r=e.name,s="get"+r.charAt(0).toUpperCase()+r.slice(1),a=e.shapeInfo.texShape;if(null!=a&&de(n,a)){if(t)return`\n      float ${s}(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(${r}TexShape[1], ${r}TexShape[0]);\n        return sampleTexture(${r}, uv);\n      }\n    `;const e=a[0];return`\n    float ${s}(int row, int col) {\n      vec2 uv = (vec2(col, row) + halfCR) / vec2(${a[1]}.0, ${e}.0);\n      return sampleTexture(${r}, uv);\n    }\n  `}const{newShape:i,keptDims:o}=ve(n),u=i;if(u.length<n.length){const n=["row","col"];return`\n      ${OM(jM(e,u),t)}\n      float ${s}(int row, int col) {\n        return ${s}(${KM(n,o)});\n      }\n    `}if(e.shapeInfo.isUniform)return`\n      float ${s}(int row, int col) {\n        int index = round(dot(vec2(row, col), vec2(${n[1]}, 1)));\n        ${WM(e)}\n      }\n    `;const l=a[0],c=a[1],h=UM(r);return 1===c?t?`\n      float ${s}(int row, int col) {\n        float index = dot(vec3(row, col, ${h}), vec3(${r}Shape[1], 1, 1));\n        vec2 uv = vec2(0.5, (index + 0.5) / float(${r}TexShape[0]));\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n    float ${s}(int row, int col) {\n      float index = dot(vec3(row, col, ${h}), vec3(${n[1]}, 1, 1));\n      vec2 uv = vec2(0.5, (index + 0.5) / ${l}.0);\n      return sampleTexture(${r}, uv);\n    }\n  `:1===l?t?`\n      float ${s}(int row, int col) {\n        float index = dot(vec3(row, col, ${h}), vec3(${r}Shape[1], 1, 1));\n        vec2 uv = vec2((index + 0.5) / float(${r}TexShape[1]), 0.5);\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n    float ${s}(int row, int col) {\n      float index = dot(vec3(row, col, ${h}), vec3(${n[1]}, 1, 1));\n      vec2 uv = vec2((index + 0.5) / ${c}.0, 0.5);\n      return sampleTexture(${r}, uv);\n    }\n  `:t?`\n      float ${s}(int row, int col) {\n        // Explicitly use integer operations as dot() only works on floats.\n        int index = row * ${r}Shape[1] + col + ${h};\n        vec2 uv = uvFromFlat(${r}TexShape[0], ${r}TexShape[1], index);\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n  float ${s}(int row, int col) {\n    // Explicitly use integer operations as dot() only works on floats.\n    int index = row * ${n[1]} + col + ${h};\n    vec2 uv = uvFromFlat(${l}, ${c}, index);\n    return sampleTexture(${r}, uv);\n  }\n`}(e,t);case 3:return function(e,t){const n=e.shapeInfo.logicalShape,r=e.name,s="get"+r.charAt(0).toUpperCase()+r.slice(1),a=n[1]*n[2],i=n[2],{newShape:o,keptDims:u}=ve(n),l=o;if(l.length<n.length){const n=["row","col","depth"];return`\n        ${OM(jM(e,l),t)}\n        float ${s}(int row, int col, int depth) {\n          return ${s}(${KM(n,u)});\n        }\n      `}if(e.shapeInfo.isUniform)return`\n      float ${s}(int row, int col, int depth) {\n        int index = round(dot(vec3(row, col, depth),\n                          vec3(${a}, ${i}, 1)));\n        ${WM(e)}\n      }\n    `;const c=e.shapeInfo.texShape,h=c[0],d=c[1],p=e.shapeInfo.flatOffset;if(d===a&&null==p)return t?`\n      float ${s}(int row, int col, int depth) {\n        int stride1 = ${r}Shape[2];\n        float texR = float(row);\n        float texC = dot(vec2(col, depth), vec2(stride1, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${r}TexShape[1], ${r}TexShape[0]);\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n        float ${s}(int row, int col, int depth) {\n          float texR = float(row);\n          float texC = dot(vec2(col, depth), vec2(${i}, 1));\n          vec2 uv = (vec2(texC, texR) + halfCR) /\n                     vec2(${d}.0, ${h}.0);\n          return sampleTexture(${r}, uv);\n        }\n      `;if(d===i&&null==p)return t?`\n      float ${s}(int row, int col, int depth) {\n        float texR = dot(vec2(row, col), vec2(${r}Shape[1], 1));\n        float texC = float(depth);\n        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${r}TexShape[1], ${r}TexShape[0]);\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n    float ${s}(int row, int col, int depth) {\n      float texR = dot(vec2(row, col), vec2(${n[1]}, 1));\n      float texC = float(depth);\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${d}.0, ${h}.0);\n      return sampleTexture(${r}, uv);\n    }\n  `;const f=UM(r);return t?`\n    float ${s}(int row, int col, int depth) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int stride0 = ${r}Shape[1] * ${r}Shape[2];\n      int stride1 = ${r}Shape[2];\n      int index = row * stride0 + col * stride1 + depth + ${f};\n      vec2 uv = uvFromFlat(${r}TexShape[0], ${r}TexShape[1], index);\n      return sampleTexture(${r}, uv);\n    }\n    `:`\n      float ${s}(int row, int col, int depth) {\n        // Explicitly use integer operations as dot() only works on floats.\n        int index = row * ${a} + col * ${i} + depth + ${f};\n        vec2 uv = uvFromFlat(${h}, ${d}, index);\n        return sampleTexture(${r}, uv);\n      }\n  `}(e,t);case 4:return function(e,t){const n=e.shapeInfo.logicalShape,r=e.name,s="get"+r.charAt(0).toUpperCase()+r.slice(1),a=n[3],i=n[2]*a,o=n[1]*i,{newShape:u,keptDims:l}=ve(n);if(u.length<n.length){const n=["row","col","depth","depth2"];return`\n      ${OM(jM(e,u),t)}\n      float ${s}(int row, int col, int depth, int depth2) {\n        return ${s}(${KM(n,l)});\n      }\n    `}if(e.shapeInfo.isUniform)return`\n      float ${s}(int row, int col, int depth, int depth2) {\n        int index = round(dot(vec4(row, col, depth, depth2),\n                          vec4(${o}, ${i}, ${a}, 1)));\n        ${WM(e)}\n      }\n    `;const c=e.shapeInfo.flatOffset,h=e.shapeInfo.texShape,d=h[0],p=h[1],f=`int stride2 = ${r}Shape[3];`,m=`int stride1 = ${r}Shape[2] * stride2;`,g=`int stride0 = ${r}Shape[1] * stride1;`;if(p===o&&null==c)return t?`\n      float ${s}(int row, int col, int depth, int depth2) {\n        ${f}\n        ${m}\n        float texR = float(row);\n        float texC =\n            dot(vec3(col, depth, depth2),\n                vec3(stride1, stride2, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${r}TexShape[1], ${r}TexShape[0]);\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n      float ${s}(int row, int col, int depth, int depth2) {\n        float texR = float(row);\n        float texC =\n            dot(vec3(col, depth, depth2),\n                vec3(${i}, ${a}, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${p}.0, ${d}.0);\n        return sampleTexture(${r}, uv);\n      }\n    `;if(p===a&&null==c)return t?`\n      float ${s}(int row, int col, int depth, int depth2) {\n        float texR = dot(vec3(row, col, depth),\n                         vec3(${r}Shape[1] * ${r}Shape[2], ${r}Shape[2], 1));\n        float texC = float(depth2);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${r}TexShape[1], ${r}TexShape[0]);\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n      float ${s}(int row, int col, int depth, int depth2) {\n        float texR = dot(vec3(row, col, depth),\n                         vec3(${n[1]*n[2]}, ${n[2]}, 1));\n        float texC = float(depth2);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${p}.0, ${d}.0);\n        return sampleTexture(${r}, uv);\n      }\n    `;const y=UM(r);return t?`\n    float ${s}(int row, int col, int depth, int depth2) {\n      // Explicitly use integer operations as dot() only works on floats.\n      ${f}\n      ${m}\n      ${g}\n      int index = row * stride0 + col * stride1 +\n          depth * stride2 + depth2;\n      vec2 uv = uvFromFlat(${r}TexShape[0], ${r}TexShape[1], index + ${y});\n      return sampleTexture(${r}, uv);\n    }\n  `:`\n    float ${s}(int row, int col, int depth, int depth2) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${o} + col * ${i} +\n          depth * ${a} + depth2;\n      vec2 uv = uvFromFlat(${d}, ${p}, index + ${y});\n      return sampleTexture(${r}, uv);\n    }\n  `}(e,t);case 5:return function(e){const t=e.shapeInfo.logicalShape,n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),s=t[4],a=t[3]*s,i=t[2]*a,o=t[1]*i,{newShape:u,keptDims:l}=ve(t);if(u.length<t.length){const t=["row","col","depth","depth2","depth3"];return`\n      ${OM(jM(e,u))}\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        return ${r}(${KM(t,l)});\n      }\n    `}if(e.shapeInfo.isUniform)return`\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        float index = dot(\n          vec4(row, col, depth, depth2),\n          vec4(${o}, ${i}, ${a}, ${s})) +\n          depth3;\n        ${WM(e)}\n      }\n    `;const c=e.shapeInfo.flatOffset,h=e.shapeInfo.texShape,d=h[0],p=h[1];if(p===o&&null==c)return`\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        int texR = row;\n        float texC = dot(vec4(col, depth, depth2, depth3),\n                         vec4(${i}, ${a}, ${s}, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${p}.0, ${d}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;if(p===s&&null==c)return`\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        float texR = dot(\n          vec4(row, col, depth, depth2),\n          vec4(${t[1]*t[2]*t[3]},\n               ${t[2]*t[3]}, ${t[3]}, 1));\n        int texC = depth3;\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${p}.0, ${d}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;return`\n    float ${r}(int row, int col, int depth, int depth2, int depth3) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${o} + col * ${i} + depth * ${a} +\n          depth2 * ${s} + depth3 + ${UM(n)};\n      vec2 uv = uvFromFlat(${d}, ${p}, index);\n      return sampleTexture(${n}, uv);\n    }\n  `}(e);case 6:return function(e){const t=e.shapeInfo.logicalShape,n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),{newShape:s,keptDims:a}=ve(t);if(s.length<t.length){const t=["row","col","depth","depth2","depth3","depth4"];return`\n      ${OM(jM(e,s))}\n      float ${r}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        return ${r}(${KM(t,a)});\n      }\n    `}const i=t[5],o=t[4]*i,u=t[3]*o,l=t[2]*u,c=t[1]*l;if(e.shapeInfo.isUniform)return`\n      float ${r}(int row, int col, int depth,\n                  int depth2, int depth3, int depth4) {\n        int index = round(dot(\n          vec4(row, col, depth, depth2),\n          vec4(${c}, ${l}, ${u}, ${o})) +\n          dot(\n            vec2(depth3, depth4),\n            vec2(${i}, 1)));\n        ${WM(e)}\n      }\n    `;const h=e.shapeInfo.flatOffset,d=e.shapeInfo.texShape,p=d[0],f=d[1];if(f===c&&null==h)return`\n      float ${r}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        int texR = row;\n        float texC = dot(vec4(col, depth, depth2, depth3),\n          vec4(${l}, ${u}, ${o}, ${i})) +\n               float(depth4);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${f}.0, ${p}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;if(f===i&&null==h)return`\n      float ${r}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        float texR = dot(vec4(row, col, depth, depth2),\n          vec4(${t[1]*t[2]*t[3]*t[4]},\n               ${t[2]*t[3]*t[4]},\n               ${t[3]*t[4]},\n               ${t[4]})) + float(depth3);\n        int texC = depth4;\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${f}.0, ${p}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;return`\n    float ${r}(int row, int col, int depth,\n                  int depth2, int depth3, int depth4) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${c} + col * ${l} + depth * ${u} +\n          depth2 * ${o} + depth3 * ${i} + depth4 + ${UM(n)};\n      vec2 uv = uvFromFlat(${p}, ${f}, index);\n      return sampleTexture(${n}, uv);\n    }\n  `}(e);default:throw new Error(`${n.length}-D input sampling is not yet supported`)}}function LM(e,t){switch(e.shapeInfo.logicalShape.length){case 0:return function(e){const t=e.name;return`\n    vec4 ${"get"+t.charAt(0).toUpperCase()+t.slice(1)}() {\n      return ${$M().texture2D}(${t}, halfCR);\n    }\n  `}(e);case 1:return function(e,t){const n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),s=e.shapeInfo.texShape,a=$M();if(t)return`\n    vec4 ${r}(int index) {\n      ivec2 packedTexShape = ivec2(ceil(float(${n}TexShape[0]) / 2.0), ceil(float(${n}TexShape[1]) / 2.0));\n      vec2 uv = packedUVfrom1D(\n        packedTexShape[0], packedTexShape[1], index);\n      return ${a.texture2D}(${n}, uv);\n    }\n  `;const i=[Math.ceil(s[0]/2),Math.ceil(s[1]/2)];return`\n    vec4 ${r}(int index) {\n      vec2 uv = packedUVfrom1D(\n        ${i[0]}, ${i[1]}, index);\n      return ${a.texture2D}(${n}, uv);\n    }\n  `}(e,t);case 2:return function(e,t){const n=e.shapeInfo.logicalShape,r=e.name,s="get"+r.charAt(0).toUpperCase()+r.slice(1),a=e.shapeInfo.texShape,i=a[0],o=a[1],u=$M();if(null!=a&&de(n,a))return t?`\n      vec4 ${s}(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(${r}TexShape[1], ${r}TexShape[0]);\n\n        return ${u.texture2D}(${r}, uv);\n      }\n    `:`\n      vec4 ${s}(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(${o}.0, ${i}.0);\n\n        return ${u.texture2D}(${r}, uv);\n      }\n    `;if(t)return`\n    vec4 ${s}(int row, int col) {\n      ivec2 packedTexShape = ivec2(ceil(float(${r}TexShape[0]) / 2.0), ceil(float(${r}TexShape[1]) / 2.0));\n      int valuesPerRow = int(ceil(float(${r}Shape[1]) / 2.0));\n      vec2 uv = packedUVfrom2D(valuesPerRow, packedTexShape[0], packedTexShape[1], row, col);\n      return ${u.texture2D}(${r}, uv);\n    }\n  `;const l=[Math.ceil(a[0]/2),Math.ceil(a[1]/2)];return`\n    vec4 ${s}(int row, int col) {\n      vec2 uv = packedUVfrom2D(${Math.ceil(n[1]/2)}, ${l[0]}, ${l[1]}, row, col);\n      return ${u.texture2D}(${r}, uv);\n    }\n  `}(e,t);case 3:return function(e,t){const n=e.shapeInfo.logicalShape,r=e.name,s="get"+r.charAt(0).toUpperCase()+r.slice(1),a=e.shapeInfo.texShape,i=[Math.ceil(a[0]/2),Math.ceil(a[1]/2)];if(1===n[0]){const r=[1,2],a=["b","row","col"];return`\n        ${LM(jM(e,n.slice(1)),t)}\n        vec4 ${s}(int b, int row, int col) {\n          return ${s}(${KM(a,r)});\n        }\n      `}const o=$M();if(t)return`\n    vec4 ${s}(int b, int row, int col) {\n      ivec2 packedTexShape = ivec2(ceil(float(${r}TexShape[0]) / 2.0), ceil(float(${r}TexShape[1]) / 2.0));\n      int valuesPerRow = int(ceil(float(${r}Shape[2]) / 2.0));\n      int texelsInBatch = valuesPerRow * int(ceil(float(${r}Shape[1]) / 2.0));\n      vec2 uv = packedUVfrom3D(\n        packedTexShape[0], packedTexShape[1], texelsInBatch, valuesPerRow, b, row, col);\n      return ${o.texture2D}(${r}, uv);\n    }\n  `;const u=i[0],l=i[1],c=Math.ceil(n[2]/2);return`\n    vec4 ${s}(int b, int row, int col) {\n      vec2 uv = packedUVfrom3D(\n        ${u}, ${l}, ${c*Math.ceil(n[1]/2)}, ${c}, b, row, col);\n      return ${o.texture2D}(${r}, uv);\n    }\n  `}(e,t);default:return function(e,t){const n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),s=$M();if(t)return`\n    vec4 ${r}(int b2, int b, int row, int col) {\n      int valuesPerRow = int(ceil(float(${n}Shape[3]) / 2.0));\n      int texelsInBatch = valuesPerRow * int(ceil(float(${n}Shape[2]) / 2.0));\n      int index = b * texelsInBatch + (row / 2) * valuesPerRow + (col / 2);\n      texelsInBatch *= ${n}Shape[1];\n      index = b2 * texelsInBatch + index;\n      ivec2 packedTexShape = ivec2(ceil(float(${n}TexShape[0]) / 2.0), ceil(float(${n}TexShape[1]) / 2.0));\n      int texR = index / packedTexShape[1];\n      int texC = index - texR * packedTexShape[1];\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(packedTexShape[1], packedTexShape[0]); return ${s.texture2D}(${n}, uv);\n    }\n  `;const a=e.shapeInfo.logicalShape,i=a.length,o=e.shapeInfo.texShape,u=[Math.ceil(o[0]/2),Math.ceil(o[1]/2)],l=u[0],c=u[1],h=Math.ceil(a[i-1]/2);let d=h*Math.ceil(a[i-2]/2),p="int b, int row, int col",f=`b * ${d} + (row / 2) * ${h} + (col / 2)`;for(let e=2;e<i-1;e++)p=`int b${e}, `+p,d*=a[i-e-1],f=`b${e} * ${d} + `+f;return`\n    vec4 ${r}(${p}) {\n      int index = ${f};\n      int texR = index / ${c};\n      int texC = index - texR * ${c};\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${c}, ${l});\n      return ${s.texture2D}(${n}, uv);\n    }\n  `}(e,t)}}const zM="\nvec2 uvFromFlat(int texNumR, int texNumC, int index) {\n  int texR = index / texNumC;\n  int texC = index - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\nvec2 packedUVfrom1D(int texNumR, int texNumC, int index) {\n  int texelIndex = index / 2;\n  int texR = texelIndex / texNumC;\n  int texC = texelIndex - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",PM="\nvec2 packedUVfrom2D(int texelsInLogicalRow, int texNumR,\n  int texNumC, int row, int col) {\n  int texelIndex = (row / 2) * texelsInLogicalRow + (col / 2);\n  int texR = texelIndex / texNumC;\n  int texC = texelIndex - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",BM="\nvec2 packedUVfrom3D(int texNumR, int texNumC,\n    int texelsInBatch, int texelsInLogicalRow, int b,\n    int row, int col) {\n  int index = b * texelsInBatch + (row / 2) * texelsInLogicalRow + (col / 2);\n  int texR = index / texNumC;\n  int texC = index - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",VM="\n  float getChannel(vec4 frag, vec2 innerDims) {\n    vec2 modCoord = mod(innerDims, 2.);\n    return modCoord.x == 0. ?\n      (modCoord.y == 0. ? frag.r : frag.g) :\n      (modCoord.y == 0. ? frag.b : frag.a);\n  }\n  float getChannel(vec4 frag, int dim) {\n    float modCoord = mod(float(dim), 2.);\n    return modCoord == 0. ? frag.r : frag.g;\n  }\n";function UM(e){return`offset${e}`}function WM(e){const t=e.name,n=le(e.shapeInfo.logicalShape);return n<2?`return ${t};`:`\n    for (int i = 0; i < ${n}; i++) {\n      if (i == index) {\n        return ${t}[i];\n      }\n    }\n  `}function GM(e){if(e<=1)return"int";if(2===e)return"ivec2";if(3===e)return"ivec3";if(4===e)return"ivec4";if(5===e)return"ivec5";if(6===e)return"ivec6";throw Error(`GPU for rank ${e} is not yet supported`)}function HM(e,t,n){const{newShape:r,keptDims:s}=ve(t),a=t.length,i=e&&3===a&&1===t[0],o=i?t.slice(1):r,u=!e&&a>1&&!de(t,n)&&r.length<a||i;return{useSqueezeShape:u,uniformShape:u?o:t,keptDims:s}}function jM(e,t){const n=JSON.parse(JSON.stringify(e));return n.shapeInfo.logicalShape=t,n}function KM(e,t){return t.map(t=>e[t]).join(", ")}function qM(e,t,n){const r=[],s=[];let a,i,o,u=null,l=null;l=e.getUniformLocation(n,"NAN",!1),1===Xe().getNumber("WEBGL_VERSION")&&(u=e.getUniformLocation(n,"INFINITY",!1));const c=!1;for(const s of t.variableNames){const a={name:s,uniform:e.getUniformLocation(n,s,c),offset:e.getUniformLocation(n,`offset${s}`,c)};t.enableShapeUniforms&&(a.shape=e.getUniformLocation(n,`${s}Shape`,c),a.texShape=e.getUniformLocation(n,`${s}TexShape`,c)),r.push(a)}if(t.enableShapeUniforms&&(a=e.getUniformLocation(n,"outShape",c),o=e.getUniformLocation(n,"outShapeStrides",c),i=e.getUniformLocation(n,"outTexShape",c)),t.customUniforms)for(const r of t.customUniforms)s.push(e.getUniformLocation(n,r.name,c));return{variablesLocations:r,customUniformLocations:s,infLoc:u,nanLoc:l,outShapeLocation:a,outShapeStridesLocation:o,outTexShapeLocation:i}}function XM(e,t){if(e.length!==t.length)throw Error(`Binary was compiled with ${e.length} inputs, but was executed with ${t.length} inputs`);e.forEach((e,n)=>{const r=e.logicalShape,s=t[n],a=s.shape;if(!de(r,a))throw Error(`Binary was compiled with different shapes than the current args. Shapes ${r} and ${a} must match`);if(e.isUniform&&s.isUniform)return;const i=e.texShape,o=s.isUniform?null:s.texData.texShape;if(!de(i,o))throw Error(`Binary was compiled with different texture shapes than the current args. Shape ${i} and ${o} must match`)})}function YM(e){return Xe().getBool("WEBGL_USE_SHAPES_UNIFORMS")&&e<=4}class ZM{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outPackingScheme=NF.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];const t=$M();this.outputShape=e,this.enableShapeUniforms=YM(this.outputShape.length),this.userCode=`\n      ivec3 outCoordsFromFlatIndex(int index) {\n        ${this.enableShapeUniforms?RM(["r","c","d"],e):AM(["r","c","d"],e)}\n        return ivec3(r, c, d);\n      }\n\n      void main() {\n        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));\n        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);\n\n        vec4 result = vec4(0.);\n\n        for (int i=0; i<4; i++) {\n          int flatIndex = index + i;\n          ivec3 rc = outCoordsFromFlatIndex(flatIndex);\n          result[i] = getA(rc.x, rc.y, rc.z);\n        }\n\n        ${t.output} = result;\n      }\n    `}}class QM{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outPackingScheme=NF.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];const t=$M();this.outputShape=e,this.enableShapeUniforms=YM(this.outputShape.length),this.userCode=`\n      ivec3 outCoordsFromFlatIndex(int index) {\n        ${this.enableShapeUniforms?RM(["r","c","d"],e):AM(["r","c","d"],e)}\n        return ivec3(r, c, d);\n      }\n\n      void main() {\n        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));\n        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);\n\n        vec4 result = vec4(0.);\n\n        for (int i=0; i<4; i++) {\n          int flatIndex = index + i;\n          ivec3 rc = outCoordsFromFlatIndex(flatIndex);\n          result[i] = getChannel(getA(rc.x, rc.y, rc.z), vec2(rc.y, rc.z));\n        }\n\n        ${t.output} = result;\n      }\n    `}}class JM{constructor(e){this.variableNames=["A"],this.outTexUsage=IF.DOWNLOAD;const t=$M();this.outputShape=e,this.userCode=`\n      ${DM}\n\n      void main() {\n        float x = getAAtOutCoords();\n        ${t.output} = encode_float(x);\n      }\n    `}}class eO{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outTexUsage=IF.DOWNLOAD;const t=$M();this.outputShape=e,this.userCode=`\n      ${DM}\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n        float x = getChannel(getAAtOutCoords(), vec2(coords.y, coords.z));\n        ${t.output} = encode_float(x);\n      }\n    `}}const tO={R:0,G:1,B:2,A:3};class nO{constructor(e,t=!1,n="RGBA"){this.variableNames=["A"],this.customUniforms=[{name:"texShape",type:"ivec2"}];const r=$M();this.outputShape=e,this.enableShapeUniforms=YM(this.outputShape.length);let s="result";t&&(s="floor(result * 255. + 0.5)");let a="";for(let e=0;e<n.length;e++){const t=n[e];a+=`\n          if(offset == ${e}) {\n            result = values[${tO[t]}];\n          }`}this.userCode=`\n      ${this.enableShapeUniforms?"\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;\n  }\n":_M(e)}\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int flatIndex = getFlatIndex(coords);\n        float result = 0.;\n        int offset = imod(flatIndex, ${n.length});\n\n        flatIndex = idiv(flatIndex, ${n.length}, 1.);\n\n        int r = flatIndex / texShape[1];\n        if (r < texShape[0]) {\n          int c = imod(flatIndex, texShape[1]);\n          vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);\n          vec4 values = ${r.texture2D}(A, uv);\n          ${a}\n        }\n        ${r.output} = vec4(${s}, 0., 0., 0.);\n      }\n    `}}class rO{constructor(e,t=!1){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.customUniforms=[{name:"texShape",type:"ivec2"}];const n=$M();this.outputShape=e,this.enableShapeUniforms=YM(this.outputShape.length);let r="",s="result";t&&(s="floor(result * 255. + 0.5)");for(let t=0;t<=1;t++)for(let s=0;s<=1;s++){const a=2*t+s;r+=`\n          localCoords = coords;\n          if(localCoords[2] + ${s} < ${this.enableShapeUniforms?"outShape[2]":`${e[2]}`}) {\n          localCoords[2] += ${s};\n          if (localCoords[1] + ${t} < ${this.enableShapeUniforms?"outShape[1]":`${e[1]}`}) {\n            localCoords[1] += ${t};\n\n            flatIndex = getFlatIndex(localCoords);\n            offset = imod(flatIndex, 4);\n\n            flatIndex = idiv(flatIndex, 4, 1.);\n\n            int r = flatIndex / texShape[1];\n            int c = imod(flatIndex, texShape[1]);\n            vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);\n            values = ${n.texture2D}(A, uv);\n\n            if (offset == 0) {\n              result[${a}] = values[0];\n            } else if (offset == 1) {\n              result[${a}] = values[1];\n            } else if (offset == 2) {\n              result[${a}] = values[2];\n            } else {\n              result[${a}] = values[3];\n            }\n          }\n        }\n        `}this.userCode=`\n        ${this.enableShapeUniforms?"\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;\n  }\n":_M(e)}\n\n        void main() {\n          ivec3 coords = getOutputCoords();\n\n          vec4 result = vec4(0.);\n          int flatIndex, r, c, offset;\n          ivec3 localCoords;\n          vec2 uv;\n          vec4 values;\n\n          ${r}\n\n          ${n.output} = ${s};\n        }\n    `}}function sO(e){const t=$M();return OF(e,`${t.version}\n    precision highp float;\n    ${t.attribute} vec3 clipSpacePos;\n    ${t.attribute} vec2 uv;\n    ${t.varyingVs} vec2 resultUV;\n\n    void main() {\n      gl_Position = vec4(clipSpacePos, 1);\n      resultUV = uv;\n    }`)}function aO(e){return WF(e,new Float32Array([-1,1,0,0,1,-1,-1,0,0,0,1,1,0,1,1,1,-1,0,1,0]))}function iO(e){return GF(e,new Uint16Array([0,1,2,2,1,3]))}function oO(e,t,n,r,s,a){KF(t,n);const i=jF(e),o=e.TEXTURE_2D;return AF(e,()=>e.bindTexture(o,i)),AF(e,()=>e.texParameteri(o,e.TEXTURE_WRAP_S,e.CLAMP_TO_EDGE)),AF(e,()=>e.texParameteri(o,e.TEXTURE_WRAP_T,e.CLAMP_TO_EDGE)),AF(e,()=>e.texParameteri(o,e.TEXTURE_MIN_FILTER,e.NEAREST)),AF(e,()=>e.texParameteri(o,e.TEXTURE_MAG_FILTER,e.NEAREST)),1===Xe().getNumber("WEBGL_VERSION")?AF(e,()=>e.texImage2D(o,0,r,t,n,0,s,a,null)):AF(e,()=>e.texStorage2D(o,1,r,t,n)),AF(e,()=>e.bindTexture(e.TEXTURE_2D,null)),{texture:i,texShape:[n,t]}}function uO(e){return e.internalFormatFloat}function lO(e,t,n,r){const[s,a]=TF(t,n);return oO(e,s,a,uO(r),r.textureFormatFloat,e.FLOAT)}function cO(e){return e.internalFormatHalfFloat}function hO(e,t,n,r){const[s,a]=TF(t,n);return oO(e,s,a,cO(r),r.textureFormatFloat,r.textureTypeHalfFloat)}function dO(e){return e.downloadTextureFormat}function pO(e,t,n,r){const[s,a]=TF(t,n);return oO(e,s,a,dO(r),e.RGBA,e.UNSIGNED_BYTE)}function fO(e){return e.internalFormatPackedFloat}function mO(e,t,n,r){const[s,a]=CF(t,n);return oO(e,s,a,fO(r),e.RGBA,e.FLOAT)}function gO(e){return e.internalFormatPackedHalfFloat}function yO(e,t,n,r){const[s,a]=CF(t,n);return oO(e,s,a,gO(r),e.RGBA,r.textureTypeHalfFloat)}function bO(e,t,n){return AF(e,()=>e.bindBuffer(e.ARRAY_BUFFER,n)),XF(e,t,"clipSpacePos",n,3,20,0)&&XF(e,t,"uv",n,2,20,12)}function xO(e,t,n,r,s,a){let i,o,u;AF(e,()=>e.bindTexture(e.TEXTURE_2D,t)),s instanceof Uint8Array?(i=new Uint8Array(n*r*4),o=e.UNSIGNED_BYTE,u=e.RGBA):(i=new Float32Array(n*r*4),o=e.FLOAT,u=a.internalFormatPackedFloat),i.set(s),2===Xe().getNumber("WEBGL_VERSION")?AF(e,()=>e.texSubImage2D(e.TEXTURE_2D,0,0,0,n,r,e.RGBA,o,i)):AF(e,()=>e.texImage2D(e.TEXTURE_2D,0,u,n,r,0,e.RGBA,o,i)),AF(e,()=>e.bindTexture(e.TEXTURE_2D,null))}function wO(e,t,n){AF(e,()=>e.bindTexture(e.TEXTURE_2D,t)),n.data instanceof Uint8Array?2===Xe().getNumber("WEBGL_VERSION")?AF(e,()=>e.texSubImage2D(e.TEXTURE_2D,0,0,0,n.width,n.height,e.RGBA,e.UNSIGNED_BYTE,n.data)):AF(e,()=>e.texImage2D(e.TEXTURE_2D,0,e.RGBA,n.width,n.height,0,e.RGBA,e.UNSIGNED_BYTE,n.data)):2===Xe().getNumber("WEBGL_VERSION")?AF(e,()=>e.texSubImage2D(e.TEXTURE_2D,0,0,0,e.RGBA,e.UNSIGNED_BYTE,n)):AF(e,()=>e.texImage2D(e.TEXTURE_2D,0,e.RGBA,e.RGBA,e.UNSIGNED_BYTE,n)),AF(e,()=>e.bindTexture(e.TEXTURE_2D,null))}function vO(e,t,n,r){const s=e.createBuffer();AF(e,()=>e.bindBuffer(e.PIXEL_PACK_BUFFER,s));const a=16*t*n;return AF(e,()=>e.bufferData(e.PIXEL_PACK_BUFFER,a,e.STREAM_READ)),AF(e,()=>e.readPixels(0,0,n,t,e.RGBA,e.FLOAT,0)),AF(e,()=>e.bindBuffer(e.PIXEL_PACK_BUFFER,null)),s}function kO(e,t,n){const r=e,s=new Float32Array(n);return r.bindBuffer(r.PIXEL_PACK_BUFFER,t),r.getBufferSubData(r.PIXEL_PACK_BUFFER,0,s),r.bindBuffer(r.PIXEL_PACK_BUFFER,null),s}function NO(e,t,n,r){const[s,a]=TF(t,n),i=new Uint8Array(t*n*4);return AF(e,()=>e.readPixels(0,0,s,a,r.downloadTextureFormat,e.UNSIGNED_BYTE,i)),new Float32Array(i.buffer)}function IO(e,t,n,r,s,a,i,o){const u=e,l=new Float32Array(function(e,t){const[n,r]=CF(e,t);return n*r*4}(a,i));return u.bindBuffer(u.PIXEL_PACK_BUFFER,t),u.getBufferSubData(u.PIXEL_PACK_BUFFER,0,l),u.bindBuffer(u.PIXEL_PACK_BUFFER,null),l}function SO(e,t,n){const r=new Float32Array(t*n*4);return AF(e,()=>e.readPixels(0,0,n,t,e.RGBA,e.FLOAT,r)),r}class TO{constructor(e){this.outputTexture=null,this.program=null,this.disposed=!1,this.itemsToPoll=[];const t=Xe().getNumber("WEBGL_VERSION");if(null!=e?(this.gl=e,vF(t,e)):this.gl=kF(t),e=this.gl,2===Xe().getNumber("WEBGL_VERSION")){const t=e;this.createVertexArray=()=>AF(t,()=>t.createVertexArray()),this.bindVertexArray=e=>AF(t,()=>t.bindVertexArray(e)),this.deleteVertexArray=e=>AF(t,()=>t.deleteVertexArray(e)),this.getVertexArray=()=>AF(t,()=>t.getParameter(t.VERTEX_ARRAY_BINDING))}else if(null!=e){const t=e.getExtension("OES_vertex_array_object");if(null==t)throw new Error("All WebGL1 implementations are expected to offer OES_vertex_array_object.");this.createVertexArray=()=>AF(e,()=>t.createVertexArrayOES()),this.bindVertexArray=n=>AF(e,()=>t.bindVertexArrayOES(n)),this.deleteVertexArray=n=>AF(e,()=>t.deleteVertexArrayOES(n)),this.getVertexArray=()=>AF(e,()=>e.getParameter(t.VERTEX_ARRAY_BINDING_OES))}let n="WEBGL_color_buffer_float";const r="EXT_color_buffer_half_float";if(this.parallelCompilationExtension=this.gl.getExtension("KHR_parallel_shader_compile"),1===Xe().getNumber("WEBGL_VERSION")){const e="OES_texture_float",t="OES_texture_half_float";if(this.textureFloatExtension=MF(this.gl,e),vM(this.gl,t))this.textureHalfFloatExtension=MF(this.gl,t);else if(Xe().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support half float textures, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.");if(this.colorBufferFloatExtension=this.gl.getExtension(n),vM(this.gl,r))this.colorBufferHalfFloatExtension=MF(this.gl,r);else if(Xe().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support color renderable half floats, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.")}else if(n="EXT_color_buffer_float",vM(this.gl,n))this.colorBufferFloatExtension=this.gl.getExtension(n);else{if(!vM(this.gl,r))throw new Error("GL context does not support color renderable floats");this.colorBufferHalfFloatExtension=this.gl.getExtension(r)}this.vertexBuffer=aO(this.gl),this.indexBuffer=iO(this.gl),this.framebuffer=qF(this.gl),this.textureConfig=$F(this.gl,this.textureHalfFloatExtension)}get debug(){return Xe().getBool("DEBUG")}dispose(){if(this.disposed)return;null!=this.program&&console.warn("Disposing a GPGPUContext that still has a bound WebGLProgram. This is probably a resource leak, delete the program with GPGPUContext.deleteProgram before disposing."),null!=this.outputTexture&&console.warn("Disposing a GPGPUContext that still has a bound output matrix texture.  This is probably a resource leak, delete the output matrix texture with GPGPUContext.deleteMatrixTexture before disposing.");const e=this.gl;AF(e,()=>e.finish()),AF(e,()=>e.bindFramebuffer(e.FRAMEBUFFER,null)),AF(e,()=>e.deleteFramebuffer(this.framebuffer)),AF(e,()=>e.bindBuffer(e.ARRAY_BUFFER,null)),AF(e,()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,null)),AF(e,()=>e.deleteBuffer(this.indexBuffer)),this.disposed=!0}createFloat32MatrixTexture(e,t){return this.throwIfDisposed(),lO(this.gl,e,t,this.textureConfig)}createFloat16MatrixTexture(e,t){return this.throwIfDisposed(),hO(this.gl,e,t,this.textureConfig)}createUnsignedBytesMatrixTexture(e,t){return this.throwIfDisposed(),pO(this.gl,e,t,this.textureConfig)}uploadPixelDataToTexture(e,t){this.throwIfDisposed(),wO(this.gl,e,t)}uploadDenseMatrixToTexture(e,t,n,r){this.throwIfDisposed(),xO(this.gl,e,t,n,r,this.textureConfig)}createFloat16PackedMatrixTexture(e,t){return this.throwIfDisposed(),yO(this.gl,e,t,this.textureConfig)}createPackedMatrixTexture(e,t){return this.throwIfDisposed(),mO(this.gl,e,t,this.textureConfig)}deleteMatrixTexture(e){this.throwIfDisposed(),this.outputTexture===e&&(rM(this.gl,this.framebuffer),this.outputTexture=null),AF(this.gl,()=>this.gl.deleteTexture(e))}downloadByteEncodedFloatMatrixFromOutputTexture(e,t,n){return this.downloadMatrixDriver(e,()=>NO(this.gl,t,n,this.textureConfig))}downloadPackedMatrixFromBuffer(e,t,n,r,s,a){return IO(this.gl,e,0,0,0,s,a,this.textureConfig)}downloadFloat32MatrixFromBuffer(e,t){return kO(this.gl,e,t)}createBufferFromTexture(e,t,n){this.bindTextureToFrameBuffer(e);const r=vO(this.gl,t,n,this.textureConfig);return this.unbindTextureToFrameBuffer(),r}createAndWaitForFence(){const e=this.createFence(this.gl);return this.pollFence(e)}createFence(e){let t,n;if(Xe().getBool("WEBGL_FENCE_API_ENABLED")){const r=e,s=r.fenceSync(r.SYNC_GPU_COMMANDS_COMPLETE,0);e.flush(),n=()=>{const e=r.clientWaitSync(s,0,0);return e===r.ALREADY_SIGNALED||e===r.CONDITION_SATISFIED},t=s}else Xe().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0?(t=this.beginQuery(),this.endQuery(),n=()=>this.isQueryAvailable(t,Xe().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))):n=()=>!0;return{query:t,isFencePassed:n}}downloadMatrixFromPackedTexture(e,t,n){return this.downloadMatrixDriver(e,()=>SO(this.gl,t,n))}createProgram(e){this.throwIfDisposed();const t=this.gl;null==this.vertexShader&&(this.vertexShader=sO(t));const n=BF(t);AF(t,()=>t.attachShader(n,this.vertexShader)),AF(t,()=>t.attachShader(n,e)),VF(t,n);const r=Object.assign(n,{vao:this.createVertexArray()});return this.debug&&UF(t,r),r}buildVao(e){this.setProgram(e),this.bindVertexArray(e.vao);const t=this.gl;AF(t,()=>t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,this.indexBuffer)),bO(t,e,this.vertexBuffer)}deleteProgram(e){this.throwIfDisposed(),e===this.program&&(this.program=null),null!=e&&(AF(this.gl,()=>this.gl.deleteProgram(e)),this.deleteVertexArray(e.vao))}setProgram(e){this.throwIfDisposed(),this.program=e,null!=this.program&&this.debug&&UF(this.gl,this.program),AF(this.gl,()=>this.gl.useProgram(e))}getUniformLocation(e,t,n=!0){return this.throwIfDisposed(),n?QF(this.gl,e,t):JF(this.gl,e,t)}getAttributeLocation(e,t){return this.throwIfDisposed(),AF(this.gl,()=>this.gl.getAttribLocation(e,t))}getUniformLocationNoThrow(e,t){return this.throwIfDisposed(),this.gl.getUniformLocation(e,t)}setInputMatrixTexture(e,t,n){this.throwIfDisposed(),this.throwIfNoProgram(),eM(this.gl,e,t,n)}setOutputMatrixTexture(e,t,n){this.setOutputMatrixTextureDriver(e,n,t)}setOutputPackedMatrixTexture(e,t,n){this.throwIfDisposed();const[r,s]=CF(t,n);this.setOutputMatrixTextureDriver(e,r,s)}setOutputMatrixWriteRegion(e,t,n,r){this.setOutputMatrixWriteRegionDriver(n,e,r,t)}setOutputPackedMatrixWriteRegion(e,t,n,r){throw new Error("setOutputPackedMatrixWriteRegion not implemented.")}debugValidate(){null!=this.program&&UF(this.gl,this.program),sM(this.gl)}executeProgram(){this.throwIfDisposed(),this.throwIfNoProgram();const e=this.gl;if(this.debug){const e=this.getVertexArray();console.assert(e===this.program.vao,"VAO changed between setProgram and executeProgram!"),this.debugValidate()}AF(e,()=>e.drawElements(e.TRIANGLES,6,e.UNSIGNED_SHORT,0))}blockUntilAllProgramsCompleted(){this.throwIfDisposed(),AF(this.gl,()=>this.gl.finish())}getQueryTimerExtension(){return null==this.disjointQueryTimerExtension&&(this.disjointQueryTimerExtension=MF(this.gl,2===Xe().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")?"EXT_disjoint_timer_query_webgl2":"EXT_disjoint_timer_query")),this.disjointQueryTimerExtension}getQueryTimerExtensionWebGL2(){return this.getQueryTimerExtension()}getQueryTimerExtensionWebGL1(){return this.getQueryTimerExtension()}beginQuery(){if(2===Xe().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")){const e=this.gl,t=this.getQueryTimerExtensionWebGL2(),n=e.createQuery();return e.beginQuery(t.TIME_ELAPSED_EXT,n),n}const e=this.getQueryTimerExtensionWebGL1(),t=e.createQueryEXT();return e.beginQueryEXT(e.TIME_ELAPSED_EXT,t),t}endQuery(){if(2===Xe().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")){const e=this.gl,t=this.getQueryTimerExtensionWebGL2();return void e.endQuery(t.TIME_ELAPSED_EXT)}const e=this.getQueryTimerExtensionWebGL1();e.endQueryEXT(e.TIME_ELAPSED_EXT)}async waitForQueryAndGetTime(e){return await be(()=>this.disposed||this.isQueryAvailable(e,Xe().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))),this.getQueryTime(e,Xe().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))}getQueryTime(e,t){if(0===t)return null;if(2===t){const t=this.gl;return t.getQueryParameter(e,t.QUERY_RESULT)/1e6}{const t=this.getQueryTimerExtensionWebGL1();return t.getQueryObjectEXT(e,t.QUERY_RESULT_EXT)/1e6}}isQueryAvailable(e,t){if(0===t)return!0;if(2===t){const t=this.gl,n=this.getQueryTimerExtensionWebGL2(),r=t.getQueryParameter(e,t.QUERY_RESULT_AVAILABLE);return null==this.disjoint&&(this.disjoint=this.gl.getParameter(n.GPU_DISJOINT_EXT)),r&&!this.disjoint}{const t=this.getQueryTimerExtensionWebGL1(),n=t.getQueryObjectEXT(e,t.QUERY_RESULT_AVAILABLE_EXT);return null==this.disjoint&&(this.disjoint=this.gl.getParameter(t.GPU_DISJOINT_EXT)),n&&!this.disjoint}}pollFence(e){return new Promise(t=>{this.addItemToPoll(()=>e.isFencePassed(),()=>t())})}pollItems(){const e=function(e){let t=0;for(;t<e.length&&e[t]();++t);return t-1}(this.itemsToPoll.map(e=>e.isDoneFn));for(let t=0;t<=e;++t){const{resolveFn:e}=this.itemsToPoll[t];e()}this.itemsToPoll=this.itemsToPoll.slice(e+1)}addItemToPoll(e,t){if(this.itemsToPoll.push({isDoneFn:e,resolveFn:t}),this.itemsToPoll.length>1)return;let n;"setTimeoutCustom"in Xe().platform&&(n=Xe().platform.setTimeoutCustom.bind(Xe().platform)),be(()=>(this.pollItems(),0===this.itemsToPoll.length),()=>0,null,n)}bindTextureToFrameBuffer(e){this.throwIfDisposed(),nM(this.gl,e,this.framebuffer),this.debug&&sM(this.gl)}unbindTextureToFrameBuffer(){null!=this.outputTexture?(nM(this.gl,this.outputTexture,this.framebuffer),this.debug&&sM(this.gl)):rM(this.gl,this.framebuffer)}downloadMatrixDriver(e,t){this.bindTextureToFrameBuffer(e);const n=t();return this.unbindTextureToFrameBuffer(),n}setOutputMatrixTextureDriver(e,t,n){this.throwIfDisposed();const r=this.gl;nM(r,e,this.framebuffer),this.debug&&sM(r),this.outputTexture=e,AF(r,()=>r.viewport(0,0,t,n)),AF(r,()=>r.scissor(0,0,t,n))}setOutputMatrixWriteRegionDriver(e,t,n,r){this.throwIfDisposed(),AF(this.gl,()=>this.gl.scissor(e,t,n,r))}throwIfDisposed(){if(this.disposed)throw new Error("Attempted to use disposed GPGPUContext.")}throwIfNoProgram(){if(null==this.program)throw new Error("No GPU program is currently set.")}}const{addImpl:EO,bincountImpl:CO,bincountReduceImpl:$O,bitwiseAndImpl:AO,castImpl:RO,ceilImpl:_O,concatImpl:DO,equalImpl:FO,expImpl:MO,expm1Impl:OO,floorImpl:LO,gatherNdImpl:zO,gatherV2Impl:PO,greaterImpl:BO,greaterEqualImpl:VO,lessImpl:UO,lessEqualImpl:WO,linSpaceImpl:GO,logImpl:HO,maxImpl:jO,maximumImpl:KO,minimumImpl:qO,multiplyImpl:XO,negImpl:YO,notEqualImpl:ZO,prodImpl:QO,raggedGatherImpl:JO,raggedRangeImpl:eL,raggedTensorToTensorImpl:tL,rangeImpl:nL,rsqrtImpl:rL,scatterImpl:sL,sigmoidImpl:aL,simpleAbsImpl:iL,sliceImpl:oL,sparseFillEmptyRowsImpl:uL,sparseReshapeImpl:lL,sparseSegmentReductionImpl:cL,sqrtImpl:hL,staticRegexReplaceImpl:dL,stridedSliceImpl:pL,stringNGramsImpl:fL,stringSplitImpl:mL,stringToHashBucketFastImpl:gL,subImpl:yL,tileImpl:bL,topKImpl:xL,transposeImpl:wL,uniqueImpl:vL}=j;function kL(e,t){return["x","y","z","w","u","v"].slice(0,t).map(t=>`${e}.${t}`)}function NL(e,t){return 1===t?[e]:kL(e,t)}class IL{constructor(e){if(this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outputShape=e,this.rank=e.length,this.enableShapeUniforms=YM(this.outputShape.length),0===this.rank)this.userCode="\n        void main() {\n          setOutput(vec4(getA(), 0., 0., 0.));\n        }\n      ";else{const e=NL("rc",this.rank),t=GM(this.rank),n=this.getOutOfBoundsCondition(e),r=this.getSetup(e),s=this.getOutput(e);this.userCode=`\n        void main() {\n          ${t} rc = getOutputCoords();\n\n          if(${n}) {\n            setOutput(vec4(0));\n          } else {\n            ${r}\n\n            setOutput(vec4(${s}));\n          }\n        }\n      `}}getSourceCoordsArr(e){const t=[];for(let n=0;n<=1;n++)for(let r=0;r<=1;r++){let s=`${0===n?"r":"rp1"}, ${0===r?"c":"cp1"}`;for(let t=2;t<this.rank;t++)s=`${e[e.length-1-t]},`+s;t.push(s)}return t}getOutOfBoundsCondition(e){if(1===this.rank)return`rc > ${this.enableShapeUniforms?"outShape":this.outputShape[0]}`;let t="";for(let n=this.rank-2;n<this.rank;n++)t+=`${e[n]} >= ${this.enableShapeUniforms?`outShape[${n}]`:this.outputShape[n]}`,n<this.rank-1&&(t+="||");return t}getSetup(e){if(1===this.rank)return"";const t=e.slice(-2),n=this.enableShapeUniforms?`outShape[${this.rank} - 1]`:this.outputShape[this.rank-1],r=this.enableShapeUniforms?`outShape[${this.rank} - 2]`:this.outputShape[this.rank-2];return`\n      int r = ${t[0]};\n      int c = ${t[1]};\n      int rp1 = r + 1;\n      int cp1 = c + 1;\n\n      bool cEdge = cp1 >= ${n};\n      bool rEdge = rp1 >= ${r};\n    `}getOutput(e){const t=this.getSourceCoordsArr(e);return 1===this.rank?`getA(rc), (rc + 1 >= ${this.enableShapeUniforms?"outShape":this.outputShape[0]} ? 0. : getA(rc + 1)), 0, 0`:`getA(${t[0]}),\n            cEdge ? 0. : getA(${t[1]}),\n            rEdge ? 0. : getA(${t[2]}),\n            rEdge || cEdge ? 0. : getA(${t[3]})`}}class SL{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec3"}],this.outputShape=e,this.enableShapeUniforms=YM(this.outputShape.length);let n="";for(let e=0;e<4;e++){let t="thisRC = rc;";e%2==1&&(t+="thisRC.z += 1;"),e>1&&(t+="thisRC.y += 1;"),n+=`\n        ${t}\n        ${e>0?"if(thisRC.y < rows && thisRC.z < cols){":""}\n          int flatIndex = getFlatIndex(thisRC);\n\n          ivec3 inputRC = inputCoordsFromReshapedOutCoords(flatIndex);\n          vec2 inputRCInnerDims = vec2(float(inputRC.y),float(inputRC.z));\n\n          result[${e}] =\n            getChannel(getA(inputRC.x, inputRC.y, inputRC.z), inputRCInnerDims);\n        ${e>0?"}":""}\n      `}var r,s;this.userCode=`\n      ${r=t,s=this.enableShapeUniforms,`\n    ivec3 inputCoordsFromReshapedOutCoords(int index) {\n      ${s?function(e,t,n="index"){const r=function(e,t){const n=e.length,r=e.map(e=>`${t}[${e}]`),s=new Array(n-1);s[n-2]=r[n-1];for(let e=n-3;e>=0;--e)s[e]=`(${s[e+1]} * ${r[e+1]})`;return s}(e.map((e,t)=>t),t);return r.map((t,s)=>`int ${e[s]} = ${n} / ${r[s]}; ${s===r.length-1?`int ${e[s+1]} = ${n} - ${e[s]} * ${r[s]}`:`index -= ${e[s]} * ${r[s]}`};`).join("")}(["r","c","d"],"inputShape"):AM(["r","c","d"],r)}\n      return ivec3(r, c, d);\n    }\n  `}\n      ${this.enableShapeUniforms?"\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;\n  }\n":_M(e)}\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n\n        vec4 result = vec4(0.);\n\n        ivec3 thisRC;\n        int rows = ${this.enableShapeUniforms?"outShape[1]":e[1]};\n        int cols = ${this.enableShapeUniforms?"outShape[2]":e[2]};\n\n        ${n}\n\n        setOutput(result);\n      }\n    `}}class TL{constructor(e){this.gpgpu=e,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0,this.freeTextures={},this.usedTextures={},this.logEnabled=!1}acquireTexture(e,t,n){const r=CL(t,n),s=$L(e,r,n);s in this.freeTextures||(this.freeTextures[s]=[]),s in this.usedTextures||(this.usedTextures[s]=[]);const a=EL(e,r,this.gpgpu.gl,this.gpgpu.textureConfig,n);if(this.freeTextures[s].length>0){this.numFreeTextures--,this.numUsedTextures++,this._numBytesFree-=a,this.log();const e=this.freeTextures[s].pop();return this.usedTextures[s].push(e),e}let i;return r===SF.PACKED_2X2_FLOAT32?i=this.gpgpu.createPackedMatrixTexture(e[0],e[1]):r===SF.PACKED_2X2_FLOAT16?i=this.gpgpu.createFloat16PackedMatrixTexture(e[0],e[1]):r===SF.UNPACKED_FLOAT32?i=this.gpgpu.createFloat32MatrixTexture(e[0],e[1]):r===SF.UNPACKED_FLOAT16?i=this.gpgpu.createFloat16MatrixTexture(e[0],e[1]):r===SF.PACKED_4X1_UNSIGNED_BYTE&&(i=this.gpgpu.createUnsignedBytesMatrixTexture(e[0],e[1])),this.usedTextures[s].push(i),this.numUsedTextures++,this._numBytesAllocated+=a,this.log(),i}releaseTexture(e,t,n,r){if(null==this.freeTextures)return;const s=CL(n,r),a=$L(t,s,r);a in this.freeTextures||(this.freeTextures[a]=[]);const i=EL(t,s,this.gpgpu.gl,this.gpgpu.textureConfig,r),o=Xe().getNumber("WEBGL_DELETE_TEXTURE_THRESHOLD");-1!==o&&this._numBytesAllocated>o?(this.gpgpu.deleteMatrixTexture(e.texture),this._numBytesAllocated-=i):(this.freeTextures[a].push(e),this.numFreeTextures++,this._numBytesFree+=i),this.numUsedTextures--;const u=this.usedTextures[a],l=u&&u.indexOf(e);if(null==l||l<0)throw new Error("Cannot release a texture that was never provided by this texture manager");u[l]=u[u.length-1],u.pop(),this.log()}log(){if(!this.logEnabled)return;const e=this.numFreeTextures+this.numUsedTextures;console.log("Free/Used",`${this.numFreeTextures} / ${this.numUsedTextures}`,`(${e})`);const t=this._numBytesFree/this._numBytesAllocated;console.log(`Bytes allocated: ${this._numBytesAllocated}`),console.log(`Bytes unused: ${this._numBytesFree} (${Math.round(100*t)}%)`)}get numBytesAllocated(){return this._numBytesAllocated}get numBytesFree(){return this._numBytesFree}getNumUsedTextures(){return this.numUsedTextures}getNumFreeTextures(){return this.numFreeTextures}dispose(){if(null!=this.freeTextures){for(const e in this.freeTextures)this.freeTextures[e].forEach(e=>{this.gpgpu.deleteMatrixTexture(e.texture)});for(const e in this.usedTextures)this.usedTextures[e].forEach(e=>{this.gpgpu.deleteMatrixTexture(e.texture)});this.freeTextures=null,this.usedTextures=null,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0}}}function EL(e,t,n,r,s){const a=function(e,t){switch(e){case SF.PACKED_2X2_FLOAT32:return fO(t);case SF.PACKED_2X2_FLOAT16:return gO(t);case SF.UNPACKED_FLOAT32:return uO(t);case SF.UNPACKED_FLOAT16:return cO(t);case SF.PACKED_4X1_UNSIGNED_BYTE:return dO(t);default:throw new Error(`Unknown physical texture type ${e}`)}}(t,r);let i;if(s){const[t,n]=CF(e[0],e[1]);i=t*n}else{const[t,n]=TF(e[0],e[1]);i=t*n}const o=function(e,t){const n=e;if(t===n.R32F)return 4;if(t===n.R16F)return 2;if(t===n.RGBA32F)return 16;if(t===e.RGBA)return 16;if(t===n.RGBA16F)return 8;if(t===n.RGBA8)return 4;throw new Error(`Unknown internal format ${t}`)}(n,a);return i*o}function CL(e,t){if(e===IF.UPLOAD)return SF.PACKED_2X2_FLOAT32;if(e===IF.RENDER||null==e)return function(e){return Xe().getBool("WEBGL_RENDER_FLOAT32_ENABLED")?e?SF.PACKED_2X2_FLOAT32:SF.UNPACKED_FLOAT32:e?SF.PACKED_2X2_FLOAT16:SF.UNPACKED_FLOAT16}(t);if(e===IF.DOWNLOAD||e===IF.PIXELS)return SF.PACKED_4X1_UNSIGNED_BYTE;throw new Error(`Unknown logical texture type ${e}`)}function $L(e,t,n){return`${e[0]}_${e[1]}_${t}_${n}`}class AL{constructor(e,t){this.variableNames=["A"],this.outputShape=e,this.enableShapeUniforms=YM(this.outputShape.length),this.userCode=`\n      float unaryOperation(float x) {\n        ${t}\n      }\n\n      void main() {\n        float x = getAAtOutCoords();\n        float y = unaryOperation(x);\n\n        setOutput(y);\n      }\n    `}}const RL="if (isnan(x)) return x;",_L="return abs(x);",DL=RL+"\n  return (x < 0.0) ? 0.0 : x;\n",FL=RL+"\n  return (x < 0.0) ? 0.0 : min(6.0, x);\n",ML="return x;";class OL{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.enableShapeUniforms=YM(this.outputShape.length),this.userCode=`\n      vec4 unaryOperation(vec4 x) {\n        ${t}\n      }\n\n      void main() {\n        vec4 x = getAAtOutCoords();\n        vec4 y = unaryOperation(x);\n\n        setOutput(y);\n      }\n    `}}class LL{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outputShape=e,this.enableShapeUniforms=YM(this.outputShape.length);const t=e.length,n=NL("rc",t),r=GM(t),s=function(e,t){if(1===e)return"rc";let n="";for(let r=0;r<e;r++)n+=t[r],r<e-1&&(n+=",");return n}(t,n),a=n.slice(-2),i=t<=1?"rc":`vec2(${a.join(",")})`;this.userCode=`\n      void main() {\n        ${r} rc = getOutputCoords();\n        vec4 packedInput = getA(${s});\n\n        setOutput(getChannel(packedInput, ${i}));\n      }\n    `}}const zL=yp,PL={},BL=Xe().getNumber("CPU_HANDOFF_SIZE_THRESHOLD");class VL extends Y{nextDataId(){return VL.nextDataId++}constructor(e){if(super(),this.pendingRead=new WeakMap,this.pendingDisposal=new WeakSet,this.dataRefCount=new WeakMap,this.numBytesInGPU=0,this.uploadWaitMs=0,this.downloadWaitMs=0,this.lastGlFlushTime=0,this.warnedAboutMemory=!1,this.pendingDeletes=0,this.disposed=!1,!Xe().getBool("HAS_WEBGL"))throw new Error("WebGL is not supported on this device");let t;if(null!=e){if(e instanceof TO)t=e;else{const n=kF(Xe().getNumber("WEBGL_VERSION"),e);t=new TO(n)}this.binaryCache={},this.gpgpuCreatedLocally=!1}else{const e=kF(Xe().getNumber("WEBGL_VERSION"));t=new TO(e),this.binaryCache=((n=Xe().getNumber("WEBGL_VERSION"))in PL||(PL[n]={}),PL[n]),this.gpgpuCreatedLocally=!0}var n;this.gpgpu=t,this.canvas=this.gpgpu.gl.canvas,this.textureManager=new TL(this.gpgpu),this.numMBBeforeWarning=null==Xe().global.screen?1024:Xe().global.screen.height*Xe().global.screen.width*window.devicePixelRatio*600/1024/1024,this.texData=new X(this,ai())}numDataIds(){return this.texData.numDataIds()-this.pendingDeletes}writeTexture(e,t,n,r,s,a){const i=this.makeTensorInfo(t,n),o=this.texData.get(i.dataId);o.isPacked=!1,o.texture={texture:e,texShape:[r,s]},o.texShape=[r,s];const u=cM(t),l=new nO(u,!1,a),c=this.runWebGLProgram(l,[i],n,[[r,s]]);return c.shape=t,o.texture=null,this.disposeIntermediateTensorInfo(i),c.dataId}write(e,t,n){if((Xe().getBool("WEBGL_CHECK_NUMERICAL_PROBLEMS")||Xe().getBool("DEBUG"))&&this.checkNumericalProblems(e),"complex64"===n&&null!=e)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");const r={id:this.nextDataId()};return this.texData.set(r,{shape:t,dtype:n,values:e,usage:IF.UPLOAD,refCount:1}),r}refCount(e){return this.texData.has(e)?this.texData.get(e).refCount:0}incRef(e){this.texData.get(e).refCount++}decRef(e){this.texData.has(e)&&this.texData.get(e).refCount--}move(e,t,n,r,s){if(Xe().getBool("DEBUG")&&this.checkNumericalProblems(t),"complex64"===r)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");this.texData.set(e,{shape:n,dtype:r,values:t,usage:IF.UPLOAD,refCount:s})}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}readSync(e){const t=this.texData.get(e),{values:n,dtype:r,complexTensorInfos:s,slice:a,shape:i,isPacked:o}=t;if(null!=a){let t;t=o?new OL(i,ML):new AL(i,ML);const n=this.runWebGLProgram(t,[{dataId:e,shape:i,dtype:r}],r),s=this.readSync(n.dataId);return this.disposeIntermediateTensorInfo(n),s}if(null!=n)return this.convertAndCacheOnCPU(e);if("string"===r)return n;const u=null!=this.activeTimers;let l,c;return u&&(l=Xs()),c="complex64"===r?dm(this.readSync(s.real.dataId),this.readSync(s.imag.dataId)):this.getValuesFromTexture(e),u&&(this.downloadWaitMs+=Xs()-l),this.convertAndCacheOnCPU(e,c)}async read(e){if(this.pendingRead.has(e)){const t=this.pendingRead.get(e);return new Promise(e=>t.push(e))}const t=this.texData.get(e),{values:n,shape:r,slice:s,dtype:a,complexTensorInfos:i,isPacked:o}=t;if(null!=s){let t;t=o?new OL(r,ML):new AL(r,ML);const n=this.runWebGLProgram(t,[{dataId:e,shape:r,dtype:a}],a),s=this.read(n.dataId);return this.disposeIntermediateTensorInfo(n),s}if(null!=n)return this.convertAndCacheOnCPU(e);if(Xe().getBool("DEBUG")&&!Xe().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")&&2===Xe().getNumber("WEBGL_VERSION"))throw new Error("tensor.data() with WEBGL_DOWNLOAD_FLOAT_ENABLED=false and WEBGL_VERSION=2 not yet supported.");let u,l,c=null;if("complex64"!==a&&Xe().get("WEBGL_BUFFER_SUPPORTED")){u=this.decode(e);const t=this.texData.get(u.dataId);c=this.gpgpu.createBufferFromTexture(t.texture.texture,...EF(r))}if(this.pendingRead.set(e,[]),"complex64"!==a&&await this.gpgpu.createAndWaitForFence(),"complex64"===a){const e=await Promise.all([this.read(i.real.dataId),this.read(i.imag.dataId)]);l=dm(e[0],e[1])}else if(null==c)l=this.getValuesFromTexture(e);else{const e=le(r);l=this.gpgpu.downloadFloat32MatrixFromBuffer(c,e)}if(null!=u&&this.disposeIntermediateTensorInfo(u),null!=c){const e=this.gpgpu.gl;AF(e,()=>e.deleteBuffer(c))}const h=this.convertAndCacheOnCPU(e,l),d=this.pendingRead.get(e);return this.pendingRead.delete(e),d.forEach(e=>e(h)),this.pendingDisposal.has(e)&&(this.pendingDisposal.delete(e),this.disposeData(e)&&ai().removeDataId(e,this),this.pendingDeletes--),h}readToGPU(e,t={}){const n=this.texData.get(e),{values:r,shape:s,slice:a,dtype:i,isPacked:o,texture:u}=n;if("complex64"===i)throw new Error("Does not support reading texture for complex64 dtype.");if(null!=a){let n;n=o?new OL(s,ML):new AL(s,ML);const r=this.runWebGLProgram(n,[{dataId:e,shape:s,dtype:i}],i),a=this.readToGPU(r,t);return this.disposeIntermediateTensorInfo(r),a}if(null==u)throw null!=r?new Error("Data is not on GPU but on CPU."):new Error("There is no data on GPU or CPU.");const l=this.decode(e,t.customTexShape),c=ai().makeTensorFromTensorInfo(l),h=this.texData.get(l.dataId);return Object.assign({tensorRef:c},h.texture)}bufferSync(e){const t=this.readSync(e.dataId);if("string"===e.dtype)try{const n=t.map(e=>Qs(e));return ko(e.shape,e.dtype,n)}catch(e){throw new Error("Failed to decode encoded string bytes into utf-8")}return ko(e.shape,e.dtype,t)}checkNumericalProblems(e){if(null!=e)for(let t=0;t<e.length;t++){const n=e[t];if(!DF(n)){if(Xe().getBool("WEBGL_RENDER_FLOAT32_CAPABLE"))throw Error(`The value ${n} cannot be represented with your current settings. Consider enabling float32 rendering: 'tf.env().set('WEBGL_RENDER_FLOAT32_ENABLED', true);'`);throw Error(`The value ${n} cannot be represented on this device.`)}}}getValuesFromTexture(e){const{shape:t,dtype:n,isPacked:r}=this.texData.get(e),s=le(t);if(Xe().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")){const n=this.decode(e),r=this.texData.get(n.dataId),a=this.gpgpu.downloadMatrixFromPackedTexture(r.texture.texture,...EF(t)).subarray(0,s);return this.disposeIntermediateTensorInfo(n),a}const a=Xe().getBool("WEBGL_PACK")&&!0===r,i=a?cM(t):t,o=a?new eO(i):new JM(i),u=this.runWebGLProgram(o,[{shape:i,dtype:n,dataId:e}],"float32"),l=this.texData.get(u.dataId),c=this.gpgpu.downloadByteEncodedFloatMatrixFromOutputTexture(l.texture.texture,l.texShape[0],l.texShape[1]).subarray(0,s);return this.disposeIntermediateTensorInfo(u),c}timerAvailable(){return Xe().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0}time(e){const t=this.activeTimers,n=[];let r=!1;null==this.programTimersStack?(this.programTimersStack=n,r=!0):this.activeTimers.push(n),this.activeTimers=n,e();const s=ea(this.activeTimers.map(e=>e.query)).filter(e=>null!=e),a=ea(this.activeTimers.map(e=>e.name)).filter(e=>null!=e);this.activeTimers=t,r&&(this.programTimersStack=null);const i={uploadWaitMs:this.uploadWaitMs,downloadWaitMs:this.downloadWaitMs,kernelMs:null,wallMs:null};return(async()=>{if(Xe().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0){const e=await Promise.all(s);i.kernelMs=re(e),i.getExtraProfileInfo=()=>e.map((e,t)=>({name:a[t],ms:e})).map(e=>`${e.name}: ${e.ms}`).join(", ")}else i.kernelMs={error:"WebGL query timers are not supported in this environment."};return this.uploadWaitMs=0,this.downloadWaitMs=0,i})()}memory(){return{unreliable:!1,numBytesInGPU:this.numBytesInGPU,numBytesInGPUAllocated:this.textureManager.numBytesAllocated,numBytesInGPUFree:this.textureManager.numBytesFree}}startTimer(){return Xe().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?this.gpgpu.beginQuery():{startMs:Xs(),endMs:null}}endTimer(e){return Xe().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?(this.gpgpu.endQuery(),e):(e.endMs=Xs(),e)}async getQueryTime(e){if(Xe().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0)return this.gpgpu.waitForQueryAndGetTime(e);const t=e;return t.endMs-t.startMs}disposeData(e,t=!1){if(this.pendingDisposal.has(e))return!1;if(!this.texData.has(e))return!0;if(t?this.texData.get(e).refCount=0:this.texData.get(e).refCount--,!t&&this.texData.get(e).refCount>0)return!1;if(this.pendingRead.has(e))return this.pendingDisposal.add(e),this.pendingDeletes++,!1;this.releaseGPUData(e);const{complexTensorInfos:n}=this.texData.get(e);return null!=n&&(this.disposeData(n.real.dataId,t),this.disposeData(n.imag.dataId,t)),this.texData.delete(e),!0}releaseGPUData(e){const{texture:t,dtype:n,texShape:r,usage:s,isPacked:a,slice:i}=this.texData.get(e),o=i&&i.origDataId||e,u=this.dataRefCount.get(o);u>1?this.dataRefCount.set(o,u-1):(this.dataRefCount.delete(o),null!=t&&(this.numBytesInGPU-=this.computeBytes(r,n),this.textureManager.releaseTexture(t,r,s,a)));const l=this.texData.get(e);l.texture=null,l.texShape=null,l.isPacked=!1,l.slice=null}getTexture(e){return this.uploadToGPU(e),this.texData.get(e).texture.texture}getDataInfo(e){return this.texData.get(e)}shouldExecuteOnCPU(e,t=BL){return Xe().getBool("WEBGL_CPU_FORWARD")&&e.every(e=>null==this.texData.get(e.dataId).texture&&le(e.shape)<t)}getGPGPUContext(){return this.gpgpu}where(e){xs("tf.where() in webgl locks the UI thread. Call tf.whereAsync() instead");const t=e.dataSync();return zL(e.shape,t)}packedUnaryOp(e,t,n){const r=new OL(e.shape,t),s=this.compileAndRun(r,[e],n);return ai().makeTensorFromTensorInfo(s)}abs(e){if(this.shouldExecuteOnCPU([e])&&"complex64"!==e.dtype){const t=iL(this.texData.get(e.dataId).values);return this.makeOutput(e.shape,e.dtype,t)}if(Xe().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(e,_L,e.dtype);const t=new AL(e.shape,_L),n=this.compileAndRun(t,[e]);return ai().makeTensorFromTensorInfo(n)}makeTensorInfo(e,t,n){let r;if("string"===t&&null!=n&&n.length>0&&$e(n[0])){const s=n.map(e=>Zs(e));r=this.write(s,e,t)}else r=this.write(n,e,t);return this.texData.get(r).usage=null,{dataId:r,shape:e,dtype:t}}makeOutput(e,t,n){return ai().makeTensorFromTensorInfo(this.makeTensorInfo(e,t,n),this)}unpackTensor(e){const t=new LL(e.shape);return this.runWebGLProgram(t,[e],e.dtype)}packTensor(e){const t=new IL(e.shape);return this.runWebGLProgram(t,[e],e.dtype,null,!0)}packedReshape(e,t){const n=[uM(e.shape),...lM(e.shape)],r={dtype:e.dtype,shape:n,dataId:e.dataId},s=[uM(t),...lM(t)],a=new SL(s,n),i=[n],o=this.runWebGLProgram(a,[r],e.dtype,i,!0);return{dataId:o.dataId,shape:t,dtype:o.dtype}}decode(e,t){const n=this.texData.get(e),{isPacked:r,shape:s,dtype:a}=n;null!=t&&ie(le(s)<=t[0]*t[1]*4,()=>"customTexShape is too small. Row * Column * 4 should be equal or larger than the size of the tensor data.");const i=cM(s);let o;o=r?new QM(i):new ZM(i);const u=[null!=t?t:EF(i)];return{dtype:a,shape:s,dataId:this.runWebGLProgram(o,[{shape:i,dtype:a,dataId:e}],a,u,!0,t).dataId}}runWebGLProgram(e,t,n,r,s=!1,a){const i=this.makeTensorInfo(e.outputShape,n),o=this.texData.get(i.dataId);if(e.packedOutput&&(o.isPacked=!0),e.outPackingScheme===NF.DENSE){const t=null!=a?a:EF(e.outputShape);o.texShape=t.map(e=>2*e)}if(null!=e.outTexUsage&&(o.usage=e.outTexUsage),0===le(i.shape))return o.values=ke(i.dtype,0),i;const u=[],l=t.map(t=>{if("complex64"===t.dtype)throw new Error("GPGPUProgram does not support complex64 input. For complex64 dtypes, please separate the program into real and imaginary parts.");let n=this.texData.get(t.dataId);if(null==n.texture){if(!e.packedInputs&&le(t.shape)<=Xe().getNumber("WEBGL_SIZE_UPLOAD_UNIFORM"))return{shape:t.shape,texData:null,isUniform:!0,uniformValues:n.values};e.packedInputs&&(n.isPacked=!0,n.shape=t.shape)}if(this.uploadToGPU(t.dataId),!!n.isPacked!=!!e.packedInputs)t=n.isPacked?this.unpackTensor(t):this.packTensor(t),u.push(t),n=this.texData.get(t.dataId);else if(n.isPacked&&!pM(n.shape,t.shape)){const e=t,r=t.shape;t.shape=n.shape,t=this.packedReshape(t,r),u.push(t),n=this.texData.get(t.dataId),e.shape=r}return{shape:t.shape,texData:n,isUniform:!1}});this.uploadToGPU(i.dataId);const c={shape:i.shape,texData:o,isUniform:!1},h=function(e,t,n){let r="";t.concat(n).forEach(t=>{const s=null!=t.texData&&null!=t.texData.slice&&t.texData.slice.flatOffset>0;if(e.enableShapeUniforms&&!t.isUniform){const a=t.texData.texShape,{useSqueezeShape:i,uniformShape:o,keptDims:u}=HM(e.packedInputs,t.shape,a);let l="",c="",h="";if(1===o.length&&e.packedInputs){const e=[Math.ceil(a[0]/2),Math.ceil(a[1]/2)];l=`${e[0]>1}_${e[1]>1}`}else if(2!==o.length||e.packedInputs){if(o.length>2&&!e.packedInputs){const e=Me(o);h=`${e[0]===a[1]}_${e[e.length-1]===a[1]}`}}else c=`${o[0]>1}_${o[1]>1}`;const d=t.shape.length,p=2===o.length&&de(t.shape,a),f=1===le(t.shape),m=tu(t.shape,n.shape),g=!e.packedInputs&&d===n.shape.length&&de(a,n.texData.texShape),y=e.packedInputs||o.length>2?"":`${a[0]>1}_${a[1]>1}`;r+=`${d}_${g}_${i?u:""}_${o.length}_${f}_${m}_${p}_${l}_${c}_${h}_${y}_${s}`}else{const e=t.isUniform?"uniform":t.texData.texShape;r+=`${t.shape}_${e}_${s}`}});const s=e.userCode;let a=e.constructor.name;return a+="_"+r+"_"+s+`${Xe().getNumber("WEBGL_VERSION")}`,a}(e,l,c),d=this.getAndSaveBinary(h,()=>function(e,t,n,r){const s=n.map((e,n)=>{const r={logicalShape:e.shape,texShape:e.isUniform?null:e.texData.texShape,isUniform:e.isUniform,isPacked:!e.isUniform&&e.texData.isPacked,flatOffset:null};return null!=e.texData&&null!=e.texData.slice&&e.texData.slice.flatOffset>0&&(r.flatOffset=e.texData.slice.flatOffset),{name:t.variableNames[n],shapeInfo:r}}),a=s.map(e=>e.shapeInfo),i={logicalShape:r.shape,texShape:r.texData.texShape,isUniform:!1,isPacked:r.texData.isPacked,flatOffset:null},o=MM(s,i,t),u=LF(e.gl,o),l=e.createProgram(u);return Xe().get("ENGINE_COMPILE_ONLY")?{program:t,fragmentShader:u,source:o,webGLProgram:l,inShapeInfos:a,outShapeInfo:i,variablesLocations:null,customUniformLocations:null,infLoc:null,nanLoc:null,outShapeLocation:null,outShapeStridesLocation:null,outTexShapeLocation:null}:(e.buildVao(l),Object.assign({program:t,fragmentShader:u,source:o,webGLProgram:l,inShapeInfos:a,outShapeInfo:i},qM(e,t,l)))}(this.gpgpu,e,l,c)),p=null!=this.activeTimers;let f;p&&(f=this.startTimer()),Xe().get("ENGINE_COMPILE_ONLY")||function(e,t,n,r,s){t.program.enableShapeUniforms||(XM(t.inShapeInfos,n),XM([t.outShapeInfo],[r]));const a=r.texData.texture,i=r.texData.texShape;r.texData.isPacked?e.setOutputPackedMatrixTexture(a.texture,i[0],i[1]):e.setOutputMatrixTexture(a.texture,i[0],i[1]),e.setProgram(t.webGLProgram),e.bindVertexArray(t.webGLProgram.vao),1===Xe().getNumber("WEBGL_VERSION")&&null!==t.infLoc&&e.gl.uniform1f(t.infLoc,1/0),null!==t.nanLoc&&e.gl.uniform1f(t.nanLoc,NaN);for(let r=0;r<n.length;++r){const s=n[r],{uniform:a,offset:i,shape:o,texShape:u}=t.variablesLocations[r];if(o){const{uniformShape:n}=HM(t.program.packedInputs,s.shape,s.texData.texShape);switch(n.length){case 1:e.gl.uniform1iv(o,new Int32Array(n));break;case 2:e.gl.uniform2iv(o,new Int32Array(n));break;case 3:e.gl.uniform3iv(o,new Int32Array(n));break;case 4:e.gl.uniform4iv(o,new Int32Array(n))}}if(u&&e.gl.uniform2i(u,s.texData.texShape[0],s.texData.texShape[1]),null!=a)if(s.isUniform)if(le(s.shape)<2)e.gl.uniform1f(a,s.uniformValues[0]);else{let t=s.uniformValues;t instanceof Float32Array||(t=new Float32Array(t)),e.gl.uniform1fv(a,t)}else null!=s.texData.slice&&null!=i&&e.gl.uniform1i(i,s.texData.slice.flatOffset),e.setInputMatrixTexture(s.texData.texture.texture,a,r)}const o=t.outShapeLocation;if(o)switch(r.shape.length){case 1:e.gl.uniform1iv(o,new Int32Array(r.shape));break;case 2:e.gl.uniform2iv(o,new Int32Array(r.shape));break;case 3:e.gl.uniform3iv(o,new Int32Array(r.shape));break;case 4:e.gl.uniform4iv(o,new Int32Array(r.shape))}if(t.outShapeStridesLocation){const n=Me(r.shape);switch(r.shape.length){case 2:e.gl.uniform1iv(t.outShapeStridesLocation,new Int32Array(n));break;case 3:e.gl.uniform2iv(t.outShapeStridesLocation,new Int32Array(n));break;case 4:e.gl.uniform3iv(t.outShapeStridesLocation,new Int32Array(n))}}if(t.outTexShapeLocation&&e.gl.uniform2i(t.outTexShapeLocation,r.texData.texShape[0],r.texData.texShape[1]),t.program.customUniforms&&s)for(let n=0;n<t.program.customUniforms.length;++n){const r=t.program.customUniforms[n],a=t.customUniformLocations[n],i=s[n];if("float"===r.type)e.gl.uniform1fv(a,i);else if("vec2"===r.type)e.gl.uniform2fv(a,i);else if("vec3"===r.type)e.gl.uniform3fv(a,i);else if("vec4"===r.type)e.gl.uniform4fv(a,i);else if("int"===r.type)e.gl.uniform1iv(a,i);else if("ivec2"===r.type)e.gl.uniform2iv(a,i);else if("ivec3"===r.type)e.gl.uniform3iv(a,i);else{if("ivec4"!==r.type)throw Error(`uniform type ${r.type} is not supported yet.`);e.gl.uniform4iv(a,i)}}e.executeProgram()}(this.gpgpu,d,l,c,r),u.forEach(e=>this.disposeIntermediateTensorInfo(e)),p&&(f=this.endTimer(f),this.activeTimers.push({name:e.constructor.name,query:this.getQueryTime(f)}));const m=Xe().getNumber("WEBGL_FLUSH_THRESHOLD");if(m>0){const e=Xs();e-this.lastGlFlushTime>m&&(this.gpgpu.gl.flush(),this.lastGlFlushTime=e)}if(!Xe().getBool("WEBGL_LAZILY_UNPACK")&&o.isPacked&&!1===s){const e=this.unpackTensor(i);return this.disposeIntermediateTensorInfo(i),e}return i}compileAndRun(e,t,n,r,s=!1){return n=n||t[0].dtype,this.runWebGLProgram(e,t,n,r,s)}getAndSaveBinary(e,t){return e in this.binaryCache||(this.binaryCache[e]=t()),this.binaryCache[e]}getTextureManager(){return this.textureManager}dispose(){this.disposed||(Xe().getBool("IS_TEST")||Object.keys(this.binaryCache).forEach(e=>{this.gpgpu.deleteProgram(this.binaryCache[e].webGLProgram),delete this.binaryCache[e]}),this.textureManager.dispose(),null!=this.canvas&&"undefined"!=typeof HTMLCanvasElement&&this.canvas instanceof HTMLCanvasElement?this.canvas.remove():this.canvas=null,this.gpgpuCreatedLocally&&(this.gpgpu.program=null,this.gpgpu.dispose()),this.disposed=!0)}floatPrecision(){return null==this.floatPrecisionValue&&(this.floatPrecisionValue=ui(()=>{if(!Xe().get("WEBGL_RENDER_FLOAT32_ENABLED")){const e=Xe().getBool("DEBUG");Xe().set("DEBUG",!1);const t=this.abs(Bo(1e-8)).dataSync()[0];if(Xe().set("DEBUG",e),t>0)return 32}return 16})),this.floatPrecisionValue}epsilon(){return 32===this.floatPrecision()?1e-7:1e-4}uploadToGPU(e){const t=this.texData.get(e),{shape:n,dtype:r,values:s,texture:a,usage:i,isPacked:o}=t;if(null!=a)return;const u=null!=this.activeTimers;let l;u&&(l=Xs());let c=t.texShape;if(null==c&&(c=hM(n,o),t.texShape=c),null!=s){const e=cM(n);let a,i=c[1],h=c[0];const d=s instanceof Uint8Array||s instanceof Uint8ClampedArray;!o&&d||([i,h]=CF(c[0],c[1])),a=o?new rO(e,d):new nO(e,d);const p=d?[h,i]:c,f=this.makeTensorInfo(p,r),m=this.texData.get(f.dataId);m.usage=d?IF.PIXELS:IF.UPLOAD,m.texShape=p,this.gpgpu.uploadDenseMatrixToTexture(this.getTexture(f.dataId),i,h,s);const g=[[h,i]],y=!0,b=this.runWebGLProgram(a,[f],r,g,y),x=this.texData.get(b.dataId);t.texShape=x.texShape,t.isPacked=x.isPacked,t.usage=x.usage,Xe().get("ENGINE_COMPILE_ONLY")?this.disposeData(b.dataId):(t.texture=x.texture,t.values=null,this.texData.delete(b.dataId)),this.disposeIntermediateTensorInfo(f),u&&(this.uploadWaitMs+=Xs()-l)}else{const e=this.acquireTexture(c,i,r,o);t.texture=e}}convertAndCacheOnCPU(e,t){const n=this.texData.get(e),{dtype:r}=n;return null!=t&&(n.values=function(e,t){if("float32"===t||"complex64"===t)return e;if("int32"===t||"bool"===t){const n="int32"===t?new Int32Array(e.length):new Uint8Array(e.length);for(let t=0;t<n.length;++t)n[t]=Math.round(e[t]);return n}throw new Error(`Unknown dtype ${t}`)}(t,r)),n.values}acquireTexture(e,t,n,r){if(this.numBytesInGPU+=this.computeBytes(e,n),!this.warnedAboutMemory&&this.numBytesInGPU>1024*this.numMBBeforeWarning*1024){const e=(this.numBytesInGPU/1024/1024).toFixed(2);this.warnedAboutMemory=!0,console.warn(`High memory usage in GPU: ${e} MB, most likely due to a memory leak`)}return this.textureManager.acquireTexture(e,t,r)}computeBytes(e,t){return e[0]*e[1]*Ee(t)}checkCompileCompletion(){for(const[,e]of Object.entries(this.binaryCache))this.checkCompletion_(e)}async checkCompileCompletionAsync(){const e=[];if(this.gpgpu.parallelCompilationExtension){for(const[,t]of Object.entries(this.binaryCache))e.push(this.checkCompletionAsync_(t));return Promise.all(e)}for(const[,t]of Object.entries(this.binaryCache)){const n=new Promise(e=>{try{this.checkCompletion_(t),e(!0)}catch(e){throw e}});e.push(n)}return Promise.all(e)}async checkCompletionAsync_(e){return this.gpgpu.gl.getProgramParameter(e.webGLProgram,this.gpgpu.parallelCompilationExtension.COMPLETION_STATUS_KHR)?this.checkCompletion_(e):(await Uf(),this.checkCompletionAsync_(e))}checkCompletion_(e){if(!1===this.gpgpu.gl.getProgramParameter(e.webGLProgram,this.gpgpu.gl.LINK_STATUS)){if(console.log(this.gpgpu.gl.getProgramInfoLog(e.webGLProgram)),!1===this.gpgpu.gl.getShaderParameter(e.fragmentShader,this.gpgpu.gl.COMPILE_STATUS))throw PF(e.source,this.gpgpu.gl.getShaderInfoLog(e.fragmentShader)),new Error("Failed to compile fragment shader.");throw new Error("Failed to link vertex and fragment shaders.")}return!0}getUniformLocations(){for(const e of Object.values(this.binaryCache)){this.gpgpu.buildVao(e.webGLProgram);const{variablesLocations:t,customUniformLocations:n,infLoc:r,nanLoc:s,outShapeLocation:a,outShapeStridesLocation:i,outTexShapeLocation:o}=qM(this.gpgpu,e.program,e.webGLProgram);e.variablesLocations=t,e.customUniformLocations=n,e.infLoc=r,e.nanLoc=s,e.outShapeLocation=a,e.outShapeStridesLocation=i,e.outTexShapeLocation=o}}createTensorFromGPUData(e,t,n){e.channels=e.channels||"RGBA";const{texture:r,height:s,width:a,channels:i}=e,o=ai().backend;if(!o.gpgpu.gl.isTexture(r))throw new Error("The texture is invalid. Also, please make sure the texture and the TFJS WebGL backend are using the same canvas. If you want to use your own custom canvas, you have to create and use the custom TFJS WebGL backend created from the canvas through 'new tf.MathBackendWebGL(customCanvas)'.");const u=o.writeTexture(r,t,n,s,a,i);return ai().makeTensorFromDataId(u,t,n,o)}}VL.nextDataId=0;const UL="4.22.0";function WL(){Xe().set("WEBGL_FORCE_F16_TEXTURES",!0)}Ba()&&bi("webgl",()=>new VL,2);const GL={forceHalfFloat:WL},HL="\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n";class jL{constructor(e,t,n){this.variableNames=["A","B"],this.outputShape=ru(t,n),this.enableShapeUniforms=YM(this.outputShape.length),this.userCode=`\n      float binaryOperation(float a, float b) {\n        ${e}\n      }\n\n      void main() {\n        float a = getAAtOutCoords();\n        float b = getBAtOutCoords();\n        setOutput(binaryOperation(a, b));\n      }\n    `}}const KL="\n  result.r = isNaN.r ? NAN : result.r;\n  result.g = isNaN.g ? NAN : result.g;\n  result.b = isNaN.b ? NAN : result.b;\n  result.a = isNaN.a ? NAN : result.a;\n";class qL{constructor(e,t,n,r=!1){this.variableNames=["A","B"],this.supportsBroadcasting=!0,this.packedInputs=!0,this.packedOutput=!0,this.outputShape=ru(t,n);const s=this.outputShape.length;this.enableShapeUniforms=YM(s);let a="";if(r)if(0===s||1===le(this.outputShape))a="\n          result.y = 0.;\n          result.z = 0.;\n          result.w = 0.;\n        ";else if(a=`\n          ${GM(s)} coords = getOutputCoords();\n        `,1===s)this.enableShapeUniforms?a+="\n            result.y = (coords + 1) >= outShape ? 0. : result.y;\n            result.z = 0.;\n            result.w = 0.;\n          ":a+=`\n            result.y = (coords + 1) >= ${this.outputShape[0]} ? 0. : result.y;\n            result.z = 0.;\n            result.w = 0.;\n          `;else{const e=NL("coords",s);this.enableShapeUniforms?a+=`\n            bool nextRowOutOfBounds =\n              (${e[s-2]} + 1) >= outShape[${s} - 2];\n            bool nextColOutOfBounds =\n              (${e[s-1]} + 1) >= outShape[${s} - 1];\n            result.y = nextColOutOfBounds ? 0. : result.y;\n            result.z = nextRowOutOfBounds ? 0. : result.z;\n            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;\n          `:a+=`\n            bool nextRowOutOfBounds =\n              (${e[s-2]} + 1) >= ${this.outputShape[s-2]};\n            bool nextColOutOfBounds =\n              (${e[s-1]} + 1) >= ${this.outputShape[s-1]};\n            result.y = nextColOutOfBounds ? 0. : result.y;\n            result.z = nextRowOutOfBounds ? 0. : result.z;\n            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;\n          `}this.userCode=`\n      vec4 binaryOperation(vec4 a, vec4 b) {\n        ${e}\n      }\n\n      void main() {\n        vec4 a = getAAtOutCoords();\n        vec4 b = getBAtOutCoords();\n\n        vec4 result = binaryOperation(a, b);\n        ${a}\n\n        setOutput(result);\n      }\n    `}}function XL(e){const{inputs:t,backend:n}=e,{x:r}=t;return n.incRef(r.dataId),{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}const YL={kernelName:yn,backendName:"webgl",kernelFunc:XL};function ZL(e){const{inputs:t,backend:n}=e,{real:r,imag:s}=t,a=n.makeTensorInfo(r.shape,"complex64"),i=n.texData.get(a.dataId),o=XL({inputs:{x:r},backend:n}),u=XL({inputs:{x:s},backend:n});return i.complexTensorInfos={real:o,imag:u},a}const QL={kernelName:Et,backendName:"webgl",kernelFunc:ZL},JL="return (a < 0.) ? b * a : a;",ez="\n  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));\n  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);\n",tz={kernelName:Nn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{alpha:a}=r,i=n.makeTensorInfo([],"float32",Ks(a,"float32")),o=Xe().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new qL(ez,s.shape,i.shape):new jL(JL,s.shape,i.shape),u=n.runWebGLProgram(o,[s,i],"float32");return n.disposeIntermediateTensorInfo(i),u}},nz="return (a < 0.) ? b * a : a;",rz="\n  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));\n  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);\n",sz={kernelName:lr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r,alpha:s}=t,a=Xe().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new qL(rz,r.shape,s.shape):new jL(nz,r.shape,s.shape);return n.runWebGLProgram(a,[r,s],"float32")}},az="if (isnan(x)) return x;";function iz({opSnippet:e,packedOpSnippet:t,cpuKernelImpl:n,dtype:r}){return({inputs:s,backend:a})=>{const{x:i}=s,o=a,u=r||i.dtype;if(o.shouldExecuteOnCPU([i])&&null!=n){const e=o.texData.get(i.dataId),t=n(e.values,u);return o.makeTensorInfo(i.shape,u,t)}let l;return l=Xe().getBool("WEBGL_PACK_UNARY_OPERATIONS")&&null!=t?new OL(i.shape,t):new AL(i.shape,e),o.runWebGLProgram(l,[i],u)}}function oz({opSnippet:e,packedOpSnippet:t,checkOutOfBounds:n=!1,supportsComplex:r=!1,cpuKernelImpl:s,dtype:a}){return({inputs:i,backend:o})=>{const{a:u,b:l}=i,c=o;if(r&&"complex64"===u.dtype){const t=c.texData.get(u.dataId),n=c.texData.get(l.dataId),[r,s]=[[t.complexTensorInfos.real,n.complexTensorInfos.real],[t.complexTensorInfos.imag,n.complexTensorInfos.imag]].map(t=>{const[n,r]=t,s={dataId:n.dataId,dtype:n.dtype,shape:u.shape},a={dataId:r.dataId,dtype:r.dtype,shape:l.shape},i=new jL(e,u.shape,l.shape);return c.runWebGLProgram(i,[s,a],ka(n.dtype,r.dtype))}),a=ZL({inputs:{real:r,imag:s},backend:c});return c.disposeIntermediateTensorInfo(r),c.disposeIntermediateTensorInfo(s),a}const h=a||ka(u.dtype,l.dtype);if(("string"===u.dtype||"string"===l.dtype||c.shouldExecuteOnCPU([u,l]))&&null!=s){const e=c.texData.get(u.dataId).values,t=c.texData.get(l.dataId).values,n="string"===u.dtype?jm(e):e,r="string"===u.dtype?jm(t):t,[a,i]=s(u.shape,l.shape,n,r,h),o=c.makeTensorInfo(i,h);return c.texData.get(o.dataId).values=a,o}let d;return d=Xe().getBool("WEBGL_PACK_BINARY_OPERATIONS")&&null!=t?new qL(t,u.shape,l.shape,n):new jL(e,u.shape,l.shape),c.runWebGLProgram(d,[u,l],h)}}function uz(e,t=!1){if("linear"===e)return"return x;";if("relu"===e)return t?"\n  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n":DL;if("elu"===e)return t?"\n  vec4 result;\n\n  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);\n  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);\n  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);\n  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);\n\n  return result;\n":"return (x >= 0.0) ? x : (exp(x) - 1.0);";if("relu6"===e)return t?"\n  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n":FL;if("prelu"===e)return t?rz:nz;if("leakyrelu"===e)return t?ez:JL;if("sigmoid"===e)return"return 1.0 / (1.0 + exp(-1.0 * x));";throw new Error(`Activation ${e} has not been implemented for the WebGL backend.`)}class lz{constructor(e,t,n,r=!1,s=!1,a=!1,i=null,o=!1,u=!1){this.variableNames=["matrixA","matrixB"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=n,this.enableShapeUniforms=YM(this.outputShape.length);const l=r?e[1]:e[2],c=Math.ceil(l/2),h=r?"i * 2, rc.y":"rc.y, i * 2",d=s?"rc.z, i * 2":"i * 2, rc.z",p=r?["a.xxyy","a.zzww"]:["a.xxzz","a.yyww"],f=s?["b.xzxz","b.ywyw"]:["b.xyxy","b.zwzw"];let m="",g="";i&&(m=o?`vec4 activation(vec4 a) {\n          vec4 b = getPreluActivationWeightsAtOutCoords();\n          ${i}\n        }`:u?`vec4 activation(vec4 a) {\n          vec4 b = getLeakyreluAlphaAtOutCoords();\n          ${i}\n        }`:`vec4 activation(vec4 x) {\n          ${i}\n        }`,g="result = activation(result);");const y=a?"result += getBiasAtOutCoords();":"";a&&this.variableNames.push("bias"),o&&this.variableNames.push("preluActivationWeights"),u&&this.variableNames.push("leakyreluAlpha");let b="rc.x",x="rc.x";e[0]<t[0]?b=`imod(rc.x, ${e[0]})`:t[0]<e[0]&&(x=`imod(rc.x, ${t[0]})`),this.userCode=`\n      ${m}\n      // Don't use uniform for sharedDimensionPacked for performance.\n      const float sharedDimension = ${c}.0;\n\n      vec4 dot2x2ARowBCol(ivec3 rc) {\n        vec4 result = vec4(0);\n        int batchA = ${b};\n        int batchB = ${x};\n        for (int i = 0; i < ${c}; i++) {\n          vec4 a = getMatrixA(batchA, ${h});\n          vec4 b = getMatrixB(batchB, ${d});\n\n          // These swizzled products need to be separately added.\n          // See: https://github.com/tensorflow/tfjs/issues/1735\n          result += (${p[0]} * ${f[0]});\n          result += (${p[1]} * ${f[1]});\n        }\n        return result;\n      }\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n        vec4 result = dot2x2ARowBCol(rc);\n\n        ${y}\n\n        ${g}\n\n        setOutput(result);\n      }\n    `}}class cz{constructor(e,t,n){this.variableNames=["AReal","AImag","BReal","BImag"],this.outputShape=ru(t,n),this.userCode=`\n      float binaryOpComplex(\n          float areal, float aimag, float breal, float bimag) {\n        ${e}\n      }\n\n      void main() {\n        float areal = getARealAtOutCoords();\n        float aimag = getAImagAtOutCoords();\n        float breal = getBRealAtOutCoords();\n        float bimag = getBImagAtOutCoords();\n        setOutput(binaryOpComplex(areal, aimag, breal, bimag));\n      }\n    `}}const hz="return a * b;";function dz(e){const{inputs:t,backend:n}=e,{a:r,b:s}=t,a=ka(r.dtype,s.dtype);if("complex64"===r.dtype){const e=n.texData.get(r.dataId),t=n.texData.get(s.dataId),a=new cz("return areal * breal - aimag * bimag;",r.shape,s.shape),i=new cz("return areal * bimag + aimag * breal;",r.shape,s.shape),o=[{dataId:e.complexTensorInfos.real.dataId,dtype:e.complexTensorInfos.real.dtype,shape:r.shape},{dataId:e.complexTensorInfos.imag.dataId,dtype:e.complexTensorInfos.imag.dtype,shape:r.shape},{dataId:t.complexTensorInfos.real.dataId,dtype:t.complexTensorInfos.real.dtype,shape:s.shape},{dataId:t.complexTensorInfos.imag.dataId,dtype:t.complexTensorInfos.imag.dtype,shape:s.shape}],u=n.runWebGLProgram(a,o,"float32"),l=n.runWebGLProgram(i,o,"float32"),c=ZL({inputs:{real:u,imag:l},backend:n});return n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(l),c}if(n.shouldExecuteOnCPU([r,s])){const e=n.texData.get(r.dataId),t=n.texData.get(s.dataId),[i,o]=XO(r.shape,s.shape,e.values,t.values,a),u=n.makeTensorInfo(o,a);return n.texData.get(u.dataId).values=i,u}let i;return i=Xe().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new qL(hz,r.shape,s.shape):new jL(hz,r.shape,s.shape),n.runWebGLProgram(i,[r,s],a)}const pz={kernelName:Zn,backendName:"webgl",kernelFunc:dz};function fz(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{shape:a}=r,i=n,o=le(s.shape),u=xe(a,o),l=le(u);ie(o===l,()=>`The new shape (${u}) has ${l} elements and the old shape (${s.shape}) has ${o} elements. The new shape and old shape must have the same number of elements.`);const c=i.texData.get(s.dataId);return!c.isPacked||pM(s.shape,u)||null!==c.texture&&pM(c.shape,u)?(i.incRef(s.dataId),{dataId:s.dataId,shape:u,dtype:s.dtype}):function(e,t,n){const r=[uM(e.shape),...lM(e.shape)],s={dtype:e.dtype,shape:r,dataId:e.dataId},a=[uM(t),...lM(t)],i=new SL(a,r),o=[r],u=n.runWebGLProgram(i,[s],e.dtype,o,!0);return{dataId:u.dataId,shape:t,dtype:u.dtype}}(s,u,i)}const mz={kernelName:br,backendName:"webgl",kernelFunc:fz};class gz{constructor(e,t){this.variableNames=["x"];const{windowSize:n,batchSize:r,inSize:s,outSize:a}=e;this.outputShape=[r,a];const i=4*Math.floor(n/4),o=n%4;let u="sumValue += dot(values, ones);";if(null!=t){const e=1/t;u=`sumValue += dot(values * ${pe(e)?e.toPrecision(2):e}, ones);`}let l="";s%n>0&&(l=`\n        if (inIdx < 0 || inIdx >= ${s}) {\n          return 0.0;\n        }\n      `),this.userCode=`\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float getValue(int batch, int inIdx) {\n        ${l}\n        return getX(batch, inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${n};\n\n        float sumValue = 0.0;\n\n        for (int i = 0; i < ${i}; i += 4) {\n          int inIdx = inOffset + i;\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          ${u}\n        }\n\n        int inIdx = inOffset + ${i};\n        if (${1===o}) {\n          vec4 values = vec4(getValue(batch, inIdx), 0.0, 0.0, 0.0);\n\n          ${u}\n        } else if (${2===o}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1), 0.0, 0.0);\n\n          ${u}\n        } else if (${3===o}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2), 0.0);\n\n          ${u}\n        }\n        setOutput(sumValue);\n      }\n    `}}class yz{constructor(e,t){this.variableNames=["x"];const{windowSize:n,batchSize:r,inSize:s,outSize:a}=e;this.outputShape=[r,a];let i="0.0",o="";"prod"===t?i="1.0":"min"===t?(i="1.0 / 1e-20",o="min"):"max"===t&&(i="-1.0 / 1e-20",o="max");let u=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"sum"===t?u="sumValue":"prod"===t?u="prodValue":"all"===t?u="allValue":"any"===t&&(u="anyValue");const l=4*Math.floor(n/4),c=n%4;let h=`\n      if (${"sum"===t}) {\n        sumValue += dot(values, ones);\n      } else if (${"prod"===t}) {\n        vec2 tmp = vec2(values[0], values[1]) * vec2(values[2], values[3]);\n        prodValue *= tmp[0] * tmp[1];\n      } else {\n        minMaxValue = ${o}(values, minMaxValue);\n        if (${"min"===t} || ${"max"===t}) {\n          minMaxValue = ${o}(values, minMaxValue);\n          bvec4 isNaN = isnan(values);\n          if (isNaN.r || isNaN.g || isNaN.b || isNaN.a) {\n            minMaxValue = vec4(NAN);\n          }\n        }\n      }\n    `,d="vec4";"all"===t?(i="1.0",h="\n        bool reducedAllValue = all(values);\n        float floatedReducedAllValue = float(reducedAllValue);\n        allValue = float(allValue >= 1.0 && floatedReducedAllValue >= 1.0);\n      ",d="bvec4"):"any"===t&&(i="0.0",h="\n        bool reducedAnyValue = any(values);\n        float floatedReducedAnyValue = float(reducedAnyValue);\n        anyValue = float(anyValue >= 1.0 || floatedReducedAnyValue >= 1.0);\n      ",d="bvec4");let p="";s%n>0&&(p=`\n        if (inIdx < 0 || inIdx >= ${s}) {\n          return initializationValue;\n        }\n      `),this.userCode=`\n      const float initializationValue = ${i};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float getValue(int batch, int inIdx) {\n        ${p}\n        return getX(batch, inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${n};\n\n        vec4 minMaxValue = vec4(${i});\n        float prodValue = 1.0;\n        float sumValue = 0.0;\n        float allValue = 1.0;\n        float anyValue = 0.0;\n\n        for (int i = 0; i < ${l}; i += 4) {\n          int inIdx = inOffset + i;\n          ${d} values = ${d}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          ${h}\n        }\n\n        int inIdx = inOffset + ${l};\n        if (${1===c}) {\n          ${d} values = ${d}(\n            getValue(batch, inIdx),\n            initializationValue,\n            initializationValue,\n            initializationValue\n          );\n\n          ${h}\n        } else if (${2===c}) {\n          ${d} values = ${d}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            initializationValue,\n            initializationValue\n          );\n\n          ${h}\n        } else if (${3===c}) {\n          ${d} values = ${d}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            initializationValue\n          );\n\n          ${h}\n        }\n        setOutput(${u});\n      }\n    `}}function bz(e,t,n,r){const s=function(e){const t=[];for(;0===t.length||1!==t[t.length-1].outSize;){const n=t.length?t[t.length-1].outSize:e[1],r=Zf(n);t.push({inSize:n,windowSize:r,outSize:Math.ceil(n/r)})}return t}(e.shape);let a=e;for(let i=0;i<s.length;i++){const{inSize:o,windowSize:u,outSize:l}=s[i];let c,h;c="mean"===n?0===i?new gz({windowSize:u,inSize:o,batchSize:e.shape[0],outSize:l},o):new gz({windowSize:u,inSize:o,batchSize:e.shape[0],outSize:l}):new yz({windowSize:u,inSize:o,batchSize:e.shape[0],outSize:l},n),h=a,a=r.runWebGLProgram(c,[a],t),h.dataId!==e.dataId&&r.disposeIntermediateTensorInfo(h)}return a}class xz{constructor(e,t){this.variableNames=["A"];const n=new Array(e.length);for(let r=0;r<n.length;r++)n[r]=e[t[r]];this.outputShape=n,this.rank=n.length;const r=GM(this.rank),s=function(e){const t=e.length;if(t>6)throw Error(`Transpose for rank ${t} is not yet supported`);const n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u","resRC.v"],r=new Array(t);for(let t=0;t<e.length;t++)r[e[t]]=n[t];return r.join()}(t);this.userCode=`\n    void main() {\n      ${r} resRC = getOutputCoords();\n      setOutput(getA(${s}));\n    }\n    `}}class wz{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0;const n=new Array(e.length);for(let r=0;r<n.length;r++)n[r]=e[t[r]];if(this.outputShape=n,this.rank=n.length,this.rank>6)throw Error(`Packed transpose for rank ${this.rank} is not yet supported.`);const r=GM(this.rank),s=kL("rc",this.rank),a=new Array(this.rank);for(let e=0;e<t.length;e++)a[t[e]]=s[e];const i=`vec2(${a.slice(-2).join()})`,o=`++${s[this.rank-1]} < ${n[this.rank-1]}`,u=`getChannel(getA(${a.join()}), ${i})`;this.userCode=`\n    void main() {\n      ${r} rc = getOutputCoords();\n      vec4 result = vec4(0.);\n      result[0] = ${u};\n      if(${o}) {\n        result[1] = ${u};\n      }\n      --${s[this.rank-1]};\n      if(++${s[this.rank-2]} < ${n[this.rank-2]}) {\n        result[2] = ${u};\n        if(${o}) {\n          result[3] = ${u};\n        }\n      }\n      setOutput(result);\n    }\n    `}}function vz(e,t,n){const r=Xe().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new wz(e.shape,t):new xz(e.shape,t);return n.runWebGLProgram(r,[e],e.dtype)}function kz(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a,keepDims:i}=r;return function(e,t,n,r){const s=t,a=e.shape.length,i=we(s,e.shape);let o=i;const u=nh(o,a),l=null!=u;let c=e;l&&(c=vz(e,u,r),o=sh(o.length,a)),th("sum",o,a);const[h,d]=Jc(c.shape,o);let p=h;n&&(p=eh(h,i));const f=le(d),m=fz({inputs:{x:c},attrs:{shape:[le(e.shape)/f,f]},backend:r}),g=bz(m,Na(e.dtype),"sum",r),y=fz({inputs:{x:g},attrs:{shape:p},backend:r});return r.disposeIntermediateTensorInfo(m),r.disposeIntermediateTensorInfo(g),l&&r.disposeIntermediateTensorInfo(c),y}(s,a,i,n)}const Nz={kernelName:Pr,backendName:"webgl",kernelFunc:kz};function Iz(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{perm:a}=r,i=n,o=s.shape.length,u=new Array(o);for(let e=0;e<u.length;e++)u[e]=s.shape[a[e]];let l;if(i.shouldExecuteOnCPU([s])){const e=i.texData.get(s.dataId).values,t=wL(e,s.shape,s.dtype,a,u);l=i.makeTensorInfo(u,s.dtype),i.texData.get(l.dataId).values=t}else l=vz(s,a,i);return l}const Sz={kernelName:os,backendName:"webgl",kernelFunc:Iz};function Tz({a:e,b:t,transposeA:n,transposeB:r,backend:s,bias:a=null,preluActivationWeights:i=null,leakyreluAlpha:o=0,activation:u=null}){const l=e.shape.length,c=t.shape.length,h=n?e.shape[l-2]:e.shape[l-1],d=r?t.shape[c-1]:t.shape[c-2],p=n?e.shape[l-1]:e.shape[l-2],f=r?t.shape[c-2]:t.shape[c-1],m=e.shape.slice(0,-2),g=t.shape.slice(0,-2),y=le(m),b=le(g),x=ru(e.shape.slice(0,-2),t.shape.slice(0,-2)).concat([p,f]);ie(h===d,()=>`Error in matMul: inner shapes (${h}) and (${d}) of Tensors with shapes ${e.shape} and ${t.shape} and transposeA=${n} and transposeB=${r} must match.`);const w=n?[y,h,p]:[y,p,h],v=r?[b,f,d]:[b,d,f],k=fz({inputs:{x:e},backend:s,attrs:{shape:w}}),N=fz({inputs:{x:t},backend:s,attrs:{shape:v}}),I=[k,N],S=Math.max(y,b),T=n?k.shape[1]:k.shape[2],E=null!=a,C=null!=i,$="leakyrelu"===u,A=null!=u?uz(u,!0):null;let R;if((1===p||1===f)&&T>1e3&&!1===(E||C||$||null!=A)){let e=k,t=N;n&&(e=Iz({inputs:{x:k},backend:s,attrs:{perm:[0,2,1]}}),I.push(e)),r&&(t=Iz({inputs:{x:N},backend:s,attrs:{perm:[0,2,1]}}),I.push(t));const a=1===f;let i=e;1!==f&&(i=fz({inputs:{x:e},backend:s,attrs:{shape:[S,T,1]}}),I.push(i));const o=1===f?2:1;let u=t;a&&(u=fz({inputs:{x:t},backend:s,attrs:{shape:[S,1,T]}}),I.push(u));const l=dz({inputs:{a:i,b:u},backend:s});R=kz({inputs:{x:l},backend:s,attrs:{axis:o,keepDims:!0}}),I.push(l)}else{const u=ka(e.dtype,t.dtype),l=new lz(w,v,[S,p,f],n,r,E,A,C,$),c=[k,N];if(null!=a&&c.push(a),C&&c.push(i),$){const e=s.makeTensorInfo([],"float32",Ks(o,"float32"));c.push(e),I.push(e)}R=s.runWebGLProgram(l,c,u)}const _=fz({inputs:{x:R},backend:s,attrs:{shape:x}});I.push(R);for(const e of I)s.disposeIntermediateTensorInfo(e);return _}const Ez={kernelName:gs,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{a:s,b:a,bias:i,preluActivationWeights:o}=t,{transposeA:u,transposeB:l,activation:c,leakyreluAlpha:h}=r;return Tz({a:s,b:a,transposeA:u,transposeB:l,backend:n,bias:i,preluActivationWeights:o,leakyreluAlpha:h,activation:c})}},Cz="return abs(x);",$z={kernelName:et,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r}=t;if(n.shouldExecuteOnCPU([r])&&"complex64"!==r.dtype){const e=n.texData.get(r.dataId),t=iL(e.values);return n.makeTensorInfo(r.shape,r.dtype,t)}let s;return s=Xe().getBool("WEBGL_PACK_UNARY_OPERATIONS")?new OL(r.shape,Cz):new AL(r.shape,Cz),n.runWebGLProgram(s,[r],r.dtype)}},Az=iz({opSnippet:RL+"\n  if (abs(x) > 1.) {\n    return NAN;\n  }\n  return acos(x);\n"}),Rz={kernelName:tt,backendName:"webgl",kernelFunc:Az},_z=iz({opSnippet:RL+"\n  if (x < 1.0) return NAN;\nreturn log(x + sqrt(x * x - 1.0));"}),Dz={kernelName:nt,backendName:"webgl",kernelFunc:_z},Fz="return a + b;",Mz=oz({opSnippet:Fz,packedOpSnippet:Fz,supportsComplex:!0,cpuKernelImpl:EO}),Oz={kernelName:rt,backendName:"webgl",kernelFunc:Mz};class Lz{constructor(e,t){this.outputShape=[],this.outputShape=e,this.variableNames=t.map((e,t)=>`T${t}`);const n=[];this.variableNames.forEach(e=>{n.push(`float v${e} = get${e}AtOutCoords();`)});const r=this.variableNames.map(e=>`v${e}`).join(" + ");this.userCode=`\n      void main() {\n        ${n.join("\n        ")}\n\n        float result = ${r};\n        setOutput(result);\n      }\n    `}}class zz{constructor(e,t){this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.variableNames=t.map((e,t)=>`T${t}`);const n=[];this.variableNames.forEach(e=>{n.push(`vec4 v${e} = get${e}AtOutCoords();`)});const r=this.variableNames.map(e=>`v${e}`).join(" + ");this.userCode=`\n      void main() {\n        ${n.join("\n        ")}\n\n        vec4 result = ${r};\n        setOutput(result);\n      }\n    `}}const Pz={kernelName:st,backendName:"webgl",kernelFunc:function e(t){const{inputs:n,backend:r}=t,s=n;if(1===s.length)return XL({inputs:{x:s[0]},backend:r});if(s.length>Xe().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER")){const t=Math.floor(s.length/2),n=e({inputs:s.slice(0,t),backend:r}),a=e({inputs:s.slice(t),backend:r});return e({inputs:[n,a],backend:r})}const a=s.map(e=>e.dtype).reduce((e,t)=>ka(e,t)),i=s.map(e=>e.shape),o=Xe().getBool("WEBGL_PACK")?new zz(s[0].shape,i):new Lz(s[0].shape,i);return r.runWebGLProgram(o,s,a)}},Bz={kernelName:at,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a,keepDims:i}=r,o=s.shape.length,u=we(a,s.shape);let l=u;const c=nh(l,o);let h=s;null!=c&&(h=Iz({inputs:{x:s},backend:n,attrs:{perm:c}}),l=sh(l.length,o)),th("all",l,o);const[d,p]=Jc(h.shape,l),f=fz({inputs:{x:h},backend:n,attrs:{shape:[-1,le(p)]}}),m=bz(f,f.dtype,"all",n);let g;return g=fz(i?{inputs:{x:m},backend:n,attrs:{shape:eh(d,u)}}:{inputs:{x:m},backend:n,attrs:{shape:d}}),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),null!=c&&n.disposeIntermediateTensorInfo(h),g}},Vz={kernelName:it,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a,keepDims:i}=r,o=s.shape.length,u=we(a,s.shape);let l=u;const c=nh(l,o);let h=s;null!=c&&(h=Iz({inputs:{x:s},backend:n,attrs:{perm:c}}),l=sh(l.length,o)),th("any",l,o);const[d,p]=Jc(h.shape,l),f=fz({inputs:{x:h},backend:n,attrs:{shape:[-1,le(p)]}}),m=bz(f,f.dtype,"any",n);let g;return g=fz(i?{inputs:{x:m},backend:n,attrs:{shape:eh(d,u)}}:{inputs:{x:m},backend:n,attrs:{shape:d}}),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),null!=c&&n.disposeIntermediateTensorInfo(h),g}};class Uz{constructor(e,t,n){this.variableNames=["A"];const{windowSize:r,batchSize:s,outSize:a}=e;n||this.variableNames.push("bestIndicesA"),this.outputShape=[s,a];const i="max"===t?">":"<",o=n?"inOffset + i;":"round(getBestIndicesA(batch, inOffset + i));";this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${r};\n\n        int bestIndex = inOffset;\n        float bestValue = getA(batch, bestIndex);\n\n        for (int i = 0; i < ${r}; i++) {\n          int inIdx = ${o};\n          float candidate = getA(batch, inIdx);\n          if (candidate ${i} bestValue) {\n            bestValue = candidate;\n            bestIndex = inIdx;\n          }\n        }\n        setOutput(float(bestIndex));\n      }\n    `}}class Wz{constructor(e,t,n,r){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,ie(e.length>2,()=>`Packed arg${n.charAt(0).toUpperCase()+n.slice(1)} supports only inputs with rank above 2.`);const s=e[e.length-1],a=Math.ceil(s/t);this.outputShape=e.slice(0,-1),a>1&&this.outputShape.push(a),r||this.variableNames.push("bestIndicesA");const i=this.outputShape,o=i.length,u=GM(o),l=NL("coords",o);let c,h;if(1===a){h=o+1;const e=GM(h);c=`\n        ${e} sourceLocR = ${e}(${l.join()}, 0);\n        ++${l[o-1]};\n        ${e} sourceLocG = ${e}(${l.join()}, 0);\n        ++${l[o-2]};\n        ${e} sourceLocA = ${e}(${l.join()}, 0);\n        --${l[o-1]};\n        ${e} sourceLocB = ${e}(${l.join()}, 0);\n        --${l[o-2]};`}else h=o,c=`\n        ${u} sourceLocR = coords;\n        ++${l[o-1]};\n        ${u} sourceLocG = coords;\n        ++${l[o-2]};\n        ${u} sourceLocA = coords;\n        --${l[o-1]};\n        ${u} sourceLocB = coords;\n        --${l[o-2]};`;const d=["x","y","z","w","u","v"].slice(0,h),p="."+d[h-1],f=d.map(e=>"int "+e),m=NL("sourceLocR",h-1).concat("inIdx.r"),g=NL("sourceLocG",h-1).concat("inIdx.g"),y=NL("sourceLocB",h-1).concat("inIdx.b"),b=NL("sourceLocA",h-1).concat("inIdx.a"),x="max"===n?"greaterThan":"lessThan",w=r?"":`\n          inIdx = round(vec4(getBestIndicesAChannel(${m.join()}),\n                             getBestIndicesAChannel(${g.join()}),\n                             getBestIndicesAChannel(${y.join()}),\n                             getBestIndicesAChannel(${b.join()})));`,v=`vec4(\n            getAChannel(${m.join()}),\n            hasNextCol ? getAChannel(${g.join()}) : 0.,\n            hasNextRow ? getAChannel(${y.join()}) : 0.,\n            hasNextRow && hasNextCol ? getAChannel(${b.join()}) : 0.)`,k=r?"":`\n      float getBestIndicesAChannel(${f.join()}) {\n        return getChannel(getBestIndicesA(${d.join()}),\n                                          vec2(${d.slice(-2).join()}));\n      }`;this.userCode=`\n      float getAChannel(${f.join()}) {\n        return getChannel(getA(${d.join()}),\n                               vec2(${d.slice(-2).join()}));\n      }\n      ${k}\n      void main() {\n        ${u} coords = getOutputCoords();\n        bool hasNextCol = ${l[o-1]} < ${i[o-1]-1};\n        bool hasNextRow = ${l[o-2]} < ${i[o-2]-1};\n        ${c}\n        ivec4 srcIdx = ivec4(sourceLocR${p}, sourceLocG${p},\n          sourceLocB${p}, sourceLocA${p}) * ${t};\n        ivec4 inIdx = srcIdx;\n        vec4 bestIndex = vec4(inIdx);\n        vec4 bestValue = ${v};\n\n        for (int i = 0; i < ${t}; i++) {\n          inIdx = srcIdx;\n          ${w}\n          vec4 candidate = ${v};\n          bvec4 nan = isnan(candidate);\n          bvec4 replace = bvec4(\n            vec4(${x}(candidate, bestValue)) * (vec4(1.0) - vec4(nan)));\n\n          bestValue = vec4(replace.x  ? candidate.x : bestValue.x,\n                           replace.y  ? candidate.y : bestValue.y,\n                           replace.z  ? candidate.z : bestValue.z,\n                           replace.w  ? candidate.w : bestValue.w);\n          bestIndex = mix(bestIndex, vec4(inIdx), vec4(replace));\n          srcIdx++;\n        }\n        setOutput(bestIndex);\n      }\n    `}}function Gz(e,t,n,r=null){let s=t.shape[0],a=t.shape[1];null!=r&&(s=r.shape[0],a=r.shape[1]);const i=Zf(a),o={windowSize:i,inSize:a,batchSize:s,outSize:Math.ceil(a/i)},u=new Uz(o,n,null==r),l=[t];null!=r&&l.push(r);const c=e.runWebGLProgram(u,l,"int32");if(1===c.shape[1])return c;const h=Gz(e,t,n,c);return e.disposeIntermediateTensorInfo(c),h}function Hz(e,t,n,r=null){const s=null!=r?r.shape:t.shape,a=Zf(s[s.length-1]),i=new Wz(s,a,n,null==r),o=null==r?[t]:[t,r],u=e.runWebGLProgram(i,o,"int32");if(u.shape.length===t.shape.length){const r=Hz(e,t,n,u);return e.disposeIntermediateTensorInfo(u),r}return u}function jz(e,t,n,r){const s=[n];if(th("arg"+r.charAt(0).toUpperCase()+r.slice(1),s,t.shape.length),!Xe().getBool("WEBGL_PACK_REDUCE")||t.shape.length<=2){const n=[],a=e.texData.get(t.dataId);let i=t;null!==a&&a.isPacked&&(i=e.unpackTensor(t),n.push(i));const[o,u]=Jc(i.shape,s),l=le(u),c=fz({inputs:{x:i},backend:e,attrs:{shape:[-1,l]}});n.push(c);const h=Gz(e,c,r);n.push(h);const d=fz({inputs:{x:h},backend:e,attrs:{shape:o}});return n.forEach(t=>e.disposeIntermediateTensorInfo(t)),d}return Hz(e,t,r)}const Kz={kernelName:ot,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a}=r;let i=we(a,s.shape);const o=nh(i,s.shape.length);let u=s;const l=[];null!=o&&(u=Iz({inputs:{x:s},backend:n,attrs:{perm:o}}),l.push(u),i=sh(i.length,u.shape.length)),th("argMax",[i[0]],u.shape.length);const c=jz(n,u,i[0],"max");return l.forEach(e=>n.disposeIntermediateTensorInfo(e)),c}},qz={kernelName:ut,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a}=r;let i=we(a,s.shape);const o=nh(i,s.shape.length);let u=s;const l=[];null!=o&&(u=Iz({inputs:{x:s},backend:n,attrs:{perm:o}}),l.push(u),i=sh(i.length,u.shape.length)),th("argMin",[i[0]],u.shape.length);const c=jz(n,u,i[0],"min");return l.forEach(e=>n.disposeIntermediateTensorInfo(e)),c}},Xz=iz({opSnippet:RL+"\n  if (abs(x) > 1.) {\n    return NAN;\n  }\n  return asin(x);\n"}),Yz={kernelName:lt,backendName:"webgl",kernelFunc:Xz},Zz=iz({opSnippet:RL+"return log(x + sqrt(x * x + 1.0));"}),Qz={kernelName:ct,backendName:"webgl",kernelFunc:Zz},Jz=iz({opSnippet:RL+"\n  return atan(x);\n"}),eP={kernelName:ht,backendName:"webgl",kernelFunc:Jz},tP=oz({opSnippet:HL+"\n  return atan(a, b);\n",packedOpSnippet:"\n  vec4 result = atan(a, b);\n  bvec4 isNaNA = isnan(a);\n  bvec4 isNaNB = isnan(b);\n  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);\n  "+KL+"\n  return result;\n"}),nP={kernelName:pt,backendName:"webgl",kernelFunc:tP},rP=iz({opSnippet:RL+"\n  if ((x < -1.0) || (x > 1.0)) return NAN;\nreturn (log(1.0 + x) - log(1.0 - x)) / 2.0;"}),sP={kernelName:dt,backendName:"webgl",kernelFunc:rP};class aP{constructor(e,t,n,r=!1,s=!1){if(this.variableNames=["x"],"avg"===t&&n)throw new Error("Cannot compute positions for average pool.");const a=e.filterWidth,i=e.strideHeight,o=e.strideWidth,u=e.dilationHeight,l=e.dilationWidth,c=e.effectiveFilterHeight,h=e.effectiveFilterWidth,d=e.padInfo.top,p=e.padInfo.left;this.outputShape=e.outShape;const f="avg"===t,m=`((batch  * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + d`,g=`(xR * ${e.inWidth} + xC) * ${e.inChannels} + d`;let y="0.0";if(f||(y="-1.0 / 1e-20"),n){const t=">=";return void(this.userCode=`\n        const ivec2 strides = ivec2(${i}, ${o});\n        const ivec2 pads = ivec2(${d}, ${p});\n\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int batch = coords[0];\n          int d = coords[3];\n\n          ivec2 xRCCorner = coords.yz * strides - pads;\n          int xRCorner = xRCCorner.x;\n          int xCCorner = xRCCorner.y;\n\n          // max/min x(?, ?, d) to get y(yR, yC, d).\n          // ? = to be determined\n          float minMaxValue = 0.0;\n          float minMaxValueFound = 0.0;\n          int minMaxPosition = 0;\n          float avgValue = 0.0;\n\n          for (int wR = 0; wR < ${c};\n              wR += ${u}) {\n            int xR = xRCorner + wR;\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${h};\n                wC += ${l}) {\n              int xC = xCCorner + wC;\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              float value = getX(batch, xR, xC, d);\n\n              // If a min / max value has already been found, use it. If not,\n              // use the current value.\n              float currMinMaxValue = mix(\n                  value, minMaxValue, minMaxValueFound);\n              if (value ${t} currMinMaxValue) {\n                minMaxValue = value;\n                minMaxValueFound = 1.0;\n                minMaxPosition = ${r?s?m:g:`wR * ${h} + wC`};\n              }\n            }\n          }\n          setOutput(float(minMaxPosition));\n        }\n      `)}let b=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"avg"===t&&(b="avgValue / max(count, 1.0)");const x=4*Math.floor(a/4),w=a%4,v=`\n      if (${f}) {\n        avgValue += dot(values, ones);\n      } else {\n        minMaxValue = max(values, minMaxValue);\n      }\n    `;this.userCode=`\n      const ivec2 strides = ivec2(${i}, ${o});\n      const ivec2 pads = ivec2(${d}, ${p});\n      const float initializationValue = ${y};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float count = 0.0;\n\n      float getValue(int batch, int xR, int xC, int d) {\n        if (xC < 0 || xC >= ${e.inWidth}) {\n          return initializationValue;\n        }\n        count += 1.0;\n        return getX(batch, xR, xC, d);\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d = coords[3];\n\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // max/min x(?, ?, d) to get y(yR, yC, d).\n        // ? = to be determined\n        vec4 minMaxValue = vec4(${y});\n        float avgValue = 0.0;\n        count = 0.0;\n\n        for (int wR = 0; wR < ${c};\n            wR += ${u}) {\n          int xR = xRCorner + wR;\n\n          if (xR < 0 || xR >= ${e.inHeight}) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${x}; wC += 4) {\n            int xC = xCCorner + wC * ${l};\n\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${l}, d),\n              getValue(batch, xR, xC + 2 * ${l}, d),\n              getValue(batch, xR, xC + 3 * ${l}, d)\n            );\n\n            ${v}\n          }\n\n          int xC = xCCorner + ${x};\n          if (${1===w}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              initializationValue,\n              initializationValue,\n              initializationValue\n            );\n\n            ${v}\n          } else if (${2===w}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${l}, d),\n              initializationValue,\n              initializationValue\n            );\n\n            ${v}\n          } else if (${3===w}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${l}, d),\n              getValue(batch, xR, xC + 2 * ${l}, d),\n              initializationValue\n            );\n\n            ${v}\n          }\n        }\n        setOutput(${b});\n      }\n    `}}class iP{constructor(e,t,n,r=!1,s=!1){if(this.variableNames=["x"],"avg"===t&&n)throw new Error("Cannot compute positions for average pool.");const a=e.filterWidth,i=e.strideDepth,o=e.strideHeight,u=e.strideWidth,l=e.dilationDepth,c=e.dilationHeight,h=e.dilationWidth,d=e.effectiveFilterDepth,p=e.effectiveFilterHeight,f=e.effectiveFilterWidth,m=e.padInfo.front,g=e.padInfo.top,y=e.padInfo.left;this.outputShape=e.outShape;const b="avg"===t;let x="0.0";if(b||(x="-1.0 / 1e-20"),n){const t=">=";return void(this.userCode=`\n        const ivec3 strides =\n            ivec3(${i}, ${o}, ${u});\n        const ivec3 pads = ivec3(${m}, ${g}, ${y});\n\n        void main() {\n          ivec5 coords = getOutputCoords();\n          int batch = coords.x;\n          int ch = coords.u;\n\n          ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n          int xDCorner = xCorner.x;\n          int xRCorner = xCorner.y;\n          int xCCorner = xCorner.z;\n\n          // max/min x(?, ?, ?, ch) to get y(yD, yR, yC, ch).\n          // ? = to be determined\n          float minMaxValue = 0.0;\n          float minMaxValueFound = 0.0;\n          int minMaxPosition = 0;\n\n          for (int wD = 0; wD < ${d};\n              wD += ${l}) {\n            int xD = xDCorner + wD;\n\n            if (xD < 0 || xD >= ${e.inDepth}) {\n              continue;\n            }\n\n            for (int wR = 0; wR < ${p};\n                wR += ${c}) {\n              int xR = xRCorner + wR;\n\n              if (xR < 0 || xR >= ${e.inHeight}) {\n                continue;\n              }\n\n              for (int wC = 0; wC < ${f};\n                  wC += ${h}) {\n                int xC = xCCorner + wC;\n\n                if (xC < 0 || xC >= ${e.inWidth}) {\n                  continue;\n                }\n\n                float value = getX(batch, xD, xR, xC, ch);\n\n                // If a min / max value has already been found, use it. If not,\n                // use the current value.\n                float currMinMaxValue = mix(\n                    value, minMaxValue, minMaxValueFound);\n                if (value ${t} currMinMaxValue) {\n                  minMaxValue = value;\n                  minMaxValueFound = 1.0;\n                  minMaxPosition = ${r?s?`(((batch * ${e.inDepth} + xD) * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`((xD * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`wD * ${p} * ${f} +\n                      wR * ${f} + wC`};\n                }\n              }\n            }\n          }\n          setOutput(float(minMaxPosition));\n        }\n      `)}let w=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"avg"===t&&(w="avgValue / max(count, 1.0)");const v=4*Math.floor(a/4),k=a%4,N=`\n      if (${b}) {\n        avgValue += dot(values, ones);\n      } else {\n        minMaxValue = max(values, minMaxValue);\n      }\n    `;this.userCode=`\n      const ivec3 strides =\n        ivec3(${i}, ${o}, ${u});\n      const ivec3 pads = ivec3(${m}, ${g}, ${y});\n      const float initializationValue = ${x};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float count = 0.0;\n\n      float getValue(int batch, int xD, int xR, int xC, int ch) {\n        if (xC < 0 || xC >= ${e.inWidth}) {\n          return initializationValue;\n        }\n        count += 1.0;\n        return getX(batch, xD, xR, xC, ch);\n      }\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n        int xDCorner = xCorner.x;\n        int xRCorner = xCorner.y;\n        int xCCorner = xCorner.z;\n\n        // max/min x(?, ?, ?, d) to get y(yD, yR, yC, ch).\n        // ? = to be determined\n        vec4 minMaxValue = vec4(${x});\n        float avgValue = 0.0;\n        count = 0.0;\n\n        for (int wD = 0; wD < ${d};\n            wD += ${l}) {\n          int xD = xDCorner + wD;\n\n          if (xD < 0 || xD >= ${e.inDepth}) {\n            continue;\n          }\n\n          for (int wR = 0; wR < ${p};\n            wR += ${c}) {\n            int xR = xRCorner + wR;\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${v}; wC += 4) {\n              int xC = xCCorner + wC * ${h};\n\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${h}, ch),\n                getValue(batch, xD, xR, xC + 2 * ${h}, ch),\n                getValue(batch, xD, xR, xC + 3 * ${h}, ch)\n              );\n\n              ${N}\n            }\n\n            int xC = xCCorner + ${v};\n            if (${1===k}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                initializationValue,\n                initializationValue,\n                initializationValue\n              );\n\n              ${N}\n            } else if (${2===k}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${h}, ch),\n                initializationValue,\n                initializationValue\n              );\n\n              ${N}\n            } else if (${3===k}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${h}, ch),\n                getValue(batch, xD, xR, xC + 2 * ${h}, ch),\n                initializationValue\n              );\n\n              ${N}\n            }\n          }\n        }\n        setOutput(${w});\n      }\n    `}}const oP={kernelName:ft,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t;EM(s,"avgPool");const{filterSize:a,strides:i,pad:o,dimRoundingMode:u}=r;ie(ec(i,1),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${i} and dilations '1'`);const l=Gl(s.shape,a,i,1,o,u);if(1===l.filterWidth&&1===l.filterHeight&&de(l.inShape,l.outShape))return XL({inputs:{x:s},backend:n});const c=new aP(l,"avg",!1);return n.runWebGLProgram(c,[s],"float32")}},uP={kernelName:gt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{filterSize:a,strides:i,pad:o,dimRoundingMode:u,dataFormat:l}=r,c=Hl(s.shape,a,i,[1,1,1],o,u,l),h=new iP(c,"avg",!1);return n.runWebGLProgram(h,[s],"float32")}};class lP{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;const t=e.filterHeight,n=e.filterWidth,r=e.strideHeight,s=e.strideWidth,a=e.dilationHeight,i=e.dilationWidth,o=e.effectiveFilterHeight,u=e.effectiveFilterWidth,l=o-1-e.padInfo.top,c=u-1-e.padInfo.left,h=1/(t*n);this.userCode=`\n      const ivec2 pads = ivec2(${l}, ${c});\n      const float avgMultiplier = float(${h});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n\n        ivec2 dyRCCorner = coords.yz - pads;\n        int dyRCorner = dyRCCorner.x;\n        int dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${o};\n            wR += ${a}) {\n          float dyR = float(dyRCorner + wR) / ${r}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          for (int wC = 0; wC < ${u};\n            wC+= ${i}) {\n            float dyC = float(dyCCorner + wC) / ${s}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            float dyValue = getDy(b, idyR, idyC, d);\n\n            dotProd += dyValue * avgMultiplier;\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class cP{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;const t=e.filterDepth,n=e.filterHeight,r=e.filterWidth,s=e.strideDepth,a=e.strideHeight,i=e.strideWidth,o=e.dilationDepth,u=e.dilationHeight,l=e.dilationWidth,c=e.effectiveFilterDepth,h=e.effectiveFilterHeight,d=e.effectiveFilterWidth,p=c-1-e.padInfo.front,f=h-1-e.padInfo.top,m=d-1-e.padInfo.left,g=1/(t*n*r);this.userCode=`\n      const ivec3 pads = ivec3(${p}, ${f}, ${m});\n      const float avgMultiplier = float(${g});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyDCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        // Convolve dy(?, ?, ?, d) with pos mask(:, :, :, ch) to get\n        // dx(xD, xR, xC, ch).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int wD = 0; wD < ${c};\n            wD += ${o}) {\n          float dyD = float(dyDCorner + wD) / ${s}.0;\n\n          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {\n            continue;\n          }\n          int idyD = int(dyD);\n\n          for (int wR = 0; wR < ${h};\n              wR += ${u}) {\n            float dyR = float(dyRCorner + wR) / ${a}.0;\n\n            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||\n                fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            for (int wC = 0; wC < ${d};\n                wC += ${l}) {\n              float dyC = float(dyCCorner + wC) / ${i}.0;\n\n              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              float dyValue = getDy(batch, idyD, idyR, idyC, ch);\n\n              dotProd += dyValue * avgMultiplier;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const hP={kernelName:yt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,input:a}=t,i=a,{filterSize:o,strides:u,pad:l,dimRoundingMode:c}=r,h=Hl(i.shape,o,u,[1,1,1],l,c),d=new cP(h);return n.runWebGLProgram(d,[s],i.dtype)}},dP={kernelName:mt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,input:a}=t,i=a;EM([s,a],"avgPoolGrad");const{filterSize:o,strides:u,pad:l}=r,c=Gl(i.shape,o,u,1,l),h=new lP(c);return n.runWebGLProgram(h,[s],i.dtype)}},pP={kernelName:bt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{a:s,b:a}=t,{transposeA:i,transposeB:o}=r;return Tz({a:s,b:a,transposeA:i,transposeB:o,backend:n})}};class fP{constructor(e,t,n,r,s,a){this.outputShape=[],this.variableNames=["x","mean","variance"],ru(e,t),ru(e,n);let i="0.0";null!=r&&(ru(e,r),this.variableNames.push("offset"),i="getOffsetAtOutCoords()");let o="1.0";null!=s&&(ru(e,s),this.variableNames.push("scale"),o="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`\n      void main() {\n        float x = getXAtOutCoords();\n        float mean = getMeanAtOutCoords();\n        float variance = getVarianceAtOutCoords();\n        float offset = ${i};\n        float scale = ${o};\n        float inv = scale * inversesqrt(variance + float(${a}));\n        setOutput(dot(vec3(x, -mean, offset), vec3(inv, inv, 1)));\n      }\n    `}}class mP{constructor(e,t,n,r,s,a){this.packedInputs=!0,this.packedOutput=!0,this.variableNames=["x","mean","variance"],ru(e,t),ru(e,n);let i="vec4(0.0)";null!=r&&(ru(e,r),this.variableNames.push("offset"),i="getOffsetAtOutCoords()");let o="vec4(1.0)";null!=s&&(ru(e,s),this.variableNames.push("scale"),o="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`\n      void main() {\n        vec4 offset = ${i};\n        vec4 scale = ${o};\n\n        vec4 x = getXAtOutCoords();\n        vec4 mean = getMeanAtOutCoords();\n        vec4 variance = getVarianceAtOutCoords();\n\n        vec4 inv = scale * inversesqrt(variance + vec4(${a}));\n\n        setOutput((x - mean) * inv + offset);\n      }\n    `}}const gP={kernelName:dn,backendName:"webgl",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:r,mean:s,variance:a,offset:i,scale:o}=e;ie(s.shape.length===a.shape.length,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),ie(null==i||s.shape.length===i.shape.length,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),ie(null==o||s.shape.length===o.shape.length,()=>"Batch normalization gradient requires mean and scale to have equal ranks.");let{varianceEpsilon:u}=n;null==u&&(u=.001);const l=[r,s,a];let c=null;null!=i&&(c=i.shape,l.push(i));let h=null;null!=o&&(h=o.shape,l.push(o));const d=Xe().getBool("WEBGL_PACK_NORMALIZATION")?new mP(r.shape,s.shape,a.shape,c,h,u):new fP(r.shape,s.shape,a.shape,c,h,u);return t.runWebGLProgram(d,l,l[0].dtype)}};class yP{constructor(e){this.variableNames=["source"],this.outputShape=e,this.rank=e.length;const t=GM(this.rank);this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];const n=function(e){if(1===e)return"sourceLoc";if(e<=6)return bP.slice(0,e).map(e=>"sourceLoc."+e).join(",");throw Error(`Slicing for rank ${e} is not yet supported`)}(this.rank);let r;r=`\n        ${t} sourceLoc;\n        ${t} coords = getOutputCoords();\n        ${e.map((e,t)=>`sourceLoc.${bP[t]} = start[${t}] + coords.${bP[t]};`).join("\n")}\n      `,this.userCode=`\n      void main() {\n        ${r}\n        setOutput(getSource(${n}));\n      }\n    `}}const bP=["x","y","z","w","u","v"];class xP{constructor(e){this.variableNames=["source"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.rank=e.length,this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];const t=GM(this.rank),n=NL("coords",this.rank),r=NL("sourceLoc",this.rank),s=1===this.rank?"sourceLoc":`vec2(${r.slice(-2).join()})`,a=`getChannel(getSource(${r.join()}), ${s})`,i=`\n      result.x = ${a};\n      if (++${n[this.rank-1]} < ${e[this.rank-1]}) {\n        ++${r[this.rank-1]};\n        result.y = ${a};\n        --${r[this.rank-1]};\n      }\n    `,o=1===this.rank?"":`\n      --${n[this.rank-1]};\n      if (++${n[this.rank-2]} < ${e[this.rank-2]}) {\n        ++${r[this.rank-2]};\n        result.z = ${a};\n        if (++${n[this.rank-1]} < ${e[this.rank-1]}) {\n          ++${r[this.rank-1]};\n          result.w = ${a};\n        }\n      }\n    `,u=this.rank<=4?`sourceLoc = coords +\n            ${t}(${e.map((e,t)=>`start[${t}]`).join()});`:e.map((e,t)=>`${r[t]} = ${n[t]} + start[${t}];`).join("\n");this.userCode=`\n      void main() {\n        ${t} coords = getOutputCoords();\n        ${t} sourceLoc;\n        ${u}\n        vec4 result = vec4(0.);\n        ${i}\n        ${o}\n        setOutput(result);\n      }\n    `}}function wP(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{begin:a,size:i}=r,[o,u]=dl(s,a,i);if(Qu(s,o,u),0===le(u))return n.makeTensorInfo(u,s.dtype,[]);if(n.shouldExecuteOnCPU([s])||"string"===s.dtype){const e=n.texData.get(s.dataId),t=oL(e.values,o,u,s.shape,s.dtype);return n.makeTensorInfo(u,s.dtype,t)}const{isPacked:l}=n.texData.get(s.dataId),c=cl(s.shape,o,u);if(l||!c){const e=Xe().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new xP(u):new yP(u),t=[o];return n.runWebGLProgram(e,[s],s.dtype,t)}return n.uploadToGPU(s.dataId),function(e,t,n,r){const s=r.texData.get(e.dataId),a=r.makeTensorInfo(n,e.dtype),i=r.texData.get(a.dataId);Object.assign(i,s),i.refCount=1,i.shape=n,i.dtype=e.dtype;let o=hl(t,Me(e.shape));s.slice&&(o+=s.slice.flatOffset),i.slice={flatOffset:o,origDataId:s.slice&&s.slice.origDataId||e.dataId};const u=r.dataRefCount.get(i.slice.origDataId)||1;return r.dataRefCount.set(i.slice.origDataId,u+1),a}(s,o,u,n)}const vP={kernelName:_r,backendName:"webgl",kernelFunc:wP},kP={kernelName:xt,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{blockShape:a,crops:i}=r;ie(s.shape.length<=4,()=>"batchToSpaceND for rank > 4 with a WebGL backend not implemented yet");const o=a.reduce((e,t)=>e*t),u=Jf(s.shape,a,o),l=em(u.length,a.length),c=tm(s.shape,a,o),h=nm(i,a.length),d=rm(c,i,a.length),p=[],f=fz({inputs:{x:s},backend:n,attrs:{shape:u}}),m=Iz({inputs:{x:f},backend:n,attrs:{perm:l}}),g=fz({inputs:{x:m},backend:n,attrs:{shape:c}}),y=wP({inputs:{x:g},backend:n,attrs:{begin:h,size:d}});return p.push(f),p.push(m),p.push(g),p.forEach(e=>n.disposeIntermediateTensorInfo(e)),y}},NP={kernelName:wt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,weights:a}=t,{size:i}=r,o=n.readSync(s.dataId),u=n.readSync(a.dataId),l=CO(o,u,a.dtype,a.shape,i);return n.makeTensorInfo([i],a.dtype,l)}},IP={kernelName:vt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{a:r,b:s}=t,a=Xe().getBool("WEBGL_PACK_BINARY_OPERATIONS"),i=Xe().getNumber("WEBGL_VERSION");if(n.shouldExecuteOnCPU([r,s])||1===i){const e=n.texData.get(r.dataId).values,t=n.texData.get(s.dataId).values,[a,i]=AO(r.shape,s.shape,e,t,r.dtype),o=n.makeTensorInfo(i,r.dtype);return n.texData.get(o.dataId).values=a,o}let o;return o=a?new qL("\n  int r = int(a.r) & int(b.r);\n  int g = int(a.g) & int(b.g);\n  int rb = int(a.b) & int(b.b);\n  int ra = int(a.a) & int(b.a);\n  return vec4(r, g, rb, ra);\n",r.shape,s.shape,!1):new jL("\n  return float(int(a.r) & int(b.r));\n",r.shape,s.shape),n.runWebGLProgram(o,[r,s],r.dtype)}},SP={kernelName:Nt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{s0:r,s1:s}=t,a=n.readSync(r.dataId),i=n.readSync(s.dataId),o=ru(Array.from(a),Array.from(i));return n.makeTensorInfo([o.length],"int32",Int32Array.from(o))}},TP=oz({opSnippet:"return float(a != b);",cpuKernelImpl:ZO,dtype:"bool"}),EP={kernelName:Jn,backendName:"webgl",kernelFunc:TP};function CP(e){const{inputs:t,backend:n}=e,{input:r}=t;return XL({inputs:{x:n.texData.get(r.dataId).complexTensorInfos.real},backend:n})}const $P={kernelName:mr,backendName:"webgl",kernelFunc:CP},AP={kernelName:It,backendName:"webgl",kernelFunc:function e(t){const{inputs:n,backend:r,attrs:s}=t,{x:a}=n,{dtype:i}=s;if("complex64"===i){if("complex64"===a.dtype)return XL({inputs:{x:a},backend:r});const t=Hh(a.shape),n=e({inputs:{x:a},backend:r,attrs:{dtype:"float32"}}),s=ZL({inputs:{real:n,imag:t},backend:r});return t.dispose(),r.disposeIntermediateTensorInfo(n),s}if("complex64"===a.dtype){const t=CP({inputs:{input:a},backend:r}),n=e({inputs:{x:t},backend:r,attrs:{dtype:i}});return r.disposeIntermediateTensorInfo(t),n}if(!Te(a.dtype,i)){const e=XL({inputs:{x:a},backend:r});return{dataId:e.dataId,shape:e.shape,dtype:i}}if(r.shouldExecuteOnCPU([a])){const e=r.texData.get(a.dataId).values,[t,n,s]=RO(e,a.shape,a.dtype,i);return r.makeTensorInfo(t,n,s)}if("int32"===i)return function(e,t){const n=new AL(e.shape,"return float(int(x));"),r=t.runWebGLProgram(n,[e],"int32");return{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}(a,r);if("bool"===i){const e=r.makeTensorInfo([],"bool",ke("bool",1)),t=TP({inputs:{a,b:e},backend:r});return r.disposeIntermediateTensorInfo(e),t}throw new Error(`Error in Cast: failed to cast ${a.dtype} to ${i}`)}},RP="return ceil(x);",_P=iz({opSnippet:RP,packedOpSnippet:RP,cpuKernelImpl:_O}),DP={kernelName:St,backendName:"webgl",kernelFunc:_P};class FP{constructor(e){this.variableNames=["A"],this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=e,this.userCode="\n\n      void main() {\n        float value = getAAtOutCoords();\n        if (isnan(value)) {\n          setOutput(value);\n          return;\n        }\n\n        setOutput(clamp(value, minVal, maxVal));\n      }\n    "}}class MP{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=e,this.userCode="\n      void main() {\n        vec4 value = getAAtOutCoords();\n\n        if (any(isnan(value))) {\n          setOutput(value);\n          return;\n        }\n\n        setOutput(clamp(value, vec4(minVal), vec4(maxVal)));\n      }\n    "}}const OP={kernelName:Tt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{clipValueMin:a,clipValueMax:i}=r;let o;o=Xe().getBool("WEBGL_PACK_CLIP")?new MP(s.shape):new FP(s.shape);const u=[[a],[i]];return n.runWebGLProgram(o,[s],s.dtype,u)}};class LP{constructor(e){this.variableNames=["real","imag"],this.outputShape=e,this.userCode="\n      void main() {\n        float re = abs(getRealAtOutCoords());\n        float im = abs(getImagAtOutCoords());\n        float mx = max(re, im);\n\n        // sadly the length function in glsl is not underflow-safe\n        // (at least not on Intel GPUs). So the safe solution is\n        // to ensure underflow-safety in all cases.\n        setOutput(\n          mx == 0.0 ? 0.0 : mx * length(vec2(1, min(re, im)/mx))\n        );\n      }\n    "}}function zP(e,t){return{dataId:t.dataId,dtype:t.dtype,shape:e.shape}}const PP={kernelName:Ct,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r}=t,s=n.texData.get(r.dataId),a=new LP(r.shape),i=[zP(r,s.complexTensorInfos.real),zP(r,s.complexTensorInfos.imag)];return n.runWebGLProgram(a,i,i[0].dtype)}};class BP{constructor(e){this.outputShape=[],this.outputShape=Gf(e,1),this.variableNames=e.map((e,t)=>`T${t}`);const t=new Array(e.length-1);t[0]=e[0][1];for(let n=1;n<t.length;n++)t[n]=t[n-1]+e[n][1];const n=[`if (yC < ${t[0]}) setOutput(getT0(yR, yC));`];for(let e=1;e<t.length;e++){const r=t[e-1];n.push(`else if (yC < ${t[e]}) setOutput(getT${e}(yR, yC-${r}));`)}const r=t.length,s=t[t.length-1];n.push(`else setOutput(getT${r}(yR, yC-${s}));`),this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int yR = coords.x;\n        int yC = coords.y;\n\n        ${n.join("\n        ")}\n      }\n    `}}class VP{constructor(e,t){this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[],this.outputShape=Gf(e,t);const n=this.outputShape,r=n.length,s=GM(r),a=NL("coords",r),i=["x","y","z","w","u","v"].slice(0,r);this.variableNames=e.map((e,t)=>`T${t}`);const o=new Array(e.length-1);o[0]=e[0][t];for(let n=1;n<o.length;n++)o[n]=o[n-1]+e[n][t];const u=i[t],l=i.slice(-2),c=i.join();let h=`if (${u} < ${o[0]}) {\n        return getChannel(\n            getT0(${c}), vec2(${l.join()}));\n        }`;for(let e=1;e<o.length;e++){const t=o[e-1];h+=`\n        if (${u} < ${o[e]}  && ${u} >= ${o[e-1]}) {\n          return getChannel(\n            getT${e}(${UP(i,u,t)}),\n            vec2(${UP(l,u,t)}));\n        }`}const d=o.length,p=o[o.length-1];h+=`\n        return getChannel(\n          getT${d}(${UP(i,u,p)}),\n          vec2(${UP(l,u,p)}));`,this.userCode=`\n      float getValue(${i.map(e=>"int "+e)}) {\n        ${h}\n      }\n\n      void main() {\n        ${s} coords = getOutputCoords();\n        vec4 result = vec4(getValue(${a}), 0., 0., 0.);\n\n        ${a[r-1]} = ${a[r-1]} + 1;\n        if (${a[r-1]} < ${n[r-1]}) {\n          result.g = getValue(${a});\n        }\n\n        ${a[r-2]} = ${a[r-2]} + 1;\n        if (${a[r-2]} < ${n[r-2]}) {\n          result.a = getValue(${a});\n        }\n\n        ${a[r-1]} = ${a[r-1]} - 1;\n        if (${a[r-2]} < ${n[r-2]} &&\n            ${a[r-1]} < ${n[r-1]}) {\n          result.b = getValue(${a});\n        }\n        setOutput(result);\n      }\n    `}}function UP(e,t,n){const r=e.indexOf(t);return e.map((e,t)=>t===r?`${e} - ${n}`:e).join()}function WP(e){const{inputs:t,backend:n}=e,{input:r}=t;return XL({inputs:{x:n.texData.get(r.dataId).complexTensorInfos.imag},backend:n})}const GP={kernelName:xn,backendName:"webgl",kernelFunc:WP};function HP(e,t,n){const r=e[0].dtype;if("complex64"===r){const r=e.map(e=>CP({inputs:{input:e},backend:n})),s=e.map(e=>WP({inputs:{input:e},backend:n})),a=HP(r,t,n),i=HP(s,t,n),o=ZL({inputs:{real:a,imag:i},backend:n});return r.forEach(e=>n.disposeIntermediateTensorInfo(e)),s.forEach(e=>n.disposeIntermediateTensorInfo(e)),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(i),o}let s=n.shouldExecuteOnCPU(e);if("string"===r&&(s=!0),s){const s=e.map(e=>{const r=le(e.shape.slice(t));return fz({inputs:{x:e},backend:n,attrs:{shape:[-1,r]}})}),a=s.map(e=>({vals:n.readSync(e.dataId),shape:e.shape})),i=Gf(s.map(e=>e.shape),1),o=1===s[0].shape[0],u=DO(a,i,r,o),l=Gf(e.map(e=>e.shape),t),c=n.makeTensorInfo(l,r,u);return s.forEach(e=>n.disposeIntermediateTensorInfo(e)),c}const a=e.filter(e=>le(e.shape)>0),i=Xe().getBool("WEBGL_PACK_ARRAY_OPERATIONS")&&a[0].shape.length>1;if(1===a.length){const t=i?new AL(e[0].shape,ML):new OL(e[0].shape,ML);return n.runWebGLProgram(t,e,r)}const o=Xe().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER");if(a.length>o){const e=[];for(let r=0;r<a.length;r+=o){const s=a.slice(r,r+o);e.push(HP(s,t,n))}const r=HP(e,t,n);for(const t of e)n.disposeIntermediateTensorInfo(t);return r}if(i){const e=new VP(a.map(e=>e.shape),t);return n.runWebGLProgram(e,a,r)}const{tensors2D:u,outShape:l}=function(e,t,n){const r=Gf(e.map(e=>e.shape),t);return{tensors2D:e.map(e=>fz({inputs:{x:e},attrs:{shape:[-1,le(e.shape.slice(t))]},backend:n})),outShape:r}}(a,t,n),c=new BP(u.map(e=>e.shape)),h=n.runWebGLProgram(c,u,r);u.forEach(e=>n.disposeIntermediateTensorInfo(e));const d=fz({inputs:{x:h},attrs:{shape:l},backend:n});return n.disposeIntermediateTensorInfo(h),d}function jP(e){const{inputs:t,backend:n,attrs:r}=e,{axis:s}=r,a=we(s,t[0].shape)[0];Wf(t.map(e=>e.shape),a);const i=Gf(t.map(e=>e.shape),a);if(0===le(i))return n.makeTensorInfo(i,t[0].dtype,[]);const o=t.filter(e=>le(e.shape)>0);return 1===o.length?XL({inputs:{x:o[0]},backend:n}):HP(o,a,n)}const KP={kernelName:$t,backendName:"webgl",kernelFunc:jP};class qP{constructor(e,t=!1,n=null,r=!1,s=!1){this.variableNames=["x","W"],this.outputShape=e.outShape;const a=e.padInfo.top,i=e.padInfo.left,o=e.strideHeight,u=e.strideWidth,l=e.dilationHeight,c=e.dilationWidth,h=e.filterHeight,d=e.filterWidth,p=4*Math.floor(e.inChannels/4),f=e.inChannels%4,m="channelsLast"===e.dataFormat,g=m?1:2,y=m?2:3,b=m?3:1;let x="",w="";n&&(x=r?`float activation(float a) {\n          float b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:s?`float activation(float a) {\n          float b = getLeakyreluAlphaAtOutCoords();\n          ${n}\n        }`:`\n          float activation(float x) {\n            ${n}\n          }\n        `,w="result = activation(result);");const v=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),s&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${x}\n\n      const ivec2 strides = ivec2(${o}, ${u});\n      const ivec2 pads = ivec2(${a}, ${i});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d2 = coords[${b}];\n\n        ivec2 xRCCorner =\n            ivec2(coords[${g}], coords[${y}]) * strides - pads;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // Convolve x(?, ?, d1) with w(:, :, d1, d2) to get y(yR, yC, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${h}; wR++) {\n          int xR = xRCorner + wR * ${l};\n\n          if (xR < 0 || xR >= ${e.inHeight}) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${d}; wC++) {\n            int xC = xCCorner + wC * ${c};\n\n            if (xC < 0 || xC >= ${e.inWidth}) {\n              continue;\n            }\n\n            for (int d1 = 0; d1 < ${p}; d1 += 4) {\n              vec4 wValues = vec4(\n                getW(wR, wC, d1, d2),\n                getW(wR, wC, d1 + 1, d2),\n                getW(wR, wC, d1 + 2, d2),\n                getW(wR, wC, d1 + 3, d2)\n              );\n\n              if (${m}) {\n                vec4 xValues = vec4(\n                  getX(batch, xR, xC, d1),\n                  getX(batch, xR, xC, d1 + 1),\n                  getX(batch, xR, xC, d1 + 2),\n                  getX(batch, xR, xC, d1 + 3)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec4 xValues = vec4(\n                  getX(batch, d1, xR, xC),\n                  getX(batch, d1 + 1, xR, xC),\n                  getX(batch, d1 + 2, xR, xC),\n                  getX(batch, d1 + 3, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n            }\n\n            if (${1===f}) {\n\n              if (${m}) {\n                dotProd +=\n                    getX(batch, xR, xC, ${p}) *\n                    getW(wR, wC, ${p}, d2);\n              } else {\n                dotProd +=\n                    getX(batch, ${p}, xR, xC) *\n                    getW(wR, wC, ${p}, d2);\n              }\n\n            } else if (${2===f}) {\n              vec2 wValues = vec2(\n                getW(wR, wC, ${p}, d2),\n                getW(wR, wC, ${p} + 1, d2)\n              );\n\n              if (${m}) {\n                vec2 xValues = vec2(\n                  getX(batch, xR, xC, ${p}),\n                  getX(batch, xR, xC, ${p} + 1)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec2 xValues = vec2(\n                  getX(batch, ${p}, xR, xC),\n                  getX(batch, ${p} + 1, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n\n            } else if (${3===f}) {\n              vec3 wValues = vec3(\n                getW(wR, wC, ${p}, d2),\n                getW(wR, wC, ${p} + 1, d2),\n                getW(wR, wC, ${p} + 2, d2)\n              );\n\n              if (${m}) {\n                vec3 xValues = vec3(\n                  getX(batch, xR, xC, ${p}),\n                  getX(batch, xR, xC, ${p} + 1),\n                  getX(batch, xR, xC, ${p} + 2)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec3 xValues = vec3(\n                  getX(batch, ${p}, xR, xC),\n                  getX(batch, ${p} + 1, xR, xC),\n                  getX(batch, ${p} + 2, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n\n            }\n          }\n        }\n\n        float result = dotProd;\n        ${v}\n        ${w}\n        setOutput(result);\n      }\n    `}}class XP{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;const t=e.padInfo.front,n=e.padInfo.top,r=e.padInfo.left,s=e.strideDepth,a=e.strideHeight,i=e.strideWidth,o=e.dilationDepth,u=e.dilationHeight,l=e.dilationWidth,c=e.filterDepth,h=e.filterHeight,d=e.filterWidth,p=4*Math.floor(e.inChannels/4),f=e.inChannels%4;this.userCode=`\n      const ivec3 strides = ivec3(${s}, ${a}, ${i});\n      const ivec3 pads = ivec3(${t}, ${n}, ${r});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int d2 = coords.u;\n\n        ivec3 xFRCCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n        int xFCorner = xFRCCorner.x;\n        int xRCorner = xFRCCorner.y;\n        int xCCorner = xFRCCorner.z;\n\n        // Convolve x(?, ?, ?, d1) with w(:, :, :, d1, d2) to get\n        // y(yF, yR, yC, d2). ? = to be determined. : = across all\n        // values in that axis.\n        float dotProd = 0.0;\n        for (int wF = 0; wF < ${c}; wF++) {\n          int xF = xFCorner + wF * ${o};\n\n          if (xF < 0 || xF >= ${e.inDepth}) {\n            continue;\n          }\n\n          for (int wR = 0; wR < ${h}; wR++) {\n            int xR = xRCorner + wR * ${u};\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${d}; wC++) {\n              int xC = xCCorner + wC * ${l};\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              for (int d1 = 0; d1 < ${p}; d1 += 4) {\n                vec4 xValues = vec4(\n                  getX(batch, xF, xR, xC, d1),\n                  getX(batch, xF, xR, xC, d1 + 1),\n                  getX(batch, xF, xR, xC, d1 + 2),\n                  getX(batch, xF, xR, xC, d1 + 3)\n                );\n                vec4 wValues = vec4(\n                  getW(wF, wR, wC, d1, d2),\n                  getW(wF, wR, wC, d1 + 1, d2),\n                  getW(wF, wR, wC, d1 + 2, d2),\n                  getW(wF, wR, wC, d1 + 3, d2)\n                );\n\n                dotProd += dot(xValues, wValues);\n              }\n\n              if (${1===f}) {\n                dotProd +=\n                  getX(batch, xF, xR, xC, ${p}) *\n                  getW(wF, wR, wC, ${p}, d2);\n              } else if (${2===f}) {\n                vec2 xValues = vec2(\n                  getX(batch, xF, xR, xC, ${p}),\n                  getX(batch, xF, xR, xC, ${p} + 1)\n                );\n                vec2 wValues = vec2(\n                  getW(wF, wR, wC, ${p}, d2),\n                  getW(wF, wR, wC, ${p} + 1, d2)\n                );\n                dotProd += dot(xValues, wValues);\n              } else if (${3===f}) {\n                vec3 xValues = vec3(\n                  getX(batch, xF, xR, xC, ${p}),\n                  getX(batch, xF, xR, xC, ${p} + 1),\n                  getX(batch, xF, xR, xC, ${p} + 2)\n                );\n                vec3 wValues = vec3(\n                  getW(wF, wR, wC, ${p}, d2),\n                  getW(wF, wR, wC, ${p} + 1, d2),\n                  getW(wF, wR, wC, ${p} + 2, d2)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class YP{constructor(e,t=!1,n=null,r=!1,s=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=YM(this.outputShape.length);const a=e.padInfo.left,i=e.strideWidth,o=e.dilationWidth,u=e.filterHeight,l=e.filterWidth,c=l;let h="\n       int xR; int xC; int xCOffset;\n       vec4 wTexel; vec4 previous; vec4 final;";for(let e=0;e<l;e++)h+=`\n           vec4 xTexelC${2*e};\n           int xTexelC${2*e}Ready;\n           vec4 xTexelC${2*e+1};\n           int xTexelC${2*e+1}Ready;\n           vec4 xC${e};`;h+=`\n     for (int r = 0; r < ${u}; r++) {\n      for (int d1 = 0; d1 < ${e.inChannels}; d1 += 2) {\n       `;for(let e=0;e<l;e++)h+=`\n           xTexelC${2*e} = vec4(0.0);\n           xTexelC${2*e}Ready = 0;\n           xTexelC${2*e+1} = vec4(0.0);\n           xTexelC${2*e+1}Ready = 0;\n           xC${e} = vec4(0.0);`;h+="\n         xR = xRCorner + r * dilations[0];\n         if (xR >=0 && xR < inDims[0]) {\n       ";for(let t=0;t<(c+1)/2;t++){const n=2*t;if(h+=`\n           xC = xCCorner + ${n*o};\n           `,1===i){if(n<l&&(a%2==1?(h+=`\n                 xCOffset = xC + 1;\n                 if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${n}Ready == 0) {\n                   xTexelC${n} = getX(batch, xR, xCOffset, d1);\n\n                   // Need to manually clear unused channels in case\n                   // we're reading from recycled texture.\n                   if (xCOffset + 1 >= inDims[1]) {\n                     xTexelC${n}.zw = vec2(0.0);\n                   }\n                   xTexelC${n}Ready = 1;\n                 }\n               `,h+=1===o&&n>0?`\n                 xC${n} = vec4(xTexelC${n-2}.zw, xTexelC${n}.xy);\n                 `:`\n                   xCOffset = xC + 1 - 2;\n\n                   if (xCOffset >= 0 && xCOffset < inDims[1]) {\n                     previous = getX(batch, xR, xCOffset, d1);\n\n                     // Need to manually clear unused channels in case\n                     // we're reading from recycled texture.\n                     if (xCOffset + 1 >= inDims[1]) {\n                       previous.zw = vec2(0.0);\n                     }\n\n                     xC${n} = vec4(previous.zw, xTexelC${n}.xy);\n                   } else {\n                     xC${n} = vec4(0.0, 0.0, xTexelC${n}.xy);\n                   }\n                   `):h+=`\n                 if (xC >= 0 && xC < inDims[1] && xTexelC${n}Ready == 0) {\n                   xTexelC${n} = getX(batch, xR, xC, d1);\n                   if (xC + 1 >= inDims[1]) {\n                     xTexelC${n}.zw = vec2(0.0);\n                   }\n                   xTexelC${n}Ready = 1;\n                 }\n\n                 xC${n} = xTexelC${n};\n                 `,n+1<l)){const e=a%2==0?te(o):o;o%2==0&&a%2==1||o%2!=0&&a%2!=1?(h+=`\n                   xCOffset = xC + imod(pads[1], 2) + ${e};\n\n                   if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${n+1}Ready == 0) {\n                     xTexelC${n+1} = getX(batch, xR, xCOffset, d1);\n\n                     // Need to manually clear unused channels in case\n                     // we're reading from recycled texture.\n                     if (xCOffset + 1 >= inDims[1]) {\n                       xTexelC${n+1}.zw = vec2(0.0);\n                     }\n                     xTexelC${n+1}Ready = 1;\n                   }\n                   `,h+=o>1?`\n                     xCOffset -= 2;\n                     if (xCOffset >= 0 && xCOffset < inDims[1]) {\n                      previous = getX(batch, xR, xCOffset, d1);\n                      xC${n+1} = vec4(previous.zw, xTexelC${n+1}.xy);\n                     } else {\n                      xC${n+1} = vec4(0.0, 0.0, xTexelC${n+1}.xy);\n                     }\n                     `:`\n                     xC${n+1} = vec4(xTexelC${n}.zw, xTexelC${n+1}.xy);\n                     `):h+=1===e?`\n                     xC${n+1} = xTexelC${n};\n                     `:`\n                     xCOffset = xC + ${e};\n\n                     if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${n+1}Ready == 0) {\n                       xTexelC${n+1} = getX(batch, xR, xCOffset, d1);\n                       if (xCOffset + 1 >= inDims[1]) {\n                         xTexelC${n+1}.zw = vec2(0.0);\n                       }\n                       xTexelC${n+1}Ready = 1;\n                     }\n\n                     xC${n+1} = xTexelC${n+1};\n                     `}}else n<l&&(a%2==1?(h+=`\n                 xCOffset = xC + 1 - strides[1];\n                 if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${n}Ready == 0) {\n                   xTexelC${n} = getX(batch, xR, xCOffset, d1);\n                   // Need to manually clear unused channels in case\n                   // we're reading from recycled texture.\n                   if (xCOffset + 1 >= inDims[1]) {\n                     xTexelC${n}.zw = vec2(0.0);\n                   }\n                   xTexelC${n}Ready = 1;\n                 }\n\n                 if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC${n+1}Ready == 0) {\n                   xTexelC${n+1} = getX(batch, xR, xC + 1, d1);\n                   // Need to manually clear unused channels in case\n                   // we're reading from recycled texture.\n                   if (xC + 2 >= inDims[1]) {\n                     xTexelC${n+1}.zw = vec2(0.0);\n                   }\n                   xTexelC${n+1}Ready = 1;\n                 }\n\n                 xC${n} = vec4(xTexelC${n}.zw, xTexelC${n+1}.zw);\n               `,n+1<l&&(h+=`\n                   final = vec4(0.0);\n                   xCOffset = xC + 1 + strides[1];\n                   if(xCOffset >= 0 && xCOffset < inDims[1]) {\n                     final = getX(batch, xR, xCOffset, d1);\n                   }\n                   xC${n+1} = vec4(xTexelC${n+1}.xy, final.xy);\n                 `)):(h+=`\n                 if(xC >= 0 && xC < inDims[1] && xTexelC${n}Ready == 0) {\n                   xTexelC${n} = getX(batch, xR, xC, d1);\n                   if (xC + 1 >= inDims[1]) {\n                     xTexelC${n}.zw = vec2(0.0);\n                   }\n                   xTexelC${n}Ready = 1;\n                 }\n\n                 xCOffset = xC + strides[1];\n                 if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${n+1}Ready == 0) {\n                   xTexelC${n+1} = getX(batch, xR, xCOffset, d1);\n                   if (xCOffset + 1 >= inDims[1]) {\n                     xTexelC${n+1}.zw = vec2(0.);\n                   }\n                   xTexelC${n+1}Ready = 1;\n                 }\n\n                 xC${n} = vec4(\n                   xTexelC${n}.xy, xTexelC${n+1}.xy);\n               `,n+1<l&&(h+=`\n                   xC${n+1} = vec4(xTexelC${n}.zw, xTexelC${n+1}.zw);\n                 `)));n<l&&(h+=`\n             wTexel = getW(r, ${n}, d1, d2);\n             dotProd += xC${n}.xxzz * vec4(wTexel.xy, wTexel.xy);\n             if(d1 + 1 < ${e.inChannels}) {\n               dotProd += xC${n}.yyww * vec4(wTexel.zw, wTexel.zw);\n             }\n           `,n+1<l&&(h+=`\n               wTexel = getW(r, ${n+1}, d1, d2);\n               dotProd += xC${n+1}.xxzz * vec4(wTexel.xy, wTexel.xy);\n               if(d1 + 1 < ${e.inChannels}) {\n                 dotProd += xC${n+1}.yyww * vec4(wTexel.zw, wTexel.zw);\n               }\n             `))}h+="\n     }\n   ",h+="\n     }\n   ",h+="\n     }\n   ";let d="",p="";n&&(d=r?`vec4 activation(vec4 a) {\n           vec4 b = getPreluActivationWeightsAtOutCoords();\n           ${n}\n         }`:s?`vec4 activation(vec4 a) {\n           vec4 b = getLeakyreluAlphaAtOutCoords();\n           ${n}\n         }`:`vec4 activation(vec4 x) {\n           ${n}\n         }`,p="result = activation(result);");const f=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),s&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n       ${d}\n\n       void main() {\n         ivec4 coords = getOutputCoords();\n         int batch = coords.x;\n         ivec2 xRCCorner = coords.yz * strides - pads;\n         int d2 = coords.w;\n         int xRCorner = xRCCorner.x;\n         int xCCorner = xRCCorner.y;\n\n         //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.\n         vec4 dotProd = vec4(0.000000000000001);\n\n         ${h}\n\n         vec4 result = dotProd - vec4(0.000000000000001);\n         ${f}\n         ${p}\n         setOutput(result);\n       }\n     `}}class ZP{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec4"},{name:"pad",type:"ivec2"},{name:"stride",type:"ivec2"},{name:"dilation",type:"ivec2"},{name:"inChannels",type:"int"},{name:"itemsPerBlockRow",type:"int"},{name:"outWidth",type:"int"}],this.outputShape=e,this.enableShapeUniforms=YM(this.outputShape.length);const{dataFormat:n}=t,r=$M(),s="channelsLast"===n,a=s?1:2,i=s?2:3,o=this.enableShapeUniforms?"if(blockIndex < outShape[2] && pos < outShape[1]) {":`if(blockIndex < ${e[2]} && pos < ${e[1]}) {`;let u="";for(let e=0;e<=1;e++)for(let t=0;t<=1;t++)u+=`\n          blockIndex = rc.z + ${t};\n          pos = rc.y + ${e};\n\n          ${o}\n            offsetY = int(blockIndex / outWidth) * stride[0] - pad[0];\n            d0 = offsetY + dilation[0] * (pos / itemsPerBlockRow);\n\n            if(d0 < inputShape[${a}] && d0 >= 0) {\n              // Use custom imod instead mod. On Intel GPU, mod may generate\n              // unexpected value.\n              // https://github.com/tensorflow/tfjs/issues/5447\n              offsetX = imod(blockIndex, outWidth) * stride[1] - pad[1];\n              d1 = offsetX + dilation[1] * (imod(pos, itemsPerBlockRow) /\n                  inChannels);\n\n              if(d1 < inputShape[${i}] && d1 >= 0) {\n\n                ch = imod(pos, inChannels);\n\n                if (${s}) {\n                  innerDims = vec2(d1, ch);\n                  result[${2*e+t}] = getChannel(\n                    getA(rc.x, d0, int(innerDims.x),\n                    int(innerDims.y)), innerDims);\n                } else {\n                  innerDims = vec2(d0, d1);\n                  result[${2*e+t}] = getChannel(\n                    getA(rc.x, ch, int(innerDims.x),\n                    int(innerDims.y)), innerDims);\n                }\n              }\n            }\n          }\n        `;this.userCode=`\n      void main() {\n        ivec3 rc = getOutputCoords();\n\n        vec4 result = vec4(0);\n\n        int blockIndex, pos, offsetY, d0, offsetX, d1, ch;\n        vec2 innerDims;\n\n        ${u}\n\n        ${r.output} = result;\n      }\n    `}}function QP(e,t){const n=e.length;return n>=3?t?[...e.slice(0,-3),e[n-3]*e[n-2],e[n-1]]:[...e.slice(0,-3),e[n-3],e[n-2]*e[n-1]]:!t&&1===n&&e[0]>1?[e[0],1]:null}function JP({x:e,filter:t,convInfo:n,backend:r,bias:s=null,preluActivationWeights:a=null,leakyreluAlpha:i=0,activation:o=null}){const u=e.shape,l=r.texData.get(e.dataId),c=n.inChannels,h=u[0]*u[1]*u[2],d=n.outChannels,p="channelsLast"===n.dataFormat,f=!1;let m;const g=[];if(null!=a){const e=QP(a.shape,p);null!=e&&(a=fz({inputs:{x:a},backend:r,attrs:{shape:e}}),g.push(a))}if(null!=s){const e=QP(s.shape,p);null!=e&&(s=fz({inputs:{x:s},backend:r,attrs:{shape:e}}),g.push(s))}if((1!==h&&1!==d||!(c>1e3))&&l.isPacked&&p&&null!=l.texture&&u[2]%2!=0&&de(l.shape.slice(-3),u.slice(-3))){const c=u[0]*u[1]*(u[2]+1),h={dataId:e.dataId,shape:[1,c,n.inChannels],dtype:e.dtype},d=l.shape;l.shape=l.shape.slice(),l.shape[l.shape.length-2]++,ie(pM(l.shape,h.shape),()=>`packed reshape ${l.shape} to ${h.shape} isn't free`);const p=fz({inputs:{x:t},backend:r,attrs:{shape:[1,n.inChannels,n.outChannels]}});g.push(p);const y=Tz({a:h,b:p,backend:r,transposeA:!1,transposeB:f,bias:s,activation:o,preluActivationWeights:a,leakyreluAlpha:i}),b=r.texData.get(y.dataId);ie(b.isPacked,()=>"batchMatMul result is expected to be packed"),l.shape=d,b.shape=n.outShape,m=XL({inputs:{x:y},backend:r}),m.shape=n.outShape,g.push(y)}else{const u=n.outHeight*n.outWidth,l=fz({inputs:{x:e},backend:r,attrs:{shape:p?[n.batchSize,u,n.inChannels]:[n.batchSize,n.inChannels,u]}}),c=fz({inputs:{x:t},backend:r,attrs:{shape:[1,n.inChannels,n.outChannels]}}),h=Tz({a:p?l:c,b:p?c:l,transposeA:!p,transposeB:f,backend:r,bias:s,activation:o,preluActivationWeights:a,leakyreluAlpha:i});m=fz({inputs:{x:h},backend:r,attrs:{shape:n.outShape}}),g.push(l),g.push(c),g.push(h)}for(const e of g)r.disposeIntermediateTensorInfo(e);return m}function eB({x:e,filter:t,convInfo:n,backend:r,bias:s=null,preluActivationWeights:a=null,leakyreluAlpha:i=0,activation:o=null}){const{filterWidth:u,filterHeight:l,inChannels:c,outWidth:h,outHeight:d,dataFormat:p}=n,f="channelsLast"===p,m=u*l*c,g=d*h,y=[n.batchSize,m,g],b=[];if(null!=a){const e=QP(a.shape,f);null!=e&&(a=fz({inputs:{x:a},backend:r,attrs:{shape:e}}),b.push(a))}if(null!=s){const e=QP(s.shape,f);null!=e&&(s=fz({inputs:{x:s},backend:r,attrs:{shape:e}}),b.push(s))}const x=fz({inputs:{x:t},backend:r,attrs:{shape:[1,m,le(t.shape)/m]}});b.push(x);const w=new ZP(y,n),v=[e.shape,[n.padInfo.top,n.padInfo.left],[n.strideHeight,n.strideWidth],[n.dilationHeight,n.dilationWidth],[n.inChannels],[n.filterWidth*n.inChannels],[n.outWidth]],k=r.runWebGLProgram(w,[e],"float32",v),N=fz({inputs:{x:k},backend:r,attrs:{shape:y}});b.push(k),b.push(N);const I=null!=s,S=null!=a,T="leakyrelu"===o,E=o?uz(o,!0):null,C=new lz(f?N.shape:x.shape,f?x.shape:N.shape,f?[n.batchSize,g,n.outChannels]:[n.batchSize,n.outChannels,g],!0,!1,I,E,S,T),$=f?[N,x]:[x,N];if(s&&$.push(s),S&&$.push(a),T){const e=r.makeTensorInfo([],"float32",Ks(i,"float32"));$.push(e),b.push(e)}const A=r.runWebGLProgram(C,$,"float32"),R=fz({inputs:{x:A},backend:r,attrs:{shape:n.outShape}});b.push(A);for(const e of b)r.disposeIntermediateTensorInfo(e);return R}const tB={kernelName:At,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:a}=t,{strides:i,pad:o,dataFormat:u,dilations:l,dimRoundingMode:c}=r,h=nc(u),d=jl(s.shape,a.shape,i,l,o,c,!1,h);let p;if(1!==d.filterHeight||1!==d.filterWidth||1!==d.dilationHeight||1!==d.dilationWidth||1!==d.strideHeight||1!==d.strideWidth||"SAME"!==d.padInfo.type&&"VALID"!==d.padInfo.type)if(d.strideWidth<=2&&"channelsLast"===h&&Xe().getBool("WEBGL_EXP_CONV")){const e=new YP(d),t=[[d.padInfo.top,d.padInfo.left],[d.strideHeight,d.strideWidth],[d.dilationHeight,d.dilationWidth],[d.inHeight,d.inWidth]];p=n.runWebGLProgram(e,[s,a],"float32",t)}else if(Xe().getBool("WEBGL_CONV_IM2COL"))p=eB({x:s,filter:a,convInfo:d,backend:n});else{const e=new qP(d);p=n.runWebGLProgram(e,[s,a],"float32")}else p=JP({x:s,filter:a,convInfo:d,backend:n});const f=fz({inputs:{x:p},backend:n,attrs:{shape:d.outShape}});return n.disposeIntermediateTensorInfo(p),f}};class nB{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideHeight,n=e.strideWidth,r=e.padInfo.top,s=e.padInfo.left,a="channelsLast"===e.dataFormat;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int wR = coords.x;\n        int wC = coords.y;\n        int d1 = coords.z;\n        int d2 = coords.w;\n\n        // Convolve x(?, ?, d1) with dy(:, :, d2) to get dw(wR, wC, d1, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int b = 0; b < ${e.batchSize}; b++) {\n          for (int yR = 0; yR < ${e.outHeight}; yR++) {\n            int xR = wR + yR * ${t} - ${r};\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int yC = 0; yC < ${e.outWidth}; yC++) {\n              int xC = wC + yC * ${n} - ${s};\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              ${a?"float dyValue = getDy(b, yR, yC, d2);\n              float xValue = getX(b, xR, xC, d1);\n              dotProd += (xValue * dyValue);":"float dyValue = getDy(b, d2, yR, yC);\n              float xValue = getX(b, d1, xR, xC);\n              dotProd += (xValue * dyValue);"}\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class rB{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterHeight,n=e.filterWidth,r=e.strideHeight,s=e.strideWidth,a="channelsLast"===e.dataFormat,i=t-1-e.padInfo.top,o=n-1-e.padInfo.left,u=a?1:2,l=a?2:3,c=a?3:1;this.userCode=`\n      const ivec2 pads = ivec2(${i}, ${o});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[${c}];\n\n        ivec2 dyCorner = ivec2(coords[${u}], coords[${l}]) - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${t}; wR++) {\n          float dyR = float(dyRCorner + wR) / ${r}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          int wRPerm = ${t} - 1 - wR;\n\n          for (int wC = 0; wC < ${n}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${s}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            int wCPerm = ${n} - 1 - wC;\n\n            for (int d2 = 0; d2 < ${e.outChannels}; d2++) {\n\n              if (${a}) {\n                float xValue = getDy(batch, idyR, idyC, d2);\n                float wValue = getW(wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              } else {\n                float xValue = getDy(batch, d2, idyR, idyC);\n                float wValue = getW(wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              }\n\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class sB{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideDepth,n=e.strideHeight,r=e.strideWidth,s=e.padInfo.front,a=e.padInfo.top,i=e.padInfo.left;this.userCode=`\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int wF = coords.x;\n        int wR = coords.y;\n        int wC = coords.z;\n        int d1 = coords.w;\n        int d2 = coords.u;\n\n        float dotProd = 0.0;\n\n        for (int b = 0; b < ${e.batchSize}; b++) {\n          for (int yF = 0; yF < ${e.outDepth}; yF++) {\n            int xF = wF + yF * ${t} - ${s};\n\n            if (xF < 0 || xF >= ${e.inDepth}) {\n              continue;\n            }\n\n            for (int yR = 0; yR < ${e.outHeight}; yR++) {\n              int xR = wR + yR * ${n} - ${a};\n\n              if (xR < 0 || xR >= ${e.inHeight}) {\n                continue;\n              }\n\n              for (int yC = 0; yC < ${e.outWidth}; yC++) {\n                int xC = wC + yC * ${r} - ${i};\n\n                if (xC < 0 || xC >= ${e.inWidth}) {\n                  continue;\n                }\n\n                float dyValue = getDy(b, yF, yR, yC, d2);\n                float xValue = getX(b, xF, xR, xC, d1);\n                dotProd += (xValue * dyValue);\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class aB{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterDepth,n=e.filterHeight,r=e.filterWidth,s=e.strideDepth,a=e.strideHeight,i=e.strideWidth,o=t-1-e.padInfo.front,u=n-1-e.padInfo.top,l=r-1-e.padInfo.left;this.userCode=`\n      const ivec3 pads = ivec3(${o}, ${u}, ${l});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int d1 = coords.u;\n\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyFCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        float dotProd = 0.0;\n        for (int wF = 0; wF < ${t}; wF++) {\n          float dyF = float(dyFCorner + wF) / ${s}.0;\n\n          if (dyF < 0.0 || dyF >= ${e.outDepth}.0 || fract(dyF) > 0.0) {\n            continue;\n          }\n          int idyF = int(dyF);\n\n          int wFPerm = ${t} - 1 - wF;\n\n          for (int wR = 0; wR < ${n}; wR++) {\n            float dyR = float(dyRCorner + wR) / ${a}.0;\n\n            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||\n              fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            int wRPerm = ${n} - 1 - wR;\n\n            for (int wC = 0; wC < ${r}; wC++) {\n              float dyC = float(dyCCorner + wC) / ${i}.0;\n\n              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              int wCPerm = ${r} - 1 - wC;\n\n              for (int d2 = 0; d2 < ${e.outChannels}; d2++) {\n                float xValue = getDy(batch, idyF, idyR, idyC, d2);\n                float wValue = getW(wFPerm, wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const iB={kernelName:Rt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,dy:a}=t,{strides:i,pad:o,dataFormat:u,dimRoundingMode:l,filterShape:c}=r,h=nc(u),d=jl(s.shape,c,i,1,o,l,!1,h),p=new nB(d);return n.runWebGLProgram(p,[s,a],"float32")}};class oB{constructor(e){this.variableNames=["dy","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"strides",type:"vec2"}],this.outputShape=e.inShape,this.enableShapeUniforms=YM(this.outputShape.length);const t=e.filterHeight,n=e.filterWidth,r=t-1-e.padInfo.top,s=n-1-e.padInfo.left;this.userCode=`\n      const ivec2 pads = ivec2(${r}, ${s});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[3];\n\n        ivec2 dyCorner = ivec2(coords[1], coords[2]) - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        vec4 result = vec4(0.);\n        for (int wR = 0; wR < ${t}; wR++) {\n          float dyR = float(dyRCorner + wR) / strides[0];\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n          int wRPerm = ${t} - 1 - wR;\n\n          for (int wC = 0; wC < ${n}; wC++) {\n            int wCPerm = ${n} - 1 - wC;\n\n            float dyC = float(dyCCorner + wC) / strides[1];\n            bool idyCVal = (dyC >= 0.0) && (dyC < ${e.outWidth}.0)\n              && (fract(dyC) == 0.0);\n            int idyC = int(dyC);\n\n            float dyC2 = float(dyCCorner + wC + 1) / strides[1];\n            bool idyCVal2 = (dyC2 >= 0.0) && (dyC2 < ${e.outWidth}.0)\n              && (fract(dyC2) == 0.0);\n            int idyC2 = int(dyC2);\n\n            if (idyCVal && idyCVal2) {\n              for (int d2 = 0; d2 < ${e.outChannels}; d2 += 2) {\n                vec4 wValue = getW(wRPerm, wCPerm, d1, d2);\n                vec4 dySample = getDy(batch, idyR, idyC, d2);\n                vec4 dySample2 = (idyC / 2 == idyC2 / 2) ?\n                  dySample : getDy(batch, idyR, idyC2, d2);\n\n                vec2 dyValue = mod(float(idyC), 2.) == 0. ?\n                  dySample.xy : dySample.zw;\n                result.xy += vec2(dot(dyValue, wValue.xy),\n                  dot(dyValue, wValue.zw));\n\n                dyValue = mod(float(idyC2), 2.) == 0. ?\n                  dySample2.xy : dySample2.zw;\n                result.zw += vec2(dot(dyValue, wValue.xy),\n                  dot(dyValue, wValue.zw));\n              }\n            } else if (idyCVal) {\n              for (int d2 = 0; d2 < ${e.outChannels}; d2 += 2) {\n                vec4 wValue = getW(wRPerm, wCPerm, d1, d2);\n                vec4 dySample = getDy(batch, idyR, idyC, d2);\n                vec2 dyValue = mod(float(idyC), 2.) == 0. ?\n                  dySample.xy : dySample.zw;\n                result.xy += vec2(dot(dyValue, wValue.xy),\n                  dot(dyValue, wValue.zw));\n              }\n            } else if (idyCVal2) {\n              for (int d2 = 0; d2 < ${e.outChannels}; d2 += 2) {\n                vec4 wValue = getW(wRPerm, wCPerm, d1, d2);\n                vec4 dySample = getDy(batch, idyR, idyC2, d2);\n                vec2 dyValue = mod(float(idyC2), 2.) == 0. ?\n                  dySample.xy : dySample.zw;\n                result.zw += vec2(dot(dyValue, wValue.xy),\n                  dot(dyValue, wValue.zw));\n              }\n            }\n          }\n        }\n        setOutput(result);\n      }\n    `}}const uB={kernelName:_t,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,filter:a}=t,{inputShape:i,strides:o,pad:u,dataFormat:l,dimRoundingMode:c}=r,h=nc(l),d=jl(i,a.shape,o,1,u,c,!1,h);if(Xe().getBool("WEBGL_PACK_CONV2DTRANSPOSE")&&"channelsLast"===h){const e=[[d.strideHeight,d.strideWidth]],t=new oB(d);return n.runWebGLProgram(t,[s,a],"float32",e)}{const e=new rB(d);return n.runWebGLProgram(e,[s,a],"float32")}}},lB={kernelName:Dt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:a}=t,{strides:i,pad:o,dilations:u}=r,l=Kl(s.shape,a.shape,i,u,o),c=new XP(l);return n.runWebGLProgram(c,[s,a],"float32")}},cB={kernelName:Ft,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,dy:a}=t,{strides:i,pad:o,filterShape:u}=r,l=Kl(s.shape,u,i,1,o),c=new sB(l);return n.runWebGLProgram(c,[s,a],"float32")}},hB={kernelName:Mt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,filter:a}=t,{pad:i,strides:o,inputShape:u}=r,l=Kl(u,a.shape,o,1,i),c=new aB(l);return n.runWebGLProgram(c,[s,a],"float32")}},dB=iz({opSnippet:az+"\n  return cos(x);\n",packedOpSnippet:`\n  vec4 result = cos(x);\n  bvec4 isNaN = isnan(x);\n  ${KL}\n  return result;\n`}),pB={kernelName:Ot,backendName:"webgl",kernelFunc:dB},fB=iz({opSnippet:"\n  float e2x = exp(-x);\n  return (e2x + 1.0 / e2x) / 2.0;\n"}),mB={kernelName:Lt,backendName:"webgl",kernelFunc:fB};class gB{constructor(e,t,n,r,s){this.variableNames=["Image","Boxes","BoxInd"],this.outputShape=[];const[a,i,o,u]=e,[l]=t,[c,h]=n;this.outputShape=[l,c,h,u];const d="bilinear"===r?1:0,[p,f]=[i-1+".0",o-1+".0"],[m,g,y]=c>1?[""+(i-1)/(c-1),"(y2-y1) * height_ratio",`y1*${p} + float(y)*(height_scale)`]:["0.0","0.0",`0.5 * (y1+y2) * ${p}`],[b,x,w]=h>1?[""+(o-1)/(h-1),"(x2-x1) * width_ratio",`x1*${f} + float(x)*(width_scale)`]:["0.0","0.0",`0.5 * (x1+x2) * ${f}`];this.userCode=`\n      const float height_ratio = float(${m});\n      const float width_ratio = float(${b});\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int y = coords[1];\n        int x = coords[2];\n        int d = coords[3];\n\n        // get box vals\n        float y1 = getBoxes(b,0);\n        float x1 = getBoxes(b,1);\n        float y2 = getBoxes(b,2);\n        float x2 = getBoxes(b,3);\n\n        // get image in batch index\n        int bInd = round(getBoxInd(b));\n        if(bInd < 0 || bInd >= ${a}) {\n          return;\n        }\n\n        float height_scale = ${g};\n        float width_scale = ${x};\n\n        float in_y = ${y};\n        if( in_y < 0.0 || in_y > ${p} ) {\n          setOutput(float(${s}));\n          return;\n        }\n        float in_x = ${w};\n        if( in_x < 0.0 || in_x > ${f} ) {\n          setOutput(float(${s}));\n          return;\n        }\n\n        vec2 sourceFracIndexCR = vec2(in_x,in_y);\n        if(${d} == 1) {\n          // Compute the four integer indices.\n          ivec2 sourceFloorCR = ivec2(sourceFracIndexCR);\n          ivec2 sourceCeilCR = ivec2(ceil(sourceFracIndexCR));\n\n          float topLeft = getImage(b, sourceFloorCR.y, sourceFloorCR.x, d);\n          float bottomLeft = getImage(b, sourceCeilCR.y, sourceFloorCR.x, d);\n          float topRight = getImage(b, sourceFloorCR.y, sourceCeilCR.x, d);\n          float bottomRight = getImage(b, sourceCeilCR.y, sourceCeilCR.x, d);\n\n          vec2 fracCR = sourceFracIndexCR - vec2(sourceFloorCR);\n\n          float top = topLeft + (topRight - topLeft) * fracCR.x;\n          float bottom = bottomLeft + (bottomRight - bottomLeft) * fracCR.x;\n          float newValue = top + (bottom - top) * fracCR.y;\n          setOutput(newValue);\n        } else {\n          // Compute the coordinators of nearest neighbor point.\n          ivec2 sourceNearestCR = ivec2(floor(\n            sourceFracIndexCR + vec2(0.5,0.5)));\n          float newValue = getImage(b, sourceNearestCR.y, sourceNearestCR.x, d);\n          setOutput(newValue);\n        }\n      }\n    `}}const yB={kernelName:Bt,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{image:s,boxes:a,boxInd:i}=t,{cropSize:o,method:u,extrapolationValue:l}=r,c=new gB(s.shape,a.shape,o,u,l);return n.runWebGLProgram(c,[s,a,i],"float32")}};var bB;!function(e){e.Prod="*",e.Sum="+"}(bB||(bB={}));class xB{constructor(e,t,n,r){this.op=e,this.outputShape=t,this.variableNames=["x"],this.customUniforms=[{name:"index",type:"float"}];const s=this.outputShape.length,a=this.op===bB.Prod?"1.0":"0.0",i=n?a:`getX(${wB(s,"coords",this.op)})`,o=this.outputShape[this.outputShape.length-1];let u="",l="";n?(u=r?"end != "+(o-1):"end != 0",l=r?"end + 1":"end - 1"):(u=r?`end + pow2 < ${o}`:"end >= pow2",l=r?"end + pow2":"end - pow2"),this.userCode=`\n      void main() {\n        ${GM(s)} coords = getOutputCoords();\n        int end = ${vB(s,"coords",this.op)};\n        float val = ${i};\n        int pow2 = int(pow(2.0, index));\n        if (${u}) {\n          int idx = ${l};\n          ${vB(s,"coords",this.op)} = idx;\n          val ${this.op}= getX(${wB(s,"coords",this.op)});\n        }\n        setOutput(val);\n      }\n    `}}function wB(e,t,n){if(1===e)return`${t}`;if(2===e)return`${t}.x, ${t}.y`;if(3===e)return`${t}.x, ${t}.y, ${t}.z`;if(4===e)return`${t}.x, ${t}.y, ${t}.z, ${t}.w`;throw new Error(`Cumulative ${n} for rank ${e} is not yet supported`)}function vB(e,t,n){if(1===e)return`${t}`;if(2===e)return`${t}.y`;if(3===e)return`${t}.z`;if(4===e)return`${t}.w`;throw new Error(`Cumulative ${n} for rank ${e} is not yet supported`)}function kB(e,t,n,r,s,a){const i=t.shape.length,o=nh([r],i);let u=t;null!=o&&(u=Iz({inputs:{x:t},backend:n,attrs:{perm:o}}));const l=sh(1,i)[0];if(l!==i-1)throw new Error(`WebGL cumprod shader expects an inner-most axis=${t.shape.length-1} but got axis=${r}`);const c=u.shape[l];let h=XL({inputs:{x:u},backend:n});for(let t=0;t<=Math.ceil(Math.log2(c))-1;t++){const r=new xB(e,u.shape,!1,a),s=[[t]],i=h;h=n.runWebGLProgram(r,[h],h.dtype,s),n.disposeIntermediateTensorInfo(i)}if(s){const t=new xB(e,u.shape,s,a),r=h;h=n.runWebGLProgram(t,[h],h.dtype),n.disposeIntermediateTensorInfo(r)}if(null!=o){const e=Iz({inputs:{x:h},backend:n,attrs:{perm:rh(o)}});return n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(u),e}return h}const NB={kernelName:zt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a,exclusive:i,reverse:o}=r;return kB(bB.Prod,s,n,a,i,o)}},IB={kernelName:Pt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a,exclusive:i,reverse:o}=r;return kB(bB.Sum,s,n,a,i,o)}},SB={kernelName:Vt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,weights:a}=t,{size:i,binaryOutput:o}=r;if(1===s.shape.length){const e=n.readSync(s.dataId),t=n.readSync(a.dataId),r=CO(e,t,a.dtype,a.shape,i);return n.makeTensorInfo([i],a.dtype,r)}if(2===s.shape.length){const e=n.bufferSync(s),t=n.bufferSync(a),r=$O(e,t,i,o);return n.makeTensorInfo(r.shape,a.dtype,r.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${s.shape.length}.`)}};class TB{constructor(e,t,n){this.variableNames=["x"],this.outputShape=[],this.outputShape=e,this.blockSize=t,this.dataFormat=n,this.userCode=`\n    void main() {\n      ivec4 coords = getOutputCoords();\n      int b = coords[0];\n      int h = ${this.getHeightCoordString()};\n      int w = ${this.getWidthCoordString()};\n      int d = ${this.getDepthCoordString()};\n\n      int in_h = h / ${t};\n      int offset_h = imod(h, ${t});\n      int in_w = w / ${t};\n      int offset_w = imod(w, ${t});\n      int offset_d = (offset_h * ${t} + offset_w) *\n        ${this.getOutputDepthSize()};\n      int in_d = d + offset_d;\n\n      float result = ${this.getInputSamplingString()};\n      setOutput(result);\n    }\n  `}getHeightCoordString(){return"NHWC"===this.dataFormat?"coords[1]":"coords[2]"}getWidthCoordString(){return"NHWC"===this.dataFormat?"coords[2]":"coords[3]"}getDepthCoordString(){return"NHWC"===this.dataFormat?"coords[3]":"coords[1]"}getOutputDepthSize(){return"NHWC"===this.dataFormat?this.outputShape[3]:this.outputShape[1]}getInputSamplingString(){return"NHWC"===this.dataFormat?"getX(b, in_h, in_w, in_d)":"getX(b, in_d, in_h, in_w)"}}const EB={kernelName:Ut,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{blockSize:a,dataFormat:i}=r,o=s.shape[0],u=("NHWC"===i?s.shape[1]:s.shape[2])*a,l=("NHWC"===i?s.shape[2]:s.shape[3])*a,c=("NHWC"===i?s.shape[3]:s.shape[1])/(a*a),h=new TB("NHWC"===i?[o,u,l,c]:[o,c,u,l],a,i);return n.runWebGLProgram(h,[s],s.dtype)}};class CB{constructor(e,t=!1,n=null,r=!1,s=!1){this.variableNames=["x","W"],this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=YM(this.outputShape.length);const a=e.filterHeight,i=e.filterWidth,o=e.outChannels/e.inChannels;let u="",l="";n&&(u=r?`float activation(float a) {\n          float b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:s?`float activation(float a) {\n          float b = getLeakyreluAlphaAtOutCoords();\n          ${n}\n        }`:`\n          float activation(float x) {\n            ${n}\n          }\n        `,l="result = activation(result);");const c=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),s&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${u}\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int d2 = coords.w;\n        int d1 = d2 / ${o};\n        int q = d2 - d1 * ${o};\n\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // Convolve x(?, ?, d1) with w(:, :, d1, q) to get y(yR, yC, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        // TO DO(dsmilkov): Flatten the two for loops and vec4 the operations.\n        for (int wR = 0; wR < ${a}; wR++) {\n          int xR = xRCorner + wR * dilations[0];\n\n          if (xR < 0 || xR >= inDims[0]) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${i}; wC++) {\n            int xC = xCCorner + wC * dilations[1];\n\n            if (xC < 0 || xC >= inDims[1]) {\n              continue;\n            }\n\n            float xVal = getX(batch, xR, xC, d1);\n            float wVal = getW(wR, wC, d1, q);\n            dotProd += xVal * wVal;\n          }\n        }\n\n        float result = dotProd;\n        ${c}\n        ${l}\n        setOutput(result);\n      }\n    `}}class $B{constructor(e,t=!1,n=null,r=!1,s=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=YM(this.outputShape.length);const a=e.outChannels/e.inChannels,i=e.padInfo.left,o=e.strideWidth,u=e.dilationWidth,l=e.filterHeight,c=e.filterWidth,h=c;let d="\n      int xR; int xC; int xCOffset;\n      vec4 wTexel; vec4 previous; vec4 final;";for(let e=0;e<c;e++)d+=`\n          vec4 xTexelC${2*e};\n          int xTexelC${2*e}Ready;\n          vec4 xTexelC${2*e+1};\n          int xTexelC${2*e+1}Ready;\n          vec4 xC${e};`;d+=`\n    for (int r = 0; r < ${l}; r++) {\n      `;for(let e=0;e<c;e++)d+=`\n          xTexelC${2*e} = vec4(0.0);\n          xTexelC${2*e}Ready = 0;\n          xTexelC${2*e+1} = vec4(0.0);\n          xTexelC${2*e+1}Ready = 0;\n          xC${e} = vec4(0.0);`;d+="\n        xR = xRCorner + r * dilations[0];\n        if (xR >=0 && xR < inDims[0]) {\n      ";for(let e=0;e<(h+1)/2;e++){const t=2*e;if(d+=`\n          xC = xCCorner + ${t*u};\n          `,1===o){if(t<c&&(i%2==1?(d+=`\n                xCOffset = xC + 1;\n                if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t}Ready == 0) {\n                  xTexelC${t} = getX(batch, xR, xCOffset, d1);\n\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xCOffset + 1 >= inDims[1]) {\n                    xTexelC${t}.zw = vec2(0.0);\n                  }\n                  xTexelC${t}Ready = 1;\n                }\n              `,d+=1===u&&t>0?`\n                xC${t} = vec4(xTexelC${t-2}.zw, xTexelC${t}.xy);\n                `:`\n                  xCOffset = xC + 1 - 2;\n\n                  if (xCOffset >= 0 && xCOffset < inDims[1]) {\n                    previous = getX(batch, xR, xCOffset, d1);\n\n                    // Need to manually clear unused channels in case\n                    // we're reading from recycled texture.\n                    if (xCOffset + 1 >= inDims[1]) {\n                      previous.zw = vec2(0.0);\n                    }\n\n                    xC${t} = vec4(previous.zw, xTexelC${t}.xy);\n                  } else {\n                    xC${t} = vec4(0.0, 0.0, xTexelC${t}.xy);\n                  }\n                  `):d+=`\n                if (xC >= 0 && xC < inDims[1] && xTexelC${t}Ready == 0) {\n                  xTexelC${t} = getX(batch, xR, xC, d1);\n                  if (xC + 1 >= inDims[1]) {\n                    xTexelC${t}.zw = vec2(0.0);\n                  }\n                  xTexelC${t}Ready = 1;\n                }\n\n                xC${t} = xTexelC${t};\n                `,t+1<c)){const e=i%2==0?te(u):u;u%2==0&&i%2==1||u%2!=0&&i%2!=1?(d+=`\n                  xCOffset = xC + imod(pads[1], 2) + ${e};\n\n                  if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t+1}Ready == 0) {\n                    xTexelC${t+1} = getX(batch, xR, xCOffset, d1);\n\n                    // Need to manually clear unused channels in case\n                    // we're reading from recycled texture.\n                    if (xCOffset + 1 >= inDims[1]) {\n                      xTexelC${t+1}.zw = vec2(0.0);\n                    }\n                    xTexelC${t+1}Ready = 1;\n                  }\n                  `,d+=u>1?`\n                    xCOffset -= 2;\n                    if (xCOffset >= 0 && xCOffset < inDims[1]) {\n                     previous = getX(batch, xR, xCOffset, d1);\n                     xC${t+1} = vec4(previous.zw, xTexelC${t+1}.xy);\n                    } else {\n                     xC${t+1} = vec4(0.0, 0.0, xTexelC${t+1}.xy);\n                    }\n                    `:`\n                    xC${t+1} = vec4(xTexelC${t}.zw, xTexelC${t+1}.xy);\n                    `):d+=1===e?`\n                    xC${t+1} = xTexelC${t};\n                    `:`\n                    xCOffset = xC + ${e};\n\n                    if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t+1}Ready == 0) {\n                      xTexelC${t+1} = getX(batch, xR, xCOffset, d1);\n                      if (xCOffset + 1 >= inDims[1]) {\n                        xTexelC${t+1}.zw = vec2(0.0);\n                      }\n                      xTexelC${t+1}Ready = 1;\n                    }\n\n                    xC${t+1} = xTexelC${t+1};\n                    `}}else t<c&&(i%2==1?(d+=`\n                xCOffset = xC + 1 - strides[1];\n                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t}Ready == 0) {\n                  xTexelC${t} = getX(batch, xR, xCOffset, d1);\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xCOffset + 1 >= inDims[1]) {\n                    xTexelC${t}.zw = vec2(0.0);\n                  }\n                  xTexelC${t}Ready = 1;\n                }\n\n                if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC${t+1}Ready == 0) {\n                  xTexelC${t+1} = getX(batch, xR, xC + 1, d1);\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xC + 2 >= inDims[1]) {\n                    xTexelC${t+1}.zw = vec2(0.0);\n                  }\n                  xTexelC${t+1}Ready = 1;\n                }\n\n                xC${t} = vec4(xTexelC${t}.zw, xTexelC${t+1}.zw);\n              `,t+1<c&&(d+=`\n                  final = vec4(0.0);\n                  xCOffset = xC + 1 + strides[1];\n                  if(xCOffset >= 0 && xCOffset < inDims[1]) {\n                    final = getX(batch, xR, xCOffset, d1);\n                  }\n                  xC${t+1} = vec4(xTexelC${t+1}.xy, final.xy);\n                `)):(d+=`\n                if(xC >= 0 && xC < inDims[1] && xTexelC${t}Ready == 0) {\n                  xTexelC${t} = getX(batch, xR, xC, d1);\n                  if (xC + 1 >= inDims[1]) {\n                    xTexelC${t}.zw = vec2(0.0);\n                  }\n                  xTexelC${t}Ready = 1;\n                }\n\n                xCOffset = xC + strides[1];\n                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t+1}Ready == 0) {\n                  xTexelC${t+1} = getX(batch, xR, xCOffset, d1);\n                  if (xCOffset + 1 >= inDims[1]) {\n                    xTexelC${t+1}.zw = vec2(0.);\n                  }\n                  xTexelC${t+1}Ready = 1;\n                }\n\n                xC${t} = vec4(\n                  xTexelC${t}.xy, xTexelC${t+1}.xy);\n              `,t+1<c&&(d+=`\n                  xC${t+1} = vec4(xTexelC${t}.zw, xTexelC${t+1}.zw);\n                `)));t<c&&(d+=`\n            wTexel = getW(r, ${t}, d1, q);\n            dotProd += xC${t} * vec4(wTexel.xz, wTexel.xz);\n          `,t+1<c&&(d+=`\n              wTexel = getW(r, ${t+1}, d1, q);\n              dotProd += xC${t+1} * vec4(wTexel.xz, wTexel.xz);\n            `))}d+="\n    }\n  ",d+="\n      }\n    ";let p="",f="";n&&(p=r?`vec4 activation(vec4 a) {\n          vec4 b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:s?`vec4 activation(vec4 a) {\n          vec4 b = getLeakyreluAlphaAtOutCoords();\n          ${n}\n        }`:`vec4 activation(vec4 x) {\n          ${n}\n        }`,f="result = activation(result);");const m=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),s&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${p}\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int d2 = coords.w;\n        int d1 = d2 / ${a};\n        int q = d2 - d1 * ${a};\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.\n        vec4 dotProd = vec4(0.000000000000001);\n\n        ${d}\n\n        vec4 result = dotProd - vec4(0.000000000000001);\n        ${m}\n        ${f}\n        setOutput(result);\n      }\n    `}}const AB={kernelName:Wt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:a}=t,{strides:i,pad:o,dilations:u,dimRoundingMode:l}=r;let c=u;null==c&&(c=[1,1]),ie(ec(i,c),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${i} and dilations '${c}'`);const h=jl(s.shape,a.shape,i,c,o,l,!0);let d;d=Xe().getBool("WEBGL_PACK_DEPTHWISECONV")&&h.strideWidth<=2&&h.outChannels/h.inChannels===1?new $B(h):new CB(h);const p=[[h.padInfo.top,h.padInfo.left],[h.strideHeight,h.strideWidth],[h.dilationHeight,h.dilationWidth],[h.inHeight,h.inWidth]];return n.runWebGLProgram(d,[s,a],"float32",p)}};class RB{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideHeight,n=e.strideWidth,r=e.padInfo.top,s=e.padInfo.left,a=e.outChannels/e.inChannels;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int wR = coords.x;\n        int wC = coords.y;\n        int d1 = coords.z;\n        int dm = coords.w;\n        int d2 = d1 * ${a} + dm;\n\n        float dotProd = 0.0;\n\n        // TO DO: Vec4 over the batch size\n        for (int b = 0; b < ${e.batchSize}; b++) {\n          for (int yR = 0; yR < ${e.outHeight}; yR++) {\n            int xR = wR + yR * ${t} - ${r};\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int yC = 0; yC < ${e.outWidth}; yC++) {\n              int xC = wC + yC * ${n} - ${s};\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              float dyValue = getDy(b, yR, yC, d2);\n              float xValue = getX(b, xR, xC, d1);\n              dotProd += (xValue * dyValue);\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class _B{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterHeight,n=e.filterWidth,r=e.strideHeight,s=e.strideWidth,a=t-1-e.padInfo.top,i=n-1-e.padInfo.left,o=e.outChannels/e.inChannels;this.userCode=`\n      const ivec2 pads = ivec2(${a}, ${i});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[3];\n        ivec2 dyCorner = coords.yz - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        float dotProd = 0.0;\n\n        for (int wR = 0; wR < ${t}; wR++) {\n          float dyR = float(dyRCorner + wR) / ${r}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          int wRPerm = ${t} - 1 - wR;\n\n          for (int wC = 0; wC < ${n}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${s}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            int wCPerm = ${n} - 1 - wC;\n\n            // TO DO: Vec4 over the channelMul\n            for (int dm = 0; dm < ${o}; dm++) {\n              int d2 = d1 * ${o} + dm;\n              float xValue = getDy(batch, idyR, idyC, d2);\n              float wValue = getW(wRPerm, wCPerm, d1, dm);\n              dotProd += xValue * wValue;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const DB={kernelName:Gt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,dy:a}=t,{strides:i,dilations:o,pad:u,dimRoundingMode:l,filterShape:c}=r,h=jl(s.shape,c,i,o,u,l,!0),d=new RB(h);return n.runWebGLProgram(d,[s,a],"float32")}},FB={kernelName:Ht,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,filter:a}=t,{strides:i,dilations:o,pad:u,dimRoundingMode:l,inputShape:c}=r,h=jl(c,a.shape,i,o,u,l,!0),d=new _B(h);return n.runWebGLProgram(d,[s,a],"float32")}};class MB{constructor(e){this.variableNames=["X"],this.outputShape=[e,e],this.userCode="\n      void main() {\n          ivec2 coords = getOutputCoords();\n          float val = coords[0] == coords[1] ? getX(coords[0]) : 0.0;\n          setOutput(val);\n      }\n    "}}const OB={kernelName:jt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r}=t,s=[...r.shape,...r.shape],a=le(r.shape),i=fz({inputs:{x:r},backend:n,attrs:{shape:[a]}}),o=new MB(a),u=n.runWebGLProgram(o,[i],i.dtype),l=fz({inputs:{x:u},backend:n,attrs:{shape:s}});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(u),l}};class LB{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;const{inHeight:t,inWidth:n,padInfo:r,strideHeight:s,strideWidth:a,filterHeight:i,filterWidth:o,dilationHeight:u,dilationWidth:l}=e,{top:c,left:h}=r;this.userCode=`\n      const ivec2 strides = ivec2(${s}, ${a});\n      const ivec2 pads = ivec2(${c}, ${h});\n      const float neg_infinity = -3.4e38;\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        int d1 = coords.w;\n        ivec2 outTopLeftCorner =\n            coords.yz * strides - pads;\n        int hBeg = outTopLeftCorner.x;\n        int wBeg = outTopLeftCorner.y;\n\n        float curVal = neg_infinity;\n        for (int h = 0; h < ${i}; h++) {\n          int hIn = hBeg + h * ${u};\n\n          if (hIn >= 0 && hIn < ${t}) {\n            for (int w = 0; w < ${o}; w++) {\n              int wIn = wBeg + w * ${l};\n\n              if (wIn >= 0 && wIn < ${n}) {\n                float xVal = getX(batch, hIn, wIn, d1);\n                float wVal = getW(h, w, d1);\n\n                float val = xVal + wVal;\n                if (val > curVal) {\n                  curVal = val;\n                }\n              }\n            }\n          }\n        }\n\n        float result = curVal;\n        setOutput(result);\n      }\n    `}}const zB={kernelName:Kt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:a}=t,{strides:i,pad:o,dilations:u}=r,l=Wl(s.shape,a.shape,i,o,"NHWC",u);let c;const h=new LB(l);c=n.runWebGLProgram(h,[s,a],"float32");const d=fz({inputs:{x:c},backend:n,attrs:{shape:l.outShape}});return n.disposeIntermediateTensorInfo(c),d}},PB={kernelName:Qt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{equation:s}=r,a=t,{allDims:i,summedDims:o,idDims:u}=Im(s,a.length);Tm(i.length,u,a);const{path:l,steps:c}=Em(o,u),h=c.length;let d=null,p=i.length;const f=[];for(let e=0;e<h;++e){for(const t of c[e]){const{permutationIndices:e,expandDims:r}=Sm(p,u[t]);let s;Cm(e)?s=a[t]:(s=Iz({inputs:{x:a[t]},backend:n,attrs:{perm:e}}),f.push(s));const i=s.shape.slice();for(let e=0;e<r.length;++e)i.splice(r[e],0,1);de(s.shape,i)||(s=fz({inputs:{x:s},backend:n,attrs:{shape:i}}),f.push(s)),null===d?d=s:(d=dz({inputs:{a:s,b:d},backend:n}),f.push(d))}e<h-1&&(l[e]>=0&&(d=kz({inputs:{x:d},backend:n,attrs:{axis:l[e]-(i.length-p),keepDims:!1}}),f.push(d)),p--)}for(const e of f)e!==d&&n.disposeIntermediateTensorInfo(e);return d}},BB=iz({opSnippet:"return (x >= 0.0) ? x : (exp(x) - 1.0);",packedOpSnippet:"\n  vec4 result;\n\n  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);\n  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);\n  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);\n  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);\n\n  return result;\n"}),VB={kernelName:Jt,backendName:"webgl",kernelFunc:BB},UB={kernelName:en,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n}=e,{dy:r,y:s}=t,a=Xe().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new qL("\n  vec4 bGTEZero = vec4(greaterThanEqual(b, vec4(0.)));\n  return (bGTEZero * a) + ((vec4(1.0) - bGTEZero) * (a * (b + vec4(1.0))));\n",r.shape,s.shape):new jL("return (b >= 0.0) ? a : a * (b + 1.0);",r.shape,s.shape);return n.runWebGLProgram(a,[r,s],r.dtype)}},WB=oz({opSnippet:"return float(a == b);",packedOpSnippet:"\n  return vec4(equal(a, b));\n",dtype:"bool",cpuKernelImpl:FO}),GB={kernelName:nn,backendName:"webgl",kernelFunc:WB},HB=iz({opSnippet:`\n  // Error function is calculated approximately with elementary function.\n  // See "Handbook of Mathematical Functions with Formulas,\n  // Graphs, and Mathematical Tables", Abramowitz and Stegun.\n  float p = ${im};\n  float a1 = ${om};\n  float a2 = ${um};\n  float a3 = ${lm};\n  float a4 = ${cm};\n  float a5 = ${hm};\n\n  float sign = sign(x);\n  x = abs(x);\n  float t = 1.0 / (1.0 + p * x);\n  return sign * (1.0 - (((((a5*t + a4)*t) + a3)*t + a2)*t + a1)*t*exp(-x*x));\n`}),jB={kernelName:tn,backendName:"webgl",kernelFunc:HB},KB=iz({opSnippet:az+"\n  return exp(x);\n",packedOpSnippet:"\n  vec4 result = exp(x);\n  bvec4 isNaN = isnan(x);\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n",cpuKernelImpl:MO,dtype:"float32"}),qB={kernelName:rn,backendName:"webgl",kernelFunc:KB};function XB(e){const{inputs:t,attrs:n,backend:r}=e,{dim:s}=n,{input:a}=t,i=a.shape.length,o=a.shape.slice();let u=s;return s<0&&(ie(-(i+1)<=s,()=>`Axis must be in the interval [${-(i+1)}, ${i}]`),u=i+s+1),o.splice(u,0,1),fz({inputs:{x:a},backend:r,attrs:{shape:o}})}const YB={kernelName:sn,backendName:"webgl",kernelFunc:XB},ZB="return exp(x) - 1.0;",QB=iz({opSnippet:ZB,packedOpSnippet:ZB,cpuKernelImpl:OO}),JB={kernelName:an,backendName:"webgl",kernelFunc:QB};class eV{constructor(e,t,n){this.variableNames=["real","imag"];const r=t[1];this.outputShape=t;const s=n?`2.0 * ${Math.PI}`:`-2.0 * ${Math.PI}`,a=n?`${r}.0`:"1.0";let i;if("real"===e)i="return real * expR - imag * expI;";else{if("imag"!==e)throw new Error(`FFT component must be either "real" or "imag", got ${e}.`);i="return real * expI + imag * expR;"}this.userCode=`\n      const float exponentMultiplier = ${s};\n\n      float unaryOpComplex(float real, float expR, float imag, float expI) {\n        ${i}\n      }\n\n      float mulMatDFT(int batch, int index) {\n        float indexRatio = float(index) / float(${r});\n        float exponentMultiplierTimesIndexRatio =\n            exponentMultiplier * indexRatio;\n\n        float result = 0.0;\n\n        for (int i = 0; i < ${r}; i++) {\n          // x = (-2|2 * PI / N) * index * i;\n          float x = exponentMultiplierTimesIndexRatio * float(i);\n          float expR = cos(x);\n          float expI = sin(x);\n          float real = getReal(batch, i);\n          float imag = getImag(batch, i);\n\n          result +=\n              unaryOpComplex(real, expR, imag, expI) / ${a};\n        }\n\n        return result;\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        setOutput(mulMatDFT(coords[0], coords[1]));\n      }\n    `}}function tV(e,t,n){const r=n.texData.get(e.dataId),s=le(e.shape),a=e.shape[e.shape.length-1],i=fz({inputs:{x:e},backend:n,attrs:{shape:[s/a,a]}}),o=i.shape,u=new eV("real",o,t),l=new eV("imag",o,t),c=[{dataId:r.complexTensorInfos.real.dataId,dtype:r.complexTensorInfos.real.dtype,shape:o},{dataId:r.complexTensorInfos.imag.dataId,dtype:r.complexTensorInfos.imag.dtype,shape:o}],h=n.runWebGLProgram(u,c,"float32"),d=n.runWebGLProgram(l,c,"float32"),p=ZL({inputs:{real:h,imag:d},backend:n});n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(d);const f=fz({inputs:{x:p},backend:n,attrs:{shape:e.shape}});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(p),f}const nV={kernelName:on,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:r}=t;return tV(r,!1,n)}};class rV{constructor(e,t){this.outputShape=[],this.customUniforms=[{name:"value",type:"float"}],this.variableNames=["x"],this.outputShape=e,this.userCode="\n      void main() {\n        // Input can be obtained from uniform value.\n        setOutput(value);\n      }\n    "}}function sV(e){const{backend:t,attrs:n}=e,{shape:r,value:s}=n;let{dtype:a}=n;if(a=a||_e(s),"string"===a){const e=Ne(a,le(r));return e.fill(s),t.makeTensorInfo(r,a,e)}{const e=new rV(r,s),n=[[s]];return t.runWebGLProgram(e,[],a,n)}}const aV={kernelName:un,backendName:"webgl",kernelFunc:sV};class iV{constructor(e){this.variableNames=["Image"],this.outputShape=[];const t=e[2];this.outputShape=e,this.userCode=`\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int x = coords[2];\n\n          int coordX = ${t} - x - 1;\n          float outputValue;\n          if(coordX >= 0 && coordX < ${t}) {\n            outputValue = getImage(coords[0], coords[1], coordX, coords[3]);\n          } else {\n            outputValue = getImage(coords[0], coords[1], coords[2], coords[3]);\n          }\n          setOutput(outputValue);\n        }\n    `}}const oV={kernelName:ln,backendName:"webgl",kernelFunc:({inputs:e,backend:t})=>{const{image:n}=e,r=t,s=new iV(n.shape);return r.runWebGLProgram(s,[n],n.dtype)}},uV="return floor(x);",lV=iz({opSnippet:uV,packedOpSnippet:uV,cpuKernelImpl:LO}),cV={kernelName:cn,backendName:"webgl",kernelFunc:lV},hV=oz({opSnippet:"\n  float s = sign(a) * sign(b);\n  int ia = round(a);\n  int ib = round(b);\n  if (ib != 0) {\n    // Windows (D3D) wants guaranteed non-zero int division at compile-time.\n    return float(idiv(ia, ib, s));\n  } else {\n    return NAN;\n  }\n",packedOpSnippet:"\n  ivec4 ia = round(a);\n  ivec4 ib = round(b);\n  bvec4 cond = notEqual(ib, ivec4(0));\n  ivec4 result = ivec4(0);\n  vec4 s = sign(a) * sign(b);\n\n  // Windows (D3D) wants guaranteed non-zero int division at compile-time.\n  if (cond[0]) {\n    result[0] = idiv(ia[0], ib[0], s[0]);\n  }\n  if (cond[1]) {\n    result[1] = idiv(ia[1], ib[1], s[1]);\n  }\n  if (cond[2]) {\n    result[2] = idiv(ia[2], ib[2], s[2]);\n  }\n  if (cond[3]) {\n    result[3] = idiv(ia[3], ib[3], s[3]);\n  }\n  return vec4(result);\n",dtype:"int32"}),dV={kernelName:hn,backendName:"webgl",kernelFunc:hV};class pV{constructor(e){this.variableNames=["A"];const t=$M(),[n,r]=e;this.outputShape=e,this.userCode=`\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int texR = coords[0];\n        int texC = coords[1];\n        int depth = coords[2];\n        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${r}.0, ${n}.0);\n\n        vec4 values = ${t.texture2D}(A, uv);\n        float value;\n        if (depth == 0) {\n          value = values.r;\n        } else if (depth == 1) {\n          value = values.g;\n        } else if (depth == 2) {\n          value = values.b;\n        } else if (depth == 3) {\n          value = values.a;\n        }\n\n        setOutput(floor(value * 255.0 + 0.5));\n      }\n    `}}class fV{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0;const t=$M(),[n,r]=e;this.outputShape=e,this.userCode=`\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int texR = coords[0];\n        int texC = coords[1];\n        int depth = coords[2];\n\n        vec4 result = vec4(0.);\n\n        for(int row=0; row<=1; row++) {\n          for(int col=0; col<=1; col++) {\n            texC = coords[1] + row;\n            depth = coords[2] + col;\n\n            vec2 uv = (vec2(texC, texR) + halfCR) /\n                       vec2(${r}.0, ${n}.0);\n            vec4 values = ${t.texture2D}(A, uv);\n            float value;\n            if (depth == 0) {\n              value = values.r;\n            } else if (depth == 1) {\n              value = values.g;\n            } else if (depth == 2) {\n              value = values.b;\n            } else if (depth == 3) {\n              value = values.a;\n            }\n\n            result[row * 2 + col] = floor(value * 255.0 + 0.5);\n          }\n        }\n\n        ${t.output} = result;\n      }\n    `}}const mV={kernelName:fs,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e;let{pixels:s}=t;const{numChannels:a}=r,i="undefined"!=typeof HTMLVideoElement&&s instanceof HTMLVideoElement,o="undefined"!=typeof HTMLImageElement&&s instanceof HTMLImageElement,[u,l]=i?[s.videoWidth,s.videoHeight]:[s.width,s.height],c=[l,u],h=[l,u,a];if(o||i){const e=Xe().getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU");null!=gV&&e===yV||(yV=e,gV=document.createElement("canvas").getContext("2d",{willReadFrequently:yV})),gV.canvas.width=u,gV.canvas.height=l,gV.drawImage(s,0,0,u,l),s=gV.canvas}const d=n.makeTensorInfo(c,"int32");n.texData.get(d.dataId).usage=IF.PIXELS,n.gpgpu.uploadPixelDataToTexture(n.getTexture(d.dataId),s);const p=Xe().getBool("WEBGL_PACK")?new fV(h):new pV(h),f=n.runWebGLProgram(p,[d],"int32");return n.disposeData(d.dataId),f}};let gV,yV=Xe().getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU");const bV={kernelName:ys,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:a,bias:i,preluActivationWeights:o}=t,{strides:u,pad:l,dataFormat:c,dilations:h,dimRoundingMode:d,activation:p,leakyreluAlpha:f}=r,m=nc(c),g=jl(s.shape,a.shape,u,h,l,d,!1,m);let y;const b=[],x=null!=i,w=null!=o,v="leakyrelu"===p,k=()=>{const e=[s,a],t=(e,t)=>{if("NCHW"===t&&1===e.shape.length&&1!==e.shape[0]){const t=fz({inputs:{x:e},backend:n,attrs:{shape:[e.shape[0],1,1]}});return b.push(t),t}return e};if(x&&e.push(t(i,c)),w&&e.push(t(o,c)),v){const t=n.makeTensorInfo([],"float32",Ks(f,"float32"));e.push(t),b.push(t)}return e};if(1!==g.filterHeight||1!==g.filterWidth||1!==g.dilationHeight||1!==g.dilationWidth||1!==g.strideHeight||1!==g.strideWidth||"SAME"!==g.padInfo.type&&"VALID"!==g.padInfo.type)if(g.strideWidth<=2&&"channelsLast"===m&&Xe().getBool("WEBGL_EXP_CONV")){const e=p?uz(p,!0):null,t=new YP(g,x,e,w,v),r=[[g.padInfo.top,g.padInfo.left],[g.strideHeight,g.strideWidth],[g.dilationHeight,g.dilationWidth],[g.inHeight,g.inWidth]],s=k();y=n.runWebGLProgram(t,s,"float32",r)}else if(Xe().getBool("WEBGL_CONV_IM2COL"))y=eB({x:s,filter:a,convInfo:g,backend:n,bias:i,activation:p,preluActivationWeights:o,leakyreluAlpha:f});else{const e=p?uz(p,!1):null,t=new qP(g,x,e,w,v),r=k();y=n.runWebGLProgram(t,r,"float32")}else y=JP({x:s,filter:a,convInfo:g,backend:n,bias:i,activation:p,preluActivationWeights:o,leakyreluAlpha:f});const N=fz({inputs:{x:y},backend:n,attrs:{shape:g.outShape}});return b.push(y),b.forEach(e=>n.disposeIntermediateTensorInfo(e)),N}},xV={kernelName:bs,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:a,bias:i,preluActivationWeights:o}=t,{strides:u,pad:l,dilations:c,dimRoundingMode:h,activation:d,leakyreluAlpha:p}=r,f=[];let m=c;null==m&&(m=[1,1]),ie(ec(u,m),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${u} and dilations '${m}'`);const g=jl(s.shape,a.shape,u,m,l,h,!0),y=Xe().getBool("WEBGL_PACK_DEPTHWISECONV")&&g.strideWidth<=2&&g.outChannels/g.inChannels===1,b=d?uz(d,y):null,x=[s,a],w=null!=i,v=null!=o,k="leakyrelu"===d;if(w&&x.push(i),v&&x.push(o),k){const e=n.makeTensorInfo([],"float32",Ks(p,"float32"));x.push(e),f.push(e)}let N;N=y?new $B(g,w,b,v,k):new CB(g,w,b,v,k);const I=[[g.padInfo.top,g.padInfo.left],[g.strideHeight,g.strideWidth],[g.dilationHeight,g.dilationWidth],[g.inHeight,g.inWidth]],S=n.runWebGLProgram(N,x,"float32",I);return f.forEach(e=>n.disposeIntermediateTensorInfo(e)),S}};class wV{constructor(e,t,n,r){this.sliceDim=e,this.strides=t,this.paramsShape=r,this.variableNames=["x","indices"],this.outputShape=n;const s=GM(n.length);let a="\n    int index;";for(let e=0;e<this.sliceDim;e++)a+=`\n          index = round(getIndices(coords[0], ${e}));\n          out_of_bounds = out_of_bounds || index < 0;\n          out_of_bounds = out_of_bounds || index >= ${this.paramsShape[e]};\n          flattenIndex += index * ${this.strides[e]};`;this.userCode=`\n         void main() {\n          ${s} coords = getOutputCoords();\n          int flattenIndex = 0;\n          bool out_of_bounds = false;\n\n          ${a}\n\n          setOutput(out_of_bounds ? 0.0 : getX(flattenIndex, coords[1]));\n        }\n      `}}const vV={kernelName:fn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{params:r,indices:s}=t,a=s.shape,i=a[a.length-1],o=le(r.shape),[u,l,c,h]=ju(r,s),d=fz({inputs:{x:s},backend:n,attrs:{shape:[l,i]}}),p=fz({inputs:{x:r},backend:n,attrs:{shape:[le(r.shape)/c,c]}});if(n.shouldExecuteOnCPU([r,s])||"string"===r.dtype){const e=n.readSync(s.dataId),t=n.bufferSync(r),a=zO(e,t,r.dtype,l,i,c,h,r.shape,o);return n.makeTensorInfo(u,r.dtype,a.values)}const f=new wV(i,h,[l,c],r.shape),m=n.runWebGLProgram(f,[p,d],p.dtype),g=fz({inputs:{x:m},backend:n,attrs:{shape:u}});return n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(m),g}};class kV{constructor(e,t){this.variableNames=["A","indices"],this.outputShape=t,this.rank=t.length;const n=GM(this.rank),r=function(e){const t=["resRC.x","resRC.y","resRC.z","resRC.w"],n=[];for(let r=0;r<e.length;r++)2===r?n.push("index"):n.push(`${t[r]}`);return n.join()}(e);this.userCode=`\n      void main() {\n        ${n} resRC = getOutputCoords();\n        int index = int(getIndices(resRC.x, resRC.z));\n        float inBounds = (index >= 0) && (index < ${e[2]}) ? 1.0 : 0.0;\n        setOutput(inBounds * getA(${r}));\n      }\n    `}}function NV(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,indices:a}=t,{axis:i,batchDims:o}=r,u=we(i,s.shape)[0];if(Xe().get("DEBUG")){const e=n.readSync(a.dataId),t=s.shape[u];for(let n=0;n<e.length;++n){const r=e[n];ie(r<=t-1&&r>=0,()=>`GatherV2: the index value ${r} is not in [0, ${t-1}]`)}}const l=Hm(s,a,u,o),c=le(a.shape),h=[],d=fz({inputs:{x:s},backend:n,attrs:{shape:[l.batchSize,l.outerSize,l.dimSize,l.sliceSize]}}),p=fz({inputs:{x:a},backend:n,attrs:{shape:[l.batchSize,c/l.batchSize]}});h.push(d),h.push(p);const f=[l.batchSize,l.outerSize,c/l.batchSize,l.sliceSize];if(n.shouldExecuteOnCPU([s,a])||"string"===s.dtype){const e=n.bufferSync(p),t=n.bufferSync(d),r=PO(t,e,f);return h.forEach(e=>n.disposeIntermediateTensorInfo(e)),n.makeTensorInfo(l.outputShape,r.dtype,r.values)}const m=new kV(d.shape,f),g=n.runWebGLProgram(m,[d,p],d.dtype);h.push(g);const y=fz({inputs:{x:g},backend:n,attrs:{shape:l.outputShape}});return h.forEach(e=>n.disposeIntermediateTensorInfo(e)),y}const IV={kernelName:pn,backendName:"webgl",kernelFunc:NV},SV=oz({opSnippet:"return float(a > b);",packedOpSnippet:"\n  return vec4(greaterThan(a, b));\n",cpuKernelImpl:BO,dtype:"bool"}),TV={kernelName:mn,backendName:"webgl",kernelFunc:SV},EV=oz({opSnippet:"return float(a >= b);",packedOpSnippet:"\n  return vec4(greaterThanEqual(a, b));\n",dtype:"bool",cpuKernelImpl:VO}),CV={kernelName:gn,backendName:"webgl",kernelFunc:EV},$V={kernelName:bn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:r}=t;return tV(r,!0,n)}},AV=iz({opSnippet:"return float(!isnan(x) && !isinf(x));",dtype:"bool"}),RV={kernelName:wn,backendName:"webgl",kernelFunc:AV},_V=iz({opSnippet:"return float(isinf(x));",dtype:"bool"}),DV={kernelName:vn,backendName:"webgl",kernelFunc:_V},FV=iz({opSnippet:"return float(isnan(x));",dtype:"bool"}),MV={kernelName:kn,backendName:"webgl",kernelFunc:FV},OV=oz({opSnippet:"return float(a < b);",packedOpSnippet:"\n  return vec4(lessThan(a, b));\n",cpuKernelImpl:UO,dtype:"bool"}),LV={kernelName:In,backendName:"webgl",kernelFunc:OV},zV=oz({opSnippet:"return float(a <= b);",packedOpSnippet:"\n  return vec4(lessThanEqual(a, b));\n",cpuKernelImpl:WO,dtype:"bool"}),PV={kernelName:Sn,backendName:"webgl",kernelFunc:zV},BV={kernelName:Tn,backendName:"webgl",kernelFunc:function(e){const{backend:t,attrs:n}=e,{start:r,stop:s,num:a}=n,i=GO(r,s,a);return t.makeTensorInfo([i.length],"float32",i)}},VV=iz({opSnippet:az+"\n  return x < 0.0 ? 0./0. : log(x);\n",packedOpSnippet:"\n  vec4 result = log(x);\n  bvec4 isNaN = isnan(x);\n  result.r = isNaN.r ? x.r : (x.r < 0.0 ? 0./0. : result.r);\n  result.g = isNaN.g ? x.g : (x.g < 0.0 ? 0./0. : result.g);\n  result.b = isNaN.b ? x.b : (x.b < 0.0 ? 0./0. : result.b);\n  result.a = isNaN.a ? x.a : (x.a < 0.0 ? 0./0. : result.a);\n  return result;\n",cpuKernelImpl:HO}),UV={kernelName:En,backendName:"webgl",kernelFunc:VV},WV=iz({opSnippet:az+"\n  return log(1.0 + x);\n"}),GV={kernelName:Cn,backendName:"webgl",kernelFunc:WV},HV=oz({opSnippet:"return float(a >= 1.0 && b >= 1.0);",packedOpSnippet:"\n  return vec4(\n    vec4(greaterThanEqual(a, vec4(1.0))) *\n    vec4(greaterThanEqual(b, vec4(1.0))));\n",dtype:"bool"}),jV={kernelName:$n,backendName:"webgl",kernelFunc:HV},KV=iz({opSnippet:"return float(!(x >= 1.0));"}),qV={kernelName:An,backendName:"webgl",kernelFunc:KV},XV=oz({opSnippet:"return float(a >= 1.0 || b >= 1.0);",packedOpSnippet:"\n  return min(\n    vec4(greaterThanEqual(a, vec4(1.0))) +\n    vec4(greaterThanEqual(b, vec4(1.0))),\n    vec4(1.0));\n",dtype:"bool"}),YV={kernelName:Rn,backendName:"webgl",kernelFunc:XV};class ZV{constructor(e,t,n,r,s){this.variableNames=["x"],this.outputShape=[];const a=t,i=e[3]-1;let o;this.outputShape=e;const u=`float(${n}) + float(${r}) * sum`;o=.5===s?`inversesqrt(${u})`:1===s?`1.0/(${u})`:`exp(log(${u}) * float(-${s}));`,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int r = coords[1];\n        int c = coords[2];\n        int d = coords[3];\n        float x = getX(b, r, c, d);\n        float sum = 0.0;\n        for (int j = -${a}; j <= ${a}; j++) {\n          int idx = d + j;\n          if (idx >= 0 && idx <=  ${i}) {\n            float z = getX(b, r, c, idx);\n            sum += z * z;\n          }\n        }\n        float val = x * ${o};\n        setOutput(val);\n      }\n    `}}class QV{constructor(e,t,n,r,s){this.variableNames=["x"],this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0;const a=t,i=e[3]-1;let o;this.outputShape=e;const u=`float(${n}) + float(${r}) * sum`;o=.5===s?`inversesqrt(${u})`:1===s?`1.0/(${u})`:`exp(log(${u}) * float(-${s}));`,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords.x;\n        int r = coords.y;\n        int c = coords.z;\n        int d = coords.w;\n\n        bool hasNextCol = d < ${this.outputShape[3]};\n        bool hasNextRow = c < ${this.outputShape[2]};\n\n        vec4 sum = vec4(0.);\n        vec4 xFragAtOutputCoords = getX(b, r, c, d);\n\n        vec4 xAtOutputCoords = vec4(\n          getChannel(xFragAtOutputCoords, vec2(c, d)),\n          hasNextCol ?\n            getChannel(xFragAtOutputCoords, vec2(c, d + 1)) : 0.0,\n          hasNextRow ?\n            getChannel(xFragAtOutputCoords , vec2(c + 1, d)) : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getChannel(xFragAtOutputCoords, vec2(c + 1, d + 1)) : 0.0\n        );\n\n        int firstChannel = d - ${a};\n        vec2 cache = vec2(0.);\n        if(firstChannel >= 0){\n          vec4 firstChannelFrag = getX(b, r, c, firstChannel);\n          cache.x = getChannel(firstChannelFrag, vec2(c, firstChannel));\n            if(hasNextRow){\n              cache.y = getChannel(firstChannelFrag, vec2(c + 1, firstChannel));\n            }\n        }\n\n        ivec2 depth = ivec2(d, d + 1);\n        for (int j = - ${a}; j <= ${a}; j++) {\n          ivec2 idx = depth + j;\n          bvec2 aboveLowerBound = greaterThanEqual(idx, ivec2(0));\n          bvec2 belowUpperBound = lessThanEqual(idx, ivec2(${i}));\n\n          bool depthInRange = aboveLowerBound.x && belowUpperBound.x;\n          bool depthPlusOneInRange = aboveLowerBound.y && belowUpperBound.y;\n\n          if(depthInRange || depthPlusOneInRange){\n            vec4 z = vec4(0.);\n            vec4 xFragAtCurrentDepth;\n            z.xz = cache.xy;\n            if(depthPlusOneInRange && hasNextCol){\n              xFragAtCurrentDepth = idx.y != d ?\n                getX(b, r, c, idx.y) : xFragAtOutputCoords;\n              z.y = getChannel(xFragAtCurrentDepth, vec2(c, idx.y));\n              if(hasNextRow){\n                z.w = getChannel(xFragAtCurrentDepth, vec2(c + 1, idx.y));\n              }\n            }\n            cache.xy = z.yw;\n            sum += z * z;\n          }\n        }\n        vec4 result = xAtOutputCoords * ${o};\n        setOutput(result);\n      }\n    `}}const JV={kernelName:Mn,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{depthRadius:a,bias:i,alpha:o,beta:u}=r,l=Xe().getBool("WEBGL_PACK_NORMALIZATION")?new QV(s.shape,a,i,o,u):new ZV(s.shape,a,i,o,u);return n.runWebGLProgram(l,[s],s.dtype)}};class eU{constructor(e,t,n,r,s){this.variableNames=["inputImage","outputImage","dy"],this.outputShape=[],this.outputShape=e,this.depth=e[3],this.depthRadius=t,this.bias=n,this.alpha=r,this.beta=s,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int r = coords[1];\n        int c = coords[2];\n\n        float result = 0.0;\n        for (int d = 0; d < ${this.depth}; ++d) {\n          int depthBegin = int(max(0.0, float(d - ${t})));\n          int depthEnd = int(min(float(${this.depth}),\n              float(d + ${t} + 1)));\n\n          const int MIN_DEPTH_BEGIN = 0;\n          const int MAX_DEPTH_END = ${this.depth};\n\n          float norm = 0.0;\n          for (int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k) {\n            if (k < depthBegin){\n              continue;\n            }\n            else if (k >= depthBegin && k < depthEnd) {\n              norm += getInputImage(b, r, c, k) * getInputImage(b, r, c, k);\n            }\n            else {\n              break;\n            }\n          }\n\n          norm = float(${r}) * norm + float(${n});\n\n          for(int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k){\n            if (k < depthBegin){\n              continue;\n            }\n            else if (k >= depthBegin && k < depthEnd){\n              float dyi = -2.0 * float(${r})\n                * float(${s})\n                * getInputImage(b, r, c, k) * getOutputImage(b, r, c, d)\n                / norm;\n              if (k == d) {\n                dyi += pow(norm, -1.0 * ${s});\n              }\n              if (k == coords[3]) {\n                dyi *= getDy(b, r, c, d);\n                result += dyi;\n              }\n            }\n            else {\n              break;\n            }\n          }\n      }\n      setOutput(result);\n      }\n    `}}const tU={kernelName:On,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{x:s,y:a,dy:i}=t,{depthRadius:o,bias:u,alpha:l,beta:c}=r,h=new eU(s.shape,o,u,l,c);return n.runWebGLProgram(h,[s,a,i],s.dtype)}};function nU(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{reductionIndices:a,keepDims:i}=r,o=s.shape.length,u=we(a,s.shape);let l=u;const c=nh(l,o),h=null!=c,d=n.shouldExecuteOnCPU([s]);let p=s;if(h){if(d){const e=n.texData.get(p.dataId).values,t=new Array(o);for(let e=0;e<t.length;e++)t[e]=s.shape[c[e]];const r=wL(e,s.shape,s.dtype,c,t);p=n.makeTensorInfo(t,s.dtype),n.texData.get(p.dataId).values=r}else p=vz(s,c,n);l=sh(l.length,o)}th("max",l,o);const[f,m]=Jc(p.shape,l);let g,y=f;if(i&&(y=eh(f,u)),d){const e=n.texData.get(p.dataId).values,t=jO(e,le(m),y,s.dtype);g=n.makeTensorInfo(y,s.dtype),n.texData.get(g.dataId).values=t}else g=function(e,t,n,r){const s=le(t),a=fz({inputs:{x:e},attrs:{shape:[le(e.shape)/s,s]},backend:r}),i=bz(a,e.dtype,"max",r),o=fz({inputs:{x:i},attrs:{shape:n},backend:r});return r.disposeIntermediateTensorInfo(a),r.disposeIntermediateTensorInfo(i),o}(p,m,y,n);return h&&n.disposeIntermediateTensorInfo(p),g}const rU={kernelName:zn,backendName:"webgl",kernelFunc:nU},sU=oz({opSnippet:HL+"\n  return max(a, b);\n",packedOpSnippet:"\n  vec4 result = vec4(max(a, b));\n  bvec4 isNaNA = isnan(a);\n  bvec4 isNaNB = isnan(b);\n  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);\n  "+KL+"\n  return result;\n",cpuKernelImpl:KO}),aU={kernelName:Pn,backendName:"webgl",kernelFunc:sU},iU={kernelName:Bn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t;EM(s,"maxPool");const{filterSize:a,strides:i,pad:o,dimRoundingMode:u}=r;ie(ec(i,1),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${i} and dilations '1'`);const l=Gl(s.shape,a,i,1,o,u);if(1===l.filterWidth&&1===l.filterHeight&&de(l.inShape,l.outShape))return XL({inputs:{x:s},backend:n});const c=new aP(l,"max",!1);return n.runWebGLProgram(c,[s],s.dtype)}},oU={kernelName:Un,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{filterSize:a,strides:i,pad:o,dataFormat:u,dimRoundingMode:l}=r,c=Hl(s.shape,a,i,[1,1,1],o,l,u),h=new iP(c,"max",!1);return n.runWebGLProgram(h,[s],s.dtype)}};class uU{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;const t=e.strideHeight,n=e.strideWidth,r=e.dilationHeight,s=e.effectiveFilterHeight,a=e.effectiveFilterWidth,i=s-1-e.padInfo.top,o=a-1-e.padInfo.left,u=s*a-1;this.userCode=`\n      const ivec2 pads = ivec2(${i}, ${o});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n\n        ivec2 dyRCCorner = coords.yz - pads;\n        int dyRCorner = dyRCCorner.x;\n        int dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${s};\n          wR += ${r}) {\n          float dyR = float(dyRCorner + wR) / ${t}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          for (int wC = 0; wC < ${a}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${n}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            float dyValue = getDy(b, idyR, idyC, d);\n            int maxPosValue = ${u} - int(getMaxPos(b, idyR, idyC, d));\n\n            // Get the current value, check it against the value from the\n            // position matrix.\n            int curPosValue = wR * ${a} + wC;\n            float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);\n\n            dotProd += dyValue * mask;\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class lU{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;const t=e.strideDepth,n=e.strideHeight,r=e.strideWidth,s=e.dilationDepth,a=e.dilationHeight,i=e.dilationWidth,o=e.effectiveFilterDepth,u=e.effectiveFilterHeight,l=e.effectiveFilterWidth,c=o-1-e.padInfo.front,h=u-1-e.padInfo.top,d=l-1-e.padInfo.left,p=o*u*l-1;this.userCode=`\n      const ivec3 pads = ivec3(${c}, ${h}, ${d});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyDCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        // Convolve dy(?, ?, ?, ch) with pos mask(:, :, :, d) to get\n        // dx(xD, xR, xC, ch).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int wD = 0; wD < ${o};\n           wD += ${s}) {\n          float dyD = float(dyDCorner + wD) / ${t}.0;\n\n          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {\n            continue;\n          }\n          int idyD = int(dyD);\n\n          for (int wR = 0; wR < ${u};\n              wR += ${a}) {\n            float dyR = float(dyRCorner + wR) / ${n}.0;\n\n            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||\n                fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            for (int wC = 0; wC < ${l};\n                wC += ${i}) {\n              float dyC = float(dyCCorner + wC) / ${r}.0;\n\n              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              float dyValue = getDy(batch, idyD, idyR, idyC, ch);\n              int maxPosValue = ${p} -\n                  int(getMaxPos(batch, idyD, idyR, idyC, ch));\n\n              // Get the current value, check it against the value from the\n              // position matrix.\n              int curPosValue =\n                  wD * ${u} * ${l} +\n                  wR * ${l} + wC;\n              float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);\n\n              dotProd += dyValue * mask;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const cU={kernelName:Wn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,input:a}=t,i=a,{filterSize:o,strides:u,pad:l,dimRoundingMode:c}=r,h=Hl(i.shape,o,u,[1,1,1],l,c),d=new iP(h,"max",!0),p=n.runWebGLProgram(d,[i],i.dtype),f=new lU(h),m=n.runWebGLProgram(f,[s,p],i.dtype);return n.disposeIntermediateTensorInfo(p),m}},hU={kernelName:Vn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,input:a,output:i}=t,o=a;EM([a,i],"maxPoolGrad");const{filterSize:u,strides:l,pad:c,dimRoundingMode:h}=r,d=Gl(o.shape,u,l,1,c,h),p=new aP(d,"max",!0),f=n.runWebGLProgram(p,[o],o.dtype),m=new uU(d),g=n.runWebGLProgram(m,[s,f],o.dtype);return n.disposeIntermediateTensorInfo(f),g}},dU={kernelName:Gn,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{x:r}=e,{filterSize:s,strides:a,pad:i,includeBatchInIndex:o}=t,u=n;ie(4===r.shape.length,()=>`Error in maxPool: input must be rank 4 but got rank ${r.shape.length}.`);const l=[1,1];ie(ec(a,l),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${a} and dilations '${l}'`);const c=Gl(r.shape,s,a,l,i),[h,d]=function(e,t,n,r){let s=new aP(n,"max",!1);const a=r.runWebGLProgram(s,[e],"float32");return s=new aP(n,"max",!0,!0,t),[a,r.runWebGLProgram(s,[e],"float32")]}(r,o,c,u);return[h,d]}},pU={kernelName:Hn,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{x:r}=e,{keepDims:s,axis:a}=t,i=n,o=r.shape.length,u=we(a,r.shape);let l=u;const c=nh(l,o),h=null!=c,d=i.shouldExecuteOnCPU([r]),p=[];let f=r;if(h){if(d){const e=i.texData.get(f.dataId).values,t=new Array(o);for(let e=0;e<t.length;e++)t[e]=r.shape[c[e]];const n=wL(e,r.shape,r.dtype,c,t);f=i.makeTensorInfo(t,r.dtype),i.texData.get(f.dataId).values=n}else f=vz(r,c,i);p.push(f),l=sh(l.length,o)}th("sum",l,o);const[m,g]=Jc(f.shape,l);let y=m;s&&(y=eh(m,u));const b=function(e,t,n,r){const s=le(t),a=fz({inputs:{x:e},attrs:{shape:[le(e.shape)/s,s]},backend:r}),i=bz(a,"float32","mean",r),o=fz({inputs:{x:i},attrs:{shape:n},backend:r});return r.disposeIntermediateTensorInfo(a),r.disposeIntermediateTensorInfo(i),o}(f,g,y,i);for(const e of p)i.disposeIntermediateTensorInfo(e);return b}},fU={kernelName:jn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a,keepDims:i}=r,o=s.shape.length,u=we(a,s.shape);let l=u;const c=nh(l,o);let h=s;null!=c&&(h=Iz({inputs:{x:s},backend:n,attrs:{perm:c}}),l=sh(l.length,s.shape.length)),th("min",l,o);const[d,p]=Jc(h.shape,l),f=fz({inputs:{x:h},backend:n,attrs:{shape:[-1,le(p)]}}),m=bz(f,f.dtype,"min",n);let g;return g=fz(i?{inputs:{x:m},backend:n,attrs:{shape:eh(d,u)}}:{inputs:{x:m},backend:n,attrs:{shape:d}}),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),null!=c&&n.disposeIntermediateTensorInfo(h),g}},mU=oz({opSnippet:HL+"\n  return min(a, b);\n",packedOpSnippet:"\n  vec4 result = vec4(min(a, b));\n  bvec4 isNaNA = isnan(a);\n  bvec4 isNaNB = isnan(b);\n  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);\n  "+KL+"\n  return result;\n",cpuKernelImpl:qO}),gU={kernelName:Kn,backendName:"webgl",kernelFunc:mU};class yU{constructor(e,t,n){this.variableNames=["x"],this.outputShape=t.map((t,n)=>t[0]+e[n]+t[1]);const r=e.length,s=GM(r),a=t.map(e=>e[0]).join(","),i=t.map((t,n)=>t[0]+e[n]).join(","),o=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,r),u="reflect"===n?0:1;this.userCode=1!==r?`\n      ${s} start = ${s}(${a});\n      ${s} end = ${s}(${i});\n\n      void main() {\n        ${s} outC = getOutputCoords();\n        for (int i = 0; i < ${r}; i++) {\n          if (outC[i] < start[i]) {\n            outC[i] = start[i] * 2 - outC[i] - ${u};\n          } else if(outC[i] >= end[i]) {\n            outC[i] = (end[i] - 1) * 2 - outC[i] + ${u};\n          }\n        }\n        ${s} coords = outC - start;\n        setOutput(getX(${o}));\n      }\n    `:`\n        int start = ${a};\n        int end = ${i};\n\n        void main() {\n          int outC = getOutputCoords();\n          if (outC < start) {\n            outC = start * 2 - outC - ${u};\n          } else if(outC >= end) {\n            outC = (end - 1) * 2 - outC + ${u};\n          }\n          setOutput(getX(outC - start));\n        }\n      `}}class bU{constructor(e,t,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t.map((t,n)=>t[0]+e[n]+t[1]);const r=e.length,s=GM(r),a=t.map(e=>e[0]).join(","),i=t.map((t,n)=>t[0]+e[n]).join(","),o=NL("rc",r),u=NL("source",r),l=`${o[r-1]} < ${this.outputShape[r-1]}`,c=1===r?"source":`vec2(${u.slice(-2).join()})`,h="reflect"===n?0:1;let d="";if(1===r){const e=`\n        ${s} source = rc;\n        if (source < start) {\n          source = start * 2 - source - ${h};\n        } else if (source >= end) {\n          source = (end - 1) * 2 - source + ${h};\n        }\n        source -= start;\n      `;d=`\n        ${s} rc = outputLoc;\n        ${e}\n        result[0] = getChannel(getX(${u.join()}), ${c});\n        ${o[r-1]} += 1;\n        if(${l}) {\n          ${e}\n          result[1] = getChannel(getX(${u.join()}), ${c});\n        }\n      `}else{const e=`\n        ${s} source = rc;\n        ${s} lt = ${s}(lessThan(source, start));\n        ${s} gte = ${s}(greaterThanEqual(source, end));\n        ${s} orig = 1 - (lt + gte);\n        source = orig * source +\n                lt * (start * 2 - source - ${h}) +\n                gte * ((end - 1) * 2 - source + ${h});\n        source -= start;\n      `;d=`\n        ${s} rc = outputLoc;\n        ${e}\n        result[0] = getChannel(getX(${u.join()}), ${c});\n        ${o[r-1]} += 1;\n        if(${l}) {\n          ${e}\n          result[1] = getChannel(getX(${u.join()}), ${c});\n        }\n        rc = outputLoc;\n        ${o[r-2]} += 1;\n        if(${o[r-2]} < ${this.outputShape[r-2]}) {\n          ${e}\n          result[2] = getChannel(getX(${u.join()}), ${c});\n          ${o[r-1]} += 1;\n          if(${l}) {\n            ${e}\n            result[3] = getChannel(getX(${u.join()}), ${c});\n          }\n        }\n      `}this.userCode=`\n      const ${s} start = ${s}(${a});\n      const ${s} end = ${s}(${i});\n\n      void main() {\n        ${s} outputLoc = getOutputCoords();\n        vec4 result = vec4(0.);\n        ${d}\n        setOutput(result);\n      }\n    `}}const xU={kernelName:qn,backendName:"webgl",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:r}=e,{paddings:s,mode:a}=n,i=Xe().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new bU(r.shape,s,a):new yU(r.shape,s,a);return t.runWebGLProgram(i,[r],r.dtype)}},wU=oz({opSnippet:"if (b == 0.0) return NAN;\n  return mod(a, b);",packedOpSnippet:"\n  vec4 result = mod(a, b);\n  bvec4 isNaN = equal(b, vec4(0.0));\n  "+KL+"\n  return result;\n"}),vU={kernelName:Xn,backendName:"webgl",kernelFunc:wU};class kU{constructor(e,t,n){this.variableNames=["probs"],this.customUniforms=[{name:"seed",type:"float"}],this.outputShape=[e,n],this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n\n        float r = random(seed);\n        float cdf = 0.0;\n\n        for (int i = 0; i < ${t-1}; i++) {\n          cdf += getProbs(batch, i);\n\n          if (r < cdf) {\n            setOutput(float(i));\n            return;\n          }\n        }\n\n        // If no other event happened, last event happened.\n        setOutput(float(${t-1}));\n      }\n    `}}const NU=oz({opSnippet:"\nif (a == b) {\n  return 1.0;\n};\nreturn a / b;",packedOpSnippet:"\n  // vec4 one = vec4(equal(a, b));\n  // return one + (vec4(1.0) - one) * a / b;\n  vec4 result = a / b;\n  if(a.x == b.x) {\n    result.x = 1.;\n  }\n  if(a.y == b.y) {\n    result.y = 1.;\n  }\n  if(a.z == b.z) {\n    result.z = 1.;\n  }\n  if(a.w == b.w) {\n    result.w = 1.;\n  }\n\n  return result;\n",checkOutOfBounds:!0}),IU={kernelName:Zt,backendName:"webgl",kernelFunc:NU},SU="return a - b;",TU=oz({opSnippet:SU,packedOpSnippet:SU,supportsComplex:!0,cpuKernelImpl:yL}),EU={kernelName:ts,backendName:"webgl",kernelFunc:TU};function CU(e){const{inputs:t,backend:n,attrs:r}=e,{logits:s}=t,{dim:a}=r,i=we([a],s.shape),o=nU({inputs:{x:s},backend:n,attrs:{reductionIndices:i,keepDims:!1}}),u=eh(o.shape,i),l=fz({inputs:{x:o},backend:n,attrs:{shape:u}}),c=TU({inputs:{a:s,b:l},backend:n}),h=KB({inputs:{x:c},backend:n}),d=kz({inputs:{x:h},backend:n,attrs:{axis:i,keepDims:!1}}),p=fz({inputs:{x:d},backend:n,attrs:{shape:u}}),f=NU({inputs:{a:h,b:p},backend:n});return n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(l),n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(p),f}const $U={kernelName:Ur,backendName:"webgl",kernelFunc:CU},AU={kernelName:Yn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{logits:s}=t,{numSamples:a,seed:i,normalized:o}=r,u=o?s:CU({inputs:{logits:s},backend:n,attrs:{dim:s.shape.length-1}}),l=u.shape[0],c=u.shape[1],h=new kU(l,c,a),d=[[i]],p=n.runWebGLProgram(h,[u],"int32",d);return o||n.disposeIntermediateTensorInfo(u),p}},RU=RL+"\n  return -x;\n",_U={kernelName:Qn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r}=t;if(n.shouldExecuteOnCPU([r])){const e=n.texData.get(r.dataId),[t,s]=YO(e.values,r.shape,r.dtype);return n.makeTensorInfo(s,r.dtype,t)}let s;return s=Xe().getBool("WEBGL_PACK_UNARY_OPERATIONS")?new OL(r.shape,"\n  vec4 result = -x;\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"):new AL(r.shape,RU),n.runWebGLProgram(s,[r],r.dtype)}},DU=Zp,FU={kernelName:er,backendName:"webgl",kernelFunc:function(e){xs("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:n,attrs:r}=e,{boxes:s,scores:a}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:u}=r,l=n.readSync(s.dataId),c=n.readSync(a.dataId),{selectedIndices:h}=DU(l,c,i,o,u);return n.makeTensorInfo([h.length],"int32",new Int32Array(h))}},MU=Qp,OU={kernelName:tr,backendName:"webgl",kernelFunc:function(e){xs("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:n,attrs:r}=e,{boxes:s,scores:a}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:u,padToMaxOutputSize:l}=r,c=n.readSync(s.dataId),h=n.readSync(a.dataId),{selectedIndices:d,validOutputs:p}=MU(c,h,i,o,u,l);return[n.makeTensorInfo([d.length],"int32",new Int32Array(d)),n.makeTensorInfo([],"int32",new Int32Array([p]))]}},LU=Jp,zU={kernelName:nr,backendName:"webgl",kernelFunc:function(e){xs("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:n,attrs:r}=e,{boxes:s,scores:a}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:u,softNmsSigma:l}=r,c=n.readSync(s.dataId),h=n.readSync(a.dataId),d=i,p=o,f=u,m=l,{selectedIndices:g,selectedScores:y}=LU(c,h,d,p,f,m);return[n.makeTensorInfo([g.length],"int32",new Int32Array(g)),n.makeTensorInfo([y.length],"float32",new Float32Array(y))]}};class PU{constructor(e,t,n,r){this.variableNames=["indices"],this.outputShape=[e,t],this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int index = round(getIndices(coords.x));\n        setOutput(mix(float(${r}), float(${n}),\n                      float(index == coords.y)));\n      }\n    `}}const BU={kernelName:sr,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{indices:s}=t,{dtype:a,depth:i,onValue:o,offValue:u}=r,l=le(s.shape),c=new PU(l,i,o,u),h=fz({inputs:{x:s},backend:n,attrs:{shape:[l]}}),d=n.runWebGLProgram(c,[h],a);n.disposeIntermediateTensorInfo(h);const p=fz({inputs:{x:d},backend:n,attrs:{shape:[...s.shape,i]}});return n.disposeIntermediateTensorInfo(d),p}};function VU(e){const{inputs:t,backend:n}=e,{x:r}=t;if("complex64"===r.dtype){const e=CP({inputs:{input:r},backend:n}),t=VU({inputs:{x:e},backend:n}),s=WP({inputs:{input:r},backend:n}),a=VU({inputs:{x:s},backend:n}),i=ZL({inputs:{real:t,imag:a},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(a),i}return sV({attrs:{shape:r.shape,dtype:r.dtype,value:"string"===r.dtype?"":0},backend:n})}const UU={kernelName:ds,backendName:"webgl",kernelFunc:VU},WU={kernelName:rr,backendName:"webgl",kernelFunc:function e(t){const{inputs:n,backend:r}=t,{x:s}=n;if("string"===s.dtype)throw new Error("onesLike is not supported under string dtype");if("complex64"===s.dtype){const t=CP({inputs:{input:s},backend:r}),n=e({inputs:{x:t},backend:r}),a=WP({inputs:{input:s},backend:r}),i=VU({inputs:{x:a},backend:r}),o=ZL({inputs:{real:n,imag:i},backend:r});return r.disposeIntermediateTensorInfo(t),r.disposeIntermediateTensorInfo(n),r.disposeIntermediateTensorInfo(a),r.disposeIntermediateTensorInfo(i),o}return sV({attrs:{shape:s.shape,dtype:s.dtype,value:1},backend:r})}},GU={kernelName:ar,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{axis:s}=r;if(1===t.length)return XB({inputs:{input:t[0]},backend:n,attrs:{dim:s}});const a=t[0].shape,i=t[0].dtype;t.forEach(e=>{oe(a,e.shape,"All tensors passed to stack must have matching shapes"),ie(i===e.dtype,()=>"All tensors passed to stack must have matching dtypes")});const o=[],u=jP({inputs:t.map(e=>{const t=XB({inputs:{input:e},backend:n,attrs:{dim:s}});return o.push(t),t}),backend:n,attrs:{axis:s}});return o.forEach(e=>n.disposeIntermediateTensorInfo(e)),u}};class HU{constructor(e,t,n){this.variableNames=["x"],this.customUniforms=[{name:"value",type:"float"}],this.outputShape=t.map((t,n)=>t[0]+e[n]+t[1]);const r=e.length,s=GM(r),a=t.map(e=>e[0]).join(","),i=t.map((t,n)=>t[0]+e[n]).join(","),o=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,r);this.userCode=1!==r?`\n      ${s} start = ${s}(${a});\n      ${s} end = ${s}(${i});\n\n      void main() {\n        ${s} outC = getOutputCoords();\n        if (any(lessThan(outC, start)) || any(greaterThanEqual(outC, end))) {\n          setOutput(value);\n        } else {\n          ${s} coords = outC - start;\n          setOutput(getX(${o}));\n        }\n      }\n    `:`\n        int start = ${a};\n        int end = ${i};\n\n        void main() {\n          int outC = getOutputCoords();\n          if (outC < start || outC >= end) {\n            setOutput(value);\n          } else {\n            setOutput(getX(outC - start));\n          }\n        }\n      `}}class jU{constructor(e,t,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"value",type:"float"}],this.outputShape=t.map((t,n)=>t[0]+e[n]+t[1]);const r=e.length,s=GM(r),a=t.map(e=>e[0]).join(","),i=t.map((t,n)=>t[0]+e[n]).join(","),o=NL("rc",r),u=NL("source",r),l=`${o[r-1]} < ${this.outputShape[r-1]}`,c=1===r?"source":`vec2(${u.slice(-2).join()})`,h=[`${s} rc = outputLoc;`,`${o[r-1]} += 1;\n       if(${l}) {\n      `,1===r?"":`}\n       rc = outputLoc;\n       ${o[r-2]} += 1;\n       if(${o[r-2]} < ${this.outputShape[r-2]}) {`,1===r?"":`  ${o[r-1]} += 1;\n         if(${l}) {`],d=1===r?"rc < start || rc >= end":"any(lessThan(rc, start)) || any(greaterThanEqual(rc, end))";let p="";for(let e=0,t=1===r?2:4;e<t;e++)p+=`\n        ${h[e]}\n        if (${d}) {\n          result[${e}] = float(value);\n        } else {\n          ${s} source = rc - start;\n          result[${e}] = getChannel(getX(${u.join()}), ${c});\n        }\n      `;p+=1===r?"} ":"}}",this.userCode=`\n      const ${s} start = ${s}(${a});\n      const ${s} end = ${s}(${i});\n\n      void main() {\n        ${s} outputLoc = getOutputCoords();\n        vec4 result = vec4(0.);\n        ${p}\n        setOutput(result);\n      }\n    `}}const KU=e=>{const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{paddings:a,constantValue:i}=r;if(0===le(s.shape)){const e=a.map((e,t)=>e[0]+s.shape[t]+e[1]);return sV({backend:n,attrs:{shape:e,value:i,dtype:s.dtype}})}const o=Xe().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new jU(s.shape,a,i):new HU(s.shape,a,i),u=[[i]];return n.runWebGLProgram(o,[s],s.dtype,u)},qU={kernelName:ir,backendName:"webgl",kernelFunc:KU},XU=oz({opSnippet:"\n  if(a < 0.0 && floor(b) < b){\n    return NAN;\n  }\n  if (b == 0.0) {\n    return 1.0;\n  }\n  return (round(mod(b, 2.0)) != 1) ?\n      pow(abs(a), b) : sign(a) * pow(abs(a), b);\n",packedOpSnippet:"\n  // isModRound1 has 1 for components with round(mod(b, 2.0)) == 1, 0 otherwise.\n  vec4 isModRound1 = vec4(equal(round(mod(b, 2.0)), ivec4(1)));\n  vec4 multiplier = sign(a) * isModRound1 + (vec4(1.0) - isModRound1);\n  vec4 result = multiplier * pow(abs(a), b);\n\n  // Ensure that a^0 = 1, including 0^0 = 1 as this correspond to TF and JS\n  bvec4 isExpZero = equal(b, vec4(0.0));\n  result.r = isExpZero.r ? 1.0 : result.r;\n  result.g = isExpZero.g ? 1.0 : result.g;\n  result.b = isExpZero.b ? 1.0 : result.b;\n  result.a = isExpZero.a ? 1.0 : result.a;\n\n  bvec4 isNaN1 = lessThan(a, vec4(0.0));\n  bvec4 isNaN2 = lessThan(floor(b), b);\n  bvec4 isNaN = bvec4(isNaN1.x && isNaN2.x, isNaN1.y && isNaN2.y, isNaN1.z && isNaN2.z, isNaN1.w && isNaN2.w);\n  "+KL+"\n  return result;\n"}),YU={kernelName:ur,backendName:"webgl",kernelFunc:XU},ZU={kernelName:cr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a,keepDims:i}=r,o=s.shape.length,u=[],l=we(a,s.shape);let c=l;const h=nh(c,o);let d,p=s;if(null!=h&&(p=Iz({inputs:{x:s},backend:n,attrs:{perm:h}}),c=sh(c.length,o),u.push(p)),th("prod",c,o),n.shouldExecuteOnCPU([p])){const e=n.texData.get(p.dataId).values,{outVals:t,outShape:r,outDtype:s}=QO(p.shape,p.dtype,e,c);d=n.makeTensorInfo(r,s,t)}else{const[e,t]=Jc(p.shape,c),r=le(t),a=fz({inputs:{x:p},backend:n,attrs:{shape:[-1,r]}}),i=bz(a,Na(s.dtype),"prod",n);d=fz({inputs:{x:i},backend:n,attrs:{shape:e}}),u.push(a),u.push(i)}if(i){u.push(d);const e=eh(d.shape,l);d=fz({inputs:{x:d},backend:n,attrs:{shape:e}})}return u.forEach(e=>n.disposeIntermediateTensorInfo(e)),d}},QU={kernelName:hr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{paramsNestedSplits:s,paramsDenseValues:a,indices:i}=t,{outputRaggedRank:o}=r,u=s.map(e=>n.readSync(e.dataId)),l=s.map(e=>e.shape),c=n.readSync(a.dataId),h=n.readSync(i.dataId),[d,p,f]=JO(u,l,c,a.shape,a.dtype,h,i.shape,o),m=d.map(e=>n.makeTensorInfo([e.length],"int32",e)),g=n.makeTensorInfo(f,a.dtype,p);return m.concat([g])}},JU={kernelName:dr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{starts:r,limits:s,deltas:a}=t,i=n.readSync(r.dataId),o=n.readSync(s.dataId),u=n.readSync(a.dataId),[l,c]=eL(i,r.shape,r.dtype,o,s.shape,u,a.shape);return[n.makeTensorInfo([l.length],"int32",l),n.makeTensorInfo([c.length],r.dtype,c)]}},eW={kernelName:pr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{shape:s,values:a,defaultValue:i,rowPartitionTensors:o}=t,{rowPartitionTypes:u}=r,l=n.readSync(s.dataId),c=n.readSync(a.dataId),h=n.readSync(i.dataId),d=o.map(e=>n.readSync(e.dataId)),p=o.map(e=>e.shape),[f,m]=tL(l,s.shape,c,a.shape,a.dtype,h,i.shape,d,p,u);return n.makeTensorInfo(f,a.dtype,m)}},tW=e=>{const{backend:t,attrs:n}=e,{start:r,stop:s,step:a,dtype:i}=n,o=nL(r,s,a,i);return t.makeTensorInfo([o.length],i,o)},nW={kernelName:fr,backendName:"webgl",kernelFunc:tW},rW=iz({opSnippet:"return 1.0 / x;"}),sW={kernelName:gr,backendName:"webgl",kernelFunc:rW},aW=iz({opSnippet:RL+"\n  return (x < 0.0) ? 0.0 : x;\n",packedOpSnippet:"\n  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"}),iW={kernelName:yr,backendName:"webgl",kernelFunc:aW},oW=iz({opSnippet:RL+"\n  return (x < 0.0) ? 0.0 : min(6.0, x);\n",packedOpSnippet:"\n  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"}),uW={kernelName:Nr,backendName:"webgl",kernelFunc:oW};class lW{constructor(e,t,n,r,s){this.variableNames=["A"],this.outputShape=[];const[a,i,o,u]=e;this.outputShape=[a,t,n,u];const l=[r&&t>1?i-1:i,r&&n>1?o-1:o],c=[r&&t>1?t-1:t,r&&n>1?n-1:n];let h;h=s?"(vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC - vec2(0.5)":"vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\n          ${l[0]/c[0]},\n          ${l[1]/c[1]});\n      const vec2 inputShapeRC = vec2(${i}.0, ${o}.0);\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        ivec2 yRC = coords.yz;\n\n        // Fractional source index.\n        vec2 sourceFracIndexRC = ${h};\n\n        // Compute the four integer indices.\n        ivec2 sourceFloorRC = ivec2(max(sourceFracIndexRC, vec2(0.0)));\n        ivec2 sourceCeilRC = ivec2(\n          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));\n\n        float topLeft = getA(b, sourceFloorRC.x, sourceFloorRC.y, d);\n        float bottomLeft = getA(b, sourceCeilRC.x, sourceFloorRC.y, d);\n        float topRight = getA(b, sourceFloorRC.x, sourceCeilRC.y, d);\n        float bottomRight = getA(b, sourceCeilRC.x, sourceCeilRC.y, d);\n\n        vec2 fracRC = sourceFracIndexRC - vec2(sourceFloorRC);\n\n        float top = topLeft + (topRight - topLeft) * fracRC.y;\n        float bottom = bottomLeft + (bottomRight - bottomLeft) * fracRC.y;\n        float newValue = top + (bottom - top) * fracRC.x;\n\n        setOutput(newValue);\n      }\n    `}}class cW{constructor(e,t,n,r,s){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[a,i,o,u]=e;this.outputShape=[a,t,n,u];const l=[r&&t>1?i-1:i,r&&n>1?o-1:o],c=[r&&t>1?t-1:t,r&&n>1?n-1:n];let h;h=s?"(vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC - vec3(0.5)":"vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec3 effectiveInputOverOutputRatioRC = vec3(\n          ${l[0]/c[0]},\n          ${l[1]/c[1]},\n          ${l[1]/c[1]});\n      const vec3 inputShapeRC = vec3(${i}.0, ${o}.0,\n                                     ${o}.0);\n\n      float getAValue(int b, int r, int c, int d) {\n        return getChannel(getA(b, r, c, d), vec2(c, d));\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        // Calculate values for next column in yRC.z.\n        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);\n\n        // Fractional source index.\n        vec3 sourceFracIndexRC = ${h};\n\n        // Compute the four integer indices.\n        ivec3 sourceFloorRC = ivec3(max(sourceFracIndexRC, vec3(0.0)));\n        ivec3 sourceCeilRC = ivec3(\n          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));\n\n        // Should we calculate next column and row elements in 2x2 packed cell.\n        bool hasNextCol = d < ${u-1};\n        bool hasNextRow = coords.z < ${n-1};\n\n        // In parallel, construct four corners for all four components in\n        // packed 2x2 cell.\n        vec4 topLeft = vec4(\n          getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d),\n          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d + 1) : 0.0);\n\n        vec4 bottomLeft = vec4(\n          getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d),\n          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d + 1) : 0.0);\n\n        vec4 topRight = vec4(\n          getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d),\n          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d + 1) : 0.0);\n\n        vec4 bottomRight = vec4(\n          getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d),\n          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d + 1) : 0.0);\n\n        vec3 fracRC = sourceFracIndexRC - vec3(sourceFloorRC);\n\n        vec4 top = mix(topLeft, topRight, fracRC.yyzz);\n        vec4 bottom = mix(bottomLeft, bottomRight, fracRC.yyzz);\n        vec4 newValue = mix(top, bottom, fracRC.x);\n\n        setOutput(newValue);\n      }\n    `}}const hW={kernelName:vr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:s}=t,{alignCorners:a,halfPixelCenters:i,size:o}=r,[u,l]=o,c=Xe().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new cW(s.shape,u,l,a,i):new lW(s.shape,u,l,a,i);return n.runWebGLProgram(c,[s],"float32")}};class dW{constructor(e,t,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;const[,r,s]=t,[,a,i]=e,o=[n&&a>1?r-1:r,n&&i>1?s-1:s],u=[n&&a>1?a-1:a,n&&i>1?i-1:i],l=o[0]/u[0],c=o[1]/u[1],h=1/l,d=1/c,p=2*Math.ceil(h)+2,f=2*Math.ceil(d)+2;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        int r = coords[1];\n        int c = coords[2];\n\n        float accumulator = 0.0;\n\n        const float heightScale = float(${l});\n        const float widthScale = float(${c});\n\n        const float invHeightScale = float(${h});\n        const float invWidthScale = float(${d});\n\n        const int winHeight = int(${p});\n        const int winWidth = int(${f});\n\n        // Compute bounds for where in dy we will look\n        float startRLerp = floor(float(r) * invHeightScale);\n        int startDyR = int(startRLerp - float(winHeight / 2));\n\n        float startCLerp = floor(float(c) * invWidthScale);\n        int startDyC = int(startCLerp - float(winWidth / 2));\n\n        // Loop over dy\n        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {\n          int dyR = dyROffset + startDyR;\n\n          // Guard against the window exceeding the bounds of dy\n          if (dyR < 0 || dyR >= ${a}) {\n            continue;\n          }\n\n          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {\n            int dyC = dyCOffset + startDyC;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyC < 0 || dyC >= ${i}) {\n              continue;\n            }\n\n            float dxR = float(dyR) * heightScale;\n            int topDxRIndex = int(floor(dxR));\n            int bottomDxRIndex = int(min(ceil(dxR), ${r-1}.0));\n            float dxRLerp = dxR - float(topDxRIndex);\n            float inverseDxRLerp = 1.0 - dxRLerp;\n\n            float dxC = float(dyC) * widthScale;\n            int leftDxCIndex = int(floor(dxC));\n            int rightDxCIndex = int(min(ceil(dxC), ${s-1}.0));\n            float dxCLerp = dxC - float(leftDxCIndex);\n            float inverseDxCLerp = 1.0 - dxCLerp;\n\n            if (r == topDxRIndex && c == leftDxCIndex) {\n              // topLeft\n              accumulator +=\n                getDy(b, dyR, dyC, d) * inverseDxRLerp * inverseDxCLerp;\n            }\n\n            if (r == topDxRIndex && c == rightDxCIndex) {\n              // topRight\n              accumulator += getDy(b, dyR, dyC, d) * inverseDxRLerp * dxCLerp;\n            }\n\n            if (r == bottomDxRIndex && c == leftDxCIndex) {\n              // bottomLeft\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * inverseDxCLerp;\n            }\n\n            if (r == bottomDxRIndex && c == rightDxCIndex) {\n              // bottomRight\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * dxCLerp;\n            }\n          }\n        }\n        // End loop over dy\n\n        setOutput(accumulator);\n      }\n    `}}const pW={kernelName:kr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:s,dy:a}=t,{alignCorners:i}=r,o=new dW(a.shape,s.shape,i);return n.runWebGLProgram(o,[a],a.dtype)}};class fW{constructor(e,t,n,r,s){this.variableNames=["A"],this.outputShape=[];const[a,i,o,u]=e;this.outputShape=[a,t,n,u];const l=[r&&t>1?i-1:i,r&&n>1?o-1:o],c=[r&&t>1?t-1:t,r&&n>1?n-1:n],h=r?"0.5":"0.0";let d;d=s?"max((vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC, vec2(0.0))":"vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\n          ${l[0]/c[0]},\n          ${l[1]/c[1]});\n      const vec2 inputShapeRC = vec2(${i}.0, ${o}.0);\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        ivec2 yRC = coords.yz;\n\n        // Fractional source index.\n        vec2 sourceFracIndexRC = ${d};\n\n        // Compute the coordinators of nearest neighbor point.\n        ivec2 sourceNearestRC = ivec2(\n          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${h})));\n        float newValue = getA(b, sourceNearestRC.x, sourceNearestRC.y, d);\n\n        setOutput(newValue);\n      }\n    `}}class mW{constructor(e,t,n,r,s){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[a,i,o,u]=e;this.outputShape=[a,t,n,u];const l=[r&&t>1?i-1:i,r&&n>1?o-1:o],c=[r&&t>1?t-1:t,r&&n>1?n-1:n],h=r?"0.5":"0.0";let d;d=s?"max((vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC, vec3(0.0))":"vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec3 effectiveInputOverOutputRatioRC = vec3(\n          ${l[0]/c[0]},\n          ${l[1]/c[1]},\n          ${l[1]/c[1]});\n      const vec3 inputShapeRC = vec3(${i}.0, ${o}.0,\n                                     ${o}.0);\n\n      float getAValue(int b, int r, int c, int d) {\n        return getChannel(getA(b, r, c, d), vec2(c, d));\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        // Calculate values for next column in yRC.z.\n        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);\n\n        // Fractional source index.\n        vec3 sourceFracIndexRC = ${d};\n\n        // Compute the coordinators of nearest neighbor point.\n        ivec3 sourceNearestRC = ivec3(\n          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${h})));\n\n        // Should we calculate next column and row elements in 2x2 packed cell.\n        bool hasNextCol = d < ${u-1};\n        bool hasNextRow = coords.z < ${n-1};\n\n        vec4 newValue = vec4(\n          getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d),\n          hasNextCol ? getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d + 1) : 0.0);\n\n        setOutput(newValue);\n      }\n    `}}const gW={kernelName:xr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:s}=t,{alignCorners:a,halfPixelCenters:i,size:o}=r,[u,l]=o,c=Xe().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new mW(s.shape,u,l,a,i):new fW(s.shape,u,l,a,i);return n.runWebGLProgram(c,[s],s.dtype)}};class yW{constructor(e,t,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;const[,r,s]=t,[,a,i]=e,o=[n&&a>1?r-1:r,n&&i>1?s-1:s],u=[n&&a>1?a-1:a,n&&i>1?i-1:i],l=o[0]/u[0],c=o[1]/u[1],h=1/l,d=1/c,p=2*Math.ceil(h)+2,f=2*Math.ceil(d)+2;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        int r = coords[1];\n        int c = coords[2];\n\n        float accumulator = 0.0;\n\n        const float heightScale = float(${l});\n        const float widthScale = float(${c});\n\n        const float invHeightScale = float(${h});\n        const float invWidthScale = float(${d});\n\n        const int winHeight = int(${p});\n        const int winWidth = int(${f});\n\n        // Compute bounds for where in dy we will look\n        float startRLerp = floor(float(r) * invHeightScale);\n        int startDyR = int(floor(startRLerp - float(winHeight / 2)));\n\n        float startCLerp = floor(float(c) * invWidthScale);\n        int startDyC = int(floor(startCLerp - float(winWidth / 2)));\n\n        // Loop over dy\n        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {\n          int dyR = dyROffset + startDyR;\n\n          // Guard against the window exceeding the bounds of dy\n          if (dyR < 0 || dyR >= ${a}) {\n            continue;\n          }\n\n          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {\n            int dyC = dyCOffset + startDyC;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyC < 0 || dyC >= ${i}) {\n              continue;\n            }\n\n            float sourceFracRow =\n              float(${o[0]}) *\n                (float(dyR) / float(${u[0]}));\n\n            float sourceFracCol =\n                float(${o[1]}) *\n                  (float(dyC) / float(${u[1]}));\n\n            int sourceNearestRow = int(min(\n                float(int(${r}) - 1),\n                ${n} ? float(round(sourceFracRow)) :\n                                  float(floor(sourceFracRow))));\n\n            int sourceNearestCol = int(min(\n                float(int(${s}) - 1),\n                ${n} ? float(round(sourceFracCol)) :\n                                  float(floor(sourceFracCol))));\n\n            if (r == sourceNearestRow && c == sourceNearestCol) {\n              accumulator += getDy(b, dyR, dyC, d);\n            }\n          }\n        }\n        // End loop over dy\n\n        setOutput(accumulator);\n      }\n    `}}const bW={kernelName:wr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:s,dy:a}=t,{alignCorners:i}=r,o=new yW(a.shape,s.shape,i);return n.runWebGLProgram(o,[a],a.dtype)}};class xW{constructor(e,t){this.variableNames=["x"];const n=e.length;if(n>4)throw new Error(`WebGL backend: Reverse of rank-${n} tensor is not yet supported`);if(this.outputShape=e,1===n)return void(this.userCode=`\n        void main() {\n          int coord = getOutputCoords();\n          setOutput(getX(${e[0]} - coord - 1));\n        }\n      `);const r=e.map((n,r)=>(n=>-1!==t.indexOf(n)&&1!==e[n]?`${e[n]} - coords[${n}] - 1`:`coords[${n}]`)(r)).join(","),s=GM(n);this.userCode=`\n      void main() {\n        ${s} coords = getOutputCoords();\n        setOutput(getX(${r}));\n      }\n    `}}class wW{constructor(e,t){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0;const n=e.length;if(n>4)throw new Error(`WebGL backend: Reverse of rank-${n} tensor is not yet supported`);this.outputShape=e;const r=NL("rc",n),s=`${r[n-1]} + 1 < ${this.outputShape[n-1]}`,a=`${r[n-2]} + 1 < ${this.outputShape[n-2]}`,i=GM(n);function o(n){const r=e.map((r,s)=>function(n,r){return-1!==t.indexOf(n)&&1!==e[n]?`${e[n]} - ${r[n]} - 1`:`${r[n]}`}(s,n));return`getChannel(getX(${r.join(",")}), vec2(${r.slice(-2).join(",")}))`}this.userCode=1===n?`\n        void main(){\n          int rc = getOutputCoords();\n          vec4 result = vec4(0.);\n          result.r = getChannel(getX(${e[0]} - rc - 1),\n            ${e[0]} - rc - 1);\n          if(${s}){\n              result.g = getChannel(getX(${e[0]} - (rc  + 1) - 1),\n                ${e[0]} - (rc  + 1) - 1);\n          }\n          setOutput(result);\n        }\n      `:`\n        void main() {\n          ${i} rc = getOutputCoords();\n          vec4 result = vec4(0.);\n          result.r = ${function(e){return o(e)}(r.slice())};\n          if(${s}){\n            result.g = ${function(e){return e[n-1]="("+e[n-1]+" + 1)",o(e)}(r.slice())};\n          }\n          if(${a}) {\n            result.b = ${function(e){return e[n-2]="("+e[n-2]+" + 1)",o(e)}(r.slice())};\n            if(${s}) {\n              result.a = ${function(e){return e[n-1]="("+e[n-1]+" + 1)",e[n-2]="("+e[n-2]+" + 1)",o(e)}(r.slice())};\n            }\n          }\n          setOutput(result);\n        }\n    `}}const vW={kernelName:Ir,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{dims:a}=r,i=s.shape.length,o=we(a,s.shape);if(0===i)return XL({inputs:{x:s},backend:n});const u=Xe().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new wW(s.shape,o):new xW(s.shape,o);return n.runWebGLProgram(u,[s],s.dtype)}};class kW{constructor(e,t){this.variableNames=["Image"],this.outputShape=[],this.customUniforms=[{name:"params",type:"vec4"}];const n=e[1],r=e[2];this.outputShape=e;let s="";s="number"==typeof t?`float outputValue = ${t.toFixed(2)};`:`\n        vec3 fill = vec3(${t.join(",")});\n        float outputValue = fill[coords[3]];`,this.userCode=`\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int x = coords[2];\n          int y = coords[1];\n          float coordXFloat = (float(x) - params[0]) * params[3] -\n            (float(y) - params[1]) * params[2];\n          float coordYFloat = (float(x) - params[0]) * params[2] +\n            (float(y) - params[1]) * params[3];\n          int coordX = int(round(coordXFloat + params[0]));\n          int coordY = int(round(coordYFloat + params[1]));\n          ${s}\n          if(coordX >= 0 && coordX < ${r} && coordY >= 0 && coordY < ${n}) {\n            outputValue = getImage(coords[0], coordY, coordX, coords[3]);\n          }\n          setOutput(outputValue);\n        }\n    `}}const NW={kernelName:ms,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{image:r}=e,{radians:s,fillValue:a,center:i}=t,o=n,u=new kW(r.shape,a),[l,c]=Qf(i,r.shape[1],r.shape[2]),h=[[l,c,Math.sin(s),Math.cos(s)]];return o.runWebGLProgram(u,[r],r.dtype,h)}},IW=iz({opSnippet:"\n  // OpenGL ES does not support round function.\n  // The algorithm is based on banker's rounding.\n  float base = floor(x);\n  if ((x - base) < 0.5) {\n    return floor(x);\n  } else if ((x - base) > 0.5) {\n    return ceil(x);\n  } else {\n    if (mod(base, 2.0) == 0.0) {\n      return base;\n    } else {\n      return base + 1.0;\n    }\n  }\n"}),SW={kernelName:Sr,backendName:"webgl",kernelFunc:IW},TW=iz({opSnippet:"return inversesqrt(x);",cpuKernelImpl:rL}),EW={kernelName:Tr,backendName:"webgl",kernelFunc:TW};class CW{constructor(e,t,n,r,s,a,i=!0,o=!1){this.variableNames=["updates","indices","defaultValue"],this.outputShape=a;const u=GM(s.length),l=GM(a.length);let c="";1===n?c="i":2===n&&(c="i, j");const h=`getIndices(${c})`;let d="";1===r?d="i":2===r&&(d="i, coords[1]");const p=`getUpdates(${d})`;let f="";o&&(f="coords[0], coords[1]");const m=`getDefaultValue(${f})`,g=t>1?"strides[j]":"strides";this.userCode=`\n        ${u} strides = ${u}(${s});\n\n        void main() {\n          ${l} coords = getOutputCoords();\n          float sum = 0.0;\n          bool found = false;\n          for (int i = 0; i < ${e}; i++) {\n            int flattenedIndex = 0;\n            for (int j = 0; j < ${t}; j++) {\n              int index = round(${h});\n              flattenedIndex += index * ${g};\n            }\n            if (flattenedIndex == coords[0]) {\n              sum += ${p};\n              found = true;\n            }\n          }\n          setOutput(mix(${m}, sum, float(found)));\n        }\n      `}}class $W{constructor(e,t,n,r,s,a,i=!0,o=!1){this.variableNames=["updates","indices","defaultValue"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=a;const u=GM(s.length),l=GM(a.length);let c="";1===n?c="i":2===n&&(c="i, j");const h=`getIndices(${c})`;let d="";1===r?d="i":2===r&&(d="i, coords[1]");const p=`getUpdates(${d})`;let f="";o&&(f="coords[0], coords[1]");const m=`getDefaultValue(${f})`,g=t>1?"strides[j]":"strides",y=t>1?"strides[j + 1]":"strides";this.userCode=`\n        ${u} strides = ${u}(${s});\n\n        void main() {\n          ${l} coords = getOutputCoords();\n          vec4 sum = vec4(0.);\n          vec4 found = vec4(0.);\n          for (int i = 0; i < ${e}; i+=2) {\n            ivec2 flattenedIndex = ivec2(0);\n            for (int j = 0; j < ${t}; j+=2) {\n              ivec4 index = round(${h});\n              flattenedIndex += index.xz * ${g};\n              if (j + 1 < ${t}) {\n                flattenedIndex += index.yw * ${y};\n              }\n            }\n            if (flattenedIndex[0] == coords[0] || flattenedIndex[1] == coords[0] ||\n                flattenedIndex[0] == coords[0] + 1 || flattenedIndex[1] == coords[0] + 1) {\n              vec4 updVals = ${p};\n              if (flattenedIndex[0] == coords[0]) {\n                sum.xy += updVals.xy;\n                found.xy = vec2(1.);\n              } else if (flattenedIndex[0] == coords[0] + 1) {\n                sum.zw += updVals.xy;\n                found.zw = vec2(1.);\n              }\n              if (flattenedIndex[1] == coords[0]) {\n                sum.xy += updVals.zw;\n                found.xy = vec2(1.);\n              } else if (flattenedIndex[1] == coords[0] + 1) {\n                sum.zw += updVals.zw;\n                found.zw = vec2(1.);\n              }\n            }\n          }\n          setOutput(mix(${m}, sum, found));\n        }\n      `}}const AW={kernelName:Er,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{indices:s,updates:a}=t,{shape:i}=r,{sliceRank:o,numUpdates:u,sliceSize:l,strides:c,outputSize:h}=Xu(0,s,i),d=[h/l,l];if(0===h)return n.makeTensorInfo(i,s.dtype);const p=fz({inputs:{x:s},backend:n,attrs:{shape:[u,o]}}),f=fz({inputs:{x:a},backend:n,attrs:{shape:[u,l]}}),m=n.makeTensorInfo([],"float32",new Float32Array([0]));let g;g=Xe().getBool("WEBGL_PACK")?new $W(u,o,p.shape.length,f.shape.length,c,d):new CW(u,o,p.shape.length,f.shape.length,c,d);const y=n.runWebGLProgram(g,[f,p,m],f.dtype),b=fz({inputs:{x:y},backend:n,attrs:{shape:i}});return n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(y),n.disposeIntermediateTensorInfo(m),b}};class RW{constructor(e,t,n,r){this.variableNames=["sortedSequence","values"],this.customUniforms=[{name:"numInputs",type:"int"}],this.outputShape=[e,n];const s=`for (int i = 0; i < ${Math.ceil(Math.log2(t+1))}; ++i) { if (left >= right) break;`,a=2===Xe().getNumber("WEBGL_VERSION")?"while (left < right) {":s,i="left"===r?"<":"<=";this.userCode=`\n       int findBound(int batch, float value) {\n         int left = 0;\n         int right = numInputs;\n         int mid;\n         ${a}\n           mid = (left + right) / 2;\n           if (getSortedSequence(batch, mid) ${i} value) {\n             left = mid + 1;\n           } else {\n             right = mid;\n           }\n         }\n         return right;\n       }\n\n       void main() {\n         ivec2 coords = getOutputCoords();\n         int batch = coords[0];\n         int valueIndex = coords[1];\n\n         float value = getValues(batch, valueIndex);\n\n         setOutput(float(findBound(batch, value)));\n       }\n     `}}const _W={kernelName:$r,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{sortedSequence:s,values:a}=t,{side:i}=r,o=new RW(s.shape[0],s.shape[1],a.shape[1],i),u=[[s.shape[1]]];return n.runWebGLProgram(o,[s,a],"int32",u)}};class DW{constructor(e,t,n){let r,s;if(this.variableNames=["c","a","b"],this.outputShape=t,n>4)throw Error(`Where for rank ${n} is not yet supported`);if(1===n)s="resRC",r="resRC";else{const n=["resRC.x","resRC.y","resRC.z","resRC.w"],a=[],i=[];for(let r=0;r<t.length;r++)i.push(`${n[r]}`),r<e&&a.push(`${n[r]}`);r=a.join(),s=i.join()}const a=GM(n);this.userCode=`\n      void main() {\n        ${a} resRC = getOutputCoords();\n        float cVal = getC(${r});\n        if (cVal >= 1.0) {\n          setOutput(getA(${s}));\n        } else {\n          setOutput(getB(${s}));\n        }\n      }\n    `}}const FW={kernelName:Ar,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{condition:r,t:s,e:a}=t,i=new DW(r.shape.length,s.shape,s.shape.length);return n.runWebGLProgram(i,[r,s,a],ka(s.dtype,a.dtype))}},MW=iz({opSnippet:`\n  // Stable and Attracting Fixed Point (0, 1) for Normalized Weights.\n  // see: https://arxiv.org/abs/1706.02515\n  float scaleAlpha = ${sm};\n  float scale = ${am};\n  return (x >= 0.0) ? scale * x : scaleAlpha * (exp(x) - 1.0);\n`}),OW={kernelName:Rr,backendName:"webgl",kernelFunc:MW},LW=iz({opSnippet:az+"\n  return 1.0 / (1.0 + exp(-1.0 * x));\n",packedOpSnippet:"\n  vec4 result = 1.0 / (1.0 + exp(-1.0 * x));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n",cpuKernelImpl:aL}),zW={kernelName:Or,backendName:"webgl",kernelFunc:LW},PW=iz({opSnippet:"\n  if (isnan(x)) { return 0.0; }\n  return sign(x);\n"}),BW={kernelName:Mr,backendName:"webgl",kernelFunc:PW},VW=iz({opSnippet:az+"\n  return sin(x);\n",packedOpSnippet:`\n  vec4 result = sin(x);\n  bvec4 isNaN = isnan(x);\n  ${KL}\n  return result;\n`}),UW={kernelName:Dr,backendName:"webgl",kernelFunc:VW},WW=iz({opSnippet:"\n  float e2x = exp(x);\n  return (e2x - 1.0 / e2x) / 2.0;\n"}),GW={kernelName:Fr,backendName:"webgl",kernelFunc:WW},HW=iz({opSnippet:"\n  float epsilon = 1.1920928955078125e-7;\n  float threshold = log(epsilon) + 2.0;\n\n  bool too_large = x > -threshold;\n  bool too_small = x < threshold;\n\n  float result;\n  float exp_x = exp(x);\n\n  if (too_large){\n    result = x;\n  }\n  else if (too_small){\n    result = exp_x;\n  }\n  else{\n    result = log(exp_x + 1.0);\n  }\n  return result;\n"}),jW={kernelName:Lr,backendName:"webgl",kernelFunc:HW},KW={kernelName:Br,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{blockShape:a,paddings:i}=r;ie(s.shape.length<=4,()=>"spaceToBatchND for rank > 4 with a WebGL backend not implemented yet");const o=a.reduce((e,t)=>e*t),u=[[0,0]];u.push(...i);for(let e=1+a.length;e<s.shape.length;++e)u.push([0,0]);const l=[],c=KU({inputs:{x:s},backend:n,attrs:{paddings:u,constantValue:0}}),h=Jf(c.shape,a,o,!1),d=em(h.length,a.length,!1),p=tm(c.shape,a,o,!1),f=fz({inputs:{x:c},backend:n,attrs:{shape:h}}),m=Iz({inputs:{x:f},backend:n,attrs:{perm:d}}),g=fz({inputs:{x:m},backend:n,attrs:{shape:p}});return l.push(c),l.push(f),l.push(m),l.forEach(e=>n.disposeIntermediateTensorInfo(e)),g}},qW={kernelName:Wr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{indices:r,values:s,denseShape:a,defaultValue:i}=t;if(1!==a.shape.length)throw new Error(`Dense shape must be a vector, saw:\n         ${a.shape}`);if(2!==r.shape.length)throw new Error(`Indices must be a matrix, saw:\n         ${r.shape}`);if(1!==s.shape.length)throw new Error(`Values must be a vector, saw:\n         ${s.shape}`);if(0!==i.shape.length)throw new Error(`Default value must be a scalar, saw:\n        ${i.shape}`);const o=n.readSync(r.dataId),u=n.readSync(s.dataId),l=n.readSync(a.dataId),c=n.readSync(i.dataId)[0],[h,d,p,f,m]=uL(o,r.shape,r.dtype,u,s.dtype,l,c);return[n.makeTensorInfo(d,r.dtype,h),n.makeTensorInfo([d[0]],s.dtype,p),n.makeTensorInfo([f.length],"bool",new Uint8Array(f.map(e=>Number(e)))),n.makeTensorInfo([m.length],r.dtype,new Int32Array(m))]}},XW={kernelName:Gr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{inputIndices:r,inputShape:s,newShape:a}=t;if(2!==r.shape.length)throw new Error(`Input indices should be a matrix but received shape ${r.shape}`);if(1!==s.shape.length)throw new Error(`Input shape should be a vector but received shape ${s.shape}`);if(1!==a.shape.length)throw new Error(`Target shape should be a vector but received shape ${a.shape}`);const i=Array.from(n.readSync(s.dataId)),o=n.readSync(r.dataId),u=Array.from(n.readSync(a.dataId)),[l,c,h]=lL(o,r.shape,r.dtype,i,u);return[n.makeTensorInfo(c,r.dtype,l),n.makeTensorInfo([h.length],a.dtype,new Int32Array(h))]}},YW={kernelName:Hr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{data:r,indices:s,segmentIds:a}=t;if(r.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==s.shape.length)throw new Error(`Indices should be a vector but received shape\n              ${s.shape}`);if(1!==a.shape.length)throw new Error(`Segment ids should be a vector but received shape\n              ${a.shape}`);const i=n.readSync(r.dataId),o=n.readSync(s.dataId),u=n.readSync(a.dataId),[l,c]=cL(i,r.shape,r.dtype,o,u,!0);return n.makeTensorInfo(c,r.dtype,l)}},ZW={kernelName:jr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{data:r,indices:s,segmentIds:a}=t;if(r.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==s.shape.length)throw new Error(`Indices should be a vector but received shape\n             ${s.shape}`);if(1!==a.shape.length)throw new Error(`Segment ids should be a vector but received shape\n             ${a.shape}`);const i=n.readSync(r.dataId),o=n.readSync(s.dataId),u=n.readSync(a.dataId),[l,c]=cL(i,r.shape,r.dtype,o,u);return n.makeTensorInfo(c,r.dtype,l)}},QW={kernelName:Kr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{sparseIndices:s,sparseValues:a,defaultValue:i}=t,{outputShape:o}=r,{sliceRank:u,numUpdates:l,sliceSize:c,strides:h,outputSize:d}=Xu(0,s,o),p=!1;if("string"===a.dtype){const e=n.bufferSync(s),t=n.bufferSync(a),r=Qs(n.readSync(i.dataId)[0]),f=sL(e,t,o,d,c,l,u,h,r,p);return n.makeTensorInfo(o,f.dtype,f.values)}const f=new CW(l,u,s.shape.length,a.shape.length,h,[d,1],p),m=n.runWebGLProgram(f,[a,s,i],a.dtype),g=fz({inputs:{x:m},backend:n,attrs:{shape:o}});return n.disposeIntermediateTensorInfo(m),g}},JW={kernelName:Vr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{numOrSizeSplits:a,axis:i}=r,o=we(i,s.shape)[0],u=Am(s,a,o),l=s.shape.length,c=new Array(l).fill(0),h=s.shape.slice();return u.map(e=>{const t=[...h];t[o]=e;const r=wP({inputs:{x:s},backend:n,attrs:{begin:c,size:t}});return c[o]+=e,r})}},eG="return sqrt(x);",tG=iz({opSnippet:eG,packedOpSnippet:eG,cpuKernelImpl:hL}),nG={kernelName:zr,backendName:"webgl",kernelFunc:tG},rG=iz({opSnippet:"return x * x;"}),sG={kernelName:Xr,backendName:"webgl",kernelFunc:rG},aG="return (a - b) * (a - b);",iG=oz({opSnippet:aG,packedOpSnippet:aG}),oG={kernelName:qr,backendName:"webgl",kernelFunc:iG},uG={kernelName:Yr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t;if("string"!==s.dtype)throw new Error("Input must be of datatype string");const a=jm(n.readSync(s.dataId)),i=dL(a,"string",r);return n.makeTensorInfo(s.shape,"string",i)}},lG={kernelName:ps,backendName:"webgl",kernelFunc:function({inputs:e,attrs:t,backend:n}){const{x:r}=e,s=RL+`\n    return x > 0.0 ? 1.0 : float(${t.alpha});\n  `,a=new AL(r.shape,s);return n.runWebGLProgram(a,[r],r.dtype)}};class cG{constructor(e,t,n){this.variableNames=["x"],this.outputShape=n;const r=n.length,s=GM(n.length),a=GM(n.length);let i="";if(1===r)i="coords * strides + begin";else{let e=0;i=n.map((t,r)=>(e++,1===n.length?`coords * strides[${r}] + begin[${r}]`:`coords[${e-1}] * strides[${r}] + begin[${r}]`)).join(",")}this.userCode=`\n      ${s} begin = ${s}(${e});\n      ${s} strides = ${s}(${t});\n\n      void main() {\n        ${a} coords = getOutputCoords();\n        setOutput(getX(${i}));\n      }\n    `}}const hG={kernelName:Zr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{begin:a,end:i,strides:o,beginMask:u,endMask:l,ellipsisMask:c,newAxisMask:h,shrinkAxisMask:d}=r,{finalShapeSparse:p,finalShape:f,isIdentity:m,sliceDim0:g,isSimpleSlice:y,begin:b,end:x,strides:w}=pl(s.shape,a,i,o,u,l,c,h,d);let v;if(m)v=fz({inputs:{x:s},backend:n,attrs:{shape:f}});else if(g||y){ie(s.shape.length>=1,()=>`Input must have rank at least 1, got: ${s.shape.length}`);const e=el(b,x,w),t=wP({inputs:{x:s},backend:n,attrs:{begin:b,size:e}});v=fz({inputs:{x:t},backend:n,attrs:{shape:f}}),n.disposeIntermediateTensorInfo(t)}else if(n.shouldExecuteOnCPU([s])){const e=n.readSync(s.dataId),t=ko(s.shape,s.dtype,e),r=pL(p,t,w,b);v=n.makeTensorInfo(f,s.dtype,r.values)}else{const e=new cG(b,w,p);v=n.runWebGLProgram(e,[s],s.dtype)}const k=fz({inputs:{x:v},backend:n,attrs:{shape:f}});return n.disposeIntermediateTensorInfo(v),k}},dG={kernelName:Qr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{separator:s,nGramWidths:a,leftPad:i,rightPad:o,padWidth:u,preserveShortSequences:l}=r,{data:c,dataSplits:h}=t,d=n.readSync(c.dataId),p=n.readSync(h.dataId),[f,m]=fL(d,p,s,a,i,o,u,l);return[n.makeTensorInfo([f.length],"string",f),n.makeTensorInfo(h.shape,"int32",m)]}},pG={kernelName:Jr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{skipEmpty:s}=r,{input:a,delimiter:i}=t;if("string"!==a.dtype)throw new Error("Input must be of datatype string");if(1!==a.shape.length)throw new Error(`Input must be a vector, got shape: ${a.shape}`);if(0!==i.shape.length)throw new Error(`Delimiter must be a scalar, got shape: ${i.shape}`);const o=n.readSync(a.dataId),u=n.readSync(i.dataId)[0],[l,c,h]=mL(o,u,s),d=c.length;return[n.makeTensorInfo([d,2],"int32",l),n.makeTensorInfo([d],"string",c),n.makeTensorInfo([2],"int32",new Int32Array(h))]}},fG={kernelName:es,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{numBuckets:s}=r,{input:a}=t;if("string"!==a.dtype)throw new Error("Input must be of datatype string");if(s<=0)throw new Error("Number of buckets must be at least 1");const i=n.readSync(a.dataId),o=gL(i,s);return n.makeTensorInfo(a.shape,"int32",o)}},mG=iz({opSnippet:"return tan(x);"}),gG={kernelName:ns,backendName:"webgl",kernelFunc:mG},yG=iz({opSnippet:"\n  float e2x = exp(-2.0 * abs(x));\n  return sign(x) * (1.0 - e2x) / (1.0 + e2x);\n"}),bG={kernelName:rs,backendName:"webgl",kernelFunc:yG},xG={kernelName:Cr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{tensor:s,indices:a,updates:i}=t,{}=r,{sliceRank:o,numUpdates:u,sliceSize:l,strides:c,outputSize:h}=Xu(0,a,s.shape),d=[h/l,l];if(0===h)return n.makeTensorInfo(s.shape,a.dtype);const p=fz({inputs:{x:a},backend:n,attrs:{shape:[u,o]}}),f=fz({inputs:{x:i},backend:n,attrs:{shape:[u,l]}}),m=fz({inputs:{x:s},backend:n,attrs:{shape:d}}),g=new CW(u,o,p.shape.length,f.shape.length,c,d,!1,!0),y=n.runWebGLProgram(g,[f,p,m],m.dtype),b=fz({inputs:{x:y},backend:n,attrs:{shape:s.shape}});return n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(y),b}};class wG{constructor(e,t){this.variableNames=["A"];const n=new Array(e.length);for(let r=0;r<n.length;r++)n[r]=e[r]*t[r];this.outputShape=n,this.rank=n.length;const r=GM(this.rank),s=function(e){const t=e.length;if(t>5)throw Error(`Tile for rank ${t} is not yet supported`);if(1===t)return`imod(resRC, ${e[0]})`;const n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u"],r=[];for(let t=0;t<e.length;t++)r.push(`imod(${n[t]}, ${e[t]})`);return r.join()}(e);this.userCode=`\n      void main() {\n        ${r} resRC = getOutputCoords();\n        setOutput(getA(${s}));\n      }\n    `}}function vG(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{reps:a}=r;if("string"===s.dtype||s.shape.length>5){const e=n.readSync(s.dataId),t="string"===s.dtype?e.map(e=>Qs(e)):e,r=ko(s.shape,s.dtype,t),i=bL(r,a);return n.makeTensorInfo(i.shape,i.dtype,i.values)}const i=new wG(s.shape,a);return n.runWebGLProgram(i,[s],s.dtype)}const kG={kernelName:ss,backendName:"webgl",kernelFunc:vG};class NG{constructor(e){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"negativeInf",type:"float"},{name:"dir",type:"int"},{name:"inc",type:"int"}],this.outputShape=e,this.userCode="\n       void main() {\n         ivec2 coords = getOutputCoords();\n         int batch = coords[0];\n         int elemIdx = coords[1];\n\n         // We compare elements pair-wise within a group of size 2 * inc.\n         // The comparing rule for each group alternates between ascending\n         // and descending. Within each group, we compare each pair at\n         // positions i and i+inc. To decide whether an element at position i\n         // is x0 or x1, we mod it by 2 * inc, if the result is smaller than\n         // inc, it is in the first half of the group, we denote it as x0,\n         // otherwise we denote it as x1.\n         // For example, as shown in the Bitonic top K paper referenced above,\n         // Figure5(a) shows that element[1] is in the\n         // second half of the group when group size is 2, but it is in the\n         // first half of the group when group size is 4.\n\n         bool isFirstInPair = imod(elemIdx, 2 * inc) < inc;\n         int i = isFirstInPair ? elemIdx : elemIdx - inc;\n\n         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));\n         int i1 = firstPass == 1 ? i + inc : int(getIndices(batch, i + inc));\n         float x0 = i0 < n ? getX(batch, i0) : negativeInf;\n         float x1 = i1 < n ? getX(batch, i1) : negativeInf;\n\n         // Denotes which direction indices are in (ascending or descending).\n         bool reverse = imod(elemIdx, 2 * dir) >= dir;\n         bool isGreater = x0 > x1 || (x0 == x1 && i1 > i0);\n         if (reverse == isGreater) { // Elements in opposite order of direction\n           int iTemp = i0;\n           i0 = i1;\n           i1 = iTemp;\n         }\n         if (isFirstInPair) {\n            setOutput(float(i0));\n         } else {\n            setOutput(float(i1));\n         }\n       }\n     "}}class IG{constructor(e){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"k",type:"int"}],this.outputShape=e,this.userCode="\n    void main() {\n         // Takes max of indices (0, k), (1, k + 1), (2, k + 2) ...\n         ivec2 coords = getOutputCoords();\n         int batch = coords[0];\n         int elemIdx = coords[1];\n\n         // The output size is half of the previous size.\n         // If the previous sequence is | | | | _ _ _ _  | | | |  _ _ _ _ (k=4),\n         // we only need to output the indices at positions |, the indices at\n         // positions _ can be thrown away, see Figure5(b) After Phase 2\n         // (Merge phase) in the Bitonic Top K paper referenced above.\n         // For example, the paper shows we only need to output the orange bars.\n         // The output sequence should look like this | | | | | | | |.\n         // Because the sequence is halved, to map the output index back\n         // to the previous sequence to find the corresponding value,\n         // we need to double the index. When we double the index,\n         // we basically interpolate a position, so 2i looks like\n         // | _ | _ | _ | _ | _ | _ | _. We move the | to the first k position\n         // of each 2k positions by - elemIdx % k. E.g. for output at\n         // index 4,5,6,7, we want to get the corresponding element at\n         // original index 8,9,10,11, for output at index 8,9,10,11,\n         // we want to get the corresponding element at original index\n         // 16,17,18,19, so on and so forth.\n\n         int i = elemIdx < k ? elemIdx : (elemIdx * 2 - imod(elemIdx, k));\n         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));\n         int i1 = firstPass == 1 ? i + k : int(getIndices(batch, i + k));\n\n         float x0 = getX(batch, i0);\n         float x1 = i1 < n ? getX(batch, i1) : x0;\n\n         setOutput(x0 >= x1 ? float(i0) : float(i1));\n       }\n     "}}function SG(e,t){null!==t&&e.disposeIntermediateTensorInfo(t)}function TG(e){let t=1;for(;t<e;)t*=2;return t}const EG={kernelName:as,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{k:a,sorted:i}=r,o=Xe().getNumber("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD"),u=Xe().getNumber("TOPK_K_CPU_HANDOFF_THRESHOLD"),l=s.shape,c=l[l.length-1];if(n.shouldExecuteOnCPU([s])||c<o||a>u){const e=n.readSync(s.dataId),[t,r]=xL(e,l,s.dtype,a,i);return[n.makeTensorInfo(t.shape,t.dtype,t.values),n.makeTensorInfo(r.shape,r.dtype,r.values)]}if(0===a)return l[l.length-1]=0,[n.makeTensorInfo(l,s.dtype,[]),n.makeTensorInfo(l,"int32",[])];if(1===c)return[s,sV({attrs:{shape:l,dtype:"int32",value:0},backend:n})];const h=n.texData.get(s.dataId),d=null!==h&&h.isPacked,p=d?n.unpackTensor(s):s,f=le(l)/c,m=fz({inputs:{x:p},attrs:{shape:[f,c]},backend:n});d&&SG(n,p);const g=TG(a),y=TG(c);let b=null;const x=()=>null===b?[m,m]:[m,b],w=(e,t,r)=>{const s=x(),a=new NG(r),i=[[c],[null===b?1:0],[Number.NEGATIVE_INFINITY],[e],[t]],o=b;b=n.runWebGLProgram(a,s,"int32",i),SG(n,o)};for(let e=1;e<g;e*=2){const t=2*e;for(let n=e;n>=1;n/=2)w(t,n,[f,y])}for(let e=y;e>g;e/=2){const t=x(),r=new IG([f,e/2]),s=[[c],[null===b?1:0],[g]],a=b;b=n.runWebGLProgram(r,t,"int32",s),SG(n,a);const i=g/2,o=2*i;for(let e=i;e>=1;e/=2)w(o,e,b.shape)}let v=b;b=wP({inputs:{x:b},backend:n,attrs:{begin:0,size:[f,a]}}),SG(n,v);let k=NV({inputs:{x:m,indices:b},backend:n,attrs:{axis:1,batchDims:1}});SG(n,m);const N=l.slice(0,-1);N.push(a),v=b,b=fz({inputs:{x:b},attrs:{shape:N},backend:n}),SG(n,v);const I=k;return k=fz({inputs:{x:k},attrs:{shape:N},backend:n}),SG(n,I),[k,b]}};class CG{constructor(e,t,n,r,s,a){this.variableNames=["Image","Transforms"],this.outputShape=a;const i="nearest"===n?1:2;let o;switch(r){case"constant":default:o=1;break;case"reflect":o=2;break;case"wrap":o=3;break;case"nearest":o=4}this.userCode=`\n            float mapCoord(float outCoord, float len) {\n              float inCoord = outCoord;\n              if(${o} == 2) {\n                if (inCoord < 0.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz2 = 2.0 * len;\n                    if (inCoord < sz2) {\n                      inCoord = sz2 * float(int(float(-inCoord / sz2))) +\n                      inCoord;\n                    }\n                    inCoord = inCoord < -len ? inCoord + sz2 : -inCoord - 1.0;\n                  }\n                } else if (inCoord > len - 1.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz2 = 2.0 * len;\n                    inCoord -= sz2 * float(int(float(inCoord / sz2)));\n                    if (inCoord >= len) {\n                      inCoord = sz2 - inCoord - 1.0;\n                    }\n                  }\n                }\n                return clamp(inCoord, 0.0, len - 1.0);\n              } else if (${o} == 3) {\n                if (inCoord < 0.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz = len - 1.0;\n                    inCoord += len * (float(int(float(-inCoord / sz))) + 1.0);\n                  }\n                } else if (inCoord > len - 1.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz = len - 1.0;\n                    inCoord -= len * float(int(float(inCoord / sz)));\n                  }\n                }\n                return clamp(inCoord, 0.0, len - 1.0);\n              } else if (${o} == 4) {\n                return clamp(outCoord, 0.0, len - 1.0);\n              } else {\n                return outCoord;\n              }\n            }\n\n            float readWithFillValue(int batch, int coordY, int coordX,\n              int channel) {\n              float outputValue;\n              if (0 <= coordY && coordY < ${e} && 0 <= coordX && coordX < ${t}) {\n                  outputValue = getImage(batch, coordY, coordX, channel);\n              } else {\n                outputValue = float(${s});\n              }\n              return outputValue;\n            }\n\n            void main() {\n              ivec4 coords = getOutputCoords();\n              float outputValue;\n              int batch = coords[0];\n              int x = coords[2];\n              int y = coords[1];\n              int channel = coords[3];\n              float xf = float(x);\n              float yf = float(y);\n              float a1 = getTransforms(batch, 0);\n              float a2 = getTransforms(batch, 1);\n              float a3 = getTransforms(batch, 2);\n              float b1 = getTransforms(batch, 3);\n              float b2 = getTransforms(batch, 4);\n              float b3 = getTransforms(batch, 5);\n              float c1 = getTransforms(batch, 6);\n              float c2 = getTransforms(batch, 7);\n              float projection = c1 * xf + c2 * yf + 1.0;\n              if (projection == 0.0) {\n                outputValue = float(${s});\n              } else {\n                float inX = (a1 * xf + a2 * yf + a3) / projection;\n                float inY = (b1 * xf + b2 * yf + b3) / projection;\n                float mapX = mapCoord(inX, float(${t}));\n                float mapY = mapCoord(inY, float(${e}));\n\n                if (${i} == 1) {\n                  int coordY = int(round(mapY));\n                  int coordX = int(round(mapX));\n                  outputValue = readWithFillValue(batch, coordY, coordX,\n                    channel);\n                } else {\n                  float yFloor = floor(mapY);\n                  float xFloor = floor(mapX);\n                  float yCeil = yFloor + 1.0;\n                  float xCeil = xFloor + 1.0;\n                  float valueYFloor = (xCeil - mapX) *\n                  readWithFillValue(batch, int(yFloor), int(xFloor), channel) +\n                  (mapX - xFloor) *\n                  readWithFillValue(batch, int(yFloor), int(xCeil), channel);\n                  float valueYCeil = (xCeil - mapX) *\n                  readWithFillValue(batch, int(yCeil), int(xFloor), channel) +\n                  (mapX - xFloor) *\n                  readWithFillValue(batch, int(yCeil), int(xCeil), channel);\n                  outputValue = (yCeil - mapY) * valueYFloor +\n                  (mapY - yFloor) * valueYCeil;\n                }\n              }\n              setOutput(outputValue);\n            }\n        `}}const $G={kernelName:is,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{image:s,transforms:a}=t,{interpolation:i,fillMode:o,fillValue:u,outputShape:l}=r,[c,h,d,p]=s.shape,[f,m]=null!=l?l:[h,d],g=new CG(h,d,i,o,u,[c,f,m,p]);return n.runWebGLProgram(g,[s,a],"float32")}},AG={kernelName:us,backendName:"webgl",kernelFunc:function(e){const{inputs:t,attrs:n,backend:r}=e,{axis:s}=n,{x:a}=t;EM(a,"unique"),console.warn("WARNING: ","UI might be locked temporarily as data is being downloaded");const i=r.readSync(a.dataId),{outputValues:o,outputShape:u,indices:l}=vL(i,s,a.shape,a.dtype);return[r.makeTensorInfo(u,a.dtype,o),r.makeTensorInfo([l.length],"int32",l)]}},RG={kernelName:ls,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{value:s}=t;let{axis:a}=r;a<0&&(a+=s.shape.length);const i=s,o=i.shape.length,u=s.shape[a],l=new Array(o-1);let c=0;for(let e=0;e<o;e++)e!==a&&(l[c++]=i.shape[e]);const h=[],d=new Array(o).fill(0),p=i.shape.slice();p[a]=1;const f=new Array(u);for(let e=0;e<f.length;e++){d[a]=e;const t=wP({inputs:{x:i},backend:n,attrs:{begin:d,size:p}}),r=fz({inputs:{x:t},backend:n,attrs:{shape:l}});f[e]=r,h.push(t)}return h.forEach(e=>n.disposeIntermediateTensorInfo(e)),f}};class _G{constructor(e,t){this.variableNames=["x","segmentIds"];const n=e.windowSize,r=e.batchSize,s=e.inSize,a=e.numSegments,i=a*Math.ceil(s/n);this.outputShape=[r,i];const o=4*Math.floor(n/4),u=n%4,l="\n        sumValue += dot(values, segFilter);\n    ";let c="";s%n>0&&(c=`\n        if (inIdx < 0 || inIdx >= ${s}) {\n          return initializationValue;\n        }\n      `);let h="";s%n>0&&(h=`\n        if (inIdx < 0 || inIdx >= ${s}) {\n          return -1.0;\n        }\n      `),this.userCode=`\n      const float initializationValue = 0.0;\n\n      float getValue(int batch, int inIdx) {\n        ${c}\n        return getX(batch, inIdx);\n      }\n\n      float getSegmentIdAtIndex(int inIdx) {\n        ${h}\n        return getSegmentIds(inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = int(floor(float(outIdx) / float(\n          ${a})) * float(${n}));\n        int currentSeg = int(mod(float(outIdx), float(${a})));\n\n        float sumValue = 0.0;\n\n        for (int i = 0; i < ${o}; i += 4) {\n          int inIdx = inOffset + i;\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 3)) == currentSeg ? 1 : 0\n          );\n\n          ${l}\n        }\n\n        int inIdx = inOffset + ${o};\n        if (${1===u}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            initializationValue,\n            initializationValue,\n            initializationValue\n          );\n\n          int inIdxSeg = int(getSegmentIdAtIndex(inIdx));\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            0,\n            0,\n            0\n          );\n\n          ${l}\n        } else if (${2===u}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            initializationValue,\n            initializationValue\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n              0,\n              0\n          );\n\n          ${l}\n        } else if (${3===u}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            initializationValue\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,\n            0\n          );\n\n          ${l}\n        }\n        setOutput(sumValue);\n      }\n    `}}const DG={kernelName:cs,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,segmentIds:a}=t,{numSegments:i}=r,o=s.shape.length,u=[];let l=0;const c=nh([l],o);let h=s;null!=c&&(h=Iz({inputs:{x:s},backend:n,attrs:{perm:c}}),u.push(h),l=sh(1,o)[0]);const d=Gm(h.shape,l,i),p=le([h.shape[l]]),f=fz({inputs:{x:h},backend:n,attrs:{shape:[-1,p]}});u.push(f);const m=Na(s.dtype),g=(e,t,r,s,a)=>{const i=e.shape[0],o=e.shape[1],l=Wm(o,a),c=new _G({windowSize:l,inSize:o,batchSize:i,numSegments:a},t),h=n.compileAndRun(c,[e,r],s);if(u.push(h),h.shape[1]===a)return h;const d=tW({backend:n,attrs:{start:0,stop:a,step:1,dtype:"float32"}}),p=vG({inputs:{x:d},backend:n,attrs:{reps:[o/l]}});return u.push(d),u.push(p),g(h,t,p,s,a)},y=fz({inputs:{x:g(f,"unsortedSegmentSum",a,m,i)},backend:n,attrs:{shape:d}});let b=y;if(null!=c){u.push(y);const e=rh(c);b=Iz({inputs:{x:b},backend:n,attrs:{perm:e}})}return u.forEach(e=>n.disposeIntermediateTensorInfo(e)),b}},FG=[Ez,$z,Rz,Dz,Oz,Pz,Bz,Vz,Kz,qz,Yz,Qz,eP,nP,sP,oP,uP,hP,dP,pP,gP,kP,NP,IP,SP,AP,DP,OP,QL,PP,KP,tB,iB,uB,lB,cB,hB,pB,mB,yB,NB,IB,SB,EB,AB,DB,FB,OB,zB,PB,VB,UB,GB,jB,qB,YB,JB,nV,aV,oV,cV,dV,mV,bV,xV,vV,IV,TV,CV,YL,$V,GP,RV,DV,MV,tz,LV,PV,BV,UV,GV,jV,qV,YV,JV,tU,rU,aU,iU,oU,cU,hU,dU,pU,fU,gU,xU,vU,AU,pz,_U,FU,OU,zU,EP,BU,WU,GU,qU,YU,sz,ZU,QU,JU,eW,nW,$P,IU,sW,iW,uW,mz,hW,pW,gW,bW,vW,NW,SW,EW,AW,_W,FW,OW,zW,BW,UW,GW,vP,$U,jW,KW,qW,XW,YW,ZW,QW,JW,nG,sG,oG,uG,lG,hG,dG,pG,fG,EU,Nz,gG,bG,xG,kG,EG,$G,Sz,AG,RG,DG,UU];for(const e of FG)Ts(e);const MG={"tfjs-core":$l,"tfjs-backend-cpu":pA,"tfjs-backend-webgl":UL,"tfjs-data":PE,"tfjs-layers":Rw,"tfjs-converter":_T,tfjs:"4.22.0"}},983:(e,t,n)=>{"use strict";n.r(t),n.d(t,{default:()=>a});var r=n(512),s=n.n(r);function a(){return s()('/*! For license information please see index.worker.js.LICENSE.txt */\n(()=>{var e={31:function(e,t,n){var r;!function(e,s){function a(e){var t=this,n="";t.next=function(){var e=t.x^t.x>>>2;return t.x=t.y,t.y=t.z,t.z=t.w,t.w=t.v,(t.d=t.d+362437|0)+(t.v=t.v^t.v<<4^e^e<<1)|0},t.x=0,t.y=0,t.z=0,t.w=0,t.v=0,e===(0|e)?t.x=e:n+=e;for(var r=0;r<n.length+64;r++)t.x^=0|n.charCodeAt(r),r==n.length&&(t.d=t.x<<10^t.x>>>4),t.next()}function i(e,t){return t.x=e.x,t.y=e.y,t.z=e.z,t.w=e.w,t.v=e.v,t.d=e.d,t}function o(e,t){var n=new a(e),r=t&&t.state,s=function(){return(n.next()>>>0)/4294967296};return s.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},s.int32=n.next,s.quick=s,r&&("object"==typeof r&&i(r,n),s.state=function(){return i(n,{})}),s}s&&s.exports?s.exports=o:n.amdD&&n.amdO?void 0===(r=function(){return o}.call(t,n,t,s))||(s.exports=r):this.xorwow=o}(0,e=n.nmd(e),n.amdD)},44:function(e,t,n){"use strict";var r=this&&this.__awaiter||function(e,t,n,r){return new(n||(n=Promise))(function(s,a){function i(e){try{u(r.next(e))}catch(e){a(e)}}function o(e){try{u(r.throw(e))}catch(e){a(e)}}function u(e){var t;e.done?s(e.value):(t=e.value,t instanceof n?t:new n(function(e){e(t)})).then(i,o)}u((r=r.apply(e,t||[])).next())})},s=this&&this.__generator||function(e,t){var n,r,s,a={label:0,sent:function(){if(1&s[0])throw s[1];return s[1]},trys:[],ops:[]},i=Object.create(("function"==typeof Iterator?Iterator:Object).prototype);return i.next=o(0),i.throw=o(1),i.return=o(2),"function"==typeof Symbol&&(i[Symbol.iterator]=function(){return this}),i;function o(o){return function(u){return function(o){if(n)throw new TypeError("Generator is already executing.");for(;i&&(i=0,o[0]&&(a=0)),a;)try{if(n=1,r&&(s=2&o[0]?r.return:o[0]?r.throw||((s=r.return)&&s.call(r),0):r.next)&&!(s=s.call(r,o[1])).done)return s;switch(r=0,s&&(o=[2&o[0],s.value]),o[0]){case 0:case 1:s=o;break;case 4:return a.label++,{value:o[1],done:!1};case 5:a.label++,r=o[1],o=[0];continue;case 7:o=a.ops.pop(),a.trys.pop();continue;default:if(!((s=(s=a.trys).length>0&&s[s.length-1])||6!==o[0]&&2!==o[0])){a=0;continue}if(3===o[0]&&(!s||o[1]>s[0]&&o[1]<s[3])){a.label=o[1];break}if(6===o[0]&&a.label<s[1]){a.label=s[1],s=o;break}if(s&&a.label<s[2]){a.label=s[2],a.ops.push(o);break}s[2]&&a.ops.pop(),a.trys.pop();continue}o=t.call(e,a)}catch(e){o=[6,e],r=0}finally{n=s=0}if(5&o[0])throw o[1];return{value:o[0]?o[1]:void 0,done:!0}}([o,u])}}},a=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});var i,o=a(n(382)),u="idle";self.onmessage=function(e){return r(void 0,void 0,void 0,function(){var t,n,r,a;return s(this,function(s){switch(s.label){case 0:switch(t=e.data,n=t.type,r=t.payload,n){case"init":return[3,1];case"step":return[3,3];case"click":return[3,6]}return[3,7];case 1:return[4,(i=new o.default).initialize()];case 2:return s.sent(),self.postMessage({type:"ready"}),u="idle",[3,8];case 3:return"idle"!==u?[3,5]:(u="inference",self.postMessage({type:"statusUpdate",status:u}),[4,i.step(r.frame,r.timestamp)]);case 4:a=s.sent(),r.timestamp,self.postMessage({type:"stepResult",result:a}),u="idle",self.postMessage({type:"statusUpdate",status:u}),s.label=5;case 5:return[3,8];case 6:return u="calib",self.postMessage({type:"statusUpdate",status:u}),i.handleClick(r.x,r.y),u="idle",self.postMessage({type:"statusUpdate",status:u}),[3,8];case 7:return console.warn("[WebEyeTrackWorker] Unknown message type: ".concat(n)),[3,8];case 8:return[2]}})})}},45:function(e,t,n){"use strict";var r,s=this&&this.__createBinding||(Object.create?function(e,t,n,r){void 0===r&&(r=n);var s=Object.getOwnPropertyDescriptor(t,n);s&&!("get"in s?!t.__esModule:s.writable||s.configurable)||(s={enumerable:!0,get:function(){return t[n]}}),Object.defineProperty(e,r,s)}:function(e,t,n,r){void 0===r&&(r=n),e[r]=t[n]}),a=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),i=this&&this.__importStar||(r=function(e){return r=Object.getOwnPropertyNames||function(e){var t=[];for(var n in e)Object.prototype.hasOwnProperty.call(e,n)&&(t[t.length]=n);return t},r(e)},function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n=r(e),i=0;i<n.length;i++)"default"!==n[i]&&s(t,e,n[i]);return a(t,e),t}),o=this&&this.__awaiter||function(e,t,n,r){return new(n||(n=Promise))(function(s,a){function i(e){try{u(r.next(e))}catch(e){a(e)}}function o(e){try{u(r.throw(e))}catch(e){a(e)}}function u(e){var t;e.done?s(e.value):(t=e.value,t instanceof n?t:new n(function(e){e(t)})).then(i,o)}u((r=r.apply(e,t||[])).next())})},u=this&&this.__generator||function(e,t){var n,r,s,a={label:0,sent:function(){if(1&s[0])throw s[1];return s[1]},trys:[],ops:[]},i=Object.create(("function"==typeof Iterator?Iterator:Object).prototype);return i.next=o(0),i.throw=o(1),i.return=o(2),"function"==typeof Symbol&&(i[Symbol.iterator]=function(){return this}),i;function o(o){return function(u){return function(o){if(n)throw new TypeError("Generator is already executing.");for(;i&&(i=0,o[0]&&(a=0)),a;)try{if(n=1,r&&(s=2&o[0]?r.return:o[0]?r.throw||((s=r.return)&&s.call(r),0):r.next)&&!(s=s.call(r,o[1])).done)return s;switch(r=0,s&&(o=[2&o[0],s.value]),o[0]){case 0:case 1:s=o;break;case 4:return a.label++,{value:o[1],done:!1};case 5:a.label++,r=o[1],o=[0];continue;case 7:o=a.ops.pop(),a.trys.pop();continue;default:if(!((s=(s=a.trys).length>0&&s[s.length-1])||6!==o[0]&&2!==o[0])){a=0;continue}if(3===o[0]&&(!s||o[1]>s[0]&&o[1]<s[3])){a.label=o[1];break}if(6===o[0]&&a.label<s[1]){a.label=s[1],s=o;break}if(s&&a.label<s[2]){a.label=s[2],a.ops.push(o);break}s[2]&&a.ops.pop(),a.trys.pop();continue}o=t.call(e,a)}catch(e){o=[6,e],r=0}finally{n=s=0}if(5&o[0])throw o[1];return{value:o[0]?o[1]:void 0,done:!0}}([o,u])}}};Object.defineProperty(t,"__esModule",{value:!0});var l=i(n(951)),c=function(){function e(){this.model=null}return e.prototype.loadModel=function(){return o(this,void 0,void 0,function(){var e,t,n;return u(this,function(r){switch(r.label){case 0:e="".concat(self.location.origin,"/web/model.json"),r.label=1;case 1:return r.trys.push([1,3,,4]),t=this,[4,l.loadLayersModel(e)];case 2:return t.model=r.sent(),console.log("✅ BlazeGaze model loaded successfully"),[3,4];case 3:throw n=r.sent(),console.error("❌ Error loading BlazeGaze model from path:",e),console.error(n),n;case 4:return this.model.getLayer("cnn_encoder").trainable=!1,[2]}})})},e.prototype.predict=function(e,t,n){if(!this.model)throw new Error("Model not loaded. Call loadModel() first.");var r=[e,t,n],s=this.model.predict(r);return Array.isArray(s)?s[0]:s},e}();t.default=c},67:function(e,t,n){var r;!function(e,s){function a(e){var t=this;t.next=function(){var e,n,r=t.x,s=t.i;return e=r[s],n=(e^=e>>>7)^e<<24,n^=(e=r[s+1&7])^e>>>10,n^=(e=r[s+3&7])^e>>>3,n^=(e=r[s+4&7])^e<<7,e=r[s+7&7],n^=(e^=e<<13)^e<<9,r[s]=n,t.i=s+1&7,n},function(e,t){var n,r=[];if(t===(0|t))r[0]=t;else for(t=""+t,n=0;n<t.length;++n)r[7&n]=r[7&n]<<15^t.charCodeAt(n)+r[n+1&7]<<13;for(;r.length<8;)r.push(0);for(n=0;n<8&&0===r[n];++n);for(8==n?r[7]=-1:r[n],e.x=r,e.i=0,n=256;n>0;--n)e.next()}(t,e)}function i(e,t){return t.x=e.x.slice(),t.i=e.i,t}function o(e,t){null==e&&(e=+new Date);var n=new a(e),r=t&&t.state,s=function(){return(n.next()>>>0)/4294967296};return s.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},s.int32=n.next,s.quick=s,r&&(r.x&&i(r,n),s.state=function(){return i(n,{})}),s}s&&s.exports?s.exports=o:n.amdD&&n.amdO?void 0===(r=function(){return o}.call(t,n,t,s))||(s.exports=r):this.xorshift7=o}(0,e=n.nmd(e),n.amdD)},108:()=>{},180:function(e,t,n){var r;!function(e,s){function a(e){var t,n=this,r=(t=4022871197,function(e){e=String(e);for(var n=0;n<e.length;n++){var r=.02519603282416938*(t+=e.charCodeAt(n));r-=t=r>>>0,t=(r*=t)>>>0,t+=4294967296*(r-=t)}return 2.3283064365386963e-10*(t>>>0)});n.next=function(){var e=2091639*n.s0+2.3283064365386963e-10*n.c;return n.s0=n.s1,n.s1=n.s2,n.s2=e-(n.c=0|e)},n.c=1,n.s0=r(" "),n.s1=r(" "),n.s2=r(" "),n.s0-=r(e),n.s0<0&&(n.s0+=1),n.s1-=r(e),n.s1<0&&(n.s1+=1),n.s2-=r(e),n.s2<0&&(n.s2+=1),r=null}function i(e,t){return t.c=e.c,t.s0=e.s0,t.s1=e.s1,t.s2=e.s2,t}function o(e,t){var n=new a(e),r=t&&t.state,s=n.next;return s.int32=function(){return 4294967296*n.next()|0},s.double=function(){return s()+11102230246251565e-32*(2097152*s()|0)},s.quick=s,r&&("object"==typeof r&&i(r,n),s.state=function(){return i(n,{})}),s}s&&s.exports?s.exports=o:n.amdD&&n.amdO?void 0===(r=function(){return o}.call(t,n,t,s))||(s.exports=r):this.alea=o}(0,e=n.nmd(e),n.amdD)},181:function(e,t,n){var r;!function(e,s){function a(e){var t=this,n="";t.x=0,t.y=0,t.z=0,t.w=0,t.next=function(){var e=t.x^t.x<<11;return t.x=t.y,t.y=t.z,t.z=t.w,t.w^=t.w>>>19^e^e>>>8},e===(0|e)?t.x=e:n+=e;for(var r=0;r<n.length+64;r++)t.x^=0|n.charCodeAt(r),t.next()}function i(e,t){return t.x=e.x,t.y=e.y,t.z=e.z,t.w=e.w,t}function o(e,t){var n=new a(e),r=t&&t.state,s=function(){return(n.next()>>>0)/4294967296};return s.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},s.int32=n.next,s.quick=s,r&&("object"==typeof r&&i(r,n),s.state=function(){return i(n,{})}),s}s&&s.exports?s.exports=o:n.amdD&&n.amdO?void 0===(r=function(){return o}.call(t,n,t,s))||(s.exports=r):this.xor128=o}(0,e=n.nmd(e),n.amdD)},234:()=>{},298:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.safeSVD=function(e){var t=console.warn;console.warn=function(){for(var e=[],n=0;n<arguments.length;n++)e[n]=arguments[n];var r=e[0];"string"==typeof r&&r.includes("autoTranspose")||t.apply(console,e)};var n=new r.SVD(e,{autoTranspose:!1});return console.warn=t,n};var r=n(673)},382:function(e,t,n){"use strict";var r,s=this&&this.__createBinding||(Object.create?function(e,t,n,r){void 0===r&&(r=n);var s=Object.getOwnPropertyDescriptor(t,n);s&&!("get"in s?!t.__esModule:s.writable||s.configurable)||(s={enumerable:!0,get:function(){return t[n]}}),Object.defineProperty(e,r,s)}:function(e,t,n,r){void 0===r&&(r=n),e[r]=t[n]}),a=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),i=this&&this.__importStar||(r=function(e){return r=Object.getOwnPropertyNames||function(e){var t=[];for(var n in e)Object.prototype.hasOwnProperty.call(e,n)&&(t[t.length]=n);return t},r(e)},function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n=r(e),i=0;i<n.length;i++)"default"!==n[i]&&s(t,e,n[i]);return a(t,e),t}),o=this&&this.__awaiter||function(e,t,n,r){return new(n||(n=Promise))(function(s,a){function i(e){try{u(r.next(e))}catch(e){a(e)}}function o(e){try{u(r.throw(e))}catch(e){a(e)}}function u(e){var t;e.done?s(e.value):(t=e.value,t instanceof n?t:new n(function(e){e(t)})).then(i,o)}u((r=r.apply(e,t||[])).next())})},u=this&&this.__generator||function(e,t){var n,r,s,a={label:0,sent:function(){if(1&s[0])throw s[1];return s[1]},trys:[],ops:[]},i=Object.create(("function"==typeof Iterator?Iterator:Object).prototype);return i.next=o(0),i.throw=o(1),i.return=o(2),"function"==typeof Symbol&&(i[Symbol.iterator]=function(){return this}),i;function o(o){return function(u){return function(o){if(n)throw new TypeError("Generator is already executing.");for(;i&&(i=0,o[0]&&(a=0)),a;)try{if(n=1,r&&(s=2&o[0]?r.return:o[0]?r.throw||((s=r.return)&&s.call(r),0):r.next)&&!(s=s.call(r,o[1])).done)return s;switch(r=0,s&&(o=[2&o[0],s.value]),o[0]){case 0:case 1:s=o;break;case 4:return a.label++,{value:o[1],done:!1};case 5:a.label++,r=o[1],o=[0];continue;case 7:o=a.ops.pop(),a.trys.pop();continue;default:if(!((s=(s=a.trys).length>0&&s[s.length-1])||6!==o[0]&&2!==o[0])){a=0;continue}if(3===o[0]&&(!s||o[1]>s[0]&&o[1]<s[3])){a.label=o[1];break}if(6===o[0]&&a.label<s[1]){a.label=s[1],s=o;break}if(s&&a.label<s[2]){a.label=s[2],a.ops.push(o);break}s[2]&&a.ops.pop(),a.trys.pop();continue}o=t.call(e,a)}catch(e){o=[6,e],r=0}finally{n=s=0}if(5&o[0])throw o[1];return{value:o[0]?o[1]:void 0,done:!0}}([o,u])}}},l=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});var c=i(n(951)),h=n(673),d=l(n(45)),p=l(n(743)),f=n(985),m=n(670),g=function(){function e(e,t){void 0===e&&(e=5),void 0===t&&(t=60),this.faceWidthComputed=!1,this.faceWidthCm=-1,this.perspectiveMatrixSet=!1,this.perspectiveMatrix=new h.Matrix(4,4),this.intrinsicsMatrixSet=!1,this.intrinsicsMatrix=new h.Matrix(3,3),this.affineMatrix=null,this.loaded=!1,this.latestMouseClick=null,this.latestGazeResult=null,this.calibData={supportX:[],supportY:[],timestamps:[],ptType:["calib"]},this.maxPoints=5,this.clickTTL=60,this.blazeGaze=new d.default,this.faceLandmarkerClient=new p.default,this.kalmanFilter=new m.KalmanFilter2D,this.maxPoints=e,this.clickTTL=t}return e.prototype.initialize=function(){return o(this,void 0,void 0,function(){return u(this,function(e){switch(e.label){case 0:return[4,this.faceLandmarkerClient.initialize()];case 1:return e.sent(),[4,this.blazeGaze.loadModel()];case 2:return e.sent(),this.loaded=!0,[2]}})})},e.prototype.pruneCalibData=function(){var e=this;c.tidy(function(){e.calibData.supportX.length>e.maxPoints&&(e.calibData.supportX=e.calibData.supportX.slice(-e.maxPoints),e.calibData.supportY=e.calibData.supportY.slice(-e.maxPoints),e.calibData.timestamps=e.calibData.timestamps.slice(-e.maxPoints),e.calibData.ptType=e.calibData.ptType.slice(-e.maxPoints));var t=Date.now(),n=1e3*e.clickTTL,r=e.calibData.timestamps.map(function(r,s){return t-r<=n||"click"!==e.calibData.ptType[s]?s:-1}).filter(function(e){return-1!==e});e.calibData.supportX=r.map(function(t){return e.calibData.supportX[t]}),e.calibData.supportY=r.map(function(t){return e.calibData.supportY[t]}),e.calibData.timestamps=r.map(function(t){return e.calibData.timestamps[t]}),e.calibData.ptType=r.map(function(t){return e.calibData.ptType[t]})})},e.prototype.handleClick=function(e,t){var n,r,s;return console.log("🖱️ Global click at: (".concat(e,", ").concat(t,"), ").concat(this.loaded)),this.latestMouseClick&&Date.now()-this.latestMouseClick.timestamp<1e3?(console.log("🖱️ Click ignored due to debounce"),void(this.latestMouseClick={x:e,y:t,timestamp:Date.now()})):this.latestMouseClick&&Math.abs(e-this.latestMouseClick.x)<.05&&Math.abs(t-this.latestMouseClick.y)<.05?(console.log("🖱️ Click ignored due to proximity to last click"),void(this.latestMouseClick={x:e,y:t,timestamp:Date.now()})):(this.latestMouseClick={x:e,y:t,timestamp:Date.now()},void(this.loaded&&this.latestGazeResult&&this.adapt([null===(n=this.latestGazeResult)||void 0===n?void 0:n.eyePatch],[null===(r=this.latestGazeResult)||void 0===r?void 0:r.headVector],[null===(s=this.latestGazeResult)||void 0===s?void 0:s.faceOrigin3D],[[e,t]])))},e.prototype.computeFaceOrigin3D=function(e,t,n,r){var s,a,i;!1===this.faceWidthComputed&&(this.faceWidthCm=(0,f.estimateFaceWidth)(n),this.faceWidthComputed=!0);var o=(0,f.faceReconstruction)(this.perspectiveMatrix,t,r,this.intrinsicsMatrix,this.faceWidthCm,e.width,e.height,null!==(i=null===(a=null===(s=this.latestGazeResult)||void 0===s?void 0:s.faceOrigin3D)||void 0===a?void 0:a[2])&&void 0!==i?i:60),u=(o[0],o[1]);return(0,f.computeFaceOrigin3D)(u)},e.prototype.prepareInput=function(e,t){var n=e.width,r=e.height;if(!this.perspectiveMatrixSet){var s=n/r;this.perspectiveMatrix=(0,f.createPerspectiveMatrix)(s),this.perspectiveMatrixSet=!0}this.intrinsicsMatrixSet||(this.intrinsicsMatrix=(0,f.createIntrinsicsMatrix)(n,r));var a=t.faceLandmarks[0],i=a.map(function(e){return[Math.floor(e.x*n),Math.floor(e.y*r)]}),o=(0,f.translateMatrix)(t.facialTransformationMatrixes[0]),u=(0,f.obtainEyePatch)(e,i),l=this.computeFaceOrigin3D(e,a.map(function(e){return[e.x,e.y]}),i,o);return[u,(0,f.getHeadVector)(o),l]},e.prototype.adapt=function(e,t,n,r,s,a,i){var o=this;void 0===s&&(s=1),void 0===a&&(a=1e-5),void 0===i&&(i="calib"),this.pruneCalibData();var u,l,h,d,p=c.train.adam(a,.85,.9,1e-8),m=function(e,t,n,r){return{supportX:{eyePatches:c.stack(e.map(function(e){return c.browser.fromPixels(e)}),0).toFloat().div(c.scalar(255)),headVectors:c.tensor(t,[t.length,3],"float32"),faceOrigins3D:c.tensor(n,[n.length,3],"float32")},supportY:c.tensor(r,[r.length,2],"float32")}}(e,t,n,r),g=m.supportX,y=m.supportY;if(this.calibData.supportX.push(g),this.calibData.supportY.push(y),this.calibData.timestamps.push(Date.now()),this.calibData.ptType.push(i),this.calibData.supportX.length>1?(u=c.concat(this.calibData.supportX.map(function(e){return e.eyePatches}),0),l=c.concat(this.calibData.supportX.map(function(e){return e.headVectors}),0),h=c.concat(this.calibData.supportX.map(function(e){return e.faceOrigins3D}),0),d=c.concat(this.calibData.supportY,0)):(u=g.eyePatches,l=g.headVectors,h=g.faceOrigins3D,d=y),u.shape[0]>3){var b=c.tidy(function(){return o.blazeGaze.predict(u,l,h)}).arraySync(),x=d.arraySync(),w=(0,f.computeAffineMatrixML)(b,x);this.affineMatrix=c.tensor2d(w,[2,3],"float32")}c.tidy(function(){for(var e=0;e<s;e++){var t=c.variableGrads(function(){var e=o.blazeGaze.predict(u,l,h),t=o.affineMatrix?(0,f.applyAffineMatrix)(o.affineMatrix,e):e;return c.losses.meanSquaredError(d,t).asScalar()}),n=t.grads,r=t.value;p.applyGradients(n),r.data().then(function(e){return console.log("Loss = ".concat(e[0].toFixed(4)))})}})},e.prototype.step=function(e,t){return o(this,void 0,void 0,function(){var n,r,s,a,i,o,l,h,d,p,m,g,y,b,x,w,v,k,I,S=this;return u(this,function(u){switch(u.label){case 0:return n=performance.now(),[4,this.faceLandmarkerClient.processFrame(e)];case 1:return r=u.sent(),s=performance.now(),r&&r.faceLandmarks&&0!==r.faceLandmarks.length?(a=this.prepareInput(e,r),i=a[0],o=a[1],l=a[2],h=performance.now(),d="open",p=(0,f.computeEAR)(r.faceLandmarks[0],"left"),m=(0,f.computeEAR)(r.faceLandmarks[0],"right"),(p<.2||m<.2)&&(d="closed"),"closed"===d?[2,{facialLandmarks:r.faceLandmarks[0],faceRt:r.facialTransformationMatrixes[0],faceBlendshapes:r.faceBlendshapes,eyePatch:i,headVector:o,faceOrigin3D:l,metric_transform:{rows:3,columns:3,data:[1,0,0,1,0,0,1,0,0]},gazeState:d,normPog:[0,0],durations:{faceLandmarker:s-n,prepareInput:h-s,blazeGaze:0,kalmanFilter:0,total:h-n},timestamp:t}]:(g=c.tidy(function(){var e=c.browser.fromPixels(i).toFloat().expandDims(0),t=e.div(c.scalar(255)),n=c.tensor2d(o,[1,3]),r=c.tensor2d(l,[1,3]),s=S.blazeGaze.predict(t,n,r);c.dispose([e,t,n,r]);var a=performance.now();if(S.affineMatrix&&(s=(0,f.applyAffineMatrix)(S.affineMatrix,s)),!s||0===s.shape.length)throw new Error("BlazeGaze model did not return valid output");return[s,a]}),y=g[0],b=g[1],x=y.arraySync(),c.dispose(y),w=this.kalmanFilter.step(x[0]),v=performance.now(),w[0]=Math.max(-.5,Math.min(.5,w[0])),w[1]=Math.max(-.5,Math.min(.5,w[1])),k={faceLandmarker:s-n,prepareInput:h-s,blazeGaze:b-h,kalmanFilter:v-b,total:v-n},I={facialLandmarks:r.faceLandmarks[0],faceRt:r.facialTransformationMatrixes[0],faceBlendshapes:r.faceBlendshapes,eyePatch:i,headVector:o,faceOrigin3D:l,metric_transform:{rows:3,columns:3,data:[1,0,0,1,0,0,1,0,0]},gazeState:d,normPog:w,durations:k,timestamp:t},this.latestGazeResult=I,[2,I])):[2,{facialLandmarks:[],faceRt:{rows:0,columns:0,data:[]},faceBlendshapes:[],eyePatch:new ImageData(1,1),headVector:[0,0,0],faceOrigin3D:[0,0,0],metric_transform:{rows:3,columns:3,data:[1,0,0,1,0,0,1,0,0]},gazeState:"closed",normPog:[0,0],durations:{faceLandmarker:s-n,prepareInput:0,blazeGaze:0,kalmanFilter:0,total:0},timestamp:t}]}})})},e}();t.default=g},391:(e,t,n)=>{var r=n(180),s=n(181),a=n(31),i=n(67),o=n(833),u=n(717),l=n(801);l.alea=r,l.xor128=s,l.xorwow=a,l.xorshift7=i,l.xor4096=o,l.tychei=u,e.exports=l},530:()=>{},551:()=>{},570:e=>{e.exports=n;var t=null;try{t=new WebAssembly.Instance(new WebAssembly.Module(new Uint8Array([0,97,115,109,1,0,0,0,1,13,2,96,0,1,127,96,4,127,127,127,127,1,127,3,7,6,0,1,1,1,1,1,6,6,1,127,1,65,0,11,7,50,6,3,109,117,108,0,1,5,100,105,118,95,115,0,2,5,100,105,118,95,117,0,3,5,114,101,109,95,115,0,4,5,114,101,109,95,117,0,5,8,103,101,116,95,104,105,103,104,0,0,10,191,1,6,4,0,35,0,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,126,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,127,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,128,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,129,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,130,34,4,66,32,135,167,36,0,32,4,167,11])),{}).exports}catch(e){}function n(e,t,n){this.low=0|e,this.high=0|t,this.unsigned=!!n}function r(e){return!0===(e&&e.__isLong__)}n.prototype.__isLong__,Object.defineProperty(n.prototype,"__isLong__",{value:!0}),n.isLong=r;var s={},a={};function i(e,t){var n,r,i;return t?(i=0<=(e>>>=0)&&e<256)&&(r=a[e])?r:(n=u(e,(0|e)<0?-1:0,!0),i&&(a[e]=n),n):(i=-128<=(e|=0)&&e<128)&&(r=s[e])?r:(n=u(e,e<0?-1:0,!1),i&&(s[e]=n),n)}function o(e,t){if(isNaN(e))return t?y:g;if(t){if(e<0)return y;if(e>=p)return k}else{if(e<=-f)return I;if(e+1>=f)return v}return e<0?o(-e,t).neg():u(e%d|0,e/d|0,t)}function u(e,t,r){return new n(e,t,r)}n.fromInt=i,n.fromNumber=o,n.fromBits=u;var l=Math.pow;function c(e,t,n){if(0===e.length)throw Error("empty string");if("NaN"===e||"Infinity"===e||"+Infinity"===e||"-Infinity"===e)return g;if("number"==typeof t?(n=t,t=!1):t=!!t,(n=n||10)<2||36<n)throw RangeError("radix");var r;if((r=e.indexOf("-"))>0)throw Error("interior hyphen");if(0===r)return c(e.substring(1),t,n).neg();for(var s=o(l(n,8)),a=g,i=0;i<e.length;i+=8){var u=Math.min(8,e.length-i),h=parseInt(e.substring(i,i+u),n);if(u<8){var d=o(l(n,u));a=a.mul(d).add(o(h))}else a=(a=a.mul(s)).add(o(h))}return a.unsigned=t,a}function h(e,t){return"number"==typeof e?o(e,t):"string"==typeof e?c(e,t):u(e.low,e.high,"boolean"==typeof t?t:e.unsigned)}n.fromString=c,n.fromValue=h;var d=4294967296,p=d*d,f=p/2,m=i(1<<24),g=i(0);n.ZERO=g;var y=i(0,!0);n.UZERO=y;var b=i(1);n.ONE=b;var x=i(1,!0);n.UONE=x;var w=i(-1);n.NEG_ONE=w;var v=u(-1,2147483647,!1);n.MAX_VALUE=v;var k=u(-1,-1,!0);n.MAX_UNSIGNED_VALUE=k;var I=u(0,-2147483648,!1);n.MIN_VALUE=I;var S=n.prototype;S.toInt=function(){return this.unsigned?this.low>>>0:this.low},S.toNumber=function(){return this.unsigned?(this.high>>>0)*d+(this.low>>>0):this.high*d+(this.low>>>0)},S.toString=function(e){if((e=e||10)<2||36<e)throw RangeError("radix");if(this.isZero())return"0";if(this.isNegative()){if(this.eq(I)){var t=o(e),n=this.div(t),r=n.mul(t).sub(this);return n.toString(e)+r.toInt().toString(e)}return"-"+this.neg().toString(e)}for(var s=o(l(e,6),this.unsigned),a=this,i="";;){var u=a.div(s),c=(a.sub(u.mul(s)).toInt()>>>0).toString(e);if((a=u).isZero())return c+i;for(;c.length<6;)c="0"+c;i=""+c+i}},S.getHighBits=function(){return this.high},S.getHighBitsUnsigned=function(){return this.high>>>0},S.getLowBits=function(){return this.low},S.getLowBitsUnsigned=function(){return this.low>>>0},S.getNumBitsAbs=function(){if(this.isNegative())return this.eq(I)?64:this.neg().getNumBitsAbs();for(var e=0!=this.high?this.high:this.low,t=31;t>0&&!(e&1<<t);t--);return 0!=this.high?t+33:t+1},S.isZero=function(){return 0===this.high&&0===this.low},S.eqz=S.isZero,S.isNegative=function(){return!this.unsigned&&this.high<0},S.isPositive=function(){return this.unsigned||this.high>=0},S.isOdd=function(){return!(1&~this.low)},S.isEven=function(){return!(1&this.low)},S.equals=function(e){return r(e)||(e=h(e)),(this.unsigned===e.unsigned||this.high>>>31!=1||e.high>>>31!=1)&&this.high===e.high&&this.low===e.low},S.eq=S.equals,S.notEquals=function(e){return!this.eq(e)},S.neq=S.notEquals,S.ne=S.notEquals,S.lessThan=function(e){return this.comp(e)<0},S.lt=S.lessThan,S.lessThanOrEqual=function(e){return this.comp(e)<=0},S.lte=S.lessThanOrEqual,S.le=S.lessThanOrEqual,S.greaterThan=function(e){return this.comp(e)>0},S.gt=S.greaterThan,S.greaterThanOrEqual=function(e){return this.comp(e)>=0},S.gte=S.greaterThanOrEqual,S.ge=S.greaterThanOrEqual,S.compare=function(e){if(r(e)||(e=h(e)),this.eq(e))return 0;var t=this.isNegative(),n=e.isNegative();return t&&!n?-1:!t&&n?1:this.unsigned?e.high>>>0>this.high>>>0||e.high===this.high&&e.low>>>0>this.low>>>0?-1:1:this.sub(e).isNegative()?-1:1},S.comp=S.compare,S.negate=function(){return!this.unsigned&&this.eq(I)?I:this.not().add(b)},S.neg=S.negate,S.add=function(e){r(e)||(e=h(e));var t=this.high>>>16,n=65535&this.high,s=this.low>>>16,a=65535&this.low,i=e.high>>>16,o=65535&e.high,l=e.low>>>16,c=0,d=0,p=0,f=0;return p+=(f+=a+(65535&e.low))>>>16,d+=(p+=s+l)>>>16,c+=(d+=n+o)>>>16,c+=t+i,u((p&=65535)<<16|(f&=65535),(c&=65535)<<16|(d&=65535),this.unsigned)},S.subtract=function(e){return r(e)||(e=h(e)),this.add(e.neg())},S.sub=S.subtract,S.multiply=function(e){if(this.isZero())return g;if(r(e)||(e=h(e)),t)return u(t.mul(this.low,this.high,e.low,e.high),t.get_high(),this.unsigned);if(e.isZero())return g;if(this.eq(I))return e.isOdd()?I:g;if(e.eq(I))return this.isOdd()?I:g;if(this.isNegative())return e.isNegative()?this.neg().mul(e.neg()):this.neg().mul(e).neg();if(e.isNegative())return this.mul(e.neg()).neg();if(this.lt(m)&&e.lt(m))return o(this.toNumber()*e.toNumber(),this.unsigned);var n=this.high>>>16,s=65535&this.high,a=this.low>>>16,i=65535&this.low,l=e.high>>>16,c=65535&e.high,d=e.low>>>16,p=65535&e.low,f=0,y=0,b=0,x=0;return b+=(x+=i*p)>>>16,y+=(b+=a*p)>>>16,b&=65535,y+=(b+=i*d)>>>16,f+=(y+=s*p)>>>16,y&=65535,f+=(y+=a*d)>>>16,y&=65535,f+=(y+=i*c)>>>16,f+=n*p+s*d+a*c+i*l,u((b&=65535)<<16|(x&=65535),(f&=65535)<<16|(y&=65535),this.unsigned)},S.mul=S.multiply,S.divide=function(e){if(r(e)||(e=h(e)),e.isZero())throw Error("division by zero");var n,s,a;if(t)return this.unsigned||-2147483648!==this.high||-1!==e.low||-1!==e.high?u((this.unsigned?t.div_u:t.div_s)(this.low,this.high,e.low,e.high),t.get_high(),this.unsigned):this;if(this.isZero())return this.unsigned?y:g;if(this.unsigned){if(e.unsigned||(e=e.toUnsigned()),e.gt(this))return y;if(e.gt(this.shru(1)))return x;a=y}else{if(this.eq(I))return e.eq(b)||e.eq(w)?I:e.eq(I)?b:(n=this.shr(1).div(e).shl(1)).eq(g)?e.isNegative()?b:w:(s=this.sub(e.mul(n)),a=n.add(s.div(e)));if(e.eq(I))return this.unsigned?y:g;if(this.isNegative())return e.isNegative()?this.neg().div(e.neg()):this.neg().div(e).neg();if(e.isNegative())return this.div(e.neg()).neg();a=g}for(s=this;s.gte(e);){n=Math.max(1,Math.floor(s.toNumber()/e.toNumber()));for(var i=Math.ceil(Math.log(n)/Math.LN2),c=i<=48?1:l(2,i-48),d=o(n),p=d.mul(e);p.isNegative()||p.gt(s);)p=(d=o(n-=c,this.unsigned)).mul(e);d.isZero()&&(d=b),a=a.add(d),s=s.sub(p)}return a},S.div=S.divide,S.modulo=function(e){return r(e)||(e=h(e)),t?u((this.unsigned?t.rem_u:t.rem_s)(this.low,this.high,e.low,e.high),t.get_high(),this.unsigned):this.sub(this.div(e).mul(e))},S.mod=S.modulo,S.rem=S.modulo,S.not=function(){return u(~this.low,~this.high,this.unsigned)},S.and=function(e){return r(e)||(e=h(e)),u(this.low&e.low,this.high&e.high,this.unsigned)},S.or=function(e){return r(e)||(e=h(e)),u(this.low|e.low,this.high|e.high,this.unsigned)},S.xor=function(e){return r(e)||(e=h(e)),u(this.low^e.low,this.high^e.high,this.unsigned)},S.shiftLeft=function(e){return r(e)&&(e=e.toInt()),0==(e&=63)?this:e<32?u(this.low<<e,this.high<<e|this.low>>>32-e,this.unsigned):u(0,this.low<<e-32,this.unsigned)},S.shl=S.shiftLeft,S.shiftRight=function(e){return r(e)&&(e=e.toInt()),0==(e&=63)?this:e<32?u(this.low>>>e|this.high<<32-e,this.high>>e,this.unsigned):u(this.high>>e-32,this.high>=0?0:-1,this.unsigned)},S.shr=S.shiftRight,S.shiftRightUnsigned=function(e){if(r(e)&&(e=e.toInt()),0==(e&=63))return this;var t=this.high;return e<32?u(this.low>>>e|t<<32-e,t>>>e,this.unsigned):u(32===e?t:t>>>e-32,0,this.unsigned)},S.shru=S.shiftRightUnsigned,S.shr_u=S.shiftRightUnsigned,S.toSigned=function(){return this.unsigned?u(this.low,this.high,!1):this},S.toUnsigned=function(){return this.unsigned?this:u(this.low,this.high,!0)},S.toBytes=function(e){return e?this.toBytesLE():this.toBytesBE()},S.toBytesLE=function(){var e=this.high,t=this.low;return[255&t,t>>>8&255,t>>>16&255,t>>>24,255&e,e>>>8&255,e>>>16&255,e>>>24]},S.toBytesBE=function(){var e=this.high,t=this.low;return[e>>>24,e>>>16&255,e>>>8&255,255&e,t>>>24,t>>>16&255,t>>>8&255,255&t]},n.fromBytes=function(e,t,r){return r?n.fromBytesLE(e,t):n.fromBytesBE(e,t)},n.fromBytesLE=function(e,t){return new n(e[0]|e[1]<<8|e[2]<<16|e[3]<<24,e[4]|e[5]<<8|e[6]<<16|e[7]<<24,t)},n.fromBytesBE=function(e,t){return new n(e[4]<<24|e[5]<<16|e[6]<<8|e[7],e[0]<<24|e[1]<<16|e[2]<<8|e[3],t)}},590:()=>{},670:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.KalmanFilter2D=void 0;var r=n(673),s=function(){function e(e,t,n){void 0===e&&(e=1),void 0===t&&(t=1e-4),void 0===n&&(n=.01),this.x=r.Matrix.zeros(4,1),this.F=new r.Matrix([[1,0,e,0],[0,1,0,e],[0,0,1,0],[0,0,0,1]]),this.H=new r.Matrix([[1,0,0,0],[0,1,0,0]]),this.R=r.Matrix.eye(2).mul(n),this.Q=r.Matrix.eye(4).mul(t),this.P=r.Matrix.eye(4)}return e.prototype.predict=function(){return this.x=this.F.mmul(this.x),this.P=this.F.mmul(this.P).mmul(this.F.transpose()).add(this.Q),this.x.subMatrix(0,1,0,0).to1DArray()},e.prototype.update=function(e){var t=new r.Matrix([[e[0]],[e[1]]]).sub(this.H.mmul(this.x)),n=this.H.mmul(this.P).mmul(this.H.transpose()).add(this.R),s=this.P.mmul(this.H.transpose()).mmul((0,r.inverse)(n));this.x=this.x.add(s.mmul(t));var a=r.Matrix.eye(4);return this.P=a.sub(s.mmul(this.H)).mmul(this.P),this.x.subMatrix(0,1,0,0).to1DArray()},e.prototype.step=function(e){return this.predict(),this.update(e)},e}();t.KalmanFilter2D=s},673:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(788),s=n(718);const a=" ".repeat(2),i=" ".repeat(4);function o(e,t={}){const{maxRows:n=15,maxColumns:r=10,maxNumSize:s=8,padMinus:o="auto"}=t;return`${e.constructor.name} {\\n${a}[\\n${i}${function(e,t,n,r,s){const{rows:a,columns:o}=e,l=Math.min(a,t),c=Math.min(o,n),h=[];if("auto"===s){s=!1;e:for(let t=0;t<l;t++)for(let n=0;n<c;n++)if(e.get(t,n)<0){s=!0;break e}}for(let t=0;t<l;t++){let n=[];for(let a=0;a<c;a++)n.push(u(e.get(t,a),r,s));h.push(`${n.join(" ")}`)}return c!==o&&(h[h.length-1]+=` ... ${o-n} more columns`),l!==a&&h.push(`... ${a-t} more rows`),h.join(`\\n${i}`)}(e,n,r,s,o)}\\n${a}]\\n${a}rows: ${e.rows}\\n${a}columns: ${e.columns}\\n}`}function u(e,t,n){return(e>=0&&n?` ${l(e,t-1)}`:l(e,t)).padEnd(t)}function l(e,t){let n=e.toString();if(n.length<=t)return n;let r=e.toFixed(t);if(r.length>t&&(r=e.toFixed(Math.max(0,t-(r.length-t)))),r.length<=t&&!r.startsWith("0.000")&&!r.startsWith("-0.000"))return r;let s=e.toExponential(t);return s.length>t&&(s=e.toExponential(Math.max(0,t-(s.length-t)))),s.slice(0)}function c(e,t,n){let r=n?e.rows:e.rows-1;if(t<0||t>r)throw new RangeError("Row index out of range")}function h(e,t,n){let r=n?e.columns:e.columns-1;if(t<0||t>r)throw new RangeError("Column index out of range")}function d(e,t){if(t.to1DArray&&(t=t.to1DArray()),t.length!==e.columns)throw new RangeError("vector size must be the same as the number of columns");return t}function p(e,t){if(t.to1DArray&&(t=t.to1DArray()),t.length!==e.rows)throw new RangeError("vector size must be the same as the number of rows");return t}function f(e,t){if(!r.isAnyArray(t))throw new TypeError("row indices must be an array");for(let n=0;n<t.length;n++)if(t[n]<0||t[n]>=e.rows)throw new RangeError("row indices are out of range")}function m(e,t){if(!r.isAnyArray(t))throw new TypeError("column indices must be an array");for(let n=0;n<t.length;n++)if(t[n]<0||t[n]>=e.columns)throw new RangeError("column indices are out of range")}function g(e,t,n,r,s){if(5!==arguments.length)throw new RangeError("expected 4 arguments");if(b("startRow",t),b("endRow",n),b("startColumn",r),b("endColumn",s),t>n||r>s||t<0||t>=e.rows||n<0||n>=e.rows||r<0||r>=e.columns||s<0||s>=e.columns)throw new RangeError("Submatrix indices are out of range")}function y(e,t=0){let n=[];for(let r=0;r<e;r++)n.push(t);return n}function b(e,t){if("number"!=typeof t)throw new TypeError(`${e} must be a number`)}function x(e){if(e.isEmpty())throw new Error("Empty matrix has no elements to index")}class w{static from1DArray(e,t,n){if(e*t!==n.length)throw new RangeError("data length does not match given dimensions");let r=new I(e,t);for(let s=0;s<e;s++)for(let e=0;e<t;e++)r.set(s,e,n[s*t+e]);return r}static rowVector(e){let t=new I(1,e.length);for(let n=0;n<e.length;n++)t.set(0,n,e[n]);return t}static columnVector(e){let t=new I(e.length,1);for(let n=0;n<e.length;n++)t.set(n,0,e[n]);return t}static zeros(e,t){return new I(e,t)}static ones(e,t){return new I(e,t).fill(1)}static rand(e,t,n={}){if("object"!=typeof n)throw new TypeError("options must be an object");const{random:r=Math.random}=n;let s=new I(e,t);for(let n=0;n<e;n++)for(let e=0;e<t;e++)s.set(n,e,r());return s}static randInt(e,t,n={}){if("object"!=typeof n)throw new TypeError("options must be an object");const{min:r=0,max:s=1e3,random:a=Math.random}=n;if(!Number.isInteger(r))throw new TypeError("min must be an integer");if(!Number.isInteger(s))throw new TypeError("max must be an integer");if(r>=s)throw new RangeError("min must be smaller than max");let i=s-r,o=new I(e,t);for(let n=0;n<e;n++)for(let e=0;e<t;e++){let t=r+Math.round(a()*i);o.set(n,e,t)}return o}static eye(e,t,n){void 0===t&&(t=e),void 0===n&&(n=1);let r=Math.min(e,t),s=this.zeros(e,t);for(let e=0;e<r;e++)s.set(e,e,n);return s}static diag(e,t,n){let r=e.length;void 0===t&&(t=r),void 0===n&&(n=t);let s=Math.min(r,t,n),a=this.zeros(t,n);for(let t=0;t<s;t++)a.set(t,t,e[t]);return a}static min(e,t){e=this.checkMatrix(e),t=this.checkMatrix(t);let n=e.rows,r=e.columns,s=new I(n,r);for(let a=0;a<n;a++)for(let n=0;n<r;n++)s.set(a,n,Math.min(e.get(a,n),t.get(a,n)));return s}static max(e,t){e=this.checkMatrix(e),t=this.checkMatrix(t);let n=e.rows,r=e.columns,s=new this(n,r);for(let a=0;a<n;a++)for(let n=0;n<r;n++)s.set(a,n,Math.max(e.get(a,n),t.get(a,n)));return s}static checkMatrix(e){return w.isMatrix(e)?e:new I(e)}static isMatrix(e){return null!=e&&"Matrix"===e.klass}get size(){return this.rows*this.columns}apply(e){if("function"!=typeof e)throw new TypeError("callback must be a function");for(let t=0;t<this.rows;t++)for(let n=0;n<this.columns;n++)e.call(this,t,n);return this}to1DArray(){let e=[];for(let t=0;t<this.rows;t++)for(let n=0;n<this.columns;n++)e.push(this.get(t,n));return e}to2DArray(){let e=[];for(let t=0;t<this.rows;t++){e.push([]);for(let n=0;n<this.columns;n++)e[t].push(this.get(t,n))}return e}toJSON(){return this.to2DArray()}isRowVector(){return 1===this.rows}isColumnVector(){return 1===this.columns}isVector(){return 1===this.rows||1===this.columns}isSquare(){return this.rows===this.columns}isEmpty(){return 0===this.rows||0===this.columns}isSymmetric(){if(this.isSquare()){for(let e=0;e<this.rows;e++)for(let t=0;t<=e;t++)if(this.get(e,t)!==this.get(t,e))return!1;return!0}return!1}isDistance(){if(!this.isSymmetric())return!1;for(let e=0;e<this.rows;e++)if(0!==this.get(e,e))return!1;return!0}isEchelonForm(){let e=0,t=0,n=-1,r=!0,s=!1;for(;e<this.rows&&r;){for(t=0,s=!1;t<this.columns&&!1===s;)0===this.get(e,t)?t++:1===this.get(e,t)&&t>n?(s=!0,n=t):(r=!1,s=!0);e++}return r}isReducedEchelonForm(){let e=0,t=0,n=-1,r=!0,s=!1;for(;e<this.rows&&r;){for(t=0,s=!1;t<this.columns&&!1===s;)0===this.get(e,t)?t++:1===this.get(e,t)&&t>n?(s=!0,n=t):(r=!1,s=!0);for(let n=t+1;n<this.rows;n++)0!==this.get(e,n)&&(r=!1);e++}return r}echelonForm(){let e=this.clone(),t=0,n=0;for(;t<e.rows&&n<e.columns;){let r=t;for(let s=t;s<e.rows;s++)e.get(s,n)>e.get(r,n)&&(r=s);if(0===e.get(r,n))n++;else{e.swapRows(t,r);let s=e.get(t,n);for(let r=n;r<e.columns;r++)e.set(t,r,e.get(t,r)/s);for(let r=t+1;r<e.rows;r++){let s=e.get(r,n)/e.get(t,n);e.set(r,n,0);for(let a=n+1;a<e.columns;a++)e.set(r,a,e.get(r,a)-e.get(t,a)*s)}t++,n++}}return e}reducedEchelonForm(){let e=this.echelonForm(),t=e.columns,n=e.rows,r=n-1;for(;r>=0;)if(0===e.maxRow(r))r--;else{let s=0,a=!1;for(;s<n&&!1===a;)1===e.get(r,s)?a=!0:s++;for(let n=0;n<r;n++){let a=e.get(n,s);for(let i=s;i<t;i++){let t=e.get(n,i)-a*e.get(r,i);e.set(n,i,t)}}r--}return e}set(){throw new Error("set method is unimplemented")}get(){throw new Error("get method is unimplemented")}repeat(e={}){if("object"!=typeof e)throw new TypeError("options must be an object");const{rows:t=1,columns:n=1}=e;if(!Number.isInteger(t)||t<=0)throw new TypeError("rows must be a positive integer");if(!Number.isInteger(n)||n<=0)throw new TypeError("columns must be a positive integer");let r=new I(this.rows*t,this.columns*n);for(let e=0;e<t;e++)for(let t=0;t<n;t++)r.setSubMatrix(this,this.rows*e,this.columns*t);return r}fill(e){for(let t=0;t<this.rows;t++)for(let n=0;n<this.columns;n++)this.set(t,n,e);return this}neg(){return this.mulS(-1)}getRow(e){c(this,e);let t=[];for(let n=0;n<this.columns;n++)t.push(this.get(e,n));return t}getRowVector(e){return I.rowVector(this.getRow(e))}setRow(e,t){c(this,e),t=d(this,t);for(let n=0;n<this.columns;n++)this.set(e,n,t[n]);return this}swapRows(e,t){c(this,e),c(this,t);for(let n=0;n<this.columns;n++){let r=this.get(e,n);this.set(e,n,this.get(t,n)),this.set(t,n,r)}return this}getColumn(e){h(this,e);let t=[];for(let n=0;n<this.rows;n++)t.push(this.get(n,e));return t}getColumnVector(e){return I.columnVector(this.getColumn(e))}setColumn(e,t){h(this,e),t=p(this,t);for(let n=0;n<this.rows;n++)this.set(n,e,t[n]);return this}swapColumns(e,t){h(this,e),h(this,t);for(let n=0;n<this.rows;n++){let r=this.get(n,e);this.set(n,e,this.get(n,t)),this.set(n,t,r)}return this}addRowVector(e){e=d(this,e);for(let t=0;t<this.rows;t++)for(let n=0;n<this.columns;n++)this.set(t,n,this.get(t,n)+e[n]);return this}subRowVector(e){e=d(this,e);for(let t=0;t<this.rows;t++)for(let n=0;n<this.columns;n++)this.set(t,n,this.get(t,n)-e[n]);return this}mulRowVector(e){e=d(this,e);for(let t=0;t<this.rows;t++)for(let n=0;n<this.columns;n++)this.set(t,n,this.get(t,n)*e[n]);return this}divRowVector(e){e=d(this,e);for(let t=0;t<this.rows;t++)for(let n=0;n<this.columns;n++)this.set(t,n,this.get(t,n)/e[n]);return this}addColumnVector(e){e=p(this,e);for(let t=0;t<this.rows;t++)for(let n=0;n<this.columns;n++)this.set(t,n,this.get(t,n)+e[t]);return this}subColumnVector(e){e=p(this,e);for(let t=0;t<this.rows;t++)for(let n=0;n<this.columns;n++)this.set(t,n,this.get(t,n)-e[t]);return this}mulColumnVector(e){e=p(this,e);for(let t=0;t<this.rows;t++)for(let n=0;n<this.columns;n++)this.set(t,n,this.get(t,n)*e[t]);return this}divColumnVector(e){e=p(this,e);for(let t=0;t<this.rows;t++)for(let n=0;n<this.columns;n++)this.set(t,n,this.get(t,n)/e[t]);return this}mulRow(e,t){c(this,e);for(let n=0;n<this.columns;n++)this.set(e,n,this.get(e,n)*t);return this}mulColumn(e,t){h(this,e);for(let n=0;n<this.rows;n++)this.set(n,e,this.get(n,e)*t);return this}max(e){if(this.isEmpty())return NaN;switch(e){case"row":{const e=new Array(this.rows).fill(Number.NEGATIVE_INFINITY);for(let t=0;t<this.rows;t++)for(let n=0;n<this.columns;n++)this.get(t,n)>e[t]&&(e[t]=this.get(t,n));return e}case"column":{const e=new Array(this.columns).fill(Number.NEGATIVE_INFINITY);for(let t=0;t<this.rows;t++)for(let n=0;n<this.columns;n++)this.get(t,n)>e[n]&&(e[n]=this.get(t,n));return e}case void 0:{let e=this.get(0,0);for(let t=0;t<this.rows;t++)for(let n=0;n<this.columns;n++)this.get(t,n)>e&&(e=this.get(t,n));return e}default:throw new Error(`invalid option: ${e}`)}}maxIndex(){x(this);let e=this.get(0,0),t=[0,0];for(let n=0;n<this.rows;n++)for(let r=0;r<this.columns;r++)this.get(n,r)>e&&(e=this.get(n,r),t[0]=n,t[1]=r);return t}min(e){if(this.isEmpty())return NaN;switch(e){case"row":{const e=new Array(this.rows).fill(Number.POSITIVE_INFINITY);for(let t=0;t<this.rows;t++)for(let n=0;n<this.columns;n++)this.get(t,n)<e[t]&&(e[t]=this.get(t,n));return e}case"column":{const e=new Array(this.columns).fill(Number.POSITIVE_INFINITY);for(let t=0;t<this.rows;t++)for(let n=0;n<this.columns;n++)this.get(t,n)<e[n]&&(e[n]=this.get(t,n));return e}case void 0:{let e=this.get(0,0);for(let t=0;t<this.rows;t++)for(let n=0;n<this.columns;n++)this.get(t,n)<e&&(e=this.get(t,n));return e}default:throw new Error(`invalid option: ${e}`)}}minIndex(){x(this);let e=this.get(0,0),t=[0,0];for(let n=0;n<this.rows;n++)for(let r=0;r<this.columns;r++)this.get(n,r)<e&&(e=this.get(n,r),t[0]=n,t[1]=r);return t}maxRow(e){if(c(this,e),this.isEmpty())return NaN;let t=this.get(e,0);for(let n=1;n<this.columns;n++)this.get(e,n)>t&&(t=this.get(e,n));return t}maxRowIndex(e){c(this,e),x(this);let t=this.get(e,0),n=[e,0];for(let r=1;r<this.columns;r++)this.get(e,r)>t&&(t=this.get(e,r),n[1]=r);return n}minRow(e){if(c(this,e),this.isEmpty())return NaN;let t=this.get(e,0);for(let n=1;n<this.columns;n++)this.get(e,n)<t&&(t=this.get(e,n));return t}minRowIndex(e){c(this,e),x(this);let t=this.get(e,0),n=[e,0];for(let r=1;r<this.columns;r++)this.get(e,r)<t&&(t=this.get(e,r),n[1]=r);return n}maxColumn(e){if(h(this,e),this.isEmpty())return NaN;let t=this.get(0,e);for(let n=1;n<this.rows;n++)this.get(n,e)>t&&(t=this.get(n,e));return t}maxColumnIndex(e){h(this,e),x(this);let t=this.get(0,e),n=[0,e];for(let r=1;r<this.rows;r++)this.get(r,e)>t&&(t=this.get(r,e),n[0]=r);return n}minColumn(e){if(h(this,e),this.isEmpty())return NaN;let t=this.get(0,e);for(let n=1;n<this.rows;n++)this.get(n,e)<t&&(t=this.get(n,e));return t}minColumnIndex(e){h(this,e),x(this);let t=this.get(0,e),n=[0,e];for(let r=1;r<this.rows;r++)this.get(r,e)<t&&(t=this.get(r,e),n[0]=r);return n}diag(){let e=Math.min(this.rows,this.columns),t=[];for(let n=0;n<e;n++)t.push(this.get(n,n));return t}norm(e="frobenius"){switch(e){case"max":return this.max();case"frobenius":return Math.sqrt(this.dot(this));default:throw new RangeError(`unknown norm type: ${e}`)}}cumulativeSum(){let e=0;for(let t=0;t<this.rows;t++)for(let n=0;n<this.columns;n++)e+=this.get(t,n),this.set(t,n,e);return this}dot(e){w.isMatrix(e)&&(e=e.to1DArray());let t=this.to1DArray();if(t.length!==e.length)throw new RangeError("vectors do not have the same size");let n=0;for(let r=0;r<t.length;r++)n+=t[r]*e[r];return n}mmul(e){e=I.checkMatrix(e);let t=this.rows,n=this.columns,r=e.columns,s=new I(t,r),a=new Float64Array(n);for(let i=0;i<r;i++){for(let t=0;t<n;t++)a[t]=e.get(t,i);for(let e=0;e<t;e++){let t=0;for(let r=0;r<n;r++)t+=this.get(e,r)*a[r];s.set(e,i,t)}}return s}mpow(e){if(!this.isSquare())throw new RangeError("Matrix must be square");if(!Number.isInteger(e)||e<0)throw new RangeError("Exponent must be a non-negative integer");let t=I.eye(this.rows),n=this;for(let r=e;r>=1;r/=2)1&r&&(t=t.mmul(n)),n=n.mmul(n);return t}strassen2x2(e){e=I.checkMatrix(e);let t=new I(2,2);const n=this.get(0,0),r=e.get(0,0),s=this.get(0,1),a=e.get(0,1),i=this.get(1,0),o=e.get(1,0),u=this.get(1,1),l=e.get(1,1),c=(n+u)*(r+l),h=(i+u)*r,d=n*(a-l),p=u*(o-r),f=(n+s)*l,m=c+p-f+(s-u)*(o+l),g=d+f,y=h+p,b=c-h+d+(i-n)*(r+a);return t.set(0,0,m),t.set(0,1,g),t.set(1,0,y),t.set(1,1,b),t}strassen3x3(e){e=I.checkMatrix(e);let t=new I(3,3);const n=this.get(0,0),r=this.get(0,1),s=this.get(0,2),a=this.get(1,0),i=this.get(1,1),o=this.get(1,2),u=this.get(2,0),l=this.get(2,1),c=this.get(2,2),h=e.get(0,0),d=e.get(0,1),p=e.get(0,2),f=e.get(1,0),m=e.get(1,1),g=e.get(1,2),y=e.get(2,0),b=e.get(2,1),x=e.get(2,2),w=(n-a)*(-d+m),v=(-n+a+i)*(h-d+m),k=(a+i)*(-h+d),S=n*h,N=(-n+u+l)*(h-p+g),T=(-n+u)*(p-g),E=(u+l)*(-h+p),C=(-s+l+c)*(m+y-b),$=(s-c)*(m-b),A=s*y,R=(l+c)*(-y+b),_=(-s+i+o)*(g+y-x),M=(s-o)*(g-x),F=(i+o)*(-y+x),D=S+A+r*f,O=(n+r+s-a-i-l-c)*m+v+k+S+C+A+R,L=S+N+E+(n+r+s-i-o-u-l)*g+A+_+F,z=w+i*(-h+d+f-m-g-y+x)+v+S+A+_+M,P=w+v+k+S+o*b,B=A+_+M+F+a*p,V=S+N+T+l*(-h+p+f-m-g-y+b)+C+$+A,U=C+$+A+R+u*d,W=S+N+T+E+c*x;return t.set(0,0,D),t.set(0,1,O),t.set(0,2,L),t.set(1,0,z),t.set(1,1,P),t.set(1,2,B),t.set(2,0,V),t.set(2,1,U),t.set(2,2,W),t}mmulStrassen(e){e=I.checkMatrix(e);let t=this.clone(),n=t.rows,r=t.columns,s=e.rows,a=e.columns;function i(e,t,n){let r=e.rows,s=e.columns;if(r===t&&s===n)return e;{let r=w.zeros(t,n);return r=r.setSubMatrix(e,0,0),r}}r!==s&&console.warn(`Multiplying ${n} x ${r} and ${s} x ${a} matrix: dimensions do not match.`);let o=Math.max(n,s),u=Math.max(r,a);return t=i(t,o,u),function e(t,n,r,s){if(r<=512||s<=512)return t.mmul(n);r%2==1&&s%2==1?(t=i(t,r+1,s+1),n=i(n,r+1,s+1)):r%2==1?(t=i(t,r+1,s),n=i(n,r+1,s)):s%2==1&&(t=i(t,r,s+1),n=i(n,r,s+1));let a=parseInt(t.rows/2,10),o=parseInt(t.columns/2,10),u=t.subMatrix(0,a-1,0,o-1),l=n.subMatrix(0,a-1,0,o-1),c=t.subMatrix(0,a-1,o,t.columns-1),h=n.subMatrix(0,a-1,o,n.columns-1),d=t.subMatrix(a,t.rows-1,0,o-1),p=n.subMatrix(a,n.rows-1,0,o-1),f=t.subMatrix(a,t.rows-1,o,t.columns-1),m=n.subMatrix(a,n.rows-1,o,n.columns-1),g=e(w.add(u,f),w.add(l,m),a,o),y=e(w.add(d,f),l,a,o),b=e(u,w.sub(h,m),a,o),x=e(f,w.sub(p,l),a,o),v=e(w.add(u,c),m,a,o),k=e(w.sub(d,u),w.add(l,h),a,o),I=e(w.sub(c,f),w.add(p,m),a,o),S=w.add(g,x);S.sub(v),S.add(I);let N=w.add(b,v),T=w.add(y,x),E=w.sub(g,y);E.add(b),E.add(k);let C=w.zeros(2*S.rows,2*S.columns);return C=C.setSubMatrix(S,0,0),C=C.setSubMatrix(N,S.rows,0),C=C.setSubMatrix(T,0,S.columns),C=C.setSubMatrix(E,S.rows,S.columns),C.subMatrix(0,r-1,0,s-1)}(t,e=i(e,o,u),o,u)}scaleRows(e={}){if("object"!=typeof e)throw new TypeError("options must be an object");const{min:t=0,max:n=1}=e;if(!Number.isFinite(t))throw new TypeError("min must be a number");if(!Number.isFinite(n))throw new TypeError("max must be a number");if(t>=n)throw new RangeError("min must be smaller than max");let r=new I(this.rows,this.columns);for(let e=0;e<this.rows;e++){const a=this.getRow(e);a.length>0&&s(a,{min:t,max:n,output:a}),r.setRow(e,a)}return r}scaleColumns(e={}){if("object"!=typeof e)throw new TypeError("options must be an object");const{min:t=0,max:n=1}=e;if(!Number.isFinite(t))throw new TypeError("min must be a number");if(!Number.isFinite(n))throw new TypeError("max must be a number");if(t>=n)throw new RangeError("min must be smaller than max");let r=new I(this.rows,this.columns);for(let e=0;e<this.columns;e++){const a=this.getColumn(e);a.length&&s(a,{min:t,max:n,output:a}),r.setColumn(e,a)}return r}flipRows(){const e=Math.ceil(this.columns/2);for(let t=0;t<this.rows;t++)for(let n=0;n<e;n++){let e=this.get(t,n),r=this.get(t,this.columns-1-n);this.set(t,n,r),this.set(t,this.columns-1-n,e)}return this}flipColumns(){const e=Math.ceil(this.rows/2);for(let t=0;t<this.columns;t++)for(let n=0;n<e;n++){let e=this.get(n,t),r=this.get(this.rows-1-n,t);this.set(n,t,r),this.set(this.rows-1-n,t,e)}return this}kroneckerProduct(e){e=I.checkMatrix(e);let t=this.rows,n=this.columns,r=e.rows,s=e.columns,a=new I(t*r,n*s);for(let i=0;i<t;i++)for(let t=0;t<n;t++)for(let n=0;n<r;n++)for(let o=0;o<s;o++)a.set(r*i+n,s*t+o,this.get(i,t)*e.get(n,o));return a}kroneckerSum(e){if(e=I.checkMatrix(e),!this.isSquare()||!e.isSquare())throw new Error("Kronecker Sum needs two Square Matrices");let t=this.rows,n=e.rows,r=this.kroneckerProduct(I.eye(n,n)),s=I.eye(t,t).kroneckerProduct(e);return r.add(s)}transpose(){let e=new I(this.columns,this.rows);for(let t=0;t<this.rows;t++)for(let n=0;n<this.columns;n++)e.set(n,t,this.get(t,n));return e}sortRows(e=v){for(let t=0;t<this.rows;t++)this.setRow(t,this.getRow(t).sort(e));return this}sortColumns(e=v){for(let t=0;t<this.columns;t++)this.setColumn(t,this.getColumn(t).sort(e));return this}subMatrix(e,t,n,r){g(this,e,t,n,r);let s=new I(t-e+1,r-n+1);for(let a=e;a<=t;a++)for(let t=n;t<=r;t++)s.set(a-e,t-n,this.get(a,t));return s}subMatrixRow(e,t,n){if(void 0===t&&(t=0),void 0===n&&(n=this.columns-1),t>n||t<0||t>=this.columns||n<0||n>=this.columns)throw new RangeError("Argument out of range");let r=new I(e.length,n-t+1);for(let s=0;s<e.length;s++)for(let a=t;a<=n;a++){if(e[s]<0||e[s]>=this.rows)throw new RangeError(`Row index out of range: ${e[s]}`);r.set(s,a-t,this.get(e[s],a))}return r}subMatrixColumn(e,t,n){if(void 0===t&&(t=0),void 0===n&&(n=this.rows-1),t>n||t<0||t>=this.rows||n<0||n>=this.rows)throw new RangeError("Argument out of range");let r=new I(n-t+1,e.length);for(let s=0;s<e.length;s++)for(let a=t;a<=n;a++){if(e[s]<0||e[s]>=this.columns)throw new RangeError(`Column index out of range: ${e[s]}`);r.set(a-t,s,this.get(a,e[s]))}return r}setSubMatrix(e,t,n){if((e=I.checkMatrix(e)).isEmpty())return this;g(this,t,t+e.rows-1,n,n+e.columns-1);for(let r=0;r<e.rows;r++)for(let s=0;s<e.columns;s++)this.set(t+r,n+s,e.get(r,s));return this}selection(e,t){f(this,e),m(this,t);let n=new I(e.length,t.length);for(let r=0;r<e.length;r++){let s=e[r];for(let e=0;e<t.length;e++){let a=t[e];n.set(r,e,this.get(s,a))}}return n}trace(){let e=Math.min(this.rows,this.columns),t=0;for(let n=0;n<e;n++)t+=this.get(n,n);return t}clone(){return this.constructor.copy(this,new I(this.rows,this.columns))}static copy(e,t){for(const[n,r,s]of e.entries())t.set(n,r,s);return t}sum(e){switch(e){case"row":return function(e){let t=y(e.rows);for(let n=0;n<e.rows;++n)for(let r=0;r<e.columns;++r)t[n]+=e.get(n,r);return t}(this);case"column":return function(e){let t=y(e.columns);for(let n=0;n<e.rows;++n)for(let r=0;r<e.columns;++r)t[r]+=e.get(n,r);return t}(this);case void 0:return function(e){let t=0;for(let n=0;n<e.rows;n++)for(let r=0;r<e.columns;r++)t+=e.get(n,r);return t}(this);default:throw new Error(`invalid option: ${e}`)}}product(e){switch(e){case"row":return function(e){let t=y(e.rows,1);for(let n=0;n<e.rows;++n)for(let r=0;r<e.columns;++r)t[n]*=e.get(n,r);return t}(this);case"column":return function(e){let t=y(e.columns,1);for(let n=0;n<e.rows;++n)for(let r=0;r<e.columns;++r)t[r]*=e.get(n,r);return t}(this);case void 0:return function(e){let t=1;for(let n=0;n<e.rows;n++)for(let r=0;r<e.columns;r++)t*=e.get(n,r);return t}(this);default:throw new Error(`invalid option: ${e}`)}}mean(e){const t=this.sum(e);switch(e){case"row":for(let e=0;e<this.rows;e++)t[e]/=this.columns;return t;case"column":for(let e=0;e<this.columns;e++)t[e]/=this.rows;return t;case void 0:return t/this.size;default:throw new Error(`invalid option: ${e}`)}}variance(e,t={}){if("object"==typeof e&&(t=e,e=void 0),"object"!=typeof t)throw new TypeError("options must be an object");const{unbiased:n=!0,mean:s=this.mean(e)}=t;if("boolean"!=typeof n)throw new TypeError("unbiased must be a boolean");switch(e){case"row":if(!r.isAnyArray(s))throw new TypeError("mean must be an array");return function(e,t,n){const r=e.rows,s=e.columns,a=[];for(let i=0;i<r;i++){let r=0,o=0,u=0;for(let t=0;t<s;t++)u=e.get(i,t)-n[i],r+=u,o+=u*u;t?a.push((o-r*r/s)/(s-1)):a.push((o-r*r/s)/s)}return a}(this,n,s);case"column":if(!r.isAnyArray(s))throw new TypeError("mean must be an array");return function(e,t,n){const r=e.rows,s=e.columns,a=[];for(let i=0;i<s;i++){let s=0,o=0,u=0;for(let t=0;t<r;t++)u=e.get(t,i)-n[i],s+=u,o+=u*u;t?a.push((o-s*s/r)/(r-1)):a.push((o-s*s/r)/r)}return a}(this,n,s);case void 0:if("number"!=typeof s)throw new TypeError("mean must be a number");return function(e,t,n){const r=e.rows,s=e.columns,a=r*s;let i=0,o=0,u=0;for(let t=0;t<r;t++)for(let r=0;r<s;r++)u=e.get(t,r)-n,i+=u,o+=u*u;return t?(o-i*i/a)/(a-1):(o-i*i/a)/a}(this,n,s);default:throw new Error(`invalid option: ${e}`)}}standardDeviation(e,t){"object"==typeof e&&(t=e,e=void 0);const n=this.variance(e,t);if(void 0===e)return Math.sqrt(n);for(let e=0;e<n.length;e++)n[e]=Math.sqrt(n[e]);return n}center(e,t={}){if("object"==typeof e&&(t=e,e=void 0),"object"!=typeof t)throw new TypeError("options must be an object");const{center:n=this.mean(e)}=t;switch(e){case"row":if(!r.isAnyArray(n))throw new TypeError("center must be an array");return function(e,t){for(let n=0;n<e.rows;n++)for(let r=0;r<e.columns;r++)e.set(n,r,e.get(n,r)-t[n])}(this,n),this;case"column":if(!r.isAnyArray(n))throw new TypeError("center must be an array");return function(e,t){for(let n=0;n<e.rows;n++)for(let r=0;r<e.columns;r++)e.set(n,r,e.get(n,r)-t[r])}(this,n),this;case void 0:if("number"!=typeof n)throw new TypeError("center must be a number");return function(e,t){for(let n=0;n<e.rows;n++)for(let r=0;r<e.columns;r++)e.set(n,r,e.get(n,r)-t)}(this,n),this;default:throw new Error(`invalid option: ${e}`)}}scale(e,t={}){if("object"==typeof e&&(t=e,e=void 0),"object"!=typeof t)throw new TypeError("options must be an object");let n=t.scale;switch(e){case"row":if(void 0===n)n=function(e){const t=[];for(let n=0;n<e.rows;n++){let r=0;for(let t=0;t<e.columns;t++)r+=e.get(n,t)**2/(e.columns-1);t.push(Math.sqrt(r))}return t}(this);else if(!r.isAnyArray(n))throw new TypeError("scale must be an array");return function(e,t){for(let n=0;n<e.rows;n++)for(let r=0;r<e.columns;r++)e.set(n,r,e.get(n,r)/t[n])}(this,n),this;case"column":if(void 0===n)n=function(e){const t=[];for(let n=0;n<e.columns;n++){let r=0;for(let t=0;t<e.rows;t++)r+=e.get(t,n)**2/(e.rows-1);t.push(Math.sqrt(r))}return t}(this);else if(!r.isAnyArray(n))throw new TypeError("scale must be an array");return function(e,t){for(let n=0;n<e.rows;n++)for(let r=0;r<e.columns;r++)e.set(n,r,e.get(n,r)/t[r])}(this,n),this;case void 0:if(void 0===n)n=function(e){const t=e.size-1;let n=0;for(let r=0;r<e.columns;r++)for(let s=0;s<e.rows;s++)n+=e.get(s,r)**2/t;return Math.sqrt(n)}(this);else if("number"!=typeof n)throw new TypeError("scale must be a number");return function(e,t){for(let n=0;n<e.rows;n++)for(let r=0;r<e.columns;r++)e.set(n,r,e.get(n,r)/t)}(this,n),this;default:throw new Error(`invalid option: ${e}`)}}toString(e){return o(this,e)}[Symbol.iterator](){return this.entries()}*entries(){for(let e=0;e<this.rows;e++)for(let t=0;t<this.columns;t++)yield[e,t,this.get(e,t)]}*values(){for(let e=0;e<this.rows;e++)for(let t=0;t<this.columns;t++)yield this.get(e,t)}}function v(e,t){return e-t}function k(e){return e.every(e=>"number"==typeof e)}w.prototype.klass="Matrix","undefined"!=typeof Symbol&&(w.prototype[Symbol.for("nodejs.util.inspect.custom")]=function(){return o(this)}),w.random=w.rand,w.randomInt=w.randInt,w.diagonal=w.diag,w.prototype.diagonal=w.prototype.diag,w.identity=w.eye,w.prototype.negate=w.prototype.neg,w.prototype.tensorProduct=w.prototype.kroneckerProduct;class I extends w{data;#e(e,t){if(this.data=[],!(Number.isInteger(t)&&t>=0))throw new TypeError("nColumns must be a positive integer");for(let n=0;n<e;n++)this.data.push(new Float64Array(t));this.rows=e,this.columns=t}constructor(e,t){if(super(),I.isMatrix(e))this.#e(e.rows,e.columns),I.copy(e,this);else if(Number.isInteger(e)&&e>=0)this.#e(e,t);else{if(!r.isAnyArray(e))throw new TypeError("First argument must be a positive number or an array");{const n=e;if("number"!=typeof(t=(e=n.length)?n[0].length:0))throw new TypeError("Data must be a 2D array with at least one element");this.data=[];for(let r=0;r<e;r++){if(n[r].length!==t)throw new RangeError("Inconsistent array dimensions");if(!k(n[r]))throw new TypeError("Input data contains non-numeric values");this.data.push(Float64Array.from(n[r]))}this.rows=e,this.columns=t}}}set(e,t,n){return this.data[e][t]=n,this}get(e,t){return this.data[e][t]}removeRow(e){return c(this,e),this.data.splice(e,1),this.rows-=1,this}addRow(e,t){return void 0===t&&(t=e,e=this.rows),c(this,e,!0),t=Float64Array.from(d(this,t)),this.data.splice(e,0,t),this.rows+=1,this}removeColumn(e){h(this,e);for(let t=0;t<this.rows;t++){const n=new Float64Array(this.columns-1);for(let r=0;r<e;r++)n[r]=this.data[t][r];for(let r=e+1;r<this.columns;r++)n[r-1]=this.data[t][r];this.data[t]=n}return this.columns-=1,this}addColumn(e,t){void 0===t&&(t=e,e=this.columns),h(this,e,!0),t=p(this,t);for(let n=0;n<this.rows;n++){const r=new Float64Array(this.columns+1);let s=0;for(;s<e;s++)r[s]=this.data[n][s];for(r[s++]=t[n];s<this.columns+1;s++)r[s]=this.data[n][s-1];this.data[n]=r}return this.columns+=1,this}}!function(e,t){e.prototype.add=function(e){return"number"==typeof e?this.addS(e):this.addM(e)},e.prototype.addS=function(e){for(let t=0;t<this.rows;t++)for(let n=0;n<this.columns;n++)this.set(t,n,this.get(t,n)+e);return this},e.prototype.addM=function(e){if(e=t.checkMatrix(e),this.rows!==e.rows||this.columns!==e.columns)throw new RangeError("Matrices dimensions must be equal");for(let t=0;t<this.rows;t++)for(let n=0;n<this.columns;n++)this.set(t,n,this.get(t,n)+e.get(t,n));return this},e.add=function(e,n){return new t(e).add(n)},e.prototype.sub=function(e){return"number"==typeof e?this.subS(e):this.subM(e)},e.prototype.subS=function(e){for(let t=0;t<this.rows;t++)for(let n=0;n<this.columns;n++)this.set(t,n,this.get(t,n)-e);return this},e.prototype.subM=function(e){if(e=t.checkMatrix(e),this.rows!==e.rows||this.columns!==e.columns)throw new RangeError("Matrices dimensions must be equal");for(let t=0;t<this.rows;t++)for(let n=0;n<this.columns;n++)this.set(t,n,this.get(t,n)-e.get(t,n));return this},e.sub=function(e,n){return new t(e).sub(n)},e.prototype.subtract=e.prototype.sub,e.prototype.subtractS=e.prototype.subS,e.prototype.subtractM=e.prototype.subM,e.subtract=e.sub,e.prototype.mul=function(e){return"number"==typeof e?this.mulS(e):this.mulM(e)},e.prototype.mulS=function(e){for(let t=0;t<this.rows;t++)for(let n=0;n<this.columns;n++)this.set(t,n,this.get(t,n)*e);return this},e.prototype.mulM=function(e){if(e=t.checkMatrix(e),this.rows!==e.rows||this.columns!==e.columns)throw new RangeError("Matrices dimensions must be equal");for(let t=0;t<this.rows;t++)for(let n=0;n<this.columns;n++)this.set(t,n,this.get(t,n)*e.get(t,n));return this},e.mul=function(e,n){return new t(e).mul(n)},e.prototype.multiply=e.prototype.mul,e.prototype.multiplyS=e.prototype.mulS,e.prototype.multiplyM=e.prototype.mulM,e.multiply=e.mul,e.prototype.div=function(e){return"number"==typeof e?this.divS(e):this.divM(e)},e.prototype.divS=function(e){for(let t=0;t<this.rows;t++)for(let n=0;n<this.columns;n++)this.set(t,n,this.get(t,n)/e);return this},e.prototype.divM=function(e){if(e=t.checkMatrix(e),this.rows!==e.rows||this.columns!==e.columns)throw new RangeError("Matrices dimensions must be equal");for(let t=0;t<this.rows;t++)for(let n=0;n<this.columns;n++)this.set(t,n,this.get(t,n)/e.get(t,n));return this},e.div=function(e,n){return new t(e).div(n)},e.prototype.divide=e.prototype.div,e.prototype.divideS=e.prototype.divS,e.prototype.divideM=e.prototype.divM,e.divide=e.div,e.prototype.mod=function(e){return"number"==typeof e?this.modS(e):this.modM(e)},e.prototype.modS=function(e){for(let t=0;t<this.rows;t++)for(let n=0;n<this.columns;n++)this.set(t,n,this.get(t,n)%e);return this},e.prototype.modM=function(e){if(e=t.checkMatrix(e),this.rows!==e.rows||this.columns!==e.columns)throw new RangeError("Matrices dimensions must be equal");for(let t=0;t<this.rows;t++)for(let n=0;n<this.columns;n++)this.set(t,n,this.get(t,n)%e.get(t,n));return this},e.mod=function(e,n){return new t(e).mod(n)},e.prototype.modulus=e.prototype.mod,e.prototype.modulusS=e.prototype.modS,e.prototype.modulusM=e.prototype.modM,e.modulus=e.mod,e.prototype.and=function(e){return"number"==typeof e?this.andS(e):this.andM(e)},e.prototype.andS=function(e){for(let t=0;t<this.rows;t++)for(let n=0;n<this.columns;n++)this.set(t,n,this.get(t,n)&e);return this},e.prototype.andM=function(e){if(e=t.checkMatrix(e),this.rows!==e.rows||this.columns!==e.columns)throw new RangeError("Matrices dimensions must be equal");for(let t=0;t<this.rows;t++)for(let n=0;n<this.columns;n++)this.set(t,n,this.get(t,n)&e.get(t,n));return this},e.and=function(e,n){return new t(e).and(n)},e.prototype.or=function(e){return"number"==typeof e?this.orS(e):this.orM(e)},e.prototype.orS=function(e){for(let t=0;t<this.rows;t++)for(let n=0;n<this.columns;n++)this.set(t,n,this.get(t,n)|e);return this},e.prototype.orM=function(e){if(e=t.checkMatrix(e),this.rows!==e.rows||this.columns!==e.columns)throw new RangeError("Matrices dimensions must be equal");for(let t=0;t<this.rows;t++)for(let n=0;n<this.columns;n++)this.set(t,n,this.get(t,n)|e.get(t,n));return this},e.or=function(e,n){return new t(e).or(n)},e.prototype.xor=function(e){return"number"==typeof e?this.xorS(e):this.xorM(e)},e.prototype.xorS=function(e){for(let t=0;t<this.rows;t++)for(let n=0;n<this.columns;n++)this.set(t,n,this.get(t,n)^e);return this},e.prototype.xorM=function(e){if(e=t.checkMatrix(e),this.rows!==e.rows||this.columns!==e.columns)throw new RangeError("Matrices dimensions must be equal");for(let t=0;t<this.rows;t++)for(let n=0;n<this.columns;n++)this.set(t,n,this.get(t,n)^e.get(t,n));return this},e.xor=function(e,n){return new t(e).xor(n)},e.prototype.leftShift=function(e){return"number"==typeof e?this.leftShiftS(e):this.leftShiftM(e)},e.prototype.leftShiftS=function(e){for(let t=0;t<this.rows;t++)for(let n=0;n<this.columns;n++)this.set(t,n,this.get(t,n)<<e);return this},e.prototype.leftShiftM=function(e){if(e=t.checkMatrix(e),this.rows!==e.rows||this.columns!==e.columns)throw new RangeError("Matrices dimensions must be equal");for(let t=0;t<this.rows;t++)for(let n=0;n<this.columns;n++)this.set(t,n,this.get(t,n)<<e.get(t,n));return this},e.leftShift=function(e,n){return new t(e).leftShift(n)},e.prototype.signPropagatingRightShift=function(e){return"number"==typeof e?this.signPropagatingRightShiftS(e):this.signPropagatingRightShiftM(e)},e.prototype.signPropagatingRightShiftS=function(e){for(let t=0;t<this.rows;t++)for(let n=0;n<this.columns;n++)this.set(t,n,this.get(t,n)>>e);return this},e.prototype.signPropagatingRightShiftM=function(e){if(e=t.checkMatrix(e),this.rows!==e.rows||this.columns!==e.columns)throw new RangeError("Matrices dimensions must be equal");for(let t=0;t<this.rows;t++)for(let n=0;n<this.columns;n++)this.set(t,n,this.get(t,n)>>e.get(t,n));return this},e.signPropagatingRightShift=function(e,n){return new t(e).signPropagatingRightShift(n)},e.prototype.rightShift=function(e){return"number"==typeof e?this.rightShiftS(e):this.rightShiftM(e)},e.prototype.rightShiftS=function(e){for(let t=0;t<this.rows;t++)for(let n=0;n<this.columns;n++)this.set(t,n,this.get(t,n)>>>e);return this},e.prototype.rightShiftM=function(e){if(e=t.checkMatrix(e),this.rows!==e.rows||this.columns!==e.columns)throw new RangeError("Matrices dimensions must be equal");for(let t=0;t<this.rows;t++)for(let n=0;n<this.columns;n++)this.set(t,n,this.get(t,n)>>>e.get(t,n));return this},e.rightShift=function(e,n){return new t(e).rightShift(n)},e.prototype.zeroFillRightShift=e.prototype.rightShift,e.prototype.zeroFillRightShiftS=e.prototype.rightShiftS,e.prototype.zeroFillRightShiftM=e.prototype.rightShiftM,e.zeroFillRightShift=e.rightShift,e.prototype.not=function(){for(let e=0;e<this.rows;e++)for(let t=0;t<this.columns;t++)this.set(e,t,~this.get(e,t));return this},e.not=function(e){return new t(e).not()},e.prototype.abs=function(){for(let e=0;e<this.rows;e++)for(let t=0;t<this.columns;t++)this.set(e,t,Math.abs(this.get(e,t)));return this},e.abs=function(e){return new t(e).abs()},e.prototype.acos=function(){for(let e=0;e<this.rows;e++)for(let t=0;t<this.columns;t++)this.set(e,t,Math.acos(this.get(e,t)));return this},e.acos=function(e){return new t(e).acos()},e.prototype.acosh=function(){for(let e=0;e<this.rows;e++)for(let t=0;t<this.columns;t++)this.set(e,t,Math.acosh(this.get(e,t)));return this},e.acosh=function(e){return new t(e).acosh()},e.prototype.asin=function(){for(let e=0;e<this.rows;e++)for(let t=0;t<this.columns;t++)this.set(e,t,Math.asin(this.get(e,t)));return this},e.asin=function(e){return new t(e).asin()},e.prototype.asinh=function(){for(let e=0;e<this.rows;e++)for(let t=0;t<this.columns;t++)this.set(e,t,Math.asinh(this.get(e,t)));return this},e.asinh=function(e){return new t(e).asinh()},e.prototype.atan=function(){for(let e=0;e<this.rows;e++)for(let t=0;t<this.columns;t++)this.set(e,t,Math.atan(this.get(e,t)));return this},e.atan=function(e){return new t(e).atan()},e.prototype.atanh=function(){for(let e=0;e<this.rows;e++)for(let t=0;t<this.columns;t++)this.set(e,t,Math.atanh(this.get(e,t)));return this},e.atanh=function(e){return new t(e).atanh()},e.prototype.cbrt=function(){for(let e=0;e<this.rows;e++)for(let t=0;t<this.columns;t++)this.set(e,t,Math.cbrt(this.get(e,t)));return this},e.cbrt=function(e){return new t(e).cbrt()},e.prototype.ceil=function(){for(let e=0;e<this.rows;e++)for(let t=0;t<this.columns;t++)this.set(e,t,Math.ceil(this.get(e,t)));return this},e.ceil=function(e){return new t(e).ceil()},e.prototype.clz32=function(){for(let e=0;e<this.rows;e++)for(let t=0;t<this.columns;t++)this.set(e,t,Math.clz32(this.get(e,t)));return this},e.clz32=function(e){return new t(e).clz32()},e.prototype.cos=function(){for(let e=0;e<this.rows;e++)for(let t=0;t<this.columns;t++)this.set(e,t,Math.cos(this.get(e,t)));return this},e.cos=function(e){return new t(e).cos()},e.prototype.cosh=function(){for(let e=0;e<this.rows;e++)for(let t=0;t<this.columns;t++)this.set(e,t,Math.cosh(this.get(e,t)));return this},e.cosh=function(e){return new t(e).cosh()},e.prototype.exp=function(){for(let e=0;e<this.rows;e++)for(let t=0;t<this.columns;t++)this.set(e,t,Math.exp(this.get(e,t)));return this},e.exp=function(e){return new t(e).exp()},e.prototype.expm1=function(){for(let e=0;e<this.rows;e++)for(let t=0;t<this.columns;t++)this.set(e,t,Math.expm1(this.get(e,t)));return this},e.expm1=function(e){return new t(e).expm1()},e.prototype.floor=function(){for(let e=0;e<this.rows;e++)for(let t=0;t<this.columns;t++)this.set(e,t,Math.floor(this.get(e,t)));return this},e.floor=function(e){return new t(e).floor()},e.prototype.fround=function(){for(let e=0;e<this.rows;e++)for(let t=0;t<this.columns;t++)this.set(e,t,Math.fround(this.get(e,t)));return this},e.fround=function(e){return new t(e).fround()},e.prototype.log=function(){for(let e=0;e<this.rows;e++)for(let t=0;t<this.columns;t++)this.set(e,t,Math.log(this.get(e,t)));return this},e.log=function(e){return new t(e).log()},e.prototype.log1p=function(){for(let e=0;e<this.rows;e++)for(let t=0;t<this.columns;t++)this.set(e,t,Math.log1p(this.get(e,t)));return this},e.log1p=function(e){return new t(e).log1p()},e.prototype.log10=function(){for(let e=0;e<this.rows;e++)for(let t=0;t<this.columns;t++)this.set(e,t,Math.log10(this.get(e,t)));return this},e.log10=function(e){return new t(e).log10()},e.prototype.log2=function(){for(let e=0;e<this.rows;e++)for(let t=0;t<this.columns;t++)this.set(e,t,Math.log2(this.get(e,t)));return this},e.log2=function(e){return new t(e).log2()},e.prototype.round=function(){for(let e=0;e<this.rows;e++)for(let t=0;t<this.columns;t++)this.set(e,t,Math.round(this.get(e,t)));return this},e.round=function(e){return new t(e).round()},e.prototype.sign=function(){for(let e=0;e<this.rows;e++)for(let t=0;t<this.columns;t++)this.set(e,t,Math.sign(this.get(e,t)));return this},e.sign=function(e){return new t(e).sign()},e.prototype.sin=function(){for(let e=0;e<this.rows;e++)for(let t=0;t<this.columns;t++)this.set(e,t,Math.sin(this.get(e,t)));return this},e.sin=function(e){return new t(e).sin()},e.prototype.sinh=function(){for(let e=0;e<this.rows;e++)for(let t=0;t<this.columns;t++)this.set(e,t,Math.sinh(this.get(e,t)));return this},e.sinh=function(e){return new t(e).sinh()},e.prototype.sqrt=function(){for(let e=0;e<this.rows;e++)for(let t=0;t<this.columns;t++)this.set(e,t,Math.sqrt(this.get(e,t)));return this},e.sqrt=function(e){return new t(e).sqrt()},e.prototype.tan=function(){for(let e=0;e<this.rows;e++)for(let t=0;t<this.columns;t++)this.set(e,t,Math.tan(this.get(e,t)));return this},e.tan=function(e){return new t(e).tan()},e.prototype.tanh=function(){for(let e=0;e<this.rows;e++)for(let t=0;t<this.columns;t++)this.set(e,t,Math.tanh(this.get(e,t)));return this},e.tanh=function(e){return new t(e).tanh()},e.prototype.trunc=function(){for(let e=0;e<this.rows;e++)for(let t=0;t<this.columns;t++)this.set(e,t,Math.trunc(this.get(e,t)));return this},e.trunc=function(e){return new t(e).trunc()},e.pow=function(e,n){return new t(e).pow(n)},e.prototype.pow=function(e){return"number"==typeof e?this.powS(e):this.powM(e)},e.prototype.powS=function(e){for(let t=0;t<this.rows;t++)for(let n=0;n<this.columns;n++)this.set(t,n,this.get(t,n)**e);return this},e.prototype.powM=function(e){if(e=t.checkMatrix(e),this.rows!==e.rows||this.columns!==e.columns)throw new RangeError("Matrices dimensions must be equal");for(let t=0;t<this.rows;t++)for(let n=0;n<this.columns;n++)this.set(t,n,this.get(t,n)**e.get(t,n));return this}}(w,I);class S extends w{#t;get size(){return this.#t.size}get rows(){return this.#t.rows}get columns(){return this.#t.columns}get diagonalSize(){return this.rows}static isSymmetricMatrix(e){return I.isMatrix(e)&&"SymmetricMatrix"===e.klassType}static zeros(e){return new this(e)}static ones(e){return new this(e).fill(1)}constructor(e){if(super(),I.isMatrix(e)){if(!e.isSymmetric())throw new TypeError("not symmetric data");this.#t=I.copy(e,new I(e.rows,e.rows))}else if(Number.isInteger(e)&&e>=0)this.#t=new I(e,e);else if(this.#t=new I(e),!this.isSymmetric())throw new TypeError("not symmetric data")}clone(){const e=new S(this.diagonalSize);for(const[t,n,r]of this.upperRightEntries())e.set(t,n,r);return e}toMatrix(){return new I(this)}get(e,t){return this.#t.get(e,t)}set(e,t,n){return this.#t.set(e,t,n),this.#t.set(t,e,n),this}removeCross(e){return this.#t.removeRow(e),this.#t.removeColumn(e),this}addCross(e,t){void 0===t&&(t=e,e=this.diagonalSize);const n=t.slice();return n.splice(e,1),this.#t.addRow(e,n),this.#t.addColumn(e,t),this}applyMask(e){if(e.length!==this.diagonalSize)throw new RangeError("Mask size do not match with matrix size");const t=[];for(const[n,r]of e.entries())r||t.push(n);t.reverse();for(const e of t)this.removeCross(e);return this}toCompact(){const{diagonalSize:e}=this,t=new Array(e*(e+1)/2);for(let n=0,r=0,s=0;s<t.length;s++)t[s]=this.get(r,n),++n>=e&&(n=++r);return t}static fromCompact(e){const t=e.length,n=(Math.sqrt(8*t+1)-1)/2;if(!Number.isInteger(n))throw new TypeError(`This array is not a compact representation of a Symmetric Matrix, ${JSON.stringify(e)}`);const r=new S(n);for(let s=0,a=0,i=0;i<t;i++)r.set(s,a,e[i]),++s>=n&&(s=++a);return r}*upperRightEntries(){for(let e=0,t=0;e<this.diagonalSize;void 0){const n=this.get(e,t);yield[e,t,n],++t>=this.diagonalSize&&(t=++e)}}*upperRightValues(){for(let e=0,t=0;e<this.diagonalSize;void 0){const n=this.get(e,t);yield n,++t>=this.diagonalSize&&(t=++e)}}}S.prototype.klassType="SymmetricMatrix";class N extends S{static isDistanceMatrix(e){return S.isSymmetricMatrix(e)&&"DistanceMatrix"===e.klassSubType}constructor(e){if(super(e),!this.isDistance())throw new TypeError("Provided arguments do no produce a distance matrix")}set(e,t,n){return e===t&&(n=0),super.set(e,t,n)}addCross(e,t){return void 0===t&&(t=e,e=this.diagonalSize),(t=t.slice())[e]=0,super.addCross(e,t)}toSymmetricMatrix(){return new S(this)}clone(){const e=new N(this.diagonalSize);for(const[t,n,r]of this.upperRightEntries())t!==n&&e.set(t,n,r);return e}toCompact(){const{diagonalSize:e}=this,t=new Array((e-1)*e/2);for(let n=1,r=0,s=0;s<t.length;s++)t[s]=this.get(r,n),++n>=e&&(n=1+ ++r);return t}static fromCompact(e){const t=e.length;if(0===t)return new this(0);const n=(Math.sqrt(8*t+1)+1)/2;if(!Number.isInteger(n))throw new TypeError(`This array is not a compact representation of a DistanceMatrix, ${JSON.stringify(e)}`);const r=new this(n);for(let s=1,a=0,i=0;i<t;i++)r.set(s,a,e[i]),++s>=n&&(s=1+ ++a);return r}}N.prototype.klassSubType="DistanceMatrix";class T extends w{constructor(e,t,n){super(),this.matrix=e,this.rows=t,this.columns=n}}class E extends T{constructor(e,t,n){f(e,t),m(e,n),super(e,t.length,n.length),this.rowIndices=t,this.columnIndices=n}set(e,t,n){return this.matrix.set(this.rowIndices[e],this.columnIndices[t],n),this}get(e,t){return this.matrix.get(this.rowIndices[e],this.columnIndices[t])}}class C extends w{constructor(e,t={}){const{rows:n=1}=t;if(e.length%n!==0)throw new Error("the data length is not divisible by the number of rows");super(),this.rows=n,this.columns=e.length/n,this.data=e}set(e,t,n){let r=this._calculateIndex(e,t);return this.data[r]=n,this}get(e,t){let n=this._calculateIndex(e,t);return this.data[n]}_calculateIndex(e,t){return e*this.columns+t}}class $ extends w{constructor(e){super(),this.data=e,this.rows=e.length,this.columns=e[0].length}set(e,t,n){return this.data[e][t]=n,this}get(e,t){return this.data[e][t]}}class A{constructor(e){let t,n,r,s,a,i,o,u,l,c=(e=$.checkMatrix(e)).clone(),h=c.rows,d=c.columns,p=new Float64Array(h),f=1;for(t=0;t<h;t++)p[t]=t;for(u=new Float64Array(h),n=0;n<d;n++){for(t=0;t<h;t++)u[t]=c.get(t,n);for(t=0;t<h;t++){for(l=Math.min(t,n),a=0,r=0;r<l;r++)a+=c.get(t,r)*u[r];u[t]-=a,c.set(t,n,u[t])}for(s=n,t=n+1;t<h;t++)Math.abs(u[t])>Math.abs(u[s])&&(s=t);if(s!==n){for(r=0;r<d;r++)i=c.get(s,r),c.set(s,r,c.get(n,r)),c.set(n,r,i);o=p[s],p[s]=p[n],p[n]=o,f=-f}if(n<h&&0!==c.get(n,n))for(t=n+1;t<h;t++)c.set(t,n,c.get(t,n)/c.get(n,n))}this.LU=c,this.pivotVector=p,this.pivotSign=f}isSingular(){let e=this.LU,t=e.columns;for(let n=0;n<t;n++)if(0===e.get(n,n))return!0;return!1}solve(e){e=I.checkMatrix(e);let t=this.LU;if(t.rows!==e.rows)throw new Error("Invalid matrix dimensions");if(this.isSingular())throw new Error("LU matrix is singular");let n,r,s,a=e.columns,i=e.subMatrixRow(this.pivotVector,0,a-1),o=t.columns;for(s=0;s<o;s++)for(n=s+1;n<o;n++)for(r=0;r<a;r++)i.set(n,r,i.get(n,r)-i.get(s,r)*t.get(n,s));for(s=o-1;s>=0;s--){for(r=0;r<a;r++)i.set(s,r,i.get(s,r)/t.get(s,s));for(n=0;n<s;n++)for(r=0;r<a;r++)i.set(n,r,i.get(n,r)-i.get(s,r)*t.get(n,s))}return i}get determinant(){let e=this.LU;if(!e.isSquare())throw new Error("Matrix must be square");let t=this.pivotSign,n=e.columns;for(let r=0;r<n;r++)t*=e.get(r,r);return t}get lowerTriangularMatrix(){let e=this.LU,t=e.rows,n=e.columns,r=new I(t,n);for(let s=0;s<t;s++)for(let t=0;t<n;t++)s>t?r.set(s,t,e.get(s,t)):s===t?r.set(s,t,1):r.set(s,t,0);return r}get upperTriangularMatrix(){let e=this.LU,t=e.rows,n=e.columns,r=new I(t,n);for(let s=0;s<t;s++)for(let t=0;t<n;t++)s<=t?r.set(s,t,e.get(s,t)):r.set(s,t,0);return r}get pivotPermutationVector(){return Array.from(this.pivotVector)}}function R(e,t){let n=0;return Math.abs(e)>Math.abs(t)?(n=t/e,Math.abs(e)*Math.sqrt(1+n*n)):0!==t?(n=e/t,Math.abs(t)*Math.sqrt(1+n*n)):0}class _{constructor(e){let t,n,r,s,a=(e=$.checkMatrix(e)).clone(),i=e.rows,o=e.columns,u=new Float64Array(o);for(r=0;r<o;r++){let e=0;for(t=r;t<i;t++)e=R(e,a.get(t,r));if(0!==e){for(a.get(r,r)<0&&(e=-e),t=r;t<i;t++)a.set(t,r,a.get(t,r)/e);for(a.set(r,r,a.get(r,r)+1),n=r+1;n<o;n++){for(s=0,t=r;t<i;t++)s+=a.get(t,r)*a.get(t,n);for(s=-s/a.get(r,r),t=r;t<i;t++)a.set(t,n,a.get(t,n)+s*a.get(t,r))}}u[r]=-e}this.QR=a,this.Rdiag=u}solve(e){e=I.checkMatrix(e);let t=this.QR,n=t.rows;if(e.rows!==n)throw new Error("Matrix row dimensions must agree");if(!this.isFullRank())throw new Error("Matrix is rank deficient");let r,s,a,i,o=e.columns,u=e.clone(),l=t.columns;for(a=0;a<l;a++)for(s=0;s<o;s++){for(i=0,r=a;r<n;r++)i+=t.get(r,a)*u.get(r,s);for(i=-i/t.get(a,a),r=a;r<n;r++)u.set(r,s,u.get(r,s)+i*t.get(r,a))}for(a=l-1;a>=0;a--){for(s=0;s<o;s++)u.set(a,s,u.get(a,s)/this.Rdiag[a]);for(r=0;r<a;r++)for(s=0;s<o;s++)u.set(r,s,u.get(r,s)-u.get(a,s)*t.get(r,a))}return u.subMatrix(0,l-1,0,o-1)}isFullRank(){let e=this.QR.columns;for(let t=0;t<e;t++)if(0===this.Rdiag[t])return!1;return!0}get upperTriangularMatrix(){let e,t,n=this.QR,r=n.columns,s=new I(r,r);for(e=0;e<r;e++)for(t=0;t<r;t++)e<t?s.set(e,t,n.get(e,t)):e===t?s.set(e,t,this.Rdiag[e]):s.set(e,t,0);return s}get orthogonalMatrix(){let e,t,n,r,s=this.QR,a=s.rows,i=s.columns,o=new I(a,i);for(n=i-1;n>=0;n--){for(e=0;e<a;e++)o.set(e,n,0);for(o.set(n,n,1),t=n;t<i;t++)if(0!==s.get(n,n)){for(r=0,e=n;e<a;e++)r+=s.get(e,n)*o.get(e,t);for(r=-r/s.get(n,n),e=n;e<a;e++)o.set(e,t,o.get(e,t)+r*s.get(e,n))}}return o}}class M{constructor(e,t={}){if((e=$.checkMatrix(e)).isEmpty())throw new Error("Matrix must be non-empty");let n=e.rows,r=e.columns;const{computeLeftSingularVectors:s=!0,computeRightSingularVectors:a=!0,autoTranspose:i=!1}=t;let o,u=Boolean(s),l=Boolean(a),c=!1;if(n<r)if(i){o=e.transpose(),n=o.rows,r=o.columns,c=!0;let t=u;u=l,l=t}else o=e.clone(),console.warn("Computing SVD on a matrix with more columns than rows. Consider enabling autoTranspose");else o=e.clone();let h=Math.min(n,r),d=Math.min(n+1,r),p=new Float64Array(d),f=new I(n,h),m=new I(r,r),g=new Float64Array(r),y=new Float64Array(n),b=new Float64Array(d);for(let e=0;e<d;e++)b[e]=e;let x=Math.min(n-1,r),w=Math.max(0,Math.min(r-2,n)),v=Math.max(x,w);for(let e=0;e<v;e++){if(e<x){p[e]=0;for(let t=e;t<n;t++)p[e]=R(p[e],o.get(t,e));if(0!==p[e]){o.get(e,e)<0&&(p[e]=-p[e]);for(let t=e;t<n;t++)o.set(t,e,o.get(t,e)/p[e]);o.set(e,e,o.get(e,e)+1)}p[e]=-p[e]}for(let t=e+1;t<r;t++){if(e<x&&0!==p[e]){let r=0;for(let s=e;s<n;s++)r+=o.get(s,e)*o.get(s,t);r=-r/o.get(e,e);for(let s=e;s<n;s++)o.set(s,t,o.get(s,t)+r*o.get(s,e))}g[t]=o.get(e,t)}if(u&&e<x)for(let t=e;t<n;t++)f.set(t,e,o.get(t,e));if(e<w){g[e]=0;for(let t=e+1;t<r;t++)g[e]=R(g[e],g[t]);if(0!==g[e]){g[e+1]<0&&(g[e]=0-g[e]);for(let t=e+1;t<r;t++)g[t]/=g[e];g[e+1]+=1}if(g[e]=-g[e],e+1<n&&0!==g[e]){for(let t=e+1;t<n;t++)y[t]=0;for(let t=e+1;t<n;t++)for(let n=e+1;n<r;n++)y[t]+=g[n]*o.get(t,n);for(let t=e+1;t<r;t++){let r=-g[t]/g[e+1];for(let s=e+1;s<n;s++)o.set(s,t,o.get(s,t)+r*y[s])}}if(l)for(let t=e+1;t<r;t++)m.set(t,e,g[t])}}let k=Math.min(r,n+1);if(x<r&&(p[x]=o.get(x,x)),n<k&&(p[k-1]=0),w+1<k&&(g[w]=o.get(w,k-1)),g[k-1]=0,u){for(let e=x;e<h;e++){for(let t=0;t<n;t++)f.set(t,e,0);f.set(e,e,1)}for(let e=x-1;e>=0;e--)if(0!==p[e]){for(let t=e+1;t<h;t++){let r=0;for(let s=e;s<n;s++)r+=f.get(s,e)*f.get(s,t);r=-r/f.get(e,e);for(let s=e;s<n;s++)f.set(s,t,f.get(s,t)+r*f.get(s,e))}for(let t=e;t<n;t++)f.set(t,e,-f.get(t,e));f.set(e,e,1+f.get(e,e));for(let t=0;t<e-1;t++)f.set(t,e,0)}else{for(let t=0;t<n;t++)f.set(t,e,0);f.set(e,e,1)}}if(l)for(let e=r-1;e>=0;e--){if(e<w&&0!==g[e])for(let t=e+1;t<r;t++){let n=0;for(let s=e+1;s<r;s++)n+=m.get(s,e)*m.get(s,t);n=-n/m.get(e+1,e);for(let s=e+1;s<r;s++)m.set(s,t,m.get(s,t)+n*m.get(s,e))}for(let t=0;t<r;t++)m.set(t,e,0);m.set(e,e,1)}let S=k-1,N=Number.EPSILON;for(;k>0;){let e,t;for(e=k-2;e>=-1&&-1!==e;e--){const t=Number.MIN_VALUE+N*Math.abs(p[e]+Math.abs(p[e+1]));if(Math.abs(g[e])<=t||Number.isNaN(g[e])){g[e]=0;break}}if(e===k-2)t=4;else{let n;for(n=k-1;n>=e&&n!==e;n--){let t=(n!==k?Math.abs(g[n]):0)+(n!==e+1?Math.abs(g[n-1]):0);if(Math.abs(p[n])<=N*t){p[n]=0;break}}n===e?t=3:n===k-1?t=1:(t=2,e=n)}switch(e++,t){case 1:{let t=g[k-2];g[k-2]=0;for(let n=k-2;n>=e;n--){let s=R(p[n],t),a=p[n]/s,i=t/s;if(p[n]=s,n!==e&&(t=-i*g[n-1],g[n-1]=a*g[n-1]),l)for(let e=0;e<r;e++)s=a*m.get(e,n)+i*m.get(e,k-1),m.set(e,k-1,-i*m.get(e,n)+a*m.get(e,k-1)),m.set(e,n,s)}break}case 2:{let t=g[e-1];g[e-1]=0;for(let r=e;r<k;r++){let s=R(p[r],t),a=p[r]/s,i=t/s;if(p[r]=s,t=-i*g[r],g[r]=a*g[r],u)for(let t=0;t<n;t++)s=a*f.get(t,r)+i*f.get(t,e-1),f.set(t,e-1,-i*f.get(t,r)+a*f.get(t,e-1)),f.set(t,r,s)}break}case 3:{const t=Math.max(Math.abs(p[k-1]),Math.abs(p[k-2]),Math.abs(g[k-2]),Math.abs(p[e]),Math.abs(g[e])),s=p[k-1]/t,a=p[k-2]/t,i=g[k-2]/t,o=p[e]/t,c=g[e]/t,h=((a+s)*(a-s)+i*i)/2,d=s*i*(s*i);let y=0;0===h&&0===d||(y=h<0?0-Math.sqrt(h*h+d):Math.sqrt(h*h+d),y=d/(h+y));let b=(o+s)*(o-s)+y,x=o*c;for(let t=e;t<k-1;t++){let s=R(b,x);0===s&&(s=Number.MIN_VALUE);let a=b/s,i=x/s;if(t!==e&&(g[t-1]=s),b=a*p[t]+i*g[t],g[t]=a*g[t]-i*p[t],x=i*p[t+1],p[t+1]=a*p[t+1],l)for(let e=0;e<r;e++)s=a*m.get(e,t)+i*m.get(e,t+1),m.set(e,t+1,-i*m.get(e,t)+a*m.get(e,t+1)),m.set(e,t,s);if(s=R(b,x),0===s&&(s=Number.MIN_VALUE),a=b/s,i=x/s,p[t]=s,b=a*g[t]+i*p[t+1],p[t+1]=-i*g[t]+a*p[t+1],x=i*g[t+1],g[t+1]=a*g[t+1],u&&t<n-1)for(let e=0;e<n;e++)s=a*f.get(e,t)+i*f.get(e,t+1),f.set(e,t+1,-i*f.get(e,t)+a*f.get(e,t+1)),f.set(e,t,s)}g[k-2]=b;break}case 4:if(p[e]<=0&&(p[e]=p[e]<0?-p[e]:0,l))for(let t=0;t<=S;t++)m.set(t,e,-m.get(t,e));for(;e<S&&!(p[e]>=p[e+1]);){let t=p[e];if(p[e]=p[e+1],p[e+1]=t,l&&e<r-1)for(let n=0;n<r;n++)t=m.get(n,e+1),m.set(n,e+1,m.get(n,e)),m.set(n,e,t);if(u&&e<n-1)for(let r=0;r<n;r++)t=f.get(r,e+1),f.set(r,e+1,f.get(r,e)),f.set(r,e,t);e++}k--}}if(c){let e=m;m=f,f=e}this.m=n,this.n=r,this.s=p,this.U=f,this.V=m}solve(e){let t=e,n=this.threshold,r=this.s.length,s=I.zeros(r,r);for(let e=0;e<r;e++)Math.abs(this.s[e])<=n?s.set(e,e,0):s.set(e,e,1/this.s[e]);let a=this.U,i=this.rightSingularVectors,o=i.mmul(s),u=i.rows,l=a.rows,c=I.zeros(u,l);for(let e=0;e<u;e++)for(let t=0;t<l;t++){let n=0;for(let s=0;s<r;s++)n+=o.get(e,s)*a.get(t,s);c.set(e,t,n)}return c.mmul(t)}solveForDiagonal(e){return this.solve(I.diag(e))}inverse(){let e=this.V,t=this.threshold,n=e.rows,r=e.columns,s=new I(n,this.s.length);for(let a=0;a<n;a++)for(let n=0;n<r;n++)Math.abs(this.s[n])>t&&s.set(a,n,e.get(a,n)/this.s[n]);let a=this.U,i=a.rows,o=a.columns,u=new I(n,i);for(let e=0;e<n;e++)for(let t=0;t<i;t++){let n=0;for(let r=0;r<o;r++)n+=s.get(e,r)*a.get(t,r);u.set(e,t,n)}return u}get condition(){return this.s[0]/this.s[Math.min(this.m,this.n)-1]}get norm2(){return this.s[0]}get rank(){let e=Math.max(this.m,this.n)*this.s[0]*Number.EPSILON,t=0,n=this.s;for(let r=0,s=n.length;r<s;r++)n[r]>e&&t++;return t}get diagonal(){return Array.from(this.s)}get threshold(){return Number.EPSILON/2*Math.max(this.m,this.n)*this.s[0]}get leftSingularVectors(){return this.U}get rightSingularVectors(){return this.V}get diagonalMatrix(){return I.diag(this.s)}}function F(e,t,n=!1){return e=$.checkMatrix(e),t=$.checkMatrix(t),n?new M(e).solve(t):e.isSquare()?new A(e).solve(t):new _(e).solve(t)}function D(e,t){let n=[];for(let r=0;r<e;r++)r!==t&&n.push(r);return n}function O(e,t,n,r=1e-9,s=1e-9){if(e>s)return new Array(t.rows+1).fill(0);{let e=t.addRow(n,[0]);for(let t=0;t<e.rows;t++)Math.abs(e.get(t,0))<r&&e.set(t,0,0);return e.to1DArray()}}class L{constructor(e,t={}){const{assumeSymmetric:n=!1}=t;if(!(e=$.checkMatrix(e)).isSquare())throw new Error("Matrix is not a square matrix");if(e.isEmpty())throw new Error("Matrix must be non-empty");let r,s,a=e.columns,i=new I(a,a),o=new Float64Array(a),u=new Float64Array(a),l=e,c=!1;if(c=!!n||e.isSymmetric(),c){for(r=0;r<a;r++)for(s=0;s<a;s++)i.set(r,s,l.get(r,s));!function(e,t,n,r){let s,a,i,o,u,l,c,h;for(u=0;u<e;u++)n[u]=r.get(e-1,u);for(o=e-1;o>0;o--){for(h=0,i=0,l=0;l<o;l++)h+=Math.abs(n[l]);if(0===h)for(t[o]=n[o-1],u=0;u<o;u++)n[u]=r.get(o-1,u),r.set(o,u,0),r.set(u,o,0);else{for(l=0;l<o;l++)n[l]/=h,i+=n[l]*n[l];for(s=n[o-1],a=Math.sqrt(i),s>0&&(a=-a),t[o]=h*a,i-=s*a,n[o-1]=s-a,u=0;u<o;u++)t[u]=0;for(u=0;u<o;u++){for(s=n[u],r.set(u,o,s),a=t[u]+r.get(u,u)*s,l=u+1;l<=o-1;l++)a+=r.get(l,u)*n[l],t[l]+=r.get(l,u)*s;t[u]=a}for(s=0,u=0;u<o;u++)t[u]/=i,s+=t[u]*n[u];for(c=s/(i+i),u=0;u<o;u++)t[u]-=c*n[u];for(u=0;u<o;u++){for(s=n[u],a=t[u],l=u;l<=o-1;l++)r.set(l,u,r.get(l,u)-(s*t[l]+a*n[l]));n[u]=r.get(o-1,u),r.set(o,u,0)}}n[o]=i}for(o=0;o<e-1;o++){if(r.set(e-1,o,r.get(o,o)),r.set(o,o,1),i=n[o+1],0!==i){for(l=0;l<=o;l++)n[l]=r.get(l,o+1)/i;for(u=0;u<=o;u++){for(a=0,l=0;l<=o;l++)a+=r.get(l,o+1)*r.get(l,u);for(l=0;l<=o;l++)r.set(l,u,r.get(l,u)-a*n[l])}}for(l=0;l<=o;l++)r.set(l,o+1,0)}for(u=0;u<e;u++)n[u]=r.get(e-1,u),r.set(e-1,u,0);r.set(e-1,e-1,1),t[0]=0}(a,u,o,i),function(e,t,n,r){let s,a,i,o,u,l,c,h,d,p,f,m,g,y,b,x;for(i=1;i<e;i++)t[i-1]=t[i];t[e-1]=0;let w=0,v=0,k=Number.EPSILON;for(l=0;l<e;l++){for(v=Math.max(v,Math.abs(n[l])+Math.abs(t[l])),c=l;c<e&&!(Math.abs(t[c])<=k*v);)c++;if(c>l)do{for(s=n[l],h=(n[l+1]-s)/(2*t[l]),d=R(h,1),h<0&&(d=-d),n[l]=t[l]/(h+d),n[l+1]=t[l]*(h+d),p=n[l+1],a=s-n[l],i=l+2;i<e;i++)n[i]-=a;for(w+=a,h=n[c],f=1,m=f,g=f,y=t[l+1],b=0,x=0,i=c-1;i>=l;i--)for(g=m,m=f,x=b,s=f*t[i],a=f*h,d=R(h,t[i]),t[i+1]=b*d,b=t[i]/d,f=h/d,h=f*n[i]-b*s,n[i+1]=a+b*(f*s+b*n[i]),u=0;u<e;u++)a=r.get(u,i+1),r.set(u,i+1,b*r.get(u,i)+f*a),r.set(u,i,f*r.get(u,i)-b*a);h=-b*x*g*y*t[l]/p,t[l]=b*h,n[l]=f*h}while(Math.abs(t[l])>k*v);n[l]=n[l]+w,t[l]=0}for(i=0;i<e-1;i++){for(u=i,h=n[i],o=i+1;o<e;o++)n[o]<h&&(u=o,h=n[o]);if(u!==i)for(n[u]=n[i],n[i]=h,o=0;o<e;o++)h=r.get(o,i),r.set(o,i,r.get(o,u)),r.set(o,u,h)}}(a,u,o,i)}else{let e=new I(a,a),t=new Float64Array(a);for(s=0;s<a;s++)for(r=0;r<a;r++)e.set(r,s,l.get(r,s));!function(e,t,n,r){let s,a,i,o,u,l,c,h=e-1;for(l=1;l<=h-1;l++){for(c=0,o=l;o<=h;o++)c+=Math.abs(t.get(o,l-1));if(0!==c){for(i=0,o=h;o>=l;o--)n[o]=t.get(o,l-1)/c,i+=n[o]*n[o];for(a=Math.sqrt(i),n[l]>0&&(a=-a),i-=n[l]*a,n[l]=n[l]-a,u=l;u<e;u++){for(s=0,o=h;o>=l;o--)s+=n[o]*t.get(o,u);for(s/=i,o=l;o<=h;o++)t.set(o,u,t.get(o,u)-s*n[o])}for(o=0;o<=h;o++){for(s=0,u=h;u>=l;u--)s+=n[u]*t.get(o,u);for(s/=i,u=l;u<=h;u++)t.set(o,u,t.get(o,u)-s*n[u])}n[l]=c*n[l],t.set(l,l-1,c*a)}}for(o=0;o<e;o++)for(u=0;u<e;u++)r.set(o,u,o===u?1:0);for(l=h-1;l>=1;l--)if(0!==t.get(l,l-1)){for(o=l+1;o<=h;o++)n[o]=t.get(o,l-1);for(u=l;u<=h;u++){for(a=0,o=l;o<=h;o++)a+=n[o]*r.get(o,u);for(a=a/n[l]/t.get(l,l-1),o=l;o<=h;o++)r.set(o,u,r.get(o,u)+a*n[o])}}}(a,e,t,i),function(e,t,n,r,s){let a,i,o,u,l,c,h,d,p,f,m,g,y,b,x,w=e-1,v=e-1,k=Number.EPSILON,I=0,S=0,N=0,T=0,E=0,C=0,$=0,A=0;for(a=0;a<e;a++)for((a<0||a>v)&&(n[a]=s.get(a,a),t[a]=0),i=Math.max(a-1,0);i<e;i++)S+=Math.abs(s.get(a,i));for(;w>=0;){for(u=w;u>0&&(C=Math.abs(s.get(u-1,u-1))+Math.abs(s.get(u,u)),0===C&&(C=S),!(Math.abs(s.get(u,u-1))<k*C));)u--;if(u===w)s.set(w,w,s.get(w,w)+I),n[w]=s.get(w,w),t[w]=0,w--,A=0;else if(u===w-1){if(h=s.get(w,w-1)*s.get(w-1,w),N=(s.get(w-1,w-1)-s.get(w,w))/2,T=N*N+h,$=Math.sqrt(Math.abs(T)),s.set(w,w,s.get(w,w)+I),s.set(w-1,w-1,s.get(w-1,w-1)+I),d=s.get(w,w),T>=0){for($=N>=0?N+$:N-$,n[w-1]=d+$,n[w]=n[w-1],0!==$&&(n[w]=d-h/$),t[w-1]=0,t[w]=0,d=s.get(w,w-1),C=Math.abs(d)+Math.abs($),N=d/C,T=$/C,E=Math.sqrt(N*N+T*T),N/=E,T/=E,i=w-1;i<e;i++)$=s.get(w-1,i),s.set(w-1,i,T*$+N*s.get(w,i)),s.set(w,i,T*s.get(w,i)-N*$);for(a=0;a<=w;a++)$=s.get(a,w-1),s.set(a,w-1,T*$+N*s.get(a,w)),s.set(a,w,T*s.get(a,w)-N*$);for(a=0;a<=v;a++)$=r.get(a,w-1),r.set(a,w-1,T*$+N*r.get(a,w)),r.set(a,w,T*r.get(a,w)-N*$)}else n[w-1]=d+N,n[w]=d+N,t[w-1]=$,t[w]=-$;w-=2,A=0}else{if(d=s.get(w,w),p=0,h=0,u<w&&(p=s.get(w-1,w-1),h=s.get(w,w-1)*s.get(w-1,w)),10===A){for(I+=d,a=0;a<=w;a++)s.set(a,a,s.get(a,a)-d);C=Math.abs(s.get(w,w-1))+Math.abs(s.get(w-1,w-2)),d=p=.75*C,h=-.4375*C*C}if(30===A&&(C=(p-d)/2,C=C*C+h,C>0)){for(C=Math.sqrt(C),p<d&&(C=-C),C=d-h/((p-d)/2+C),a=0;a<=w;a++)s.set(a,a,s.get(a,a)-C);I+=C,d=p=h=.964}for(A+=1,l=w-2;l>=u&&($=s.get(l,l),E=d-$,C=p-$,N=(E*C-h)/s.get(l+1,l)+s.get(l,l+1),T=s.get(l+1,l+1)-$-E-C,E=s.get(l+2,l+1),C=Math.abs(N)+Math.abs(T)+Math.abs(E),N/=C,T/=C,E/=C,l!==u)&&!(Math.abs(s.get(l,l-1))*(Math.abs(T)+Math.abs(E))<k*(Math.abs(N)*(Math.abs(s.get(l-1,l-1))+Math.abs($)+Math.abs(s.get(l+1,l+1)))));)l--;for(a=l+2;a<=w;a++)s.set(a,a-2,0),a>l+2&&s.set(a,a-3,0);for(o=l;o<=w-1&&(b=o!==w-1,o!==l&&(N=s.get(o,o-1),T=s.get(o+1,o-1),E=b?s.get(o+2,o-1):0,d=Math.abs(N)+Math.abs(T)+Math.abs(E),0!==d&&(N/=d,T/=d,E/=d)),0!==d);o++)if(C=Math.sqrt(N*N+T*T+E*E),N<0&&(C=-C),0!==C){for(o!==l?s.set(o,o-1,-C*d):u!==l&&s.set(o,o-1,-s.get(o,o-1)),N+=C,d=N/C,p=T/C,$=E/C,T/=N,E/=N,i=o;i<e;i++)N=s.get(o,i)+T*s.get(o+1,i),b&&(N+=E*s.get(o+2,i),s.set(o+2,i,s.get(o+2,i)-N*$)),s.set(o,i,s.get(o,i)-N*d),s.set(o+1,i,s.get(o+1,i)-N*p);for(a=0;a<=Math.min(w,o+3);a++)N=d*s.get(a,o)+p*s.get(a,o+1),b&&(N+=$*s.get(a,o+2),s.set(a,o+2,s.get(a,o+2)-N*E)),s.set(a,o,s.get(a,o)-N),s.set(a,o+1,s.get(a,o+1)-N*T);for(a=0;a<=v;a++)N=d*r.get(a,o)+p*r.get(a,o+1),b&&(N+=$*r.get(a,o+2),r.set(a,o+2,r.get(a,o+2)-N*E)),r.set(a,o,r.get(a,o)-N),r.set(a,o+1,r.get(a,o+1)-N*T)}}}if(0!==S){for(w=e-1;w>=0;w--)if(N=n[w],T=t[w],0===T)for(u=w,s.set(w,w,1),a=w-1;a>=0;a--){for(h=s.get(a,a)-N,E=0,i=u;i<=w;i++)E+=s.get(a,i)*s.get(i,w);if(t[a]<0)$=h,C=E;else if(u=a,0===t[a]?s.set(a,w,0!==h?-E/h:-E/(k*S)):(d=s.get(a,a+1),p=s.get(a+1,a),T=(n[a]-N)*(n[a]-N)+t[a]*t[a],c=(d*C-$*E)/T,s.set(a,w,c),s.set(a+1,w,Math.abs(d)>Math.abs($)?(-E-h*c)/d:(-C-p*c)/$)),c=Math.abs(s.get(a,w)),k*c*c>1)for(i=a;i<=w;i++)s.set(i,w,s.get(i,w)/c)}else if(T<0)for(u=w-1,Math.abs(s.get(w,w-1))>Math.abs(s.get(w-1,w))?(s.set(w-1,w-1,T/s.get(w,w-1)),s.set(w-1,w,-(s.get(w,w)-N)/s.get(w,w-1))):(x=z(0,-s.get(w-1,w),s.get(w-1,w-1)-N,T),s.set(w-1,w-1,x[0]),s.set(w-1,w,x[1])),s.set(w,w-1,0),s.set(w,w,1),a=w-2;a>=0;a--){for(f=0,m=0,i=u;i<=w;i++)f+=s.get(a,i)*s.get(i,w-1),m+=s.get(a,i)*s.get(i,w);if(h=s.get(a,a)-N,t[a]<0)$=h,E=f,C=m;else if(u=a,0===t[a]?(x=z(-f,-m,h,T),s.set(a,w-1,x[0]),s.set(a,w,x[1])):(d=s.get(a,a+1),p=s.get(a+1,a),g=(n[a]-N)*(n[a]-N)+t[a]*t[a]-T*T,y=2*(n[a]-N)*T,0===g&&0===y&&(g=k*S*(Math.abs(h)+Math.abs(T)+Math.abs(d)+Math.abs(p)+Math.abs($))),x=z(d*E-$*f+T*m,d*C-$*m-T*f,g,y),s.set(a,w-1,x[0]),s.set(a,w,x[1]),Math.abs(d)>Math.abs($)+Math.abs(T)?(s.set(a+1,w-1,(-f-h*s.get(a,w-1)+T*s.get(a,w))/d),s.set(a+1,w,(-m-h*s.get(a,w)-T*s.get(a,w-1))/d)):(x=z(-E-p*s.get(a,w-1),-C-p*s.get(a,w),$,T),s.set(a+1,w-1,x[0]),s.set(a+1,w,x[1]))),c=Math.max(Math.abs(s.get(a,w-1)),Math.abs(s.get(a,w))),k*c*c>1)for(i=a;i<=w;i++)s.set(i,w-1,s.get(i,w-1)/c),s.set(i,w,s.get(i,w)/c)}for(a=0;a<e;a++)if(a<0||a>v)for(i=a;i<e;i++)r.set(a,i,s.get(a,i));for(i=e-1;i>=0;i--)for(a=0;a<=v;a++){for($=0,o=0;o<=Math.min(i,v);o++)$+=r.get(a,o)*s.get(o,i);r.set(a,i,$)}}}(a,u,o,i,e)}this.n=a,this.e=u,this.d=o,this.V=i}get realEigenvalues(){return Array.from(this.d)}get imaginaryEigenvalues(){return Array.from(this.e)}get eigenvectorMatrix(){return this.V}get diagonalMatrix(){let e,t,n=this.n,r=this.e,s=this.d,a=new I(n,n);for(e=0;e<n;e++){for(t=0;t<n;t++)a.set(e,t,0);a.set(e,e,s[e]),r[e]>0?a.set(e,e+1,r[e]):r[e]<0&&a.set(e,e-1,r[e])}return a}}function z(e,t,n,r){let s,a;return Math.abs(n)>Math.abs(r)?(s=r/n,a=n+s*r,[(e+s*t)/a,(t-s*e)/a]):(s=n/r,a=r+s*n,[(s*e+t)/a,(s*t-e)/a])}class P{constructor(e){if(!(e=$.checkMatrix(e)).isSymmetric())throw new Error("Matrix is not symmetric");let t,n,r,s=e,a=s.rows,i=new I(a,a),o=!0;for(n=0;n<a;n++){let e=0;for(r=0;r<n;r++){let a=0;for(t=0;t<r;t++)a+=i.get(r,t)*i.get(n,t);a=(s.get(n,r)-a)/i.get(r,r),i.set(n,r,a),e+=a*a}for(e=s.get(n,n)-e,o&&=e>0,i.set(n,n,Math.sqrt(Math.max(e,0))),r=n+1;r<a;r++)i.set(n,r,0)}this.L=i,this.positiveDefinite=o}isPositiveDefinite(){return this.positiveDefinite}solve(e){e=$.checkMatrix(e);let t=this.L,n=t.rows;if(e.rows!==n)throw new Error("Matrix dimensions do not match");if(!1===this.isPositiveDefinite())throw new Error("Matrix is not positive definite");let r,s,a,i=e.columns,o=e.clone();for(a=0;a<n;a++)for(s=0;s<i;s++){for(r=0;r<a;r++)o.set(a,s,o.get(a,s)-o.get(r,s)*t.get(a,r));o.set(a,s,o.get(a,s)/t.get(a,a))}for(a=n-1;a>=0;a--)for(s=0;s<i;s++){for(r=a+1;r<n;r++)o.set(a,s,o.get(a,s)-o.get(r,s)*t.get(r,a));o.set(a,s,o.get(a,s)/t.get(a,a))}return o}get lowerTriangularMatrix(){return this.L}}class B{constructor(e,t={}){e=$.checkMatrix(e);let{Y:n}=t;const{scaleScores:s=!1,maxIterations:a=1e3,terminationCriteria:i=1e-10}=t;let o;if(n){if(n=r.isAnyArray(n)&&"number"==typeof n[0]?I.columnVector(n):$.checkMatrix(n),n.rows!==e.rows)throw new Error("Y should have the same number of rows as X");o=n.getColumnVector(0)}else o=e.getColumnVector(0);let u,l,c,h,d=1;for(let t=0;t<a&&d>i;t++)c=e.transpose().mmul(o).div(o.transpose().mmul(o).get(0,0)),c=c.div(c.norm()),u=e.mmul(c).div(c.transpose().mmul(c).get(0,0)),t>0&&(d=u.clone().sub(h).pow(2).sum()),h=u.clone(),n?(l=n.transpose().mmul(u).div(u.transpose().mmul(u).get(0,0)),l=l.div(l.norm()),o=n.mmul(l).div(l.transpose().mmul(l).get(0,0))):o=u;if(n){let t=e.transpose().mmul(u).div(u.transpose().mmul(u).get(0,0));t=t.div(t.norm());let r=e.clone().sub(u.clone().mmul(t.transpose())),s=o.transpose().mmul(u).div(u.transpose().mmul(u).get(0,0)),a=n.clone().sub(u.clone().mulS(s.get(0,0)).mmul(l.transpose()));this.t=u,this.p=t.transpose(),this.w=c.transpose(),this.q=l,this.u=o,this.s=u.transpose().mmul(u),this.xResidual=r,this.yResidual=a,this.betas=s}else this.w=c.transpose(),this.s=u.transpose().mmul(u).sqrt(),this.t=s?u.clone().div(this.s.get(0,0)):u,this.xResidual=e.sub(u.mmul(c.transpose()))}}t.AbstractMatrix=w,t.CHO=P,t.CholeskyDecomposition=P,t.DistanceMatrix=N,t.EVD=L,t.EigenvalueDecomposition=L,t.LU=A,t.LuDecomposition=A,t.Matrix=I,t.MatrixColumnSelectionView=class extends T{constructor(e,t){m(e,t),super(e,e.rows,t.length),this.columnIndices=t}set(e,t,n){return this.matrix.set(e,this.columnIndices[t],n),this}get(e,t){return this.matrix.get(e,this.columnIndices[t])}},t.MatrixColumnView=class extends T{constructor(e,t){h(e,t),super(e,e.rows,1),this.column=t}set(e,t,n){return this.matrix.set(e,this.column,n),this}get(e){return this.matrix.get(e,this.column)}},t.MatrixFlipColumnView=class extends T{constructor(e){super(e,e.rows,e.columns)}set(e,t,n){return this.matrix.set(e,this.columns-t-1,n),this}get(e,t){return this.matrix.get(e,this.columns-t-1)}},t.MatrixFlipRowView=class extends T{constructor(e){super(e,e.rows,e.columns)}set(e,t,n){return this.matrix.set(this.rows-e-1,t,n),this}get(e,t){return this.matrix.get(this.rows-e-1,t)}},t.MatrixRowSelectionView=class extends T{constructor(e,t){f(e,t),super(e,t.length,e.columns),this.rowIndices=t}set(e,t,n){return this.matrix.set(this.rowIndices[e],t,n),this}get(e,t){return this.matrix.get(this.rowIndices[e],t)}},t.MatrixRowView=class extends T{constructor(e,t){c(e,t),super(e,1,e.columns),this.row=t}set(e,t,n){return this.matrix.set(this.row,t,n),this}get(e,t){return this.matrix.get(this.row,t)}},t.MatrixSelectionView=E,t.MatrixSubView=class extends T{constructor(e,t,n,r,s){g(e,t,n,r,s),super(e,n-t+1,s-r+1),this.startRow=t,this.startColumn=r}set(e,t,n){return this.matrix.set(this.startRow+e,this.startColumn+t,n),this}get(e,t){return this.matrix.get(this.startRow+e,this.startColumn+t)}},t.MatrixTransposeView=class extends T{constructor(e){super(e,e.columns,e.rows)}set(e,t,n){return this.matrix.set(t,e,n),this}get(e,t){return this.matrix.get(t,e)}},t.NIPALS=B,t.Nipals=B,t.QR=_,t.QrDecomposition=_,t.SVD=M,t.SingularValueDecomposition=M,t.SymmetricMatrix=S,t.WrapperMatrix1D=C,t.WrapperMatrix2D=$,t.correlation=function(e,t=e,n={}){e=new I(e);let s=!1;if("object"!=typeof t||I.isMatrix(t)||r.isAnyArray(t)?t=new I(t):(n=t,t=e,s=!0),e.rows!==t.rows)throw new TypeError("Both matrices must have the same number of rows");const{center:a=!0,scale:i=!0}=n;a&&(e.center("column"),s||t.center("column")),i&&(e.scale("column"),s||t.scale("column"));const o=e.standardDeviation("column",{unbiased:!0}),u=s?o:t.standardDeviation("column",{unbiased:!0}),l=e.transpose().mmul(t);for(let t=0;t<l.rows;t++)for(let n=0;n<l.columns;n++)l.set(t,n,l.get(t,n)*(1/(o[t]*u[n]))*(1/(e.rows-1)));return l},t.covariance=function(e,t=e,n={}){e=new I(e);let s=!1;if("object"!=typeof t||I.isMatrix(t)||r.isAnyArray(t)?t=new I(t):(n=t,t=e,s=!0),e.rows!==t.rows)throw new TypeError("Both matrices must have the same number of rows");const{center:a=!0}=n;a&&(e=e.center("column"),s||(t=t.center("column")));const i=e.transpose().mmul(t);for(let t=0;t<i.rows;t++)for(let n=0;n<i.columns;n++)i.set(t,n,i.get(t,n)*(1/(e.rows-1)));return i},t.default=I,t.determinant=function e(t){if((t=I.checkMatrix(t)).isSquare()){if(0===t.columns)return 1;let n,r,s,a;if(2===t.columns)return n=t.get(0,0),r=t.get(0,1),s=t.get(1,0),a=t.get(1,1),n*a-r*s;if(3===t.columns){let a,i,o;return a=new E(t,[1,2],[1,2]),i=new E(t,[1,2],[0,2]),o=new E(t,[1,2],[0,1]),n=t.get(0,0),r=t.get(0,1),s=t.get(0,2),n*e(a)-r*e(i)+s*e(o)}return new A(t).determinant}throw Error("determinant can only be calculated for a square matrix")},t.inverse=function(e,t=!1){return e=$.checkMatrix(e),t?new M(e).inverse():F(e,I.eye(e.rows))},t.linearDependencies=function(e,t={}){const{thresholdValue:n=1e-9,thresholdError:r=1e-9}=t;let s=(e=I.checkMatrix(e)).rows,a=new I(s,s);for(let t=0;t<s;t++){let i=I.columnVector(e.getRow(t)),o=e.subMatrixRow(D(s,t)).transpose(),u=new M(o).solve(i),l=I.sub(i,o.mmul(u)).abs().max();a.setRow(t,O(l,u,t,n,r))}return a},t.pseudoInverse=function(e,t=Number.EPSILON){if((e=I.checkMatrix(e)).isEmpty())return e.transpose();let n=new M(e,{autoTranspose:!0}),r=n.leftSingularVectors,s=n.rightSingularVectors,a=n.diagonal;for(let e=0;e<a.length;e++)Math.abs(a[e])>t?a[e]=1/a[e]:a[e]=0;return s.mmul(I.diag(a).mmul(r.transpose()))},t.solve=F,t.wrap=function(e,t){if(r.isAnyArray(e))return e[0]&&r.isAnyArray(e[0])?new $(e):new C(e,t);throw new Error("the argument is not an array")}},717:function(e,t,n){var r;!function(e,s){function a(e){var t=this,n="";t.next=function(){var e=t.b,n=t.c,r=t.d,s=t.a;return e=e<<25^e>>>7^n,n=n-r|0,r=r<<24^r>>>8^s,s=s-e|0,t.b=e=e<<20^e>>>12^n,t.c=n=n-r|0,t.d=r<<16^n>>>16^s,t.a=s-e|0},t.a=0,t.b=0,t.c=-1640531527,t.d=1367130551,e===Math.floor(e)?(t.a=e/4294967296|0,t.b=0|e):n+=e;for(var r=0;r<n.length+20;r++)t.b^=0|n.charCodeAt(r),t.next()}function i(e,t){return t.a=e.a,t.b=e.b,t.c=e.c,t.d=e.d,t}function o(e,t){var n=new a(e),r=t&&t.state,s=function(){return(n.next()>>>0)/4294967296};return s.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},s.int32=n.next,s.quick=s,r&&("object"==typeof r&&i(r,n),s.state=function(){return i(n,{})}),s}s&&s.exports?s.exports=o:n.amdD&&n.amdO?void 0===(r=function(){return o}.call(t,n,t,s))||(s.exports=r):this.tychei=o}(0,e=n.nmd(e),n.amdD)},718:(e,t,n)=>{"use strict";n.r(t),n.d(t,{default:()=>s});var r=n(788);function s(e){var t,n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};if(!(0,r.isAnyArray)(e))throw new TypeError("input must be an array");if(0===e.length)throw new TypeError("input must not be empty");if(void 0!==n.output){if(!(0,r.isAnyArray)(n.output))throw new TypeError("output option must be an array if specified");t=n.output}else t=new Array(e.length);var s=function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};if(!(0,r.isAnyArray)(e))throw new TypeError("input must be an array");if(0===e.length)throw new TypeError("input must not be empty");var n=t.fromIndex,s=void 0===n?0:n,a=t.toIndex,i=void 0===a?e.length:a;if(s<0||s>=e.length||!Number.isInteger(s))throw new Error("fromIndex must be a positive integer smaller than length");if(i<=s||i>e.length||!Number.isInteger(i))throw new Error("toIndex must be an integer greater than fromIndex and at most equal to length");for(var o=e[s],u=s+1;u<i;u++)e[u]<o&&(o=e[u]);return o}(e),a=function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};if(!(0,r.isAnyArray)(e))throw new TypeError("input must be an array");if(0===e.length)throw new TypeError("input must not be empty");var n=t.fromIndex,s=void 0===n?0:n,a=t.toIndex,i=void 0===a?e.length:a;if(s<0||s>=e.length||!Number.isInteger(s))throw new Error("fromIndex must be a positive integer smaller than length");if(i<=s||i>e.length||!Number.isInteger(i))throw new Error("toIndex must be an integer greater than fromIndex and at most equal to length");for(var o=e[s],u=s+1;u<i;u++)e[u]>o&&(o=e[u]);return o}(e);if(s===a)throw new RangeError("minimum and maximum input values are equal. Cannot rescale a constant array");var i=n.min,o=void 0===i?n.autoMinMax?s:0:i,u=n.max,l=void 0===u?n.autoMinMax?a:1:u;if(o>=l)throw new RangeError("min option must be smaller than max option");for(var c=(l-o)/(a-s),h=0;h<e.length;h++)t[h]=(e[h]-s)*c+o;return t}},743:function(e,t,n){"use strict";var r=this&&this.__awaiter||function(e,t,n,r){return new(n||(n=Promise))(function(s,a){function i(e){try{u(r.next(e))}catch(e){a(e)}}function o(e){try{u(r.throw(e))}catch(e){a(e)}}function u(e){var t;e.done?s(e.value):(t=e.value,t instanceof n?t:new n(function(e){e(t)})).then(i,o)}u((r=r.apply(e,t||[])).next())})},s=this&&this.__generator||function(e,t){var n,r,s,a={label:0,sent:function(){if(1&s[0])throw s[1];return s[1]},trys:[],ops:[]},i=Object.create(("function"==typeof Iterator?Iterator:Object).prototype);return i.next=o(0),i.throw=o(1),i.return=o(2),"function"==typeof Symbol&&(i[Symbol.iterator]=function(){return this}),i;function o(o){return function(u){return function(o){if(n)throw new TypeError("Generator is already executing.");for(;i&&(i=0,o[0]&&(a=0)),a;)try{if(n=1,r&&(s=2&o[0]?r.return:o[0]?r.throw||((s=r.return)&&s.call(r),0):r.next)&&!(s=s.call(r,o[1])).done)return s;switch(r=0,s&&(o=[2&o[0],s.value]),o[0]){case 0:case 1:s=o;break;case 4:return a.label++,{value:o[1],done:!1};case 5:a.label++,r=o[1],o=[0];continue;case 7:o=a.ops.pop(),a.trys.pop();continue;default:if(!((s=(s=a.trys).length>0&&s[s.length-1])||6!==o[0]&&2!==o[0])){a=0;continue}if(3===o[0]&&(!s||o[1]>s[0]&&o[1]<s[3])){a.label=o[1];break}if(6===o[0]&&a.label<s[1]){a.label=s[1],s=o;break}if(s&&a.label<s[2]){a.label=s[2],a.ops.push(o);break}s[2]&&a.ops.pop(),a.trys.pop();continue}o=t.call(e,a)}catch(e){o=[6,e],r=0}finally{n=s=0}if(5&o[0])throw o[1];return{value:o[0]?o[1]:void 0,done:!0}}([o,u])}}};Object.defineProperty(t,"__esModule",{value:!0});var a=n(848),i=function(){function e(){}return e.prototype.initialize=function(){return r(this,void 0,void 0,function(){var e,t;return s(this,function(n){switch(n.label){case 0:return[4,a.FilesetResolver.forVisionTasks("https://cdn.jsdelivr.net/npm/@mediapipe/tasks-vision@0.10.3/wasm")];case 1:return e=n.sent(),t=this,[4,a.FaceLandmarker.createFromOptions(e,{baseOptions:{modelAssetPath:"https://storage.googleapis.com/mediapipe-models/face_landmarker/face_landmarker/float16/1/face_landmarker.task",delegate:"GPU"},outputFaceBlendshapes:!0,outputFacialTransformationMatrixes:!0,runningMode:"IMAGE",numFaces:1})];case 2:return t.faceLandmarker=n.sent(),[2]}})})},e.prototype.processFrame=function(e){return r(this,void 0,void 0,function(){return s(this,function(t){switch(t.label){case 0:return this.faceLandmarker?[4,this.faceLandmarker.detect(e)]:(console.error("FaceLandmarker is not loaded yet."),[2,null]);case 1:return[2,t.sent()]}})})},e}();t.default=i},788:(e,t,n)=>{"use strict";n.r(t),n.d(t,{isAnyArray:()=>s});const r=Object.prototype.toString;function s(e){const t=r.call(e);return t.endsWith("Array]")&&!t.includes("Big")}},801:function(e,t,n){var r;!function(s,a,i){var o,u=256,l=i.pow(u,6),c=i.pow(2,52),h=2*c,d=255;function p(e,t,n){var r=[],d=y(g((t=1==t?{entropy:!0}:t||{}).entropy?[e,b(a)]:null==e?function(){try{var e;return o&&(e=o.randomBytes)?e=e(u):(e=new Uint8Array(u),(s.crypto||s.msCrypto).getRandomValues(e)),b(e)}catch(e){var t=s.navigator,n=t&&t.plugins;return[+new Date,s,n,s.screen,b(a)]}}():e,3),r),p=new f(r),x=function(){for(var e=p.g(6),t=l,n=0;e<c;)e=(e+n)*u,t*=u,n=p.g(1);for(;e>=h;)e/=2,t/=2,n>>>=1;return(e+n)/t};return x.int32=function(){return 0|p.g(4)},x.quick=function(){return p.g(4)/4294967296},x.double=x,y(b(p.S),a),(t.pass||n||function(e,t,n,r){return r&&(r.S&&m(r,p),e.state=function(){return m(p,{})}),n?(i.random=e,t):e})(x,d,"global"in t?t.global:this==i,t.state)}function f(e){var t,n=e.length,r=this,s=0,a=r.i=r.j=0,i=r.S=[];for(n||(e=[n++]);s<u;)i[s]=s++;for(s=0;s<u;s++)i[s]=i[a=d&a+e[s%n]+(t=i[s])],i[a]=t;(r.g=function(e){for(var t,n=0,s=r.i,a=r.j,i=r.S;e--;)t=i[s=d&s+1],n=n*u+i[d&(i[s]=i[a=d&a+t])+(i[a]=t)];return r.i=s,r.j=a,n})(u)}function m(e,t){return t.i=e.i,t.j=e.j,t.S=e.S.slice(),t}function g(e,t){var n,r=[],s=typeof e;if(t&&"object"==s)for(n in e)try{r.push(g(e[n],t-1))}catch(e){}return r.length?r:"string"==s?e:e+"\\0"}function y(e,t){for(var n,r=e+"",s=0;s<r.length;)t[d&s]=d&(n^=19*t[d&s])+r.charCodeAt(s++);return b(t)}function b(e){return String.fromCharCode.apply(0,e)}if(y(i.random(),a),e.exports){e.exports=p;try{o=n(234)}catch(e){}}else void 0===(r=function(){return p}.call(t,n,t,e))||(e.exports=r)}("undefined"!=typeof self?self:this,[],Math)},817:()=>{},833:function(e,t,n){var r;!function(e,s){function a(e){var t=this;t.next=function(){var e,n,r=t.w,s=t.X,a=t.i;return t.w=r=r+1640531527|0,n=s[a+34&127],e=s[a=a+1&127],n^=n<<13,e^=e<<17,n^=n>>>15,e^=e>>>12,n=s[a]=n^e,t.i=a,n+(r^r>>>16)|0},function(e,t){var n,r,s,a,i,o=[],u=128;for(t===(0|t)?(r=t,t=null):(t+="\\0",r=0,u=Math.max(u,t.length)),s=0,a=-32;a<u;++a)t&&(r^=t.charCodeAt((a+32)%t.length)),0===a&&(i=r),r^=r<<10,r^=r>>>15,r^=r<<4,r^=r>>>13,a>=0&&(i=i+1640531527|0,s=0==(n=o[127&a]^=r+i)?s+1:0);for(s>=128&&(o[127&(t&&t.length||0)]=-1),s=127,a=512;a>0;--a)r=o[s+34&127],n=o[s=s+1&127],r^=r<<13,n^=n<<17,r^=r>>>15,n^=n>>>12,o[s]=r^n;e.w=i,e.X=o,e.i=s}(t,e)}function i(e,t){return t.i=e.i,t.w=e.w,t.X=e.X.slice(),t}function o(e,t){null==e&&(e=+new Date);var n=new a(e),r=t&&t.state,s=function(){return(n.next()>>>0)/4294967296};return s.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},s.int32=n.next,s.quick=s,r&&(r.X&&i(r,n),s.state=function(){return i(n,{})}),s}s&&s.exports?s.exports=o:n.amdD&&n.amdO?void 0===(r=function(){return o}.call(t,n,t,s))||(s.exports=r):this.xor4096=o}(0,e=n.nmd(e),n.amdD)},848:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n="undefined"!=typeof self?self:{};function r(e,t){e:{for(var r=["CLOSURE_FLAGS"],s=n,a=0;a<r.length;a++)if(null==(s=s[r[a]])){r=null;break e}r=s}return null!=(e=r&&r[e])?e:t}function s(){throw Error("Invalid UTF8")}function a(e,t){return t=String.fromCharCode.apply(null,t),null==e?t:e+t}let i,o;const u="undefined"!=typeof TextDecoder;let l;const c="undefined"!=typeof TextEncoder;function h(e){if(c)e=(l||=new TextEncoder).encode(e);else{let n=0;const r=new Uint8Array(3*e.length);for(let s=0;s<e.length;s++){var t=e.charCodeAt(s);if(t<128)r[n++]=t;else{if(t<2048)r[n++]=t>>6|192;else{if(t>=55296&&t<=57343){if(t<=56319&&s<e.length){const a=e.charCodeAt(++s);if(a>=56320&&a<=57343){t=1024*(t-55296)+a-56320+65536,r[n++]=t>>18|240,r[n++]=t>>12&63|128,r[n++]=t>>6&63|128,r[n++]=63&t|128;continue}s--}t=65533}r[n++]=t>>12|224,r[n++]=t>>6&63|128}r[n++]=63&t|128}}e=n===r.length?r:r.subarray(0,n)}return e}var d,p=r(610401301,!1),f=r(653718497,r(1,!0));const m=n.navigator;function g(e){return!!p&&!!d&&d.brands.some(({brand:t})=>t&&-1!=t.indexOf(e))}function y(e){var t;return(t=n.navigator)&&(t=t.userAgent)||(t=""),-1!=t.indexOf(e)}function b(){return!!p&&!!d&&d.brands.length>0}function x(){return b()?g("Chromium"):(y("Chrome")||y("CriOS"))&&!(!b()&&y("Edge"))||y("Silk")}function w(e){return w[" "](e),e}d=m&&m.userAgentData||null,w[" "]=function(){};var v=!b()&&(y("Trident")||y("MSIE"));!y("Android")||x(),x(),y("Safari")&&(x()||!b()&&y("Coast")||!b()&&y("Opera")||!b()&&y("Edge")||(b()?g("Microsoft Edge"):y("Edg/"))||b()&&g("Opera"));var k={},I=null;function S(){if(!I){I={};for(var e="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789".split(""),t=["+/=","+/","-_=","-_.","-_"],n=0;n<5;n++){var r=e.concat(t[n].split(""));k[n]=r;for(var s=0;s<r.length;s++){var a=r[s];void 0===I[a]&&(I[a]=s)}}}}var N="undefined"!=typeof Uint8Array,T=!v&&"function"==typeof btoa;function E(e){if(!T){var t;void 0===t&&(t=0),S(),t=k[t];var n=Array(Math.floor(e.length/3)),r=t[64]||"";let u=0,l=0;for(;u<e.length-2;u+=3){var s=e[u],a=e[u+1],i=e[u+2],o=t[s>>2];s=t[(3&s)<<4|a>>4],a=t[(15&a)<<2|i>>6],i=t[63&i],n[l++]=o+s+a+i}switch(o=0,i=r,e.length-u){case 2:i=t[(15&(o=e[u+1]))<<2]||r;case 1:e=e[u],n[l]=t[e>>2]+t[(3&e)<<4|o>>4]+i+r}return n.join("")}for(t="",n=0,r=e.length-10240;n<r;)t+=String.fromCharCode.apply(null,e.subarray(n,n+=10240));return t+=String.fromCharCode.apply(null,n?e.subarray(n):e),btoa(t)}const C=/[-_.]/g,$={"-":"+",_:"/",".":"="};function A(e){return $[e]||""}function R(e){if(!T)return function(e){var t=e.length,n=3*t/4;n%3?n=Math.floor(n):-1!="=.".indexOf(e[t-1])&&(n=-1!="=.".indexOf(e[t-2])?n-2:n-1);var r=new Uint8Array(n),s=0;return function(e,t){function n(t){for(;r<e.length;){var n=e.charAt(r++),s=I[n];if(null!=s)return s;if(!/^[\\s\\xa0]*$/.test(n))throw Error("Unknown base64 encoding at char: "+n)}return t}S();for(var r=0;;){var s=n(-1),a=n(0),i=n(64),o=n(64);if(64===o&&-1===s)break;t(s<<2|a>>4),64!=i&&(t(a<<4&240|i>>2),64!=o&&t(i<<6&192|o))}}(e,function(e){r[s++]=e}),s!==n?r.subarray(0,s):r}(e);C.test(e)&&(e=e.replace(C,A)),e=atob(e);const t=new Uint8Array(e.length);for(let n=0;n<e.length;n++)t[n]=e.charCodeAt(n);return t}function _(e){return N&&null!=e&&e instanceof Uint8Array}var M={};let F;function D(e){if(e!==M)throw Error("illegal external caller")}function O(){return F||=new z(null,M)}function L(e){D(M);var t=e.g;return null==(t=null==t||_(t)?t:"string"==typeof t?R(t):null)?t:e.g=t}var z=class{constructor(e,t){if(D(t),this.g=e,null!=e&&0===e.length)throw Error("ByteString should be constructed with non-empty values")}h(){return new Uint8Array(L(this)||0)}};function P(e,t){e.__closure__error__context__984382||(e.__closure__error__context__984382={}),e.__closure__error__context__984382.severity=t}let B;function V(){const e=Error();P(e,"incident"),function(e){n.setTimeout(()=>{throw e},0)}(e)}function U(e){return P(e=Error(e),"warning"),e}function W(){return"function"==typeof BigInt}function G(e){return Array.prototype.slice.call(e)}var H="function"==typeof Symbol&&"symbol"==typeof Symbol();function j(e){return"function"==typeof Symbol&&"symbol"==typeof Symbol()?Symbol():e}var q=j(),K=j("0di"),X=j("2ex"),Y=j("1oa"),J=j("0dg"),Z=H?(e,t)=>{e[q]|=t}:(e,t)=>{void 0!==e.G?e.G|=t:Object.defineProperties(e,{G:{value:t,configurable:!0,writable:!0,enumerable:!1}})},Q=H?(e,t)=>{e[q]&=~t}:(e,t)=>{void 0!==e.G&&(e.G&=~t)},ee=H?e=>0|e[q]:e=>0|e.G,te=H?e=>e[q]:e=>e.G,ne=H?(e,t)=>{e[q]=t}:(e,t)=>{void 0!==e.G?e.G=t:Object.defineProperties(e,{G:{value:t,configurable:!0,writable:!0,enumerable:!1}})};function re(e){return Z(e,34),e}function se(e,t){ne(t,-30975&e)}function ae(e,t){ne(t,-30941&e|34)}var ie,oe={},ue={};function le(e){return!(!e||"object"!=typeof e||e.Ja!==ue)}function ce(e){return null!==e&&"object"==typeof e&&!Array.isArray(e)&&e.constructor===Object}function he(e,t,n){if(null!=e)if("string"==typeof e)e=e?new z(e,M):O();else if(e.constructor!==z)if(_(e))e=e.length?new z(n?e:new Uint8Array(e),M):O();else{if(!t)throw Error();e=void 0}return e}function de(e){return!(!Array.isArray(e)||e.length||!(1&ee(e)))}const pe=[];function fe(e){if(2&e)throw Error()}ne(pe,55),ie=Object.freeze(pe);class me{constructor(e,t,n){this.l=0,this.g=e,this.h=t,this.m=n}next(){if(this.l<this.g.length){const e=this.g[this.l++];return{done:!1,value:this.h?this.h.call(this.m,e):e}}return{done:!0,value:void 0}}[Symbol.iterator](){return new me(this.g,this.h,this.m)}}let ge;function ye(e,t){(t=ge?t[ge]:void 0)&&(e[ge]=G(t))}var be=Object.freeze({}),xe=Object.freeze({}),we=Object.freeze({});function ve(e){return e.Qa=!0,e}var ke=ve(e=>"number"==typeof e),Ie=ve(e=>"string"==typeof e),Se=ve(e=>"boolean"==typeof e),Ne="function"==typeof n.BigInt&&"bigint"==typeof n.BigInt(0),Te=ve(e=>Ne?e>=Ce&&e<=Ae:"-"===e[0]?Re(e,Ee):Re(e,$e));const Ee=Number.MIN_SAFE_INTEGER.toString(),Ce=Ne?BigInt(Number.MIN_SAFE_INTEGER):void 0,$e=Number.MAX_SAFE_INTEGER.toString(),Ae=Ne?BigInt(Number.MAX_SAFE_INTEGER):void 0;function Re(e,t){if(e.length>t.length)return!1;if(e.length<t.length||e===t)return!0;for(let n=0;n<e.length;n++){const r=e[n],s=t[n];if(r>s)return!1;if(r<s)return!0}}const _e="function"==typeof Uint8Array.prototype.slice;let Me,Fe=0,De=0;function Oe(e){const t=e>>>0;Fe=t,De=(e-t)/4294967296>>>0}function Le(e){if(e<0){Oe(-e);const[t,n]=Ge(Fe,De);Fe=t>>>0,De=n>>>0}else Oe(e)}function ze(e){const t=Me||=new DataView(new ArrayBuffer(8));t.setFloat32(0,+e,!0),De=0,Fe=t.getUint32(0,!0)}function Pe(e,t){return 4294967296*t+(e>>>0)}function Be(e,t){const n=2147483648&t;return n&&(t=~t>>>0,0==(e=1+~e>>>0)&&(t=t+1>>>0)),e=Pe(e,t),n?-e:e}function Ve(e,t){if(e>>>=0,(t>>>=0)<=2097151)var n=""+(4294967296*t+e);else W()?n=""+(BigInt(t)<<BigInt(32)|BigInt(e)):(e=(16777215&e)+6777216*(n=16777215&(e>>>24|t<<8))+6710656*(t=t>>16&65535),n+=8147497*t,t*=2,e>=1e7&&(n+=e/1e7>>>0,e%=1e7),n>=1e7&&(t+=n/1e7>>>0,n%=1e7),n=t+Ue(n)+Ue(e));return n}function Ue(e){return e=String(e),"0000000".slice(e.length)+e}function We(e){if(e.length<16)Le(Number(e));else if(W())e=BigInt(e),Fe=Number(e&BigInt(4294967295))>>>0,De=Number(e>>BigInt(32)&BigInt(4294967295));else{const t=+("-"===e[0]);De=Fe=0;const n=e.length;for(let r=t,s=(n-t)%6+t;s<=n;r=s,s+=6){const t=Number(e.slice(r,s));De*=1e6,Fe=1e6*Fe+t,Fe>=4294967296&&(De+=Math.trunc(Fe/4294967296),De>>>=0,Fe>>>=0)}if(t){const[e,t]=Ge(Fe,De);Fe=e,De=t}}}function Ge(e,t){return t=~t,e?e=1+~e:t+=1,[e,t]}function He(e){return null==e||"number"==typeof e?e:"NaN"===e||"Infinity"===e||"-Infinity"===e?Number(e):void 0}function je(e){return null==e||"boolean"==typeof e?e:"number"==typeof e?!!e:void 0}const qe=/^-?([1-9][0-9]*|0)(\\.[0-9]+)?$/;function Ke(e){const t=typeof e;switch(t){case"bigint":return!0;case"number":return Number.isFinite(e)}return"string"===t&&qe.test(e)}function Xe(e){if(null==e)return e;if("string"==typeof e){if(!e)return;e=+e}return"number"==typeof e&&Number.isFinite(e)?0|e:void 0}function Ye(e){if(null==e)return e;if("string"==typeof e){if(!e)return;e=+e}return"number"==typeof e&&Number.isFinite(e)?e>>>0:void 0}function Je(e){return"-"!==e[0]&&(e.length<20||20===e.length&&Number(e.substring(0,6))<184467)}function Ze(e){return e=Math.trunc(e),Number.isSafeInteger(e)||(Le(e),e=Be(Fe,De)),e}function Qe(e){var t=Math.trunc(Number(e));if(Number.isSafeInteger(t))return String(t);if(-1!==(t=e.indexOf("."))&&(e=e.substring(0,t)),!("-"===e[0]?e.length<20||20===e.length&&Number(e.substring(0,7))>-922337:e.length<19||19===e.length&&Number(e.substring(0,6))<922337))if(We(e),e=Fe,2147483648&(t=De))if(W())e=""+(BigInt(0|t)<<BigInt(32)|BigInt(e>>>0));else{const[n,r]=Ge(e,t);e="-"+Ve(n,r)}else e=Ve(e,t);return e}function et(e){return null==e?e:"bigint"==typeof e?(Te(e)?e=Number(e):(e=BigInt.asIntN(64,e),e=Te(e)?Number(e):String(e)),e):Ke(e)?"number"==typeof e?Ze(e):Qe(e):void 0}function tt(e){if("string"!=typeof e)throw Error();return e}function nt(e){if(null!=e&&"string"!=typeof e)throw Error();return e}function rt(e){return null==e||"string"==typeof e?e:void 0}function st(e,t,n,r){if(null!=e&&"object"==typeof e&&e.X===oe)return e;if(!Array.isArray(e))return n?2&r?(e=t[K])?t=e:(re((e=new t).u),t=t[K]=e):t=new t:t=void 0,t;let s=n=ee(e);return 0===s&&(s|=32&r),s|=2&r,s!==n&&ne(e,s),new t(e)}function at(e,t,n){if(t)e:{if(!Ke(t=e))throw U("int64");switch(typeof t){case"string":t=Qe(t);break e;case"bigint":if(e=t=BigInt.asIntN(64,t),Ie(e)){if(!/^\\s*(?:-?[1-9]\\d*|0)?\\s*$/.test(e))throw Error(String(e))}else if(ke(e)&&!Number.isSafeInteger(e))throw Error(String(e));t=Ne?BigInt(t):Se(t)?t?"1":"0":Ie(t)?t.trim()||"0":String(t);break e;default:t=Ze(t)}}else t=et(e);return"string"==typeof(n=null==(e=t)?n?0:void 0:e)&&(t=+n,Number.isSafeInteger(t))?t:n}function it(e){if(void 0===lt&&(lt="function"==typeof Proxy?yt(Proxy):null),!lt||!gt())return e;let t=ot?.get(e);return t||(Math.random()>.01?e:(function(e){if(void 0===ht){const e=new lt([],{});ht=1===Array.prototype.concat.call([],e).length}ht&&"function"==typeof Symbol&&Symbol.isConcatSpreadable&&(e[Symbol.isConcatSpreadable]=!0)}(e),t=new lt(e,{set:(e,t,n)=>(V(),e[t]=n,!0)}),function(e,t){(ot||=new ct).set(e,t),(ut||=new ct).set(t,e)}(e,t),t))}let ot,ut,lt,ct,ht,dt,pt,ft,mt;function gt(){return void 0===ct&&(ct="function"==typeof WeakMap?yt(WeakMap):null),ct}function yt(e){try{return-1!==e.toString().indexOf("[native code]")?e:null}catch{return null}}function bt(e,t,n){if(gt()){if(dt?.get(t)?.get(e)){if(n)return}else if(Math.random()>.01)return;var r=e.length;n={length:r};for(var s=0;s<Math.min(r,10);s++){if(r<=10)var a=s;else{a=r/10;const e=Math.floor(s*a);a=e+Math.floor(Math.random()*(Math.floor((s+1)*a)-e))}n[a]=e[a]}wt(e,n)?((s=(r=dt||=new ct).get(t))||(s=new ct,r.set(t,s)),s.set(e,n)):(V(),kt(e,t))}}function xt(e,t){const n=dt?.get(t)?.get(e);n&&!wt(e,n)&&(V(),kt(e,t))}function wt(e,t){if(e.length!==t.length)return!1;for(const s in t){var n,r=Number(s);if((n=Number.isInteger(r))&&(n=e[r],r=t[r],n=!(Number.isNaN(n)?Number.isNaN(r):n===r)),n)return!1}return!0}function vt(e){if(e&&dt?.has(e)){var t=e.u;if(t)for(let n=0;n<t.length;n++){const r=t[n];if(n===t.length-1&&ce(r))for(const t in r){const n=r[t];Array.isArray(n)&&xt(n,e)}else Array.isArray(r)&&xt(r,e)}}}function kt(e,t){dt?.get(t)?.delete(e)}function It(e,t,n){return e=St(e,t[0],t[1],n?1:2),t!==ft&&n&&Z(e,16384),e}function St(e,t,n,r){if(r=r??0,null==e&&(e=pt),pt=void 0,null==e){var s=96;n?(e=[n],s|=512):e=[],t&&(s=-33521665&s|(1023&t)<<15)}else{if(!Array.isArray(e))throw Error("narr");if(2048&(s=ee(e)))throw Error("farr");if(64&s)return e;if(1===r||2===r||(s|=64),n&&(s|=512,n!==e[0]))throw Error("mid");e:{if(r=(n=e).length){const e=r-1;if(ce(n[e])){if((t=e-(+!!(512&(s|=256))-1))>=1024)throw Error("pvtlmt");s=-33521665&s|(1023&t)<<15;break e}}if(t){if((t=Math.max(t,r-(+!!(512&s)-1)))>1024)throw Error("spvt");s=-33521665&s|(1023&t)<<15}}}return ne(e,s),e}const Nt={};let Tt=function(){try{return w(new class extends Map{constructor(){super()}}),!1}catch{return!0}}();class Et{constructor(){this.g=new Map}get(e){return this.g.get(e)}set(e,t){return this.g.set(e,t),this.size=this.g.size,this}delete(e){return e=this.g.delete(e),this.size=this.g.size,e}clear(){this.g.clear(),this.size=this.g.size}has(e){return this.g.has(e)}entries(){return this.g.entries()}keys(){return this.g.keys()}values(){return this.g.values()}forEach(e,t){return this.g.forEach(e,t)}[Symbol.iterator](){return this.entries()}}const Ct=Tt?(Object.setPrototypeOf(Et.prototype,Map.prototype),Object.defineProperties(Et.prototype,{size:{value:0,configurable:!0,enumerable:!0,writable:!0}}),Et):class extends Map{constructor(){super()}};function $t(e){return e}function At(e){if(2&e.M)throw Error("Cannot mutate an immutable Map")}var Rt=class extends Ct{constructor(e,t,n=$t,r=$t){super();let s=ee(e);s|=64,ne(e,s),this.M=s,this.T=t,this.S=n,this.Z=this.T?_t:r;for(let a=0;a<e.length;a++){const i=e[a],o=n(i[0],!1,!0);let u=i[1];t?void 0===u&&(u=null):u=r(i[1],!1,!0,void 0,void 0,s),super.set(o,u)}}pa(e=Mt){if(0!==this.size)return this.Y(e)}Y(e=Mt){const t=[],n=super.entries();for(var r;!(r=n.next()).done;)(r=r.value)[0]=e(r[0]),r[1]=e(r[1]),t.push(r);return t}clear(){At(this),super.clear()}delete(e){return At(this),super.delete(this.S(e,!0,!1))}entries(){var e=this.oa();return new me(e,Ft,this)}keys(){return this.Ia()}values(){var e=this.oa();return new me(e,Rt.prototype.get,this)}forEach(e,t){super.forEach((n,r)=>{e.call(t,this.get(r),r,this)})}set(e,t){return At(this),null==(e=this.S(e,!0,!1))?this:null==t?(super.delete(e),this):super.set(e,this.Z(t,!0,!0,this.T,!1,this.M))}Oa(e){const t=this.S(e[0],!1,!0);e=e[1],e=this.T?void 0===e?null:e:this.Z(e,!1,!0,void 0,!1,this.M),super.set(t,e)}has(e){return super.has(this.S(e,!1,!1))}get(e){e=this.S(e,!1,!1);const t=super.get(e);if(void 0!==t){var n=this.T;return n?((n=this.Z(t,!1,!0,n,this.ta,this.M))!==t&&super.set(e,n),n):t}}oa(){return Array.from(super.keys())}Ia(){return super.keys()}[Symbol.iterator](){return this.entries()}};function _t(e,t,n,r,s,a){return e=st(e,r,n,a),s&&(e=Gt(e)),e}function Mt(e){return e}function Ft(e){return[e,this.get(e)]}let Dt;function Ot(){return Dt||=new Rt(re([]),void 0,void 0,void 0,Nt)}function Lt(e,t,n,r,s){if(null!=e){if(Array.isArray(e))e=de(e)?void 0:s&&2&ee(e)?e:zt(e,t,n,void 0!==r,s);else if(ce(e)){const a={};for(let i in e)a[i]=Lt(e[i],t,n,r,s);e=a}else e=t(e,r);return e}}function zt(e,t,n,r,s){const a=r||n?ee(e):0;r=r?!!(32&a):void 0;const i=G(e);for(let e=0;e<i.length;e++)i[e]=Lt(i[e],t,n,r,s);return n&&(ye(i,e),n(a,i)),i}function Pt(e){return Lt(e,Bt,void 0,void 0,!1)}function Bt(e){return e.X===oe?e.toJSON():e instanceof Rt?e.pa(Pt):function(e){switch(typeof e){case"number":return isFinite(e)?e:String(e);case"bigint":return Te(e)?Number(e):String(e);case"boolean":return e?1:0;case"object":if(e)if(Array.isArray(e)){if(de(e))return}else{if(_(e))return E(e);if(e instanceof z){const t=e.g;return null==t?"":"string"==typeof t?t:e.g=E(t)}if(e instanceof Rt)return e.pa()}}return e}(e)}function Vt(e,t,n=ae){if(null!=e){if(N&&e instanceof Uint8Array)return t?e:new Uint8Array(e);if(Array.isArray(e)){var r=ee(e);return 2&r?e:(t&&=0===r||!!(32&r)&&!(64&r||!(16&r)),t?(ne(e,-12293&r|34),e):zt(e,Vt,4&r?ae:n,!0,!0))}return e.X===oe?(n=e.u,e=2&(r=te(n))?e:Ut(e,n,r,!0)):e instanceof Rt&&!(2&e.M)&&(n=re(e.Y(Vt)),e=new Rt(n,e.T,e.S,e.Z)),e}}function Ut(e,t,n,r){return vt(e),e=e.constructor,pt=t=Wt(t,n,r),t=new e(t),pt=void 0,t}function Wt(e,t,n){const r=n||2&t?ae:se,s=!!(32&t);return e=function(e,t,n){const r=G(e);var s=r.length;const a=256&t?r[s-1]:void 0;for(s+=a?-1:0,t=512&t?1:0;t<s;t++)r[t]=n(r[t]);if(a){t=r[t]={};for(const e in a)t[e]=n(a[e])}return ye(r,e),r}(e,t,e=>Vt(e,s,r)),Z(e,32|(n?2:0)),e}function Gt(e){const t=e.u,n=te(t);return 2&n?Ut(e,t,n,!1):e}function Ht(e,t,n,r){return!(4&t&&(null==n||(!r&&0===n&&(4096&t||8192&t)&&(e.constructor[J]=1+(0|e.constructor[J]))<5&&V(),0===n||n&t)))}function jt(e,t){return Kt(e=e.u,te(e),t)}function qt(e,t,n,r){if(!((t=r+(+!!(512&t)-1))<0||t>=e.length||t>=n))return e[t]}function Kt(e,t,n,r){if(-1===n)return null;const s=t>>15&1023||536870912;if(!(n>=s)){var a=e.length;return r&&256&t&&null!=(r=e[a-1][n])?(qt(e,t,s,n)&&null!=X&&((t=(e=B??={})[X]||0)>=4||(e[X]=t+1,V())),r):qt(e,t,s,n)}return 256&t?e[e.length-1][n]:void 0}function Xt(e,t,n){const r=e.u;let s=te(r);return fe(s),Yt(r,s,t,n),e}function Yt(e,t,n,r){const s=t>>15&1023||536870912;if(n>=s){let a,i=t;if(256&t)a=e[e.length-1];else{if(null==r)return i;a=e[s+(+!!(512&t)-1)]={},i|=256}return a[n]=r,n<s&&(e[n+(+!!(512&t)-1)]=void 0),i!==t&&ne(e,i),i}return e[n+(+!!(512&t)-1)]=r,256&t&&n in(e=e[e.length-1])&&delete e[n],t}function Jt(e,t,n,r,s){var a=2&t;s=Kt(e,t,n,s),Array.isArray(s)||(s=ie);const i=!(2&r);r=!(1&r);const o=!!(32&t);let u=ee(s);return 0!==u||!o||a||i?1&u||(u|=1,ne(s,u)):(u|=33,ne(s,u)),a?(e=!1,2&u||(re(s),e=!!(4&u)),(r||e)&&Object.freeze(s)):(a=!!(2&u)||!!(2048&u),r&&a?(s=G(s),a=1,o&&!i&&(a|=32),ne(s,a),Yt(e,t,n,s)):i&&32&u&&!a&&Q(s,32)),s}function Zt(e,t){e=e.u;let n=te(e);const r=Kt(e,n,t),s=He(r);return null!=s&&s!==r&&Yt(e,n,t,s),s}function Qt(e){e=e.u;let t=te(e);const n=Kt(e,t,1),r=he(n,!0,!!(34&t));return null!=r&&r!==n&&Yt(e,t,1,r),r}function en(){return void 0===be?2:5}function tn(e,t,n,r,s,a){const i=e.u;let o=te(i);r=2&o?1:r,a=!!a,s=nn(i,o,t,s);var u=ee(s),l=s;if(xt(l,e),2!==r&&1!==r||kt(l,e),Ht(e,u,void 0,a)){4&u&&(s=G(s),u=xn(u,o),o=Yt(i,o,t,s));let e=l=0;for(;l<s.length;l++){const t=n(s[l]);null!=t&&(s[e++]=t)}e<l&&(s.length=e),u=-4097&(u=rn(u,o))|20,ne(s,u&=-8193),2&u&&Object.freeze(s)}let c;return 1===r||4===r&&32&u?sn(u)||(e=u,(u|=2)!==e&&ne(s,u),Object.freeze(s)):(n=5===r&&(!!(32&u)||sn(u)||!!ot?.get(s)),(2===r||n)&&sn(u)&&(s=G(s),u=wn(u=xn(u,o),o,a),ne(s,u),o=Yt(i,o,t,s)),sn(u)||(t=u,(u=wn(u,o,a))!==t&&ne(s,u)),n?(c=it(s),bt(s,e,!0)):2!==r||a||ot?.delete(s)),c||s}function nn(e,t,n,r){return e=Kt(e,t,n,r),Array.isArray(e)?e:ie}function rn(e,t){return 0===e&&(e=xn(e,t)),1|e}function sn(e){return!!(2&e)&&!!(4&e)||!!(2048&e)}function an(e){e=G(e);for(let t=0;t<e.length;t++){const n=e[t]=G(e[t]);Array.isArray(n[1])&&(n[1]=re(n[1]))}return e}function on(e,t,n,r){e=e.u;let s=te(e);fe(s),Yt(e,s,t,("0"===r?0===Number(n):n===r)?void 0:n)}function un(e,t){var n=$a;return hn(ln(e=e.u),e,te(e),n)===t?t:-1}function ln(e){if(H)return e[Y]??(e[Y]=new Map);if(Y in e)return e[Y];const t=new Map;return Object.defineProperty(e,Y,{value:t}),t}function cn(e,t,n,r){const s=ln(e),a=hn(s,e,t,n);return a!==r&&(a&&(t=Yt(e,t,a)),s.set(n,r)),t}function hn(e,t,n,r){let s=e.get(r);if(null!=s)return s;s=0;for(let e=0;e<r.length;e++){const a=r[e];null!=Kt(t,n,a)&&(0!==s&&(n=Yt(t,n,s)),s=a)}return e.set(r,s),s}function dn(e,t,n,r){let s,a=te(e);if(null!=(r=Kt(e,a,n,r))&&r.X===oe)return(t=Gt(r))!==r&&Yt(e,a,n,t),t.u;if(Array.isArray(r)){const e=ee(r);s=2&e?It(Wt(r,e,!1),t,!0):64&e?r:It(s,t,!0)}else s=It(void 0,t,!0);return s!==r&&Yt(e,a,n,s),s}function pn(e,t,n,r){e=e.u;let s=te(e);return(t=st(r=Kt(e,s,n,r),t,!1,s))!==r&&null!=t&&Yt(e,s,n,t),t}function fn(e,t,n,r=!1){if(null==(t=pn(e,t,n,r)))return t;if(e=e.u,!(2&(r=te(e)))){const s=Gt(t);s!==t&&Yt(e,r,n,t=s)}return t}function mn(e,t,n,r,s,a,i){const o=e.u;var u=!!(2&t);s=u?1:s,a=!!a,i&&=!u,u=nn(o,t,r);var l=ee(u),c=u;if(xt(c,e),2!==s&&1!==s||kt(c,e),!(c=!!(4&l))){var h=u,d=t;const e=!!(2&(l=rn(l,t)));e&&(d|=2);let r=!e,s=!0,a=0,i=0;for(;a<h.length;a++){const t=st(h[a],n,!1,d);if(t instanceof n){if(!e){const e=!!(2&ee(t.u));r&&=!e,s&&=e}h[i++]=t}}i<a&&(h.length=i),l|=4,l=s?16|l:-17&l,ne(h,l=r?8|l:-9&l),e&&Object.freeze(h)}if(i&&!(8&l||!u.length&&(1===s||4===s&&32&l))){for(sn(l)?(u=G(u),l=xn(l,t),t=Yt(o,t,r,u)):kt(u,e),n=u,i=l,h=0;h<n.length;h++)(l=n[h])!==(d=Gt(l))&&(n[h]=d);i|=8,i=n.length?-17&i:16|i,ne(n,i),l=i}let p;return 1===s||4===s&&32&l?sn(l)||(e=l,(l|=!u.length||16&l&&(!c||32&l)?2:2048)!==e&&ne(u,l),Object.freeze(u)):(c=5===s&&(!!(32&l)||sn(l)||!!ot?.get(u)),(2===s||c)&&sn(l)&&(u=G(u),l=wn(l=xn(l,t),t,a),ne(u,l),t=Yt(o,t,r,u)),sn(l)||(r=l,(l=wn(l,t,a))!==r&&ne(u,l)),c?(p=it(u),bt(u,e,!0)):2!==s||a||ot?.delete(u)),p||u}function gn(e,t,n){const r=te(e.u);return mn(e,r,t,n,en(),!1,!(2&r))}function yn(e,t,n,r){return null==r&&(r=void 0),Xt(e,n,r)}function bn(e,t,n,r){null==r&&(r=void 0);e:{e=e.u;let s=te(e);if(fe(s),null==r){const r=ln(e);if(hn(r,e,s,n)!==t)break e;r.set(n,0)}else s=cn(e,s,n,t);Yt(e,s,t,r)}}function xn(e,t){return-2049&(2&t?2|e:-3&e)|32}function wn(e,t,n){return 32&t&&n||(e&=-33),e}function vn(e,t,n,r){const s=te(e.u);fe(s),e=mn(e,s,n,t,2,!0),r=null!=r?r:new n,e.push(r),2&ee(r.u)?Q(e,8):Q(e,16)}function kn(e,t){return e??t}function In(e,t){return Xe(jt(e,t))}function Sn(e,t){return kn(Zt(e,t),0)}function Nn(e,t){return kn(rt(jt(e,t)),"")}function Tn(e,t,n){if(null!=n&&"boolean"!=typeof n)throw e=typeof n,Error(`Expected boolean but got ${"object"!=e?e:n?Array.isArray(n)?"array":e:"null"}: ${n}`);Xt(e,t,n)}function En(e,t,n){if(null!=n){if("number"!=typeof n)throw U("int32");if(!Number.isFinite(n))throw U("int32");n|=0}Xt(e,t,n)}function Cn(e,t,n){if(null!=n&&"number"!=typeof n)throw Error(`Value of float/double field must be a number, found ${typeof n}: ${n}`);Xt(e,t,n)}function $n(e,t,n){{const o=e.u;let u=te(o);if(fe(u),null==n)Yt(o,u,t);else{n=ut?.get(n)||n;var r,s=ee(n),a=s,i=!!(2&s)||Object.isFrozen(n);if((r=!i)&&((r=void 0===we)||(r=!!f&&void 0!==xe)),Ht(e,s)){s=21,i&&(n=G(n),a=0,s=wn(s=xn(s,u),u,!0));for(let e=0;e<n.length;e++)n[e]=tt(n[e])}r?(n=G(n),a=0,s=wn(s=xn(s,u),u,!0)):i||bt(n,e),s!==a&&ne(n,s),Yt(o,u,t,n)}}}function An(e,t,n){fe(te(e.u)),tn(e,t,rt,2,void 0,!0).push(tt(n))}function Rn(e,t){return Error(`Invalid wire type: ${e} (at position ${t})`)}function _n(){return Error("Failed to read varint, encoding is invalid.")}function Mn(e,t){return Error(`Tried to read past the end of the data ${t} > ${e}`)}function Fn(e){if("string"==typeof e)return{buffer:R(e),O:!1};if(Array.isArray(e))return{buffer:new Uint8Array(e),O:!1};if(e.constructor===Uint8Array)return{buffer:e,O:!1};if(e.constructor===ArrayBuffer)return{buffer:new Uint8Array(e),O:!1};if(e.constructor===z)return{buffer:L(e)||new Uint8Array(0),O:!0};if(e instanceof Uint8Array)return{buffer:new Uint8Array(e.buffer,e.byteOffset,e.byteLength),O:!1};throw Error("Type not convertible to a Uint8Array, expected a Uint8Array, an ArrayBuffer, a base64 encoded string, a ByteString or an Array of numbers")}function Dn(e,t){let n,r=0,s=0,a=0;const i=e.h;let o=e.g;do{n=i[o++],r|=(127&n)<<a,a+=7}while(a<32&&128&n);for(a>32&&(s|=(127&n)>>4),a=3;a<32&&128&n;a+=7)n=i[o++],s|=(127&n)<<a;if(Wn(e,o),n<128)return t(r>>>0,s>>>0);throw _n()}function On(e){let t=0,n=e.g;const r=n+10,s=e.h;for(;n<r;){const r=s[n++];if(t|=r,!(128&r))return Wn(e,n),!!(127&t)}throw _n()}function Ln(e){const t=e.h;let n=e.g,r=t[n++],s=127&r;if(128&r&&(r=t[n++],s|=(127&r)<<7,128&r&&(r=t[n++],s|=(127&r)<<14,128&r&&(r=t[n++],s|=(127&r)<<21,128&r&&(r=t[n++],s|=r<<28,128&r&&128&t[n++]&&128&t[n++]&&128&t[n++]&&128&t[n++]&&128&t[n++])))))throw _n();return Wn(e,n),s}function zn(e){return Ln(e)>>>0}function Pn(e){var t=e.h;const n=e.g,r=t[n],s=t[n+1],a=t[n+2];return t=t[n+3],Wn(e,e.g+4),(r|s<<8|a<<16|t<<24)>>>0}function Bn(e){var t=Pn(e);e=2*(t>>31)+1;const n=t>>>23&255;return t&=8388607,255==n?t?NaN:e*(1/0):0==n?1401298464324817e-60*e*t:e*Math.pow(2,n-150)*(t+8388608)}function Vn(e){return Ln(e)}function Un(e,t,{ca:n=!1}={}){e.ca=n,t&&(t=Fn(t),e.h=t.buffer,e.m=t.O,e.j=0,e.l=e.h.length,e.g=e.j)}function Wn(e,t){if(e.g=t,t>e.l)throw Mn(e.l,t)}function Gn(e,t){if(t<0)throw Error(`Tried to read a negative byte length: ${t}`);const n=e.g,r=n+t;if(r>e.l)throw Mn(t,e.l-n);return e.g=r,n}function Hn(e,t){if(0==t)return O();var n=Gn(e,t);return e.ca&&e.m?n=e.h.subarray(n,n+t):(e=e.h,n=n===(t=n+t)?new Uint8Array(0):_e?e.slice(n,t):new Uint8Array(e.subarray(n,t))),0==n.length?O():new z(n,M)}Rt.prototype.toJSON=void 0,Rt.prototype.Ja=ue;var jn=[];function qn(e){var t=e.g;if(t.g==t.l)return!1;e.l=e.g.g;var n=zn(e.g);if(t=n>>>3,!((n&=7)>=0&&n<=5))throw Rn(n,e.l);if(t<1)throw Error(`Invalid field number: ${t} (at position ${e.l})`);return e.m=t,e.h=n,!0}function Kn(e){switch(e.h){case 0:0!=e.h?Kn(e):On(e.g);break;case 1:Wn(e=e.g,e.g+8);break;case 2:if(2!=e.h)Kn(e);else{var t=zn(e.g);Wn(e=e.g,e.g+t)}break;case 5:Wn(e=e.g,e.g+4);break;case 3:for(t=e.m;;){if(!qn(e))throw Error("Unmatched start-group tag: stream EOF");if(4==e.h){if(e.m!=t)throw Error("Unmatched end-group tag");break}Kn(e)}break;default:throw Rn(e.h,e.l)}}function Xn(e,t,n){const r=e.g.l,s=zn(e.g),a=e.g.g+s;let i=a-r;if(i<=0&&(e.g.l=a,n(t,e,void 0,void 0,void 0),i=a-e.g.g),i)throw Error(`Message parsing ended unexpectedly. Expected to read ${s} bytes, instead read ${s-i} bytes, either the data ended unexpectedly or the message misreported its own length`);return e.g.g=a,e.g.l=r,t}function Yn(e){var t=zn(e.g),n=Gn(e=e.g,t);if(e=e.h,u){var r,l=e;(r=o)||(r=o=new TextDecoder("utf-8",{fatal:!0})),t=n+t,l=0===n&&t===l.length?l:l.subarray(n,t);try{var c=r.decode(l)}catch(e){if(void 0===i){try{r.decode(new Uint8Array([128]))}catch(e){}try{r.decode(new Uint8Array([97])),i=!0}catch(e){i=!1}}throw!i&&(o=void 0),e}}else{t=(c=n)+t,n=[];let i,o=null;for(;c<t;){var h=e[c++];h<128?n.push(h):h<224?c>=t?s():(i=e[c++],h<194||128!=(192&i)?(c--,s()):n.push((31&h)<<6|63&i)):h<240?c>=t-1?s():(i=e[c++],128!=(192&i)||224===h&&i<160||237===h&&i>=160||128!=(192&(r=e[c++]))?(c--,s()):n.push((15&h)<<12|(63&i)<<6|63&r)):h<=244?c>=t-2?s():(i=e[c++],128!=(192&i)||i-144+(h<<28)>>30||128!=(192&(r=e[c++]))||128!=(192&(l=e[c++]))?(c--,s()):(h=(7&h)<<18|(63&i)<<12|(63&r)<<6|63&l,h-=65536,n.push(55296+(h>>10&1023),56320+(1023&h)))):s(),n.length>=8192&&(o=a(o,n),n.length=0)}c=a(o,n)}return c}function Jn(e){const t=zn(e.g);return Hn(e.g,t)}function Zn(e,t,n){var r=zn(e.g);for(r=e.g.g+r;e.g.g<r;)n.push(t(e.g))}var Qn=[];let er;function tr(e,t,n){t.g?t.m(e,t.g,t.h,n,!0):t.m(e,t.h,n,!0)}var nr=class{constructor(e,t){this.u=St(e,t)}toJSON(){return rr(this)}l(){var e=Si;return e.g?e.l(this,e.g,e.h,!0):e.l(this,e.h,e.defaultValue,!0)}clone(){const e=this.u;return Ut(this,e,te(e),!1)}O(){return!!(2&ee(this.u))}};function rr(e){vt(e),e=er?e.u:zt(e.u,Bt,void 0,void 0,!1);{var t=!er;let l=e.length;if(l){var n=e[l-1],r=ce(n);r?l--:n=void 0;var s=e;if(r){e:{var a,i=n,o=!1;if(i)for(let e in i)isNaN(+e)?(a??={})[e]=i[e]:(r=i[e],Array.isArray(r)&&(de(r)||le(r)&&0===r.size)&&(r=null),null==r&&(o=!0),null!=r&&((a??={})[e]=r));if(o||(a=i),a)for(let e in a){o=a;break e}o=null}i=null==o?null!=n:o!==n}for(;l>0&&(null==(a=s[l-1])||de(a)||le(a)&&0===a.size);l--)var u=!0;(s!==e||i||u)&&(t?(u||i||o)&&(s.length=l):s=Array.prototype.slice.call(s,0,l),o&&s.push(o)),u=s}else u=e}return u}function sr(e){return e?/^\\d+$/.test(e)?(We(e),new ar(Fe,De)):null:ir||=new ar(0,0)}nr.prototype.X=oe,nr.prototype.toString=function(){try{return er=!0,rr(this).toString()}finally{er=!1}};var ar=class{constructor(e,t){this.h=e>>>0,this.g=t>>>0}};let ir;function or(e){return e?/^-?\\d+$/.test(e)?(We(e),new ur(Fe,De)):null:lr||=new ur(0,0)}var ur=class{constructor(e,t){this.h=e>>>0,this.g=t>>>0}};let lr;function cr(e,t,n){for(;n>0||t>127;)e.g.push(127&t|128),t=(t>>>7|n<<25)>>>0,n>>>=7;e.g.push(t)}function hr(e,t){for(;t>127;)e.g.push(127&t|128),t>>>=7;e.g.push(t)}function dr(e,t){if(t>=0)hr(e,t);else{for(let n=0;n<9;n++)e.g.push(127&t|128),t>>=7;e.g.push(1)}}function pr(e,t){e.g.push(t>>>0&255),e.g.push(t>>>8&255),e.g.push(t>>>16&255),e.g.push(t>>>24&255)}function fr(e,t){0!==t.length&&(e.l.push(t),e.h+=t.length)}function mr(e,t,n){hr(e.g,8*t+n)}function gr(e,t){return mr(e,t,2),t=e.g.end(),fr(e,t),t.push(e.h),t}function yr(e,t){var n=t.pop();for(n=e.h+e.g.length()-n;n>127;)t.push(127&n|128),n>>>=7,e.h++;t.push(n),e.h++}function br(e,t,n){mr(e,t,2),hr(e.g,n.length),fr(e,e.g.end()),fr(e,n)}function xr(e,t,n,r){null!=n&&(t=gr(e,t),r(n,e),yr(e,t))}function wr(){const e=class{constructor(){throw Error()}};return Object.setPrototypeOf(e,e.prototype),e}var vr=wr(),kr=wr(),Ir=wr(),Sr=wr(),Nr=wr(),Tr=wr(),Er=wr(),Cr=wr(),$r=class{constructor(e,t,n){this.g=e,this.h=t,e=vr,this.l=!!e&&n===e||!1}};function Ar(e,t){return new $r(e,t,vr)}function Rr(e,t,n,r,s){xr(e,n,Ur(t,r),s)}const _r=Ar(function(e,t,n,r,s){return 2===e.h&&(Xn(e,dn(t,r,n),s),!0)},Rr),Mr=Ar(function(e,t,n,r,s){return 2===e.h&&(Xn(e,dn(t,r,n,!0),s),!0)},Rr);var Fr=Symbol(),Dr=Symbol(),Or=Symbol(),Lr=Symbol();let zr,Pr;function Br(e,t,n,r){var s=r[e];if(s)return s;(s={}).W=function(e){switch(typeof e){case"boolean":return ft||=[0,void 0,!0];case"number":return e>0?void 0:0===e?mt||=[0,void 0]:[-e,void 0];case"string":return[0,e];case"object":return e}}(r[0]);var a=r[1];let i=1;a&&a.constructor===Object&&(s.ia=a,"function"==typeof(a=r[++i])&&(s.na=!0,zr??=a,Pr??=r[i+1],a=r[i+=2]));const o={};for(;a&&Array.isArray(a)&&a.length&&"number"==typeof a[0]&&a[0]>0;){for(var u=0;u<a.length;u++)o[a[u]]=a;a=r[++i]}for(u=1;void 0!==a;){let e;"number"==typeof a&&(u+=a,a=r[++i]);var l=void 0;if(a instanceof $r?e=a:(e=_r,i--),e?.l){a=r[++i],l=r;var c=i;"function"==typeof a&&(a=a(),l[c]=a),l=a}for(c=u+1,"number"==typeof(a=r[++i])&&a<0&&(c-=a,a=r[++i]);u<c;u++){const r=o[u];l?n(s,u,e,l,r):t(s,u,e,r)}}return r[e]=s}function Vr(e){return Array.isArray(e)?e[0]instanceof $r?e:[Mr,e]:[e,void 0]}function Ur(e,t){return e instanceof nr?(vt(e),e.u):Array.isArray(e)?It(e,t,!1):void 0}function Wr(e,t,n,r){const s=n.g;e[t]=r?(e,t,n)=>s(e,t,n,r):s}function Gr(e,t,n,r,s){const a=n.g;let i,o;e[t]=(e,t,n)=>a(e,t,n,o||=Br(Dr,Wr,Gr,r).W,i||=Hr(r),s)}function Hr(e){let t=e[Or];if(null!=t)return t;const n=Br(Dr,Wr,Gr,e);return t=n.na?(e,t)=>zr(e,t,n):(e,t)=>{const r=te(e);for(;qn(t)&&4!=t.h;){var s=t.m,a=n[s];if(null==a){var i=n.ia;i&&(i=i[s])&&null!=(i=jr(i))&&(a=n[s]=i)}null!=a&&a(t,e,s)||(s=(a=t).l,Kn(a),a.ha?a=void 0:(i=a.g.g-s,a.g.g=s,a=Hn(a.g,i)),s=e,a&&(ge||=Symbol(),(i=s[ge])?i.push(a):s[ge]=[a]))}return 16384&r&&re(e),!0},e[Or]=t}function jr(e){const t=(e=Vr(e))[0].g;if(e=e[1]){const n=Hr(e),r=Br(Dr,Wr,Gr,e).W;return(e,s,a)=>t(e,s,a,r,n)}return t}function qr(e,t,n){e[t]=n.h}function Kr(e,t,n,r){let s,a;const i=n.h;e[t]=(e,t,n)=>i(e,t,n,a||=Br(Fr,qr,Kr,r).W,s||=Xr(r))}function Xr(e){let t=e[Lr];if(!t){const n=Br(Fr,qr,Kr,e);t=(e,t)=>Yr(e,t,n),e[Lr]=t}return t}function Yr(e,t,n){for(var r=ee(e),s=+!!(512&r)-1,a=e.length,i=512&r?1:0,o=a+(256&r?-1:0);i<o;i++){const r=e[i];if(null==r)continue;const a=i-s,o=Jr(n,a);o&&o(t,r,a)}if(256&r){r=e[a-1];for(const e in r)s=+e,Number.isNaN(s)||null!=(a=r[s])&&(o=Jr(n,s))&&o(t,a,s)}if(e=ge?e[ge]:void 0)for(fr(t,t.g.end()),n=0;n<e.length;n++)fr(t,L(e[n])||new Uint8Array(0))}function Jr(e,t){var n=e[t];if(n)return n;if((n=e.ia)&&(n=n[t])){var r=(n=Vr(n))[0].h;if(n=n[1]){const t=Xr(n),s=Br(Fr,qr,Kr,n).W;n=e.na?Pr(s,t):(e,n,a)=>r(e,n,a,s,t)}else n=r;return e[t]=n}}function Zr(e,t){if(Array.isArray(t)){var n=ee(t);if(4&n)return t;for(var r=0,s=0;r<t.length;r++){const n=e(t[r]);null!=n&&(t[s++]=n)}return s<r&&(t.length=s),ne(t,-12289&n|5),2&n&&Object.freeze(t),t}}function Qr(e,t,n){return new $r(e,t,n)}function es(e,t,n){return new $r(e,t,n)}function ts(e,t,n){Yt(e,te(e),t,n)}var ns=Ar(function(e,t,n,r,s){return 2===e.h&&(e=Xn(e,It([void 0,void 0],r,!0),s),fe(r=te(t)),(s=Kt(t,r,n))instanceof Rt?2&s.M?((s=s.Y()).push(e),Yt(t,r,n,s)):s.Oa(e):Array.isArray(s)?(2&ee(s)&&Yt(t,r,n,s=an(s)),s.push(e)):Yt(t,r,n,[e]),!0)},function(e,t,n,r,s){if(t instanceof Rt)t.forEach((t,a)=>{xr(e,n,It([a,t],r,!1),s)});else if(Array.isArray(t))for(let a=0;a<t.length;a++){const i=t[a];Array.isArray(i)&&xr(e,n,It(i,r,!1),s)}});function rs(e,t,n){if(t=function(e){if(null==e)return e;const t=typeof e;if("bigint"===t)return String(BigInt.asIntN(64,e));if(Ke(e)){if("string"===t)return Qe(e);if("number"===t)return Ze(e)}}(t),null!=t&&("string"==typeof t&&or(t),null!=t))switch(mr(e,n,0),typeof t){case"number":e=e.g,Le(t),cr(e,Fe,De);break;case"bigint":n=BigInt.asUintN(64,t),n=new ur(Number(n&BigInt(4294967295)),Number(n>>BigInt(32))),cr(e.g,n.h,n.g);break;default:n=or(t),cr(e.g,n.h,n.g)}}function ss(e,t,n){null!=(t=Xe(t))&&null!=t&&(mr(e,n,0),dr(e.g,t))}function as(e,t,n){null!=(t=je(t))&&(mr(e,n,0),e.g.g.push(t?1:0))}function is(e,t,n){null!=(t=rt(t))&&br(e,n,h(t))}function os(e,t,n,r,s){xr(e,n,Ur(t,r),s)}function us(e,t,n){null!=(t=null==t||"string"==typeof t||_(t)||t instanceof z?t:void 0)&&br(e,n,Fn(t).buffer)}function ls(e,t,n){return(5===e.h||2===e.h)&&(t=Jt(t,te(t),n,2,!1),2==e.h?Zn(e,Bn,t):t.push(Bn(e.g)),!0)}var cs=Qr(function(e,t,n){if(1!==e.h)return!1;var r=e.g;e=Pn(r);const s=Pn(r);r=2*(s>>31)+1;const a=s>>>20&2047;return e=4294967296*(1048575&s)+e,ts(t,n,2047==a?e?NaN:r*(1/0):0==a?5e-324*r*e:r*Math.pow(2,a-1075)*(e+4503599627370496)),!0},function(e,t,n){null!=(t=He(t))&&(mr(e,n,1),e=e.g,(n=Me||=new DataView(new ArrayBuffer(8))).setFloat64(0,+t,!0),Fe=n.getUint32(0,!0),De=n.getUint32(4,!0),pr(e,Fe),pr(e,De))},wr()),hs=Qr(function(e,t,n){return 5===e.h&&(ts(t,n,Bn(e.g)),!0)},function(e,t,n){null!=(t=He(t))&&(mr(e,n,5),e=e.g,ze(t),pr(e,Fe))},Tr),ds=es(ls,function(e,t,n){if(null!=(t=Zr(He,t)))for(let i=0;i<t.length;i++){var r=e,s=n,a=t[i];null!=a&&(mr(r,s,5),r=r.g,ze(a),pr(r,Fe))}},Tr),ps=es(ls,function(e,t,n){if(null!=(t=Zr(He,t))&&t.length){mr(e,n,2),hr(e.g,4*t.length);for(let r=0;r<t.length;r++)n=e.g,ze(t[r]),pr(n,Fe)}},Tr),fs=Qr(function(e,t,n){return 0===e.h&&(ts(t,n,Dn(e.g,Be)),!0)},rs,Nr),ms=Qr(function(e,t,n){return 0===e.h&&(ts(t,n,0===(e=Dn(e.g,Be))?void 0:e),!0)},rs,Nr),gs=Qr(function(e,t,n){return 0===e.h&&(ts(t,n,Dn(e.g,Pe)),!0)},function(e,t,n){if(null!=(t=function(e){if(null==e)return e;var t=typeof e;if("bigint"===t)return String(BigInt.asUintN(64,e));if(Ke(e)){if("string"===t)return t=Math.trunc(Number(e)),Number.isSafeInteger(t)&&t>=0?e=String(t):(-1!==(t=e.indexOf("."))&&(e=e.substring(0,t)),Je(e)||(We(e),e=Ve(Fe,De))),e;if("number"===t)return(e=Math.trunc(e))>=0&&Number.isSafeInteger(e)?e:function(e){if(e<0){Le(e);const t=Ve(Fe,De);return e=Number(t),Number.isSafeInteger(e)?e:t}return Je(String(e))?e:(Le(e),Pe(Fe,De))}(e)}}(t))&&("string"==typeof t&&sr(t),null!=t))switch(mr(e,n,0),typeof t){case"number":e=e.g,Le(t),cr(e,Fe,De);break;case"bigint":n=BigInt.asUintN(64,t),n=new ar(Number(n&BigInt(4294967295)),Number(n>>BigInt(32))),cr(e.g,n.h,n.g);break;default:n=sr(t),cr(e.g,n.h,n.g)}},wr()),ys=Qr(function(e,t,n){return 0===e.h&&(ts(t,n,Ln(e.g)),!0)},ss,Sr),bs=es(function(e,t,n){return(0===e.h||2===e.h)&&(t=Jt(t,te(t),n,2,!1),2==e.h?Zn(e,Ln,t):t.push(Ln(e.g)),!0)},function(e,t,n){if(null!=(t=Zr(Xe,t))&&t.length){n=gr(e,n);for(let n=0;n<t.length;n++)dr(e.g,t[n]);yr(e,n)}},Sr),xs=Qr(function(e,t,n){return 0===e.h&&(ts(t,n,0===(e=Ln(e.g))?void 0:e),!0)},ss,Sr),ws=Qr(function(e,t,n){return 0===e.h&&(ts(t,n,On(e.g)),!0)},as,kr),vs=Qr(function(e,t,n){return 0===e.h&&(ts(t,n,!1===(e=On(e.g))?void 0:e),!0)},as,kr),ks=es(function(e,t,n){if(2!==e.h)return!1;e=Yn(e);const r=te(t);return fe(r),Jt(t,r,n,2).push(e),!0},function(e,t,n){if(null!=(t=Zr(rt,t)))for(let i=0;i<t.length;i++){var r=e,s=n,a=t[i];null!=a&&br(r,s,h(a))}},Ir),Is=Qr(function(e,t,n){return 2===e.h&&(ts(t,n,""===(e=Yn(e))?void 0:e),!0)},is,Ir),Ss=Qr(function(e,t,n){return 2===e.h&&(ts(t,n,Yn(e)),!0)},is,Ir),Ns=function(e,t,n=vr){return new $r(e,t,n)}(function(e,t,n,r,s){if(2!==e.h)return!1;r=It(void 0,r,!0);let a=te(t);fe(a);let i=Jt(t,a,n,3);return a=te(t),4&ee(i)&&(i=G(i),ne(i,-2079&ee(i)|1),Yt(t,a,n,i)),i.push(r),Xn(e,r,s),!0},function(e,t,n,r,s){if(Array.isArray(t))for(let a=0;a<t.length;a++)os(e,t[a],n,r,s)}),Ts=Ar(function(e,t,n,r,s,a){return 2===e.h&&(cn(t,ee(t),a,n),Xn(e,t=dn(t,r,n),s),!0)},os),Es=Qr(function(e,t,n){return 2===e.h&&(ts(t,n,Jn(e)),!0)},us,Er),Cs=es(function(e,t,n){return(0===e.h||2===e.h)&&(t=Jt(t,te(t),n,2,!1),2==e.h?Zn(e,zn,t):t.push(zn(e.g)),!0)},function(e,t,n){if(null!=(t=Zr(Ye,t)))for(let i=0;i<t.length;i++){var r=e,s=n,a=t[i];null!=a&&(mr(r,s,0),hr(r.g,a))}},wr()),$s=Qr(function(e,t,n){return 0===e.h&&(ts(t,n,Ln(e.g)),!0)},function(e,t,n){null!=(t=Xe(t))&&(t=parseInt(t,10),mr(e,n,0),dr(e.g,t))},Cr);class As{constructor(e,t){this.h=e,this.g=t,this.l=fn,this.m=yn,this.defaultValue=void 0}}function Rs(e,t){return new As(e,t)}function _s(e,t){return(n,r)=>{if(Qn.length){const e=Qn.pop();e.o(r),Un(e.g,n,r),n=e}else n=new class{constructor(e,t){if(jn.length){const n=jn.pop();Un(n,e,t),e=n}else e=new class{constructor(e,t){this.h=null,this.m=!1,this.g=this.l=this.j=0,Un(this,e,t)}clear(){this.h=null,this.m=!1,this.g=this.l=this.j=0,this.ca=!1}}(e,t);this.g=e,this.l=this.g.g,this.h=this.m=-1,this.o(t)}o({ha:e=!1}={}){this.ha=e}}(n,r);try{const r=new e,a=r.u;Hr(t)(a,n);var s=r}finally{n.g.clear(),n.m=-1,n.h=-1,Qn.length<100&&Qn.push(n)}return s}}function Ms(e){return function(){vt(this);const t=new class{constructor(){this.l=[],this.h=0,this.g=new class{constructor(){this.g=[]}length(){return this.g.length}end(){const e=this.g;return this.g=[],e}}}};Yr(this.u,t,Br(Fr,qr,Kr,e)),fr(t,t.g.end());const n=new Uint8Array(t.h),r=t.l,s=r.length;let a=0;for(let e=0;e<s;e++){const t=r[e];n.set(t,a),a+=t.length}return t.l=[n],n}}var Fs=class extends nr{constructor(e){super(e)}},Ds=[0,Is,Qr(function(e,t,n){return 2===e.h&&(ts(t,n,(e=Jn(e))===O()?void 0:e),!0)},function(e,t,n){if(null!=t){if(t instanceof nr){const r=t.Ra;return void(r&&(t=r(t),null!=t&&br(e,n,Fn(t).buffer)))}if(Array.isArray(t))return}us(e,t,n)},Er)];let Os,Ls=globalThis.trustedTypes;function zs(e){void 0===Os&&(Os=function(){let e=null;if(!Ls)return e;try{const t=e=>e;e=Ls.createPolicy("goog#html",{createHTML:t,createScript:t,createScriptURL:t})}catch(e){}return e}());var t=Os;return new class{constructor(e){this.g=e}toString(){return this.g+""}}(t?t.createScriptURL(e):e)}function Ps(e,...t){if(0===t.length)return zs(e[0]);let n=e[0];for(let r=0;r<t.length;r++)n+=encodeURIComponent(t[r])+e[r+1];return zs(n)}var Bs=[0,ys,$s,ws,-1,bs,$s,-1],Vs=class extends nr{constructor(){super()}},Us=[0,ws,Ss,ws,$s,-1,es(function(e,t,n){return(0===e.h||2===e.h)&&(t=Jt(t,te(t),n,2,!1),2==e.h?Zn(e,Vn,t):t.push(Ln(e.g)),!0)},function(e,t,n){if(null!=(t=Zr(Xe,t))&&t.length){n=gr(e,n);for(let n=0;n<t.length;n++)dr(e.g,t[n]);yr(e,n)}},Cr),Ss,-1,[0,ws,-1],$s,ws,-1],Ws=[0,Ss,-2],Gs=class extends nr{constructor(){super()}},Hs=[0],js=[0,ys,ws,1,ws,-3],qs=class extends nr{constructor(e){super(e,2)}},Ks={};Ks[336783863]=[0,Ss,ws,-1,ys,[0,[1,2,3,4,5,6,7],Ts,Hs,Ts,Us,Ts,Ws,Ts,js,Ts,Bs,Ts,[0,Ss,-2],Ts,[0,Ss,$s]],[0,Ss],ws,[0,[1,3],[2,4],Ts,[0,bs],-1,Ts,[0,ks],-1,Ns,[0,Ss,-1]],Ss];var Xs=[0,ms,-1,vs,-3,ms,bs,Is,xs,ms,-1,vs,xs,vs,-2,Is];function Ys(e,t){on(e,2,nt(t),"")}function Js(e,t){An(e,3,t)}function Zs(e,t){An(e,4,t)}var Qs=class extends nr{constructor(e){super(e,500)}o(e){return yn(this,0,7,e)}},ea=[-1,{}],ta=[0,Ss,1,ea],na=[0,Ss,ks,ea];function ra(e,t){vn(e,1,Qs,t)}function sa(e,t){An(e,10,t)}function aa(e,t){An(e,15,t)}var ia=class extends nr{constructor(e){super(e,500)}o(e){return yn(this,0,1001,e)}},oa=[-500,Ns,[-500,Is,-1,ks,-3,[-2,Ks,ws],Ns,Ds,xs,-1,ta,na,Ns,[0,Is,vs],Is,Xs,xs,ks,987,ks],4,Ns,[-500,Ss,-1,[-1,{}],998,Ss],Ns,[-500,Ss,ks,-1,[-2,{},ws],997,ks,-1],xs,Ns,[-500,Ss,ks,ea,998,ks],ks,xs,ta,na,Ns,[0,Is,-1,ea],ks,-2,Xs,Is,-1,vs,979,ea,Ns,Ds];ia.prototype.g=Ms(oa);var ua=_s(ia,oa),la=class extends nr{constructor(e){super(e)}},ca=class extends nr{constructor(e){super(e)}g(){return gn(this,la,1)}},ha=[0,Ns,[0,ys,hs,Ss,-1]],da=_s(ca,ha),pa=class extends nr{constructor(e){super(e)}},fa=class extends nr{constructor(e){super(e)}},ma=class extends nr{constructor(e){super(e)}h(){return fn(this,pa,2)}g(){return gn(this,fa,5)}},ga=_s(class extends nr{constructor(e){super(e)}},[0,ks,bs,ps,[0,$s,[0,ys,-3],[0,hs,-3],[0,ys,-1,[0,Ns,[0,ys,-2]]],Ns,[0,hs,-1,Ss,hs]],Ss,-1,fs,Ns,[0,ys,hs],ks,fs]),ya=class extends nr{constructor(e){super(e)}},ba=_s(class extends nr{constructor(e){super(e)}},[0,Ns,[0,hs,-4]]),xa=class extends nr{constructor(e){super(e)}},wa=_s(class extends nr{constructor(e){super(e)}},[0,Ns,[0,hs,-4]]),va=class extends nr{constructor(e){super(e)}},ka=[0,ys,-1,ps,$s],Ia=class extends nr{constructor(){super()}};Ia.prototype.g=Ms([0,hs,-4,fs]);var Sa=class extends nr{constructor(e){super(e)}},Na=_s(class extends nr{constructor(e){super(e)}},[0,Ns,[0,1,ys,Ss,ha],fs]),Ta=class extends nr{constructor(e){super(e)}},Ea=class extends nr{constructor(e){super(e)}qa(){const e=Qt(this);return null==e?O():e}},Ca=class extends nr{constructor(e){super(e)}},$a=[1,2],Aa=_s(class extends nr{constructor(e){super(e)}},[0,Ns,[0,$a,Ts,[0,ps],Ts,[0,Es],ys,Ss],fs]),Ra=class extends nr{constructor(e){super(e)}},_a=[0,Ss,ys,hs,ks,-1],Ma=class extends nr{constructor(e){super(e)}},Fa=[0,ws,-1],Da=class extends nr{constructor(e){super(e)}},Oa=[1,2,3,4,5],La=class extends nr{constructor(e){super(e)}g(){return null!=Qt(this)}h(){return null!=rt(jt(this,2))}},za=class extends nr{constructor(e){super(e)}g(){return je(jt(this,2))??!1}},Pa=[0,Es,Ss,[0,ys,fs,-1],[0,gs,fs]],Ba=[0,Pa,ws,[0,Oa,Ts,js,Ts,Us,Ts,Bs,Ts,Hs,Ts,Ws],$s],Va=class extends nr{constructor(e){super(e)}},Ua=[0,Ba,hs,-1,ys],Wa=Rs(502141897,Va);Ks[502141897]=Ua;var Ga=_s(class extends nr{constructor(e){super(e)}},[0,[0,$s,-1,ds,Cs],ka]),Ha=class extends nr{constructor(e){super(e)}},ja=class extends nr{constructor(e){super(e)}},qa=[0,Ba,hs,[0,Ba],ws],Ka=[0,Ba,Ua,qa,hs,[0,[0,Pa]]],Xa=Rs(508968150,ja);Ks[508968150]=Ka,Ks[508968149]=qa;var Ya=class extends nr{constructor(e){super(e)}},Ja=Rs(513916220,Ya);Ks[513916220]=[0,Ba,Ka,ys];var Za=class extends nr{constructor(e){super(e)}h(){return fn(this,Ra,2)}g(){Xt(this,2)}},Qa=[0,Ba,_a];Ks[478825465]=Qa;var ei=class extends nr{constructor(e){super(e)}},ti=class extends nr{constructor(e){super(e)}},ni=class extends nr{constructor(e){super(e)}},ri=class extends nr{constructor(e){super(e)}},si=class extends nr{constructor(e){super(e)}},ai=[0,Ba,[0,Ba],Qa,-1],ii=[0,Ba,hs,ys],oi=[0,Ba,hs],ui=[0,Ba,ii,oi,hs],li=Rs(479097054,si);Ks[479097054]=[0,Ba,ui,ai],Ks[463370452]=ai,Ks[464864288]=ii;var ci=Rs(462713202,ri);Ks[462713202]=ui,Ks[474472470]=oi;var hi=class extends nr{constructor(e){super(e)}},di=class extends nr{constructor(e){super(e)}},pi=class extends nr{constructor(e){super(e)}},fi=class extends nr{constructor(){super()}},mi=[0,Ba,hs,-1,ys],gi=[0,Ba,hs,ws];fi.prototype.g=Ms([0,Ba,oi,[0,Ba],Ua,qa,mi,gi]);var yi=class extends nr{constructor(e){super(e)}},bi=Rs(456383383,yi);Ks[456383383]=[0,Ba,_a];var xi=class extends nr{constructor(e){super(e)}},wi=Rs(476348187,xi);Ks[476348187]=[0,Ba,Fa];var vi=class extends nr{constructor(e){super(e)}},ki=class extends nr{constructor(e){super(e)}},Ii=[0,$s,-1],Si=Rs(458105876,class extends nr{constructor(e){super(e)}g(){var e=this.u;const t=te(e),n=2&t;return e=function(e,t,n){var r=ki;const s=2&t;let a=!1;if(null==n){if(s)return Ot();n=[]}else if(n.constructor===Rt){if(!(2&n.M)||s)return n;n=n.Y()}else Array.isArray(n)?a=!!(2&ee(n)):n=[];if(s){if(!n.length)return Ot();a||(a=!0,re(n))}else a&&(a=!1,n=an(n));return a||(64&ee(n)?Q(n,32):32&t&&Z(n,32)),Yt(e,t,2,r=new Rt(n,r,at,void 0)),r}(e,t,Kt(e,t,2)),!n&&ki&&(e.ta=!0),e}});Ks[458105876]=[0,Ii,ns,[!0,fs,[0,Ss,-1,ks]]];var Ni=class extends nr{constructor(e){super(e)}},Ti=Rs(458105758,Ni);Ks[458105758]=[0,Ba,Ss,Ii];var Ei=class extends nr{constructor(e){super(e)}},Ci=Rs(443442058,Ei);Ks[443442058]=[0,Ba,Ss,ys,hs,ks,-1],Ks[514774813]=mi;var $i=class extends nr{constructor(e){super(e)}},Ai=Rs(516587230,$i);function Ri(e,t){return t=t?t.clone():new Ra,void 0!==e.displayNamesLocale?Xt(t,1,nt(e.displayNamesLocale)):void 0===e.displayNamesLocale&&Xt(t,1),void 0!==e.maxResults?En(t,2,e.maxResults):"maxResults"in e&&Xt(t,2),void 0!==e.scoreThreshold?Cn(t,3,e.scoreThreshold):"scoreThreshold"in e&&Xt(t,3),void 0!==e.categoryAllowlist?$n(t,4,e.categoryAllowlist):"categoryAllowlist"in e&&Xt(t,4),void 0!==e.categoryDenylist?$n(t,5,e.categoryDenylist):"categoryDenylist"in e&&Xt(t,5),t}function _i(e,t=-1,n=""){return{categories:e.map(e=>({index:kn(In(e,1),0)??-1,score:Sn(e,2)??0,categoryName:Nn(e,3)??"",displayName:Nn(e,4)??""})),headIndex:t,headName:n}}function Mi(e){var t=tn(e,3,He,en()),n=tn(e,2,Xe,en()),r=tn(e,1,rt,en()),s=tn(e,9,rt,en());const a={categories:[],keypoints:[]};for(let e=0;e<t.length;e++)a.categories.push({score:t[e],index:n[e]??-1,categoryName:r[e]??"",displayName:s[e]??""});if((t=fn(e,ma,4)?.h())&&(a.boundingBox={originX:In(t,1)??0,originY:In(t,2)??0,width:In(t,3)??0,height:In(t,4)??0,angle:0}),fn(e,ma,4)?.g().length)for(const t of fn(e,ma,4).g())a.keypoints.push({x:Zt(t,1)??0,y:Zt(t,2)??0,score:Zt(t,4)??0,label:rt(jt(t,3))??""});return a}function Fi(e){const t=[];for(const n of gn(e,xa,1))t.push({x:Sn(n,1)??0,y:Sn(n,2)??0,z:Sn(n,3)??0,visibility:Sn(n,4)??0});return t}function Di(e){const t=[];for(const n of gn(e,ya,1))t.push({x:Sn(n,1)??0,y:Sn(n,2)??0,z:Sn(n,3)??0,visibility:Sn(n,4)??0});return t}function Oi(e){return Array.from(e,e=>e>127?e-256:e)}function Li(e,t){if(e.length!==t.length)throw Error(`Cannot compute cosine similarity between embeddings of different sizes (${e.length} vs. ${t.length}).`);let n=0,r=0,s=0;for(let a=0;a<e.length;a++)n+=e[a]*t[a],r+=e[a]*e[a],s+=t[a]*t[a];if(r<=0||s<=0)throw Error("Cannot compute cosine similarity on embedding with 0 norm.");return n/Math.sqrt(r*s)}let zi;Ks[516587230]=[0,Ba,mi,gi,hs],Ks[518928384]=gi;const Pi=new Uint8Array([0,97,115,109,1,0,0,0,1,5,1,96,0,1,123,3,2,1,0,10,10,1,8,0,65,0,253,15,253,98,11]);async function Bi(){if(void 0===zi)try{await WebAssembly.instantiate(Pi),zi=!0}catch{zi=!1}return zi}async function Vi(e,t=Ps``){const n=await Bi()?"wasm_internal":"wasm_nosimd_internal";return{wasmLoaderPath:`${t}/${e}_${n}.js`,wasmBinaryPath:`${t}/${e}_${n}.wasm`}}var Ui=class{};function Wi(){var e=navigator;return!("undefined"==typeof OffscreenCanvas||function(e=navigator){return(e=e.userAgent).includes("Safari")&&!e.includes("Chrome")}(e)&&!((e=e.userAgent.match(/Version\\/([\\d]+).*Safari/))&&e.length>=1&&Number(e[1])>=17))}async function Gi(e){if("function"!=typeof importScripts){const t=document.createElement("script");return t.src=e.toString(),t.crossOrigin="anonymous",new Promise((e,n)=>{t.addEventListener("load",()=>{e()},!1),t.addEventListener("error",e=>{n(e)},!1),document.body.appendChild(t)})}importScripts(e.toString())}function Hi(e){return void 0!==e.videoWidth?[e.videoWidth,e.videoHeight]:void 0!==e.naturalWidth?[e.naturalWidth,e.naturalHeight]:void 0!==e.displayWidth?[e.displayWidth,e.displayHeight]:[e.width,e.height]}function ji(e,t,n){e.m||console.error("No wasm multistream support detected: ensure dependency inclusion of :gl_graph_runner_internal_multi_input target"),n(t=e.i.stringToNewUTF8(t)),e.i._free(t)}function qi(e,t,n){if(!e.i.canvas)throw Error("No OpenGL canvas configured.");if(n?e.i._bindTextureToStream(n):e.i._bindTextureToCanvas(),!(n=e.i.canvas.getContext("webgl2")||e.i.canvas.getContext("webgl")))throw Error("Failed to obtain WebGL context from the provided canvas. `getContext()` should only be invoked with `webgl` or `webgl2`.");e.i.gpuOriginForWebTexturesIsBottomLeft&&n.pixelStorei(n.UNPACK_FLIP_Y_WEBGL,!0),n.texImage2D(n.TEXTURE_2D,0,n.RGBA,n.RGBA,n.UNSIGNED_BYTE,t),e.i.gpuOriginForWebTexturesIsBottomLeft&&n.pixelStorei(n.UNPACK_FLIP_Y_WEBGL,!1);const[r,s]=Hi(t);return!e.l||r===e.i.canvas.width&&s===e.i.canvas.height||(e.i.canvas.width=r,e.i.canvas.height=s),[r,s]}function Ki(e,t,n){e.m||console.error("No wasm multistream support detected: ensure dependency inclusion of :gl_graph_runner_internal_multi_input target");const r=new Uint32Array(t.length);for(let n=0;n<t.length;n++)r[n]=e.i.stringToNewUTF8(t[n]);t=e.i._malloc(4*r.length),e.i.HEAPU32.set(r,t>>2),n(t);for(const t of r)e.i._free(t);e.i._free(t)}function Xi(e,t,n){e.i.simpleListeners=e.i.simpleListeners||{},e.i.simpleListeners[t]=n}function Yi(e,t,n){let r=[];e.i.simpleListeners=e.i.simpleListeners||{},e.i.simpleListeners[t]=(e,t,s)=>{t?(n(r,s),r=[]):r.push(e)}}function Ji(e,t){const n=fn(e.baseOptions,La,1)||new La;"string"==typeof t?(Xt(n,2,nt(t)),Xt(n,1)):t instanceof Uint8Array&&(Xt(n,1,he(t,!1,!1)),Xt(n,2)),yn(e.baseOptions,0,1,n)}function Zi(e){try{const t=e.H.length;if(1===t)throw Error(e.H[0].message);if(t>1)throw Error("Encountered multiple errors: "+e.H.map(e=>e.message).join(", "))}finally{e.H=[]}}function Qi(e,t){e.B=Math.max(e.B,t)}function eo(e,t){e.A=new Qs,Ys(e.A,"PassThroughCalculator"),Js(e.A,"free_memory"),Zs(e.A,"free_memory_unused_out"),sa(t,"free_memory"),ra(t,e.A)}function to(e,t){Js(e.A,t),Zs(e.A,t+"_unused_out")}function no(e){e.g.addBoolToStream(!0,"free_memory",e.B)}Ui.forVisionTasks=function(e){return Vi("vision",e)},Ui.forTextTasks=function(e){return Vi("text",e)},Ui.forGenAiExperimentalTasks=function(e){return Vi("genai_experimental",e)},Ui.forGenAiTasks=function(e){return Vi("genai",e)},Ui.forAudioTasks=function(e){return Vi("audio",e)},Ui.isSimdSupported=function(){return Bi()};var ro=class{constructor(e){this.g=e,this.H=[],this.B=0,this.g.setAutoRenderToScreen(!1)}l(e,t=!0){if(t){const t=e.baseOptions||{};if(e.baseOptions?.modelAssetBuffer&&e.baseOptions?.modelAssetPath)throw Error("Cannot set both baseOptions.modelAssetPath and baseOptions.modelAssetBuffer");if(!(fn(this.baseOptions,La,1)?.g()||fn(this.baseOptions,La,1)?.h()||e.baseOptions?.modelAssetBuffer||e.baseOptions?.modelAssetPath))throw Error("Either baseOptions.modelAssetPath or baseOptions.modelAssetBuffer must be set");if(function(e,t){let n=fn(e.baseOptions,Da,3);if(!n){var r=n=new Da,s=new Gs;bn(r,4,Oa,s)}"delegate"in t&&("GPU"===t.delegate?(t=n,r=new Vs,bn(t,2,Oa,r)):(t=n,r=new Gs,bn(t,4,Oa,r))),yn(e.baseOptions,0,3,n)}(this,t),t.modelAssetPath)return fetch(t.modelAssetPath.toString()).then(e=>{if(e.ok)return e.arrayBuffer();throw Error(`Failed to fetch model: ${t.modelAssetPath} (${e.status})`)}).then(e=>{try{this.g.i.FS_unlink("/model.dat")}catch{}this.g.i.FS_createDataFile("/","model.dat",new Uint8Array(e),!0,!1,!1),Ji(this,"/model.dat"),this.m(),this.J()});if(t.modelAssetBuffer instanceof Uint8Array)Ji(this,t.modelAssetBuffer);else if(t.modelAssetBuffer)return async function(e){const t=[];for(var n=0;;){const{done:r,value:s}=await e.read();if(r)break;t.push(s),n+=s.length}if(0===t.length)return new Uint8Array(0);if(1===t.length)return t[0];e=new Uint8Array(n),n=0;for(const r of t)e.set(r,n),n+=r.length;return e}(t.modelAssetBuffer).then(e=>{Ji(this,e),this.m(),this.J()})}return this.m(),this.J(),Promise.resolve()}J(){}ea(){let e;if(this.g.ea(t=>{e=ua(t)}),!e)throw Error("Failed to retrieve CalculatorGraphConfig");return e}setGraph(e,t){this.g.attachErrorListener((e,t)=>{this.H.push(Error(t))}),this.g.Ma(),this.g.setGraph(e,t),this.A=void 0,Zi(this)}finishProcessing(){this.g.finishProcessing(),Zi(this)}close(){this.A=void 0,this.g.closeGraph()}};function so(e,t){if(!e)throw Error(`Unable to obtain required WebGL resource: ${t}`);return e}ro.prototype.close=ro.prototype.close,function(e,t){e=e.split(".");var r,s=n;e[0]in s||void 0===s.execScript||s.execScript("var "+e[0]);for(;e.length&&(r=e.shift());)e.length||void 0===t?s=s[r]&&s[r]!==Object.prototype[r]?s[r]:s[r]={}:s[r]=t}("TaskRunner",ro);class ao{constructor(e,t,n,r){this.g=e,this.h=t,this.m=n,this.l=r}bind(){this.g.bindVertexArray(this.h)}close(){this.g.deleteVertexArray(this.h),this.g.deleteBuffer(this.m),this.g.deleteBuffer(this.l)}}function io(e,t,n){const r=e.g;if(n=so(r.createShader(n),"Failed to create WebGL shader"),r.shaderSource(n,t),r.compileShader(n),!r.getShaderParameter(n,r.COMPILE_STATUS))throw Error(`Could not compile WebGL shader: ${r.getShaderInfoLog(n)}`);return r.attachShader(e.h,n),n}function oo(e,t){const n=e.g,r=so(n.createVertexArray(),"Failed to create vertex array");n.bindVertexArray(r);const s=so(n.createBuffer(),"Failed to create buffer");n.bindBuffer(n.ARRAY_BUFFER,s),n.enableVertexAttribArray(e.P),n.vertexAttribPointer(e.P,2,n.FLOAT,!1,0,0),n.bufferData(n.ARRAY_BUFFER,new Float32Array([-1,-1,-1,1,1,1,1,-1]),n.STATIC_DRAW);const a=so(n.createBuffer(),"Failed to create buffer");return n.bindBuffer(n.ARRAY_BUFFER,a),n.enableVertexAttribArray(e.J),n.vertexAttribPointer(e.J,2,n.FLOAT,!1,0,0),n.bufferData(n.ARRAY_BUFFER,new Float32Array(t?[0,1,0,0,1,0,1,1]:[0,0,0,1,1,1,1,0]),n.STATIC_DRAW),n.bindBuffer(n.ARRAY_BUFFER,null),n.bindVertexArray(null),new ao(n,r,s,a)}function uo(e,t){if(e.g){if(t!==e.g)throw Error("Cannot change GL context once initialized")}else e.g=t}function lo(e,t,n,r){return uo(e,t),e.h||(e.m(),e.C()),n?(e.s||(e.s=oo(e,!0)),n=e.s):(e.v||(e.v=oo(e,!1)),n=e.v),t.useProgram(e.h),n.bind(),e.l(),e=r(),n.g.bindVertexArray(null),e}function co(e,t,n){return uo(e,t),e=so(t.createTexture(),"Failed to create texture"),t.bindTexture(t.TEXTURE_2D,e),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_WRAP_S,t.CLAMP_TO_EDGE),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_WRAP_T,t.CLAMP_TO_EDGE),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_MIN_FILTER,n??t.LINEAR),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_MAG_FILTER,n??t.LINEAR),t.bindTexture(t.TEXTURE_2D,null),e}function ho(e,t,n){uo(e,t),e.A||(e.A=so(t.createFramebuffer(),"Failed to create framebuffe.")),t.bindFramebuffer(t.FRAMEBUFFER,e.A),t.framebufferTexture2D(t.FRAMEBUFFER,t.COLOR_ATTACHMENT0,t.TEXTURE_2D,n,0)}function po(e){e.g?.bindFramebuffer(e.g.FRAMEBUFFER,null)}var fo=class{H(){return"\\n  precision mediump float;\\n  varying vec2 vTex;\\n  uniform sampler2D inputTexture;\\n  void main() {\\n    gl_FragColor = texture2D(inputTexture, vTex);\\n  }\\n "}m(){const e=this.g;if(this.h=so(e.createProgram(),"Failed to create WebGL program"),this.ba=io(this,"\\n  attribute vec2 aVertex;\\n  attribute vec2 aTex;\\n  varying vec2 vTex;\\n  void main(void) {\\n    gl_Position = vec4(aVertex, 0.0, 1.0);\\n    vTex = aTex;\\n  }",e.VERTEX_SHADER),this.aa=io(this,this.H(),e.FRAGMENT_SHADER),e.linkProgram(this.h),!e.getProgramParameter(this.h,e.LINK_STATUS))throw Error(`Error during program linking: ${e.getProgramInfoLog(this.h)}`);this.P=e.getAttribLocation(this.h,"aVertex"),this.J=e.getAttribLocation(this.h,"aTex")}C(){}l(){}close(){if(this.h){const e=this.g;e.deleteProgram(this.h),e.deleteShader(this.ba),e.deleteShader(this.aa)}this.A&&this.g.deleteFramebuffer(this.A),this.v&&this.v.close(),this.s&&this.s.close()}},mo=class extends fo{H(){return"\\n  precision mediump float;\\n  uniform sampler2D backgroundTexture;\\n  uniform sampler2D maskTexture;\\n  uniform sampler2D colorMappingTexture;\\n  varying vec2 vTex;\\n  void main() {\\n    vec4 backgroundColor = texture2D(backgroundTexture, vTex);\\n    float category = texture2D(maskTexture, vTex).r;\\n    vec4 categoryColor = texture2D(colorMappingTexture, vec2(category, 0.0));\\n    gl_FragColor = mix(backgroundColor, categoryColor, categoryColor.a);\\n  }\\n "}C(){const e=this.g;e.activeTexture(e.TEXTURE1),this.B=co(this,e,e.LINEAR),e.activeTexture(e.TEXTURE2),this.j=co(this,e,e.NEAREST)}m(){super.m();const e=this.g;this.L=so(e.getUniformLocation(this.h,"backgroundTexture"),"Uniform location"),this.U=so(e.getUniformLocation(this.h,"colorMappingTexture"),"Uniform location"),this.K=so(e.getUniformLocation(this.h,"maskTexture"),"Uniform location")}l(){super.l();const e=this.g;e.uniform1i(this.K,0),e.uniform1i(this.L,1),e.uniform1i(this.U,2)}close(){this.B&&this.g.deleteTexture(this.B),this.j&&this.g.deleteTexture(this.j),super.close()}},go=class extends fo{H(){return"\\n  precision mediump float;\\n  uniform sampler2D maskTexture;\\n  uniform sampler2D defaultTexture;\\n  uniform sampler2D overlayTexture;\\n  varying vec2 vTex;\\n  void main() {\\n    float confidence = texture2D(maskTexture, vTex).r;\\n    vec4 defaultColor = texture2D(defaultTexture, vTex);\\n    vec4 overlayColor = texture2D(overlayTexture, vTex);\\n    // Apply the alpha from the overlay and merge in the default color\\n    overlayColor = mix(defaultColor, overlayColor, overlayColor.a);\\n    gl_FragColor = mix(defaultColor, overlayColor, confidence);\\n  }\\n "}C(){const e=this.g;e.activeTexture(e.TEXTURE1),this.j=co(this,e),e.activeTexture(e.TEXTURE2),this.B=co(this,e)}m(){super.m();const e=this.g;this.K=so(e.getUniformLocation(this.h,"defaultTexture"),"Uniform location"),this.L=so(e.getUniformLocation(this.h,"overlayTexture"),"Uniform location"),this.I=so(e.getUniformLocation(this.h,"maskTexture"),"Uniform location")}l(){super.l();const e=this.g;e.uniform1i(this.I,0),e.uniform1i(this.K,1),e.uniform1i(this.L,2)}close(){this.j&&this.g.deleteTexture(this.j),this.B&&this.g.deleteTexture(this.B),super.close()}};function yo(e,t){switch(t){case 0:return e.g.find(e=>e instanceof Uint8Array);case 1:return e.g.find(e=>e instanceof Float32Array);case 2:return e.g.find(e=>"undefined"!=typeof WebGLTexture&&e instanceof WebGLTexture);default:throw Error(`Type is not supported: ${t}`)}}function bo(e){var t=yo(e,1);if(!t){if(t=yo(e,0))t=new Float32Array(t).map(e=>e/255);else{t=new Float32Array(e.width*e.height);const r=wo(e);var n=ko(e);if(ho(n,r,xo(e)),"iPad Simulator;iPhone Simulator;iPod Simulator;iPad;iPhone;iPod".split(";").includes(navigator.platform)||navigator.userAgent.includes("Mac")&&"document"in self&&"ontouchend"in self.document){n=new Float32Array(e.width*e.height*4),r.readPixels(0,0,e.width,e.height,r.RGBA,r.FLOAT,n);for(let e=0,r=0;e<t.length;++e,r+=4)t[e]=n[r]}else r.readPixels(0,0,e.width,e.height,r.RED,r.FLOAT,t)}e.g.push(t)}return t}function xo(e){let t=yo(e,2);if(!t){const n=wo(e);t=Io(e);const r=bo(e),s=vo(e);n.texImage2D(n.TEXTURE_2D,0,s,e.width,e.height,0,n.RED,n.FLOAT,r),So(e)}return t}function wo(e){if(!e.canvas)throw Error("Conversion to different image formats require that a canvas is passed when initializing the image.");return e.h||(e.h=so(e.canvas.getContext("webgl2"),"You cannot use a canvas that is already bound to a different type of rendering context.")),e.h}function vo(e){if(e=wo(e),!No)if(e.getExtension("EXT_color_buffer_float")&&e.getExtension("OES_texture_float_linear")&&e.getExtension("EXT_float_blend"))No=e.R32F;else{if(!e.getExtension("EXT_color_buffer_half_float"))throw Error("GPU does not fully support 4-channel float32 or float16 formats");No=e.R16F}return No}function ko(e){return e.l||(e.l=new fo),e.l}function Io(e){const t=wo(e);t.viewport(0,0,e.width,e.height),t.activeTexture(t.TEXTURE0);let n=yo(e,2);return n||(n=co(ko(e),t,e.m?t.LINEAR:t.NEAREST),e.g.push(n),e.j=!0),t.bindTexture(t.TEXTURE_2D,n),n}function So(e){e.h.bindTexture(e.h.TEXTURE_2D,null)}var No,To=class{constructor(e,t,n,r,s,a,i){this.g=e,this.m=t,this.j=n,this.canvas=r,this.l=s,this.width=a,this.height=i,this.j&&0===--Eo&&console.error("You seem to be creating MPMask instances without invoking .close(). This leaks resources.")}Ha(){return!!yo(this,0)}la(){return!!yo(this,1)}R(){return!!yo(this,2)}ka(){return(e=yo(this,0))||(e=bo(this),e=new Uint8Array(e.map(e=>255*e)),this.g.push(e)),e;var e}ja(){return bo(this)}N(){return xo(this)}clone(){const e=[];for(const t of this.g){let n;if(t instanceof Uint8Array)n=new Uint8Array(t);else if(t instanceof Float32Array)n=new Float32Array(t);else{if(!(t instanceof WebGLTexture))throw Error(`Type is not supported: ${t}`);{const e=wo(this),t=ko(this);e.activeTexture(e.TEXTURE1),n=co(t,e,this.m?e.LINEAR:e.NEAREST),e.bindTexture(e.TEXTURE_2D,n);const r=vo(this);e.texImage2D(e.TEXTURE_2D,0,r,this.width,this.height,0,e.RED,e.FLOAT,null),e.bindTexture(e.TEXTURE_2D,null),ho(t,e,n),lo(t,e,!1,()=>{Io(this),e.clearColor(0,0,0,0),e.clear(e.COLOR_BUFFER_BIT),e.drawArrays(e.TRIANGLE_FAN,0,4),So(this)}),po(t),So(this)}}e.push(n)}return new To(e,this.m,this.R(),this.canvas,this.l,this.width,this.height)}close(){this.j&&wo(this).deleteTexture(yo(this,2)),Eo=-1}};To.prototype.close=To.prototype.close,To.prototype.clone=To.prototype.clone,To.prototype.getAsWebGLTexture=To.prototype.N,To.prototype.getAsFloat32Array=To.prototype.ja,To.prototype.getAsUint8Array=To.prototype.ka,To.prototype.hasWebGLTexture=To.prototype.R,To.prototype.hasFloat32Array=To.prototype.la,To.prototype.hasUint8Array=To.prototype.Ha;var Eo=250;const Co={color:"white",lineWidth:4,radius:6};function $o(e){return{...Co,fillColor:(e=e||{}).color,...e}}function Ao(e,t){return e instanceof Function?e(t):e}function Ro(e,t,n){return Math.max(Math.min(t,n),Math.min(Math.max(t,n),e))}function _o(e){if(!e.l)throw Error("CPU rendering requested but CanvasRenderingContext2D not provided.");return e.l}function Mo(e){if(!e.j)throw Error("GPU rendering requested but WebGL2RenderingContext not provided.");return e.j}function Fo(e,t,n){if(t.R())n(t.N());else{const r=t.la()?t.ja():t.ka();e.m=e.m??new fo;const s=Mo(e);n((e=new To([r],t.m,!1,s.canvas,e.m,t.width,t.height)).N()),e.close()}}function Do(e,t,n,r){const s=function(e){return e.g||(e.g=new mo),e.g}(e),a=Mo(e),i=Array.isArray(n)?new ImageData(new Uint8ClampedArray(n),1,1):n;lo(s,a,!0,()=>{!function(e,t,n,r){const s=e.g;if(s.activeTexture(s.TEXTURE0),s.bindTexture(s.TEXTURE_2D,t),s.activeTexture(s.TEXTURE1),s.bindTexture(s.TEXTURE_2D,e.B),s.texImage2D(s.TEXTURE_2D,0,s.RGBA,s.RGBA,s.UNSIGNED_BYTE,n),e.I&&function(e,t){if(e!==t)return!1;e=e.entries(),t=t.entries();for(const[r,s]of e){e=r;const a=s;var n=t.next();if(n.done)return!1;const[i,o]=n.value;if(n=o,e!==i||a[0]!==n[0]||a[1]!==n[1]||a[2]!==n[2]||a[3]!==n[3])return!1}return!!t.next().done}(e.I,r))s.activeTexture(s.TEXTURE2),s.bindTexture(s.TEXTURE_2D,e.j);else{e.I=r;const t=Array(1024).fill(0);r.forEach((e,n)=>{if(4!==e.length)throw Error(`Color at index ${n} is not a four-channel value.`);t[4*n]=e[0],t[4*n+1]=e[1],t[4*n+2]=e[2],t[4*n+3]=e[3]}),s.activeTexture(s.TEXTURE2),s.bindTexture(s.TEXTURE_2D,e.j),s.texImage2D(s.TEXTURE_2D,0,s.RGBA,256,1,0,s.RGBA,s.UNSIGNED_BYTE,new Uint8Array(t))}}(s,t,i,r),a.clearColor(0,0,0,0),a.clear(a.COLOR_BUFFER_BIT),a.drawArrays(a.TRIANGLE_FAN,0,4);const e=s.g;e.activeTexture(e.TEXTURE0),e.bindTexture(e.TEXTURE_2D,null),e.activeTexture(e.TEXTURE1),e.bindTexture(e.TEXTURE_2D,null),e.activeTexture(e.TEXTURE2),e.bindTexture(e.TEXTURE_2D,null)})}function Oo(e,t,n,r){const s=Mo(e),a=function(e){return e.h||(e.h=new go),e.h}(e),i=Array.isArray(n)?new ImageData(new Uint8ClampedArray(n),1,1):n,o=Array.isArray(r)?new ImageData(new Uint8ClampedArray(r),1,1):r;lo(a,s,!0,()=>{var e=a.g;e.activeTexture(e.TEXTURE0),e.bindTexture(e.TEXTURE_2D,t),e.activeTexture(e.TEXTURE1),e.bindTexture(e.TEXTURE_2D,a.j),e.texImage2D(e.TEXTURE_2D,0,e.RGBA,e.RGBA,e.UNSIGNED_BYTE,i),e.activeTexture(e.TEXTURE2),e.bindTexture(e.TEXTURE_2D,a.B),e.texImage2D(e.TEXTURE_2D,0,e.RGBA,e.RGBA,e.UNSIGNED_BYTE,o),s.clearColor(0,0,0,0),s.clear(s.COLOR_BUFFER_BIT),s.drawArrays(s.TRIANGLE_FAN,0,4),s.bindTexture(s.TEXTURE_2D,null),(e=a.g).activeTexture(e.TEXTURE0),e.bindTexture(e.TEXTURE_2D,null),e.activeTexture(e.TEXTURE1),e.bindTexture(e.TEXTURE_2D,null),e.activeTexture(e.TEXTURE2),e.bindTexture(e.TEXTURE_2D,null)})}var Lo=class{constructor(e,t){e instanceof CanvasRenderingContext2D||e instanceof OffscreenCanvasRenderingContext2D?(this.l=e,this.j=t):this.j=e}Aa(e,t){if(e){var n=_o(this);t=$o(t),n.save();var r=n.canvas,s=0;for(const a of e)n.fillStyle=Ao(t.fillColor,{index:s,from:a}),n.strokeStyle=Ao(t.color,{index:s,from:a}),n.lineWidth=Ao(t.lineWidth,{index:s,from:a}),(e=new Path2D).arc(a.x*r.width,a.y*r.height,Ao(t.radius,{index:s,from:a}),0,2*Math.PI),n.fill(e),n.stroke(e),++s;n.restore()}}za(e,t,n){if(e&&t){var r=_o(this);n=$o(n),r.save();var s=r.canvas,a=0;for(const i of t){r.beginPath(),t=e[i.start];const o=e[i.end];t&&o&&(r.strokeStyle=Ao(n.color,{index:a,from:t,to:o}),r.lineWidth=Ao(n.lineWidth,{index:a,from:t,to:o}),r.moveTo(t.x*s.width,t.y*s.height),r.lineTo(o.x*s.width,o.y*s.height)),++a,r.stroke()}r.restore()}}wa(e,t){const n=_o(this);t=$o(t),n.save(),n.beginPath(),n.lineWidth=Ao(t.lineWidth,{}),n.strokeStyle=Ao(t.color,{}),n.fillStyle=Ao(t.fillColor,{}),n.moveTo(e.originX,e.originY),n.lineTo(e.originX+e.width,e.originY),n.lineTo(e.originX+e.width,e.originY+e.height),n.lineTo(e.originX,e.originY+e.height),n.lineTo(e.originX,e.originY),n.stroke(),n.fill(),n.restore()}xa(e,t,n=[0,0,0,255]){this.l?function(e,t,n,r){const s=Mo(e);Fo(e,t,t=>{Do(e,t,n,r),(t=_o(e)).drawImage(s.canvas,0,0,t.canvas.width,t.canvas.height)})}(this,e,n,t):Do(this,e.N(),n,t)}ya(e,t,n){this.l?function(e,t,n,r){const s=Mo(e);Fo(e,t,t=>{Oo(e,t,n,r),(t=_o(e)).drawImage(s.canvas,0,0,t.canvas.width,t.canvas.height)})}(this,e,t,n):Oo(this,e.N(),t,n)}close(){this.g?.close(),this.g=void 0,this.h?.close(),this.h=void 0,this.m?.close(),this.m=void 0}};function zo(e,t){switch(t){case 0:return e.g.find(e=>e instanceof ImageData);case 1:return e.g.find(e=>"undefined"!=typeof ImageBitmap&&e instanceof ImageBitmap);case 2:return e.g.find(e=>"undefined"!=typeof WebGLTexture&&e instanceof WebGLTexture);default:throw Error(`Type is not supported: ${t}`)}}function Po(e){var t=zo(e,0);if(!t){t=Vo(e);const n=Uo(e),r=new Uint8Array(e.width*e.height*4);ho(n,t,Bo(e)),t.readPixels(0,0,e.width,e.height,t.RGBA,t.UNSIGNED_BYTE,r),po(n),t=new ImageData(new Uint8ClampedArray(r.buffer),e.width,e.height),e.g.push(t)}return t}function Bo(e){let t=zo(e,2);if(!t){const n=Vo(e);t=Wo(e);const r=zo(e,1)||Po(e);n.texImage2D(n.TEXTURE_2D,0,n.RGBA,n.RGBA,n.UNSIGNED_BYTE,r),Go(e)}return t}function Vo(e){if(!e.canvas)throw Error("Conversion to different image formats require that a canvas is passed when iniitializing the image.");return e.h||(e.h=so(e.canvas.getContext("webgl2"),"You cannot use a canvas that is already bound to a different type of rendering context.")),e.h}function Uo(e){return e.l||(e.l=new fo),e.l}function Wo(e){const t=Vo(e);t.viewport(0,0,e.width,e.height),t.activeTexture(t.TEXTURE0);let n=zo(e,2);return n||(n=co(Uo(e),t),e.g.push(n),e.m=!0),t.bindTexture(t.TEXTURE_2D,n),n}function Go(e){e.h.bindTexture(e.h.TEXTURE_2D,null)}function Ho(e){const t=Vo(e);return lo(Uo(e),t,!0,()=>function(e,t){const n=e.canvas;if(n.width===e.width&&n.height===e.height)return t();const r=n.width,s=n.height;return n.width=e.width,n.height=e.height,e=t(),n.width=r,n.height=s,e}(e,()=>{if(t.bindFramebuffer(t.FRAMEBUFFER,null),t.clearColor(0,0,0,0),t.clear(t.COLOR_BUFFER_BIT),t.drawArrays(t.TRIANGLE_FAN,0,4),!(e.canvas instanceof OffscreenCanvas))throw Error("Conversion to ImageBitmap requires that the MediaPipe Tasks is initialized with an OffscreenCanvas");return e.canvas.transferToImageBitmap()}))}Lo.prototype.close=Lo.prototype.close,Lo.prototype.drawConfidenceMask=Lo.prototype.ya,Lo.prototype.drawCategoryMask=Lo.prototype.xa,Lo.prototype.drawBoundingBox=Lo.prototype.wa,Lo.prototype.drawConnectors=Lo.prototype.za,Lo.prototype.drawLandmarks=Lo.prototype.Aa,Lo.lerp=function(e,t,n,r,s){return Ro(r*(1-(e-t)/(n-t))+s*(1-(n-e)/(n-t)),r,s)},Lo.clamp=Ro;var jo=class{constructor(e,t,n,r,s,a,i){this.g=e,this.j=t,this.m=n,this.canvas=r,this.l=s,this.width=a,this.height=i,(this.j||this.m)&&0===--qo&&console.error("You seem to be creating MPImage instances without invoking .close(). This leaks resources.")}Ga(){return!!zo(this,0)}ma(){return!!zo(this,1)}R(){return!!zo(this,2)}Ea(){return Po(this)}Da(){var e=zo(this,1);return e||(Bo(this),Wo(this),e=Ho(this),Go(this),this.g.push(e),this.j=!0),e}N(){return Bo(this)}clone(){const e=[];for(const t of this.g){let n;if(t instanceof ImageData)n=new ImageData(t.data,this.width,this.height);else if(t instanceof WebGLTexture){const e=Vo(this),t=Uo(this);e.activeTexture(e.TEXTURE1),n=co(t,e),e.bindTexture(e.TEXTURE_2D,n),e.texImage2D(e.TEXTURE_2D,0,e.RGBA,this.width,this.height,0,e.RGBA,e.UNSIGNED_BYTE,null),e.bindTexture(e.TEXTURE_2D,null),ho(t,e,n),lo(t,e,!1,()=>{Wo(this),e.clearColor(0,0,0,0),e.clear(e.COLOR_BUFFER_BIT),e.drawArrays(e.TRIANGLE_FAN,0,4),Go(this)}),po(t),Go(this)}else{if(!(t instanceof ImageBitmap))throw Error(`Type is not supported: ${t}`);Bo(this),Wo(this),n=Ho(this),Go(this)}e.push(n)}return new jo(e,this.ma(),this.R(),this.canvas,this.l,this.width,this.height)}close(){this.j&&zo(this,1).close(),this.m&&Vo(this).deleteTexture(zo(this,2)),qo=-1}};jo.prototype.close=jo.prototype.close,jo.prototype.clone=jo.prototype.clone,jo.prototype.getAsWebGLTexture=jo.prototype.N,jo.prototype.getAsImageBitmap=jo.prototype.Da,jo.prototype.getAsImageData=jo.prototype.Ea,jo.prototype.hasWebGLTexture=jo.prototype.R,jo.prototype.hasImageBitmap=jo.prototype.ma,jo.prototype.hasImageData=jo.prototype.Ga;var qo=250;function Ko(...e){return e.map(([e,t])=>({start:e,end:t}))}const Xo=function(e){return class extends e{Ma(){this.i._registerModelResourcesGraphService()}}}((Yo=class{constructor(e,t){this.l=!0,this.i=e,this.g=null,this.h=0,this.m="function"==typeof this.i._addIntToInputStream,void 0!==t?this.i.canvas=t:Wi()?this.i.canvas=new OffscreenCanvas(1,1):(console.warn("OffscreenCanvas not supported and GraphRunner constructor glCanvas parameter is undefined. Creating backup canvas."),this.i.canvas=document.createElement("canvas"))}async initializeGraph(e){const t=await(await fetch(e)).arrayBuffer();e=!(e.endsWith(".pbtxt")||e.endsWith(".textproto")),this.setGraph(new Uint8Array(t),e)}setGraphFromString(e){this.setGraph((new TextEncoder).encode(e),!1)}setGraph(e,t){const n=e.length,r=this.i._malloc(n);this.i.HEAPU8.set(e,r),t?this.i._changeBinaryGraph(n,r):this.i._changeTextGraph(n,r),this.i._free(r)}configureAudio(e,t,n,r,s){this.i._configureAudio||console.warn(\'Attempting to use configureAudio without support for input audio. Is build dep ":gl_graph_runner_audio" missing?\'),ji(this,r||"input_audio",r=>{ji(this,s=s||"audio_header",s=>{this.i._configureAudio(r,s,e,t??0,n)})})}setAutoResizeCanvas(e){this.l=e}setAutoRenderToScreen(e){this.i._setAutoRenderToScreen(e)}setGpuBufferVerticalFlip(e){this.i.gpuOriginForWebTexturesIsBottomLeft=e}ea(e){Xi(this,"__graph_config__",t=>{e(t)}),ji(this,"__graph_config__",e=>{this.i._getGraphConfig(e,void 0)}),delete this.i.simpleListeners.__graph_config__}attachErrorListener(e){this.i.errorListener=e}attachEmptyPacketListener(e,t){this.i.emptyPacketListeners=this.i.emptyPacketListeners||{},this.i.emptyPacketListeners[e]=t}addAudioToStream(e,t,n){this.addAudioToStreamWithShape(e,0,0,t,n)}addAudioToStreamWithShape(e,t,n,r,s){const a=4*e.length;this.h!==a&&(this.g&&this.i._free(this.g),this.g=this.i._malloc(a),this.h=a),this.i.HEAPF32.set(e,this.g/4),ji(this,r,e=>{this.i._addAudioToInputStream(this.g,t,n,e,s)})}addGpuBufferToStream(e,t,n){ji(this,t,t=>{const[r,s]=qi(this,e,t);this.i._addBoundTextureToStream(t,r,s,n)})}addBoolToStream(e,t,n){ji(this,t,t=>{this.i._addBoolToInputStream(e,t,n)})}addDoubleToStream(e,t,n){ji(this,t,t=>{this.i._addDoubleToInputStream(e,t,n)})}addFloatToStream(e,t,n){ji(this,t,t=>{this.i._addFloatToInputStream(e,t,n)})}addIntToStream(e,t,n){ji(this,t,t=>{this.i._addIntToInputStream(e,t,n)})}addUintToStream(e,t,n){ji(this,t,t=>{this.i._addUintToInputStream(e,t,n)})}addStringToStream(e,t,n){ji(this,t,t=>{ji(this,e,e=>{this.i._addStringToInputStream(e,t,n)})})}addStringRecordToStream(e,t,n){ji(this,t,t=>{Ki(this,Object.keys(e),r=>{Ki(this,Object.values(e),s=>{this.i._addFlatHashMapToInputStream(r,s,Object.keys(e).length,t,n)})})})}addProtoToStream(e,t,n,r){ji(this,n,n=>{ji(this,t,t=>{const s=this.i._malloc(e.length);this.i.HEAPU8.set(e,s),this.i._addProtoToInputStream(s,e.length,t,n,r),this.i._free(s)})})}addEmptyPacketToStream(e,t){ji(this,e,e=>{this.i._addEmptyPacketToInputStream(e,t)})}addBoolVectorToStream(e,t,n){ji(this,t,t=>{const r=this.i._allocateBoolVector(e.length);if(!r)throw Error("Unable to allocate new bool vector on heap.");for(const t of e)this.i._addBoolVectorEntry(r,t);this.i._addBoolVectorToInputStream(r,t,n)})}addDoubleVectorToStream(e,t,n){ji(this,t,t=>{const r=this.i._allocateDoubleVector(e.length);if(!r)throw Error("Unable to allocate new double vector on heap.");for(const t of e)this.i._addDoubleVectorEntry(r,t);this.i._addDoubleVectorToInputStream(r,t,n)})}addFloatVectorToStream(e,t,n){ji(this,t,t=>{const r=this.i._allocateFloatVector(e.length);if(!r)throw Error("Unable to allocate new float vector on heap.");for(const t of e)this.i._addFloatVectorEntry(r,t);this.i._addFloatVectorToInputStream(r,t,n)})}addIntVectorToStream(e,t,n){ji(this,t,t=>{const r=this.i._allocateIntVector(e.length);if(!r)throw Error("Unable to allocate new int vector on heap.");for(const t of e)this.i._addIntVectorEntry(r,t);this.i._addIntVectorToInputStream(r,t,n)})}addUintVectorToStream(e,t,n){ji(this,t,t=>{const r=this.i._allocateUintVector(e.length);if(!r)throw Error("Unable to allocate new unsigned int vector on heap.");for(const t of e)this.i._addUintVectorEntry(r,t);this.i._addUintVectorToInputStream(r,t,n)})}addStringVectorToStream(e,t,n){ji(this,t,t=>{const r=this.i._allocateStringVector(e.length);if(!r)throw Error("Unable to allocate new string vector on heap.");for(const t of e)ji(this,t,e=>{this.i._addStringVectorEntry(r,e)});this.i._addStringVectorToInputStream(r,t,n)})}addBoolToInputSidePacket(e,t){ji(this,t,t=>{this.i._addBoolToInputSidePacket(e,t)})}addDoubleToInputSidePacket(e,t){ji(this,t,t=>{this.i._addDoubleToInputSidePacket(e,t)})}addFloatToInputSidePacket(e,t){ji(this,t,t=>{this.i._addFloatToInputSidePacket(e,t)})}addIntToInputSidePacket(e,t){ji(this,t,t=>{this.i._addIntToInputSidePacket(e,t)})}addUintToInputSidePacket(e,t){ji(this,t,t=>{this.i._addUintToInputSidePacket(e,t)})}addStringToInputSidePacket(e,t){ji(this,t,t=>{ji(this,e,e=>{this.i._addStringToInputSidePacket(e,t)})})}addProtoToInputSidePacket(e,t,n){ji(this,n,n=>{ji(this,t,t=>{const r=this.i._malloc(e.length);this.i.HEAPU8.set(e,r),this.i._addProtoToInputSidePacket(r,e.length,t,n),this.i._free(r)})})}addBoolVectorToInputSidePacket(e,t){ji(this,t,t=>{const n=this.i._allocateBoolVector(e.length);if(!n)throw Error("Unable to allocate new bool vector on heap.");for(const t of e)this.i._addBoolVectorEntry(n,t);this.i._addBoolVectorToInputSidePacket(n,t)})}addDoubleVectorToInputSidePacket(e,t){ji(this,t,t=>{const n=this.i._allocateDoubleVector(e.length);if(!n)throw Error("Unable to allocate new double vector on heap.");for(const t of e)this.i._addDoubleVectorEntry(n,t);this.i._addDoubleVectorToInputSidePacket(n,t)})}addFloatVectorToInputSidePacket(e,t){ji(this,t,t=>{const n=this.i._allocateFloatVector(e.length);if(!n)throw Error("Unable to allocate new float vector on heap.");for(const t of e)this.i._addFloatVectorEntry(n,t);this.i._addFloatVectorToInputSidePacket(n,t)})}addIntVectorToInputSidePacket(e,t){ji(this,t,t=>{const n=this.i._allocateIntVector(e.length);if(!n)throw Error("Unable to allocate new int vector on heap.");for(const t of e)this.i._addIntVectorEntry(n,t);this.i._addIntVectorToInputSidePacket(n,t)})}addUintVectorToInputSidePacket(e,t){ji(this,t,t=>{const n=this.i._allocateUintVector(e.length);if(!n)throw Error("Unable to allocate new unsigned int vector on heap.");for(const t of e)this.i._addUintVectorEntry(n,t);this.i._addUintVectorToInputSidePacket(n,t)})}addStringVectorToInputSidePacket(e,t){ji(this,t,t=>{const n=this.i._allocateStringVector(e.length);if(!n)throw Error("Unable to allocate new string vector on heap.");for(const t of e)ji(this,t,e=>{this.i._addStringVectorEntry(n,e)});this.i._addStringVectorToInputSidePacket(n,t)})}attachBoolListener(e,t){Xi(this,e,t),ji(this,e,e=>{this.i._attachBoolListener(e)})}attachBoolVectorListener(e,t){Yi(this,e,t),ji(this,e,e=>{this.i._attachBoolVectorListener(e)})}attachIntListener(e,t){Xi(this,e,t),ji(this,e,e=>{this.i._attachIntListener(e)})}attachIntVectorListener(e,t){Yi(this,e,t),ji(this,e,e=>{this.i._attachIntVectorListener(e)})}attachUintListener(e,t){Xi(this,e,t),ji(this,e,e=>{this.i._attachUintListener(e)})}attachUintVectorListener(e,t){Yi(this,e,t),ji(this,e,e=>{this.i._attachUintVectorListener(e)})}attachDoubleListener(e,t){Xi(this,e,t),ji(this,e,e=>{this.i._attachDoubleListener(e)})}attachDoubleVectorListener(e,t){Yi(this,e,t),ji(this,e,e=>{this.i._attachDoubleVectorListener(e)})}attachFloatListener(e,t){Xi(this,e,t),ji(this,e,e=>{this.i._attachFloatListener(e)})}attachFloatVectorListener(e,t){Yi(this,e,t),ji(this,e,e=>{this.i._attachFloatVectorListener(e)})}attachStringListener(e,t){Xi(this,e,t),ji(this,e,e=>{this.i._attachStringListener(e)})}attachStringVectorListener(e,t){Yi(this,e,t),ji(this,e,e=>{this.i._attachStringVectorListener(e)})}attachProtoListener(e,t,n){Xi(this,e,t),ji(this,e,e=>{this.i._attachProtoListener(e,n||!1)})}attachProtoVectorListener(e,t,n){Yi(this,e,t),ji(this,e,e=>{this.i._attachProtoVectorListener(e,n||!1)})}attachAudioListener(e,t,n){this.i._attachAudioListener||console.warn(\'Attempting to use attachAudioListener without support for output audio. Is build dep ":gl_graph_runner_audio_out" missing?\'),Xi(this,e,(e,n)=>{e=new Float32Array(e.buffer,e.byteOffset,e.length/4),t(e,n)}),ji(this,e,e=>{this.i._attachAudioListener(e,n||!1)})}finishProcessing(){this.i._waitUntilIdle()}closeGraph(){this.i._closeGraph(),this.i.simpleListeners=void 0,this.i.emptyPacketListeners=void 0}},class extends Yo{get ga(){return this.i}sa(e,t,n){ji(this,t,t=>{const[r,s]=qi(this,e,t);this.ga._addBoundTextureAsImageToStream(t,r,s,n)})}V(e,t){Xi(this,e,t),ji(this,e,e=>{this.ga._attachImageListener(e)})}da(e,t){Yi(this,e,t),ji(this,e,e=>{this.ga._attachImageVectorListener(e)})}}));var Yo,Jo=class extends Xo{};async function Zo(e,t,n){return async function(e,t,n,r){return async function(e,t,n,r){return e=await(async(e,t,n,r,s)=>{if(t&&await Gi(t),!self.ModuleFactory)throw Error("ModuleFactory not set.");if(n&&(await Gi(n),!self.ModuleFactory))throw Error("ModuleFactory not set.");return self.Module&&s&&((t=self.Module).locateFile=s.locateFile,s.mainScriptUrlOrBlob&&(t.mainScriptUrlOrBlob=s.mainScriptUrlOrBlob)),s=await self.ModuleFactory(self.Module||s),self.ModuleFactory=self.Module=void 0,new e(s,r)})(e,n.wasmLoaderPath,n.assetLoaderPath,t,{locateFile:e=>e.endsWith(".wasm")?n.wasmBinaryPath.toString():n.assetBinaryPath&&e.endsWith(".data")?n.assetBinaryPath.toString():e}),await e.o(r),e}(e,t,n,r)}(e,n.canvas??(Wi()?void 0:document.createElement("canvas")),t,n)}function Qo(e,t,n,r){if(e.U){const a=new Ia;if(n?.regionOfInterest){if(!e.ra)throw Error("This task doesn\'t support region-of-interest.");var s=n.regionOfInterest;if(s.left>=s.right||s.top>=s.bottom)throw Error("Expected RectF with left < right and top < bottom.");if(s.left<0||s.top<0||s.right>1||s.bottom>1)throw Error("Expected RectF values to be in [0,1].");Cn(a,1,(s.left+s.right)/2),Cn(a,2,(s.top+s.bottom)/2),Cn(a,4,s.right-s.left),Cn(a,3,s.bottom-s.top)}else Cn(a,1,.5),Cn(a,2,.5),Cn(a,4,1),Cn(a,3,1);if(n?.rotationDegrees){if(n?.rotationDegrees%90!=0)throw Error("Expected rotation to be a multiple of 90°.");if(Cn(a,5,-Math.PI*n.rotationDegrees/180),n?.rotationDegrees%180!=0){const[e,r]=Hi(t);n=Sn(a,3)*r/e,s=Sn(a,4)*e/r,Cn(a,4,n),Cn(a,3,s)}}e.g.addProtoToStream(a.g(),"mediapipe.NormalizedRect",e.U,r)}e.g.sa(t,e.ba,r??performance.now()),e.finishProcessing()}function eu(e,t,n){if(e.baseOptions?.g())throw Error("Task is not initialized with image mode. \'runningMode\' must be set to \'IMAGE\'.");Qo(e,t,n,e.B+1)}function tu(e,t,n,r){if(!e.baseOptions?.g())throw Error("Task is not initialized with video mode. \'runningMode\' must be set to \'VIDEO\'.");Qo(e,t,n,r)}function nu(e,t,n,r){var s=t.data;const a=t.width,i=a*(t=t.height);if((s instanceof Uint8Array||s instanceof Float32Array)&&s.length!==i)throw Error("Unsupported channel count: "+s.length/i);return e=new To([s],n,!1,e.g.i.canvas,e.P,a,t),r?e.clone():e}var ru=class extends ro{constructor(e,t,n,r){super(e),this.g=e,this.ba=t,this.U=n,this.ra=r,this.P=new fo}l(e,t=!0){if("runningMode"in e&&Tn(this.baseOptions,2,!!e.runningMode&&"IMAGE"!==e.runningMode),void 0!==e.canvas&&this.g.i.canvas!==e.canvas)throw Error("You must create a new task to reset the canvas.");return super.l(e,t)}close(){this.P.close(),super.close()}};ru.prototype.close=ru.prototype.close;var su=class extends ru{constructor(e,t){super(new Jo(e,t),"image_in","norm_rect_in",!1),this.j={detections:[]},yn(e=this.h=new Va,0,1,t=new za),Cn(this.h,2,.5),Cn(this.h,3,.3)}get baseOptions(){return fn(this.h,za,1)}set baseOptions(e){yn(this.h,0,1,e)}o(e){return"minDetectionConfidence"in e&&Cn(this.h,2,e.minDetectionConfidence??.5),"minSuppressionThreshold"in e&&Cn(this.h,3,e.minSuppressionThreshold??.3),this.l(e)}D(e,t){return this.j={detections:[]},eu(this,e,t),this.j}F(e,t,n){return this.j={detections:[]},tu(this,e,n,t),this.j}m(){var e=new ia;sa(e,"image_in"),sa(e,"norm_rect_in"),aa(e,"detections");const t=new qs;tr(t,Wa,this.h);const n=new Qs;Ys(n,"mediapipe.tasks.vision.face_detector.FaceDetectorGraph"),Js(n,"IMAGE:image_in"),Js(n,"NORM_RECT:norm_rect_in"),Zs(n,"DETECTIONS:detections"),n.o(t),ra(e,n),this.g.attachProtoVectorListener("detections",(e,t)=>{for(const t of e)e=ga(t),this.j.detections.push(Mi(e));Qi(this,t)}),this.g.attachEmptyPacketListener("detections",e=>{Qi(this,e)}),e=e.g(),this.setGraph(new Uint8Array(e),!0)}};su.prototype.detectForVideo=su.prototype.F,su.prototype.detect=su.prototype.D,su.prototype.setOptions=su.prototype.o,su.createFromModelPath=async function(e,t){return Zo(su,e,{baseOptions:{modelAssetPath:t}})},su.createFromModelBuffer=function(e,t){return Zo(su,e,{baseOptions:{modelAssetBuffer:t}})},su.createFromOptions=function(e,t){return Zo(su,e,t)};var au=Ko([61,146],[146,91],[91,181],[181,84],[84,17],[17,314],[314,405],[405,321],[321,375],[375,291],[61,185],[185,40],[40,39],[39,37],[37,0],[0,267],[267,269],[269,270],[270,409],[409,291],[78,95],[95,88],[88,178],[178,87],[87,14],[14,317],[317,402],[402,318],[318,324],[324,308],[78,191],[191,80],[80,81],[81,82],[82,13],[13,312],[312,311],[311,310],[310,415],[415,308]),iu=Ko([263,249],[249,390],[390,373],[373,374],[374,380],[380,381],[381,382],[382,362],[263,466],[466,388],[388,387],[387,386],[386,385],[385,384],[384,398],[398,362]),ou=Ko([276,283],[283,282],[282,295],[295,285],[300,293],[293,334],[334,296],[296,336]),uu=Ko([474,475],[475,476],[476,477],[477,474]),lu=Ko([33,7],[7,163],[163,144],[144,145],[145,153],[153,154],[154,155],[155,133],[33,246],[246,161],[161,160],[160,159],[159,158],[158,157],[157,173],[173,133]),cu=Ko([46,53],[53,52],[52,65],[65,55],[70,63],[63,105],[105,66],[66,107]),hu=Ko([469,470],[470,471],[471,472],[472,469]),du=Ko([10,338],[338,297],[297,332],[332,284],[284,251],[251,389],[389,356],[356,454],[454,323],[323,361],[361,288],[288,397],[397,365],[365,379],[379,378],[378,400],[400,377],[377,152],[152,148],[148,176],[176,149],[149,150],[150,136],[136,172],[172,58],[58,132],[132,93],[93,234],[234,127],[127,162],[162,21],[21,54],[54,103],[103,67],[67,109],[109,10]),pu=[...au,...iu,...ou,...lu,...cu,...du],fu=Ko([127,34],[34,139],[139,127],[11,0],[0,37],[37,11],[232,231],[231,120],[120,232],[72,37],[37,39],[39,72],[128,121],[121,47],[47,128],[232,121],[121,128],[128,232],[104,69],[69,67],[67,104],[175,171],[171,148],[148,175],[118,50],[50,101],[101,118],[73,39],[39,40],[40,73],[9,151],[151,108],[108,9],[48,115],[115,131],[131,48],[194,204],[204,211],[211,194],[74,40],[40,185],[185,74],[80,42],[42,183],[183,80],[40,92],[92,186],[186,40],[230,229],[229,118],[118,230],[202,212],[212,214],[214,202],[83,18],[18,17],[17,83],[76,61],[61,146],[146,76],[160,29],[29,30],[30,160],[56,157],[157,173],[173,56],[106,204],[204,194],[194,106],[135,214],[214,192],[192,135],[203,165],[165,98],[98,203],[21,71],[71,68],[68,21],[51,45],[45,4],[4,51],[144,24],[24,23],[23,144],[77,146],[146,91],[91,77],[205,50],[50,187],[187,205],[201,200],[200,18],[18,201],[91,106],[106,182],[182,91],[90,91],[91,181],[181,90],[85,84],[84,17],[17,85],[206,203],[203,36],[36,206],[148,171],[171,140],[140,148],[92,40],[40,39],[39,92],[193,189],[189,244],[244,193],[159,158],[158,28],[28,159],[247,246],[246,161],[161,247],[236,3],[3,196],[196,236],[54,68],[68,104],[104,54],[193,168],[168,8],[8,193],[117,228],[228,31],[31,117],[189,193],[193,55],[55,189],[98,97],[97,99],[99,98],[126,47],[47,100],[100,126],[166,79],[79,218],[218,166],[155,154],[154,26],[26,155],[209,49],[49,131],[131,209],[135,136],[136,150],[150,135],[47,126],[126,217],[217,47],[223,52],[52,53],[53,223],[45,51],[51,134],[134,45],[211,170],[170,140],[140,211],[67,69],[69,108],[108,67],[43,106],[106,91],[91,43],[230,119],[119,120],[120,230],[226,130],[130,247],[247,226],[63,53],[53,52],[52,63],[238,20],[20,242],[242,238],[46,70],[70,156],[156,46],[78,62],[62,96],[96,78],[46,53],[53,63],[63,46],[143,34],[34,227],[227,143],[123,117],[117,111],[111,123],[44,125],[125,19],[19,44],[236,134],[134,51],[51,236],[216,206],[206,205],[205,216],[154,153],[153,22],[22,154],[39,37],[37,167],[167,39],[200,201],[201,208],[208,200],[36,142],[142,100],[100,36],[57,212],[212,202],[202,57],[20,60],[60,99],[99,20],[28,158],[158,157],[157,28],[35,226],[226,113],[113,35],[160,159],[159,27],[27,160],[204,202],[202,210],[210,204],[113,225],[225,46],[46,113],[43,202],[202,204],[204,43],[62,76],[76,77],[77,62],[137,123],[123,116],[116,137],[41,38],[38,72],[72,41],[203,129],[129,142],[142,203],[64,98],[98,240],[240,64],[49,102],[102,64],[64,49],[41,73],[73,74],[74,41],[212,216],[216,207],[207,212],[42,74],[74,184],[184,42],[169,170],[170,211],[211,169],[170,149],[149,176],[176,170],[105,66],[66,69],[69,105],[122,6],[6,168],[168,122],[123,147],[147,187],[187,123],[96,77],[77,90],[90,96],[65,55],[55,107],[107,65],[89,90],[90,180],[180,89],[101,100],[100,120],[120,101],[63,105],[105,104],[104,63],[93,137],[137,227],[227,93],[15,86],[86,85],[85,15],[129,102],[102,49],[49,129],[14,87],[87,86],[86,14],[55,8],[8,9],[9,55],[100,47],[47,121],[121,100],[145,23],[23,22],[22,145],[88,89],[89,179],[179,88],[6,122],[122,196],[196,6],[88,95],[95,96],[96,88],[138,172],[172,136],[136,138],[215,58],[58,172],[172,215],[115,48],[48,219],[219,115],[42,80],[80,81],[81,42],[195,3],[3,51],[51,195],[43,146],[146,61],[61,43],[171,175],[175,199],[199,171],[81,82],[82,38],[38,81],[53,46],[46,225],[225,53],[144,163],[163,110],[110,144],[52,65],[65,66],[66,52],[229,228],[228,117],[117,229],[34,127],[127,234],[234,34],[107,108],[108,69],[69,107],[109,108],[108,151],[151,109],[48,64],[64,235],[235,48],[62,78],[78,191],[191,62],[129,209],[209,126],[126,129],[111,35],[35,143],[143,111],[117,123],[123,50],[50,117],[222,65],[65,52],[52,222],[19,125],[125,141],[141,19],[221,55],[55,65],[65,221],[3,195],[195,197],[197,3],[25,7],[7,33],[33,25],[220,237],[237,44],[44,220],[70,71],[71,139],[139,70],[122,193],[193,245],[245,122],[247,130],[130,33],[33,247],[71,21],[21,162],[162,71],[170,169],[169,150],[150,170],[188,174],[174,196],[196,188],[216,186],[186,92],[92,216],[2,97],[97,167],[167,2],[141,125],[125,241],[241,141],[164,167],[167,37],[37,164],[72,38],[38,12],[12,72],[38,82],[82,13],[13,38],[63,68],[68,71],[71,63],[226,35],[35,111],[111,226],[101,50],[50,205],[205,101],[206,92],[92,165],[165,206],[209,198],[198,217],[217,209],[165,167],[167,97],[97,165],[220,115],[115,218],[218,220],[133,112],[112,243],[243,133],[239,238],[238,241],[241,239],[214,135],[135,169],[169,214],[190,173],[173,133],[133,190],[171,208],[208,32],[32,171],[125,44],[44,237],[237,125],[86,87],[87,178],[178,86],[85,86],[86,179],[179,85],[84,85],[85,180],[180,84],[83,84],[84,181],[181,83],[201,83],[83,182],[182,201],[137,93],[93,132],[132,137],[76,62],[62,183],[183,76],[61,76],[76,184],[184,61],[57,61],[61,185],[185,57],[212,57],[57,186],[186,212],[214,207],[207,187],[187,214],[34,143],[143,156],[156,34],[79,239],[239,237],[237,79],[123,137],[137,177],[177,123],[44,1],[1,4],[4,44],[201,194],[194,32],[32,201],[64,102],[102,129],[129,64],[213,215],[215,138],[138,213],[59,166],[166,219],[219,59],[242,99],[99,97],[97,242],[2,94],[94,141],[141,2],[75,59],[59,235],[235,75],[24,110],[110,228],[228,24],[25,130],[130,226],[226,25],[23,24],[24,229],[229,23],[22,23],[23,230],[230,22],[26,22],[22,231],[231,26],[112,26],[26,232],[232,112],[189,190],[190,243],[243,189],[221,56],[56,190],[190,221],[28,56],[56,221],[221,28],[27,28],[28,222],[222,27],[29,27],[27,223],[223,29],[30,29],[29,224],[224,30],[247,30],[30,225],[225,247],[238,79],[79,20],[20,238],[166,59],[59,75],[75,166],[60,75],[75,240],[240,60],[147,177],[177,215],[215,147],[20,79],[79,166],[166,20],[187,147],[147,213],[213,187],[112,233],[233,244],[244,112],[233,128],[128,245],[245,233],[128,114],[114,188],[188,128],[114,217],[217,174],[174,114],[131,115],[115,220],[220,131],[217,198],[198,236],[236,217],[198,131],[131,134],[134,198],[177,132],[132,58],[58,177],[143,35],[35,124],[124,143],[110,163],[163,7],[7,110],[228,110],[110,25],[25,228],[356,389],[389,368],[368,356],[11,302],[302,267],[267,11],[452,350],[350,349],[349,452],[302,303],[303,269],[269,302],[357,343],[343,277],[277,357],[452,453],[453,357],[357,452],[333,332],[332,297],[297,333],[175,152],[152,377],[377,175],[347,348],[348,330],[330,347],[303,304],[304,270],[270,303],[9,336],[336,337],[337,9],[278,279],[279,360],[360,278],[418,262],[262,431],[431,418],[304,408],[408,409],[409,304],[310,415],[415,407],[407,310],[270,409],[409,410],[410,270],[450,348],[348,347],[347,450],[422,430],[430,434],[434,422],[313,314],[314,17],[17,313],[306,307],[307,375],[375,306],[387,388],[388,260],[260,387],[286,414],[414,398],[398,286],[335,406],[406,418],[418,335],[364,367],[367,416],[416,364],[423,358],[358,327],[327,423],[251,284],[284,298],[298,251],[281,5],[5,4],[4,281],[373,374],[374,253],[253,373],[307,320],[320,321],[321,307],[425,427],[427,411],[411,425],[421,313],[313,18],[18,421],[321,405],[405,406],[406,321],[320,404],[404,405],[405,320],[315,16],[16,17],[17,315],[426,425],[425,266],[266,426],[377,400],[400,369],[369,377],[322,391],[391,269],[269,322],[417,465],[465,464],[464,417],[386,257],[257,258],[258,386],[466,260],[260,388],[388,466],[456,399],[399,419],[419,456],[284,332],[332,333],[333,284],[417,285],[285,8],[8,417],[346,340],[340,261],[261,346],[413,441],[441,285],[285,413],[327,460],[460,328],[328,327],[355,371],[371,329],[329,355],[392,439],[439,438],[438,392],[382,341],[341,256],[256,382],[429,420],[420,360],[360,429],[364,394],[394,379],[379,364],[277,343],[343,437],[437,277],[443,444],[444,283],[283,443],[275,440],[440,363],[363,275],[431,262],[262,369],[369,431],[297,338],[338,337],[337,297],[273,375],[375,321],[321,273],[450,451],[451,349],[349,450],[446,342],[342,467],[467,446],[293,334],[334,282],[282,293],[458,461],[461,462],[462,458],[276,353],[353,383],[383,276],[308,324],[324,325],[325,308],[276,300],[300,293],[293,276],[372,345],[345,447],[447,372],[352,345],[345,340],[340,352],[274,1],[1,19],[19,274],[456,248],[248,281],[281,456],[436,427],[427,425],[425,436],[381,256],[256,252],[252,381],[269,391],[391,393],[393,269],[200,199],[199,428],[428,200],[266,330],[330,329],[329,266],[287,273],[273,422],[422,287],[250,462],[462,328],[328,250],[258,286],[286,384],[384,258],[265,353],[353,342],[342,265],[387,259],[259,257],[257,387],[424,431],[431,430],[430,424],[342,353],[353,276],[276,342],[273,335],[335,424],[424,273],[292,325],[325,307],[307,292],[366,447],[447,345],[345,366],[271,303],[303,302],[302,271],[423,266],[266,371],[371,423],[294,455],[455,460],[460,294],[279,278],[278,294],[294,279],[271,272],[272,304],[304,271],[432,434],[434,427],[427,432],[272,407],[407,408],[408,272],[394,430],[430,431],[431,394],[395,369],[369,400],[400,395],[334,333],[333,299],[299,334],[351,417],[417,168],[168,351],[352,280],[280,411],[411,352],[325,319],[319,320],[320,325],[295,296],[296,336],[336,295],[319,403],[403,404],[404,319],[330,348],[348,349],[349,330],[293,298],[298,333],[333,293],[323,454],[454,447],[447,323],[15,16],[16,315],[315,15],[358,429],[429,279],[279,358],[14,15],[15,316],[316,14],[285,336],[336,9],[9,285],[329,349],[349,350],[350,329],[374,380],[380,252],[252,374],[318,402],[402,403],[403,318],[6,197],[197,419],[419,6],[318,319],[319,325],[325,318],[367,364],[364,365],[365,367],[435,367],[367,397],[397,435],[344,438],[438,439],[439,344],[272,271],[271,311],[311,272],[195,5],[5,281],[281,195],[273,287],[287,291],[291,273],[396,428],[428,199],[199,396],[311,271],[271,268],[268,311],[283,444],[444,445],[445,283],[373,254],[254,339],[339,373],[282,334],[334,296],[296,282],[449,347],[347,346],[346,449],[264,447],[447,454],[454,264],[336,296],[296,299],[299,336],[338,10],[10,151],[151,338],[278,439],[439,455],[455,278],[292,407],[407,415],[415,292],[358,371],[371,355],[355,358],[340,345],[345,372],[372,340],[346,347],[347,280],[280,346],[442,443],[443,282],[282,442],[19,94],[94,370],[370,19],[441,442],[442,295],[295,441],[248,419],[419,197],[197,248],[263,255],[255,359],[359,263],[440,275],[275,274],[274,440],[300,383],[383,368],[368,300],[351,412],[412,465],[465,351],[263,467],[467,466],[466,263],[301,368],[368,389],[389,301],[395,378],[378,379],[379,395],[412,351],[351,419],[419,412],[436,426],[426,322],[322,436],[2,164],[164,393],[393,2],[370,462],[462,461],[461,370],[164,0],[0,267],[267,164],[302,11],[11,12],[12,302],[268,12],[12,13],[13,268],[293,300],[300,301],[301,293],[446,261],[261,340],[340,446],[330,266],[266,425],[425,330],[426,423],[423,391],[391,426],[429,355],[355,437],[437,429],[391,327],[327,326],[326,391],[440,457],[457,438],[438,440],[341,382],[382,362],[362,341],[459,457],[457,461],[461,459],[434,430],[430,394],[394,434],[414,463],[463,362],[362,414],[396,369],[369,262],[262,396],[354,461],[461,457],[457,354],[316,403],[403,402],[402,316],[315,404],[404,403],[403,315],[314,405],[405,404],[404,314],[313,406],[406,405],[405,313],[421,418],[418,406],[406,421],[366,401],[401,361],[361,366],[306,408],[408,407],[407,306],[291,409],[409,408],[408,291],[287,410],[410,409],[409,287],[432,436],[436,410],[410,432],[434,416],[416,411],[411,434],[264,368],[368,383],[383,264],[309,438],[438,457],[457,309],[352,376],[376,401],[401,352],[274,275],[275,4],[4,274],[421,428],[428,262],[262,421],[294,327],[327,358],[358,294],[433,416],[416,367],[367,433],[289,455],[455,439],[439,289],[462,370],[370,326],[326,462],[2,326],[326,370],[370,2],[305,460],[460,455],[455,305],[254,449],[449,448],[448,254],[255,261],[261,446],[446,255],[253,450],[450,449],[449,253],[252,451],[451,450],[450,252],[256,452],[452,451],[451,256],[341,453],[453,452],[452,341],[413,464],[464,463],[463,413],[441,413],[413,414],[414,441],[258,442],[442,441],[441,258],[257,443],[443,442],[442,257],[259,444],[444,443],[443,259],[260,445],[445,444],[444,260],[467,342],[342,445],[445,467],[459,458],[458,250],[250,459],[289,392],[392,290],[290,289],[290,328],[328,460],[460,290],[376,433],[433,435],[435,376],[250,290],[290,392],[392,250],[411,416],[416,433],[433,411],[341,463],[463,464],[464,341],[453,464],[464,465],[465,453],[357,465],[465,412],[412,357],[343,412],[412,399],[399,343],[360,363],[363,440],[440,360],[437,399],[399,456],[456,437],[420,456],[456,363],[363,420],[401,435],[435,288],[288,401],[372,383],[383,353],[353,372],[339,255],[255,249],[249,339],[448,261],[261,255],[255,448],[133,243],[243,190],[190,133],[133,155],[155,112],[112,133],[33,246],[246,247],[247,33],[33,130],[130,25],[25,33],[398,384],[384,286],[286,398],[362,398],[398,414],[414,362],[362,463],[463,341],[341,362],[263,359],[359,467],[467,263],[263,249],[249,255],[255,263],[466,467],[467,260],[260,466],[75,60],[60,166],[166,75],[238,239],[239,79],[79,238],[162,127],[127,139],[139,162],[72,11],[11,37],[37,72],[121,232],[232,120],[120,121],[73,72],[72,39],[39,73],[114,128],[128,47],[47,114],[233,232],[232,128],[128,233],[103,104],[104,67],[67,103],[152,175],[175,148],[148,152],[119,118],[118,101],[101,119],[74,73],[73,40],[40,74],[107,9],[9,108],[108,107],[49,48],[48,131],[131,49],[32,194],[194,211],[211,32],[184,74],[74,185],[185,184],[191,80],[80,183],[183,191],[185,40],[40,186],[186,185],[119,230],[230,118],[118,119],[210,202],[202,214],[214,210],[84,83],[83,17],[17,84],[77,76],[76,146],[146,77],[161,160],[160,30],[30,161],[190,56],[56,173],[173,190],[182,106],[106,194],[194,182],[138,135],[135,192],[192,138],[129,203],[203,98],[98,129],[54,21],[21,68],[68,54],[5,51],[51,4],[4,5],[145,144],[144,23],[23,145],[90,77],[77,91],[91,90],[207,205],[205,187],[187,207],[83,201],[201,18],[18,83],[181,91],[91,182],[182,181],[180,90],[90,181],[181,180],[16,85],[85,17],[17,16],[205,206],[206,36],[36,205],[176,148],[148,140],[140,176],[165,92],[92,39],[39,165],[245,193],[193,244],[244,245],[27,159],[159,28],[28,27],[30,247],[247,161],[161,30],[174,236],[236,196],[196,174],[103,54],[54,104],[104,103],[55,193],[193,8],[8,55],[111,117],[117,31],[31,111],[221,189],[189,55],[55,221],[240,98],[98,99],[99,240],[142,126],[126,100],[100,142],[219,166],[166,218],[218,219],[112,155],[155,26],[26,112],[198,209],[209,131],[131,198],[169,135],[135,150],[150,169],[114,47],[47,217],[217,114],[224,223],[223,53],[53,224],[220,45],[45,134],[134,220],[32,211],[211,140],[140,32],[109,67],[67,108],[108,109],[146,43],[43,91],[91,146],[231,230],[230,120],[120,231],[113,226],[226,247],[247,113],[105,63],[63,52],[52,105],[241,238],[238,242],[242,241],[124,46],[46,156],[156,124],[95,78],[78,96],[96,95],[70,46],[46,63],[63,70],[116,143],[143,227],[227,116],[116,123],[123,111],[111,116],[1,44],[44,19],[19,1],[3,236],[236,51],[51,3],[207,216],[216,205],[205,207],[26,154],[154,22],[22,26],[165,39],[39,167],[167,165],[199,200],[200,208],[208,199],[101,36],[36,100],[100,101],[43,57],[57,202],[202,43],[242,20],[20,99],[99,242],[56,28],[28,157],[157,56],[124,35],[35,113],[113,124],[29,160],[160,27],[27,29],[211,204],[204,210],[210,211],[124,113],[113,46],[46,124],[106,43],[43,204],[204,106],[96,62],[62,77],[77,96],[227,137],[137,116],[116,227],[73,41],[41,72],[72,73],[36,203],[203,142],[142,36],[235,64],[64,240],[240,235],[48,49],[49,64],[64,48],[42,41],[41,74],[74,42],[214,212],[212,207],[207,214],[183,42],[42,184],[184,183],[210,169],[169,211],[211,210],[140,170],[170,176],[176,140],[104,105],[105,69],[69,104],[193,122],[122,168],[168,193],[50,123],[123,187],[187,50],[89,96],[96,90],[90,89],[66,65],[65,107],[107,66],[179,89],[89,180],[180,179],[119,101],[101,120],[120,119],[68,63],[63,104],[104,68],[234,93],[93,227],[227,234],[16,15],[15,85],[85,16],[209,129],[129,49],[49,209],[15,14],[14,86],[86,15],[107,55],[55,9],[9,107],[120,100],[100,121],[121,120],[153,145],[145,22],[22,153],[178,88],[88,179],[179,178],[197,6],[6,196],[196,197],[89,88],[88,96],[96,89],[135,138],[138,136],[136,135],[138,215],[215,172],[172,138],[218,115],[115,219],[219,218],[41,42],[42,81],[81,41],[5,195],[195,51],[51,5],[57,43],[43,61],[61,57],[208,171],[171,199],[199,208],[41,81],[81,38],[38,41],[224,53],[53,225],[225,224],[24,144],[144,110],[110,24],[105,52],[52,66],[66,105],[118,229],[229,117],[117,118],[227,34],[34,234],[234,227],[66,107],[107,69],[69,66],[10,109],[109,151],[151,10],[219,48],[48,235],[235,219],[183,62],[62,191],[191,183],[142,129],[129,126],[126,142],[116,111],[111,143],[143,116],[118,117],[117,50],[50,118],[223,222],[222,52],[52,223],[94,19],[19,141],[141,94],[222,221],[221,65],[65,222],[196,3],[3,197],[197,196],[45,220],[220,44],[44,45],[156,70],[70,139],[139,156],[188,122],[122,245],[245,188],[139,71],[71,162],[162,139],[149,170],[170,150],[150,149],[122,188],[188,196],[196,122],[206,216],[216,92],[92,206],[164,2],[2,167],[167,164],[242,141],[141,241],[241,242],[0,164],[164,37],[37,0],[11,72],[72,12],[12,11],[12,38],[38,13],[13,12],[70,63],[63,71],[71,70],[31,226],[226,111],[111,31],[36,101],[101,205],[205,36],[203,206],[206,165],[165,203],[126,209],[209,217],[217,126],[98,165],[165,97],[97,98],[237,220],[220,218],[218,237],[237,239],[239,241],[241,237],[210,214],[214,169],[169,210],[140,171],[171,32],[32,140],[241,125],[125,237],[237,241],[179,86],[86,178],[178,179],[180,85],[85,179],[179,180],[181,84],[84,180],[180,181],[182,83],[83,181],[181,182],[194,201],[201,182],[182,194],[177,137],[137,132],[132,177],[184,76],[76,183],[183,184],[185,61],[61,184],[184,185],[186,57],[57,185],[185,186],[216,212],[212,186],[186,216],[192,214],[214,187],[187,192],[139,34],[34,156],[156,139],[218,79],[79,237],[237,218],[147,123],[123,177],[177,147],[45,44],[44,4],[4,45],[208,201],[201,32],[32,208],[98,64],[64,129],[129,98],[192,213],[213,138],[138,192],[235,59],[59,219],[219,235],[141,242],[242,97],[97,141],[97,2],[2,141],[141,97],[240,75],[75,235],[235,240],[229,24],[24,228],[228,229],[31,25],[25,226],[226,31],[230,23],[23,229],[229,230],[231,22],[22,230],[230,231],[232,26],[26,231],[231,232],[233,112],[112,232],[232,233],[244,189],[189,243],[243,244],[189,221],[221,190],[190,189],[222,28],[28,221],[221,222],[223,27],[27,222],[222,223],[224,29],[29,223],[223,224],[225,30],[30,224],[224,225],[113,247],[247,225],[225,113],[99,60],[60,240],[240,99],[213,147],[147,215],[215,213],[60,20],[20,166],[166,60],[192,187],[187,213],[213,192],[243,112],[112,244],[244,243],[244,233],[233,245],[245,244],[245,128],[128,188],[188,245],[188,114],[114,174],[174,188],[134,131],[131,220],[220,134],[174,217],[217,236],[236,174],[236,198],[198,134],[134,236],[215,177],[177,58],[58,215],[156,143],[143,124],[124,156],[25,110],[110,7],[7,25],[31,228],[228,25],[25,31],[264,356],[356,368],[368,264],[0,11],[11,267],[267,0],[451,452],[452,349],[349,451],[267,302],[302,269],[269,267],[350,357],[357,277],[277,350],[350,452],[452,357],[357,350],[299,333],[333,297],[297,299],[396,175],[175,377],[377,396],[280,347],[347,330],[330,280],[269,303],[303,270],[270,269],[151,9],[9,337],[337,151],[344,278],[278,360],[360,344],[424,418],[418,431],[431,424],[270,304],[304,409],[409,270],[272,310],[310,407],[407,272],[322,270],[270,410],[410,322],[449,450],[450,347],[347,449],[432,422],[422,434],[434,432],[18,313],[313,17],[17,18],[291,306],[306,375],[375,291],[259,387],[387,260],[260,259],[424,335],[335,418],[418,424],[434,364],[364,416],[416,434],[391,423],[423,327],[327,391],[301,251],[251,298],[298,301],[275,281],[281,4],[4,275],[254,373],[373,253],[253,254],[375,307],[307,321],[321,375],[280,425],[425,411],[411,280],[200,421],[421,18],[18,200],[335,321],[321,406],[406,335],[321,320],[320,405],[405,321],[314,315],[315,17],[17,314],[423,426],[426,266],[266,423],[396,377],[377,369],[369,396],[270,322],[322,269],[269,270],[413,417],[417,464],[464,413],[385,386],[386,258],[258,385],[248,456],[456,419],[419,248],[298,284],[284,333],[333,298],[168,417],[417,8],[8,168],[448,346],[346,261],[261,448],[417,413],[413,285],[285,417],[326,327],[327,328],[328,326],[277,355],[355,329],[329,277],[309,392],[392,438],[438,309],[381,382],[382,256],[256,381],[279,429],[429,360],[360,279],[365,364],[364,379],[379,365],[355,277],[277,437],[437,355],[282,443],[443,283],[283,282],[281,275],[275,363],[363,281],[395,431],[431,369],[369,395],[299,297],[297,337],[337,299],[335,273],[273,321],[321,335],[348,450],[450,349],[349,348],[359,446],[446,467],[467,359],[283,293],[293,282],[282,283],[250,458],[458,462],[462,250],[300,276],[276,383],[383,300],[292,308],[308,325],[325,292],[283,276],[276,293],[293,283],[264,372],[372,447],[447,264],[346,352],[352,340],[340,346],[354,274],[274,19],[19,354],[363,456],[456,281],[281,363],[426,436],[436,425],[425,426],[380,381],[381,252],[252,380],[267,269],[269,393],[393,267],[421,200],[200,428],[428,421],[371,266],[266,329],[329,371],[432,287],[287,422],[422,432],[290,250],[250,328],[328,290],[385,258],[258,384],[384,385],[446,265],[265,342],[342,446],[386,387],[387,257],[257,386],[422,424],[424,430],[430,422],[445,342],[342,276],[276,445],[422,273],[273,424],[424,422],[306,292],[292,307],[307,306],[352,366],[366,345],[345,352],[268,271],[271,302],[302,268],[358,423],[423,371],[371,358],[327,294],[294,460],[460,327],[331,279],[279,294],[294,331],[303,271],[271,304],[304,303],[436,432],[432,427],[427,436],[304,272],[272,408],[408,304],[395,394],[394,431],[431,395],[378,395],[395,400],[400,378],[296,334],[334,299],[299,296],[6,351],[351,168],[168,6],[376,352],[352,411],[411,376],[307,325],[325,320],[320,307],[285,295],[295,336],[336,285],[320,319],[319,404],[404,320],[329,330],[330,349],[349,329],[334,293],[293,333],[333,334],[366,323],[323,447],[447,366],[316,15],[15,315],[315,316],[331,358],[358,279],[279,331],[317,14],[14,316],[316,317],[8,285],[285,9],[9,8],[277,329],[329,350],[350,277],[253,374],[374,252],[252,253],[319,318],[318,403],[403,319],[351,6],[6,419],[419,351],[324,318],[318,325],[325,324],[397,367],[367,365],[365,397],[288,435],[435,397],[397,288],[278,344],[344,439],[439,278],[310,272],[272,311],[311,310],[248,195],[195,281],[281,248],[375,273],[273,291],[291,375],[175,396],[396,199],[199,175],[312,311],[311,268],[268,312],[276,283],[283,445],[445,276],[390,373],[373,339],[339,390],[295,282],[282,296],[296,295],[448,449],[449,346],[346,448],[356,264],[264,454],[454,356],[337,336],[336,299],[299,337],[337,338],[338,151],[151,337],[294,278],[278,455],[455,294],[308,292],[292,415],[415,308],[429,358],[358,355],[355,429],[265,340],[340,372],[372,265],[352,346],[346,280],[280,352],[295,442],[442,282],[282,295],[354,19],[19,370],[370,354],[285,441],[441,295],[295,285],[195,248],[248,197],[197,195],[457,440],[440,274],[274,457],[301,300],[300,368],[368,301],[417,351],[351,465],[465,417],[251,301],[301,389],[389,251],[394,395],[395,379],[379,394],[399,412],[412,419],[419,399],[410,436],[436,322],[322,410],[326,2],[2,393],[393,326],[354,370],[370,461],[461,354],[393,164],[164,267],[267,393],[268,302],[302,12],[12,268],[312,268],[268,13],[13,312],[298,293],[293,301],[301,298],[265,446],[446,340],[340,265],[280,330],[330,425],[425,280],[322,426],[426,391],[391,322],[420,429],[429,437],[437,420],[393,391],[391,326],[326,393],[344,440],[440,438],[438,344],[458,459],[459,461],[461,458],[364,434],[434,394],[394,364],[428,396],[396,262],[262,428],[274,354],[354,457],[457,274],[317,316],[316,402],[402,317],[316,315],[315,403],[403,316],[315,314],[314,404],[404,315],[314,313],[313,405],[405,314],[313,421],[421,406],[406,313],[323,366],[366,361],[361,323],[292,306],[306,407],[407,292],[306,291],[291,408],[408,306],[291,287],[287,409],[409,291],[287,432],[432,410],[410,287],[427,434],[434,411],[411,427],[372,264],[264,383],[383,372],[459,309],[309,457],[457,459],[366,352],[352,401],[401,366],[1,274],[274,4],[4,1],[418,421],[421,262],[262,418],[331,294],[294,358],[358,331],[435,433],[433,367],[367,435],[392,289],[289,439],[439,392],[328,462],[462,326],[326,328],[94,2],[2,370],[370,94],[289,305],[305,455],[455,289],[339,254],[254,448],[448,339],[359,255],[255,446],[446,359],[254,253],[253,449],[449,254],[253,252],[252,450],[450,253],[252,256],[256,451],[451,252],[256,341],[341,452],[452,256],[414,413],[413,463],[463,414],[286,441],[441,414],[414,286],[286,258],[258,441],[441,286],[258,257],[257,442],[442,258],[257,259],[259,443],[443,257],[259,260],[260,444],[444,259],[260,467],[467,445],[445,260],[309,459],[459,250],[250,309],[305,289],[289,290],[290,305],[305,290],[290,460],[460,305],[401,376],[376,435],[435,401],[309,250],[250,392],[392,309],[376,411],[411,433],[433,376],[453,341],[341,464],[464,453],[357,453],[453,465],[465,357],[343,357],[357,412],[412,343],[437,343],[343,399],[399,437],[344,360],[360,440],[440,344],[420,437],[437,456],[456,420],[360,420],[420,363],[363,360],[361,401],[401,288],[288,361],[265,372],[372,353],[353,265],[390,339],[339,249],[249,390],[339,448],[448,255],[255,339]);function mu(e){e.j={faceLandmarks:[],faceBlendshapes:[],facialTransformationMatrixes:[]}}var gu=class extends ru{constructor(e,t){super(new Jo(e,t),"image_in","norm_rect",!1),this.j={faceLandmarks:[],faceBlendshapes:[],facialTransformationMatrixes:[]},this.outputFacialTransformationMatrixes=this.outputFaceBlendshapes=!1,yn(e=this.h=new ja,0,1,t=new za),this.v=new Ha,yn(this.h,0,3,this.v),this.s=new Va,yn(this.h,0,2,this.s),En(this.s,4,1),Cn(this.s,2,.5),Cn(this.v,2,.5),Cn(this.h,4,.5)}get baseOptions(){return fn(this.h,za,1)}set baseOptions(e){yn(this.h,0,1,e)}o(e){return"numFaces"in e&&En(this.s,4,e.numFaces??1),"minFaceDetectionConfidence"in e&&Cn(this.s,2,e.minFaceDetectionConfidence??.5),"minTrackingConfidence"in e&&Cn(this.h,4,e.minTrackingConfidence??.5),"minFacePresenceConfidence"in e&&Cn(this.v,2,e.minFacePresenceConfidence??.5),"outputFaceBlendshapes"in e&&(this.outputFaceBlendshapes=!!e.outputFaceBlendshapes),"outputFacialTransformationMatrixes"in e&&(this.outputFacialTransformationMatrixes=!!e.outputFacialTransformationMatrixes),this.l(e)}D(e,t){return mu(this),eu(this,e,t),this.j}F(e,t,n){return mu(this),tu(this,e,n,t),this.j}m(){var e=new ia;sa(e,"image_in"),sa(e,"norm_rect"),aa(e,"face_landmarks");const t=new qs;tr(t,Xa,this.h);const n=new Qs;Ys(n,"mediapipe.tasks.vision.face_landmarker.FaceLandmarkerGraph"),Js(n,"IMAGE:image_in"),Js(n,"NORM_RECT:norm_rect"),Zs(n,"NORM_LANDMARKS:face_landmarks"),n.o(t),ra(e,n),this.g.attachProtoVectorListener("face_landmarks",(e,t)=>{for(const t of e)e=wa(t),this.j.faceLandmarks.push(Fi(e));Qi(this,t)}),this.g.attachEmptyPacketListener("face_landmarks",e=>{Qi(this,e)}),this.outputFaceBlendshapes&&(aa(e,"blendshapes"),Zs(n,"BLENDSHAPES:blendshapes"),this.g.attachProtoVectorListener("blendshapes",(e,t)=>{if(this.outputFaceBlendshapes)for(const t of e)e=da(t),this.j.faceBlendshapes.push(_i(e.g()??[]));Qi(this,t)}),this.g.attachEmptyPacketListener("blendshapes",e=>{Qi(this,e)})),this.outputFacialTransformationMatrixes&&(aa(e,"face_geometry"),Zs(n,"FACE_GEOMETRY:face_geometry"),this.g.attachProtoVectorListener("face_geometry",(e,t)=>{if(this.outputFacialTransformationMatrixes)for(const t of e)(e=fn(Ga(t),va,2))&&this.j.facialTransformationMatrixes.push({rows:kn(In(e,1),0)??0,columns:kn(In(e,2),0)??0,data:tn(e,3,He,en()).slice()??[]});Qi(this,t)}),this.g.attachEmptyPacketListener("face_geometry",e=>{Qi(this,e)})),e=e.g(),this.setGraph(new Uint8Array(e),!0)}};gu.prototype.detectForVideo=gu.prototype.F,gu.prototype.detect=gu.prototype.D,gu.prototype.setOptions=gu.prototype.o,gu.createFromModelPath=function(e,t){return Zo(gu,e,{baseOptions:{modelAssetPath:t}})},gu.createFromModelBuffer=function(e,t){return Zo(gu,e,{baseOptions:{modelAssetBuffer:t}})},gu.createFromOptions=function(e,t){return Zo(gu,e,t)},gu.FACE_LANDMARKS_LIPS=au,gu.FACE_LANDMARKS_LEFT_EYE=iu,gu.FACE_LANDMARKS_LEFT_EYEBROW=ou,gu.FACE_LANDMARKS_LEFT_IRIS=uu,gu.FACE_LANDMARKS_RIGHT_EYE=lu,gu.FACE_LANDMARKS_RIGHT_EYEBROW=cu,gu.FACE_LANDMARKS_RIGHT_IRIS=hu,gu.FACE_LANDMARKS_FACE_OVAL=du,gu.FACE_LANDMARKS_CONTOURS=pu,gu.FACE_LANDMARKS_TESSELATION=fu;var yu=class extends ru{constructor(e,t){super(new Jo(e,t),"image_in","norm_rect",!0),yn(e=this.j=new Ya,0,1,t=new za)}get baseOptions(){return fn(this.j,za,1)}set baseOptions(e){yn(this.j,0,1,e)}o(e){return super.l(e)}Pa(e,t,n){const r="function"!=typeof t?t:{};if(this.h="function"==typeof t?t:n,eu(this,e,r??{}),!this.h)return this.s}m(){var e=new ia;sa(e,"image_in"),sa(e,"norm_rect"),aa(e,"stylized_image");const t=new qs;tr(t,Ja,this.j);const n=new Qs;Ys(n,"mediapipe.tasks.vision.face_stylizer.FaceStylizerGraph"),Js(n,"IMAGE:image_in"),Js(n,"NORM_RECT:norm_rect"),Zs(n,"STYLIZED_IMAGE:stylized_image"),n.o(t),ra(e,n),this.g.V("stylized_image",(e,t)=>{var n=!this.h,r=e.data,s=e.width;const a=s*(e=e.height);if(r instanceof Uint8Array)if(r.length===3*a){const t=new Uint8ClampedArray(4*a);for(let e=0;e<a;++e)t[4*e]=r[3*e],t[4*e+1]=r[3*e+1],t[4*e+2]=r[3*e+2],t[4*e+3]=255;r=new ImageData(t,s,e)}else{if(r.length!==4*a)throw Error("Unsupported channel count: "+r.length/a);r=new ImageData(new Uint8ClampedArray(r.buffer,r.byteOffset,r.length),s,e)}else if(!(r instanceof WebGLTexture))throw Error(`Unsupported format: ${r.constructor.name}`);s=new jo([r],!1,!1,this.g.i.canvas,this.P,s,e),this.s=n=n?s.clone():s,this.h&&this.h(n),Qi(this,t)}),this.g.attachEmptyPacketListener("stylized_image",e=>{this.s=null,this.h&&this.h(null),Qi(this,e)}),e=e.g(),this.setGraph(new Uint8Array(e),!0)}};yu.prototype.stylize=yu.prototype.Pa,yu.prototype.setOptions=yu.prototype.o,yu.createFromModelPath=function(e,t){return Zo(yu,e,{baseOptions:{modelAssetPath:t}})},yu.createFromModelBuffer=function(e,t){return Zo(yu,e,{baseOptions:{modelAssetBuffer:t}})},yu.createFromOptions=function(e,t){return Zo(yu,e,t)};var bu=Ko([0,1],[1,2],[2,3],[3,4],[0,5],[5,6],[6,7],[7,8],[5,9],[9,10],[10,11],[11,12],[9,13],[13,14],[14,15],[15,16],[13,17],[0,17],[17,18],[18,19],[19,20]);function xu(e){e.gestures=[],e.landmarks=[],e.worldLandmarks=[],e.handedness=[]}function wu(e){return 0===e.gestures.length?{gestures:[],landmarks:[],worldLandmarks:[],handedness:[],handednesses:[]}:{gestures:e.gestures,landmarks:e.landmarks,worldLandmarks:e.worldLandmarks,handedness:e.handedness,handednesses:e.handedness}}function vu(e,t=!0){const n=[];for(const s of e){var r=da(s);e=[];for(const n of r.g())r=t&&null!=In(n,1)?kn(In(n,1),0):-1,e.push({score:Sn(n,2)??0,index:r,categoryName:Nn(n,3)??"",displayName:Nn(n,4)??""});n.push(e)}return n}var ku=class extends ru{constructor(e,t){super(new Jo(e,t),"image_in","norm_rect",!1),this.gestures=[],this.landmarks=[],this.worldLandmarks=[],this.handedness=[],yn(e=this.j=new si,0,1,t=new za),this.s=new ri,yn(this.j,0,2,this.s),this.C=new ni,yn(this.s,0,3,this.C),this.v=new ti,yn(this.s,0,2,this.v),this.h=new ei,yn(this.j,0,3,this.h),Cn(this.v,2,.5),Cn(this.s,4,.5),Cn(this.C,2,.5)}get baseOptions(){return fn(this.j,za,1)}set baseOptions(e){yn(this.j,0,1,e)}o(e){if(En(this.v,3,e.numHands??1),"minHandDetectionConfidence"in e&&Cn(this.v,2,e.minHandDetectionConfidence??.5),"minTrackingConfidence"in e&&Cn(this.s,4,e.minTrackingConfidence??.5),"minHandPresenceConfidence"in e&&Cn(this.C,2,e.minHandPresenceConfidence??.5),e.cannedGesturesClassifierOptions){var t=new Za,n=t,r=Ri(e.cannedGesturesClassifierOptions,fn(this.h,Za,3)?.h());yn(n,0,2,r),yn(this.h,0,3,t)}else void 0===e.cannedGesturesClassifierOptions&&fn(this.h,Za,3)?.g();return e.customGesturesClassifierOptions?(yn(n=t=new Za,0,2,r=Ri(e.customGesturesClassifierOptions,fn(this.h,Za,4)?.h())),yn(this.h,0,4,t)):void 0===e.customGesturesClassifierOptions&&fn(this.h,Za,4)?.g(),this.l(e)}Ka(e,t){return xu(this),eu(this,e,t),wu(this)}La(e,t,n){return xu(this),tu(this,e,n,t),wu(this)}m(){var e=new ia;sa(e,"image_in"),sa(e,"norm_rect"),aa(e,"hand_gestures"),aa(e,"hand_landmarks"),aa(e,"world_hand_landmarks"),aa(e,"handedness");const t=new qs;tr(t,li,this.j);const n=new Qs;Ys(n,"mediapipe.tasks.vision.gesture_recognizer.GestureRecognizerGraph"),Js(n,"IMAGE:image_in"),Js(n,"NORM_RECT:norm_rect"),Zs(n,"HAND_GESTURES:hand_gestures"),Zs(n,"LANDMARKS:hand_landmarks"),Zs(n,"WORLD_LANDMARKS:world_hand_landmarks"),Zs(n,"HANDEDNESS:handedness"),n.o(t),ra(e,n),this.g.attachProtoVectorListener("hand_landmarks",(e,t)=>{for(const t of e){e=wa(t);const n=[];for(const t of gn(e,xa,1))n.push({x:Sn(t,1)??0,y:Sn(t,2)??0,z:Sn(t,3)??0,visibility:Sn(t,4)??0});this.landmarks.push(n)}Qi(this,t)}),this.g.attachEmptyPacketListener("hand_landmarks",e=>{Qi(this,e)}),this.g.attachProtoVectorListener("world_hand_landmarks",(e,t)=>{for(const t of e){e=ba(t);const n=[];for(const t of gn(e,ya,1))n.push({x:Sn(t,1)??0,y:Sn(t,2)??0,z:Sn(t,3)??0,visibility:Sn(t,4)??0});this.worldLandmarks.push(n)}Qi(this,t)}),this.g.attachEmptyPacketListener("world_hand_landmarks",e=>{Qi(this,e)}),this.g.attachProtoVectorListener("hand_gestures",(e,t)=>{this.gestures.push(...vu(e,!1)),Qi(this,t)}),this.g.attachEmptyPacketListener("hand_gestures",e=>{Qi(this,e)}),this.g.attachProtoVectorListener("handedness",(e,t)=>{this.handedness.push(...vu(e)),Qi(this,t)}),this.g.attachEmptyPacketListener("handedness",e=>{Qi(this,e)}),e=e.g(),this.setGraph(new Uint8Array(e),!0)}};function Iu(e){return{landmarks:e.landmarks,worldLandmarks:e.worldLandmarks,handednesses:e.handedness,handedness:e.handedness}}ku.prototype.recognizeForVideo=ku.prototype.La,ku.prototype.recognize=ku.prototype.Ka,ku.prototype.setOptions=ku.prototype.o,ku.createFromModelPath=function(e,t){return Zo(ku,e,{baseOptions:{modelAssetPath:t}})},ku.createFromModelBuffer=function(e,t){return Zo(ku,e,{baseOptions:{modelAssetBuffer:t}})},ku.createFromOptions=function(e,t){return Zo(ku,e,t)},ku.HAND_CONNECTIONS=bu;var Su=class extends ru{constructor(e,t){super(new Jo(e,t),"image_in","norm_rect",!1),this.landmarks=[],this.worldLandmarks=[],this.handedness=[],yn(e=this.h=new ri,0,1,t=new za),this.s=new ni,yn(this.h,0,3,this.s),this.j=new ti,yn(this.h,0,2,this.j),En(this.j,3,1),Cn(this.j,2,.5),Cn(this.s,2,.5),Cn(this.h,4,.5)}get baseOptions(){return fn(this.h,za,1)}set baseOptions(e){yn(this.h,0,1,e)}o(e){return"numHands"in e&&En(this.j,3,e.numHands??1),"minHandDetectionConfidence"in e&&Cn(this.j,2,e.minHandDetectionConfidence??.5),"minTrackingConfidence"in e&&Cn(this.h,4,e.minTrackingConfidence??.5),"minHandPresenceConfidence"in e&&Cn(this.s,2,e.minHandPresenceConfidence??.5),this.l(e)}D(e,t){return this.landmarks=[],this.worldLandmarks=[],this.handedness=[],eu(this,e,t),Iu(this)}F(e,t,n){return this.landmarks=[],this.worldLandmarks=[],this.handedness=[],tu(this,e,n,t),Iu(this)}m(){var e=new ia;sa(e,"image_in"),sa(e,"norm_rect"),aa(e,"hand_landmarks"),aa(e,"world_hand_landmarks"),aa(e,"handedness");const t=new qs;tr(t,ci,this.h);const n=new Qs;Ys(n,"mediapipe.tasks.vision.hand_landmarker.HandLandmarkerGraph"),Js(n,"IMAGE:image_in"),Js(n,"NORM_RECT:norm_rect"),Zs(n,"LANDMARKS:hand_landmarks"),Zs(n,"WORLD_LANDMARKS:world_hand_landmarks"),Zs(n,"HANDEDNESS:handedness"),n.o(t),ra(e,n),this.g.attachProtoVectorListener("hand_landmarks",(e,t)=>{for(const t of e)e=wa(t),this.landmarks.push(Fi(e));Qi(this,t)}),this.g.attachEmptyPacketListener("hand_landmarks",e=>{Qi(this,e)}),this.g.attachProtoVectorListener("world_hand_landmarks",(e,t)=>{for(const t of e)e=ba(t),this.worldLandmarks.push(Di(e));Qi(this,t)}),this.g.attachEmptyPacketListener("world_hand_landmarks",e=>{Qi(this,e)}),this.g.attachProtoVectorListener("handedness",(e,t)=>{var n=this.handedness,r=n.push;const s=[];for(const t of e){e=da(t);const n=[];for(const t of e.g())n.push({score:Sn(t,2)??0,index:kn(In(t,1),0)??-1,categoryName:Nn(t,3)??"",displayName:Nn(t,4)??""});s.push(n)}r.call(n,...s),Qi(this,t)}),this.g.attachEmptyPacketListener("handedness",e=>{Qi(this,e)}),e=e.g(),this.setGraph(new Uint8Array(e),!0)}};Su.prototype.detectForVideo=Su.prototype.F,Su.prototype.detect=Su.prototype.D,Su.prototype.setOptions=Su.prototype.o,Su.createFromModelPath=function(e,t){return Zo(Su,e,{baseOptions:{modelAssetPath:t}})},Su.createFromModelBuffer=function(e,t){return Zo(Su,e,{baseOptions:{modelAssetBuffer:t}})},Su.createFromOptions=function(e,t){return Zo(Su,e,t)},Su.HAND_CONNECTIONS=bu;var Nu=Ko([0,1],[1,2],[2,3],[3,7],[0,4],[4,5],[5,6],[6,8],[9,10],[11,12],[11,13],[13,15],[15,17],[15,19],[15,21],[17,19],[12,14],[14,16],[16,18],[16,20],[16,22],[18,20],[11,23],[12,24],[23,24],[23,25],[24,26],[25,27],[26,28],[27,29],[28,30],[29,31],[30,32],[27,31],[28,32]);function Tu(e){e.h={faceLandmarks:[],faceBlendshapes:[],poseLandmarks:[],poseWorldLandmarks:[],poseSegmentationMasks:[],leftHandLandmarks:[],leftHandWorldLandmarks:[],rightHandLandmarks:[],rightHandWorldLandmarks:[]}}function Eu(e){try{if(!e.C)return e.h;e.C(e.h)}finally{no(e)}}function Cu(e,t){e=wa(e),t.push(Fi(e))}var $u=class extends ru{constructor(e,t){super(new Jo(e,t),"input_frames_image",null,!1),this.h={faceLandmarks:[],faceBlendshapes:[],poseLandmarks:[],poseWorldLandmarks:[],poseSegmentationMasks:[],leftHandLandmarks:[],leftHandWorldLandmarks:[],rightHandLandmarks:[],rightHandWorldLandmarks:[]},this.outputPoseSegmentationMasks=this.outputFaceBlendshapes=!1,yn(e=this.j=new fi,0,1,t=new za),this.K=new ni,yn(this.j,0,2,this.K),this.aa=new hi,yn(this.j,0,3,this.aa),this.s=new Va,yn(this.j,0,4,this.s),this.I=new Ha,yn(this.j,0,5,this.I),this.v=new di,yn(this.j,0,6,this.v),this.L=new pi,yn(this.j,0,7,this.L),Cn(this.s,2,.5),Cn(this.s,3,.3),Cn(this.I,2,.5),Cn(this.v,2,.5),Cn(this.v,3,.3),Cn(this.L,2,.5),Cn(this.K,2,.5)}get baseOptions(){return fn(this.j,za,1)}set baseOptions(e){yn(this.j,0,1,e)}o(e){return"minFaceDetectionConfidence"in e&&Cn(this.s,2,e.minFaceDetectionConfidence??.5),"minFaceSuppressionThreshold"in e&&Cn(this.s,3,e.minFaceSuppressionThreshold??.3),"minFacePresenceConfidence"in e&&Cn(this.I,2,e.minFacePresenceConfidence??.5),"outputFaceBlendshapes"in e&&(this.outputFaceBlendshapes=!!e.outputFaceBlendshapes),"minPoseDetectionConfidence"in e&&Cn(this.v,2,e.minPoseDetectionConfidence??.5),"minPoseSuppressionThreshold"in e&&Cn(this.v,3,e.minPoseSuppressionThreshold??.3),"minPosePresenceConfidence"in e&&Cn(this.L,2,e.minPosePresenceConfidence??.5),"outputPoseSegmentationMasks"in e&&(this.outputPoseSegmentationMasks=!!e.outputPoseSegmentationMasks),"minHandLandmarksConfidence"in e&&Cn(this.K,2,e.minHandLandmarksConfidence??.5),this.l(e)}D(e,t,n){const r="function"!=typeof t?t:{};return this.C="function"==typeof t?t:n,Tu(this),eu(this,e,r),Eu(this)}F(e,t,n,r){const s="function"!=typeof n?n:{};return this.C="function"==typeof n?n:r,Tu(this),tu(this,e,s,t),Eu(this)}m(){var e=new ia;sa(e,"input_frames_image"),aa(e,"pose_landmarks"),aa(e,"pose_world_landmarks"),aa(e,"face_landmarks"),aa(e,"left_hand_landmarks"),aa(e,"left_hand_world_landmarks"),aa(e,"right_hand_landmarks"),aa(e,"right_hand_world_landmarks");const t=new qs,n=new Fs;on(n,1,nt("type.googleapis.com/mediapipe.tasks.vision.holistic_landmarker.proto.HolisticLandmarkerGraphOptions"),""),function(e,t){if(null!=t)if(Array.isArray(t))Xt(e,2,zt(t,Bt,void 0,void 0,!1));else{if(!("string"==typeof t||t instanceof z||_(t)))throw Error("invalid value in Any.value field: "+t+" expected a ByteString, a base64 encoded string, a Uint8Array or a jspb array");on(e,2,he(t,!1,!1),O())}}(n,this.j.g());const r=new Qs;Ys(r,"mediapipe.tasks.vision.holistic_landmarker.HolisticLandmarkerGraph"),vn(r,8,Fs,n),Js(r,"IMAGE:input_frames_image"),Zs(r,"POSE_LANDMARKS:pose_landmarks"),Zs(r,"POSE_WORLD_LANDMARKS:pose_world_landmarks"),Zs(r,"FACE_LANDMARKS:face_landmarks"),Zs(r,"LEFT_HAND_LANDMARKS:left_hand_landmarks"),Zs(r,"LEFT_HAND_WORLD_LANDMARKS:left_hand_world_landmarks"),Zs(r,"RIGHT_HAND_LANDMARKS:right_hand_landmarks"),Zs(r,"RIGHT_HAND_WORLD_LANDMARKS:right_hand_world_landmarks"),r.o(t),ra(e,r),eo(this,e),this.g.attachProtoListener("pose_landmarks",(e,t)=>{Cu(e,this.h.poseLandmarks),Qi(this,t)}),this.g.attachEmptyPacketListener("pose_landmarks",e=>{Qi(this,e)}),this.g.attachProtoListener("pose_world_landmarks",(e,t)=>{var n=this.h.poseWorldLandmarks;e=ba(e),n.push(Di(e)),Qi(this,t)}),this.g.attachEmptyPacketListener("pose_world_landmarks",e=>{Qi(this,e)}),this.outputPoseSegmentationMasks&&(Zs(r,"POSE_SEGMENTATION_MASK:pose_segmentation_mask"),to(this,"pose_segmentation_mask"),this.g.V("pose_segmentation_mask",(e,t)=>{this.h.poseSegmentationMasks=[nu(this,e,!0,!this.C)],Qi(this,t)}),this.g.attachEmptyPacketListener("pose_segmentation_mask",e=>{this.h.poseSegmentationMasks=[],Qi(this,e)})),this.g.attachProtoListener("face_landmarks",(e,t)=>{Cu(e,this.h.faceLandmarks),Qi(this,t)}),this.g.attachEmptyPacketListener("face_landmarks",e=>{Qi(this,e)}),this.outputFaceBlendshapes&&(aa(e,"extra_blendshapes"),Zs(r,"FACE_BLENDSHAPES:extra_blendshapes"),this.g.attachProtoListener("extra_blendshapes",(e,t)=>{var n=this.h.faceBlendshapes;this.outputFaceBlendshapes&&(e=da(e),n.push(_i(e.g()??[]))),Qi(this,t)}),this.g.attachEmptyPacketListener("extra_blendshapes",e=>{Qi(this,e)})),this.g.attachProtoListener("left_hand_landmarks",(e,t)=>{Cu(e,this.h.leftHandLandmarks),Qi(this,t)}),this.g.attachEmptyPacketListener("left_hand_landmarks",e=>{Qi(this,e)}),this.g.attachProtoListener("left_hand_world_landmarks",(e,t)=>{var n=this.h.leftHandWorldLandmarks;e=ba(e),n.push(Di(e)),Qi(this,t)}),this.g.attachEmptyPacketListener("left_hand_world_landmarks",e=>{Qi(this,e)}),this.g.attachProtoListener("right_hand_landmarks",(e,t)=>{Cu(e,this.h.rightHandLandmarks),Qi(this,t)}),this.g.attachEmptyPacketListener("right_hand_landmarks",e=>{Qi(this,e)}),this.g.attachProtoListener("right_hand_world_landmarks",(e,t)=>{var n=this.h.rightHandWorldLandmarks;e=ba(e),n.push(Di(e)),Qi(this,t)}),this.g.attachEmptyPacketListener("right_hand_world_landmarks",e=>{Qi(this,e)}),e=e.g(),this.setGraph(new Uint8Array(e),!0)}};$u.prototype.detectForVideo=$u.prototype.F,$u.prototype.detect=$u.prototype.D,$u.prototype.setOptions=$u.prototype.o,$u.createFromModelPath=function(e,t){return Zo($u,e,{baseOptions:{modelAssetPath:t}})},$u.createFromModelBuffer=function(e,t){return Zo($u,e,{baseOptions:{modelAssetBuffer:t}})},$u.createFromOptions=function(e,t){return Zo($u,e,t)},$u.HAND_CONNECTIONS=bu,$u.POSE_CONNECTIONS=Nu,$u.FACE_LANDMARKS_LIPS=au,$u.FACE_LANDMARKS_LEFT_EYE=iu,$u.FACE_LANDMARKS_LEFT_EYEBROW=ou,$u.FACE_LANDMARKS_LEFT_IRIS=uu,$u.FACE_LANDMARKS_RIGHT_EYE=lu,$u.FACE_LANDMARKS_RIGHT_EYEBROW=cu,$u.FACE_LANDMARKS_RIGHT_IRIS=hu,$u.FACE_LANDMARKS_FACE_OVAL=du,$u.FACE_LANDMARKS_CONTOURS=pu,$u.FACE_LANDMARKS_TESSELATION=fu;var Au=class extends ru{constructor(e,t){super(new Jo(e,t),"input_image","norm_rect",!0),this.j={classifications:[]},yn(e=this.h=new yi,0,1,t=new za)}get baseOptions(){return fn(this.h,za,1)}set baseOptions(e){yn(this.h,0,1,e)}o(e){return yn(this.h,0,2,Ri(e,fn(this.h,Ra,2))),this.l(e)}ua(e,t){return this.j={classifications:[]},eu(this,e,t),this.j}va(e,t,n){return this.j={classifications:[]},tu(this,e,n,t),this.j}m(){var e=new ia;sa(e,"input_image"),sa(e,"norm_rect"),aa(e,"classifications");const t=new qs;tr(t,bi,this.h);const n=new Qs;Ys(n,"mediapipe.tasks.vision.image_classifier.ImageClassifierGraph"),Js(n,"IMAGE:input_image"),Js(n,"NORM_RECT:norm_rect"),Zs(n,"CLASSIFICATIONS:classifications"),n.o(t),ra(e,n),this.g.attachProtoListener("classifications",(e,t)=>{this.j=function(e){const t={classifications:gn(e,Sa,1).map(e=>_i(fn(e,ca,4)?.g()??[],kn(In(e,2),0),Nn(e,3)))};return null!=et(jt(e,2))&&(t.timestampMs=kn(et(jt(e,2)),0)),t}(Na(e)),Qi(this,t)}),this.g.attachEmptyPacketListener("classifications",e=>{Qi(this,e)}),e=e.g(),this.setGraph(new Uint8Array(e),!0)}};Au.prototype.classifyForVideo=Au.prototype.va,Au.prototype.classify=Au.prototype.ua,Au.prototype.setOptions=Au.prototype.o,Au.createFromModelPath=function(e,t){return Zo(Au,e,{baseOptions:{modelAssetPath:t}})},Au.createFromModelBuffer=function(e,t){return Zo(Au,e,{baseOptions:{modelAssetBuffer:t}})},Au.createFromOptions=function(e,t){return Zo(Au,e,t)};var Ru=class extends ru{constructor(e,t){super(new Jo(e,t),"image_in","norm_rect",!0),this.h=new xi,this.embeddings={embeddings:[]},yn(e=this.h,0,1,t=new za)}get baseOptions(){return fn(this.h,za,1)}set baseOptions(e){yn(this.h,0,1,e)}o(e){var t=this.h,n=fn(this.h,Ma,2);return n=n?n.clone():new Ma,void 0!==e.l2Normalize?Tn(n,1,e.l2Normalize):"l2Normalize"in e&&Xt(n,1),void 0!==e.quantize?Tn(n,2,e.quantize):"quantize"in e&&Xt(n,2),yn(t,0,2,n),this.l(e)}Ba(e,t){return eu(this,e,t),this.embeddings}Ca(e,t,n){return tu(this,e,n,t),this.embeddings}m(){var e=new ia;sa(e,"image_in"),sa(e,"norm_rect"),aa(e,"embeddings_out");const t=new qs;tr(t,wi,this.h);const n=new Qs;Ys(n,"mediapipe.tasks.vision.image_embedder.ImageEmbedderGraph"),Js(n,"IMAGE:image_in"),Js(n,"NORM_RECT:norm_rect"),Zs(n,"EMBEDDINGS:embeddings_out"),n.o(t),ra(e,n),this.g.attachProtoListener("embeddings_out",(e,t)=>{e=Aa(e),this.embeddings=function(e){return{embeddings:gn(e,Ca,1).map(e=>{const t={headIndex:kn(In(e,3),0)??-1,headName:Nn(e,4)??""};if(void 0!==pn(e,Ta,un(e,1)))e=tn(e=fn(e,Ta,un(e,1)),1,He,en()),t.floatEmbedding=e.slice();else{const n=new Uint8Array(0);t.quantizedEmbedding=fn(e,Ea,un(e,2))?.qa()?.h()??n}return t}),timestampMs:kn(et(jt(e,2)),0)}}(e),Qi(this,t)}),this.g.attachEmptyPacketListener("embeddings_out",e=>{Qi(this,e)}),e=e.g(),this.setGraph(new Uint8Array(e),!0)}};Ru.cosineSimilarity=function(e,t){if(e.floatEmbedding&&t.floatEmbedding)e=Li(e.floatEmbedding,t.floatEmbedding);else{if(!e.quantizedEmbedding||!t.quantizedEmbedding)throw Error("Cannot compute cosine similarity between quantized and float embeddings.");e=Li(Oi(e.quantizedEmbedding),Oi(t.quantizedEmbedding))}return e},Ru.prototype.embedForVideo=Ru.prototype.Ca,Ru.prototype.embed=Ru.prototype.Ba,Ru.prototype.setOptions=Ru.prototype.o,Ru.createFromModelPath=function(e,t){return Zo(Ru,e,{baseOptions:{modelAssetPath:t}})},Ru.createFromModelBuffer=function(e,t){return Zo(Ru,e,{baseOptions:{modelAssetBuffer:t}})},Ru.createFromOptions=function(e,t){return Zo(Ru,e,t)};var _u=class{constructor(e,t,n){this.confidenceMasks=e,this.categoryMask=t,this.qualityScores=n}close(){this.confidenceMasks?.forEach(e=>{e.close()}),this.categoryMask?.close()}};function Mu(e){e.categoryMask=void 0,e.confidenceMasks=void 0,e.qualityScores=void 0}function Fu(e){try{const t=new _u(e.confidenceMasks,e.categoryMask,e.qualityScores);if(!e.j)return t;e.j(t)}finally{no(e)}}_u.prototype.close=_u.prototype.close;var Du=class extends ru{constructor(e,t){super(new Jo(e,t),"image_in","norm_rect",!1),this.s=[],this.outputCategoryMask=!1,this.outputConfidenceMasks=!0,this.h=new Ni,this.v=new vi,yn(this.h,0,3,this.v),yn(e=this.h,0,1,t=new za)}get baseOptions(){return fn(this.h,za,1)}set baseOptions(e){yn(this.h,0,1,e)}o(e){return void 0!==e.displayNamesLocale?Xt(this.h,2,nt(e.displayNamesLocale)):"displayNamesLocale"in e&&Xt(this.h,2),"outputCategoryMask"in e&&(this.outputCategoryMask=e.outputCategoryMask??!1),"outputConfidenceMasks"in e&&(this.outputConfidenceMasks=e.outputConfidenceMasks??!0),super.l(e)}J(){!function(e){const t=gn(e.ea(),Qs,1).filter(e=>Nn(e,1).includes("mediapipe.tasks.TensorsToSegmentationCalculator"));if(e.s=[],t.length>1)throw Error("The graph has more than one mediapipe.tasks.TensorsToSegmentationCalculator.");1===t.length&&(fn(t[0],qs,7)?.l()?.g()??new Map).forEach((t,n)=>{e.s[Number(n)]=Nn(t,1)})}(this)}fa(e,t,n){const r="function"!=typeof t?t:{};return this.j="function"==typeof t?t:n,Mu(this),eu(this,e,r),Fu(this)}Na(e,t,n,r){const s="function"!=typeof n?n:{};return this.j="function"==typeof n?n:r,Mu(this),tu(this,e,s,t),Fu(this)}Fa(){return this.s}m(){var e=new ia;sa(e,"image_in"),sa(e,"norm_rect");const t=new qs;tr(t,Ti,this.h);const n=new Qs;Ys(n,"mediapipe.tasks.vision.image_segmenter.ImageSegmenterGraph"),Js(n,"IMAGE:image_in"),Js(n,"NORM_RECT:norm_rect"),n.o(t),ra(e,n),eo(this,e),this.outputConfidenceMasks&&(aa(e,"confidence_masks"),Zs(n,"CONFIDENCE_MASKS:confidence_masks"),to(this,"confidence_masks"),this.g.da("confidence_masks",(e,t)=>{this.confidenceMasks=e.map(e=>nu(this,e,!0,!this.j)),Qi(this,t)}),this.g.attachEmptyPacketListener("confidence_masks",e=>{this.confidenceMasks=[],Qi(this,e)})),this.outputCategoryMask&&(aa(e,"category_mask"),Zs(n,"CATEGORY_MASK:category_mask"),to(this,"category_mask"),this.g.V("category_mask",(e,t)=>{this.categoryMask=nu(this,e,!1,!this.j),Qi(this,t)}),this.g.attachEmptyPacketListener("category_mask",e=>{this.categoryMask=void 0,Qi(this,e)})),aa(e,"quality_scores"),Zs(n,"QUALITY_SCORES:quality_scores"),this.g.attachFloatVectorListener("quality_scores",(e,t)=>{this.qualityScores=e,Qi(this,t)}),this.g.attachEmptyPacketListener("quality_scores",e=>{this.categoryMask=void 0,Qi(this,e)}),e=e.g(),this.setGraph(new Uint8Array(e),!0)}};Du.prototype.getLabels=Du.prototype.Fa,Du.prototype.segmentForVideo=Du.prototype.Na,Du.prototype.segment=Du.prototype.fa,Du.prototype.setOptions=Du.prototype.o,Du.createFromModelPath=function(e,t){return Zo(Du,e,{baseOptions:{modelAssetPath:t}})},Du.createFromModelBuffer=function(e,t){return Zo(Du,e,{baseOptions:{modelAssetBuffer:t}})},Du.createFromOptions=function(e,t){return Zo(Du,e,t)};var Ou=class{constructor(e,t,n){this.confidenceMasks=e,this.categoryMask=t,this.qualityScores=n}close(){this.confidenceMasks?.forEach(e=>{e.close()}),this.categoryMask?.close()}};Ou.prototype.close=Ou.prototype.close;var Lu=class extends nr{constructor(e){super(e)}},zu=[0,ys,-2],Pu=[0,cs,-3,ws,cs,-1],Bu=[0,Pu],Vu=[0,Pu,ys,-1],Uu=class extends nr{constructor(e){super(e)}},Wu=[0,cs,-1,ws],Gu=class extends nr{constructor(){super()}},Hu=class extends nr{constructor(e){super(e)}},ju=[1,2,3,4,5,6,7,8,9,10,14,15],qu=class extends nr{constructor(){super()}};qu.prototype.g=Ms([0,Ns,[0,ju,Ts,Pu,Ts,[0,Pu,zu],Ts,Bu,Ts,[0,Bu,zu],Ts,Wu,Ts,[0,cs,-3,ws,$s],Ts,[0,cs,-3,ws],Ts,[0,Ss,cs,-2,ws,ys,ws,-1,2,cs,zu],Ts,Vu,Ts,[0,Vu,zu],cs,zu,Ss,Ts,[0,cs,-3,ws,zu,-1],Ts,[0,Ns,Wu]],Ss,[0,Ss,ys,-1,ws]]);var Ku=class extends ru{constructor(e,t){super(new Jo(e,t),"image_in","norm_rect_in",!1),this.outputCategoryMask=!1,this.outputConfidenceMasks=!0,this.h=new Ni,this.s=new vi,yn(this.h,0,3,this.s),yn(e=this.h,0,1,t=new za)}get baseOptions(){return fn(this.h,za,1)}set baseOptions(e){yn(this.h,0,1,e)}o(e){return"outputCategoryMask"in e&&(this.outputCategoryMask=e.outputCategoryMask??!1),"outputConfidenceMasks"in e&&(this.outputConfidenceMasks=e.outputConfidenceMasks??!0),super.l(e)}fa(e,t,n,r){const s="function"!=typeof n?n:{};this.j="function"==typeof n?n:r,this.qualityScores=this.categoryMask=this.confidenceMasks=void 0,n=this.B+1,r=new qu;const a=new Hu;var i=new Lu;if(En(i,1,255),yn(a,0,12,i),t.keypoint&&t.scribble)throw Error("Cannot provide both keypoint and scribble.");if(t.keypoint){var o=new Uu;Tn(o,3,!0),Cn(o,1,t.keypoint.x),Cn(o,2,t.keypoint.y),bn(a,5,ju,o)}else{if(!t.scribble)throw Error("Must provide either a keypoint or a scribble.");for(o of(i=new Gu,t.scribble))Tn(t=new Uu,3,!0),Cn(t,1,o.x),Cn(t,2,o.y),vn(i,1,Uu,t);bn(a,15,ju,i)}vn(r,1,Hu,a),this.g.addProtoToStream(r.g(),"drishti.RenderData","roi_in",n),eu(this,e,s);e:{try{const e=new Ou(this.confidenceMasks,this.categoryMask,this.qualityScores);if(!this.j){var u=e;break e}this.j(e)}finally{no(this)}u=void 0}return u}m(){var e=new ia;sa(e,"image_in"),sa(e,"roi_in"),sa(e,"norm_rect_in");const t=new qs;tr(t,Ti,this.h);const n=new Qs;Ys(n,"mediapipe.tasks.vision.interactive_segmenter.InteractiveSegmenterGraph"),Js(n,"IMAGE:image_in"),Js(n,"ROI:roi_in"),Js(n,"NORM_RECT:norm_rect_in"),n.o(t),ra(e,n),eo(this,e),this.outputConfidenceMasks&&(aa(e,"confidence_masks"),Zs(n,"CONFIDENCE_MASKS:confidence_masks"),to(this,"confidence_masks"),this.g.da("confidence_masks",(e,t)=>{this.confidenceMasks=e.map(e=>nu(this,e,!0,!this.j)),Qi(this,t)}),this.g.attachEmptyPacketListener("confidence_masks",e=>{this.confidenceMasks=[],Qi(this,e)})),this.outputCategoryMask&&(aa(e,"category_mask"),Zs(n,"CATEGORY_MASK:category_mask"),to(this,"category_mask"),this.g.V("category_mask",(e,t)=>{this.categoryMask=nu(this,e,!1,!this.j),Qi(this,t)}),this.g.attachEmptyPacketListener("category_mask",e=>{this.categoryMask=void 0,Qi(this,e)})),aa(e,"quality_scores"),Zs(n,"QUALITY_SCORES:quality_scores"),this.g.attachFloatVectorListener("quality_scores",(e,t)=>{this.qualityScores=e,Qi(this,t)}),this.g.attachEmptyPacketListener("quality_scores",e=>{this.categoryMask=void 0,Qi(this,e)}),e=e.g(),this.setGraph(new Uint8Array(e),!0)}};Ku.prototype.segment=Ku.prototype.fa,Ku.prototype.setOptions=Ku.prototype.o,Ku.createFromModelPath=function(e,t){return Zo(Ku,e,{baseOptions:{modelAssetPath:t}})},Ku.createFromModelBuffer=function(e,t){return Zo(Ku,e,{baseOptions:{modelAssetBuffer:t}})},Ku.createFromOptions=function(e,t){return Zo(Ku,e,t)};var Xu=class extends ru{constructor(e,t){super(new Jo(e,t),"input_frame_gpu","norm_rect",!1),this.j={detections:[]},yn(e=this.h=new Ei,0,1,t=new za)}get baseOptions(){return fn(this.h,za,1)}set baseOptions(e){yn(this.h,0,1,e)}o(e){return void 0!==e.displayNamesLocale?Xt(this.h,2,nt(e.displayNamesLocale)):"displayNamesLocale"in e&&Xt(this.h,2),void 0!==e.maxResults?En(this.h,3,e.maxResults):"maxResults"in e&&Xt(this.h,3),void 0!==e.scoreThreshold?Cn(this.h,4,e.scoreThreshold):"scoreThreshold"in e&&Xt(this.h,4),void 0!==e.categoryAllowlist?$n(this.h,5,e.categoryAllowlist):"categoryAllowlist"in e&&Xt(this.h,5),void 0!==e.categoryDenylist?$n(this.h,6,e.categoryDenylist):"categoryDenylist"in e&&Xt(this.h,6),this.l(e)}D(e,t){return this.j={detections:[]},eu(this,e,t),this.j}F(e,t,n){return this.j={detections:[]},tu(this,e,n,t),this.j}m(){var e=new ia;sa(e,"input_frame_gpu"),sa(e,"norm_rect"),aa(e,"detections");const t=new qs;tr(t,Ci,this.h);const n=new Qs;Ys(n,"mediapipe.tasks.vision.ObjectDetectorGraph"),Js(n,"IMAGE:input_frame_gpu"),Js(n,"NORM_RECT:norm_rect"),Zs(n,"DETECTIONS:detections"),n.o(t),ra(e,n),this.g.attachProtoVectorListener("detections",(e,t)=>{for(const t of e)e=ga(t),this.j.detections.push(Mi(e));Qi(this,t)}),this.g.attachEmptyPacketListener("detections",e=>{Qi(this,e)}),e=e.g(),this.setGraph(new Uint8Array(e),!0)}};Xu.prototype.detectForVideo=Xu.prototype.F,Xu.prototype.detect=Xu.prototype.D,Xu.prototype.setOptions=Xu.prototype.o,Xu.createFromModelPath=async function(e,t){return Zo(Xu,e,{baseOptions:{modelAssetPath:t}})},Xu.createFromModelBuffer=function(e,t){return Zo(Xu,e,{baseOptions:{modelAssetBuffer:t}})},Xu.createFromOptions=function(e,t){return Zo(Xu,e,t)};var Yu=class{constructor(e,t,n){this.landmarks=e,this.worldLandmarks=t,this.segmentationMasks=n}close(){this.segmentationMasks?.forEach(e=>{e.close()})}};function Ju(e){e.landmarks=[],e.worldLandmarks=[],e.segmentationMasks=void 0}function Zu(e){try{const t=new Yu(e.landmarks,e.worldLandmarks,e.segmentationMasks);if(!e.s)return t;e.s(t)}finally{no(e)}}Yu.prototype.close=Yu.prototype.close;var Qu=class extends ru{constructor(e,t){super(new Jo(e,t),"image_in","norm_rect",!1),this.landmarks=[],this.worldLandmarks=[],this.outputSegmentationMasks=!1,yn(e=this.h=new $i,0,1,t=new za),this.v=new pi,yn(this.h,0,3,this.v),this.j=new di,yn(this.h,0,2,this.j),En(this.j,4,1),Cn(this.j,2,.5),Cn(this.v,2,.5),Cn(this.h,4,.5)}get baseOptions(){return fn(this.h,za,1)}set baseOptions(e){yn(this.h,0,1,e)}o(e){return"numPoses"in e&&En(this.j,4,e.numPoses??1),"minPoseDetectionConfidence"in e&&Cn(this.j,2,e.minPoseDetectionConfidence??.5),"minTrackingConfidence"in e&&Cn(this.h,4,e.minTrackingConfidence??.5),"minPosePresenceConfidence"in e&&Cn(this.v,2,e.minPosePresenceConfidence??.5),"outputSegmentationMasks"in e&&(this.outputSegmentationMasks=e.outputSegmentationMasks??!1),this.l(e)}D(e,t,n){const r="function"!=typeof t?t:{};return this.s="function"==typeof t?t:n,Ju(this),eu(this,e,r),Zu(this)}F(e,t,n,r){const s="function"!=typeof n?n:{};return this.s="function"==typeof n?n:r,Ju(this),tu(this,e,s,t),Zu(this)}m(){var e=new ia;sa(e,"image_in"),sa(e,"norm_rect"),aa(e,"normalized_landmarks"),aa(e,"world_landmarks"),aa(e,"segmentation_masks");const t=new qs;tr(t,Ai,this.h);const n=new Qs;Ys(n,"mediapipe.tasks.vision.pose_landmarker.PoseLandmarkerGraph"),Js(n,"IMAGE:image_in"),Js(n,"NORM_RECT:norm_rect"),Zs(n,"NORM_LANDMARKS:normalized_landmarks"),Zs(n,"WORLD_LANDMARKS:world_landmarks"),n.o(t),ra(e,n),eo(this,e),this.g.attachProtoVectorListener("normalized_landmarks",(e,t)=>{this.landmarks=[];for(const t of e)e=wa(t),this.landmarks.push(Fi(e));Qi(this,t)}),this.g.attachEmptyPacketListener("normalized_landmarks",e=>{this.landmarks=[],Qi(this,e)}),this.g.attachProtoVectorListener("world_landmarks",(e,t)=>{this.worldLandmarks=[];for(const t of e)e=ba(t),this.worldLandmarks.push(Di(e));Qi(this,t)}),this.g.attachEmptyPacketListener("world_landmarks",e=>{this.worldLandmarks=[],Qi(this,e)}),this.outputSegmentationMasks&&(Zs(n,"SEGMENTATION_MASK:segmentation_masks"),to(this,"segmentation_masks"),this.g.da("segmentation_masks",(e,t)=>{this.segmentationMasks=e.map(e=>nu(this,e,!0,!this.s)),Qi(this,t)}),this.g.attachEmptyPacketListener("segmentation_masks",e=>{this.segmentationMasks=[],Qi(this,e)})),e=e.g(),this.setGraph(new Uint8Array(e),!0)}};Qu.prototype.detectForVideo=Qu.prototype.F,Qu.prototype.detect=Qu.prototype.D,Qu.prototype.setOptions=Qu.prototype.o,Qu.createFromModelPath=function(e,t){return Zo(Qu,e,{baseOptions:{modelAssetPath:t}})},Qu.createFromModelBuffer=function(e,t){return Zo(Qu,e,{baseOptions:{modelAssetBuffer:t}})},Qu.createFromOptions=function(e,t){return Zo(Qu,e,t)},Qu.POSE_CONNECTIONS=Nu,t.DrawingUtils=Lo,t.FaceDetector=su,t.FaceLandmarker=gu,t.FaceStylizer=yu,t.FilesetResolver=Ui,t.GestureRecognizer=ku,t.HandLandmarker=Su,t.HolisticLandmarker=$u,t.ImageClassifier=Au,t.ImageEmbedder=Ru,t.ImageSegmenter=Du,t.ImageSegmenterResult=_u,t.InteractiveSegmenter=Ku,t.InteractiveSegmenterResult=Ou,t.MPImage=jo,t.MPMask=To,t.ObjectDetector=Xu,t.PoseLandmarker=Qu,t.VisionTaskRunner=ru},951:(e,t,n)=>{"use strict";n.r(t),n.d(t,{Abs:()=>et,Acos:()=>tt,Acosh:()=>nt,AdadeltaOptimizer:()=>Ko,AdagradOptimizer:()=>Yo,AdamOptimizer:()=>Qo,AdamaxOptimizer:()=>au,Add:()=>rt,AddN:()=>st,All:()=>at,Any:()=>it,ArgMax:()=>ot,ArgMin:()=>ut,Asin:()=>lt,Asinh:()=>ct,Atan:()=>ht,Atan2:()=>pt,Atanh:()=>dt,AvgPool:()=>ft,AvgPool3D:()=>gt,AvgPool3DGrad:()=>yt,AvgPoolGrad:()=>mt,BatchMatMul:()=>bt,BatchToSpaceND:()=>xt,Bincount:()=>wt,BitwiseAnd:()=>vt,BroadcastArgs:()=>It,BroadcastTo:()=>kt,Callback:()=>iN,CallbackList:()=>Kx,Cast:()=>St,Ceil:()=>Nt,ClipByValue:()=>Tt,Complex:()=>Et,ComplexAbs:()=>Ct,Concat:()=>$t,Conv2D:()=>At,Conv2DBackpropFilter:()=>Rt,Conv2DBackpropInput:()=>_t,Conv3D:()=>Mt,Conv3DBackpropFilterV2:()=>Ft,Conv3DBackpropInputV2:()=>Dt,Cos:()=>Ot,Cosh:()=>Lt,CropAndResize:()=>Bt,Cumprod:()=>zt,Cumsum:()=>Pt,CustomCallback:()=>Jx,DataStorage:()=>X,DenseBincount:()=>Vt,DepthToSpace:()=>Ut,DepthwiseConv2dNative:()=>Wt,DepthwiseConv2dNativeBackpropFilter:()=>Gt,DepthwiseConv2dNativeBackpropInput:()=>Ht,Diag:()=>jt,Dilation2D:()=>qt,Dilation2DBackpropFilter:()=>Xt,Dilation2DBackpropInput:()=>Kt,Draw:()=>Yt,ENV:()=>Je,EarlyStopping:()=>lN,Einsum:()=>Zt,Elu:()=>Qt,EluGrad:()=>en,Environment:()=>qe,Equal:()=>nn,Erf:()=>tn,Exp:()=>rn,ExpandDims:()=>sn,Expm1:()=>an,FFT:()=>on,Fill:()=>un,FlipLeftRight:()=>ln,Floor:()=>cn,FloorDiv:()=>hn,FromPixels:()=>fs,FusedBatchNorm:()=>dn,FusedConv2D:()=>ys,FusedDepthwiseConv2D:()=>bs,GPGPUContext:()=>TO,GatherNd:()=>fn,GatherV2:()=>pn,GraphModel:()=>$T,Greater:()=>mn,GreaterEqual:()=>gn,History:()=>Yx,IFFT:()=>bn,Identity:()=>yn,Imag:()=>xn,InputSpec:()=>Qb,IsFinite:()=>wn,IsInf:()=>vn,IsNan:()=>kn,KernelBackend:()=>Y,LRN:()=>Dn,LRNGrad:()=>On,LayerVariable:()=>Yb,LayersModel:()=>Xw,LeakyRelu:()=>In,Less:()=>Sn,LessEqual:()=>Nn,LinSpace:()=>Tn,Log:()=>En,Log1p:()=>Cn,LogSoftmax:()=>Mn,LogicalAnd:()=>$n,LogicalNot:()=>An,LogicalOr:()=>Rn,LogicalXor:()=>_n,LowerBound:()=>Fn,MathBackendCPU:()=>UE,MathBackendWebGL:()=>VL,MatrixBandPart:()=>Ln,Max:()=>zn,MaxPool:()=>Bn,MaxPool3D:()=>Un,MaxPool3DGrad:()=>Wn,MaxPoolGrad:()=>Vn,MaxPoolWithArgmax:()=>Gn,Maximum:()=>Pn,Mean:()=>Hn,Min:()=>jn,Minimum:()=>qn,MirrorPad:()=>Kn,Mod:()=>Xn,MomentumOptimizer:()=>ou,Multinomial:()=>Yn,Multiply:()=>Jn,Neg:()=>Zn,NonMaxSuppressionV3:()=>er,NonMaxSuppressionV4:()=>tr,NonMaxSuppressionV5:()=>nr,NotEqual:()=>Qn,OP_SCOPE_SUFFIX:()=>qa,OneHot:()=>sr,OnesLike:()=>rr,Optimizer:()=>qo,OptimizerConstructors:()=>Al,Pack:()=>ar,PadV2:()=>ir,Pool:()=>or,Pow:()=>ur,Prelu:()=>lr,Prod:()=>cr,RMSPropOptimizer:()=>uu,RNN:()=>rk,RaggedGather:()=>hr,RaggedRange:()=>dr,RaggedTensorToTensor:()=>pr,Range:()=>fr,Rank:()=>ga,Real:()=>mr,RealDiv:()=>Jt,Reciprocal:()=>gr,Reduction:()=>mf,Relu:()=>yr,Relu6:()=>Ir,Reshape:()=>br,ResizeBilinear:()=>vr,ResizeBilinearGrad:()=>kr,ResizeNearestNeighbor:()=>xr,ResizeNearestNeighborGrad:()=>wr,Reverse:()=>Sr,RotateWithOffset:()=>ms,Round:()=>Nr,Rsqrt:()=>Tr,SGDOptimizer:()=>iu,ScatterNd:()=>Er,SearchSorted:()=>$r,Select:()=>Ar,Selu:()=>Rr,Sequential:()=>Qw,Sigmoid:()=>Or,Sign:()=>Dr,Sin:()=>Mr,Sinh:()=>Fr,Slice:()=>_r,Softmax:()=>Ur,Softplus:()=>Lr,SpaceToBatchND:()=>Br,SparseFillEmptyRows:()=>Wr,SparseReshape:()=>Gr,SparseSegmentMean:()=>Hr,SparseSegmentSum:()=>jr,SparseToDense:()=>qr,SplitV:()=>Vr,Sqrt:()=>zr,Square:()=>Xr,SquaredDifference:()=>Kr,StaticRegexReplace:()=>Yr,Step:()=>ps,StridedSlice:()=>Jr,StringNGrams:()=>Zr,StringSplit:()=>Qr,StringToHashBucketFast:()=>es,Sub:()=>ts,Sum:()=>Pr,SymbolicTensor:()=>ex,Tan:()=>ns,Tanh:()=>rs,Tensor:()=>pa,TensorBuffer:()=>la,TensorScatterUpdate:()=>Cr,Tile:()=>ss,TopK:()=>as,Transform:()=>is,Transpose:()=>os,Unique:()=>us,Unpack:()=>ls,UnsortedSegmentSum:()=>cs,UpperBound:()=>hs,Variable:()=>ma,ZerosLike:()=>ds,_FusedMatMul:()=>gs,abs:()=>eu,acos:()=>Rl,acosh:()=>_l,add:()=>To,addN:()=>Ml,all:()=>Fl,any:()=>Dl,argMax:()=>Ol,argMin:()=>Ll,asin:()=>zl,asinh:()=>Pl,atan:()=>Bl,atan2:()=>Vl,atanh:()=>Ul,avgPool:()=>ac,avgPool3d:()=>ic,backend:()=>xi,backend_util:()=>y,basicLSTMCell:()=>hc,batchNorm:()=>pc,batchNorm2d:()=>fc,batchNorm3d:()=>mc,batchNorm4d:()=>gc,batchToSpaceND:()=>dc,bincount:()=>yc,bitwiseAnd:()=>bc,booleanMaskAsync:()=>xp,broadcastArgs:()=>xc,broadcastTo:()=>wc,broadcast_util:()=>o,browser:()=>c,buffer:()=>ko,callbacks:()=>cN,cast:()=>Io,ceil:()=>vc,clipByValue:()=>kc,clone:()=>So,complex:()=>Xa,concat:()=>oc,concat1d:()=>Ic,concat2d:()=>Sc,concat3d:()=>Nc,concat4d:()=>Tc,constraints:()=>x,conv1d:()=>Cc,conv2d:()=>Ec,conv2dTranspose:()=>Ac,conv3d:()=>Rc,conv3dTranspose:()=>Mc,copyRegisteredKernels:()=>As,cos:()=>Fc,cosh:()=>Dc,cosineWindow:()=>Tp,cumprod:()=>Oc,cumsum:()=>Lc,customGrad:()=>zo,data:()=>H,denseBincount:()=>zc,deprecationWarn:()=>ri,depthToSpace:()=>Pc,depthwiseConv2d:()=>Bc,deregisterOp:()=>gN,device_util:()=>a,diag:()=>Vc,dilation2d:()=>Uc,disableDeprecationWarnings:()=>ni,dispose:()=>li,disposeVariables:()=>si,div:()=>Co,divNoNan:()=>Hc,dot:()=>jc,dropout:()=>Sp,einsum:()=>qc,elu:()=>Kc,enableDebugMode:()=>ti,enableProdMode:()=>ei,enclosingPowerOfTwo:()=>Np,engine:()=>ai,ensureShape:()=>Xc,env:()=>Xe,equal:()=>Wc,erf:()=>Yc,euclideanNorm:()=>ch,exp:()=>hh,expandDims:()=>dh,expm1:()=>ph,eye:()=>mh,fft:()=>qd,fill:()=>Xo,findBackend:()=>gi,findBackendFactory:()=>yi,floor:()=>gh,floorDiv:()=>Eo,forceHalfFloat:()=>WL,fused:()=>m,gather:()=>yh,gatherND:()=>Ip,gather_util:()=>h,getBackend:()=>fi,getGradient:()=>Ss,getKernel:()=>Is,getKernelsForBackend:()=>Ns,gpgpu_util:()=>K,grad:()=>Mo,grads:()=>Fo,greater:()=>bh,greaterEqual:()=>xh,ifft:()=>Kd,imag:()=>_u,image:()=>Df,inTopKAsync:()=>Ep,initializers:()=>w,input:()=>nv,io:()=>u,irfft:()=>Xd,isFinite:()=>wh,isInf:()=>vh,isNaN:()=>kh,keep:()=>ci,kernel_impls:()=>b,layers:()=>v,leakyRelu:()=>Ih,less:()=>Sh,lessEqual:()=>Nh,linalg:()=>Of,linspace:()=>Th,loadGraphModel:()=>AT,loadGraphModelSync:()=>RT,loadLayersModel:()=>Zw,localResponseNormalization:()=>Eh,log:()=>Ch,log1p:()=>$h,logSigmoid:()=>Rh,logSoftmax:()=>_h,logSumExp:()=>Mh,logicalAnd:()=>Fh,logicalNot:()=>Dh,logicalOr:()=>Oh,logicalXor:()=>Lh,losses:()=>Lf,lowerBound:()=>Bh,matMul:()=>Au,math:()=>l,max:()=>ah,maxPool:()=>Vh,maxPool3d:()=>Uh,maxPoolWithArgmax:()=>Wh,maximum:()=>su,mean:()=>Gh,memory:()=>ii,meshgrid:()=>qh,metrics:()=>k,min:()=>ih,minimum:()=>Kh,mirrorPad:()=>Xh,mod:()=>Yh,model:()=>ev,models:()=>I,moments:()=>Jh,movingAverage:()=>wp,mul:()=>$o,multiRNNCell:()=>Zh,multinomial:()=>Qh,neg:()=>Mu,nextFrame:()=>Uf,norm:()=>lh,notEqual:()=>ed,oneHot:()=>Ru,ones:()=>jh,onesLike:()=>td,op:()=>Ka,outerProduct:()=>nd,pad:()=>rd,pad1d:()=>sd,pad2d:()=>ad,pad3d:()=>id,pad4d:()=>od,pool:()=>ld,pow:()=>Jo,prelu:()=>cd,print:()=>No,prod:()=>hd,profile:()=>oi,raggedGather:()=>dd,raggedRange:()=>pd,raggedTensorToTensor:()=>fd,rand:()=>md,randomGamma:()=>wd,randomNormal:()=>vd,randomStandardNormal:()=>kd,randomUniform:()=>Id,randomUniformInt:()=>Sd,range:()=>Nd,ready:()=>pi,real:()=>Fu,reciprocal:()=>Td,registerBackend:()=>bi,registerCallbackConstructor:()=>rv,registerGradient:()=>Es,registerKernel:()=>Ts,registerOp:()=>fN,regularizers:()=>S,relu:()=>Ed,relu6:()=>Cd,removeBackend:()=>mi,reshape:()=>sc,reverse:()=>$d,reverse1d:()=>Ad,reverse2d:()=>Rd,reverse3d:()=>_d,reverse4d:()=>Md,rfft:()=>Jd,round:()=>Fd,rsqrt:()=>Dd,scalar:()=>Bo,scatterND:()=>vp,scatter_util:()=>d,searchSorted:()=>Ph,selu:()=>Od,separableConv2d:()=>Ld,sequential:()=>tv,serialization:()=>i,setBackend:()=>di,setPlatform:()=>wi,setWebGLContext:()=>vF,setdiff1dAsync:()=>zd,shared:()=>j,sigmoid:()=>uc,sign:()=>Pd,signal:()=>Ff,sin:()=>Bd,sinh:()=>Vd,slice:()=>lc,slice1d:()=>Ud,slice2d:()=>Wd,slice3d:()=>Gd,slice4d:()=>Hd,slice_util:()=>p,softmax:()=>jd,softplus:()=>Ah,spaceToBatchND:()=>ud,sparse:()=>zf,sparseToDense:()=>kp,spectral:()=>Mf,split:()=>Yd,sqrt:()=>Ao,square:()=>Ro,squaredDifference:()=>Zd,squeeze:()=>Qd,stack:()=>ep,step:()=>tp,stridedSlice:()=>np,string:()=>Pf,sub:()=>Zo,sum:()=>oh,sumOutType:()=>Ia,tan:()=>rp,tanh:()=>cc,tensor:()=>Ja,tensor1d:()=>sp,tensor2d:()=>ap,tensor3d:()=>Lu,tensor4d:()=>ip,tensor5d:()=>op,tensor6d:()=>up,tensorScatterUpdate:()=>lp,tensor_util:()=>s,test_util:()=>f,tidy:()=>ui,tile:()=>fh,time:()=>hi,topk:()=>cp,train:()=>Bf,transpose:()=>Du,truncatedNormal:()=>hp,unique:()=>dp,unregisterGradient:()=>$s,unregisterKernel:()=>Cs,unsortedSegmentSum:()=>pp,unstack:()=>fp,upcastType:()=>ka,upperBound:()=>mp,util:()=>r,valueAndGrad:()=>Do,valueAndGrads:()=>Oo,variable:()=>gp,variableGrads:()=>Lo,version:()=>DG,version_converter:()=>_T,version_core:()=>$l,version_cpu:()=>pA,version_layers:()=>Rw,version_webgl:()=>UL,webgl:()=>GL,webgl_util:()=>q,where:()=>Gc,whereAsync:()=>bp,zeros:()=>Hh,zerosLike:()=>_o});var r={};n.r(r),n.d(r,{arraysEqual:()=>de,arraysEqualWithNull:()=>he,assert:()=>ie,assertNonNegativeIntegerDimensions:()=>Ue,assertNonNull:()=>ue,assertShapesMatch:()=>oe,bytesFromStringArray:()=>Ce,bytesPerElement:()=>Ee,checkConversionForErrors:()=>Se,clamp:()=>ee,computeStrides:()=>De,convertBackendValuesAndArrayBuffer:()=>ze,createScalarValue:()=>qs,createShuffledIndices:()=>ge,decodeString:()=>Zs,distSquared:()=>ae,encodeString:()=>Js,fetch:()=>Ys,fingerPrint64:()=>js,flatten:()=>ea,getArrayFromDType:()=>Ie,getTypedArrayFromDType:()=>ke,hasEncodingLoss:()=>Te,hexToLong:()=>Ds,indexToLoc:()=>Ge,inferDtype:()=>_e,inferFromImplicitShape:()=>xe,isBoolean:()=>Ae,isFunction:()=>Me,isInt:()=>pe,isNumber:()=>Re,isPromise:()=>He,isScalarShape:()=>ce,isString:()=>$e,isTypedArray:()=>Qs,isValidDtype:()=>Ne,locToIndex:()=>We,makeOnesTypedArray:()=>Pe,makeZerosNestedTypedArray:()=>Ve,makeZerosTypedArray:()=>Be,nearestDivisor:()=>Fe,nearestLargerEven:()=>te,now:()=>Xs,parseAxisParam:()=>we,randUniform:()=>se,repeatedTry:()=>be,rightPad:()=>ye,shuffle:()=>Z,shuffleCombo:()=>Q,sizeFromShape:()=>le,sizeToSquarishShape:()=>me,squeezeShape:()=>ve,sum:()=>re,swap:()=>ne,tanh:()=>fe,toNestedArray:()=>Le,toTypedArray:()=>Ks});var s={};n.r(s),n.d(s,{assertTypesMatch:()=>Ea,getTensorsInContainer:()=>$a,isTensorInList:()=>Ca,makeTypesMatch:()=>Ta});var a={};n.r(a),n.d(a,{isBrowser:()=>Ba,isMobile:()=>Pa,mockIsMobile:()=>za});var i={};n.r(i),n.d(i,{Serializable:()=>Wo,SerializationMap:()=>Go,getRegisteredName:()=>jo,registerClass:()=>Ho});var o={};n.r(o),n.d(o,{assertAndGetBroadcastShape:()=>ru,getBroadcastDims:()=>tu,getReductionAxes:()=>nu});var u={};n.r(u),n.d(u,{CompositeArrayBuffer:()=>Qa,browserFiles:()=>pu,browserHTTPRequest:()=>ku,concatenateArrayBuffers:()=>_i,copyModel:()=>bo,decodeWeights:()=>Ii,decodeWeightsStream:()=>Ci,encodeWeights:()=>ki,fromMemory:()=>Tu,fromMemorySync:()=>Eu,getLoadHandlers:()=>Wi,getModelArtifactsForJSON:()=>Oi,getModelArtifactsForJSONSync:()=>Di,getModelArtifactsInfoForJSON:()=>Li,getSaveHandlers:()=>Ui,getWeightSpecs:()=>zi,http:()=>vu,isHTTPScheme:()=>xu,listModels:()=>go,loadWeights:()=>gu,moveModel:()=>xo,registerLoadRouter:()=>Vi,registerSaveRouter:()=>Bi,removeModel:()=>yo,weightsLoaderFactory:()=>yu,withSaveHandler:()=>Cu,withSaveHandlerSync:()=>$u});var l={};n.r(l),n.d(l,{confusionMatrix:()=>Ou});var c={};n.r(c),n.d(c,{draw:()=>Gu,fromPixels:()=>Hu,fromPixelsAsync:()=>Vu,toPixels:()=>Wu});var h={};n.r(h),n.d(h,{prepareAndValidate:()=>ju});var d={};n.r(d),n.d(d,{calculateShapes:()=>Xu,validateInput:()=>Ku,validateUpdateShape:()=>qu});var p={};n.r(p),n.d(p,{assertParamsValid:()=>Zu,computeFlatOffset:()=>hl,computeOutShape:()=>el,getNormalizedAxes:()=>sl,isSliceContinous:()=>cl,maskToAxes:()=>Qu,parseSliceParams:()=>dl,sliceInfo:()=>pl,startForAxis:()=>ul,startIndicesWithElidedDims:()=>al,stopForAxis:()=>ll,stopIndicesWithElidedDims:()=>il,stridesForAxis:()=>ol,stridesWithElidedDims:()=>tl});var f={};n.r(f),n.d(f,{TEST_EPSILON_FLOAT16:()=>gl,createVideoElement:()=>El,encodeStrings:()=>Tl,expectArrayBuffersEqual:()=>Nl,expectArraysClose:()=>yl,expectArraysEqual:()=>vl,expectNumbersClose:()=>kl,expectPromiseToFail:()=>wl,expectValuesInRange:()=>Sl,play:()=>Cl,testEpsilon:()=>bl});var m={};n.r(m),n.d(m,{conv2d:()=>Mp,depthwiseConv2d:()=>Op,matMul:()=>Lp});var g={};n.r(g),n.d(g,{collectGatherOpShapeInfo:()=>Hm,computeOutShape:()=>Gm,segOpComputeOptimalWindowSize:()=>Wm});var y={};n.r(y),n.d(y,{ERF_A1:()=>om,ERF_A2:()=>um,ERF_A3:()=>lm,ERF_A4:()=>cm,ERF_A5:()=>hm,ERF_P:()=>im,PARALLELIZE_THRESHOLD:()=>Yf,RowPartitionType:()=>Hf,SELU_SCALE:()=>am,SELU_SCALEALPHA:()=>sm,applyActivation:()=>Rp,assertAndGetBroadcastShape:()=>ru,assertAxesAreInnerMostDims:()=>th,assertParamsConsistent:()=>Wf,assignToTypedArray:()=>ym,axesAreInnerMostDims:()=>Jc,calculateShapes:()=>Xu,checkEinsumDimSizes:()=>Tm,checkPadOnDimRoundingMode:()=>rc,combineLocations:()=>Zc,combineRaggedTensorToTensorShapes:()=>jf,complexWithEvenIndex:()=>fm,complexWithOddIndex:()=>mm,computeConv2DInfo:()=>jl,computeConv3DInfo:()=>ql,computeDefaultPad:()=>Kl,computeDilation2DInfo:()=>Wl,computeOptimalWindowSize:()=>Jf,computeOutAndReduceShapes:()=>Qc,computeOutShape:()=>Gf,computePool2DInfo:()=>Gl,computePool3DInfo:()=>Hl,convertConv2DDataFormat:()=>nc,decodeEinsumEquation:()=>Sm,eitherStridesOrDilationsAreOne:()=>ec,expandShapeToKeepDim:()=>eh,exponent:()=>xm,exponents:()=>bm,fromStringArrayToUint8:()=>qm,fromUint8ToStringArray:()=>jm,getAxesPermutation:()=>nh,getBroadcastDims:()=>tu,getComplexWithIndex:()=>gm,getEinsumComputePath:()=>Em,getEinsumPermutation:()=>Nm,getFusedBiasGradient:()=>Ap,getFusedDyActivation:()=>$p,getImageCenter:()=>Zf,getInnerMostAxes:()=>sh,getPermuted:()=>em,getRaggedRank:()=>Kf,getReductionAxes:()=>nu,getReshaped:()=>Qf,getReshapedPermuted:()=>tm,getRowPartitionTypesHelper:()=>qf,getSliceBeginCoords:()=>nm,getSliceSize:()=>rm,getSparseFillEmptyRowsIndicesDenseShapeMismatch:()=>Rm,getSparseFillEmptyRowsNegativeIndexErrorMessage:()=>_m,getSparseFillEmptyRowsOutOfRangeIndexErrorMessage:()=>Mm,getSparseReshapeEmptyTensorZeroOutputDimErrorMessage:()=>Om,getSparseReshapeInputOutputMismatchErrorMessage:()=>zm,getSparseReshapeInputOutputMultipleErrorMessage:()=>Lm,getSparseReshapeMultipleNegativeOneOutputDimErrorMessage:()=>Fm,getSparseReshapeNegativeOutputDimErrorMessage:()=>Dm,getSparseSegmentReductionIndicesOutOfRangeErrorMessage:()=>Um,getSparseSegmentReductionNegativeSegmentIdsErrorMessage:()=>Pm,getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage:()=>Bm,getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage:()=>Vm,getUndoAxesPermutation:()=>rh,isIdentityPermutation:()=>Cm,log:()=>ws,mergeRealAndImagArrays:()=>dm,prepareAndValidate:()=>ju,prepareSplitSize:()=>Am,segment_util:()=>g,shouldFuse:()=>_p,slice_util:()=>p,splitRealAndImagArrays:()=>pm,stridesOrDilationsArePositive:()=>tc,tupleValuesAreOne:()=>Ql,upcastType:()=>ka,validateDefaultValueShape:()=>Xf,validateInput:()=>Ku,validateUpdateShape:()=>qu,warn:()=>xs});var b={};n.r(b),n.d(b,{nonMaxSuppressionV3Impl:()=>Jp,nonMaxSuppressionV4Impl:()=>Zp,nonMaxSuppressionV5Impl:()=>Qp,whereImpl:()=>yp});var x={};n.r(x),n.d(x,{maxNorm:()=>Nx,minMaxNorm:()=>Cx,nonNeg:()=>Ex,unitNorm:()=>Tx});var w={};n.r(w),n.d(w,{constant:()=>Rx,glorotNormal:()=>zx,glorotUniform:()=>Lx,heNormal:()=>Px,heUniform:()=>Bx,identity:()=>Dx,leCunNormal:()=>Vx,leCunUniform:()=>Ux,ones:()=>Ax,orthogonal:()=>Wx,randomNormal:()=>Mx,randomUniform:()=>_x,truncatedNormal:()=>Fx,varianceScaling:()=>Ox,zeros:()=>$x});var v={};n.r(v),n.d(v,{Layer:()=>sx,RNN:()=>rk,RNNCell:()=>sk,activation:()=>DI,add:()=>GI,alphaDropout:()=>FS,average:()=>HI,averagePooling1d:()=>eS,averagePooling2d:()=>rS,averagePooling3d:()=>iS,avgPool1d:()=>tS,avgPool2d:()=>sS,avgPool3d:()=>oS,avgPooling1d:()=>nS,avgPooling2d:()=>aS,avgPooling3d:()=>uS,batchNormalization:()=>JI,bidirectional:()=>TS,categoryEncoding:()=>PS,centerCrop:()=>LS,concatenate:()=>jI,conv1d:()=>TI,conv2d:()=>EI,conv2dTranspose:()=>CI,conv3d:()=>$I,conv3dTranspose:()=>AI,convLstm2d:()=>kS,convLstm2dCell:()=>IS,cropping2D:()=>_I,dense:()=>OI,depthwiseConv2d:()=>FI,dot:()=>YI,dropout:()=>LI,elu:()=>wI,embedding:()=>WI,flatten:()=>PI,gaussianDropout:()=>MS,gaussianNoise:()=>_S,globalAveragePooling1d:()=>lS,globalAveragePooling2d:()=>cS,globalMaxPool1d:()=>CS,globalMaxPool2d:()=>$S,globalMaxPooling1d:()=>hS,globalMaxPooling2d:()=>dS,gru:()=>gS,gruCell:()=>yS,input:()=>nv,inputLayer:()=>xI,layerNormalization:()=>ZI,leakyReLU:()=>kI,lstm:()=>bS,lstmCell:()=>xS,masking:()=>DS,maxPool1d:()=>AS,maxPool2d:()=>RS,maxPooling1d:()=>pS,maxPooling2d:()=>fS,maxPooling3d:()=>mS,maximum:()=>qI,minimum:()=>KI,multiply:()=>XI,permute:()=>UI,prelu:()=>II,randomWidth:()=>BS,reLU:()=>vI,repeatVector:()=>BI,rescaling:()=>OS,reshape:()=>VI,resizing:()=>zS,rnn:()=>SS,separableConv2d:()=>RI,simpleRNN:()=>wS,simpleRNNCell:()=>vS,softmax:()=>SI,spatialDropout1d:()=>zI,stackedRNNCells:()=>NS,thresholdedReLU:()=>NI,timeDistributed:()=>ES,upSampling2d:()=>MI,zeroPadding2d:()=>QI});var k={};n.r(k),n.d(k,{MAPE:()=>JS,MSE:()=>eN,binaryAccuracy:()=>VS,binaryCrossentropy:()=>US,categoricalAccuracy:()=>GS,categoricalCrossentropy:()=>HS,cosineProximity:()=>KS,mape:()=>ZS,meanAbsoluteError:()=>XS,meanAbsolutePercentageError:()=>YS,meanSquaredError:()=>QS,mse:()=>tN,precision:()=>jS,r2Score:()=>nN,recall:()=>qS,sparseCategoricalAccuracy:()=>WS});var I={};n.r(I),n.d(I,{modelFromJSON:()=>Jw});var S={};n.r(S),n.d(S,{l1:()=>sN,l1l2:()=>rN,l2:()=>aN});var N={};n.r(N),n.d(N,{json:()=>NN});var T={};n.r(T),n.d(T,{json:()=>TN});var E={};n.r(E),n.d(E,{json:()=>EN});var C={};n.r(C),n.d(C,{json:()=>CN});var $={};n.r($),n.d($,{json:()=>$N});var A={};n.r(A),n.d(A,{json:()=>AN});var R={};n.r(R),n.d(R,{json:()=>RN});var _={};n.r(_),n.d(_,{json:()=>_N});var M={};n.r(M),n.d(M,{json:()=>MN});var F={};n.r(F),n.d(F,{json:()=>FN});var D={};n.r(D),n.d(D,{json:()=>DN});var O={};n.r(O),n.d(O,{json:()=>ON});var L={};n.r(L),n.d(L,{json:()=>LN});var z={};n.r(z),n.d(z,{json:()=>zN});var P={};n.r(P),n.d(P,{json:()=>PN});var B={};n.r(B),n.d(B,{json:()=>BN});var V={};n.r(V),n.d(V,{json:()=>VN});var U={};n.r(U),n.d(U,{json:()=>UN});var W={};n.r(W),n.d(W,{json:()=>WN});var G={};n.r(G),n.d(G,{OP_SCOPE_SUFFIX:()=>qa,abs:()=>eu,acos:()=>Rl,acosh:()=>_l,add:()=>To,addN:()=>Ml,all:()=>Fl,any:()=>Dl,argMax:()=>Ol,argMin:()=>Ll,asin:()=>zl,asinh:()=>Pl,atan:()=>Bl,atan2:()=>Vl,atanh:()=>Ul,avgPool:()=>ac,avgPool3d:()=>ic,basicLSTMCell:()=>hc,batchNorm:()=>pc,batchNorm2d:()=>fc,batchNorm3d:()=>mc,batchNorm4d:()=>gc,batchToSpaceND:()=>dc,bincount:()=>yc,bitwiseAnd:()=>bc,booleanMaskAsync:()=>xp,broadcastArgs:()=>xc,broadcastTo:()=>wc,buffer:()=>ko,cast:()=>Io,ceil:()=>vc,clipByValue:()=>kc,clone:()=>So,complex:()=>Xa,concat:()=>oc,concat1d:()=>Ic,concat2d:()=>Sc,concat3d:()=>Nc,concat4d:()=>Tc,conv1d:()=>Cc,conv2d:()=>Ec,conv2dTranspose:()=>Ac,conv3d:()=>Rc,conv3dTranspose:()=>Mc,cos:()=>Fc,cosh:()=>Dc,cosineWindow:()=>Tp,cumprod:()=>Oc,cumsum:()=>Lc,denseBincount:()=>zc,depthToSpace:()=>Pc,depthwiseConv2d:()=>Bc,diag:()=>Vc,dilation2d:()=>Uc,div:()=>Co,divNoNan:()=>Hc,dot:()=>jc,dropout:()=>Sp,einsum:()=>qc,elu:()=>Kc,enclosingPowerOfTwo:()=>Np,ensureShape:()=>Xc,equal:()=>Wc,erf:()=>Yc,euclideanNorm:()=>ch,exp:()=>hh,expandDims:()=>dh,expm1:()=>ph,eye:()=>mh,fft:()=>qd,fill:()=>Xo,floor:()=>gh,floorDiv:()=>Eo,fused:()=>m,gather:()=>yh,gatherND:()=>Ip,greater:()=>bh,greaterEqual:()=>xh,ifft:()=>Kd,imag:()=>_u,image:()=>Df,inTopKAsync:()=>Ep,irfft:()=>Xd,isFinite:()=>wh,isInf:()=>vh,isNaN:()=>kh,leakyRelu:()=>Ih,less:()=>Sh,lessEqual:()=>Nh,linalg:()=>Of,linspace:()=>Th,localResponseNormalization:()=>Eh,log:()=>Ch,log1p:()=>$h,logSigmoid:()=>Rh,logSoftmax:()=>_h,logSumExp:()=>Mh,logicalAnd:()=>Fh,logicalNot:()=>Dh,logicalOr:()=>Oh,logicalXor:()=>Lh,losses:()=>Lf,lowerBound:()=>Bh,matMul:()=>Au,max:()=>ah,maxPool:()=>Vh,maxPool3d:()=>Uh,maxPoolWithArgmax:()=>Wh,maximum:()=>su,mean:()=>Gh,meshgrid:()=>qh,min:()=>ih,minimum:()=>Kh,mirrorPad:()=>Xh,mod:()=>Yh,moments:()=>Jh,movingAverage:()=>wp,mul:()=>$o,multiRNNCell:()=>Zh,multinomial:()=>Qh,neg:()=>Mu,norm:()=>lh,notEqual:()=>ed,oneHot:()=>Ru,ones:()=>jh,onesLike:()=>td,op:()=>Ka,outerProduct:()=>nd,pad:()=>rd,pad1d:()=>sd,pad2d:()=>ad,pad3d:()=>id,pad4d:()=>od,pool:()=>ld,pow:()=>Jo,prelu:()=>cd,print:()=>No,prod:()=>hd,raggedGather:()=>dd,raggedRange:()=>pd,raggedTensorToTensor:()=>fd,rand:()=>md,randomGamma:()=>wd,randomNormal:()=>vd,randomStandardNormal:()=>kd,randomUniform:()=>Id,randomUniformInt:()=>Sd,range:()=>Nd,real:()=>Fu,reciprocal:()=>Td,relu:()=>Ed,relu6:()=>Cd,reshape:()=>sc,reverse:()=>$d,reverse1d:()=>Ad,reverse2d:()=>Rd,reverse3d:()=>_d,reverse4d:()=>Md,rfft:()=>Jd,round:()=>Fd,rsqrt:()=>Dd,scalar:()=>Bo,scatterND:()=>vp,searchSorted:()=>Ph,selu:()=>Od,separableConv2d:()=>Ld,setdiff1dAsync:()=>zd,sigmoid:()=>uc,sign:()=>Pd,signal:()=>Ff,sin:()=>Bd,sinh:()=>Vd,slice:()=>lc,slice1d:()=>Ud,slice2d:()=>Wd,slice3d:()=>Gd,slice4d:()=>Hd,softmax:()=>jd,softplus:()=>Ah,spaceToBatchND:()=>ud,sparse:()=>zf,sparseToDense:()=>kp,spectral:()=>Mf,split:()=>Yd,sqrt:()=>Ao,square:()=>Ro,squaredDifference:()=>Zd,squeeze:()=>Qd,stack:()=>ep,step:()=>tp,stridedSlice:()=>np,string:()=>Pf,sub:()=>Zo,sum:()=>oh,tan:()=>rp,tanh:()=>cc,tensor:()=>Ja,tensor1d:()=>sp,tensor2d:()=>ap,tensor3d:()=>Lu,tensor4d:()=>ip,tensor5d:()=>op,tensor6d:()=>up,tensorScatterUpdate:()=>lp,tile:()=>fh,topk:()=>cp,transpose:()=>Du,truncatedNormal:()=>hp,unique:()=>dp,unsortedSegmentSum:()=>pp,unstack:()=>fp,upperBound:()=>mp,variable:()=>gp,where:()=>Gc,whereAsync:()=>bp,zeros:()=>Hh,zerosLike:()=>_o});var H={};n.r(H),n.d(H,{CSVDataset:()=>wE,Dataset:()=>uE,FileDataSource:()=>_E,TextLineDataset:()=>pE,URLDataSource:()=>ME,array:()=>cE,csv:()=>FE,func:()=>DE,generator:()=>OE,microphone:()=>zE,version_data:()=>PE,webcam:()=>LE,zip:()=>hE});var j={};n.r(j),n.d(j,{addImpl:()=>sC,bincountImpl:()=>uC,bincountReduceImpl:()=>lC,bitwiseAndImpl:()=>cC,castImpl:()=>QE,ceilImpl:()=>gC,concatImpl:()=>xC,equalImpl:()=>wC,expImpl:()=>IC,expm1Impl:()=>TC,floorDivImpl:()=>_C,floorImpl:()=>$C,gatherNdImpl:()=>DC,gatherV2Impl:()=>OC,greaterEqualImpl:()=>BC,greaterImpl:()=>LC,lessEqualImpl:()=>jC,lessImpl:()=>WC,linSpaceImpl:()=>XC,logImpl:()=>YC,maxImpl:()=>QC,maximumImpl:()=>e$,minimumImpl:()=>r$,multiplyImpl:()=>i$,negImpl:()=>c$,notEqualImpl:()=>d$,prodImpl:()=>b$,raggedGatherImpl:()=>v$,raggedRangeImpl:()=>I$,raggedTensorToTensorImpl:()=>C$,rangeImpl:()=>$$,rsqrtImpl:()=>A$,scatterImpl:()=>M$,sigmoidImpl:()=>F$,simpleAbsImpl:()=>WE,sliceImpl:()=>L$,sparseFillEmptyRowsImpl:()=>B$,sparseReshapeImpl:()=>V$,sparseSegmentReductionImpl:()=>U$,sqrtImpl:()=>W$,squaredDifferenceImpl:()=>j$,staticRegexReplaceImpl:()=>X$,stridedSliceImpl:()=>Z$,stringNGramsImpl:()=>eA,stringSplitImpl:()=>nA,stringToHashBucketFastImpl:()=>rA,subImpl:()=>sA,tileImpl:()=>uA,topKImpl:()=>hA,transposeImpl:()=>m$,uniqueImpl:()=>dA});var q={};n.r(q),n.d(q,{assertNotComplex:()=>ED,bindCanvasToFramebuffer:()=>tD,bindColorTextureToFramebuffer:()=>nD,bindTextureToProgramUniformSampler:()=>eD,bindTextureUnit:()=>YF,bindVertexBufferToProgramAttribute:()=>XF,callAndCheck:()=>AF,canBeRepresented:()=>MF,createFragmentShader:()=>LF,createFramebuffer:()=>KF,createProgram:()=>BF,createStaticIndexBuffer:()=>GF,createStaticVertexBuffer:()=>WF,createTexture:()=>jF,createVertexShader:()=>OF,getBatchDim:()=>uD,getExtensionOrThrow:()=>DF,getFramebufferErrorMessage:()=>aD,getMaxTexturesInShader:()=>xD,getNumChannels:()=>HF,getProgramUniformLocation:()=>QF,getProgramUniformLocationOrThrow:()=>ZF,getRowsCols:()=>lD,getShapeAs3D:()=>cD,getTextureShapeFromLogicalShape:()=>hD,getWebGLDisjointQueryTimerVersion:()=>wD,getWebGLErrorMessage:()=>FF,getWebGLMaxTextureSize:()=>gD,hasExtension:()=>vD,isCapableOfRenderingToFloatTexture:()=>ID,isDownloadFloatTextureEnabled:()=>SD,isReshapeFree:()=>pD,isWebGLFenceEnabled:()=>TD,isWebGLVersionEnabled:()=>kD,linkProgram:()=>VF,logShaderSourceAndInfoLog:()=>PF,resetMaxTextureSize:()=>yD,resetMaxTexturesInShader:()=>bD,unbindColorTextureFromFramebuffer:()=>rD,unbindTextureUnit:()=>JF,validateFramebuffer:()=>sD,validateProgram:()=>UF,validateTextureSize:()=>qF});var K={};n.r(K),n.d(K,{bindVertexProgramAttributeStreams:()=>bO,createBufferFromOutputTexture:()=>vO,createFloat16MatrixTexture:()=>hO,createFloat16PackedMatrixTexture:()=>yO,createFloat32MatrixTexture:()=>lO,createIndexBuffer:()=>iO,createPackedMatrixTexture:()=>mO,createUnsignedBytesMatrixTexture:()=>pO,createVertexBuffer:()=>aO,createVertexShader:()=>sO,downloadByteEncodedFloatMatrixFromOutputTexture:()=>IO,downloadFloat32MatrixFromBuffer:()=>kO,downloadMatrixFromPackedOutputTexture:()=>NO,downloadPackedMatrixFromBuffer:()=>SO,getInternalFormatForFloat16MatrixTexture:()=>cO,getInternalFormatForFloat16PackedMatrixTexture:()=>gO,getInternalFormatForFloat32MatrixTexture:()=>uO,getInternalFormatForPackedMatrixTexture:()=>fO,getInternalFormatForUnsignedBytesMatrixTexture:()=>dO,uploadDenseMatrixToTexture:()=>xO,uploadPixelDataToTexture:()=>wO});class X{constructor(e,t){this.backend=e,this.dataMover=t,this.data=new WeakMap,this.dataIdsCount=0}get(e){return this.data.has(e)||this.dataMover.moveData(this.backend,e),this.data.get(e)}set(e,t){this.dataIdsCount++,this.data.set(e,t)}has(e){return this.data.has(e)}delete(e){return this.dataIdsCount--,this.data.delete(e)}numDataIds(){return this.dataIdsCount}}class Y{refCount(e){return J("refCount")}incRef(e){return J("incRef")}timerAvailable(){return!0}time(e){return J("time")}read(e){return J("read")}readSync(e){return J("readSync")}readToGPU(e,t){return J("readToGPU")}numDataIds(){return J("numDataIds")}disposeData(e,t){return J("disposeData")}write(e,t,n){return J("write")}move(e,t,n,r,s){return J("move")}createTensorFromGPUData(e,t,n){return J("createTensorFromGPUData")}memory(){return J("memory")}floatPrecision(){return J("floatPrecision")}epsilon(){return 32===this.floatPrecision()?1e-7:1e-4}dispose(){return J("dispose")}}function J(e){throw new Error(`\'${e}\' not yet implemented or not found in the registry. This kernel may not be supported by the tfjs backend you have chosen`)}function Z(e){let t=e.length,n=0;for(;t>0;)n=Math.random()*t|0,t--,ne(e,t,n)}function Q(e,t){if(e.length!==t.length)throw new Error(`Array sizes must match to be shuffled together First array length was ${e.length}Second array length was ${t.length}`);let n=e.length,r=0;for(;n>0;)r=Math.random()*n|0,n--,ne(e,n,r),ne(t,n,r)}function ee(e,t,n){return Math.max(e,Math.min(t,n))}function te(e){return e%2==0?e:e+1}function ne(e,t,n){const r=e[t];e[t]=e[n],e[n]=r}function re(e){let t=0;for(let n=0;n<e.length;n++)t+=e[n];return t}function se(e,t){const n=Math.random();return t*n+(1-n)*e}function ae(e,t){let n=0;for(let r=0;r<e.length;r++){const s=Number(e[r])-Number(t[r]);n+=s*s}return n}function ie(e,t){if(!e)throw new Error("string"==typeof t?t:t())}function oe(e,t,n=""){ie(de(e,t),()=>n+` Shapes ${e} and ${t} must match`)}function ue(e){ie(null!=e,()=>"The input to the tensor constructor must be a non-null value.")}function le(e){if(0===e.length)return 1;let t=e[0];for(let n=1;n<e.length;n++)t*=e[n];return t}function ce(e){return 0===e.length}function he(e,t){if(e===t)return!0;if(null==e||null==t)return!1;if(e.length!==t.length)return!1;for(let n=0;n<e.length;n++)if(null!==e[n]&&null!==t[n]&&e[n]!==t[n])return!1;return!0}function de(e,t){if(e===t)return!0;if(null==e||null==t)return!1;if(e.length!==t.length)return!1;for(let n=0;n<e.length;n++)if(e[n]!==t[n])return!1;return!0}function pe(e){return e%1==0}function fe(e){if(null!=Math.tanh)return Math.tanh(e);if(e===1/0)return 1;if(e===-1/0)return-1;{const t=Math.exp(2*e);return(t-1)/(t+1)}}function me(e){const t=Math.ceil(Math.sqrt(e));return[t,Math.ceil(e/t)]}function ge(e){const t=new Uint32Array(e);for(let n=0;n<e;++n)t[n]=n;return Z(t),t}function ye(e,t){return t<=e.length?e:e+" ".repeat(t-e.length)}function be(e,t=e=>0,n,r){return new Promise((s,a)=>{let i=0;const o=()=>{if(e())return void s();i++;const u=t(i);null!=n&&i>=n?a():null!=r?r(o,u):setTimeout(o,u)};o()})}function xe(e,t){let n=1,r=-1;for(let t=0;t<e.length;++t)if(e[t]>=0)n*=e[t];else if(-1===e[t]){if(-1!==r)throw Error(`Shapes can only have 1 implicit size. Found -1 at dim ${r} and dim ${t}`);r=t}else if(e[t]<0)throw Error(`Shapes can not be < 0. Found ${e[t]} at dim ${t}`);if(-1===r){if(t>0&&t!==n)throw Error(`Size(${t}) must match the product of shape ${e}`);return e}if(0===n)throw Error(`Cannot infer the missing size in [${e}] when there are 0 elements`);if(t%n!==0)throw Error(`The implicit shape can\'t be a fractional number. Got ${t} / ${n}`);const s=e.slice();return s[r]=t/n,s}function we(e,t){const n=t.length;return ie((e=null==e?t.map((e,t)=>t):[].concat(e)).every(e=>e>=-n&&e<n),()=>`All values in axis param must be in range [-${n}, ${n}) but got axis ${e}`),ie(e.every(e=>pe(e)),()=>`All values in axis param must be integers but got axis ${e}`),e.map(e=>e<0?n+e:e)}function ve(e,t){const n=[],r=[],s=null!=t&&Array.isArray(t)&&0===t.length,a=null==t||s?null:we(t,e).sort();let i=0;for(let t=0;t<e.length;++t){if(null!=a){if(a[i]===t&&1!==e[t])throw new Error(`Can\'t squeeze axis ${t} since its dim \'${e[t]}\' is not 1`);(null==a[i]||a[i]>t)&&1===e[t]&&(n.push(e[t]),r.push(t)),a[i]<=t&&i++}1!==e[t]&&(n.push(e[t]),r.push(t))}return{newShape:n,keptDims:r}}function ke(e,t){return Ie(e,t)}function Ie(e,t){let n=null;if(null==e||"float32"===e)n=new Float32Array(t);else if("int32"===e)n=new Int32Array(t);else if("bool"===e)n=new Uint8Array(t);else{if("string"!==e)throw new Error(`Unknown data type ${e}`);n=new Array(t)}return n}function Se(e,t){for(let n=0;n<e.length;n++){const r=e[n];if(isNaN(r)||!isFinite(r))throw Error(`A tensor of type ${t} being uploaded contains ${r}.`)}}function Ne(e){return"bool"===e||"complex64"===e||"float32"===e||"int32"===e||"string"===e}function Te(e,t){return!("complex64"===t||"float32"===t&&"complex64"!==e||"int32"===t&&"float32"!==e&&"complex64"!==e||"bool"===t&&"bool"===e)}function Ee(e){if("float32"===e||"int32"===e)return 4;if("complex64"===e)return 8;if("bool"===e)return 1;throw new Error(`Unknown dtype ${e}`)}function Ce(e){if(null==e)return 0;let t=0;return e.forEach(e=>t+=e.length),t}function $e(e){return"string"==typeof e||e instanceof String}function Ae(e){return"boolean"==typeof e}function Re(e){return"number"==typeof e}function _e(e){return Array.isArray(e)?_e(e[0]):e instanceof Float32Array?"float32":e instanceof Int32Array||e instanceof Uint8Array||e instanceof Uint8ClampedArray?"int32":Re(e)?"float32":$e(e)?"string":Ae(e)?"bool":"float32"}function Me(e){return!!(e&&e.constructor&&e.call&&e.apply)}function Fe(e,t){for(let n=t;n<e;++n)if(e%n===0)return n;return e}function De(e){const t=e.length;if(t<2)return[];const n=new Array(t-1);n[t-2]=e[t-1];for(let r=t-3;r>=0;--r)n[r]=n[r+1]*e[r+1];return n}function Oe(e,t,n,r=!1){const s=new Array;if(1===t.length){const a=t[0]*(r?2:1);for(let t=0;t<a;t++)s[t]=n[e+t]}else{const a=t[0],i=t.slice(1),o=i.reduce((e,t)=>e*t)*(r?2:1);for(let t=0;t<a;t++)s[t]=Oe(e+t*o,i,n,r)}return s}function Le(e,t,n=!1){if(0===e.length)return t[0];const r=e.reduce((e,t)=>e*t)*(n?2:1);if(0===r)return[];if(r!==t.length)throw new Error(`[${e}] does not match the input size ${t.length}${n?" for a complex tensor":""}.`);return Oe(0,e,t,n)}function ze(e,t){if(Array.isArray(e))return e;if("float32"===t)return e instanceof Float32Array?e:new Float32Array(e);if("int32"===t)return e instanceof Int32Array?e:new Int32Array(e);if("bool"===t||"string"===t)return Uint8Array.from(new Int32Array(e));throw new Error(`Unknown dtype ${t}`)}function Pe(e,t){const n=Be(e,t);for(let e=0;e<n.length;e++)n[e]=1;return n}function Be(e,t){if(null==t||"float32"===t||"complex64"===t)return new Float32Array(e);if("int32"===t)return new Int32Array(e);if("bool"===t)return new Uint8Array(e);throw new Error(`Unknown data type ${t}`)}function Ve(e,t){const n=e.reduce((e,t)=>e*t,1);if(null==t||"float32"===t)return Le(e,new Float32Array(n));if("int32"===t)return Le(e,new Int32Array(n));if("bool"===t)return Le(e,new Uint8Array(n));throw new Error(`Unknown data type ${t}`)}function Ue(e){e.forEach(t=>{ie(Number.isInteger(t)&&t>=0,()=>`Tensor must have a shape comprised of positive integers but got shape [${e}].`)})}function We(e,t,n){if(0===t)return 0;if(1===t)return e[0];let r=e[e.length-1];for(let t=0;t<e.length-1;++t)r+=n[t]*e[t];return r}function Ge(e,t,n){if(0===t)return[];if(1===t)return[e];const r=new Array(t);for(let t=0;t<r.length-1;++t)r[t]=Math.floor(e/n[t]),e-=r[t]*n[t];return r[r.length-1]=e,r}function He(e){return e&&e.then&&"function"==typeof e.then}const je="tfjsflags";class qe{constructor(e){this.global=e,this.flags={},this.flagRegistry={},this.urlFlags={},this.getQueryParams=Ke,this.populateURLFlags()}setPlatform(e,t){null!=this.platform&&(Xe().getBool("IS_TEST")||Xe().getBool("PROD")||console.warn(`Platform ${this.platformName} has already been set. Overwriting the platform with ${e}.`)),this.platformName=e,this.platform=t}registerFlag(e,t,n){if(this.flagRegistry[e]={evaluationFn:t,setHook:n},null!=this.urlFlags[e]){const t=this.urlFlags[e];Xe().getBool("IS_TEST")||Xe().getBool("PROD")||console.warn(`Setting feature override from URL ${e}: ${t}.`),this.set(e,t)}}async getAsync(e){return e in this.flags||(this.flags[e]=await this.evaluateFlag(e)),this.flags[e]}get(e){if(e in this.flags)return this.flags[e];const t=this.evaluateFlag(e);if(He(t))throw new Error(`Flag ${e} cannot be synchronously evaluated. Please use getAsync() instead.`);return this.flags[e]=t,this.flags[e]}getNumber(e){return this.get(e)}getBool(e){return this.get(e)}getString(e){return this.get(e)}getFlags(){return this.flags}get features(){return this.flags}set(e,t){if(null==this.flagRegistry[e])throw new Error(`Cannot set flag ${e} as it has not been registered.`);this.flags[e]=t,null!=this.flagRegistry[e].setHook&&this.flagRegistry[e].setHook(t)}evaluateFlag(e){if(null==this.flagRegistry[e])throw new Error(`Cannot evaluate flag \'${e}\': no evaluation function found.`);return this.flagRegistry[e].evaluationFn()}setFlags(e){this.flags=Object.assign({},e)}reset(){this.flags={},this.urlFlags={},this.populateURLFlags()}populateURLFlags(){if(void 0===this.global||void 0===this.global.location||void 0===this.global.location.search)return;const e=this.getQueryParams(this.global.location.search);je in e&&e[je].split(",").forEach(e=>{const[t,n]=e.split(":");this.urlFlags[t]=function(e,t){const n=t.toLowerCase();return"true"===n||"false"===n?"true"===n:""+ +n===n?+n:t}(0,n)})}}function Ke(e){const t={};return e.replace(/[?&]([^=?&]+)(?:=([^&]*))?/g,(e,...n)=>(function(e,t,n){e[decodeURIComponent(t)]=decodeURIComponent(n||"")}(t,n[0],n[1]),n.join("="))),t}function Xe(){return Je}let Ye,Je=null;function Ze(){if(null==Ye){let e;if("undefined"!=typeof window)e=window;else if(void 0!==n.g)e=n.g;else if("undefined"!=typeof process)e=process;else{if("undefined"==typeof self)throw new Error("Could not find a global object");e=self}Ye=e}return Ye}function Qe(e,t){const n=function(){const e=Ze();return null==e._tfGlobals&&(e._tfGlobals=new Map),e._tfGlobals}();if(n.has(e))return n.get(e);{const r=t();return n.set(e,r),n.get(e)}}const et="Abs",tt="Acos",nt="Acosh",rt="Add",st="AddN",at="All",it="Any",ot="ArgMax",ut="ArgMin",lt="Asin",ct="Asinh",ht="Atan",dt="Atanh",pt="Atan2",ft="AvgPool",mt="AvgPoolGrad",gt="AvgPool3D",yt="AvgPool3DGrad",bt="BatchMatMul",xt="BatchToSpaceND",wt="Bincount",vt="BitwiseAnd",kt="BroadcastTo",It="BroadcastArgs",St="Cast",Nt="Ceil",Tt="ClipByValue",Et="Complex",Ct="ComplexAbs",$t="Concat",At="Conv2D",Rt="Conv2DBackpropFilter",_t="Conv2DBackpropInput",Mt="Conv3D",Ft="Conv3DBackpropFilterV2",Dt="Conv3DBackpropInputV2",Ot="Cos",Lt="Cosh",zt="Cumprod",Pt="Cumsum",Bt="CropAndResize",Vt="DenseBincount",Ut="DepthToSpace",Wt="DepthwiseConv2dNative",Gt="DepthwiseConv2dNativeBackpropFilter",Ht="DepthwiseConv2dNativeBackpropInput",jt="Diag",qt="Dilation2D",Kt="Dilation2DBackpropInput",Xt="Dilation2DBackpropFilter",Yt="Draw",Jt="RealDiv",Zt="Einsum",Qt="Elu",en="EluGrad",tn="Erf",nn="Equal",rn="Exp",sn="ExpandDims",an="Expm1",on="FFT",un="Fill",ln="FlipLeftRight",cn="Floor",hn="FloorDiv",dn="FusedBatchNorm",pn="GatherV2",fn="GatherNd",mn="Greater",gn="GreaterEqual",yn="Identity",bn="IFFT",xn="Imag",wn="IsFinite",vn="IsInf",kn="IsNan",In="LeakyRelu",Sn="Less",Nn="LessEqual",Tn="LinSpace",En="Log",Cn="Log1p",$n="LogicalAnd",An="LogicalNot",Rn="LogicalOr",_n="LogicalXor",Mn="LogSoftmax",Fn="LowerBound",Dn="LRN",On="LRNGrad",Ln="MatrixBandPart",zn="Max",Pn="Maximum",Bn="MaxPool",Vn="MaxPoolGrad",Un="MaxPool3D",Wn="MaxPool3DGrad",Gn="MaxPoolWithArgmax",Hn="Mean",jn="Min",qn="Minimum",Kn="MirrorPad",Xn="Mod",Yn="Multinomial",Jn="Multiply",Zn="Neg",Qn="NotEqual",er="NonMaxSuppressionV3",tr="NonMaxSuppressionV4",nr="NonMaxSuppressionV5",rr="OnesLike",sr="OneHot",ar="Pack",ir="PadV2",or="Pool",ur="Pow",lr="Prelu",cr="Prod",hr="RaggedGather",dr="RaggedRange",pr="RaggedTensorToTensor",fr="Range",mr="Real",gr="Reciprocal",yr="Relu",br="Reshape",xr="ResizeNearestNeighbor",wr="ResizeNearestNeighborGrad",vr="ResizeBilinear",kr="ResizeBilinearGrad",Ir="Relu6",Sr="Reverse",Nr="Round",Tr="Rsqrt",Er="ScatterNd",Cr="TensorScatterUpdate",$r="SearchSorted",Ar="Select",Rr="Selu",_r="Slice",Mr="Sin",Fr="Sinh",Dr="Sign",Or="Sigmoid",Lr="Softplus",zr="Sqrt",Pr="Sum",Br="SpaceToBatchND",Vr="SplitV",Ur="Softmax",Wr="SparseFillEmptyRows",Gr="SparseReshape",Hr="SparseSegmentMean",jr="SparseSegmentSum",qr="SparseToDense",Kr="SquaredDifference",Xr="Square",Yr="StaticRegexReplace",Jr="StridedSlice",Zr="StringNGrams",Qr="StringSplit",es="StringToHashBucketFast",ts="Sub",ns="Tan",rs="Tanh",ss="Tile",as="TopK",is="Transform",os="Transpose",us="Unique",ls="Unpack",cs="UnsortedSegmentSum",hs="UpperBound",ds="ZerosLike",ps="Step",fs="FromPixels",ms="RotateWithOffset",gs="_FusedMatMul",ys="FusedConv2D",bs="FusedDepthwiseConv2D";function xs(...e){Xe().getBool("IS_TEST")||Xe().getBool("PROD")||console.warn(...e)}function ws(...e){Xe().getBool("IS_TEST")||Xe().getBool("PROD")||console.log(...e)}const vs=Qe("kernelRegistry",()=>new Map),ks=Qe("gradRegistry",()=>new Map);function Is(e,t){const n=Rs(e,t);return vs.get(n)}function Ss(e){return ks.get(e)}function Ns(e){const t=vs.entries(),n=[];for(;;){const{done:r,value:s}=t.next();if(r)break;const[a,i]=s,[o]=a.split("_");o===e&&n.push(i)}return n}function Ts(e){const{kernelName:t,backendName:n}=e,r=Rs(t,n);vs.has(r)&&xs(`The kernel \'${t}\' for backend \'${n}\' is already registered`),vs.set(r,e)}function Es(e){const{kernelName:t}=e;ks.has(t)&&Xe().getBool("DEBUG")&&xs(`Overriding the gradient for \'${t}\'`),ks.set(t,e)}function Cs(e,t){const n=Rs(e,t);if(!vs.has(n))throw new Error(`The kernel \'${e}\' for backend \'${t}\' is not registered`);vs.delete(n)}function $s(e){if(!ks.has(e))throw new Error(`The gradient \'${e}\' for backend is not registered`);ks.delete(e)}function As(e,t){Ns(e).forEach(e=>{Ts(Object.assign({},e,{backendName:t}))})}function Rs(e,t){return`${t}_${e}`}function _s(e){return e instanceof Float32Array||e instanceof Int32Array||e instanceof Uint8Array||e instanceof Uint8ClampedArray}var Ms=n(570);const Fs=n.n(Ms)()||Ms;function Ds(e){return Fs.fromString(e,!0,16)}const Os=Ds("c3a5c85c97cb3127"),Ls=Ds("b492b66fbe98f273"),zs=Ds("9ae16a3b2f90404f");function Ps(e){return e.xor(e.shru(47))}function Bs(e,t,n){const r=e.slice(t,t+n);return Fs.fromBytes(Array.from(r),!0,!0)}function Vs(e,t){return Bs(e,t,8)}function Us(e,t){return Bs(e,t,4)}function Ws(e,t){return 0===t?e:e.shru(t).or(e.shl(64-t))}function Gs(e,t,n=Ds("9ddfea08eb382d69")){let r=e.xor(t).mul(n);r=r.xor(r.shru(47));let s=t.xor(r).mul(n);return s=s.xor(s.shru(47)),s=s.mul(n),s}function Hs(e,t,n,r){return function(e,t,n,r,s,a){s=s.add(e),a=Ws(a.add(s).add(r),21);const i=s;return s=(s=s.add(t)).add(n),a=a.add(Ws(s,44)),[s.add(r),a.add(i)]}(Vs(e,t),Vs(e,t+8),Vs(e,t+16),Vs(e,t+24),n,r)}function js(e,t=e.length){const n=Fs.fromNumber(81,!0);if(t<=32)return t<=16?function(e,t=e.length){if(t>=8){const n=zs.add(2*t),r=Vs(e,0).add(zs),s=Vs(e,t-8);return Gs(Ws(s,37).mul(n).add(r),Ws(r,25).add(s).mul(n),n)}if(t>=4){const n=zs.add(2*t);return Gs(Us(e,0).shl(3).add(t),Us(e,t-4),n)}if(t>0){const n=e[0]+(e[t>>1]<<8),r=t+(e[t-1]<<2);return Ps(zs.mul(n).xor(Os.mul(r))).mul(zs)}return zs}(e,t):function(e,t=e.length){const n=zs.add(2*t),r=Vs(e,0).mul(Ls),s=Vs(e,8),a=Vs(e,t-8).mul(n),i=Vs(e,t-16).mul(zs);return Gs(Ws(r.add(s),43).add(Ws(a,30)).add(i),r.add(Ws(s.add(zs),18)).add(a),n)}(e,t);if(t<=64)return function(e,t=e.length){const n=zs.add(2*t),r=Vs(e,0).mul(zs),s=Vs(e,8),a=Vs(e,t-8).mul(n),i=Vs(e,t-16).mul(zs),o=Ws(r.add(s),43).add(Ws(a,30)).add(i),u=Gs(o,r.add(Ws(s.add(zs),18)).add(a),n),l=Vs(e,16).mul(n),c=Vs(e,24),h=o.add(Vs(e,t-32)).mul(n),d=u.add(Vs(e,t-24)).mul(n);return Gs(Ws(l.add(c),43).add(Ws(h,30)).add(d),l.add(Ws(c.add(r),18)).add(h),n)}(e,t);let r=n,s=n.mul(Ls).add(113),a=Ps(s.mul(zs).add(113)).mul(zs),i=[Fs.UZERO,Fs.UZERO],o=[Fs.UZERO,Fs.UZERO];r=r.mul(zs).add(Vs(e,0));let u=0;const l=64*(t-1>>6),c=l+(t-1&63)-63;do{r=Ws(r.add(s).add(i[0]).add(Vs(e,u+8)),37).mul(Ls),s=Ws(s.add(i[1]).add(Vs(e,u+48)),42).mul(Ls),r=r.xor(o[1]),s=s.add(i[0]).add(Vs(e,u+40)),a=Ws(a.add(o[0]),33).mul(Ls),i=Hs(e,u,i[1].mul(Ls),r.add(o[0])),o=Hs(e,u+32,a.add(o[1]),s.add(Vs(e,u+16))),[a,r]=[r,a],u+=64}while(u!==l);const h=Ls.add(a.and(255).shl(1));return u=c,o[0]=o[0].add(t-1&63),i[0]=i[0].add(o[0]),o[0]=o[0].add(i[0]),r=Ws(r.add(s).add(i[0]).add(Vs(e,u+8)),37).mul(h),s=Ws(s.add(i[1]).add(Vs(e,u+48)),42).mul(h),r=r.xor(o[1].mul(9)),s=s.add(i[0].mul(9).add(Vs(e,u+40))),a=Ws(a.add(o[0]),33).mul(h),i=Hs(e,u,i[1].mul(h),r.add(o[0])),o=Hs(e,u+32,a.add(o[1]),s.add(Vs(e,u+16))),[a,r]=[r,a],Gs(Gs(i[0],o[0],h).add(Ps(s).mul(Os)).add(a),Gs(i[1],o[1],h).add(r),h)}function qs(e,t){return"string"===t?Js(e):Ks([e],t)}function Ks(e,t){if("string"===t)throw new Error("Cannot convert a string[] to a TypedArray");if(Array.isArray(e)&&(e=ea(e)),Xe().getBool("DEBUG")&&Se(e,t),function(e,t){return e instanceof Float32Array&&"float32"===t||e instanceof Int32Array&&"int32"===t||e instanceof Uint8Array&&"bool"===t}(e,t))return e;if(null==t||"float32"===t||"complex64"===t)return new Float32Array(e);if("int32"===t)return new Int32Array(e);if("bool"===t){const t=new Uint8Array(e.length);for(let n=0;n<t.length;++n)0!==Math.round(e[n])&&(t[n]=1);return t}throw new Error(`Unknown data type ${t}`)}function Xs(){return Xe().platform.now()}function Ys(e,t){return Xe().platform.fetch(e,t)}function Js(e,t="utf-8"){return t=t||"utf-8",Xe().platform.encode(e,t)}function Zs(e,t="utf-8"){return t=t||"utf-8",Xe().platform.decode(e,t)}function Qs(e){return null!=Xe().platform.isTypedArray?Xe().platform.isTypedArray(e):_s(e)}function ea(e,t=[],n=!1){if(null==t&&(t=[]),"boolean"==typeof e||"number"==typeof e||"string"==typeof e||He(e)||null==e||Qs(e)&&n)t.push(e);else if(Array.isArray(e)||Qs(e))for(let r=0;r<e.length;++r)ea(e[r],t,n);else{let r=-1;for(const t of Object.keys(e))/^([1-9]+[0-9]*|0)$/.test(t)&&(r=Math.max(r,Number(t)));for(let s=0;s<=r;s++)ea(e[s],t,n)}return t}class ta{constructor(e,t){this.backendTimer=e,this.logger=t,null==t&&(this.logger=new ra)}profileKernel(e,t,n){let r;const s=()=>{r=n()};let a;const i=Xs();if(this.backendTimer.timerAvailable())a=this.backendTimer.time(s);else{s();for(const e of r)e.dataSync();a=Promise.resolve({kernelMs:Xs()-i})}if(Xe().getBool("CHECK_COMPUTATION_FOR_ERRORS"))for(let t=0;t<r.length;t++){const n=r[t];n.data().then(t=>{na(t,n.dtype,e)})}return{kernelName:e,outputs:r,inputs:t,timeMs:a.then(e=>e.kernelMs),extraInfo:a.then(e=>null!=e.getExtraProfileInfo?e.getExtraProfileInfo():"")}}logKernelProfile(e){const{kernelName:t,outputs:n,timeMs:r,inputs:s,extraInfo:a}=e;n.forEach(e=>{Promise.all([e.data(),r,a]).then(n=>{this.logger.logKernelProfile(t,e,n[0],n[1],s,n[2])})})}}function na(e,t,n){if("float32"!==t)return!1;for(let t=0;t<e.length;t++){const r=e[t];if(isNaN(r)||!isFinite(r))return console.warn(`Found ${r} in the result of \'${n}\'`),!0}return!1}class ra{logKernelProfile(e,t,n,r,s,a){const i="number"==typeof r?ye(`${r}ms`,9):r.error,o=ye(e,25),u=t.rank,l=t.size,c=ye(t.shape.toString(),14);let h="";for(const e in s){const n=s[e];if(null!=n){const r=n.shape||t.shape,s=r.length;h+=`${e}: ${s}D ${s>0?r:""} `}}console.log(`%c${o}\\t%c${i}\\t%c${u}D ${c}\\t%c${l}\\t%c${h}\\t%c${a}`,"font-weight:bold","color:red","color:blue","color: orange","color: green","color: steelblue")}}function sa(e,t,n,r){const s=De(t),a=function(e,t,n,r){const s=le(t),a=r[r.length-1],i=new Array(a).fill(0),o=t.length,u="complex64"===n?ua(e):e;if(o>1)for(let e=0;e<s/a;e++){const t=e*a;for(let e=0;e<a;e++)i[e]=Math.max(i[e],aa(u[t+e],0,n).length)}return i}(e,t,n,s),i=t.length,o=oa(e,t,n,s,a),u=["Tensor"];return r&&(u.push(`  dtype: ${n}`),u.push(`  rank: ${i}`),u.push(`  shape: [${t}]`),u.push("  values:")),u.push(o.map(e=>"    "+e).join("\\n")),u.join("\\n")}function aa(e,t,n){let r;return r=Array.isArray(e)?`${parseFloat(e[0].toFixed(7))} + ${parseFloat(e[1].toFixed(7))}j`:$e(e)?`\'${e}\'`:"bool"===n?ia(e):parseFloat(e.toFixed(7)).toString(),ye(r,t)}function ia(e){return 0===e?"false":"true"}function oa(e,t,n,r,s,a=!0){const i="complex64"===n?2:1,o=t[0],u=t.length;if(0===u)return"complex64"===n?[aa(ua(e)[0],0,n)]:"bool"===n?[ia(e[0])]:[e[0].toString()];if(1===u){if(o>20){const t=3*i;let r=Array.from(e.slice(0,t)),a=Array.from(e.slice((o-3)*i,o*i));return"complex64"===n&&(r=ua(r),a=ua(a)),["["+r.map((e,t)=>aa(e,s[t],n)).join(", ")+", ..., "+a.map((e,t)=>aa(e,s[o-3+t],n)).join(", ")+"]"]}return["["+("complex64"===n?ua(e):Array.from(e)).map((e,t)=>aa(e,s[t],n)).join(", ")+"]"]}const l=t.slice(1),c=r.slice(1),h=r[0]*i,d=[];if(o>20){for(let t=0;t<3;t++){const r=t*h,a=r+h;d.push(...oa(e.slice(r,a),l,n,c,s,!1))}d.push("...");for(let t=o-3;t<o;t++){const r=t*h,a=r+h;d.push(...oa(e.slice(r,a),l,n,c,s,t===o-1))}}else for(let t=0;t<o;t++){const r=t*h,a=r+h;d.push(...oa(e.slice(r,a),l,n,c,s,t===o-1))}const p=2===u?",":"";d[0]="["+(o>0?d[0]+p:"");for(let e=1;e<d.length-1;e++)d[e]=" "+d[e]+p;let f=",\\n";for(let e=2;e<u;e++)f+="\\n";return d[d.length-1]=" "+d[d.length-1]+"]"+(a?"":f),d}function ua(e){const t=[];for(let n=0;n<e.length;n+=2)t.push([e[n],e[n+1]]);return t}class la{constructor(e,t,n){if(this.dtype=t,this.shape=e.slice(),this.size=le(e),null!=n){const e=n.length;ie(e===this.size,()=>`Length of values \'${e}\' does not match the size inferred by the shape \'${this.size}\'.`)}if("complex64"===t)throw new Error("complex64 dtype TensorBuffers are not supported. Please create a TensorBuffer for the real and imaginary parts separately and call tf.complex(real, imag).");this.values=n||Ie(t,this.size),this.strides=De(e)}set(e,...t){0===t.length&&(t=[0]),ie(t.length===this.rank,()=>`The number of provided coordinates (${t.length}) must match the rank (${this.rank})`);const n=this.locToIndex(t);this.values[n]=e}get(...e){0===e.length&&(e=[0]);let t=0;for(const n of e){if(n<0||n>=this.shape[t]){const t=`Requested out of range element at ${e}.   Buffer shape=${this.shape}`;throw new Error(t)}t++}let n=e[e.length-1];for(let t=0;t<e.length-1;++t)n+=this.strides[t]*e[t];return this.values[n]}locToIndex(e){if(0===this.rank)return 0;if(1===this.rank)return e[0];let t=e[e.length-1];for(let n=0;n<e.length-1;++n)t+=this.strides[n]*e[n];return t}indexToLoc(e){if(0===this.rank)return[];if(1===this.rank)return[e];const t=new Array(this.shape.length);for(let n=0;n<t.length-1;++n)t[n]=Math.floor(e/this.strides[n]),e-=t[n]*this.strides[n];return t[t.length-1]=e,t}get rank(){return this.shape.length}toTensor(){return ca().makeTensor(this.values,this.shape,this.dtype)}}let ca=null,ha=null,da=null;class pa{constructor(e,t,n,r){this.kept=!1,this.isDisposedInternal=!1,this.shape=e.slice(),this.dtype=t||"float32",this.size=le(e),this.strides=De(e),this.dataId=n,this.id=r,this.rankType=this.rank<5?this.rank.toString():"higher"}get rank(){return this.shape.length}async buffer(){const e=await this.data();return ha.buffer(this.shape,this.dtype,e)}bufferSync(){return ha.buffer(this.shape,this.dtype,this.dataSync())}async array(){const e=await this.data();return Le(this.shape,e,"complex64"===this.dtype)}arraySync(){return Le(this.shape,this.dataSync(),"complex64"===this.dtype)}async data(){this.throwIfDisposed();const e=ca().read(this.dataId);if("string"===this.dtype){const t=await e;try{return t.map(e=>Zs(e))}catch(e){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}}return e}dataToGPU(e){return this.throwIfDisposed(),ca().readToGPU(this.dataId,e)}dataSync(){this.throwIfDisposed();const e=ca().readSync(this.dataId);if("string"===this.dtype)try{return e.map(e=>Zs(e))}catch(e){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}return e}async bytes(){this.throwIfDisposed();const e=await ca().read(this.dataId);return"string"===this.dtype?e:new Uint8Array(e.buffer)}dispose(){this.isDisposed||(this.kerasMask&&this.kerasMask.dispose(),ca().disposeTensor(this),this.isDisposedInternal=!0)}get isDisposed(){return this.isDisposedInternal}throwIfDisposed(){if(this.isDisposed)throw new Error("Tensor is disposed.")}print(e=!1){return ha.print(this,e)}clone(){return this.throwIfDisposed(),ha.clone(this)}toString(e=!1){return sa(this.dataSync(),this.shape,this.dtype,e)}cast(e){return this.throwIfDisposed(),ha.cast(this,e)}variable(e=!0,t,n){return this.throwIfDisposed(),ca().makeVariable(this,e,t,n)}}function fa(){return Qe("Tensor",()=>pa)}Object.defineProperty(pa,Symbol.hasInstance,{value:e=>!!e&&null!=e.data&&null!=e.dataSync&&null!=e.throwIfDisposed}),fa();class ma extends pa{constructor(e,t,n,r){super(e.shape,e.dtype,e.dataId,r),this.trainable=t,this.name=n}assign(e){if(e.dtype!==this.dtype)throw new Error(`dtype of the new value (${e.dtype}) and previous value (${this.dtype}) must match`);if(!de(e.shape,this.shape))throw new Error(`shape of the new value (${e.shape}) and previous value (${this.shape}) must match`);ca().disposeTensor(this),this.dataId=e.dataId,ca().incRef(this,null)}dispose(){ca().disposeVariable(this),this.isDisposedInternal=!0}}var ga,ya,ba,xa,wa;Object.defineProperty(ma,Symbol.hasInstance,{value:e=>e instanceof pa&&null!=e.assign&&e.assign instanceof Function}),function(e){e.R0="R0",e.R1="R1",e.R2="R2",e.R3="R3",e.R4="R4",e.R5="R5",e.R6="R6"}(ga||(ga={})),function(e){e.float32="float32",e.int32="int32",e.bool="int32",e.complex64="complex64"}(ya||(ya={})),function(e){e.float32="float32",e.int32="int32",e.bool="bool",e.complex64="complex64"}(ba||(ba={})),function(e){e.float32="float32",e.int32="float32",e.bool="float32",e.complex64="complex64"}(xa||(xa={})),function(e){e.float32="complex64",e.int32="complex64",e.bool="complex64",e.complex64="complex64"}(wa||(wa={}));const va={float32:xa,int32:ya,bool:ba,complex64:wa};function ka(e,t){if("string"===e||"string"===t){if("string"===e&&"string"===t)return"string";throw new Error(`Can not upcast ${e} with ${t}`)}return va[e][t]}function Ia(e){return ka(e,"int32")}function Sa(e){return null!=e&&"object"==typeof e&&"texture"in e&&e.texture instanceof WebGLTexture}function Na(e){return"undefined"!=typeof GPUBuffer&&null!=e&&"object"==typeof e&&"buffer"in e&&e.buffer instanceof GPUBuffer}function Ta(e,t){if(e.dtype===t.dtype)return[e,t];const n=ka(e.dtype,t.dtype);return[e.cast(n),t.cast(n)]}function Ea(e,t){ie(e.dtype===t.dtype,()=>`The dtypes of the first(${e.dtype}) and second(${t.dtype}) input must match`)}function Ca(e,t){return t.some(t=>t.id===e.id)}function $a(e){const t=[];return Aa(e,t,new Set),t}function Aa(e,t,n){if(null==e)return;if(e instanceof pa)return void t.push(e);if(r=e,!Array.isArray(r)&&"object"!=typeof r)return;var r;const s=e;for(const e in s){const r=s[e];n.has(r)||(n.add(r),Aa(r,t,n))}}function Ra(e){return null!=e.kernelName}class _a{constructor(){this.registeredVariables={},this.nextTapeNodeId=0,this.numBytes=0,this.numTensors=0,this.numStringTensors=0,this.numDataBuffers=0,this.gradientDepth=0,this.kernelDepth=0,this.scopeStack=[],this.numDataMovesStack=[],this.nextScopeId=0,this.tensorInfo=new WeakMap,this.profiling=!1,this.activeProfile={newBytes:0,newTensors:0,peakBytes:0,kernels:[],result:null,get kernelNames(){return Array.from(new Set(this.kernels.map(e=>e.name)))}}}dispose(){for(const e in this.registeredVariables)this.registeredVariables[e].dispose()}}class Ma{constructor(e){this.ENV=e,this.registry={},this.registryFactory={},this.pendingBackendInitId=0,this.state=new _a}async ready(){if(null!=this.pendingBackendInit)return this.pendingBackendInit.then(()=>{});if(null!=this.backendInstance)return;const e=this.getSortedBackends();for(let t=0;t<e.length;t++){const n=e[t];if(await this.initializeBackend(n).success)return void await this.setBackend(n)}throw new Error("Could not initialize any backends, all backend initializations failed.")}get backend(){if(null!=this.pendingBackendInit)throw new Error(`Backend \'${this.backendName}\' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);if(null==this.backendInstance){const{name:e,asyncInit:t}=this.initializeBackendsAndReturnBest();if(t)throw new Error(`The highest priority backend \'${e}\' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);this.setBackend(e)}return this.backendInstance}backendNames(){return Object.keys(this.registryFactory)}findBackend(e){if(!(e in this.registry)){if(!(e in this.registryFactory))return null;{const{asyncInit:t}=this.initializeBackend(e);if(t)return null}}return this.registry[e]}findBackendFactory(e){return e in this.registryFactory?this.registryFactory[e].factory:null}registerBackend(e,t,n=1){return e in this.registryFactory?(xs(`${e} backend was already registered. Reusing existing backend factory.`),!1):(this.registryFactory[e]={factory:t,priority:n},!0)}async setBackend(e){if(null==this.registryFactory[e])throw new Error(`Backend name \'${e}\' not found in registry`);if(this.backendName=e,null==this.registry[e]){this.backendInstance=null;const{success:t,asyncInit:n}=this.initializeBackend(e);if(!(n?await t:t))return!1}return this.backendInstance=this.registry[e],this.setupRegisteredKernels(),this.profiler=new ta(this.backendInstance),!0}setupRegisteredKernels(){Ns(this.backendName).forEach(e=>{null!=e.setupFunc&&e.setupFunc(this.backendInstance)})}disposeRegisteredKernels(e){Ns(e).forEach(t=>{null!=t.disposeFunc&&t.disposeFunc(this.registry[e])})}initializeBackend(e){const t=this.registryFactory[e];if(null==t)throw new Error(`Cannot initialize backend ${e}, no registration found.`);try{const n=t.factory();if(!n||n instanceof Y||"function"!=typeof n.then)return this.registry[e]=n,{success:!0,asyncInit:!1};{const t=++this.pendingBackendInitId,r=n.then(n=>!(t<this.pendingBackendInitId||(this.registry[e]=n,this.pendingBackendInit=null,0))).catch(n=>(t<this.pendingBackendInitId||(this.pendingBackendInit=null,xs(`Initialization of backend ${e} failed`),xs(n.stack||n.message)),!1));return this.pendingBackendInit=r,{success:r,asyncInit:!0}}}catch(t){return xs(`Initialization of backend ${e} failed`),xs(t.stack||t.message),{success:!1,asyncInit:!1}}}removeBackend(e){if(!(e in this.registryFactory))throw new Error(`${e} backend not found in registry`);this.backendName===e&&null!=this.pendingBackendInit&&this.pendingBackendInitId++,e in this.registry&&(this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e]),delete this.registryFactory[e],this.backendName===e&&(this.pendingBackendInit=null,this.backendName=null,this.backendInstance=null)}getSortedBackends(){if(0===Object.keys(this.registryFactory).length)throw new Error("No backend found in registry.");return Object.keys(this.registryFactory).sort((e,t)=>this.registryFactory[t].priority-this.registryFactory[e].priority)}initializeBackendsAndReturnBest(){const e=this.getSortedBackends();for(let t=0;t<e.length;t++){const n=e[t],{success:r,asyncInit:s}=this.initializeBackend(n);if(s||r)return{name:n,asyncInit:s}}throw new Error("Could not initialize any backends, all backend initializations failed.")}moveData(e,t){const n=this.state.tensorInfo.get(t),r=n.backend,s=this.readSync(t),a=r.refCount(t);r.disposeData(t,!0),n.backend=e,e.move(t,s,n.shape,n.dtype,a),this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack[this.state.numDataMovesStack.length-1]++}tidy(e,t){let n,r=null;if(null==t){if("function"!=typeof e)throw new Error("Please provide a function to tidy()");t=e}else{if("string"!=typeof e&&!(e instanceof String))throw new Error("When calling with two arguments, the first argument to tidy() must be a string");if("function"!=typeof t)throw new Error("When calling with two arguments, the 2nd argument to tidy() must be a function");r=e}return this.scopedRun(()=>this.startScope(r),()=>this.endScope(n),()=>(n=t(),n instanceof Promise&&console.error("Cannot return a Promise inside of tidy."),n))}scopedRun(e,t,n){e();try{const e=n();return t(),e}catch(e){throw t(),e}}nextTensorId(){return Ma.nextTensorId++}nextVariableId(){return Ma.nextVariableId++}clone(e){const t=Da.runKernel(yn,{x:e}),n={x:e};return this.addTapeNode(this.state.activeScope.name,n,[t],e=>({x:()=>{const t={x:e};return Da.runKernel(St,t,{dtype:"float32"})}}),[],{}),t}runKernel(e,t,n){if(null==this.backendName&&this.backend,null==Is(e,this.backendName))throw new Error(`Kernel \'${e}\' not registered for backend \'${this.backendName}\'`);return this.runKernelFunc({kernelName:e,inputs:t,attrs:n})}shouldCheckForMemLeaks(){return this.ENV.getBool("IS_TEST")}checkKernelForMemLeak(e,t,n){const r=this.backend.numDataIds();let s=0;n.forEach(e=>{s+="complex64"===e.dtype?3:1});const a=this.state.numDataMovesStack[this.state.numDataMovesStack.length-1],i=r-t-s-a;if(i>0)throw new Error(`Backend \'${this.backendName}\' has an internal memory leak (${i} data ids) after running \'${e}\'`)}runKernelFunc(e){let t,n=[];const r=this.isTapeOn(),s=this.state.numBytes,a=this.state.numTensors;let i,o;this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack.push(0),null==this.backendName&&this.backend;const u=Ra(e)?e.kernelName:null!=this.state.activeScope?this.state.activeScope.name:"";if(Ra(e)){const{kernelName:t,inputs:s,attrs:a}=e;null==this.backendName&&this.backend;const u=Is(t,this.backendName);ie(null!=u,()=>`Cannot find registered kernel \'${t}\' for backend \'${this.backendName}\'`),i=()=>{const e=this.backend.numDataIds();o=u.kernelFunc({inputs:s,attrs:a,backend:this.backend});const i=Array.isArray(o)?o:[o];this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(t,e,i);const l=i.map(e=>null!=e.rank?e:this.makeTensorFromTensorInfo(e));if(r){const e=this.getTensorsForGradient(t,s,l);n=this.saveTensorsForBackwardMode(e)}return l}}else{const{forwardFunc:t}=e,s=e=>{r&&(n=e.map(e=>this.keep(this.clone(e))))};i=()=>{const e=this.backend.numDataIds();o=this.tidy(()=>t(this.backend,s));const n=Array.isArray(o)?o:[o];return this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(u,e,n),n}}const{inputs:l,attrs:c}=e,h=Ra(e)?null:e.backwardsFunc;let d;return this.scopedRun(()=>this.state.kernelDepth++,()=>this.state.kernelDepth--,()=>{this.ENV.getBool("DEBUG")||this.state.profiling?(d=this.profiler.profileKernel(u,l,()=>i()),this.ENV.getBool("DEBUG")&&this.profiler.logKernelProfile(d),t=d.outputs):t=i()}),r&&this.addTapeNode(u,l,t,h,n,c),this.state.profiling&&this.state.activeProfile.kernels.push({name:u,bytesAdded:this.state.numBytes-s,totalBytesSnapshot:this.state.numBytes,tensorsAdded:this.state.numTensors-a,totalTensorsSnapshot:this.state.numTensors,inputShapes:Object.keys(l).map(e=>null!=l[e]?l[e].shape:null),outputShapes:t.map(e=>e.shape),kernelTimeMs:d.timeMs,extraInfo:d.extraInfo}),Array.isArray(o)?t:t[0]}saveTensorsForBackwardMode(e){const t=e.map(e=>this.keep(this.clone(e)));return t}getTensorsForGradient(e,t,n){const r=Ss(e);if(null!=r){const e=r.inputsToSave||[],s=r.outputsToSave||[];let a;r.saveAllInputs?(ie(Array.isArray(t),()=>"saveAllInputs is true, expected inputs to be an array."),a=Object.keys(t).map(e=>t[e])):a=e.map(e=>t[e]);const i=n.filter((e,t)=>s[t]);return a.concat(i)}return[]}makeTensor(e,t,n,r){if(null==e)throw new Error("Values passed to engine.makeTensor() are null");n=n||"float32",r=r||this.backend;let s=e;"string"===n&&$e(e[0])&&(s=e.map(e=>Js(e)));const a=r.write(s,t,n),i=new pa(t,n,a,this.nextTensorId());if(this.trackTensor(i,r),"string"===n){const e=this.state.tensorInfo.get(a),t=Ce(s);this.state.numBytes+=t-e.bytes,e.bytes=t}return i}makeTensorFromDataId(e,t,n,r){const s={dataId:e,shape:t,dtype:n=n||"float32"};return this.makeTensorFromTensorInfo(s,r)}makeTensorFromTensorInfo(e,t){const{dataId:n,shape:r,dtype:s}=e,a=new pa(r,s,n,this.nextTensorId());return this.trackTensor(a,t),a}makeVariable(e,t=!0,n,r){n=n||this.nextVariableId().toString(),null!=r&&r!==e.dtype&&(e=e.cast(r));const s=new ma(e,t,n,this.nextTensorId());if(null!=this.state.registeredVariables[s.name])throw new Error(`Variable with name ${s.name} was already registered`);return this.state.registeredVariables[s.name]=s,this.incRef(s,this.backend),s}trackTensor(e,t){this.state.numTensors++,"string"===e.dtype&&this.state.numStringTensors++;let n=0;"complex64"!==e.dtype&&"string"!==e.dtype&&(n=e.size*Ee(e.dtype)),this.state.numBytes+=n,this.state.tensorInfo.has(e.dataId)||(this.state.numDataBuffers++,this.state.tensorInfo.set(e.dataId,{backend:t||this.backend,dtype:e.dtype,shape:e.shape,bytes:n})),e instanceof ma||this.track(e)}incRef(e,t){this.trackTensor(e,t),this.backend.incRef(e.dataId)}removeDataId(e,t){this.state.tensorInfo.has(e)&&this.state.tensorInfo.get(e).backend===t&&(this.state.tensorInfo.delete(e),this.state.numDataBuffers--)}disposeTensor(e){if(!this.state.tensorInfo.has(e.dataId))return;const t=this.state.tensorInfo.get(e.dataId);if(this.state.numTensors--,"string"===e.dtype&&(this.state.numStringTensors--,this.state.numBytes-=t.bytes),"complex64"!==e.dtype&&"string"!==e.dtype){const t=e.size*Ee(e.dtype);this.state.numBytes-=t}t.backend.disposeData(e.dataId)&&this.removeDataId(e.dataId,t.backend)}disposeVariables(){for(const e in this.state.registeredVariables){const t=this.state.registeredVariables[e];this.disposeVariable(t)}}disposeVariable(e){this.disposeTensor(e),null!=this.state.registeredVariables[e.name]&&delete this.state.registeredVariables[e.name]}memory(){const e=this.backend.memory();return e.numTensors=this.state.numTensors,e.numDataBuffers=this.state.numDataBuffers,e.numBytes=this.state.numBytes,this.state.numStringTensors>0&&(e.unreliable=!0,null==e.reasons&&(e.reasons=[]),e.reasons.push("Memory usage by string tensors is approximate (2 bytes per character)")),e}async profile(e){this.state.profiling=!0;const t=this.state.numBytes,n=this.state.numTensors;this.state.activeProfile.kernels=[],this.state.activeProfile.result=await e(),this.state.profiling=!1,this.state.activeProfile.peakBytes=Math.max(...this.state.activeProfile.kernels.map(e=>e.totalBytesSnapshot)),this.state.activeProfile.newBytes=this.state.numBytes-t,this.state.activeProfile.newTensors=this.state.numTensors-n;for(const e of this.state.activeProfile.kernels)e.kernelTimeMs=await e.kernelTimeMs,e.extraInfo=await e.extraInfo;return this.state.activeProfile}isTapeOn(){return this.state.gradientDepth>0&&0===this.state.kernelDepth}addTapeNode(e,t,n,r,s,a){const i={id:this.state.nextTapeNodeId++,kernelName:e,inputs:t,outputs:n,saved:s},o=Ss(e);null!=o&&(r=o.gradFunc),null!=r&&(i.gradient=e=>(e=e.map((e,t)=>{if(null==e){const e=n[t],r=Be(e.size,e.dtype);return this.makeTensor(r,e.shape,e.dtype)}return e}),r(e.length>1?e:e[0],s,a))),this.state.activeTape.push(i)}keep(e){return e.kept=!0,e}startTape(){0===this.state.gradientDepth&&(this.state.activeTape=[]),this.state.gradientDepth++}endTape(){this.state.gradientDepth--}startScope(e){const t={track:[],name:"unnamed scope",id:this.state.nextScopeId++};e&&(t.name=e),this.state.scopeStack.push(t),this.state.activeScope=t}endScope(e){const t=$a(e),n=new Set(t.map(e=>e.id));for(let e=0;e<this.state.activeScope.track.length;e++){const t=this.state.activeScope.track[e];t.kept||n.has(t.id)||t.dispose()}const r=this.state.scopeStack.pop();this.state.activeScope=0===this.state.scopeStack.length?null:this.state.scopeStack[this.state.scopeStack.length-1],t.forEach(e=>{e.kept||e.scopeId!==r.id||this.track(e)})}gradients(e,t,n,r=!1){if(ie(t.length>0,()=>"gradients() received an empty list of xs."),null!=n&&"float32"!==n.dtype)throw new Error(`dy must have \'float32\' dtype, but has \'${n.dtype}\'`);const s=this.scopedRun(()=>this.startTape(),()=>this.endTape(),()=>this.tidy("forward",e));ie(s instanceof pa,()=>"The result y returned by f() must be a tensor.");const a=function(e,t,n){const r={},s={};for(let e=0;e<t.length;e++)r[t[e].id]=!0;for(let n=0;n<e.length;n++){const a=e[n],i=a.inputs;for(const e in i){const n=i[e];let o=!1;for(let e=0;e<t.length;e++)if(r[n.id]){a.outputs.forEach(e=>r[e.id]=!0),o=!0,s[a.id]=!0;break}if(o)break}}const a={};a[n.id]=!0;const i={};for(let t=e.length-1;t>=0;t--){const n=e[t],r=n.inputs;for(let e=0;e<n.outputs.length;e++)if(a[n.outputs[e].id]){for(const e in r)a[r[e].id]=!0,i[n.id]=!0;break}}const o=[];for(let t=0;t<e.length;t++){const n=e[t];if(s[n.id]&&i[n.id]){const e={};for(const t in n.inputs){const s=n.inputs[t];r[s.id]&&(e[t]=s)}const t=Object.assign({},n);t.inputs=e,t.outputs=n.outputs,o.push(t)}}return o}(this.state.activeTape,t,s);if(!r&&0===a.length&&t.length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that the f you passed encloses all operations that lead from x to y.");return this.tidy("backward",()=>{const e={};e[s.id]=null==n?function(e){const t=Pe(le(e),"float32");return Da.makeTensor(t,e,"float32")}(s.shape):n,function(e,t,n,r){for(let s=t.length-1;s>=0;s--){const a=t[s],i=[];if(a.outputs.forEach(t=>{const n=e[t.id];null!=n?i.push(n):i.push(null)}),null==a.gradient)throw new Error(`Cannot compute gradient: gradient function not found for ${a.kernelName}.`);const o=a.gradient(i);for(const t in a.inputs){if(!(t in o))throw new Error(`Cannot backprop through input ${t}. Available gradients found: ${Object.keys(o)}.`);const s=n(()=>o[t]());if("float32"!==s.dtype)throw new Error(`Error in gradient for op ${a.kernelName}. The gradient of input ${t} must have \'float32\' dtype, but has \'${s.dtype}\'`);const i=a.inputs[t];if(!de(s.shape,i.shape))throw new Error(`Error in gradient for op ${a.kernelName}. The gradient of input \'${t}\' has shape \'${s.shape}\', which does not match the shape of the input \'${i.shape}\'`);if(null==e[i.id])e[i.id]=s;else{const t=e[i.id];e[i.id]=r(t,s),t.dispose()}}}}(e,a,e=>this.tidy(e),Oa);const r=t.map(t=>e[t.id]);return 0===this.state.gradientDepth&&(this.state.activeTape.forEach(e=>{for(const t of e.saved)t.dispose()}),this.state.activeTape=null),{value:s,grads:r}})}customGrad(e){return ie(Me(e),()=>"The f passed in customGrad(f) must be a function."),(...t)=>{let n;ie(t.every(e=>e instanceof pa),()=>"The args passed in customGrad(f)(x1, x2,...) must all be tensors");const r={};return t.forEach((e,t)=>{r[t]=e}),this.runKernelFunc({forwardFunc:(r,s)=>(n=e(...t,s),ie(n.value instanceof pa,()=>"The function f passed in customGrad(f) must return an object where `obj.value` is a tensor"),ie(Me(n.gradFunc),()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function."),n.value),backwardsFunc:(e,r)=>{const s=n.gradFunc(e,r),a=Array.isArray(s)?s:[s];ie(a.length===t.length,()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns the same number of tensors as inputs passed to f(...)."),ie(a.every(e=>e instanceof pa),()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns a list of only tensors.");const i={};return a.forEach((e,t)=>{i[t]=()=>e}),i},inputs:r})}}readSync(e){return this.state.tensorInfo.get(e).backend.readSync(e)}read(e){return this.state.tensorInfo.get(e).backend.read(e)}readToGPU(e,t){return this.state.tensorInfo.get(e).backend.readToGPU(e,t)}async time(e){const t=Xs(),n=await this.backend.time(e);return n.wallMs=Xs()-t,n}track(e){return null!=this.state.activeScope&&(e.scopeId=this.state.activeScope.id,this.state.activeScope.track.push(e)),e}get registeredVariables(){return this.state.registeredVariables}reset(){this.pendingBackendInitId++,this.state.dispose(),this.ENV.reset(),this.state=new _a;for(const e in this.registry)this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e];this.backendName=null,this.backendInstance=null,this.pendingBackendInit=null}}function Fa(){const e=Ze();if(null==e._tfengine){const t=new qe(e);e._tfengine=new Ma(t)}var t;return t=e._tfengine.ENV,Je=t,ca=()=>e._tfengine,e._tfengine}Ma.nextTensorId=0,Ma.nextVariableId=0;const Da=Fa();function Oa(e,t){const n={a:e,b:t};return Da.runKernel(rt,n)}let La;function za(e){La=e}function Pa(e){if(void 0!==La)return La;if(e||"undefined"!=typeof navigator&&null!=navigator){if(e||(e=navigator),"ReactNative"===e.product)return!0;const t=e.userAgent||e.vendor||("undefined"!=typeof window?window.opera:"");if(!t){const t=e;return t.userAgentData&&t.userAgentData.mobile}return/(android|bb\\d+|meego).+mobile|avantgo|bada\\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(t)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\\-(n|u)|c55\\/|capi|ccwa|cdm\\-|cell|chtm|cldc|cmd\\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\\-s|devi|dica|dmob|do(c|p)o|ds(12|\\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\\-|_)|g1 u|g560|gene|gf\\-5|g\\-mo|go(\\.w|od)|gr(ad|un)|haie|hcit|hd\\-(m|p|t)|hei\\-|hi(pt|ta)|hp( i|ip)|hs\\-c|ht(c(\\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\\-(20|go|ma)|i230|iac( |\\-|\\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\\/)|klon|kpt |kwc\\-|kyo(c|k)|le(no|xi)|lg( g|\\/(k|l|u)|50|54|\\-[a-w])|libw|lynx|m1\\-w|m3ga|m50\\/|ma(te|ui|xo)|mc(01|21|ca)|m\\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\\-2|po(ck|rt|se)|prox|psio|pt\\-g|qa\\-a|qc(07|12|21|32|60|\\-[2-7]|i\\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\\-|oo|p\\-)|sdk\\/|se(c(\\-|0|1)|47|mc|nd|ri)|sgh\\-|shar|sie(\\-|m)|sk\\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\\-|v\\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\\-|tdg\\-|tel(i|m)|tim\\-|t\\-mo|to(pl|sh)|ts(70|m\\-|m3|m5)|tx\\-9|up(\\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\\-|your|zeto|zte\\-/i.test(t.substr(0,4))}return!1}function Ba(){return"undefined"!=typeof window&&null!=window.document||"undefined"!=typeof WorkerGlobalScope}const Va=Xe();function Ua(e,t){let n=e;if(Qs(e))return"string"===t?[]:[e.length];if(Sa(e)){const t=e.channels||"RGBA";return[e.height,e.width*t.length]}if(Na(e))return[e.buffer.size/(null==t?4:Ee(t))];if(!Array.isArray(e))return[];const r=[];for(;Array.isArray(n)||Qs(n)&&"string"!==t;)r.push(n.length),n=n[0];return Array.isArray(e)&&Xe().getBool("TENSORLIKE_CHECK_SHAPE_CONSISTENCY")&&Wa(e,r,[]),r}function Wa(e,t,n){if(n=n||[],!Array.isArray(e)&&!Qs(e))return void ie(0===t.length,()=>`Element arr[${n.join("][")}] is a primitive, but should be an array/TypedArray of ${t[0]} elements`);ie(t.length>0,()=>`Element arr[${n.join("][")}] should be a primitive, but is an array of ${e.length} elements`),ie(e.length===t[0],()=>`Element arr[${n.join("][")}] should have ${t[0]} elements, but has ${e.length} elements`);const r=t.slice(1);for(let t=0;t<e.length;++t)Wa(e[t],r,n.concat(t))}function Ga(e,t,n,r){if("string_or_numeric"!==e){if(null==e)throw new Error("Expected dtype cannot be null.");if("numeric"!==e&&e!==t||"numeric"===e&&"string"===t)throw new Error(`Argument \'${n}\' passed to \'${r}\' must be ${e} tensor, but got ${t} tensor`)}}function Ha(e,t,n,r="numeric"){if(e instanceof fa())return Ga(r,e.dtype,t,n),e;let s=_e(e);if("string"!==s&&["bool","int32","float32"].indexOf(r)>=0&&(s=r),Ga(r,s,t,n),null==e||!Qs(e)&&!Array.isArray(e)&&"number"!=typeof e&&"boolean"!=typeof e&&"string"!=typeof e){const r=null==e?"null":e.constructor.name;throw new Error(`Argument \'${t}\' passed to \'${n}\' must be a Tensor or TensorLike, but got \'${r}\'`)}const a=Ua(e,s);Qs(e)||Array.isArray(e)||(e=[e]);const i="string"!==s?Ks(e,s):ea(e,[],!0);return Da.makeTensor(i,a,s)}function ja(e,t,n,r="numeric"){if(!Array.isArray(e))throw new Error(`Argument ${t} passed to ${n} must be a \\`Tensor[]\\` or \\`TensorLike[]\\``);return e.map((e,s)=>Ha(e,`${t}[${s}]`,n,r))}Va.registerFlag("DEBUG",()=>!1,e=>{e&&console.warn("Debugging mode is ON. The output of every math call will be downloaded to CPU and checked for NaNs. This significantly impacts performance.")}),Va.registerFlag("IS_BROWSER",()=>Ba()),Va.registerFlag("IS_NODE",()=>"undefined"!=typeof process&&void 0!==process.versions&&void 0!==process.versions.node),Va.registerFlag("IS_CHROME",()=>"undefined"!=typeof navigator&&null!=navigator&&null!=navigator.userAgent&&/Chrome/.test(navigator.userAgent)&&/Google Inc/.test(navigator.vendor)),Va.registerFlag("IS_SAFARI",()=>"undefined"!=typeof navigator&&null!=navigator&&null!=navigator.userAgent&&/Safari/.test(navigator.userAgent)&&/Apple/.test(navigator.vendor)),Va.registerFlag("PROD",()=>!1),Va.registerFlag("TENSORLIKE_CHECK_SHAPE_CONSISTENCY",()=>Va.getBool("DEBUG")),Va.registerFlag("DEPRECATION_WARNINGS_ENABLED",()=>!0),Va.registerFlag("IS_TEST",()=>!1),Va.registerFlag("CHECK_COMPUTATION_FOR_ERRORS",()=>Va.getBool("DEBUG")),Va.registerFlag("WRAP_TO_IMAGEBITMAP",()=>!1),Va.registerFlag("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU",()=>!1),Va.registerFlag("USE_SETTIMEOUTCUSTOM",()=>!1);const qa="__op";function Ka(e){const t=Object.keys(e);if(1!==t.length)throw new Error(`Please provide an object with a single key (operation name) mapping to a function. Got an object with ${t.length} keys.`);let n=t[0];const r=e[n];n.endsWith("_")&&(n=n.substring(0,n.length-1)),n+=qa;const s=(...e)=>{Da.startScope(n);try{const t=r(...e);return He(t)&&console.error("Cannot return a Promise inside of tidy."),Da.endScope(t),t}catch(e){throw Da.endScope(null),e}};return Object.defineProperty(s,"name",{value:n,configurable:!0}),s}const Xa=Ka({complex_:function(e,t){const n=Ha(e,"real","complex"),r=Ha(t,"imag","complex");oe(n.shape,r.shape,`real and imag shapes, ${n.shape} and ${r.shape}, must match in call to tf.complex().`);const s={real:n,imag:r};return Da.runKernel(Et,s)}});function Ya(e,t,n,r){if(null==r)r=_e(e);else if("complex64"===r)throw new Error("Cannot construct a complex64 tensor directly. Please use tf.complex(real, imag).");if(Na(e)||Sa(e)){if("float32"!==r&&"int32"!==r)throw new Error(`Creating tensor from GPU data only supports \'float32\'|\'int32\' dtype, while the dtype is ${r}.`);return Da.backend.createTensorFromGPUData(e,t||n,r)}if(!Qs(e)&&!Array.isArray(e)&&"number"!=typeof e&&"boolean"!=typeof e&&"string"!=typeof e)throw new Error("values passed to tensor(values) must be a number/boolean/string or an array of numbers/booleans/strings, or a TypedArray");if(null!=t){Ue(t);const e=le(t),r=le(n);ie(e===r,()=>`Based on the provided shape, [${t}], the tensor should have ${e} values but has ${r}`);for(let e=0;e<n.length;++e){const r=n[e],s=e!==n.length-1||r!==le(t.slice(e));ie(n[e]===t[e]||!s,()=>`Error creating a new Tensor. Inferred shape (${n}) does not match the provided shape (${t}). `)}}return Qs(e)||Array.isArray(e)||(e=[e]),t=t||n,e="string"!==r?Ks(e,r):ea(e,[],!0),Da.makeTensor(e,t,r)}function Ja(e,t,n){return Ya(e,t,Ua(e,n),n)}const Za={float32:4,float16:2,int32:4,uint16:2,uint8:1,bool:1,complex64:8};class Qa{static join(e){return new Qa(e).slice()}constructor(e){if(this.shards=[],this.previousShardIndex=0,null==e)return;if(e instanceof Array||(e=[e]),0===(e=e.map(e=>Qs(e)?e.buffer:e)).length)return;this.bufferUniformSize=e[0].byteLength;let t=0;for(let n=0;n<e.length;n++){const r=e[n];n!==e.length-1&&r.byteLength!==this.bufferUniformSize&&(this.bufferUniformSize=void 0);const s=t+r.byteLength;this.shards.push({buffer:r,start:t,end:s}),t=s}0===this.shards.length&&(this.byteLength=0),this.byteLength=this.shards[this.shards.length-1].end}slice(e=0,t=this.byteLength){if(0===this.shards.length)return new ArrayBuffer(0);if(e=isNaN(Number(e))?0:e,t=isNaN(Number(t))?0:t,e=Math.max(0,e),(t=Math.min(this.byteLength,t))<=e)return new ArrayBuffer(0);const n=this.findShardForByte(e);if(-1===n)throw new Error(`Could not find start shard for byte ${e}`);const r=new ArrayBuffer(t-e),s=new Uint8Array(r);let a=0;for(let r=n;r<this.shards.length;r++){const n=this.shards[r],i=e+a-n.start,o=a,u=Math.min(t,n.end)-n.start,l=new Uint8Array(n.buffer,i,u-i);if(s.set(l,o),a+=l.length,t<n.end)break}return r}findShardForByte(e){if(0===this.shards.length||e<0||e>=this.byteLength)return-1;if(null!=this.bufferUniformSize)return this.previousShardIndex=Math.floor(e/this.bufferUniformSize),this.previousShardIndex;function t(t){return e<t.start?-1:e>=t.end?1:0}if(0===t(this.shards[this.previousShardIndex]))return this.previousShardIndex;const n=function(e,t){let n=0,r=e.length;for(;n<=r;){const s=Math.floor((r-n)/2)+n,a=t(e[s]);if(0===a)return s;a<0?r=s:n=s+1}return-1}(this.shards,t);return-1===n?-1:(this.previousShardIndex=n,this.previousShardIndex)}}function ei(){Xe().set("PROD",!0)}function ti(){Xe().set("DEBUG",!0)}function ni(){Xe().set("DEPRECATION_WARNINGS_ENABLED",!1),console.warn("TensorFlow.js deprecation warnings have been disabled.")}function ri(e){Xe().getBool("DEPRECATION_WARNINGS_ENABLED")&&console.warn(e+" You can disable deprecation warnings with tf.disableDeprecationWarnings().")}function si(){Da.disposeVariables()}function ai(){return Da}function ii(){return Da.memory()}function oi(e){return Da.profile(e)}function ui(e,t){return Da.tidy(e,t)}function li(e){$a(e).forEach(e=>e.dispose())}function ci(e){return Da.keep(e)}function hi(e){return Da.time(e)}function di(e){return Da.setBackend(e)}function pi(){return Da.ready()}function fi(){return Da.backendName}function mi(e){Da.removeBackend(e)}function gi(e){return Da.findBackend(e)}function yi(e){return Da.findBackendFactory(e)}function bi(e,t,n=1){return Da.registerBackend(e,t,n)}function xi(){return Da.backend}function wi(e,t){Xe().setPlatform(e,t)}da=ri;const vi=4;async function ki(e,t){const n=[],r=[],s=Array.isArray(e)?e.map(e=>e.name):Object.keys(e);for(let a=0;a<s.length;++a){const i=s[a],o=Array.isArray(e)?e[a].tensor:e[i];if("float32"!==o.dtype&&"int32"!==o.dtype&&"bool"!==o.dtype&&"string"!==o.dtype&&"complex64"!==o.dtype)throw new Error(`Unsupported dtype in weight \'${i}\': ${o.dtype}`);const u={name:i,shape:o.shape,dtype:o.dtype};if("string"===o.dtype){const e=new Promise(async e=>{const t=await o.bytes(),n=t.reduce((e,t)=>e+t.length,0)+vi*t.length,r=new Uint8Array(n);let s=0;for(let e=0;e<t.length;e++){const n=t[e],a=new Uint8Array(new Uint32Array([n.length]).buffer);r.set(a,s),s+=vi,r.set(n,s),s+=n.length}e(r)});r.push(e)}else r.push(o.data());null!=t&&(u.group=t),n.push(u)}return{data:$i(await Promise.all(r)),specs:n}}function Ii(e,t){const n=new Qa(e),r={};let s=0;for(const e of t){const t=Si(e,(e,t)=>n.slice(s+e,s+t));r[e.name]=Ti(e,n.slice(s,s+t)),s+=t}return r}function Si(e,t){const n=le(e.shape);let r;if("quantization"in e){const t=e.quantization;r=Za[t.dtype]}else{if("string"===e.dtype){let e=0;for(let r=0;r<n;r++)e+=vi+new Uint32Array(t(e,e+vi))[0];return e}r=Za[e.dtype]}return n*r}async function Ni(e,t){const n=le(e.shape);let r;if("quantization"in e){const t=e.quantization;r=Za[t.dtype]}else{if("string"===e.dtype){let e=0;for(let r=0;r<n;r++)e+=vi+new Uint32Array(await t(e,e+vi))[0];return e}r=Za[e.dtype]}return n*r}function Ti(e,t){const n=e.name,r=e.dtype,s=e.shape,a=le(s);let i,o=0;if("quantization"in e){const s=e.quantization;if("uint8"===s.dtype||"uint16"===s.dtype){if(!("min"in s)||!("scale"in s))throw new Error(`Weight ${e.name} with quantization ${s.dtype} doesn\'t have corresponding metadata min and scale.`)}else{if("float16"!==s.dtype)throw new Error(`Weight ${e.name} has unknown quantization dtype ${s.dtype}. Supported quantization dtypes are: \'uint8\', \'uint16\', and \'float16\'.`);if("float32"!==r)throw new Error(`Weight ${e.name} is quantized with ${s.dtype} which only supports weights of type float32 not ${r}.`)}const u=Za[s.dtype],l="uint8"===s.dtype?new Uint8Array(t):new Uint16Array(t);if("float32"===r)if("uint8"===s.dtype||"uint16"===s.dtype){i=new Float32Array(l.length);for(let e=0;e<l.length;e++){const t=l[e];i[e]=t*s.scale+s.min}}else{if("float16"!==s.dtype)throw new Error(`Unsupported quantization type ${s.dtype} for weight type float32.`);{const e=function(){const e=function(){const e=e=>{let t=e<<13,n=0;for(;!(8388608&t);)n-=8388608,t<<=1;return t&=-8388609,n+=947912704,t|n},t=new Uint32Array(2048);t[0]=0;for(let n=1;n<1024;n++)t[n]=e(n);for(let e=1024;e<2048;e++)t[e]=939524096+(e-1024<<13);return t}(),t=function(){const e=new Uint32Array(64);e[0]=0,e[31]=1199570944,e[32]=2147483648,e[63]=3347054592;for(let t=1;t<31;t++)e[t]=t<<23;for(let t=33;t<63;t++)e[t]=2147483648+(t-32<<23);return e}(),n=function(){const e=new Uint32Array(64);for(let t=0;t<64;t++)e[t]=1024;return e[0]=e[32]=0,e}();return r=>{const s=new ArrayBuffer(4*r.length),a=new Uint32Array(s);for(let s=0;s<r.length;s++){const i=r[s],o=e[n[i>>10]+(1023&i)]+t[i>>10];a[s]=o}return new Float32Array(s)}}();i=e(l)}}else{if("int32"!==r)throw new Error(`Unsupported dtype in weight \'${n}\': ${r}`);if("uint8"!==s.dtype&&"uint16"!==s.dtype)throw new Error(`Unsupported quantization type ${s.dtype} for weight type int32.`);i=new Int32Array(l.length);for(let e=0;e<l.length;e++){const t=l[e];i[e]=Math.round(t*s.scale+s.min)}}o+=a*u}else if("string"===r){const n=le(e.shape);i=[];for(let e=0;e<n;e++){const e=new Uint32Array(t.slice(o,o+vi))[0];o+=vi;const n=new Uint8Array(t.slice(o,o+e));i.push(n),o+=e}}else{const e=Za[r];if("float32"===r)i=new Float32Array(t);else if("int32"===r)i=new Int32Array(t);else{if("bool"!==r){if("complex64"===r){i=new Float32Array(t);const e=new Float32Array(i.length/2),n=new Float32Array(i.length/2);for(let t=0;t<e.length;t++)e[t]=i[2*t],n[t]=i[2*t+1];const r=Ja(e,s,"float32"),a=Ja(n,s,"float32"),o=Xa(r,a);return r.dispose(),a.dispose(),o}throw new Error(`Unsupported dtype in weight \'${n}\': ${r}`)}i=new Uint8Array(t)}o+=a*e}return Ja(i,s,r)}async function Ei(e,t,n){let r=new Uint8Array(t);for(;r.byteLength<n;){const{done:t,value:s}=await e.read();if(t&&null==s){const e=n-r.byteLength;throw new Error(`Reader is done but ${e} bytes are still expected`)}const a=new Uint8Array(r.length+s.byteLength);a.set(r,0),a.set(new Uint8Array(s),r.length),r=a}return r.buffer}async function Ci(e,t){const n={},r=e.getReader();let s=new ArrayBuffer(0);for(const e of t){const t=await Ni(e,async(e,t)=>(s=await Ei(r,s,t),s.slice(e,t)));s=await Ei(r,s,t);const a=s.slice(0,t);s=s.slice(t);const i=Ti(e,a);if(n[e.name]=i,"webgpu"===fi()){const e=xi();"uploadToGPU"in e&&le(i.shape)>=Xe().get("WEBGPU_CPU_HANDOFF_SIZE_THRESHOLD")&&e.uploadToGPU(i.dataId)}}return n}function $i(e){if(null===e)throw new Error(`Invalid input value: ${JSON.stringify(e)}`);let t=0;const n=[];e.forEach(e=>{if(t+=e.byteLength,n.push(e.byteLength===e.buffer.byteLength?e:new e.constructor(e)),!(e instanceof Float32Array||e instanceof Int32Array||e instanceof Uint8Array))throw new Error(`Unsupported TypedArray subtype: ${e.constructor.name}`)});const r=new Uint8Array(t);let s=0;return n.forEach(e=>{r.set(new Uint8Array(e.buffer),s),s+=e.byteLength}),r.buffer}const Ai="undefined"!=typeof Buffer&&("undefined"==typeof Blob||"undefined"==typeof atob||"undefined"==typeof btoa);function Ri(e){return Ai?Buffer.byteLength(e,"utf8"):new Blob([e]).size}function _i(e){return Qa.join(e)}function Mi(e){for(e=e.trim();e.endsWith("/");)e=e.slice(0,e.length-1);const t=e.split("/");return t[t.length-1]}function Fi(e,t){const n={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,weightsManifest:t};return null!=e.signature&&(n.signature=e.signature),null!=e.userDefinedMetadata&&(n.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(n.modelInitializer=e.modelInitializer),null!=e.initializerSignature&&(n.initializerSignature=e.initializerSignature),null!=e.trainingConfig&&(n.trainingConfig=e.trainingConfig),n}function Di(e,t,n){const r={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy};if(null!=e.trainingConfig&&(r.trainingConfig=e.trainingConfig),null!=e.weightsManifest){if(!t)throw new Error("modelJSON has weightsManifest but weightSpecs is null");if(!n)throw new Error("modelJSON has weightsManifest but weightData is null");r.weightSpecs=t,r.weightData=n}return null!=e.signature&&(r.signature=e.signature),null!=e.userDefinedMetadata&&(r.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(r.modelInitializer=e.modelInitializer),null!=e.initializerSignature&&(r.initializerSignature=e.initializerSignature),r}async function Oi(e,t){let n,r;return null!=e.weightsManifest&&([n,r]=await t(e.weightsManifest)),Di(e,n,r)}function Li(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("Expected JSON model topology, received ArrayBuffer.");return{dateSaved:new Date,modelTopologyType:"JSON",modelTopologyBytes:null==e.modelTopology?0:Ri(JSON.stringify(e.modelTopology)),weightSpecsBytes:null==e.weightSpecs?0:Ri(JSON.stringify(e.weightSpecs)),weightDataBytes:null==e.weightData?0:new Qa(e.weightData).byteLength}}function zi(e){const t=[];for(const n of e)t.push(...n.weights);return t}class Pi{constructor(){this.saveRouters=[],this.loadRouters=[]}static getInstance(){return null==Pi.instance&&(Pi.instance=new Pi),Pi.instance}static registerSaveRouter(e){Pi.getInstance().saveRouters.push(e)}static registerLoadRouter(e){Pi.getInstance().loadRouters.push(e)}static getSaveHandlers(e){return Pi.getHandlers(e,"save")}static getLoadHandlers(e,t){return Pi.getHandlers(e,"load",t)}static getHandlers(e,t,n){const r=[];return("load"===t?Pi.getInstance().loadRouters:Pi.getInstance().saveRouters).forEach(t=>{const s=t(e,n);null!==s&&r.push(s)}),r}}const Bi=e=>Pi.registerSaveRouter(e),Vi=e=>Pi.registerLoadRouter(e),Ui=e=>Pi.getSaveHandlers(e),Wi=(e,t)=>Pi.getLoadHandlers(e,t),Gi="tensorflowjs",Hi="models_store",ji="model_info_store";function qi(){if(!Xe().getBool("IS_BROWSER"))throw new Error("Failed to obtain IndexedDB factory because the current environmentis not a web browser.");const e="undefined"==typeof window?self:window,t=e.indexedDB||e.mozIndexedDB||e.webkitIndexedDB||e.msIndexedDB||e.shimIndexedDB;if(null==t)throw new Error("The current browser does not appear to support IndexedDB.");return t}function Ki(e){const t=e.result;t.createObjectStore(Hi,{keyPath:"modelPath"}),t.createObjectStore(ji,{keyPath:"modelPath"})}class Xi{constructor(e){if(this.indexedDB=qi(),null==e||!e)throw new Error("For IndexedDB, modelPath must not be null, undefined or empty.");this.modelPath=e}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");return this.databaseAction(this.modelPath,e)}async load(){return this.databaseAction(this.modelPath)}databaseAction(e,t){return new Promise((e,n)=>{const r=this.indexedDB.open(Gi,1);r.onupgradeneeded=()=>Ki(r),r.onsuccess=()=>{const s=r.result;if(null==t){const t=s.transaction(Hi,"readonly"),r=t.objectStore(Hi).get(this.modelPath);r.onsuccess=()=>{if(null==r.result)return s.close(),n(new Error(`Cannot find model with path \'${this.modelPath}\' in IndexedDB.`));e(r.result.modelArtifacts)},r.onerror=e=>(s.close(),n(r.error)),t.oncomplete=()=>s.close()}else{t.weightData=Qa.join(t.weightData);const r=Li(t),a=s.transaction(ji,"readwrite");let i,o,u=a.objectStore(ji);try{i=u.put({modelPath:this.modelPath,modelArtifactsInfo:r})}catch(e){return n(e)}i.onsuccess=()=>{o=s.transaction(Hi,"readwrite");const i=o.objectStore(Hi);let l;try{l=i.put({modelPath:this.modelPath,modelArtifacts:t,modelArtifactsInfo:r})}catch(e){return n(e)}l.onsuccess=()=>e({modelArtifactsInfo:r}),l.onerror=e=>{u=a.objectStore(ji);const t=u.delete(this.modelPath);t.onsuccess=()=>(s.close(),n(l.error)),t.onerror=e=>(s.close(),n(l.error))}},i.onerror=e=>(s.close(),n(i.error)),a.oncomplete=()=>{null==o?s.close():o.oncomplete=()=>s.close()}}},r.onerror=e=>n(r.error)})}}Xi.URL_SCHEME="indexeddb://";const Yi=e=>{return Xe().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(Xi.URL_SCHEME)?(t=e.slice(Xi.URL_SCHEME.length),new Xi(t)):null;var t};Pi.registerSaveRouter(Yi),Pi.registerLoadRouter(Yi);class Ji{constructor(){this.indexedDB=qi()}async listModels(){return new Promise((e,t)=>{const n=this.indexedDB.open(Gi,1);n.onupgradeneeded=()=>Ki(n),n.onsuccess=()=>{const r=n.result,s=r.transaction(ji,"readonly"),a=s.objectStore(ji).getAll();a.onsuccess=()=>{const t={};for(const e of a.result)t[e.modelPath]=e.modelArtifactsInfo;e(t)},a.onerror=e=>(r.close(),t(a.error)),s.oncomplete=()=>r.close()},n.onerror=e=>t(n.error)})}async removeModel(e){var t;return e=(t=e).startsWith(Xi.URL_SCHEME)?t.slice(Xi.URL_SCHEME.length):t,new Promise((t,n)=>{const r=this.indexedDB.open(Gi,1);r.onupgradeneeded=()=>Ki(r),r.onsuccess=()=>{const s=r.result,a=s.transaction(ji,"readwrite"),i=a.objectStore(ji),o=i.get(e);let u;o.onsuccess=()=>{if(null==o.result)return s.close(),n(new Error(`Cannot find model with path \'${e}\' in IndexedDB.`));{const r=i.delete(e),a=()=>{u=s.transaction(Hi,"readwrite");const r=u.objectStore(Hi).delete(e);r.onsuccess=()=>t(o.result.modelArtifactsInfo),r.onerror=e=>n(o.error)};r.onsuccess=a,r.onerror=e=>(a(),s.close(),n(o.error))}},o.onerror=e=>(s.close(),n(o.error)),a.oncomplete=()=>{null==u?s.close():u.oncomplete=()=>s.close()}},r.onerror=e=>n(r.error)})}}const Zi="/",Qi="tensorflowjs_models",eo="info",to="model_topology",no="weight_specs",ro="weight_data",so="model_metadata";function ao(e){return{info:[Qi,e,eo].join(Zi),topology:[Qi,e,to].join(Zi),weightSpecs:[Qi,e,no].join(Zi),weightData:[Qi,e,ro].join(Zi),modelMetadata:[Qi,e,so].join(Zi)}}function io(e){for(const t of Object.values(e))window.localStorage.removeItem(t)}function oo(e){const t=e.split(Zi);if(t.length<3)throw new Error(`Invalid key format: ${e}`);return t.slice(1,t.length-1).join(Zi)}class uo{constructor(e){if(!Xe().getBool("IS_BROWSER")||"undefined"==typeof window||void 0===window.localStorage)throw new Error("The current environment does not support local storage.");if(this.LS=window.localStorage,null==e||!e)throw new Error("For local storage, modelPath must not be null, undefined or empty.");this.modelPath=e,this.keys=ao(this.modelPath)}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");{const t=JSON.stringify(e.modelTopology),n=JSON.stringify(e.weightSpecs),r=Li(e),s=Qa.join(e.weightData);try{this.LS.setItem(this.keys.info,JSON.stringify(r)),this.LS.setItem(this.keys.topology,t),this.LS.setItem(this.keys.weightSpecs,n),this.LS.setItem(this.keys.weightData,function(e){if(Ai)return Buffer.from(e).toString("base64");const t=new Uint8Array(e);let n="";for(let e=0,r=t.length;e<r;e++)n+=String.fromCharCode(t[e]);return btoa(n)}(s));const a={format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,signature:null!=e.signature?e.signature:void 0,userDefinedMetadata:null!=e.userDefinedMetadata?e.userDefinedMetadata:void 0,modelInitializer:null!=e.modelInitializer?e.modelInitializer:void 0,initializerSignature:null!=e.initializerSignature?e.initializerSignature:void 0,trainingConfig:null!=e.trainingConfig?e.trainingConfig:void 0};return this.LS.setItem(this.keys.modelMetadata,JSON.stringify(a)),{modelArtifactsInfo:r}}catch(e){throw io(this.keys),new Error(`Failed to save model \'${this.modelPath}\' to local storage: size quota being exceeded is a possible cause of this failure: modelTopologyBytes=${r.modelTopologyBytes}, weightSpecsBytes=${r.weightSpecsBytes}, weightDataBytes=${r.weightDataBytes}.`)}}}async load(){const e=JSON.parse(this.LS.getItem(this.keys.info));if(null==e)throw new Error(`In local storage, there is no model with name \'${this.modelPath}\'`);if("JSON"!==e.modelTopologyType)throw new Error("BrowserLocalStorage does not support loading non-JSON model topology yet.");const t={},n=JSON.parse(this.LS.getItem(this.keys.topology));if(null==n)throw new Error(`In local storage, the topology of model \'${this.modelPath}\' is missing.`);t.modelTopology=n;const r=JSON.parse(this.LS.getItem(this.keys.weightSpecs));if(null==r)throw new Error(`In local storage, the weight specs of model \'${this.modelPath}\' are missing.`);t.weightSpecs=r;const s=this.LS.getItem(this.keys.modelMetadata);if(null!=s){const e=JSON.parse(s);t.format=e.format,t.generatedBy=e.generatedBy,t.convertedBy=e.convertedBy,null!=e.signature&&(t.signature=e.signature),null!=e.userDefinedMetadata&&(t.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(t.modelInitializer=e.modelInitializer),null!=e.initializerSignature&&(t.initializerSignature=e.initializerSignature),null!=e.trainingConfig&&(t.trainingConfig=e.trainingConfig)}const a=this.LS.getItem(this.keys.weightData);if(null==a)throw new Error(`In local storage, the binary weight values of model \'${this.modelPath}\' are missing.`);return t.weightData=function(e){if(Ai){const t=Buffer.from(e,"base64");return t.buffer.slice(t.byteOffset,t.byteOffset+t.byteLength)}const t=atob(e),n=new Uint8Array(t.length);for(let e=0;e<t.length;++e)n.set([t.charCodeAt(e)],e);return n.buffer}(a),t}}uo.URL_SCHEME="localstorage://";const lo=e=>{return Xe().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(uo.URL_SCHEME)?(t=e.slice(uo.URL_SCHEME.length),new uo(t)):null;var t};Pi.registerSaveRouter(lo),Pi.registerLoadRouter(lo);class co{constructor(){ie(Xe().getBool("IS_BROWSER"),()=>"Current environment is not a web browser"),ie("undefined"==typeof window||void 0!==window.localStorage,()=>"Current browser does not appear to support localStorage"),this.LS=window.localStorage}async listModels(){const e={},t=Qi+Zi,n=Zi+eo;for(let r=0;r<this.LS.length;++r){const s=this.LS.key(r);s.startsWith(t)&&s.endsWith(n)&&(e[oo(s)]=JSON.parse(this.LS.getItem(s)))}return e}async removeModel(e){var t;const n=ao(e=(t=e).startsWith(uo.URL_SCHEME)?t.slice(uo.URL_SCHEME.length):t);if(null==this.LS.getItem(n.info))throw new Error(`Cannot find model at path \'${e}\'`);const r=JSON.parse(this.LS.getItem(n.info));return io(n),r}}const ho="://";class po{constructor(){this.managers={}}static getInstance(){return null==po.instance&&(po.instance=new po),po.instance}static registerManager(e,t){ie(null!=e,()=>"scheme must not be undefined or null."),e.endsWith(ho)&&(e=e.slice(0,e.indexOf(ho))),ie(e.length>0,()=>"scheme must not be an empty string.");const n=po.getInstance();ie(null==n.managers[e],()=>`A model store manager is already registered for scheme \'${e}\'.`),n.managers[e]=t}static getManager(e){const t=po.getInstance().managers[e];if(null==t)throw new Error(`Cannot find model manager for scheme \'${e}\'`);return t}static getSchemes(){return Object.keys(po.getInstance().managers)}}function fo(e){if(-1===e.indexOf(ho))throw new Error(`The url string provided does not contain a scheme. Supported schemes are: ${po.getSchemes().join(",")}`);return{scheme:e.split(ho)[0],path:e.split(ho)[1]}}async function mo(e,t,n=!1){ie(e!==t,()=>`Old path and new path are the same: \'${e}\'`);const r=Pi.getLoadHandlers(e);ie(r.length>0,()=>`Copying failed because no load handler is found for source URL ${e}.`),ie(r.length<2,()=>`Copying failed because more than one (${r.length}) load handlers for source URL ${e}.`);const s=r[0],a=Pi.getSaveHandlers(t);ie(a.length>0,()=>`Copying failed because no save handler is found for destination URL ${t}.`),ie(a.length<2,()=>`Copying failed because more than one (${r.length}) save handlers for destination URL ${t}.`);const i=a[0],o=fo(e).scheme,u=fo(e).path,l=o===fo(e).scheme,c=await s.load();n&&l&&await po.getManager(o).removeModel(u);const h=await i.save(c);return n&&!l&&await po.getManager(o).removeModel(u),h.modelArtifactsInfo}async function go(){const e=po.getSchemes(),t={};for(const n of e){const e=await po.getManager(n).listModels();for(const r in e)t[n+ho+r]=e[r]}return t}async function yo(e){const t=fo(e);return po.getManager(t.scheme).removeModel(t.path)}async function bo(e,t){return mo(e,t,!1)}async function xo(e,t){return mo(e,t,!0)}class wo{constructor(){this.messageName="setTimeoutCustom",this.functionRefs=[],this.handledMessageCount=0,this.hasEventListener=!1}fetch(e,t){return fetch(e,t)}now(){return performance.now()}encode(e,t){if("utf-8"!==t&&"utf8"!==t)throw new Error(`Browser\'s encoder only supports utf-8, but got ${t}`);return null==this.textEncoder&&(this.textEncoder=new TextEncoder),this.textEncoder.encode(e)}decode(e,t){return new TextDecoder(t).decode(e)}setTimeoutCustom(e,t){"undefined"!=typeof window&&Xe().getBool("USE_SETTIMEOUTCUSTOM")?(this.functionRefs.push(e),setTimeout(()=>{window.postMessage({name:this.messageName,index:this.functionRefs.length-1},"*")},t),this.hasEventListener||(this.hasEventListener=!0,window.addEventListener("message",e=>{e.source===window&&e.data.name===this.messageName&&(e.stopPropagation(),(0,this.functionRefs[e.data.index])(),this.handledMessageCount++,this.handledMessageCount===this.functionRefs.length&&(this.functionRefs=[],this.handledMessageCount=0))},!0))):setTimeout(e,t)}isTypedArray(e){return _s(e)}}if(Xe().get("IS_BROWSER")){Xe().setPlatform("browser",new wo);try{po.registerManager(uo.URL_SCHEME,new co)}catch(e){}try{po.registerManager(Xi.URL_SCHEME,new Ji)}catch(e){}}let vo;function ko(e,t="float32",n){return t=t||"float32",Ue(e),new la(e,t,n)}Xe().get("IS_NODE")&&!Xe().get("IS_BROWSER")&&Xe().setPlatform("node",new class{constructor(){this.util=n(590),this.textEncoder=new this.util.TextEncoder}fetch(e,t){return null!=Xe().global.fetch?Xe().global.fetch(e,t):(null==vo&&(vo=n(817)),vo(e,t))}now(){const e=process.hrtime();return 1e3*e[0]+e[1]/1e6}encode(e,t){if("utf-8"!==t&&"utf8"!==t)throw new Error(`Node built-in encoder only supports utf-8, but got ${t}`);return this.textEncoder.encode(e)}decode(e,t){return 0===e.length?"":new this.util.TextDecoder(t).decode(e)}isTypedArray(e){return this.util.types.isFloat32Array(e)||this.util.types.isInt32Array(e)||this.util.types.isUint8Array(e)||this.util.types.isUint8ClampedArray(e)}});const Io=Ka({cast_:function(e,t){const n=Ha(e,"x","cast");if(!Ne(t))throw new Error(`Failed to cast to unknown dtype ${t}`);if("string"===t&&"string"!==n.dtype||"string"!==t&&"string"===n.dtype)throw new Error("Only strings can be casted to strings");const r={x:n},s={dtype:t};return Da.runKernel(St,r,s)}}),So=Ka({clone_:function(e){const t={x:Ha(e,"x","clone","string_or_numeric")};return Da.runKernel(yn,t)}});function No(e,t=!1){console.log(e.toString(t))}Fa(),ha={buffer:ko,cast:Io,clone:So,print:No};const To=Ka({add_:function(e,t){let n=Ha(e,"a","add"),r=Ha(t,"b","add");[n,r]=Ta(n,r);const s={a:n,b:r};return Da.runKernel(rt,s)}}),Eo=Ka({floorDiv_:function(e,t){let n=Ha(e,"a","floorDiv"),r=Ha(t,"b","floorDiv");[n,r]=Ta(n,r);const s={a:n,b:r};return Da.runKernel(hn,s)}}),Co=Ka({div_:function(e,t){let n=Ha(e,"a","div"),r=Ha(t,"b","div");if([n,r]=Ta(n,r),"int32"===n.dtype&&"int32"===r.dtype)return Eo(n,r);const s={a:n,b:r};return Da.runKernel(Jt,s,{})}}),$o=Ka({mul_:function(e,t){let n=Ha(e,"a","mul"),r=Ha(t,"b","mul");[n,r]=Ta(n,r);const s={a:n,b:r};return Da.runKernel(Jn,s)}}),Ao=Ka({sqrt_:function(e){const t={x:Ha(e,"x","sqrt","float32")};return Da.runKernel(zr,t)}}),Ro=Ka({square_:function(e){const t=Ha(e,"x","square");return Da.runKernel("Square",{x:t},{})}}),_o=Ka({zerosLike_:function(e){const t={x:Ha(e,"x","zerosLike")};return Da.runKernel(ds,t)}});function Mo(e){return ie(Me(e),()=>"The f passed in grad(f) must be a function"),(t,n)=>{const r=Ha(t,"x","tf.grad","string_or_numeric"),s=null!=n?Ha(n,"dy","tf.grad"):null;return Da.tidy(()=>{const{value:t,grads:n}=Da.gradients(()=>e(r),[r],s);return null!=s&&oe(t.shape,s.shape,"The shape of dy passed in grad(f)(x, dy) must match the shape returned by f(x)"),Po(n),n[0]})}}function Fo(e){return ie(Me(e),()=>"The f passed in grads(f) must be a function"),(t,n)=>{ie(Array.isArray(t),()=>"The args passed in grads(f)(args) must be an array of `Tensor`s or `TensorLike`s");const r=ja(t,"args","tf.grads","string_or_numeric"),s=null!=n?Ha(n,"dy","tf.grads"):null;return Da.tidy(()=>{const{value:t,grads:n}=Da.gradients(()=>e(...r),r,s);return null!=s&&oe(t.shape,s.shape,"The shape of dy passed in grads(f)([x1,...], dy) must match the shape returned by f([x1,...])"),Po(n),n})}}function Do(e){return ie(Me(e),()=>"The f passed in valueAndGrad(f) must be a function"),(t,n)=>{ie(t instanceof pa,()=>"The x passed in valueAndGrad(f)(x) must be a tensor"),ie(null==n||n instanceof pa,()=>"The dy passed in valueAndGrad(f)(x, dy) must be a tensor");const{grads:r,value:s}=Da.gradients(()=>e(t),[t],n);return Po(r),{grad:r[0],value:s}}}function Oo(e){return ie(Me(e),()=>"The f passed in valueAndGrads(f) must be a function"),(t,n)=>{ie(Array.isArray(t)&&t.every(e=>e instanceof pa),()=>"The args passed in valueAndGrads(f)(args) must be array of tensors"),ie(null==n||n instanceof pa,()=>"The dy passed in valueAndGrads(f)(args, dy) must be a tensor");const r=Da.gradients(()=>e(...t),t,n);return null!=n&&oe(r.value.shape,n.shape,"The shape of dy passed in valueAndGrads(f)([x1,...], dy) must match the shape returned by f([x1,...])"),Po(r.grads),r}}function Lo(e,t){ie(Me(e),()=>"The f passed in variableGrads(f) must be a function"),ie(null==t||Array.isArray(t)&&t.every(e=>e instanceof ma),()=>"The varList passed in variableGrads(f, varList) must be an array of variables");const n=null!=t;if(!n){t=[];for(const e in Da.registeredVariables)t.push(Da.registeredVariables[e])}const r=n?t.filter(e=>!e.trainable):null,s=t.length;t=t.filter(e=>e.trainable),ie(t.length>0,()=>`variableGrads() expects at least one of the input variables to be trainable, but none of the ${s} variables is trainable.`);const{value:a,grads:i}=Da.gradients(e,t,null,!0);ie(i.some(e=>null!=e),()=>"Cannot find a connection between any variable and the result of the loss function y=f(x). Please make sure the operations that use variables are inside the function f passed to minimize()."),ie(0===a.rank,()=>`The f passed in variableGrads(f) must return a scalar, but it returned a rank-${a.rank} tensor`);const o={};return t.forEach((e,t)=>{null!=i[t]&&(o[e.name]=i[t])}),null!=r&&r.forEach(e=>o[e.name]=null),{value:a,grads:o}}function zo(e){return Da.customGrad(e)}function Po(e){if(e.filter(e=>null==e).length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that\\n    the f you passed encloses all operations that lead from x to y.")}function Bo(e,t){if((Qs(e)&&"string"!==t||Array.isArray(e))&&"complex64"!==t)throw new Error("Error creating a new Scalar: value must be a primitive (number|boolean|string)");if("string"===t&&Qs(e)&&!(e instanceof Uint8Array))throw new Error("When making a scalar from encoded string, the value must be `Uint8Array`.");return Ya(e,[],[],t)}const Vo=new Map,Uo=new Map;class Wo{getClassName(){return this.constructor.className}static fromConfig(e,t){return new e(t)}}class Go{constructor(){this.classNameMap={}}static getMap(){return null==Go.instance&&(Go.instance=new Go),Go.instance}static register(e){Go.getMap().classNameMap[e.className]=[e,e.fromConfig]}}function Ho(e,t,n){ie(null!=e.className,()=>"Class being registered does not have the static className property defined."),ie("string"==typeof e.className,()=>"className is required to be a string, but got type "+typeof e.className),ie(e.className.length>0,()=>"Class being registered has an empty-string as its className, which is disallowed."),void 0===t&&(t="Custom"),void 0===n&&(n=e.className);const r=t+">"+n;return Go.register(e),Vo.set(r,e),Uo.set(e,r),e}function jo(e){return Uo.has(e)?Uo.get(e):e.className}class qo extends Wo{minimize(e,t=!1,n){const{value:r,grads:s}=this.computeGradients(e,n);if(null!=n){const e=n.map(e=>({name:e.name,tensor:s[e.name]}));this.applyGradients(e)}else this.applyGradients(s);return li(s),t?r:(r.dispose(),null)}get iterations(){return null==this.iterations_&&(this.iterations_=0),this.iterations_}incrementIterations(){this.iterations_=this.iterations+1}computeGradients(e,t){return Lo(e,t)}dispose(){null!=this.iterations_&&li(this.iterations_)}async saveIterations(){return null==this.iterations_&&(this.iterations_=0),{name:"iter",tensor:Bo(this.iterations_,"int32")}}async getWeights(){throw new Error("getWeights() is not implemented for this optimizer yet.")}async setWeights(e){throw new Error(`setWeights() is not implemented for this optimizer class ${this.getClassName()}`)}async extractIterations(e){return this.iterations_=(await e[0].tensor.data())[0],e.slice(1)}}Object.defineProperty(qo,Symbol.hasInstance,{value:e=>null!=e.minimize&&null!=e.computeGradients&&null!=e.applyGradients});class Ko extends qo{static get className(){return"Adadelta"}constructor(e,t,n=null){super(),this.learningRate=e,this.rho=t,this.epsilon=n,this.accumulatedGrads=[],this.accumulatedUpdates=[],null==n&&(this.epsilon=Da.backend.epsilon())}applyGradients(e){(Array.isArray(e)?e.map(e=>e.name):Object.keys(e)).forEach((t,n)=>{const r=Da.registeredVariables[t],s=!1;null==this.accumulatedGrads[n]&&(this.accumulatedGrads[n]={originalName:`${t}/accum_grad`,variable:ui(()=>_o(r).variable(s))}),null==this.accumulatedUpdates[n]&&(this.accumulatedUpdates[n]={originalName:`${t}/accum_var`,variable:ui(()=>_o(r).variable(s))});const a=Array.isArray(e)?e[n].tensor:e[t];if(null==a)return;const i=this.accumulatedGrads[n].variable,o=this.accumulatedUpdates[n].variable;ui(()=>{const e=To($o(i,this.rho),$o(Ro(a),1-this.rho)),t=$o(Co(Ao(To(o,this.epsilon)),Ao(To(i,this.epsilon))),a),n=To($o(o,this.rho),$o(Ro(t),1-this.rho));i.assign(e),o.assign(n);const s=To($o(t,-this.learningRate),r);r.assign(s)})}),this.incrementIterations()}dispose(){null!=this.accumulatedUpdates&&(li(this.accumulatedGrads.map(e=>e.variable)),li(this.accumulatedUpdates.map(e=>e.variable)))}async getWeights(){const e=[...this.accumulatedGrads,...this.accumulatedUpdates];return[await this.saveIterations()].concat(e.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(e){const t=(e=await this.extractIterations(e)).length/2,n=!1;this.accumulatedGrads=e.slice(0,t).map(e=>({originalName:e.name,variable:e.tensor.variable(n)})),this.accumulatedUpdates=e.slice(t,2*t).map(e=>({originalName:e.name,variable:e.tensor.variable(n)}))}getConfig(){return{learningRate:this.learningRate,rho:this.rho,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.rho,t.epsilon)}}function Xo(e,t,n){Ue(e);const r={shape:e,value:t,dtype:n=n||_e(t)};return Da.runKernel(un,{},r)}class Yo extends qo{static get className(){return"Adagrad"}constructor(e,t=.1){super(),this.learningRate=e,this.initialAccumulatorValue=t,this.accumulatedGrads=[]}applyGradients(e){(Array.isArray(e)?e.map(e=>e.name):Object.keys(e)).forEach((t,n)=>{const r=Da.registeredVariables[t];if(null==this.accumulatedGrads[n]){const e=!1;this.accumulatedGrads[n]={originalName:`${t}/accumulator`,variable:ui(()=>Xo(r.shape,this.initialAccumulatorValue).variable(e))}}const s=Array.isArray(e)?e[n].tensor:e[t];if(null==s)return;const a=this.accumulatedGrads[n].variable;ui(()=>{const e=To(a,Ro(s));a.assign(e);const t=To($o(Co(s,Ao(To(e,Da.backend.epsilon()))),-this.learningRate),r);r.assign(t)})}),this.incrementIterations()}dispose(){null!=this.accumulatedGrads&&li(this.accumulatedGrads.map(e=>e.variable))}async getWeights(){return[await this.saveIterations()].concat(this.accumulatedGrads.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(e){e=await this.extractIterations(e),this.accumulatedGrads=e.map(e=>({originalName:e.name,variable:e.tensor.variable(!1)}))}getConfig(){return{learningRate:this.learningRate,initialAccumulatorValue:this.initialAccumulatorValue}}static fromConfig(e,t){return new e(t.learningRate,t.initialAccumulatorValue)}}const Jo=Ka({pow_:function(e,t){let n=Ha(e,"base","pow"),r=Ha(t,"exp","pow");[n,r]=Ta(n,r);const s={a:n,b:r};return Da.runKernel(ur,s)}}),Zo=Ka({sub_:function(e,t){let n=Ha(e,"a","sub"),r=Ha(t,"b","sub");[n,r]=Ta(n,r);const s={a:n,b:r};return Da.runKernel(ts,s)}});class Qo extends qo{static get className(){return"Adam"}constructor(e,t,n,r=null){super(),this.learningRate=e,this.beta1=t,this.beta2=n,this.epsilon=r,this.accumulatedFirstMoment=[],this.accumulatedSecondMoment=[],ui(()=>{this.accBeta1=Bo(t).variable(),this.accBeta2=Bo(n).variable()}),null==r&&(this.epsilon=Da.backend.epsilon())}applyGradients(e){const t=Array.isArray(e)?e.map(e=>e.name):Object.keys(e);ui(()=>{const n=Zo(1,this.accBeta1),r=Zo(1,this.accBeta2);t.forEach((t,s)=>{const a=Da.registeredVariables[t],i=!1;null==this.accumulatedFirstMoment[s]&&(this.accumulatedFirstMoment[s]={originalName:`${t}/m`,variable:ui(()=>_o(a).variable(i))}),null==this.accumulatedSecondMoment[s]&&(this.accumulatedSecondMoment[s]={originalName:`${t}/v`,variable:ui(()=>_o(a).variable(i))});const o=Array.isArray(e)?e[s].tensor:e[t];if(null==o)return;const u=this.accumulatedFirstMoment[s].variable,l=this.accumulatedSecondMoment[s].variable,c=To($o(u,this.beta1),$o(o,1-this.beta1)),h=To($o(l,this.beta2),$o(Ro(o),1-this.beta2)),d=Co(c,n),p=Co(h,r);u.assign(c),l.assign(h);const f=To($o(Co(d,To(Ao(p),this.epsilon)),-this.learningRate),a);a.assign(f)}),this.accBeta1.assign($o(this.accBeta1,this.beta1)),this.accBeta2.assign($o(this.accBeta2,this.beta2))}),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.accBeta2.dispose(),null!=this.accumulatedFirstMoment&&li(this.accumulatedFirstMoment.map(e=>e.variable)),null!=this.accumulatedSecondMoment&&li(this.accumulatedSecondMoment.map(e=>e.variable))}async getWeights(){const e=[...this.accumulatedFirstMoment,...this.accumulatedSecondMoment];return[await this.saveIterations()].concat(e.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(e){e=await this.extractIterations(e),ui(()=>{this.accBeta1.assign(Jo(this.beta1,this.iterations_+1)),this.accBeta2.assign(Jo(this.beta2,this.iterations_+1))});const t=e.length/2,n=!1;this.accumulatedFirstMoment=e.slice(0,t).map(e=>({originalName:e.name,variable:e.tensor.variable(n)})),this.accumulatedSecondMoment=e.slice(t,2*t).map(e=>({originalName:e.name,variable:e.tensor.variable(n)}))}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon)}}const eu=Ka({abs_:function(e){const t=Ha(e,"x","abs");if("complex64"===t.dtype){const e={x:t};return Da.runKernel(Ct,e)}{const e={x:t};return Da.runKernel(et,e)}}});function tu(e,t){const n=e.length,r=[];for(let s=0;s<n;s++){const a=n-1-s,i=e[a]||1;(t[t.length-1-s]||1)>1&&1===i&&r.unshift(a)}return r}function nu(e,t){const n=[];for(let r=0;r<t.length;r++){const s=e[e.length-r-1],a=t.length-r-1,i=t[a];(null==s||1===s&&i>1)&&n.unshift(a)}return n}function ru(e,t){const n=Math.max(e.length,t.length),r=new Array(n);for(let s=0;s<n;s++){let a=e[e.length-s-1];null==a&&(a=1);let i=t[t.length-s-1];if(null==i&&(i=1),1===a)r[n-s-1]=i;else if(1===i)r[n-s-1]=a;else{if(a!==i)throw Error(`Operands could not be broadcast together with shapes ${e} and ${t}.`);r[n-s-1]=a}}return r}const su=Ka({maximum_:function(e,t){let n=Ha(e,"a","maximum"),r=Ha(t,"b","maximum");[n,r]=Ta(n,r),"bool"===n.dtype&&(n=Io(n,"int32"),r=Io(r,"int32")),ru(n.shape,r.shape);const s={a:n,b:r};return Da.runKernel(Pn,s)}});class au extends qo{static get className(){return"Adamax"}constructor(e,t,n,r=null,s=0){super(),this.learningRate=e,this.beta1=t,this.beta2=n,this.epsilon=r,this.decay=s,this.accumulatedFirstMoment=[],this.accumulatedWeightedInfNorm=[],ui(()=>{this.iteration=Bo(0).variable(),this.accBeta1=Bo(t).variable()}),null==r&&(this.epsilon=Da.backend.epsilon())}applyGradients(e){const t=Array.isArray(e)?e.map(e=>e.name):Object.keys(e);ui(()=>{const n=Zo(1,this.accBeta1),r=Co(-this.learningRate,To($o(this.iteration,this.decay),1));t.forEach((t,s)=>{const a=Da.registeredVariables[t],i=!1;null==this.accumulatedFirstMoment[s]&&(this.accumulatedFirstMoment[s]={originalName:`${t}/m`,variable:_o(a).variable(i)}),null==this.accumulatedWeightedInfNorm[s]&&(this.accumulatedWeightedInfNorm[s]={originalName:`${t}/v`,variable:_o(a).variable(i)});const o=Array.isArray(e)?e[s].tensor:e[t];if(null==o)return;const u=this.accumulatedFirstMoment[s].variable,l=this.accumulatedWeightedInfNorm[s].variable,c=To($o(u,this.beta1),$o(o,1-this.beta1)),h=$o(l,this.beta2),d=eu(o),p=su(h,d);u.assign(c),l.assign(p);const f=To($o(Co(r,n),Co(c,To(p,this.epsilon))),a);a.assign(f)}),this.iteration.assign(To(this.iteration,1)),this.accBeta1.assign($o(this.accBeta1,this.beta1))}),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.iteration.dispose(),null!=this.accumulatedFirstMoment&&li(this.accumulatedFirstMoment.map(e=>e.variable)),null!=this.accumulatedWeightedInfNorm&&li(this.accumulatedWeightedInfNorm.map(e=>e.variable))}async getWeights(){throw new Error("getWeights() is not implemented for Adamax yet.")}async setWeights(e){throw new Error("setWeights() is not implemented for Adamax yet.")}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon,decay:this.decay}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon,t.decay)}}class iu extends qo{static get className(){return"SGD"}constructor(e){super(),this.learningRate=e,this.setLearningRate(e)}applyGradients(e){(Array.isArray(e)?e.map(e=>e.name):Object.keys(e)).forEach((t,n)=>{const r=Array.isArray(e)?e[n].tensor:e[t];if(null==r)return;const s=Da.registeredVariables[t];ui(()=>{const e=To($o(this.c,r),s);s.assign(e)})}),this.incrementIterations()}setLearningRate(e){this.learningRate=e,null!=this.c&&this.c.dispose(),this.c=ci(Bo(-e))}dispose(){this.c.dispose()}async getWeights(){return[await this.saveIterations()]}async setWeights(e){if(0!==(e=await this.extractIterations(e)).length)throw new Error("SGD optimizer does not have settable weights.")}getConfig(){return{learningRate:this.learningRate}}static fromConfig(e,t){return new e(t.learningRate)}}class ou extends iu{static get className(){return"Momentum"}constructor(e,t,n=!1){super(e),this.learningRate=e,this.momentum=t,this.useNesterov=n,this.accumulations=[],this.m=Bo(this.momentum)}applyGradients(e){(Array.isArray(e)?e.map(e=>e.name):Object.keys(e)).forEach((t,n)=>{const r=Da.registeredVariables[t];if(null==this.accumulations[n]){const e=!1;this.accumulations[n]={originalName:`${t}/momentum`,variable:ui(()=>_o(r).variable(e))}}const s=this.accumulations[n].variable,a=Array.isArray(e)?e[n].tensor:e[t];null!=a&&ui(()=>{let e;const t=To($o(this.m,s),a);e=this.useNesterov?To($o(this.c,To(a,$o(t,this.m))),r):To($o(this.c,t),r),s.assign(t),r.assign(e)})}),this.incrementIterations()}dispose(){this.m.dispose(),null!=this.accumulations&&li(this.accumulations.map(e=>e.variable))}setMomentum(e){this.momentum=e}async getWeights(){return[await this.saveIterations()].concat(this.accumulations.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(e){e=await this.extractIterations(e),this.accumulations=e.map(e=>({originalName:e.name,variable:e.tensor.variable(!1)}))}getConfig(){return{learningRate:this.learningRate,momentum:this.momentum,useNesterov:this.useNesterov}}static fromConfig(e,t){return new e(t.learningRate,t.momentum,t.useNesterov)}}class uu extends qo{static get className(){return"RMSProp"}constructor(e,t=.9,n=0,r=null,s=!1){if(super(),this.learningRate=e,this.decay=t,this.momentum=n,this.epsilon=r,this.accumulatedMeanSquares=[],this.accumulatedMoments=[],this.accumulatedMeanGrads=[],this.centered=s,null==r&&(this.epsilon=Da.backend.epsilon()),null==e)throw new Error("learningRate for RMSPropOptimizer must be defined.")}applyGradients(e){(Array.isArray(e)?e.map(e=>e.name):Object.keys(e)).forEach((t,n)=>{const r=Da.registeredVariables[t],s=!1;null==this.accumulatedMeanSquares[n]&&(this.accumulatedMeanSquares[n]={originalName:`${t}/rms`,variable:ui(()=>_o(r).variable(s))}),null==this.accumulatedMoments[n]&&(this.accumulatedMoments[n]={originalName:`${t}/momentum`,variable:ui(()=>_o(r).variable(s))}),null==this.accumulatedMeanGrads[n]&&this.centered&&(this.accumulatedMeanGrads[n]={originalName:`${t}/mg`,variable:ui(()=>_o(r).variable(s))});const a=Array.isArray(e)?e[n].tensor:e[t];if(null==a)return;const i=this.accumulatedMeanSquares[n].variable,o=this.accumulatedMoments[n].variable;ui(()=>{const e=To($o(i,this.decay),$o(Ro(a),1-this.decay));if(this.centered){const t=this.accumulatedMeanGrads[n].variable,s=To($o(t,this.decay),$o(a,1-this.decay)),u=Co($o(a,this.learningRate),Ao(Zo(e,To(Ro(s),this.epsilon)))),l=To($o(o,this.momentum),u);i.assign(e),t.assign(s),o.assign(l);const c=Zo(r,l);r.assign(c)}else{const e=To($o(i,this.decay),$o(Ro(a),1-this.decay)),t=To($o(o,this.momentum),Co($o(a,this.learningRate),Ao(To(e,this.epsilon))));i.assign(e),o.assign(t);const n=Zo(r,t);r.assign(n)}})}),this.incrementIterations()}dispose(){null!=this.accumulatedMeanSquares&&li(this.accumulatedMeanSquares.map(e=>e.variable)),null!=this.accumulatedMeanGrads&&this.centered&&li(this.accumulatedMeanGrads.map(e=>e.variable)),null!=this.accumulatedMoments&&li(this.accumulatedMoments.map(e=>e.variable))}async getWeights(){const e=[...this.accumulatedMeanSquares,...this.accumulatedMoments];return this.centered&&e.push(...this.accumulatedMeanGrads),[await this.saveIterations()].concat(e.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(e){e=await this.extractIterations(e);const t=this.centered?e.length/3:e.length/2,n=!1;this.accumulatedMeanSquares=e.slice(0,t).map(e=>({originalName:e.name,variable:e.tensor.variable(n)})),this.accumulatedMoments=e.slice(t,2*t).map(e=>({originalName:e.name,variable:e.tensor.variable(n)})),this.centered&&(this.accumulatedMeanGrads=e.slice(2*t,3*t).map(e=>({originalName:e.name,variable:e.tensor.variable(n)})))}getConfig(){return{learningRate:this.learningRate,decay:this.decay,momentum:this.momentum,epsilon:this.epsilon,centered:this.centered}}static fromConfig(e,t){return new e(t.learningRate,t.decay,t.momentum,t.epsilon,t.centered)}}const lu=[Ko,Yo,Qo,au,ou,uu,iu];function cu(e){return new Promise(e=>setTimeout(e)).then(e)}class hu{constructor(e){if(!Xe().getBool("IS_BROWSER"))throw new Error("browserDownloads() cannot proceed because the current environment is not a browser.");e.startsWith(hu.URL_SCHEME)&&(e=e.slice(hu.URL_SCHEME.length)),null!=e&&0!==e.length||(e="model"),this.modelJsonFileName=e+".json",this.weightDataFileName=e+".weights.bin"}async save(e){if("undefined"==typeof document)throw new Error("Browser downloads are not supported in this environment since `document` is not present");const t=Qa.join(e.weightData),n=window.URL.createObjectURL(new Blob([t],{type:"application/octet-stream"}));if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserDownloads.save() does not support saving model topology in binary formats yet.");{const t=Fi(e,[{paths:["./"+this.weightDataFileName],weights:e.weightSpecs}]),r=window.URL.createObjectURL(new Blob([JSON.stringify(t)],{type:"application/json"})),s=null==this.modelJsonAnchor?document.createElement("a"):this.modelJsonAnchor;if(s.download=this.modelJsonFileName,s.href=r,await cu(()=>s.dispatchEvent(new MouseEvent("click"))),null!=e.weightData){const e=null==this.weightDataAnchor?document.createElement("a"):this.weightDataAnchor;e.download=this.weightDataFileName,e.href=n,await cu(()=>e.dispatchEvent(new MouseEvent("click")))}return{modelArtifactsInfo:Li(e)}}}}hu.URL_SCHEME="downloads://";class du{constructor(e){if(null==e||e.length<1)throw new Error(`When calling browserFiles, at least 1 file is required, but received ${e}`);this.jsonFile=e[0],this.weightsFiles=e.slice(1)}async load(){return new Promise((e,t)=>{const n=new FileReader;n.onload=n=>{const r=JSON.parse(n.target.result),s=r.modelTopology;if(null==s)return void t(new Error(`modelTopology field is missing from file ${this.jsonFile.name}`));if(null==r.weightsManifest)return void t(new Error(`weightManifest field is missing from file ${this.jsonFile.name}`));if(0===this.weightsFiles.length)return void e({modelTopology:s});const a=Oi(r,e=>this.loadWeights(e));e(a)},n.onerror=e=>t(`Failed to read model topology and weights manifest JSON from file \'${this.jsonFile.name}\'. BrowserFiles supports loading Keras-style tf.Model artifacts only.`),n.readAsText(this.jsonFile)})}loadWeights(e){const t=[],n=[];for(const r of e)t.push(...r.weights),n.push(...r.paths);const r=this.checkManifestAndWeightFiles(e),s=n.map(e=>this.loadWeightsFile(e,r[e]));return Promise.all(s).then(e=>[t,e])}loadWeightsFile(e,t){return new Promise((n,r)=>{const s=new FileReader;s.onload=e=>{const t=e.target.result;n(t)},s.onerror=t=>r(`Failed to weights data from file of path \'${e}\'.`),s.readAsArrayBuffer(t)})}checkManifestAndWeightFiles(e){const t=[],n=this.weightsFiles.map(e=>Mi(e.name)),r={};for(const s of e)s.paths.forEach(e=>{const s=Mi(e);if(-1!==t.indexOf(s))throw new Error(`Duplicate file basename found in weights manifest: \'${s}\'`);if(t.push(s),-1===n.indexOf(s))throw new Error(`Weight file with basename \'${s}\' is not provided.`);r[e]=this.weightsFiles[n.indexOf(s)]});if(t.length!==this.weightsFiles.length)throw new Error(`Mismatch in the number of files in weights manifest (${t.length}) and the number of weight files provided (${this.weightsFiles.length}).`);return r}}function pu(e){return new du(e)}function fu(e,t,n,r){!function(e){ie(null!=e&&Array.isArray(e)&&e.length>0,()=>"promises must be a none empty array")}(e),function(e,t){ie(e>=0&&e<=1,()=>`Progress fraction must be in range [0, 1], but got startFraction ${e}`),ie(t>=0&&t<=1,()=>`Progress fraction must be in range [0, 1], but got endFraction ${t}`),ie(t>=e,()=>`startFraction must be no more than endFraction, but got startFraction ${e} and endFraction ${t}`)}(n=null==n?0:n,r=null==r?1:r);let s=0;return Promise.all(e.map(a=>(a.then(a=>{const i=n+ ++s/e.length*(r-n);return t(i),a}),a)))}async function mu(e,t){null==t&&(t={});const n=null==t.fetchFunc?Xe().platform.fetch:t.fetchFunc,r=e.map(e=>n(e,t.requestInit,{isBinary:!0})),s=(null==t.onProgress?await Promise.all(r):await fu(r,t.onProgress,0,.5)).map(e=>e.arrayBuffer());return null==t.onProgress?await Promise.all(s):await fu(s,t.onProgress,.5,1)}async function gu(e,t="",n,r){return yu(e=>mu(e,{requestInit:r}))(e,t,n)}function yu(e){return async(t,n="",r)=>{const s=t.map(()=>!1),a={},i=null!=r?r.map(()=>!1):[],o=[];if(t.forEach((e,t)=>{let n=0;e.weights.forEach(e=>{const u="quantization"in e?e.quantization.dtype:e.dtype,l=Za[u]*le(e.shape),c=()=>{s[t]=!0,null==a[t]&&(a[t]=[]),a[t].push({manifestEntry:e,groupOffset:n,sizeBytes:l})};null!=r?r.forEach((t,n)=>{t===e.name&&(c(),i[n]=!0)}):c(),o.push(e.name),n+=l})}),!i.every(e=>e)){const e=r.filter((e,t)=>!i[t]);throw new Error(`Could not find weights in manifest with names: ${e.join(", ")}. \\nManifest JSON has weights with names: ${o.join(", ")}.`)}const u=s.reduce((e,t,n)=>(t&&e.push(n),e),[]),l=[];u.forEach(e=>{t[e].paths.forEach(e=>{const t=n+(n.endsWith("/")?"":"/")+e;l.push(t)})});const c=await e(l),h={};let d=0;return u.forEach(e=>{const n=t[e].paths.length,r=new Qa(c.slice(d,d+n));a[e].forEach(e=>{const t=Ii(r.slice(e.groupOffset,e.groupOffset+e.sizeBytes),[e.manifestEntry]);for(const e in t)h[e]=t[e]}),d+=n}),h}}Pi.registerSaveRouter(e=>Xe().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(hu.URL_SCHEME)?function(e="model"){return new hu(e)}(e.slice(hu.URL_SCHEME.length)):null);class bu{constructor(e,t){if(this.DEFAULT_METHOD="POST",null==t&&(t={}),this.weightPathPrefix=t.weightPathPrefix,this.weightUrlConverter=t.weightUrlConverter,null!=t.fetchFunc?(ie("function"==typeof t.fetchFunc,()=>"Must pass a function that matches the signature of `fetch` (see https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API)"),this.fetch=t.fetchFunc):this.fetch=Xe().platform.fetch,ie(null!=e&&e.length>0,()=>"URL path for http must not be null, undefined or empty."),Array.isArray(e)&&ie(2===e.length,()=>`URL paths for http must have a length of 2, (actual length is ${e.length}).`),this.path=e,null!=t.requestInit&&null!=t.requestInit.body)throw new Error("requestInit is expected to have no pre-existing body, but has one.");this.requestInit=t.requestInit||{},this.loadOptions=t}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserHTTPRequest.save() does not support saving model topology in binary formats yet.");const t=Object.assign({method:this.DEFAULT_METHOD},this.requestInit);t.body=new FormData;const n=Fi(e,[{paths:["./model.weights.bin"],weights:e.weightSpecs}]);if(t.body.append("model.json",new Blob([JSON.stringify(n)],{type:"application/json"}),"model.json"),null!=e.weightData){const n=Qa.join(e.weightData);t.body.append("model.weights.bin",new Blob([n],{type:"application/octet-stream"}),"model.weights.bin")}const r=await this.fetch(this.path,t);if(r.ok)return{modelArtifactsInfo:Li(e),responses:[r]};throw new Error(`BrowserHTTPRequest.save() failed due to HTTP response status ${r.status}.`)}async loadModelJSON(){const e=await this.fetch(this.path,this.requestInit);if(!e.ok)throw new Error(`Request to ${this.path} failed with status code ${e.status}. Please verify this URL points to the model JSON of the model to load.`);let t;try{t=await e.json()}catch(e){let t=`Failed to parse model JSON of response from ${this.path}.`;throw this.path.endsWith(".pb")?t+=" Your path contains a .pb file extension. Support for .pb models have been removed in TensorFlow.js 1.0 in favor of .json models. You can re-convert your Python TensorFlow model using the TensorFlow.js 1.0 conversion scripts or you can convert your.pb models with the \'pb2json\'NPM script in the tensorflow/tfjs-converter repository.":t+=" Please make sure the server is serving valid JSON for this request.",new Error(t)}const n=t.modelTopology,r=t.weightsManifest;if(null==n&&null==r)throw new Error(`The JSON from HTTP path ${this.path} contains neither model topology or manifest for weights.`);return t}async load(){return this.loadOptions.streamWeights?this.loadStream():Oi(await this.loadModelJSON(),e=>this.loadWeights(e))}async loadStream(){const e=await this.loadModelJSON(),t=await this.getWeightUrls(e.weightsManifest),n=zi(e.weightsManifest);return Object.assign(Object.assign({},e),{weightSpecs:n,getWeightStream:()=>function(e,t){var n;const r=null==t.fetchFunc?Xe().platform.fetch:t.fetchFunc;let s,a=0;return null===(n=t.onProgress)||void 0===n||n.call(t,0),new ReadableStream({pull:async n=>{for(var i;a<e.length;){if(!s){const n=(await r(e[a],t.requestInit,{isBinary:!0})).body;s=n.getReader()}const{done:o,value:u}=await s.read();if(!o)return void n.enqueue(u);a++,s=void 0,null===(i=t.onProgress)||void 0===i||i.call(t,a/e.length)}n.close()}})}(t,this.loadOptions)})}async getWeightUrls(e){const t=Array.isArray(this.path)?this.path[1]:this.path,[n,r]=function(e){const t=e.lastIndexOf("/"),n=e.lastIndexOf("?");return[e.substring(0,t)+"/",n>t?e.substring(n):""]}(t),s=this.weightPathPrefix||n,a=[],i=[];for(const t of e)for(const e of t.paths)null!=this.weightUrlConverter?i.push(this.weightUrlConverter(e)):a.push(s+e+r);return this.weightUrlConverter&&a.push(...await Promise.all(i)),a}async loadWeights(e){const t=await this.getWeightUrls(e);return[zi(e),await mu(t,this.loadOptions)]}}function xu(e){return null!=e.match(bu.URL_SCHEME_REGEX)}bu.URL_SCHEME_REGEX=/^https?:\\/\\//;const wu=(e,t)=>{if("undefined"==typeof fetch&&(null==t||null==t.fetchFunc))return null;{let n=!0;if(n=Array.isArray(e)?e.every(e=>xu(e)):xu(e),n)return vu(e,t)}return null};function vu(e,t){return new bu(e,t)}function ku(e,t){return vu(e,t)}Pi.registerSaveRouter(wu),Pi.registerLoadRouter(wu);class Iu{constructor(e){this.modelArtifacts=e}load(){return this.modelArtifacts}}class Su{constructor(e){this.saveHandler=e}save(e){return this.saveHandler(e)}}class Nu{constructor(e){e.load&&(this.load=()=>Promise.resolve(e.load())),e.save&&(this.save=t=>Promise.resolve(e.save(t)))}}function Tu(e,t,n,r){return new Nu(Eu(...arguments))}function Eu(e,t,n,r){return 1===arguments.length?null!=e.modelTopology||null!=e.weightSpecs?new Iu(e):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new Iu({modelTopology:e})):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new Iu({modelTopology:e,weightSpecs:t,weightData:n,trainingConfig:r}))}function Cu(e){return new Su(e)}function $u(e){return new Su(e)}const Au=Ka({matMul_:function(e,t,n=!1,r=!1){let s=Ha(e,"a","matMul"),a=Ha(t,"b","matMul");[s,a]=Ta(s,a);const i={a:s,b:a},o={transposeA:n,transposeB:r};return Da.runKernel(bt,i,o)}}),Ru=Ka({oneHot_:function(e,t,n=1,r=0,s="int32"){if(t<2)throw new Error(`Error in oneHot: depth must be >=2, but it is ${t}`);const a={indices:Ha(e,"indices","oneHot","int32")},i={dtype:s,depth:t,onValue:n,offValue:r};return Da.runKernel(sr,a,i)}}),_u=Ka({imag_:function(e){const t={input:Ha(e,"input","imag")};return Da.runKernel(xn,t)}}),Mu=Ka({neg_:function(e){const t={x:Ha(e,"x","neg")};return Da.runKernel(Zn,t)}}),Fu=Ka({real_:function(e){const t={input:Ha(e,"input","real")};return Da.runKernel(mr,t)}}),Du=Ka({transpose_:function(e,t,n){const r=Ha(e,"x","transpose");if(null==t&&(t=r.shape.map((e,t)=>t).reverse()),ie(r.rank===t.length,()=>`Error in transpose: rank of input ${r.rank} must match length of perm ${t}.`),t.forEach(e=>{ie(e>=0&&e<r.rank,()=>"All entries in \'perm\' must be between 0 and "+(r.rank-1)+` but got ${t}`)}),r.rank<=1)return r.clone();const s={x:r},a={perm:t};return"complex64"===r.dtype?ui(()=>{let e=Fu(r),t=_u(r);return e=Da.runKernel(os,{x:e},a),t=Da.runKernel(os,{x:t},a),n&&(t=Mu(t)),Xa(e,t)}):Da.runKernel(os,s,a)}}),Ou=Ka({confusionMatrix_:function(e,t,n){const r=Ha(e,"labels","confusionMatrix"),s=Ha(t,"predictions","confusionMatrix");ie(null==n||n>0&&Number.isInteger(n),()=>`If provided, numClasses must be a positive integer, but got ${n}`),ie(1===r.rank,()=>`Expected the rank of labels to be 1, but got ${r.rank}`),ie(1===s.rank,()=>`Expected the rank of predictions to be 1, but got ${s.rank}`),ie(r.shape[0]===s.shape[0],()=>`Mismatch in the number of examples: ${r.shape[0]} vs. ${s.shape[0]}. Labels and predictions should have the same number of elements.`),ie(n>0&&Number.isInteger(n),()=>`numClasses is required to be a positive integer, but got ${n}`);const a=Ru(Io(r,"int32"),n),i=Ru(Io(s,"int32"),n),o=Du(a),u=Au(o,i);return Io(u,"int32")}});function Lu(e,t,n){if(ue(e),null!=t&&3!==t.length)throw new Error("tensor3d() requires shape to have three numbers");const r=Ua(e,n);if(3!==r.length&&1!==r.length)throw new Error("tensor3d() requires values to be number[][][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor3d() requires shape to be provided when `values` are a flat array");return Ya(e,t,r,n)}let zu,Pu=!1;function Bu(e,t=3){if(t>4)throw new Error("Cannot construct Tensor with more than 4 channels from pixels.");if(null==e)throw new Error("pixels passed to tf.browser.fromPixels() can not be null");let n=!1,r=!1,s=!1,a=!1,i=!1,o=!1;if(e.data instanceof Uint8Array)n=!0;else if("undefined"!=typeof ImageData&&e instanceof ImageData)r=!0;else if("undefined"!=typeof HTMLVideoElement&&e instanceof HTMLVideoElement)s=!0;else if("undefined"!=typeof HTMLImageElement&&e instanceof HTMLImageElement)a=!0;else if(null!=e.getContext)i=!0;else{if(!("undefined"!=typeof ImageBitmap&&e instanceof ImageBitmap))throw new Error(`pixels passed to tf.browser.fromPixels() must be either an HTMLVideoElement, HTMLImageElement, HTMLCanvasElement, ImageData in browser, or OffscreenCanvas, ImageData in webworker or {data: Uint32Array, width: number, height: number}, but was ${e.constructor.name}`);o=!0}if(null!=Is(fs,Da.backendName)){const n={pixels:e},r={numChannels:t};return Da.runKernel(fs,n,r)}const[u,l]=s?[e.videoWidth,e.videoHeight]:[e.width,e.height];let c,h;if(i)c=e.getContext("2d").getImageData(0,0,u,l).data;else if(r||n)c=e.data;else if(a||s||o){if(null==zu)if("undefined"==typeof document){if("undefined"==typeof OffscreenCanvas||"undefined"==typeof OffscreenCanvasRenderingContext2D)throw new Error("Cannot parse input in current context. Reason: OffscreenCanvas Context2D rendering is not supported.");zu=new OffscreenCanvas(1,1).getContext("2d")}else zu=document.createElement("canvas").getContext("2d",{willReadFrequently:!0});zu.canvas.width=u,zu.canvas.height=l,zu.drawImage(e,0,0,u,l),c=zu.getImageData(0,0,u,l).data}if(4===t)h=new Int32Array(c);else{const e=u*l;h=new Int32Array(e*t);for(let n=0;n<e;n++)for(let e=0;e<t;++e)h[n*t+e]=c[4*n+e]}return Lu(h,[l,u,t],"int32")}async function Vu(e,t=3){let n=null;if(Xe().getBool("WRAP_TO_IMAGEBITMAP")&&function(e){return"undefined"!=typeof window&&"undefined"!=typeof ImageBitmap&&window.hasOwnProperty("createImageBitmap")&&!(e instanceof ImageBitmap)&&function(e){return null!=e&&0!==e.width&&0!==e.height}(e)&&!function(e){return null!=e&&e.data instanceof Uint8Array}(e)}(e)){let t;try{t=await createImageBitmap(e,{premultiplyAlpha:"none"})}catch(e){t=null}n=null!=t&&t.width===e.width&&t.height===e.height?t:e}else n=e;return Bu(n,t)}function Uu(e){if(2!==e.rank&&3!==e.rank)throw new Error(`toPixels only supports rank 2 or 3 tensors, got rank ${e.rank}.`);const t=2===e.rank?1:e.shape[2];if(t>4||2===t)throw new Error(`toPixels only supports depth of size 1, 3 or 4 but got ${t}`);if("float32"!==e.dtype&&"int32"!==e.dtype)throw new Error(`Unsupported type for toPixels: ${e.dtype}. Please use float32 or int32 tensors.`)}async function Wu(e,t){let n=Ha(e,"img","toPixels");if(!(e instanceof pa)){const e=n;n=Io(e,"int32"),e.dispose()}Uu(n);const[r,s]=n.shape.slice(0,2),a=2===n.rank?1:n.shape[2],i=await n.data(),o="float32"===n.dtype?255:1,u=new Uint8ClampedArray(s*r*4);for(let e=0;e<r*s;++e){const t=[0,0,0,255];for(let r=0;r<a;r++){const s=i[e*a+r];if("float32"===n.dtype){if(s<0||s>1)throw new Error(`Tensor values for a float32 Tensor must be in the range [0 - 1] but encountered ${s}.`)}else if("int32"===n.dtype&&(s<0||s>255))throw new Error(`Tensor values for a int32 Tensor must be in the range [0 - 255] but encountered ${s}.`);1===a?(t[0]=s*o,t[1]=s*o,t[2]=s*o):t[r]=s*o}const r=4*e;u[r+0]=Math.round(t[0]),u[r+1]=Math.round(t[1]),u[r+2]=Math.round(t[2]),u[r+3]=Math.round(t[3])}if(null!=t){Pu||null!=Is(Yt,Da.backendName)&&(console.warn("tf.browser.toPixels is not efficient to draw tensor on canvas. Please try tf.browser.draw instead."),Pu=!0),t.width=s,t.height=r;const e=t.getContext("2d"),n=new ImageData(u,s,r);e.putImageData(n,0,0)}return n!==e&&n.dispose(),u}function Gu(e,t,n){let r=Ha(e,"img","draw");if(!(e instanceof pa)){const e=r;r=Io(e,"int32"),e.dispose()}Uu(r),function(e){const t=(null==e?void 0:e.alpha)||1;if(t>1||t<0)throw new Error(`Alpha value ${t} is suppoed to be in range [0 - 1].`)}(null==n?void 0:n.imageOptions);const s={image:r},a={canvas:t,options:n};Da.runKernel(Yt,s,a)}const Hu=Ka({fromPixels_:Bu});function ju(e,t){const n=e.shape.length,r=t.shape.length;if(n<1)throw new Error(`tf.gatherND() expects the input to be rank 1 or higher, but the rank was ${n}.`);if(r<1)throw new Error(`tf.gatherND() expects the indices to be rank 1 or higher, but the rank was ${r}.`);if("int32"!==t.dtype)throw new Error(`tf.gatherND() expects the indices to be int32 type, but the dtype was ${t.dtype}.`);if(t.shape[r-1]>n)throw new Error(`index innermost dimension length must be <= tensor rank; saw: ${t.shape[r-1]} vs. ${n}`);if(0===le(e.shape))throw new Error(`Requested more than 0 entries, but input is empty. Input shape: ${e.shape}.`);const s=t.shape,a=s[s.length-1];let i=1;for(let e=0;e<s.length-1;++e)i*=s[e];const o=e.shape,u=s.slice();u.pop();let l=1;for(let e=a;e<n;++e)l*=o[e],u.push(o[e]);const c=[...De(e.shape).map(e=>e/l),1].slice(0,a);return[u,i,l,c]}function qu(e,t,n){const r=t.rank>1?t.shape[t.rank-1]:1,s=t.rank>1?t.rank-1:1,a=`Must have updates.shape = indices.shape[:batchDim] + shape[sliceDim:], got updates.shape: ${n.shape}, indices.shape: ${t.shape}, shape: ${e}, sliceDim: ${r}, and batchDim: ${s}.`;if(n.rank<s)throw new Error(a+` update.rank < ${s}. `);if(e.length<r+(n.rank-s))throw new Error(a+` Output shape length < ${r+(n.rank-s)}`);if(n.rank!==s+e.length-r)throw new Error(a+" update.rank != "+(s+e.length-r));for(let e=0;e<s;++e)if(n.shape[e]!==t.shape[e])throw new Error(a+` updates.shape[${e}] (${n.shape[e]}) != indices.shape[${e}] (${t.shape[e]}).`);for(let t=0;t<n.rank-s;++t)if(n.shape[t+s]!==e[t+r])throw new Error(a+` updates.shape[${t+s}] (${n.shape[t+s]}) != shape[${t+s}] (${e[t+s]})`)}function Ku(e,t,n){if(t.rank<1)throw new Error(`tf.scatterND() expects the indices to be rank 1 or higher, but the rank was ${t.rank}.`);if(e.rank<1)throw new Error(`tf.scatterND() expects the updates to be rank 1 or higher, but the rank was ${e.rank}.`);if("int32"!==t.dtype)throw new Error(`The dtype of \'indices\' should be int32, but got dtype: ${t.dtype}`);if(n.length<1)throw new Error(`Output rank must be greater or equal to 1, but got shape: ${n}`);if(0===n.length){if(0===t.size)throw new Error(`Indices specified for empty output. indices shape: ${t.shape}`);if(0===e.size)throw new Error(`Updates specified for empty output. updates shape: ${e.shape}`)}qu(n,t,e)}function Xu(e,t,n){const r=t.shape.length,s=r>1?t.shape[r-1]:1,a=n.length;let i=1;for(let e=s;e<a;++e)i*=n[e];const o=s<1?1:s;return{sliceRank:s,numUpdates:le(t.shape)/o,sliceSize:i,strides:[...De(n.slice(0,s)),1],outputSize:le(n)}}const Yu=-2,Ju=-1;function Zu(e,t,n){const r=e.shape.length;ie(r===t.length,()=>`Error in slice${r}D: Length of begin ${t} must match the rank of the array (${r}).`),ie(r===n.length,()=>`Error in slice${r}D: Length of size ${n} must match the rank of the array (${r}).`);for(let s=0;s<r;++s)ie(t[s]+n[s]<=e.shape[s],()=>`Error in slice${r}D: begin[${s}] + size[${s}] (${t[s]+n[s]}) would overflow input.shape[${s}] (${e.shape[s]})`)}function Qu(e){const t=[];let n=0;for(;e>0;)1&e&&t.push(n),e/=2,n++;return t}function el(e,t,n){const r=[];for(let s=0;s<e.length;s++)r[s]=Math.ceil((t[s]-e[s])/n[s]);return r}function tl(e,t,n,r){const s=[...e];for(let e=s.length;e<r.length;e++)s.push(1);for(let e=0;e<n;e++)0===e?s[t]=1:(s.splice(t,0,1),s.pop());return s}function nl(e,t,n){return n<=e?n:n-(t-1)}function rl(e,t){const n=[];for(let r=0;r<e;r++)n.push(t+r);return n}function sl(e,t,n,r,s,a,i,o,u){const l=e.length;let c=new Array(l),h=new Array(l),d=new Array(l);if(t.length&&n>0){const u=t[0],l=n+1;c=al(i,u,l,r,e),h=il(o,u,l,s,e),d=tl(a,u,l,e)}else for(let t=0;t<l;t++)c[t]=ul(i,r,a,e,t,u),h[t]=ll(o,s,a,e,t,u),d[t]=ol(a,t,u);return{begin:c,end:h,strides:d}}function al(e,t,n,r,s){const a=[...s],i=rl(n,t);for(let s=0;s<a.length;s++)if(i.indexOf(s)>-1)a[s]=0;else{const i=nl(t,n,s);let o=r[i];e&1<<i&&(o=0),a[s]=o}return a}function il(e,t,n,r,s){const a=[...s],i=rl(n,t);for(let s=0;s<a.length;s++)if(i.indexOf(s)>-1)a[s]=Number.MAX_SAFE_INTEGER;else{const i=nl(t,n,s);let o=r[i];e&1<<i&&(o=Number.MAX_SAFE_INTEGER),a[s]=o}for(let e=0;e<a.length;e++){const t=s[e];a[e]<0&&(a[e]+=t),a[e]=ee(0,a[e],s[e])}return a}function ol(e,t,n){let r=e[t];return(n&1<<t||null==r)&&(r=1),r}function ul(e,t,n,r,s,a){let i=t[s];const o=n[s]||1;(e&1<<s||a&1<<s||null==i)&&(i=o>0?Number.MIN_SAFE_INTEGER:Number.MAX_SAFE_INTEGER);const u=r[s];return i<0&&(i+=u),i=ee(0,i,u-1),i}function ll(e,t,n,r,s,a){let i=t[s];const o=n[s]||1;(e&1<<s||a&1<<s||null==i)&&(i=o>0?Number.MAX_SAFE_INTEGER:Number.MIN_SAFE_INTEGER);const u=r[s];return i<0&&(i+=u),i=o>0?ee(0,i,u):ee(-1,i,u-1),i}function cl(e,t,n){let r=n.length;for(let e=0;e<n.length;e++)if(n[e]>1){r=e;break}for(let s=r+1;s<n.length;s++)if(t[s]>0||n[s]!==e[s])return!1;return!0}function hl(e,t){let n=e.length>0?e[e.length-1]:1;for(let r=0;r<e.length-1;r++)n+=e[r]*t[r];return n}function dl(e,t,n){let r;const s=e.shape.length;let a;return r="number"==typeof t?[t,...new Array(s-1).fill(0)]:t.length<s?t.concat(new Array(s-t.length).fill(0)):t.slice(),r.forEach(e=>{ie(-1!==e,()=>"slice() does not support negative begin indexing.")}),a=null==n?new Array(s).fill(-1):"number"==typeof n?[n,...new Array(s-1).fill(-1)]:n.length<s?n.concat(new Array(s-n.length).fill(-1)):n,a=a.map((t,n)=>t>=0?t:(ie(-1===t,()=>`Negative size values should be exactly -1 but got ${t} for the slice() size at index ${n}.`),e.shape[n]-r[n])),[r,a]}function pl(e,t,n,r,s,a,i,o,u){let l;if(null==r?(l=new Array(t.length),l.fill(1)):l=r,null!=i&&i&i-1)throw new Error("Multiple ellipses in slice is not allowed.");let c=!1;const h={dims:l.length,numAddAxisAfterEllipsis:0,begin:t.slice(),end:n.slice(),strides:l.slice(),beginMask:s,endMask:a,ellipsisMask:i,newAxisMask:o,shrinkAxisMask:u};for(let e=0;e<h.dims;e++)c&&1<<e&o&&h.numAddAxisAfterEllipsis++,1<<e&i&&(c=!0);c||(h.ellipsisMask|=1<<h.dims,h.dims++);const d={dims:e.length,beginMask:0,endMask:0,beginValid:!1,endValid:!1};!function(e,t){t.beginMask=0,t.endMask=0,t.shrinkAxisMask=0;let n=0;t.beginValid=null!=e.begin,t.endValid=null!=e.end,t.begin=new Array(t.dims),t.end=new Array(t.dims),t.strides=new Array(t.dims),t.finalShapeGatherIndices=[],t.finalShapeGatherIndicesSparse=[],t.inputShapeGatherIndicesSparse=new Array(t.dims);for(let r=0;r<e.dims;r++)if(1<<r&e.ellipsisMask){const s=Math.min(t.dims-(e.dims-r)+1+e.numAddAxisAfterEllipsis,t.dims);for(;n<s;n++)t.begin[n]=0,t.end[n]=0,t.strides[n]=1,t.beginMask|=1<<n,t.endMask|=1<<n,t.finalShapeGatherIndices.push(n),t.finalShapeGatherIndicesSparse.push(-1),t.inputShapeGatherIndicesSparse[n]=r}else if(1<<r&e.newAxisMask)t.finalShapeGatherIndices.push(Yu),t.finalShapeGatherIndicesSparse.push(-1);else{if(n===t.begin.length)throw Error(`Index out of range using input dim ${n}; input has only ${t.dims} dims, ${t.begin.length}.`);null!=e.begin&&(t.begin[n]=e.begin[r]),null!=e.end&&(t.end[n]=e.end[r]),t.strides[n]=e.strides[r],e.beginMask&1<<r&&(t.beginMask|=1<<n),e.endMask&1<<r&&(t.endMask|=1<<n),e.shrinkAxisMask&1<<r?(t.finalShapeGatherIndices.push(Ju),t.finalShapeGatherIndicesSparse.push(-1),t.shrinkAxisMask|=1<<n):(t.finalShapeGatherIndices.push(n),t.finalShapeGatherIndicesSparse.push(r)),t.inputShapeGatherIndicesSparse[n]=r,n++}}(h,d);let p=!0,f=!0,m=!0;const g=[],y=[];for(let t=0;t<e.length;++t){if(0===d.strides[t])throw Error(`strides[${t}] must be non-zero`);const n=!!(d.shrinkAxisMask&1<<t),r=e[t];if(-1===r){g.push(n?1:-1);continue}const s=[d.beginMask&1<<t,d.endMask&1<<t],a=[d.strides[t]>0?0:-1,d.strides[t]>0?r:r-1];if(n&&d.strides[t]<=0)throw Error("only stride 1 allowed on non-range indexing.");m=m&&1===d.strides[t];const i=!!(d.beginMask&1<<t&&d.endMask&1<<t);if(d.beginValid&&d.endValid){if(n){const e=d.begin[t]<0?r+d.begin[t]:d.begin[t];if(d.begin[t]=e,d.end[t]=d.begin[t]+1,e<0||e>=r)throw Error(`slice index ${d.begin[t]} of dimension ${t} out of bounds.`)}else d.begin[t]=fl(d.begin[t],0,d.strides[t],r,s,a),d.end[t]=fl(d.end[t],1,d.strides[t],r,s,a);const e=1===d.strides[t]&&0===d.begin[t]&&d.end[t]===r;p=p&&e,f=f&&(0===t&&1===d.strides[t]||e)}else p=p&&1===d.strides[t]&&i,f=f&&(0===t&&1===d.strides[t]||i);let o,u=!1;if(d.beginValid&&d.endValid?(o=d.end[t]-d.begin[t],u=!0):n?(o=1,u=!0):i&&r>=0&&(o=d.strides[t]<0?-r:r,u=!0),u){let e;e=0===o||o<0!=d.strides[t]<0?0:Math.trunc(o/d.strides[t])+(o%d.strides[t]!==0?1:0),g.push(e)}else g.push(-1)}for(let e=0;e<d.finalShapeGatherIndices.length;++e){const t=d.finalShapeGatherIndices[e];t>=0?y.push(g[t]):t===Yu&&y.push(1)}return{finalShapeSparse:y.filter((e,t)=>d.finalShapeGatherIndices[t]!==Yu),finalShape:y,isIdentity:p,sliceDim0:f,isSimpleSlice:m,begin:d.begin,end:d.end,strides:d.strides}}function fl(e,t,n,r,s,a){if(s[t])return n>0?a[t]:a[t+1&1];{const t=e<0?r+e:e;return t<a[0]?a[0]:t>a[1]?a[1]:t}}const ml=.001,gl=.1;function yl(e,t,n){return null==n&&(n=bl()),xl(e,t,(e,t)=>Il(e,t,n))}function bl(){return 32===Da.backend.floatPrecision()?ml:gl}function xl(e,t,n){let r=!0;if((Qs(e)||Qs(t))&&(r=!1),Qs(e)&&Qs(t)&&(r=!0),r){const n=e.constructor.name,r=t.constructor.name;if(n!==r)throw new Error(`Arrays are of different type. Actual: ${n}. Expected: ${r}`)}if(Array.isArray(e)&&Array.isArray(t)){const n=Ua(e),r=Ua(t);if(!de(n,r))throw new Error(`Arrays have different shapes. Actual: [${n}]. Expected: [${r}]`)}const s=Qs(e)?e:ea(e),a=Qs(t)?t:ea(t);if(s.length!==a.length)throw new Error(`Arrays have different lengths actual: ${s.length} vs expected: ${a.length}.\\nActual:   ${s}.\\nExpected: ${a}.`);for(let e=0;e<a.length;++e){const t=s[e],r=a[e];if(!n(t,r))throw new Error(`Arrays differ: actual[${e}] = ${t}, expected[${e}] = ${r}.\\nActual:   ${s}.\\nExpected: ${a}.`)}"undefined"!=typeof expect&&expect().nothing()}function wl(e,t){e().then(()=>t.fail(),()=>t()),"undefined"!=typeof expect&&expect().nothing()}function vl(e,t){const n="string"==typeof t||"number"==typeof t||"boolean"==typeof t?[t]:t;return $e(e)||$e(e[0])||$e(t)||$e(t[0])?xl(e,n,(e,t)=>e==t):xl(e,t,(e,t)=>Il(e,t,0))}function kl(e,t,n){if(null==n&&(n=bl()),!Il(e,t,n))throw new Error(`Numbers differ: actual === ${e}, expected === ${t}`);"undefined"!=typeof expect&&expect().nothing()}function Il(e,t,n){return!isFinite(e)&&!isFinite(t)||!(isNaN(e)||isNaN(t)||Math.abs(e-t)>n)}function Sl(e,t,n){for(let r=0;r<e.length;r++)if(e[r]<t||e[r]>n)throw new Error(`Value out of range:${e[r]} low: ${t}, high: ${n}`)}function Nl(e,t){const n=new Float32Array(e),r=new Float32Array(t);if(n.length!==r.length)throw new Error(`Expected ArrayBuffer to be of length ${r.length}, but it was ${n.length}`);for(let e=0;e<r.length;e++)if(n[e]!==r[e])throw new Error(`Expected ArrayBuffer value at ${e} to be ${r[e]} but got ${n[e]} instead`)}function Tl(e){for(let t=0;t<e.length;t++){const n=e[t];Array.isArray(n)?Tl(n):e[t]=Js(n)}return e}function El(e){const t=document.createElement("video");return"playsInline"in t&&(t.playsInline=!0),t.muted=!0,t.loop=!0,t.style.position="fixed",t.style.left="0px",t.style.top="0px",t.preload="auto",t.appendChild(e),new Promise(e=>{t.addEventListener("loadeddata",n=>e(t)),t.load()})}async function Cl(e){await e.play(),"requestVideoFrameCallback"in e&&await new Promise(t=>{e.requestVideoFrameCallback(t)})}const $l="4.22.0";class Al{static sgd(e){return new iu(e)}static momentum(e,t,n=!1){return new ou(e,t,n)}static rmsprop(e,t=.9,n=0,r=null,s=!1){return new uu(e,t,n,r,s)}static adam(e=.001,t=.9,n=.999,r=null){return new Qo(e,t,n,r)}static adadelta(e=.001,t=.95,n=null){return new Ko(e,t,n)}static adamax(e=.002,t=.9,n=.999,r=null,s=0){return new au(e,t,n,r,s)}static adagrad(e,t=.1){return new Yo(e,t)}}const Rl=Ka({acos_:function(e){const t={x:Ha(e,"x","acos")};return Da.runKernel(tt,t)}}),_l=Ka({acosh_:function(e){const t={x:Ha(e,"x","acosh")};return Da.runKernel(nt,t)}}),Ml=Ka({addN_:function(e){ie(Array.isArray(e),()=>"The argument passed to tf.addN() must be a list of tensors"),ie(e.length>=1,()=>`Must pass at least one tensor to tf.addN(), but got ${e.length}`);const t=e.map((e,t)=>Ha(e,`tensors${t}`,"addN")),n=t[0];t.forEach(e=>{if(e.dtype!==n.dtype)throw new Error("All tensors passed to tf.addN() must have the same dtype")}),t.forEach(e=>{if(!de(e.shape,n.shape))throw new Error("All tensors passed to tf.addN() must have the same shape")});const r=t;return Da.runKernel(st,r)}}),Fl=Ka({all_:function(e,t=null,n=!1){const r={x:Ha(e,"x","all","bool")},s={axis:t,keepDims:n};return Da.runKernel(at,r,s)}}),Dl=Ka({any_:function(e,t=null,n=!1){const r={x:Ha(e,"x","any","bool")},s={axis:t,keepDims:n};return Da.runKernel(it,r,s)}}),Ol=Ka({argMax_:function(e,t=0){const n={x:Ha(e,"x","argMax")},r={axis:t};return Da.runKernel(ot,n,r)}}),Ll=Ka({argMin_:function(e,t=0){const n={x:Ha(e,"x","argMin")},r={axis:t};return Da.runKernel(ut,n,r)}}),zl=Ka({asin_:function(e){const t={x:Ha(e,"x","asin")};return Da.runKernel(lt,t)}}),Pl=Ka({asinh_:function(e){const t={x:Ha(e,"x","asinh")};return Da.runKernel(ct,t)}}),Bl=Ka({atan_:function(e){const t={x:Ha(e,"x","atan")};return Da.runKernel(ht,t)}}),Vl=Ka({atan2_:function(e,t){let n=Ha(e,"a","atan2"),r=Ha(t,"b","atan2");[n,r]=Ta(n,r);const s={a:n,b:r};return Da.runKernel(pt,s)}}),Ul=Ka({atanh_:function(e){const t={x:Ha(e,"x","atanh")};return Da.runKernel(dt,t)}});function Wl(e,t,n,r,s="NHWC",a){return jl(e,[...t,e[3]],n,a,r,null,null,nc(s))}function Gl(e,t,n,r,s,a,i="channelsLast"){const[o,u]=Xl(t);let l;if("channelsLast"===i)l=[o,u,e[3],e[3]];else{if("channelsFirst"!==i)throw new Error(`Unknown dataFormat ${i}`);l=[o,u,e[1],e[1]]}return jl(e,l,n,r,s,a,!1,i)}function Hl(e,t,n,r,s,a,i="NDHWC"){const[o,u,l]=Yl(t);let c,h;if("NDHWC"===i)h="channelsLast",c=[o,u,l,e[4],e[4]];else{if("NCDHW"!==i)throw new Error(`Unknown dataFormat ${i}`);h="channelsFirst",c=[o,u,l,e[1],e[1]]}return ql(e,c,n,r,s,!1,h,a)}function jl(e,t,n,r,s,a,i=!1,o="channelsLast"){let[u,l,c,h]=[-1,-1,-1,-1];if("channelsLast"===o)[u,l,c,h]=e;else{if("channelsFirst"!==o)throw new Error(`Unknown dataFormat ${o}`);[u,h,l,c]=e}const[d,p,,f]=t,[m,g]=Xl(n),[y,b]=Xl(r),x=Jl(d,y),w=Jl(p,b),{padInfo:v,outHeight:k,outWidth:I}=function(e,t,n,r,s,a,i,o,u){let l,c,h;if("number"==typeof e){l={top:e,bottom:e,left:e,right:e,type:0===e?"VALID":"NUMBER"};const s=function(e,t,n,r,s){null==r&&(r=Kl(e,t,n));const a=e[1];return[Zl((e[0]-t+2*r)/n+1,s),Zl((a-t+2*r)/n+1,s)]}([t,n],a,r,e,o);c=s[0],h=s[1]}else if("same"===e){c=Math.ceil(t/r),h=Math.ceil(n/s);const e=Math.max(0,(c-1)*r+a-t),o=Math.max(0,(h-1)*s+i-n),u=Math.floor(e/2),d=e-u,p=Math.floor(o/2);l={top:u,bottom:d,left:p,right:o-p,type:"SAME"}}else if("valid"===e)l={top:0,bottom:0,left:0,right:0,type:"VALID"},c=Math.ceil((t-a+1)/r),h=Math.ceil((n-i+1)/s);else{if("object"!=typeof e)throw Error(`Unknown padding parameter: ${e}`);{const d="channelsLast"===u?e[1][0]:e[2][0],p="channelsLast"===u?e[1][1]:e[2][1],f="channelsLast"===u?e[2][0]:e[3][0],m="channelsLast"===u?e[2][1]:e[3][1];l={top:d,bottom:p,left:f,right:m,type:0===d&&0===p&&0===f&&0===m?"VALID":"EXPLICIT"},c=Zl((t-a+d+p)/r+1,o),h=Zl((n-i+f+m)/s+1,o)}}return{padInfo:l,outHeight:c,outWidth:h}}(s,l,c,m,g,x,w,a,o),S=i?f*h:f;let N;return"channelsFirst"===o?N=[u,S,k,I]:"channelsLast"===o&&(N=[u,k,I,S]),{batchSize:u,dataFormat:o,inHeight:l,inWidth:c,inChannels:h,outHeight:k,outWidth:I,outChannels:S,padInfo:v,strideHeight:m,strideWidth:g,filterHeight:d,filterWidth:p,effectiveFilterHeight:x,effectiveFilterWidth:w,dilationHeight:y,dilationWidth:b,inShape:e,outShape:N,filterShape:t}}function ql(e,t,n,r,s,a=!1,i="channelsLast",o){let[u,l,c,h,d]=[-1,-1,-1,-1,-1];if("channelsLast"===i)[u,l,c,h,d]=e;else{if("channelsFirst"!==i)throw new Error(`Unknown dataFormat ${i}`);[u,d,l,c,h]=e}const[p,f,m,,g]=t,[y,b,x]=Yl(n),[w,v,k]=Yl(r),I=Jl(p,w),S=Jl(f,v),N=Jl(m,k),{padInfo:T,outDepth:E,outHeight:C,outWidth:$}=function(e,t,n,r,s,a,i,o,u,l,c){let h,d,p,f;if("valid"===e&&(e=0),"number"==typeof e){h={top:e,bottom:e,left:e,right:e,front:e,back:e,type:0===e?"VALID":"NUMBER"};const m=function(e,t,n,r,s,a){null==s&&(s=Kl(e,t[0],r[0]));const i=[0,0,0,1];for(let n=0;n<3;n++)e[n]+2*s>=t[n]&&(i[n]=Zl((e[n]-t[n]+2*s)/r[n]+1,a));return i}([t,n,r,1],[o,u,l],0,[s,a,i],e,c);d=m[0],p=m[1],f=m[2]}else{if("same"!==e)throw Error(`Unknown padding parameter: ${e}`);{d=Math.ceil(t/s),p=Math.ceil(n/a),f=Math.ceil(r/i);const e=(d-1)*s+o-t,c=(p-1)*a+u-n,m=(f-1)*i+l-r,g=Math.floor(e/2),y=e-g,b=Math.floor(c/2),x=c-b,w=Math.floor(m/2);h={top:b,bottom:x,left:w,right:m-w,front:g,back:y,type:"SAME"}}}return{padInfo:h,outDepth:d,outHeight:p,outWidth:f}}(s,l,c,h,y,b,x,I,S,N,o),A=a?g*d:g;let R;return"channelsFirst"===i?R=[u,A,E,C,$]:"channelsLast"===i&&(R=[u,E,C,$,A]),{batchSize:u,dataFormat:i,inDepth:l,inHeight:c,inWidth:h,inChannels:d,outDepth:E,outHeight:C,outWidth:$,outChannels:A,padInfo:T,strideDepth:y,strideHeight:b,strideWidth:x,filterDepth:p,filterHeight:f,filterWidth:m,effectiveFilterDepth:I,effectiveFilterHeight:S,effectiveFilterWidth:N,dilationDepth:w,dilationHeight:v,dilationWidth:k,inShape:e,outShape:R,filterShape:t}}function Kl(e,t,n,r=1){const s=Jl(t,r);return Math.floor((e[0]*(n-1)-n+s)/2)}function Xl(e){return"number"==typeof e?[e,e,e]:2===e.length?[e[0],e[1],1]:e}function Yl(e){return"number"==typeof e?[e,e,e]:e}function Jl(e,t){return t<=1?e:e+(e-1)*(t-1)}function Zl(e,t){if(!t)return Math.trunc(e);switch(t){case"round":return Math.round(e);case"ceil":return Math.ceil(e);case"floor":return Math.floor(e);default:throw new Error(`Unknown roundingMode ${t}`)}}function Ql(e){const[t,n,r]=Xl(e);return 1===t&&1===n&&1===r}function ec(e,t){return Ql(e)||Ql(t)}function tc(e){return Xl(e).every(e=>e>0)}function nc(e){if("NHWC"===e)return"channelsLast";if("NCHW"===e)return"channelsFirst";throw new Error(`Unknown dataFormat ${e}`)}function rc(e,t,n){if(null!=n){if("string"==typeof t)throw Error(`Error in ${e}: pad must be an integer when using dimRoundingMode ${n} but got pad ${t}.`);if("number"==typeof t)ie(pe(t),()=>`Error in ${e}: pad must be an integer when using dimRoundingMode ${n} but got pad ${t}.`);else{if("object"!=typeof t)throw Error(`Error in ${e}: Unknown padding parameter: ${t}`);t.forEach(t=>{t.forEach(t=>{ie(pe(t),()=>`Error in ${e}: pad must be an integer when using dimRoundingMode ${n} but got pad ${t}.`)})})}}}const sc=Ka({reshape_:function(e,t){const n={x:Ha(e,"x","reshape","string_or_numeric")},r={shape:t};return Da.runKernel(br,n,r)}}),ac=Ka({avgPool_:function(e,t,n,r,s){const a=Ha(e,"x","avgPool","float32");ie(ec(n,1),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${n} and dilations \'1\'`);let i=a,o=!1;3===a.rank&&(o=!0,i=sc(a,[1,a.shape[0],a.shape[1],a.shape[2]])),ie(4===i.rank,()=>`Error in avgPool: x must be rank 4 but got rank ${i.rank}.`),rc("avgPool",r,s);const u={x:i},l={filterSize:t,strides:n,pad:r,dimRoundingMode:s};let c=Da.runKernel(ft,u,l);return c=Io(c,a.dtype),o?sc(c,[c.shape[1],c.shape[2],c.shape[3]]):c}}),ic=Ka({avgPool3d_:function(e,t,n,r,s,a="NDHWC"){const i=Ha(e,"x","avgPool3d","float32");let o=i,u=!1;4===i.rank&&(u=!0,o=sc(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),ie(5===o.rank,()=>`Error in avgPool3d: x must be rank 5 but got rank ${o.rank}.`),ie("NDHWC"===a,()=>`Error in avgPool3d: Only NDHWC is currently supported, but got dataFormat of ${a}`),ie("number"==typeof n&&n>0||Array.isArray(n)&&n[0]>0&&n[1]>0&&n[2]>0,()=>`Error in avgPool3d: Stride must be > 0, but got \'${n}\'`),rc("avgPool3d",r,s);const l={x:o},c={filterSize:t,strides:n,pad:r,dimRoundingMode:s,dataFormat:a};let h=Da.runKernel(gt,l,c);return h=Io(h,o.dtype),u?sc(h,[h.shape[1],h.shape[2],h.shape[3],h.shape[4]]):h}}),oc=Ka({concat_:function(e,t=0){ie(e.length>=1,()=>"Pass at least one tensor to concat");const n=ja(e,"tensors","concat","string_or_numeric");if("complex64"===n[0].dtype&&n.forEach(e=>{if("complex64"!==e.dtype)throw new Error(`Cannot concatenate complex64 tensors with a tensor\\n          with dtype ${e.dtype}. `)}),1===n.length)return So(n[0]);const r=n,s={axis:t};return Da.runKernel($t,r,s)}}),uc=Ka({sigmoid_:function(e){const t={x:Ha(e,"x","sigmoid","float32")};return Da.runKernel(Or,t)}}),lc=Ka({slice_:function(e,t,n){const r=Ha(e,"x","slice","string_or_numeric");if(0===r.rank)throw new Error("Slicing scalar is not possible");const s={x:r},a={begin:t,size:n};return Da.runKernel(_r,s,a)}}),cc=Ka({tanh_:function(e){const t={x:Ha(e,"x","tanh","float32")};return Da.runKernel(rs,t)}}),hc=Ka({basicLSTMCell_:function(e,t,n,r,s,a){const i=Ha(e,"forgetBias","basicLSTMCell"),o=Ha(t,"lstmKernel","basicLSTMCell"),u=Ha(n,"lstmBias","basicLSTMCell"),l=Ha(r,"data","basicLSTMCell"),c=Ha(s,"c","basicLSTMCell"),h=Ha(a,"h","basicLSTMCell"),d=oc([l,h],1),p=Au(d,o),f=To(p,u),m=f.shape[0],g=f.shape[1]/4,y=[m,g],b=lc(f,[0,0],y),x=lc(f,[0,g],y),w=lc(f,[0,2*g],y),v=lc(f,[0,3*g],y),k=To($o(uc(b),cc(x)),$o(c,uc(To(i,w))));return[k,$o(cc(k),uc(v))]}}),dc=Ka({batchToSpaceND_:function(e,t,n){const r=Ha(e,"x","batchToSpaceND"),s=t.reduce((e,t)=>e*t);ie(r.rank>=1+t.length,()=>`input rank is ${r.rank} but should be > than blockShape.length ${t.length}`),ie(n.length===t.length,()=>`crops.length is ${n.length} but should be equal to blockShape.length  ${t.length}`),ie(r.shape[0]%s===0,()=>`input tensor batch is ${r.shape[0]} but is not divisible by the product of the elements of blockShape ${t.join(" * ")} === ${s}`);const a={x:r},i={blockShape:t,crops:n};return Da.runKernel(xt,a,i)}}),pc=Ka({batchNorm_:function(e,t,n,r,s,a){null==a&&(a=.001);const i=Ha(e,"x","batchNorm"),o=Ha(t,"mean","batchNorm"),u=Ha(n,"variance","batchNorm");let l,c;null!=s&&(l=Ha(s,"scale","batchNorm")),null!=r&&(c=Ha(r,"offset","batchNorm")),ie(o.rank===u.rank,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),ie(null==c||o.rank===c.rank,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),ie(null==l||o.rank===l.rank,()=>"Batch normalization gradient requires mean and scale to have equal ranks.");const h={x:function(e){let t;return t=0===e.rank||1===e.rank?sc(e,[1,1,1,e.size]):2===e.rank?sc(e,[1,1,e.shape[0],e.shape[1]]):3===e.rank?sc(e,[1,e.shape[0],e.shape[1],e.shape[2]]):e,t}(i),scale:l,offset:c,mean:o,variance:u},d={varianceEpsilon:a},p=Da.runKernel(dn,h,d);return sc(p,i.shape)}}),fc=Ka({batchNorm2d_:function(e,t,n,r,s,a){const i=Ha(e,"x","batchNorm"),o=Ha(t,"mean","batchNorm"),u=Ha(n,"variance","batchNorm");let l,c;return null!=s&&(l=Ha(s,"scale","batchNorm")),null!=r&&(c=Ha(r,"offset","batchNorm")),ie(2===i.rank,()=>`Error in batchNorm2D: x must be rank 2 but got rank ${i.rank}.`),ie(2===o.rank||1===o.rank,()=>`Error in batchNorm2D: mean must be rank 2 or rank 1 but got rank ${o.rank}.`),ie(2===u.rank||1===u.rank,()=>`Error in batchNorm2D: variance must be rank 2 or rank 1 but got rank ${u.rank}.`),null!=l&&ie(2===l.rank||1===l.rank,()=>`Error in batchNorm2D: scale must be rank 2 or rank 1 but got rank ${l.rank}.`),null!=c&&ie(2===c.rank||1===c.rank,()=>`Error in batchNorm2D: offset must be rank 2 or rank 1 but got rank ${c.rank}.`),pc(i,o,u,c,l,a)}}),mc=Ka({batchNorm3d_:function(e,t,n,r,s,a){const i=Ha(e,"x","batchNorm"),o=Ha(t,"mean","batchNorm"),u=Ha(n,"variance","batchNorm");let l,c;return null!=s&&(l=Ha(s,"scale","batchNorm")),null!=r&&(c=Ha(r,"offset","batchNorm")),ie(3===i.rank,()=>`Error in batchNorm3D: x must be rank 3 but got rank ${i.rank}.`),ie(3===o.rank||1===o.rank,()=>`Error in batchNorm3D: mean must be rank 3 or rank 1 but got rank ${o.rank}.`),ie(3===u.rank||1===u.rank,()=>`Error in batchNorm3D: variance must be rank 3 or rank 1 but got rank ${u.rank}.`),null!=l&&ie(3===l.rank||1===l.rank,()=>`Error in batchNorm3D: scale must be rank 3 or rank 1 but got rank ${l.rank}.`),null!=c&&ie(3===c.rank||1===c.rank,()=>`Error in batchNorm3D: offset must be rank 3 or rank 1 but got rank ${c.rank}.`),pc(i,o,u,c,l,a)}}),gc=Ka({batchNorm4d_:function(e,t,n,r,s,a){const i=Ha(e,"x","batchNorm"),o=Ha(t,"mean","batchNorm"),u=Ha(n,"variance","batchNorm");let l,c;return null!=s&&(l=Ha(s,"scale","batchNorm")),null!=r&&(c=Ha(r,"offset","batchNorm")),ie(4===i.rank,()=>`Error in batchNorm4D: x must be rank 4 but got rank ${i.rank}.`),ie(4===o.rank||1===o.rank,()=>`Error in batchNorm4D: mean must be rank 4 or rank 1 but got rank ${o.rank}.`),ie(4===u.rank||1===u.rank,()=>`Error in batchNorm4D: variance must be rank 4 or rank 1 but got rank ${u.rank}.`),null!=l&&ie(4===l.rank||1===l.rank,()=>`Error in batchNorm4D: scale must be rank 4 or rank 1 but got rank ${l.rank}.`),null!=c&&ie(4===c.rank||1===c.rank,()=>`Error in batchNorm4D: offset must be rank 4 or rank 1 but got rank ${c.rank}.`),pc(i,o,u,c,l,a)}}),yc=Ka({bincount_:function(e,t,n){const r=Ha(e,"x","bincount"),s=Ha(t,"weights","bincount");ie("int32"===r.dtype,()=>`Error in bincount: input dtype must be int32, but got ${r.dtype}`),ie(n>=0,()=>`size must be non-negative, but got ${n}.`),ie(s.size===r.size||0===s.size,()=>`Error in bincount: weights must have the same size as input or0-length, but got input shape: ${r.shape}, weights shape: ${s.shape}.`);const a={x:r,weights:s},i={size:n};return Da.runKernel(wt,a,i)}}),bc=Ka({bitwiseAnd_:function(e,t){const n=Ha(e,"x","bitwiseAnd"),r=Ha(t,"y","bitwiseAnd");if(!de(n.shape,r.shape))throw new Error(`BitwiseAnd: Tensors must have the same shape. x: ${n.shape}, y: ${r.shape}`);if("int32"!==n.dtype||"int32"!==r.dtype)throw new Error(`BitwiseAnd: Only supports \'int32\' values in tensor, found type of x: ${n.dtype} and type of y: ${r.dtype}`);const s={a:n,b:r};return Da.runKernel(vt,s)}}),xc=Ka({broadcastArgs_:function(e,t){const n=Ha(e,"s0","broadcastArgs","int32"),r=Ha(t,"s1","broadcastArgs","int32");if(1!==n.rank)throw new Error(`broadcastArgs(): first input must be a vector (rank=1). Has rank ${n.rank}`);if(1!==r.rank)throw new Error(`broadcastArgs(): second input must be a vector (rank=1). Has rank ${r.rank}`);const s={s0:n,s1:r};return Da.runKernel(It,s)}}),wc=Ka({broadcastTo_:function(e,t){let n=Ha(e,"broadcastTo","x");const r=n.shape;if(Ue(t),t.length<n.rank)throw new Error(`broadcastTo(): shape.length=${t.length} < input.rank=${n.rank}.`);if(t.length>n.rank){const e=n.shape.slice();for(;e.length<t.length;)e.unshift(1);n=sc(n,e)}const s=n.shape,a=Array.from(t);for(let e=t.length-1;e>=0;e--)if(s[e]===t[e])a[e]=1;else if(1!==n.shape[e])throw new Error(`broadcastTo(): [${r}] cannot be broadcast to [${t}].`);if(0===a.map((e,t)=>e>1?t:-1).filter(e=>e>=0).length)return So(n);const i={x:n},o={reps:a};return Da.runKernel(ss,i,o)}}),vc=Ka({ceil_:function(e){const t={x:Ha(e,"x","ceil","float32")};return Da.runKernel(Nt,t)}}),kc=Ka({clipByValue_:function(e,t,n){const r=Ha(e,"x","clipByValue");if(ie(t<=n,()=>`Error in clip: min (${t}) must be less than or equal to max (${n}).`),t===n)return Xo(r.shape,t,r.dtype);const s={x:r},a={clipValueMin:t,clipValueMax:n};return Da.runKernel(Tt,s,a)}}),Ic=Ka({concat1d_:function(e){return oc(e,0)}}),Sc=Ka({concat2d_:function(e,t){return oc(e,t)}}),Nc=Ka({concat3d_:function(e,t){return oc(e,t)}}),Tc=Ka({concat4d_:function(e,t){return oc(e,t)}}),Ec=Ka({conv2d_:function(e,t,n,r,s="NHWC",a=[1,1],i){const o=Ha(e,"x","conv2d","float32"),u=Ha(t,"filter","conv2d","float32");let l=o,c=!1;3===o.rank&&(c=!0,l=sc(o,[1,o.shape[0],o.shape[1],o.shape[2]])),ie(4===l.rank,()=>`Error in conv2d: input must be rank 4, but got rank ${l.rank}.`),ie(4===u.rank,()=>`Error in conv2d: filter must be rank 4, but got rank ${u.rank}.`),rc("conv2d",r,i);const h="NHWC"===s?l.shape[3]:l.shape[1];ie(h===u.shape[2],()=>`Error in conv2d: depth of input (${h}) must match input depth for filter ${u.shape[2]}.`),ie(ec(n,a),()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${n} and dilations \'${a}\'`),ie(tc(a),()=>"Error in conv2D: Dilated rates should be larger than 0."),ie(tc(n),()=>"Error in conv2D: Strides should be larger than 0.");const d={x:l,filter:u},p={strides:n,pad:r,dataFormat:s,dilations:a,dimRoundingMode:i},f=Da.runKernel(At,d,p);return c?sc(f,[f.shape[1],f.shape[2],f.shape[3]]):f}}),Cc=Ka({conv1d_:function(e,t,n,r,s="NWC",a=1,i){const o=Ha(e,"x","conv1d"),u=Ha(t,"filter","conv1d");let l=o,c=!1;2===o.rank&&(c=!0,l=sc(o,[1,o.shape[0],o.shape[1]])),ie(3===l.rank,()=>`Error in conv1d: input must be rank 3, but got rank ${l.rank}.`),ie(3===u.rank,()=>`Error in conv1d: filter must be rank 3, but got rank ${u.rank}.`),rc("conv1d",r,i),ie(l.shape[2]===u.shape[1],()=>`Error in conv1d: depth of input (${l.shape[2]}) must match input depth for filter ${u.shape[1]}.`),ie(ec(n,a),()=>`Error in conv1D: Either stride or dilation must be 1. Got stride ${n} and dilation \'${a}\'`),ie(tc(a),()=>"Error in conv1D: Dilated rates should be larger than 0."),ie(tc(n),()=>"Error in conv1D: Stride should be larger than 0."),ie("NWC"===s,()=>`Error in conv1d: got dataFormat of ${s} but only NWC is currently supported.`);const h=sc(u,[1,u.shape[0],u.shape[1],u.shape[2]]),d=sc(l,[l.shape[0],1,l.shape[1],l.shape[2]]),p=Ec(d,h,[1,n],r,"NHWC",[1,a],i);return sc(p,c?[p.shape[2],p.shape[3]]:[p.shape[0],p.shape[2],p.shape[3]])}}),$c=Ka({conv2DBackpropInput_:function(e,t,n,r,s,a="NHWC",i){ie(e.length===t.rank,()=>`Length of inShape (${e.length}) and rank of dy (${t.rank}) must match`);let o=e,u=t,l=!1;3===t.rank&&(l=!0,u=sc(t,[1,t.shape[0],t.shape[1],t.shape[2]]),o=[1,e[0],e[1],e[2]]),ie(4===o.length,()=>`Error in conv2dDerInput: inShape must be length 4, but got length ${o.length}.`),ie(4===u.rank,()=>`Error in conv2dDerInput: dy must be rank 4, but got rank ${u.rank}`),ie(4===n.rank,()=>`Error in conv2dDerInput: filter must be rank 4, but got rank ${n.rank}`);const c="NHWC"===a?o[3]:o[1],h="NHWC"===a?u.shape[3]:u.shape[1];ie(c===n.shape[2],()=>`Error in conv2dDerInput: depth of input (${c}) must match input depth for filter ${n.shape[2]}.`),ie(h===n.shape[3],()=>`Error in conv2dDerInput: depth of output (${h}) must match output depth for filter ${n.shape[3]}.`),rc("conv2dDerInput",s,i);const d={dy:u,filter:n},p={strides:r,pad:s,dataFormat:a,dimRoundingMode:i,inputShape:o},f=Da.runKernel(_t,d,p);return l?sc(f,[f.shape[1],f.shape[2],f.shape[3]]):f}}),Ac=Ka({conv2dTranspose_:function(e,t,n,r,s,a){const i=Ha(e,"x","conv2dTranspose"),o=Ha(t,"filter","conv2dTranspose");return $c(n,i,o,r,s,"NHWC",a)}}),Rc=Ka({conv3d_:function(e,t,n,r,s="NDHWC",a=[1,1,1]){const i=Ha(e,"x","conv3d"),o=Ha(t,"filter","conv3d");let u=i,l=!1;4===i.rank&&(l=!0,u=sc(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),ie(5===u.rank,()=>`Error in conv3d: input must be rank 5, but got rank ${u.rank}.`),ie(5===o.rank,()=>`Error in conv3d: filter must be rank 5, but got rank ${o.rank}.`),ie(u.shape[4]===o.shape[3],()=>`Error in conv3d: depth of input (${u.shape[4]}) must match input depth for filter ${o.shape[3]}.`),ie(ec(n,a),()=>`Error in conv3D: Either strides or dilations must be 1. Got strides ${n} and dilations \'${a}\'`),ie("NDHWC"===s,()=>`Error in conv3d: got dataFormat of ${s} but only NDHWC is currently supported.`),ie(tc(a),()=>"Error in conv3D: Dilated rates should be larger than 0."),ie(tc(n),()=>"Error in conv3D: Strides should be larger than 0.");const c={x:u,filter:o},h={strides:n,pad:r,dataFormat:s,dilations:a},d=Da.runKernel(Mt,c,h);return l?sc(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}}),_c=Ka({conv3DBackpropInput_:function(e,t,n,r,s){ie(e.length===t.rank,()=>`Length of inShape (${e.length}) and rank of dy (${t.rank}) must match`);let a=e,i=t,o=!1;4===t.rank&&(o=!0,i=sc(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]]),a=[1,e[0],e[1],e[2],e[3]]);const u=a[4],l=i.shape[4];ie(5===a.length,()=>`Error in conv3dDerInput: inShape must be length 5, but got length ${a.length}.`),ie(5===i.rank,()=>`Error in conv3dDerInput: dy must be rank 5, but got rank ${i.rank}`),ie(5===n.rank,()=>`Error in conv3dDerInput: filter must be rank 5, but got rank ${n.rank}`),ie(u===n.shape[3],()=>`Error in conv3dDerInput: depth of input (${u}) must match input depth for filter ${n.shape[3]}.`),ie(l===n.shape[4],()=>`Error in conv3dDerInput: depth of output (${l}) must match output depth for filter ${n.shape[4]}.`);const c={dy:i,filter:n},h={pad:s,strides:r,inputShape:a},d=Da.runKernel(Dt,c,h);return o?sc(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}}),Mc=Ka({conv3dTranspose_:function(e,t,n,r,s){const a=Ha(e,"x","conv3dTranspose"),i=Ha(t,"filter","conv3dTranspose");return _c(n,a,i,r,s)}}),Fc=Ka({cos_:function(e){const t={x:Ha(e,"x","cos","float32")};return Da.runKernel(Ot,t)}}),Dc=Ka({cosh_:function(e){const t={x:Ha(e,"x","cosh","float32")};return Da.runKernel(Lt,t)}}),Oc=Ka({cumprod_:function(e,t=0,n=!1,r=!1){const s={x:Ha(e,"x","cumprod")},a={axis:t,exclusive:n,reverse:r};return Da.runKernel(zt,s,a)}}),Lc=Ka({cumsum_:function(e,t=0,n=!1,r=!1){const s={x:Ha(e,"x","cumsum")},a={axis:t,exclusive:n,reverse:r};return Da.runKernel(Pt,s,a)}}),zc=Ka({denseBincount_:function(e,t,n,r=!1){const s=Ha(e,"x","denseBincount"),a=Ha(t,"weights","denseBincount");ie("int32"===s.dtype,()=>`Error in denseBincount: input dtype must be int32, but got ${s.dtype}`),ie(s.rank<=2,()=>`Error in denseBincount: input must be at most rank 2, but got rank ${s.rank}.`),ie(n>=0,()=>`size must be non-negative, but got ${n}.`),ie(a.size===s.size||0===a.size,()=>`Error in denseBincount: weights must have the same shape as x or 0-length, but got x shape: ${s.shape}, weights shape: ${a.shape}.`);const i={x:s,weights:a},o={size:n,binaryOutput:r};return Da.runKernel(Vt,i,o)}}),Pc=Ka({depthToSpace_:function(e,t,n="NHWC"){const r=Ha(e,"x","depthToSpace","float32"),s="NHWC"===n?r.shape[1]:r.shape[2],a="NHWC"===n?r.shape[2]:r.shape[3],i="NHWC"===n?r.shape[3]:r.shape[1];ie(t>1,()=>`blockSize should be > 1 for depthToSpace, but was: ${t}`),ie(s*t>=0,()=>`Negative dimension size caused by overflow when multiplying\\n    ${s} and ${t}  for depthToSpace with input shape\\n    ${r.shape}`),ie(a*t>=0,()=>`Negative dimension size caused by overflow when multiplying\\n    ${a} and ${t} for depthToSpace with input shape\\n        ${r.shape}`),ie(i%(t*t)===0,()=>`Dimension size must be evenly divisible by ${t*t} but is ${i} for depthToSpace with input shape ${r.shape}`);const o={x:r},u={blockSize:t,dataFormat:n};return Da.runKernel(Ut,o,u)}}),Bc=Ka({depthwiseConv2d_:function(e,t,n,r,s="NHWC",a=[1,1],i){const o=Ha(e,"x","depthwiseConv2d","float32"),u=Ha(t,"filter","depthwiseConv2d","float32");let l=o,c=!1;3===o.rank&&(c=!0,l=sc(o,[1,o.shape[0],o.shape[1],o.shape[2]])),ie(4===l.rank,()=>`Error in depthwiseConv2d: input must be rank 4, but got rank ${l.rank}.`),ie(4===u.rank,()=>`Error in depthwiseConv2d: filter must be rank 4, but got rank ${u.rank}.`);const h="NHWC"===s?l.shape[3]:l.shape[1];ie(h===u.shape[2],()=>`Error in depthwiseConv2d: number of input channels (${h}) must match the inChannels dimension in filter ${u.shape[2]}.`),rc("depthwiseConv2d",r,i);const d={x:l,filter:u},p={strides:n,pad:r,dataFormat:s,dilations:a,dimRoundingMode:i},f=Da.runKernel(Wt,d,p);return c?sc(f,[f.shape[1],f.shape[2],f.shape[3]]):f}}),Vc=Ka({diag_:function(e){const t={x:Ha(e,"x","diag")};return Da.runKernel(jt,t)}}),Uc=Ka({dilation2d_:function(e,t,n,r,s=[1,1],a="NHWC"){const i=Ha(e,"x","dilation2d"),o=Ha(t,"filter","dilation2d");ie(3===i.rank||4===i.rank,()=>`Error in dilation2d: input must be rank 3 or 4, but got rank ${i.rank}.`),ie(3===o.rank,()=>`Error in dilation2d: filter must be rank 3, but got rank ${o.rank}.`),ie("NHWC"===a,()=>`Error in dilation2d: Only NHWC is currently supported, but got dataFormat of ${a}`);let u=i,l=!1;3===i.rank&&(u=sc(i,[1,i.shape[0],i.shape[1],i.shape[2]]),l=!0),ie(u.shape[3]===o.shape[2],()=>`Error in dilation2d:  input and filter must have the same depth: ${u.shape[3]} vs ${o.shape[2]}`);const c={x:u,filter:o},h={strides:n,pad:r,dilations:s},d=Da.runKernel(qt,c,h);return l?sc(d,[d.shape[1],d.shape[2],d.shape[3]]):d}}),Wc=Ka({equal_:function(e,t){let n=Ha(e,"a","equal","string_or_numeric"),r=Ha(t,"b","equal","string_or_numeric");[n,r]=Ta(n,r),ru(n.shape,r.shape);const s={a:n,b:r};return Da.runKernel(nn,s)}}),Gc=Ka({where_:function(e,t,n){const r=Ha(t,"a","where"),s=Ha(n,"b","where"),a=Ha(e,"condition","where","bool"),i=ru(ru(a.shape,r.shape),s.shape),o={condition:wc(a,i),t:wc(r,i),e:wc(s,i)};return Da.runKernel(Ar,o)}}),Hc=Ka({divNoNan_:function(e,t){let n=Ha(e,"a","div"),r=Ha(t,"b","div");[n,r]=Ta(n,r);const s=Co(n,r),a=_o(s),i=Wc(r,a);return Gc(i,a,s)}}),jc=Ka({dot_:function(e,t){const n=Ha(e,"t1","dot"),r=Ha(t,"t2","dot");ie(!(1!==n.rank&&2!==n.rank||1!==r.rank&&2!==r.rank),()=>`Error in dot: inputs must all be rank 1 or 2, but got ranks ${n.rank} and ${r.rank}.`);const s=1===n.rank?n.size:n.shape[1],a=1===r.rank?r.size:r.shape[0];if(ie(s===a,()=>`Error in dot: inner dimensions of inputs must match, but got ${s} and ${a}.`),1===n.rank&&1===r.rank){const e=sc(n,[1,-1]),t=sc(r,[-1,1]),s=Au(e,t);return sc(s,[])}if(1===n.rank&&2===r.rank){const e=sc(n,[1,-1]),t=sc(r,[r.shape[0],r.shape[1]]),s=Au(e,t);return sc(s,[s.size])}if(2===n.rank&&1===r.rank){const e=sc(r,[-1,1]),t=Au(n,e);return sc(t,[t.size])}{const e=sc(r,[r.shape[0],r.shape[1]]);return Au(n,e)}}}),qc=Ka({einsum_:function(e,...t){const n=t.map((e,t)=>Ha(e,`tensors${t}`,"einsum")),r={equation:e};return Da.runKernel(Zt,n,r)}}),Kc=Ka({elu_:function(e){const t={x:Ha(e,"x","elu","float32")};return Da.runKernel(Qt,t)}}),Xc=Ka({ensureShape_:function(e,t){const n=Ha(e,"x","ensureShape","string_or_numeric");if(!he(n.shape,t))throw new Error(`EnsureShape: Shape of tensor ${n.shape} is not compatible with expected shape ${t}`);return e}}),Yc=Ka({erf_:function(e){let t=Ha(e,"x","erf");ie("int32"===t.dtype||"float32"===t.dtype,()=>"Input dtype must be `int32` or `float32`."),"int32"===t.dtype&&(t=Io(t,"float32"));const n={x:t};return Da.runKernel(tn,n)}});function Jc(e,t){for(let n=0;n<e.length;++n)if(e[e.length-n-1]!==t-1-n)return!1;return!0}function Zc(e,t,n){const r=e.length+t.length,s=[];let a=0,i=0;for(let o=0;o<r;o++)-1===n.indexOf(o)?s.push(e[a++]):s.push(t[i++]);return s}function Qc(e,t){const n=[],r=e.length;for(let s=0;s<r;s++)-1===t.indexOf(s)&&n.push(e[s]);return[n,t.map(t=>e[t])]}function eh(e,t){return Zc(e,t.map(e=>1),t)}function th(e,t,n){ie(Jc(t,n),()=>`${e} supports only inner-most axes for now. Got axes ${t} and rank-${n} input.`)}function nh(e,t){if(Jc(e,t))return null;const n=[];for(let r=0;r<t;++r)-1===e.indexOf(r)&&n.push(r);return e.forEach(e=>n.push(e)),n}function rh(e){return e.map((e,t)=>[t,e]).sort((e,t)=>e[1]-t[1]).map(e=>e[0])}function sh(e,t){const n=[];for(let r=t-e;r<t;++r)n.push(r);return n}const ah=Ka({max_:function(e,t=null,n=!1){const r={x:Ha(e,"x","max")},s={reductionIndices:t,keepDims:n};return Da.runKernel(zn,r,s)}}),ih=Ka({min_:function(e,t=null,n=!1){const r={x:Ha(e,"x","min")},s={axis:t,keepDims:n};return Da.runKernel(jn,r,s)}}),oh=Ka({sum_:function(e,t=null,n=!1){let r=Ha(e,"x","sum");"bool"===r.dtype&&(r=Io(r,"int32"));const s={x:r},a={axis:t,keepDims:n};return Da.runKernel(Pr,s,a)}});function uh(e,t,n=null){if(0===e.rank)return eu(e);if(1!==e.rank&&null===n)return uh(sc(e,[-1]),t,n);if(1===e.rank||"number"==typeof n||Array.isArray(n)&&1===n.length){if(1===t)return oh(eu(e),n);if(t===1/0)return ah(eu(e),n);if(t===-1/0)return ih(eu(e),n);if("euclidean"===t||2===t)return Ao(oh(Jo(eu(e),Bo(2,"int32")),n));throw new Error(`Error in norm: invalid ord value: ${t}`)}if(Array.isArray(n)&&2===n.length){if(1===t)return ah(oh(eu(e),n[0]),n[1]-1);if(t===1/0)return ah(oh(eu(e),n[1]),n[0]);if(t===-1/0)return ih(oh(eu(e),n[1]),n[0]);if("fro"===t||"euclidean"===t)return Ao(oh(Ro(e),n));throw new Error(`Error in norm: invalid ord value: ${t}`)}throw new Error(`Error in norm: invalid axis: ${n}`)}const lh=Ka({norm_:function(e,t="euclidean",n=null,r=!1){const s=uh(e=Ha(e,"x","norm"),t,n);let a=s.shape;if(r){const t=we(n,e.shape);a=eh(s.shape,t)}return sc(s,a)}}),ch=Ka({euclideanNorm_:function(e,t=null,n=!1){return lh(e,"euclidean",t,n)}}),hh=Ka({exp_:function(e){const t={x:Ha(e,"x","exp")};return Da.runKernel(rn,t)}}),dh=Ka({expandDims_:function(e,t=0){const n=Ha(e,"x","expandDims","string_or_numeric");ie(t<=n.rank,()=>"Axis must be <= rank of the tensor");const r={input:n},s={dim:t};return Da.runKernel(sn,r,s)}}),ph=Ka({expm1_:function(e){const t={x:Ha(e,"x","expm1")};return Da.runKernel(an,t)}}),fh=Ka({tile_:function(e,t){const n=Ha(e,"x","tile","string_or_numeric");ie(n.rank===t.length,()=>`Error in transpose: rank of input ${n.rank} must match length of reps ${t}.`);const r={x:n},s={reps:t};return Da.runKernel(ss,r,s)}}),mh=Ka({eye_:function(e,t,n,r="float32"){null==t&&(t=e);const s=ko([e,t],r),a=e<=t?e:t;for(let e=0;e<a;++e)s.set(1,e,e);const i=sc(s.toTensor(),[e,t]);if(null==n)return i;if(1===n.length)return fh(dh(i,0),[n[0],1,1]);if(2===n.length)return fh(dh(dh(i,0),0),[n[0],n[1],1,1]);if(3===n.length)return fh(dh(dh(dh(i,0),0),0),[n[0],n[1],n[2],1,1]);throw new Error(`eye() currently supports only 1D and 2D batchShapes, but received ${n.length}D.`)}}),gh=Ka({floor_:function(e){const t={x:Ha(e,"x","floor","float32")};return Da.runKernel(cn,t)}}),yh=Ka({gather_:function(e,t,n=0,r=0){const s={x:Ha(e,"x","gather"),indices:Ha(t,"indices","gather","int32")},a={axis:n,batchDims:r};return Da.runKernel(pn,s,a)}}),bh=Ka({greater_:function(e,t){let n=Ha(e,"a","greater","string_or_numeric"),r=Ha(t,"b","greater","string_or_numeric");[n,r]=Ta(n,r),ru(n.shape,r.shape);const s={a:n,b:r};return Da.runKernel(mn,s)}}),xh=Ka({greaterEqual_:function(e,t){let n=Ha(e,"a","greaterEqual","string_or_numeric"),r=Ha(t,"b","greaterEqual","string_or_numeric");[n,r]=Ta(n,r),ru(n.shape,r.shape);const s={a:n,b:r};return Da.runKernel(gn,s)}}),wh=Ka({isFinite_:function(e){const t={x:Ha(e,"x","isFinite")};return Da.runKernel(wn,t)}}),vh=Ka({isInf_:function(e){const t={x:Ha(e,"x","isInf")};return Da.runKernel(vn,t)}}),kh=Ka({isNaN_:function(e){const t={x:Ha(e,"x","isNaN")};return Da.runKernel(kn,t)}}),Ih=Ka({leakyRelu_:function(e,t=.2){const n={x:Ha(e,"x","leakyRelu")},r={alpha:t};return Da.runKernel(In,n,r)}}),Sh=Ka({less_:function(e,t){let n=Ha(e,"a","less","string_or_numeric"),r=Ha(t,"b","less","string_or_numeric");[n,r]=Ta(n,r),ru(n.shape,r.shape);const s={a:n,b:r};return Da.runKernel(Sn,s)}}),Nh=Ka({lessEqual_:function(e,t){let n=Ha(e,"a","lessEqual","string_or_numeric"),r=Ha(t,"b","lessEqual","string_or_numeric");[n,r]=Ta(n,r),ru(n.shape,r.shape);const s={a:n,b:r};return Da.runKernel(Nn,s)}});function Th(e,t,n){if(n<=0)throw new Error("The number of values should be positive.");const r={start:e,stop:t,num:n};return Da.runKernel(Tn,{},r)}const Eh=Ka({localResponseNormalization_:function(e,t=5,n=1,r=1,s=.5){const a=Ha(e,"x","localResponseNormalization");ie(4===a.rank||3===a.rank,()=>`Error in localResponseNormalization: x must be rank 3 or 4 but got\\n               rank ${a.rank}.`),ie(pe(t),()=>`Error in localResponseNormalization: depthRadius must be an integer but got depthRadius ${t}.`);let i=a,o=!1;3===a.rank&&(o=!0,i=sc(a,[1,a.shape[0],a.shape[1],a.shape[2]]));const u={x:i},l={depthRadius:t,bias:n,alpha:r,beta:s},c=Da.runKernel(Dn,u,l);return o?sc(c,[c.shape[1],c.shape[2],c.shape[3]]):c}}),Ch=Ka({log_:function(e){const t={x:Ha(e,"x","log","float32")};return Da.runKernel(En,t)}}),$h=Ka({log1p_:function(e){const t={x:Ha(e,"x","log1p")};return Da.runKernel(Cn,t)}}),Ah=Ka({softplus_:function(e){const t={x:Ha(e,"x","softplus")};return Da.runKernel(Lr,t)}}),Rh=Ka({logSigmoid_:function(e){const t=Ha(e,"x","logSigmoid");return zo(e=>({value:Mu(Ah(Mu(e))),gradFunc:t=>$o(t,uc(Mu(e)))}))(t)}}),_h=Ka({logSoftmax_:function(e,t=-1){const n=Ha(e,"logits","logSoftmax");if(-1===t&&(t=n.rank-1),t!==n.rank-1)throw Error(`Log Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and axis was ${t}`);const r=zo((e,n)=>{const r=ah(e,t,!0),s=Zo(e,r),a=Zo(Io(s,"float32"),Ch(oh(hh(s),t,!0)));return n([a]),{value:a,gradFunc:(e,n)=>{const[r]=n,s=hh(r);return Zo(e,$o(oh(e,t,!0),s))}}});return r(n)}}),Mh=Ka({logSumExp_:function(e,t=null,n=!1){const r=Ha(e,"x","logSumExp"),s=we(t,r.shape),a=ah(r,s,!0),i=Zo(r,a),o=hh(i),u=oh(o,s),l=Ch(u),c=To(sc(a,l.shape),l);if(n){const e=eh(c.shape,s);return sc(c,e)}return c}}),Fh=Ka({logicalAnd_:function(e,t){const n=Ha(e,"a","logicalAnd","bool"),r=Ha(t,"b","logicalAnd","bool");ru(n.shape,r.shape);const s={a:n,b:r};return Da.runKernel($n,s)}}),Dh=Ka({logicalNot_:function(e){const t={x:Ha(e,"x","logicalNot","bool")};return Da.runKernel(An,t)}}),Oh=Ka({logicalOr_:function(e,t){const n=Ha(e,"a","logicalOr","bool"),r=Ha(t,"b","logicalOr","bool");ru(n.shape,r.shape);const s={a:n,b:r};return Da.runKernel(Rn,s)}}),Lh=Ka({logicalXor_:function(e,t){const n=Ha(e,"a","logicalXor","bool"),r=Ha(t,"b","logicalXor","bool");return ru(n.shape,r.shape),Fh(Oh(e,t),Dh(Fh(e,t)))}}),zh=2147483648,Ph=Ka({searchSorted_:function(e,t,n="left"){const r=Ha(e,"sortedSequence","searchSorted"),s=Ha(t,"values","searchSorted"),a=r.shape[r.shape.length-1],i=s.shape[s.shape.length-1],o=sc(r,[-1,a]),u=sc(s,[-1,i]);if(o.rank<2)throw new Error("Sorted input argument must be at least 2-dimensional");if(o.shape[0]!==u.shape[0])throw new Error("Leading dimension of \'sortedSequence\' and \'values\' must match.");if(le(u.shape)>=zh)throw new Error("values tensor size must less than 2147483648");if(o.shape[1]>=zh)throw new Error(`trailing dim_size must less than 2147483648 for int32 output type, was ${o.shape[1]}`);const l={sortedSequence:o,values:u},c={side:n};return Da.runKernel($r,l,c)}});function Bh(e,t){return Ph(e,t,"left")}const Vh=Ka({maxPool_:function(e,t,n,r,s){const a=Ha(e,"x","maxPool");let i=a,o=!1;3===a.rank&&(o=!0,i=sc(a,[1,a.shape[0],a.shape[1],a.shape[2]])),ie(4===i.rank,()=>`Error in maxPool: input must be rank 4 but got rank ${i.rank}.`),ie(ec(n,1),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${n} and dilations \'1\'`),rc("maxPool",r,s);const u={x:i},l={filterSize:t,strides:n,pad:r,dimRoundingMode:s},c=Da.runKernel(Bn,u,l);return o?sc(c,[c.shape[1],c.shape[2],c.shape[3]]):c}}),Uh=Ka({maxPool3d_:function(e,t=[1,1,1],n,r,s,a="NDHWC"){const i=Ha(e,"x","maxPool3d");let o=i,u=!1;4===i.rank&&(u=!0,o=sc(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),ie(5===o.rank,()=>`Error in maxPool3d: x must be rank 5 but got rank ${o.rank}.`),ie("NDHWC"===a,()=>`Error in maxPool3d: Only NDHWC is currently supported, but got dataFormat of ${a}`),rc("maxPool3d",r,s);const l={x:o},c={filterSize:t,strides:n,pad:r,dimRoundingMode:s,dataFormat:a},h=Da.runKernel(Un,l,c);return u?sc(h,[h.shape[1],h.shape[2],h.shape[3],h.shape[4]]):h}}),Wh=Ka({maxPoolWithArgmax_:function(e,t,n,r,s=!1){const a={x:Ha(e,"x","maxPoolWithArgmax")},i={filterSize:t,strides:n,pad:r,includeBatchInIndex:s},o=Da.runKernel(Gn,a,i);return{result:o[0],indexes:o[1]}}}),Gh=Ka({mean_:function(e,t=null,n=!1){const r={x:Ha(e,"x","mean")},s={axis:t,keepDims:n};return Da.runKernel(Hn,r,s)}});function Hh(e,t="float32"){if(Ue(e),"complex64"===t){const t=Hh(e,"float32"),n=Hh(e,"float32");return Xa(t,n)}const n=Be(le(e),t);return Da.makeTensor(n,e,t)}function jh(e,t="float32"){if(Ue(e),"complex64"===t){const t=jh(e,"float32"),n=Hh(e,"float32");return Xa(t,n)}const n=Pe(le(e),t);return Da.makeTensor(n,e,t)}function qh(e,t,{indexing:n="xy"}={}){if("xy"!==n&&"ij"!==n)throw new TypeError(`${n} is not a valid third argument to meshgrid`);if(void 0===e)return[];let r=Ha(e,"x","meshgrid",e instanceof pa?e.dtype:"float32");if(void 0===t)return[r];let s=Ha(t,"y","meshgrid",t instanceof pa?t.dtype:"float32");const a=le(r.shape),i=le(s.shape);return"xy"===n?(r=sc(r,[1,-1]),s=sc(s,[-1,1]),[Au(jh([i,1],r.dtype),r),Au(s,jh([1,a],s.dtype))]):(r=sc(r,[-1,1]),s=sc(s,[1,-1]),[Au(r,jh([1,i],r.dtype)),Au(jh([a,1],s.dtype),s)])}const Kh=Ka({minimum_:function(e,t){let n=Ha(e,"a","minimum"),r=Ha(t,"b","minimum");[n,r]=Ta(n,r),"bool"===n.dtype&&(n=Io(n,"int32"),r=Io(r,"int32")),ru(n.shape,r.shape);const s={a:n,b:r};return Da.runKernel(qn,s)}}),Xh=Ka({mirrorPad_:function(e,t,n){ie("reflect"===n||"symmetric"===n,()=>`Invalid mode. Mode must be either reflect or symmetric. Got ${n}.`);const r=Ha(e,"x","mirrorPad");if(0===r.rank)throw new Error("mirrorPad(scalar) is not defined. Pass non-scalar to mirrorPad");ie(t.length===r.rank,()=>`Padding doesn\'t match input. Must be ${r.rank}. Got ${t.length}.`);const s="reflect"===n?1:0;for(let e=0;e<r.rank;e++)ie(2===t[e].length,()=>"Invalid number of paddings. Must be length of 2 each."),ie(t[e][0]>=0&&t[e][0]<=r.shape[e]-s&&t[e][1]>=0&&t[e][1]<=r.shape[e]-s,()=>`Padding in dimension ${e} cannot be greater than or equal to ${r.shape[e]-s} or less than 0 for input of shape ${r.shape}`);const a={paddings:t,mode:n},i={x:r};return Da.runKernel(Kn,i,a)}}),Yh=Ka({mod_:function(e,t){let n=Ha(e,"a","mod"),r=Ha(t,"b","mod");[n,r]=Ta(n,r);const s={a:n,b:r};return Da.runKernel(Xn,s)}}),Jh=Ka({moments_:function(e,t=null,n=!1){const r=we(t,(e=Ha(e,"x","moments")).shape),s=Gh(e,r,n);let a=s.shape;n||(a=eh(s.shape,r));const i=Ro(Zo(Io(e,"float32"),sc(s,a)));return{mean:s,variance:Gh(i,r,n)}}}),Zh=Ka({multiRNNCell_:function(e,t,n,r){const s=Ha(t,"data","multiRNNCell"),a=ja(n,"c","multiRNNCell"),i=ja(r,"h","multiRNNCell");let o=s;const u=[];for(let t=0;t<e.length;t++){const n=e[t](o,a[t],i[t]);u.push(n[0]),u.push(n[1]),o=n[1]}const l=[],c=[];for(let e=0;e<u.length;e+=2)l.push(u[e]),c.push(u[e+1]);return[l,c]}}),Qh=Ka({multinomial_:function(e,t,n,r=!1){const s=Ha(e,"logits","multinomial"),a=s.size,i=s.rank;if(a<2)throw new Error(`Error in multinomial: you need at least 2 outcomes, but got ${a}.`);if(i>2)throw new Error(`Rank of probabilities must be 1 or 2, but is ${i}`);n=n||Math.random();const o={logits:1===i?sc(s,[1,-1]):s},u={numSamples:t,seed:n,normalized:r},l=Da.runKernel(Yn,o,u);return 1===i?sc(l,[l.size]):l}}),ed=Ka({notEqual_:function(e,t){let n=Ha(e,"a","notEqual","string_or_numeric"),r=Ha(t,"b","notEqual","string_or_numeric");[n,r]=Ta(n,r),ru(n.shape,r.shape);const s={a:n,b:r};return Da.runKernel(Qn,s)}}),td=Ka({onesLike_:function(e){const t={x:Ha(e,"x","onesLike")};return Da.runKernel(rr,t)}}),nd=Ka({outerProduct_:function(e,t){const n=Ha(e,"v1","outerProduct"),r=Ha(t,"v2","outerProduct");ie(1===n.rank&&1===r.rank,()=>`Error in outerProduct: inputs must be rank 1, but got ranks ${n.rank} and ${r.rank}.`);const s=sc(n,[-1,1]),a=sc(r,[1,-1]);return Au(s,a)}}),rd=Ka({pad_:function(e,t,n=0){const r=Ha(e,"x","pad");if(0===r.rank)throw new Error("pad(scalar) is not defined. Pass non-scalar to pad");const s={paddings:t,constantValue:n},a={x:r};return Da.runKernel(ir,a,s)}}),sd=Ka({pad1d_:function(e,t,n=0){return ie(2===t.length,()=>"Invalid number of paddings. Must be length of 2."),rd(e,[t],n)}}),ad=Ka({pad2d_:function(e,t,n=0){return ie(2===t.length&&2===t[0].length&&2===t[1].length,()=>"Invalid number of paddings. Must be length of 2 each."),rd(e,t,n)}}),id=Ka({pad3d_:function(e,t,n=0){return ie(3===t.length&&2===t[0].length&&2===t[1].length&&2===t[2].length,()=>"Invalid number of paddings. Must be length of 2 each."),rd(e,t,n)}}),od=Ka({pad4d_:function(e,t,n=0){return ie(4===t.length&&2===t[0].length&&2===t[1].length&&2===t[2].length&&2===t[3].length,()=>"Invalid number of paddings. Must be length of 2 each."),rd(e,t,n)}}),ud=Ka({spaceToBatchND_:function(e,t,n){const r=Ha(e,"x","spaceToBatchND");ie(r.rank>=1+t.length,()=>`input rank ${r.rank} should be > than [blockShape] ${t.length}`),ie(n.length===t.length,()=>`paddings.shape[0] ${n.length} must be equal to [blockShape] ${t.length}`),ie(r.shape.reduce((e,r,s)=>s>0&&s<=t.length?e&&(r+n[s-1][0]+n[s-1][1])%t[s-1]===0:e,!0),()=>`input spatial dimensions ${r.shape.slice(1)} with paddings ${n.toString()} must be divisible by blockShapes ${t.toString()}`);const s={x:r},a={blockShape:t,paddings:n};return Da.runKernel(Br,s,a)}}),ld=Ka({pool_:function(e,t,n,r,s,a,i){null==s&&(s=[1,1]),null==a&&(a=1),0===r&&(r="valid");const o=Ha(e,"x","maxPool");let u=o,l=!1;3===o.rank&&(l=!0,u=sc(o,[1,o.shape[0],o.shape[1],o.shape[2]])),ie(ec(a,s),()=>`Error in pool: Either strides or dilations must be 1. Got strides ${a} and dilations \'${s}\'`);const c=Gl(u.shape,t,a,s,r),h=[c.dilationHeight,c.dilationWidth];let d;d="same"===r?function(e,t){const n=e.map((e,n)=>e+(e-1)*(t[n]-1)).map(e=>e-1),r=n.map(e=>Math.floor(e/2)),s=n.map((e,t)=>e-r[t]);return n.map((e,t)=>[r[t],s[t]])}([c.filterHeight,c.filterWidth],h):[[0,0],[0,0]];const p=1===h[0]&&1===h[1],[f,m]=function(e,t,n){const r=n.map(e=>e[0]),s=n.map(e=>e[1]),a=e.concat(r,s),i=t.map((e,t)=>(e-a[t]%e)%e),o=s.map((e,t)=>e+i[t]);return[t.map((e,t)=>[r[t],o[t]]),t.map((e,t)=>[0,i[t]])]}([c.inHeight,c.inWidth],h,d),g=p?r:"valid",y=p?u:ud(u,h,f),b=("avg"===n?()=>ac(y,t,a,g,i):()=>Vh(y,t,a,g,i))(),x=p?b:dc(b,h,m);return l?sc(x,[x.shape[1],x.shape[2],x.shape[3]]):x}}),cd=Ka({prelu_:function(e,t){const n={x:Ha(e,"x","prelu"),alpha:Ha(t,"alpha","prelu")};return Da.runKernel(lr,n)}}),hd=Ka({prod_:function(e,t=null,n=!1){let r=Ha(e,"x","prod");"bool"===r.dtype&&(r=Io(r,"int32"));const s={x:r},a={axis:t,keepDims:n};return Da.runKernel(cr,s,a)}}),dd=Ka({raggedGather_:function(e,t,n,r){const s={paramsNestedSplits:e.map((e,t)=>Ha(e,`tensors${t}`,"raggedGather","int32")),paramsDenseValues:Ha(t,"paramsDenseValues","raggedGather"),indices:Ha(n,"indices","raggedGather","int32")},a={outputRaggedRank:r},i=Da.runKernel(hr,s,a);return{outputNestedSplits:i.slice(0,i.length-1),outputDenseValues:i[i.length-1]}}}),pd=Ka({raggedRange_:function(e,t,n){const r=Ha(e,"starts","raggedRange"),s={starts:r,limits:Ha(t,"limits","raggedRange",r.dtype),deltas:Ha(n,"deltas","raggedRange",r.dtype)},a=Da.runKernel(dr,s);return{rtNestedSplits:a[0],rtDenseValues:a[1]}}}),fd=Ka({raggedTensorToTensor_:function(e,t,n,r,s){const a=Ha(e,"shape","raggedTensorToTensor","int32"),i=Ha(t,"values","raggedTensorToTensor"),o={shape:a,values:i,defaultValue:Ha(n,"defaultValue","raggedTensorToTensor",i.dtype),rowPartitionTensors:r.map((e,t)=>Ha(e,`tensors${t}`,"raggedTensorToTensor","int32"))},u={rowPartitionTypes:s};return Da.runKernel(pr,o,u)}}),md=Ka({rand_:function(e,t,n){Ue(e);const r=le(e);let s=null;if(null==n||"float32"===n)s=new Float32Array(r);else if("int32"===n)s=new Int32Array(r);else{if("bool"!==n)throw new Error(`Unknown data type ${n}`);s=new Uint8Array(r)}for(let e=0;e<r;e++)s[e]=t();return Da.makeTensor(s,e,n)}});var gd=n(391);class yd{constructor(e,t,n,r,s){this.mean=e,this.stdDev=t,this.dtype=n,this.nextVal=NaN,this.truncated=r,this.truncated&&(this.upper=this.mean+2*this.stdDev,this.lower=this.mean-2*this.stdDev);const a=s||Math.random();this.random=gd.alea(a.toString())}nextValue(){if(!isNaN(this.nextVal)){const e=this.nextVal;return this.nextVal=NaN,e}let e,t,n=!1;for(;!n;){let r,s,a;do{r=2*this.random()-1,s=2*this.random()-1,a=r*r+s*s}while(a>=1||0===a);const i=Math.sqrt(-2*Math.log(a)/a);e=this.mean+this.stdDev*r*i,t=this.mean+this.stdDev*s*i,this.truncated&&!this.isValidTruncated(e)||(n=!0)}return this.truncated&&!this.isValidTruncated(t)||(this.nextVal=this.convertValue(t)),this.convertValue(e)}convertValue(e){return null==this.dtype||"float32"===this.dtype?e:Math.round(e)}isValidTruncated(e){return e<=this.upper&&e>=this.lower}}class bd{constructor(e,t,n,r){this.alpha=e,this.beta=1/t,this.dtype=n;const s=r||Math.random();this.randu=gd.alea(s.toString()),this.randn=new yd(0,1,n,!1,this.randu()),this.d=e<1?e+2/3:e-1/3,this.c=1/Math.sqrt(9*this.d)}nextValue(){let e,t,n,r,s,a;for(;;){do{r=this.randn.nextValue(),a=1+this.c*r}while(a<=0);if(a*=a*a,e=r*r,t=1-.331*e*e,n=.5*e+this.d*(1-a+Math.log(a)),s=this.randu(),s<t||Math.log(s)<n)break}return a=1/this.beta*this.d*a,this.alpha<1&&(a*=Math.pow(this.randu(),1/this.alpha)),this.convertValue(a)}convertValue(e){return"float32"===this.dtype?e:Math.round(e)}}class xd{constructor(e=0,t=1,n,r){if(this.canReturnFloat=()=>null==this.dtype||"float32"===this.dtype,this.min=e,this.range=t-e,this.dtype=n,null==r&&(r=Math.random()),"number"==typeof r&&(r=r.toString()),!this.canReturnFloat()&&this.range<=1)throw new Error(`The difference between ${e} - ${t} <= 1 and dtype is not float`);this.random=gd.alea(r)}convertValue(e){return this.canReturnFloat()?e:Math.round(e)}nextValue(){return this.convertValue(this.min+this.range*this.random())}}const wd=Ka({randomGamma_:function(e,t,n=1,r="float32",s){if(Ue(e),null==n&&(n=1),null==r&&(r="float32"),"float32"!==r&&"int32"!==r)throw new Error(`Unsupported data type ${r}`);const a=new bd(t,n,r,s),i=ko(e,r);for(let e=0;e<i.values.length;e++)i.values[e]=a.nextValue();return i.toTensor()}}),vd=Ka({randomNormal_:function(e,t=0,n=1,r,s){if(Ue(e),null!=r&&"bool"===r)throw new Error(`Unsupported data type ${r}`);const a=new yd(t,n,r,!1,s),i=ko(e,r);for(let e=0;e<i.values.length;e++)i.values[e]=a.nextValue();return i.toTensor()}}),kd=Ka({randomStandardNormal_:function(e,t,n){if(null!=t&&"bool"===t)throw new Error(`Unsupported data type ${t}`);return vd(e,0,1,t,n)}}),Id=Ka({randomUniform_:function(e,t=0,n=1,r="float32",s){Ue(e);const a=ko(e,r),i=new xd(t,n,null,s);for(let e=0;e<a.values.length;e++)a.values[e]=i.nextValue();return a.toTensor()}}),Sd=Ka({randomUniformInt_:function(e,t,n,r){return Id(e,t,n,"int32",r)}});function Nd(e,t,n=1,r="float32"){if(0===n)throw new Error("Cannot have a step of zero");const s={start:e,stop:t,step:n,dtype:r};return Da.runKernel(fr,{},s)}const Td=Ka({reciprocal_:function(e){const t={x:Ha(e,"x","reciprocal")};return Da.runKernel(gr,t)}}),Ed=Ka({relu_:function(e){const t={x:Ha(e,"x","relu")};return Da.runKernel(yr,t)}}),Cd=Ka({relu6_:function(e){const t={x:Ha(e,"x","relu6")};return Da.runKernel(Ir,t)}}),$d=Ka({reverse_:function(e,t){const n={x:Ha(e,"x","reverse")},r={dims:t};return Da.runKernel(Sr,n,r)}}),Ad=Ka({reverse1d_:function(e){const t=Ha(e,"x","reverse");return ie(1===t.rank,()=>`Error in reverse1D: x must be rank 1 but got rank ${t.rank}.`),$d(t,0)}}),Rd=Ka({reverse2d_:function(e,t){const n=Ha(e,"x","reverse");return ie(2===n.rank,()=>`Error in reverse2D: x must be rank 2 but got rank ${n.rank}.`),$d(n,t)}}),_d=Ka({reverse3d_:function(e,t){const n=Ha(e,"x","reverse");return ie(3===n.rank,()=>`Error in reverse3D: x must be rank 3 but got rank ${n.rank}.`),$d(n,t)}}),Md=Ka({reverse4d_:function(e,t){const n=Ha(e,"x","reverse");return ie(4===n.rank,()=>`Error in reverse4D: x must be rank 4 but got rank ${n.rank}.`),$d(n,t)}}),Fd=Ka({round_:function(e){const t={x:Ha(e,"x","round")};return Da.runKernel(Nr,t)}}),Dd=Ka({rsqrt_:function(e){const t={x:Ha(e,"x","rsqrt","float32")};return Da.runKernel(Tr,t)}}),Od=Ka({selu_:function(e){const t={x:Ha(e,"x","selu")};return Da.runKernel(Rr,t)}}),Ld=Ka({separableConv2d_:function(e,t,n,r,s,a=[1,1],i="NHWC"){const o=Ha(e,"x","separableConv2d"),u=Ha(t,"depthwiseFilter","separableConv2d"),l=Ha(n,"pointwiseFilter","separableConv2d");let c=o,h=!1;if(3===o.rank&&(h=!0,c=sc(o,[1,o.shape[0],o.shape[1],o.shape[2]])),"NCHW"===i)throw new Error("separableConv2d currently does not support dataFormat NCHW; only NHWC is supported");ie(4===c.rank,()=>`Error in separableConv2d: input must be rank 4, but got rank ${c.rank}.`),ie(4===u.rank,()=>`Error in separableConv2d: depthwise filter must be rank 4, but got rank ${u.rank}.`),ie(4===l.rank,()=>`Error in separableConv2d: pointwise filter must be rank 4, but got rank ${u.rank}.`),ie(1===l.shape[0],()=>`Error in separableConv2d: the first dimension of pointwise filter  must be 1, but got ${l.shape[0]}.`),ie(1===l.shape[1],()=>`Error in separableConv2d: the second dimension of pointwise filter must be 1, but got ${l.shape[1]}.`);const d=u.shape[2],p=u.shape[3];ie(l.shape[2]===d*p,()=>`Error in separableConv2d: the third dimension of pointwise filter must be ${d*p}, but got ${l.shape[2]}.`);const f=Bc(c,u,r,s,i,a),m=Ec(f,l,1,"valid",i);return h?sc(m,[m.shape[1],m.shape[2],m.shape[3]]):m}}),zd=async function(e,t){const n=Ha(e,"x","setdiff1d"),r=Ha(t,"y","setdiff1d");ie(n.dtype===r.dtype,()=>`x and y should have the same dtype, but got x (${n.dtype}) and y (${r.dtype}).`),ie(1===n.rank,()=>`x should be 1D tensor, but got x (${n.shape}).`),ie(1===r.rank,()=>`y should be 1D tensor, but got y (${r.shape}).`);const s=await n.data(),a=await r.data(),i=new Set(a);let o=0;for(let e=0;e<s.length;e++)i.has(s[e])||o++;const u=new la([o],n.dtype),l=new la([o],"int32");for(let e=0,t=0;e<s.length;e++)i.has(s[e])||(u.values[t]=s[e],l.values[t]=e,t++);return[u.toTensor(),l.toTensor()]},Pd=Ka({sign_:function(e){const t={x:Ha(e,"x","sign")};return Da.runKernel(Dr,t)}}),Bd=Ka({sin_:function(e){const t={x:Ha(e,"x","sin","float32")};return Da.runKernel(Mr,t)}}),Vd=Ka({sinh_:function(e){const t={x:Ha(e,"x","sinh")};return Da.runKernel(Fr,t)}}),Ud=Ka({slice1d_:function(e,t,n){const r=Ha(e,"x","slice1d");return ie(1===r.rank,()=>`slice1d expects a rank-1 tensor, but got a rank-${r.rank} tensor`),lc(r,[t],[n])}}),Wd=Ka({slice2d_:function(e,t,n){const r=Ha(e,"x","slice2d");return ie(2===r.rank,()=>`slice2d expects a rank-2 tensor, but got a rank-${r.rank} tensor`),lc(r,t,n)}}),Gd=Ka({slice3d_:function(e,t,n){const r=Ha(e,"x","slice3d");return ie(3===r.rank,()=>`slice3d expects a rank-3 tensor, but got a rank-${r.rank} tensor`),lc(r,t,n)}}),Hd=Ka({slice4d_:function(e,t,n){const r=Ha(e,"x","slice4d");return ie(4===r.rank,()=>`slice4d expects a rank-4 tensor, but got a rank-${r.rank} tensor`),lc(r,t,n)}}),jd=Ka({softmax_:function(e,t=-1){const n=Ha(e,"logits","softmax","float32");if(-1===t&&(t=n.rank-1),t!==n.rank-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and dim was ${t}`);const r={logits:n},s={dim:t};return Da.runKernel(Ur,r,s)}}),qd=Ka({fft_:function(e){ie("complex64"===e.dtype,()=>`The dtype for tf.spectral.fft() must be complex64 but got ${e.dtype}.`);const t={input:e};return Da.runKernel(on,t)}}),Kd=Ka({ifft_:function(e){ie("complex64"===e.dtype,()=>`The dtype for tf.spectral.ifft() must be complex64 but got ${e.dtype}.`);const t={input:e};return Da.runKernel(bn,t)}}),Xd=Ka({irfft_:function(e){const t=e.shape[e.shape.length-1],n=e.size/t;let r;if(t<=2){const s=sc(e,[n,t]);r=Kd(s)}else{const s=[n,2*(t-1)],a=sc(Fu(e),[n,t]),i=sc(_u(e),[n,t]),o=$d(lc(a,[0,1],[n,t-2]),1),u=$o($d(lc(i,[0,1],[n,t-2]),1),Bo(-1)),l=oc([a,o],1),c=oc([i,u],1),h=sc(Xa(l,c),[s[0],s[1]]);r=Kd(h)}if(r=Fu(r),3===e.rank&&0!==e.shape[0]){const t=r,n=e.shape[0];r=sc(r,[n,r.shape[0]/n,r.shape[1]]),t.dispose()}return r}}),Yd=Ka({split_:function(e,t,n=0){const r={x:Ha(e,"x","split")},s={numOrSizeSplits:t,axis:n};return Da.runKernel(Vr,r,s)}}),Jd=Ka({rfft_:function(e,t){ie("float32"===e.dtype,()=>`The dtype for rfft() must be real value but got ${e.dtype}`);let n=e.shape[e.shape.length-1];const r=e.size/n;let s;if(null!=t&&t<n){const r=e.shape.map(e=>0),a=e.shape.map(e=>e);a[e.shape.length-1]=t,s=lc(e,r,a),n=t}else if(null!=t&&t>n){const r=e.shape.map(e=>e);r[e.shape.length-1]=t-n,s=oc([e,Hh(r)],e.shape.length-1),n=t}else s=e;const a=_o(s),i=sc(Xa(s,a),[r,n]),o=qd(i),u=Math.floor(n/2)+1,l=Fu(o),c=_u(o),h=Yd(l,[u,n-u],l.shape.length-1),d=Yd(c,[u,n-u],c.shape.length-1),p=s.shape.slice();return p[s.shape.length-1]=u,sc(Xa(h[0],d[0]),p)}}),Zd=Ka({squaredDifference_:function(e,t){let n=Ha(e,"a","squaredDifference"),r=Ha(t,"b","squaredDifference");[n,r]=Ta(n,r),ru(n.shape,r.shape);const s={a:n,b:r};return Da.runKernel(Kr,s,{})}}),Qd=Ka({squeeze_:function(e,t){const n=Ha(e,"x","squeeze","string_or_numeric");return sc(n,ve(n.shape,t).newShape)}}),ep=Ka({stack_:function(e,t=0){const n=ja(e,"tensors","stack","string_or_numeric");ie(n.length>=1,()=>"Pass at least one tensor to tf.stack"),n.length>0&&ie(t<=n[0].rank,()=>"Axis must be <= rank of the tensor");const r=n,s={axis:t};return Da.runKernel(ar,r,s)}}),tp=Ka({step_:function(e,t=0){const n={x:Ha(e,"x","step")},r={alpha:t};return Da.runKernel(ps,n,r)}}),np=Ka({stridedSlice_:function(e,t,n,r,s=0,a=0,i=0,o=0,u=0){const l={x:Ha(e,"x","stridedSlice","string_or_numeric")},c={begin:t,end:n,strides:r,beginMask:s,endMask:a,ellipsisMask:i,newAxisMask:o,shrinkAxisMask:u};return Da.runKernel(Jr,l,c)}}),rp=Ka({tan_:function(e){const t={x:Ha(e,"x","tan","float32")};return Da.runKernel(ns,t)}});function sp(e,t){ue(e);const n=Ua(e,t);if(1!==n.length)throw new Error("tensor1d() requires values to be a flat/TypedArray");return Ya(e,null,n,t)}function ap(e,t,n){if(ue(e),null!=t&&2!==t.length)throw new Error("tensor2d() requires shape to have two numbers");const r=Ua(e,n);if(2!==r.length&&1!==r.length)throw new Error("tensor2d() requires values to be number[][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor2d() requires shape to be provided when `values` are a flat/TypedArray");return Ya(e,t,r,n)}function ip(e,t,n){if(ue(e),null!=t&&4!==t.length)throw new Error("tensor4d() requires shape to have four numbers");const r=Ua(e,n);if(4!==r.length&&1!==r.length)throw new Error("tensor4d() requires values to be number[][][][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor4d() requires shape to be provided when `values` are a flat array");return Ya(e,t,r,n)}function op(e,t,n){if(ue(e),null!=t&&5!==t.length)throw new Error("tensor5d() requires shape to have five numbers");const r=Ua(e,n);if(5!==r.length&&1!==r.length)throw new Error("tensor5d() requires values to be number[][][][][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor5d() requires shape to be provided when `values` are a flat array");return Ya(e,t,r,n)}function up(e,t,n){if(ue(e),null!=t&&6!==t.length)throw new Error("tensor6d() requires shape to have six numbers");const r=Ua(e,n);if(6!==r.length&&1!==r.length)throw new Error("tensor6d() requires values to be number[][][][][][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor6d() requires shape to be provided when `values` are a flat array");return Ya(e,t=t||r,r,n)}const lp=Ka({tensorScatterUpdate_:function(e,t,n){const r=Ha(e,"tensor","tensorScatterupdate"),s=Ha(t,"indices","tensorScatterupdate","int32"),a=Ha(n,"updates","tensorScatterupdate");if(Ku(a,s,r.shape),r.dtype!==a.dtype)throw new Error(`tensor and updates must have the same dtype, instead they are ${r.dtype} and ${a.dtype}.`);const i={tensor:r,indices:s,updates:a};return Da.runKernel(Cr,i,{})}}),cp=Ka({topk_:function(e,t=1,n=!0){const r=Ha(e,"x","topk");if(0===r.rank)throw new Error("topk() expects the input to be of rank 1 or higher");const s=r.shape[r.shape.length-1];if(t<0)throw new Error(`\'k\' passed to topk() must be >= 0 but got ${t}`);if(t>s)throw new Error(`\'k\' passed to topk() must be <= the last dimension (${s}) but got ${t}`);const a={x:r},i={k:t,sorted:n},[o,u]=Da.runKernel(as,a,i);return{values:o,indices:u}}}),hp=Ka({truncatedNormal_:function(e,t=0,n=1,r,s){if(Ue(e),null!=r&&"bool"===r)throw new Error("Unsupported data type $ { dtype }");const a=new yd(t,n,r,!0,s),i=ko(e,r);for(let e=0;e<i.values.length;e++)i.values[e]=a.nextValue();return i.toTensor()}}),dp=Ka({unique_:function(e,t=0){const n=Ha(e,"x","unique","string_or_numeric");ie(n.rank>0,()=>"The input tensor must be at least 1D");const r={x:n},s={axis:t},[a,i]=Da.runKernel(us,r,s);return{values:a,indices:i}}}),pp=Ka({unsortedSegmentSum_:function(e,t,n){const r=Ha(e,"x","unsortedSegmentSum"),s=Ha(t,"segmentIds","unsortedSegmentSum","int32");ie(pe(n),()=>"numSegments must be of dtype int");const a={x:r,segmentIds:s},i={numSegments:n};return Da.runKernel(cs,a,i)}}),fp=Ka({unstack_:function(e,t=0){const n=Ha(e,"x","unstack","string_or_numeric");ie(t>=-n.shape.length&&t<n.shape.length,()=>`Axis = ${t} is not in [-${n.shape.length}, ${n.shape.length})`);const r={value:n},s={axis:t};return Da.runKernel(ls,r,s)}});function mp(e,t){return Ph(e,t,"right")}function gp(e,t=!0,n,r){return Da.makeVariable(e,t,n,r)}function yp(e,t){const n=[];for(let e=0;e<t.length;e++)t[e]&&n.push(e);const r=ko(e,"int32"),s=ko([n.length,e.length],"int32");for(let t=0;t<n.length;t++){const a=r.indexToLoc(n[t]),i=t*e.length;s.values.set(a,i)}return s.toTensor()}const bp=async function(e){const t=Ha(e,"condition","whereAsync","bool"),n=await t.data(),r=yp(t.shape,n);return e!==t&&t.dispose(),r},xp=async function(e,t,n){const r=Ha(e,"tensor","boolMask"),s=Ha(t,"mask","boolMask","bool"),a=null==n?0:n,i=s.rank,o=r.shape;ie(i>0,()=>"mask cannot be scalar"),oe(o.slice(a,a+i),s.shape,"mask\'s shape must match the first K dimensions of tensor\'s shape,");let u=1;for(let e=a;e<a+i;e++)u*=o[e];const l=o.slice(0,a).concat([u],o.slice(a+i)),c=sc(r,l),h=sc(s,[-1]),d=await bp(h),p=Qd(d,[1]),f=yh(c,p,a);return e!==r&&r.dispose(),t!==s&&s.dispose(),p.dispose(),c.dispose(),h.dispose(),d.dispose(),f},wp=Ka({movingAverage_:function(e,t,n,r,s=!0){const a=Ha(e,"v","movingAverage"),i=Ha(t,"x","movingAverage"),o=Ha(n,"decay","movingAverage");Ea(a,i),ie(de(a.shape,i.shape),()=>"Shape mismatch in v and x");const u=Bo(1),l=Zo(u,o);let c=$o(Zo(i,a),l);if(s){ie(null!=r,()=>"When using zeroDebias: true, step is required.");const e=Ha(r,"step","movingAverage");c=Co(c,Zo(u,Jo(o,e)))}return To(a,c)}}),vp=Ka({scatterND_:function(e,t,n){Ue(n);const r=Ha(e,"indices","scatterND","int32"),s=Ha(t,"updates","scatterND");Ku(s,r,n);const a={indices:r,updates:s},i={shape:n};return Da.runKernel(Er,a,i)}}),kp=Ka({sparseToDense_:function(e,t,n,r=0){Ue(n);const s=Ha(e,"sparseIndices","sparseToDense","int32"),a=Ha(t,"sparseValues","sparseToDense","string_or_numeric"),i=Ha(r,"defaultValue","sparseToDense",a.dtype);!function(e,t,n,r){if("int32"!==e.dtype)throw new Error(`tf.sparseToDense() expects the indices to be int32 type, but the dtype was ${e.dtype}.`);if(e.rank>2)throw new Error(`sparseIndices should be a scalar, vector, or matrix, but got shape ${e.shape}.`);const s=e.rank>0?e.shape[0]:1,a=e.rank>1?e.shape[1]:1;if(n.length!==a)throw new Error(`outputShape has incorrect number of elements:, ${n.length}, should be: ${a}.`);const i=t.size;if(0!==t.rank&&(1!==t.rank||i!==s))throw new Error(`sparseValues has incorrect shape ${t.shape}, should be [] or [${s}]`);if(t.dtype!==r.dtype)throw new Error("sparseValues.dtype must match defaultValues.dtype")}(s,a,n,i);const o={sparseIndices:s,sparseValues:a,defaultValue:i},u={outputShape:n};return Da.runKernel(qr,o,u)}}),Ip=Ka({gatherND_:function(e,t){const n=Ha(t,"indices","gatherND","int32"),r={params:Ha(e,"x","gatherND","string_or_numeric"),indices:n};return Da.runKernel(fn,r)}}),Sp=Ka({dropout_:function(e,t,n,r){const s=Ha(e,"x","dropout");if(ie("float32"===s.dtype,()=>`x has to be a floating point tensor since it\'s going to be scaled, but got a ${s.dtype} tensor instead.`),ie(t>=0&&t<1,()=>`rate must be a float in the range [0, 1), but got ${t}.`),0===t)return e instanceof pa?s.clone():s;const a=function(e,t){if(null==t)return e.shape.slice();if(de(e.shape,t))return t;if(e.shape.length===t.length){const n=[];for(let r=0;r<e.shape.length;r++)null==t[r]&&null!=e.shape[r]?n.push(e.shape[r]):n.push(t[r]);return n}return t}(s,n),i=1-t,o=Co(gh(To(Id(a,0,1,"float32",r),i)),i);return $o(s,o)}});function Np(e){return Math.floor(Math.pow(2,Math.ceil(Math.log(e)/Math.log(2))))}function Tp(e,t,n){const r=1-e%2,s=new Float32Array(e);for(let a=0;a<e;++a){const i=2*Math.PI*a/(e+r-1);s[a]=t-n*Math.cos(i)}return sp(s,"float32")}const Ep=async function(e,t,n=1){const r=Ha(e,"predictions","inTopK"),s=Ha(t,"targets","inTopK");ie(r.rank>1,()=>`inTopK() expects the predictions to be of rank 2 or higher, but got ${r.rank}`),ie(r.rank-1===s.rank,()=>`predictions rank should be 1 larger than targets rank, but got predictions rank ${r.rank} and targets rank ${s.rank}`),oe(r.shape.slice(0,r.shape.length-1),s.shape,"predictions\'s shape should be align with the targets\' shape, except the last dimension.");const a=r.shape[r.shape.length-1];ie(n>0&&n<=a,()=>`\'k\' passed to inTopK() must be > 0 && <= the predictions last dimension (${a}), but got ${n}`);const i=await r.data(),o=await s.data(),[u,l]=[i.length/a,a],c=ke("bool",u);for(let e=0;e<u;e++){const t=e*l,r=i.subarray(t,t+l),s=[];for(let e=0;e<r.length;e++)s.push({value:r[e],index:e});s.sort((e,t)=>t.value-e.value),c[e]=0;for(let t=0;t<n;t++)if(s[t].index===o[e]){c[e]=1;break}}return e!==r&&r.dispose(),t!==s&&s.dispose(),Ja(c,s.shape,"bool")},Cp=Ka({conv2DBackpropFilter_:function(e,t,n,r,s,a="NHWC",i){let o=e;3===e.rank&&(o=sc(e,[1,e.shape[0],e.shape[1],e.shape[2]]));let u=t;3===u.rank&&(u=sc(t,[1,t.shape[0],t.shape[1],t.shape[2]])),ie(4===o.rank,()=>`Error in conv2dDerFilter: input must be rank 4, but got shape ${o.shape}.`),ie(4===u.rank,()=>`Error in conv2dDerFilter: dy must be rank 4, but got shape ${u.shape}.`),ie(4===n.length,()=>`Error in conv2dDerFilter: filterShape must be length 4, but got ${n}.`);const l="NHWC"===a?o.shape[3]:o.shape[1],c="NHWC"===a?u.shape[3]:u.shape[1];ie(l===n[2],()=>`Error in conv2dDerFilter: depth of input ${l}) must match input depth in filter (${n[2]}.`),ie(c===n[3],()=>`Error in conv2dDerFilter: depth of dy (${c}) must match output depth for filter (${n[3]}).`),rc("conv2dDerFilter",s,i);const h={x:o,dy:u},d={strides:r,pad:s,dataFormat:a,dimRoundingMode:i,filterShape:n};return Da.runKernel(Rt,h,d)}});function $p(e,t,n){if(null==n||"linear"===n)return e;if("relu"===n)return $o(e,tp(t));throw new Error(`Cannot compute gradient for fused activation ${n}.`)}function Ap(e,t){let n=t;const r=nu(e.shape,t.shape);return r.length>0&&(n=oh(n,r)),sc(n,e.shape)}function Rp(e,t,n,r){if("linear"===t)return e;if("relu"===t)return Ed(e);if("elu"===t)return Kc(e);if("relu6"===t)return Cd(e);if("prelu"===t)return cd(e,n);if("leakyrelu"===t)return Ih(e,r);if("sigmoid"===t)return uc(e);throw new Error(`Unknown fused activation ${t}.`)}const _p=(e,t)=>!(e>0)||"linear"===t,Mp=Ka({fusedConv2d_:function({x:e,filter:t,strides:n,pad:r,dataFormat:s="NHWC",dilations:a=[1,1],dimRoundingMode:i,bias:o,activation:u="linear",preluActivationWeights:l,leakyreluAlpha:c}){if(u=u||"linear",!1===_p(Da.state.gradientDepth,u)){ie("NHWC"===s,()=>`Error in fused conv2d: got dataFormat of ${s} but only NHWC is currently supported for the case of gradient depth is 0 and the activation is not linear.`);let h=Ec(e,t,n,r,s,a,i);return null!=o&&(h=To(h,o)),Rp(h,u,l,c)}const h=Ha(e,"x","conv2d","float32"),d=Ha(t,"filter","conv2d","float32");let p=h,f=!1;3===h.rank&&(f=!0,p=sc(h,[1,h.shape[0],h.shape[1],h.shape[2]])),ie(4===p.rank,()=>`Error in fused conv2d: input must be rank 4, but got rank ${p.rank}.`),ie(4===d.rank,()=>`Error in fused conv2d: filter must be rank 4, but got rank ${d.rank}.`),rc("fused conv2d",r,i);const m="NHWC"===s?p.shape[3]:p.shape[1];ie(d.shape[2]===m,()=>`Error in conv2d: depth of input (${m}) must match input depth for filter ${d.shape[2]}.`),ie(ec(n,a),()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${n} and dilations \'${a}\'`);const g=jl(p.shape,d.shape,n,a,r,i);let y,b;if(null!=o&&(y=Ha(o,"bias","fused conv2d"),[y]=Ta(y,h),"NHWC"===s?ru(g.outShape,y.shape):(ie(y.shape.length<=1,()=>`Error in fused conv2d: only supports scalar or 1-D Tensor bias for NCHW format but got the bias of rank-${y.shape.length}.`),ie(0===y.shape.length||y.shape[0]===g.outChannels||1===y.shape[0],()=>`Error in fused conv2d: bias shape (${y.shape}) is not compatible with the number of output channels (${g.outChannels})`))),null!=l){const e=l.shape;if(ie(e.length<=1||3===e.length,()=>`Error in fused conv2d: only supports scalar, 1-D Tensor or 3-D Tensor PReLU activation weights but got a tensor of rank-${e.length}.`),1===e.length)ie(1===e[0]||e[0]===g.outChannels,()=>`Error in fused conv2d: PReLU activation weights (${e}) is not compatible with the number of output channels (${g.outChannels}).`);else if(3===e.length)try{ru(e,g.outShape)}catch(t){const n=`Error in fused conv2d: PReLU activation weights (${e}) is not compatible with the output shape of the conv2d (${g.outShape}).`;throw Error(n)}b=Ha(l,"prelu weights","fused conv2d")}const x=(e,t)=>{ie("NHWC"===s,()=>`Error in gradient of fused conv2D: got dataFormat of ${s} but only NHWC is currently supported.`);const[i,o,l,c]=t,h=$p(e,l,u);ie(Ql(a),()=>`Error in gradient of fused conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations \'${a}\'`);const d=[$c(o.shape,h,i,n,r),Cp(o,h,i.shape,n,r)];if(null!=c){const e=Ap(c,h);d.push(e)}return d},w={x:p,filter:d,bias:y,preluActivationWeights:b},v={strides:n,pad:r,dataFormat:s,dilations:a,dimRoundingMode:i,activation:u,leakyreluAlpha:c};if(null==o){const e=zo((e,t,n)=>{let r=Da.runKernel(ys,w,v);return n([t,e,r]),f&&(r=sc(r,[r.shape[1],r.shape[2],r.shape[3]])),{value:r,gradFunc:x}});return e(p,d)}{const e=zo((e,t,n,r)=>{let s=Da.runKernel(ys,w,v);return r([t,e,s,n]),f&&(s=sc(s,[s.shape[1],s.shape[2],s.shape[3]])),{value:s,gradFunc:x}});return e(p,d,y)}}}),Fp=Ka({depthwiseConv2dNativeBackpropFilter_:function(e,t,n,r,s,a=[1,1],i){let o=e;3===e.rank&&(o=sc(e,[1,e.shape[0],e.shape[1],e.shape[2]]));let u=t;3===u.rank&&(u=sc(t,[1,t.shape[0],t.shape[1],t.shape[2]]));const l={x:o,dy:u},c={strides:r,pad:s,dimRoundingMode:i,dilations:a,filterShape:n};return Da.runKernel(Gt,l,c)}}),Dp=Ka({depthwiseConv2dNativeBackpropInput_:function(e,t,n,r,s,a=[1,1],i){let o=t,u=!1;3===t.rank&&(u=!0,o=sc(t,[1,t.shape[0],t.shape[1],t.shape[2]]));const l={dy:o,filter:n},c={strides:r,pad:s,dimRoundingMode:i,dilations:a,inputShape:e},h=Da.runKernel(Ht,l,c);return u?sc(h,[h.shape[1],h.shape[2],h.shape[3]]):h}}),Op=Ka({fusedDepthwiseConv2d_:function({x:e,filter:t,strides:n,pad:r,dataFormat:s="NHWC",dilations:a=[1,1],dimRoundingMode:i,bias:o,activation:u="linear",preluActivationWeights:l,leakyreluAlpha:c}){if(!1===_p(Da.state.gradientDepth,u)){let h=Bc(e,t,n,r,s,a,i);return null!=o&&(h=To(h,o)),Rp(h,u,l,c)}const h=Ha(e,"x","depthwiseConv2d","float32"),d=Ha(t,"filter","depthwiseConv2d","float32");let p=h,f=!1;3===h.rank&&(f=!0,p=sc(h,[1,h.shape[0],h.shape[1],h.shape[2]])),ie(4===p.rank,()=>`Error in fused depthwiseConv2d: input must be rank 4, but got rank ${p.rank}.`),ie(4===d.rank,()=>`Error in fused depthwiseConv2d: filter must be rank 4, but got rank ${d.rank}.`),ie(p.shape[3]===d.shape[2],()=>`Error in fused depthwiseConv2d: number of input channels (${p.shape[3]}) must match the inChannels dimension in filter ${d.shape[2]}.`),null==a&&(a=[1,1]),ie(ec(n,a),()=>`Error in fused depthwiseConv2d: Either strides or dilations must be 1. Got strides ${n} and dilations \'${a}\'`),rc("fused depthwiseConv2d",r,i);const m=jl(p.shape,d.shape,n,a,r,i,!0);let g,y;null!=o&&(g=Ha(o,"bias","fused conv2d"),[g]=Ta(g,h),ru(m.outShape,g.shape)),null!=l&&(y=Ha(l,"prelu weights","fused depthwiseConv2d"));const b=(e,t)=>{ie(Ql(a),()=>`Error in gradient of fused depthwiseConv2d: dilation rates greater than 1 are not yet supported. Got dilations \'${a}\'`);const[s,o,l,c]=t,h=$p(e,l,u),d=Dp(o.shape,h,s,n,r,a,i),p=Fp(o,h,s.shape,n,r,a,i);return null!=c?[d,p,Ap(g,h)]:[d,p]},x={x:p,filter:d,bias:g,preluActivationWeights:y},w={strides:n,pad:r,dataFormat:s,dilations:a,dimRoundingMode:i,activation:u,leakyreluAlpha:c};if(null==o){const e=zo((e,t,n)=>{let r=Da.runKernel(bs,x,w);return n([t,e,r]),f&&(r=sc(r,[r.shape[1],r.shape[2],r.shape[3]])),{value:r,gradFunc:b}});return e(p,d)}{const e=zo((e,t,n,r)=>{let s=Da.runKernel(bs,x,w);return r([t,e,s,n]),f&&(s=sc(s,[s.shape[1],s.shape[2],s.shape[3]])),{value:s,gradFunc:b}});return e(p,d,g)}}}),Lp=Ka({fusedMatMul_:function({a:e,b:t,transposeA:n=!1,transposeB:r=!1,bias:s,activation:a="linear",preluActivationWeights:i,leakyreluAlpha:o=.2}){if(!1===_p(Da.state.gradientDepth,a)){let u=Au(e,t,n,r);return null!=s&&(u=To(u,s)),Rp(u,a,i,o)}let u=Ha(e,"a","fused matMul"),l=Ha(t,"b","fused matMul");[u,l]=Ta(u,l);const c=n?u.shape[u.rank-2]:u.shape[u.rank-1],h=r?l.shape[l.rank-1]:l.shape[l.rank-2],d=n?u.shape[u.rank-1]:u.shape[u.rank-2],p=r?l.shape[l.rank-2]:l.shape[l.rank-1],f=u.shape.slice(0,-2),m=l.shape.slice(0,-2),g=le(f),y=le(m);ie(c===h,()=>`Error in fused matMul: inner shapes (${c}) and (${h}) of Tensors with shapes ${u.shape} and ${l.shape} and transposeA=${n} and transposeB=${r} must match.`);const b=ru(u.shape.slice(0,-2),l.shape.slice(0,-2)).concat([d,p]),x=sc(u,n?[g,c,d]:[g,d,c]),w=sc(l,r?[y,p,h]:[y,h,p]);let v,k;null!=s&&(v=Ha(s,"bias","fused matMul"),[v]=Ta(v,u),ru(b,v.shape)),null!=i&&(k=Ha(i,"prelu weights","fused matMul"));const I=(e,t)=>{const[i,o,u,l]=t,c=$p(sc(e,u.shape),u,a);let h,d;return n||r?!n&&r?(h=Au(c,o,!1,!1),d=Au(c,i,!0,!1)):n&&!r?(h=Au(o,c,!1,!0),d=Au(i,c,!1,!1)):(h=Au(o,c,!0,!0),d=Au(c,i,!0,!0)):(h=Au(c,o,!1,!0),d=Au(i,c,!0,!1)),null!=s?[h,d,Ap(l,c)]:[h,d]},S={a:x,b:w,bias:v,preluActivationWeights:k},N={transposeA:n,transposeB:r,activation:a,leakyreluAlpha:o};if(null==s){const e=zo((e,t,n)=>{const r=Da.runKernel(gs,S,N);return n([e,t,r]),{value:sc(r,b),gradFunc:I}});return e(x,w)}{const e=zo((e,t,n,r)=>{const s=Da.runKernel(gs,S,N);return r([e,t,s,n]),{value:sc(s,b),gradFunc:I}});return e(x,w,v)}}}),zp=Ka({hammingWindow_:function(e){return Tp(e,.54,.46)}}),Pp=Ka({hannWindow_:function(e){return Tp(e,.5,.5)}}),Bp=Ka({frame_:function(e,t,n,r=!1,s=0){let a=0;const i=[];for(;a+t<=e.size;)i.push(lc(e,a,t)),a+=n;if(r)for(;a<e.size;){const r=a+t-e.size,o=oc([lc(e,a,t-r),Xo([r],s)]);i.push(o),a+=n}return 0===i.length?ap([],[0,t]):sc(oc(i),[i.length,t])}}),Vp=Ka({stft_:function(e,t,n,r,s=Pp){null==r&&(r=Np(t));const a=Bp(e,t,n),i=$o(a,s(t));return Jd(i,r)}}),Up=Ka({cropAndResize_:function(e,t,n,r,s="bilinear",a=0){const i=Ha(e,"image","cropAndResize"),o=Ha(t,"boxes","cropAndResize","float32"),u=Ha(n,"boxInd","cropAndResize","int32"),l=o.shape[0];ie(4===i.rank,()=>`Error in cropAndResize: image must be rank 4,but got rank ${i.rank}.`),ie(2===o.rank&&4===o.shape[1],()=>`Error in cropAndResize: boxes must be have size [${l},4] but had shape ${o.shape}.`),ie(1===u.rank&&u.shape[0]===l,()=>`Error in cropAndResize: boxInd must be have size [${l}] but had shape ${o.shape}.`),ie(2===r.length,()=>`Error in cropAndResize: cropSize must be of length 2, but got length ${r.length}.`),ie(r[0]>=1&&r[1]>=1,()=>`cropSize must be atleast [1,1], but was ${r}`),ie("bilinear"===s||"nearest"===s,()=>`method must be bilinear or nearest, but was ${s}`);const c={image:i,boxes:o,boxInd:u},h={method:s,extrapolationValue:a,cropSize:r};return Da.runKernel(Bt,c,h)}}),Wp=Ka({flipLeftRight_:function(e){const t=Ha(e,"image","flipLeftRight","float32");ie(4===t.rank,()=>`Error in flipLeftRight: image must be rank 4,but got rank ${t.rank}.`);const n={image:t};return Da.runKernel(ln,n,{})}}),Gp=Ka({grayscaleToRGB_:function(e){const t=Ha(e,"image","grayscaleToRGB"),n=t.rank-1,r=t.shape[n];ie(t.rank>=2,()=>`Error in grayscaleToRGB: images must be at least rank 2, but got rank ${t.rank}.`),ie(1===r,()=>`Error in grayscaleToRGB: last dimension of a grayscale image should be size 1, but got size ${r}.`);const s=new Array(t.rank);return s.fill(1,0,n),s[n]=3,fh(t,s)}}),Hp=Ka({rgbToGrayscale_:function(e){const t=Ha(e,"image","RGBToGrayscale"),n=t.rank-1,r=t.shape[n];ie(t.rank>=2,()=>`Error in RGBToGrayscale: images must be at least rank 2, but got rank ${t.rank}.`),ie(3===r,()=>`Error in RGBToGrayscale: last dimension of an RGB image should be size 3, but got size ${r}.`);const s=t.dtype,a=Io(t,"float32"),i=sp([.2989,.587,.114]);let o;switch(t.rank){case 2:o=qc("ij,j->i",a,i);break;case 3:o=qc("ijk,k->ij",a,i);break;case 4:o=qc("ijkl,l->ijk",a,i);break;case 5:o=qc("ijklm,m->ijkl",a,i);break;case 6:o=qc("ijklmn,n->ijklm",a,i);break;default:throw new Error("Not a valid tensor rank.")}return o=dh(o,-1),Io(o,s)}}),jp=Ka({rotateWithOffset_:function(e,t,n=0,r=.5){const s=Ha(e,"image","rotateWithOffset","float32");ie(4===s.rank,()=>`Error in rotateWithOffset: image must be rank 4,but got rank ${s.rank}.`);const a={image:s},i={radians:t,fillValue:n,center:r};return Da.runKernel(ms,a,i)}});function qp(e,t,n,r,s,a){null==r&&(r=.5),null==s&&(s=Number.NEGATIVE_INFINITY),null==a&&(a=0);const i=e.shape[0];return n=Math.min(n,i),ie(0<=r&&r<=1,()=>`iouThreshold must be in [0, 1], but was \'${r}\'`),ie(2===e.rank,()=>`boxes must be a 2D tensor, but was of rank \'${e.rank}\'`),ie(4===e.shape[1],()=>`boxes must have 4 columns, but 2nd dimension was ${e.shape[1]}`),ie(1===t.rank,()=>"scores must be a 1D tensor"),ie(t.shape[0]===i,()=>`scores has incompatible shape with boxes. Expected ${i}, but was ${t.shape[0]}`),ie(0<=a&&a<=1,()=>`softNmsSigma must be in [0, 1], but was \'${a}\'`),{maxOutputSize:n,iouThreshold:r,scoreThreshold:s,softNmsSigma:a}}const Kp=Ka({nonMaxSuppression_:function(e,t,n,r=.5,s=Number.NEGATIVE_INFINITY){const a=Ha(e,"boxes","nonMaxSuppression","float32"),i=Ha(t,"scores","nonMaxSuppression","float32"),o=qp(a,i,n,r,s),u={maxOutputSize:n=o.maxOutputSize,iouThreshold:r=o.iouThreshold,scoreThreshold:s=o.scoreThreshold};return Da.runKernel(er,{boxes:a,scores:i},u)}});function Xp(e,t,n){const r=function(e,t,n){return function(e,t,n){let r=0,s=e.length,a=0,i=!1;for(;r<s;){a=r+(s-r>>>1);const o=n(t,e[a]);o>0?r=a+1:(s=a,i=!o)}return i?r:-r-1}(e,t,n||Yp)}(e,t,n),s=r<0?-(r+1):r;e.splice(s,0,t)}function Yp(e,t){return e>t?1:e<t?-1:0}function Jp(e,t,n,r,s){return ef(e,t,n,r,s,0)}function Zp(e,t,n,r,s,a){return ef(e,t,n,r,s,0,!1,a,!0)}function Qp(e,t,n,r,s,a){return ef(e,t,n,r,s,a,!0)}function ef(e,t,n,r,s,a,i=!1,o=!1,u=!1){const l=[];for(let e=0;e<t.length;e++)t[e]>s&&l.push({score:t[e],boxIndex:e,suppressBeginIndex:0});l.sort(rf);const c=a>0?-.5/a:0,h=[],d=[];for(;h.length<n&&l.length>0;){const t=l.pop(),{score:n,boxIndex:a,suppressBeginIndex:i}=t;if(n<s)break;let o=!1;for(let n=h.length-1;n>=i;--n){const i=tf(e,a,h[n]);if(i>=r){o=!0;break}if(t.score=t.score*nf(r,c,i),t.score<=s)break}t.suppressBeginIndex=h.length,o||(t.score===n?(h.push(a),d.push(t.score)):t.score>s&&Xp(l,t,rf))}const p=h.length,f=n-p;o&&f>0&&(h.push(...new Array(f).fill(0)),d.push(...new Array(f).fill(0)));const m={selectedIndices:h};return i&&(m.selectedScores=d),u&&(m.validOutputs=p),m}function tf(e,t,n){const r=e.subarray(4*t,4*t+4),s=e.subarray(4*n,4*n+4),a=Math.min(r[0],r[2]),i=Math.min(r[1],r[3]),o=Math.max(r[0],r[2]),u=Math.max(r[1],r[3]),l=Math.min(s[0],s[2]),c=Math.min(s[1],s[3]),h=Math.max(s[0],s[2]),d=Math.max(s[1],s[3]),p=(o-a)*(u-i),f=(h-l)*(d-c);if(p<=0||f<=0)return 0;const m=Math.max(a,l),g=Math.max(i,c),y=Math.min(o,h),b=Math.min(u,d),x=Math.max(y-m,0)*Math.max(b-g,0);return x/(p+f-x)}function nf(e,t,n){const r=Math.exp(t*n*n);return n<=e?r:0}function rf(e,t){return e.score-t.score||e.score===t.score&&t.boxIndex-e.boxIndex}const sf=Ka({nonMaxSuppressionWithScore_:function(e,t,n,r=.5,s=Number.NEGATIVE_INFINITY,a=0){const i=Ha(e,"boxes","nonMaxSuppression"),o=Ha(t,"scores","nonMaxSuppression"),u=qp(i,o,n,r,s,a),l={boxes:i,scores:o},c={maxOutputSize:n=u.maxOutputSize,iouThreshold:r=u.iouThreshold,scoreThreshold:s=u.scoreThreshold,softNmsSigma:a=u.softNmsSigma},h=Da.runKernel(nr,l,c);return{selectedIndices:h[0],selectedScores:h[1]}}}),af=Ka({nonMaxSuppressionPadded_:function(e,t,n,r=.5,s=Number.NEGATIVE_INFINITY,a=!1){const i=Ha(e,"boxes","nonMaxSuppression"),o=Ha(t,"scores","nonMaxSuppression"),u=qp(i,o,n,r,s,null),l={boxes:i,scores:o},c={maxOutputSize:u.maxOutputSize,iouThreshold:u.iouThreshold,scoreThreshold:u.scoreThreshold,padToMaxOutputSize:a},h=Da.runKernel(tr,l,c);return{selectedIndices:h[0],validOutputs:h[1]}}}),of=Ka({resizeBilinear_:function(e,t,n=!1,r=!1){const s=Ha(e,"images","resizeBilinear");ie(3===s.rank||4===s.rank,()=>`Error in resizeBilinear: x must be rank 3 or 4, but got rank ${s.rank}.`),ie(2===t.length,()=>`Error in resizeBilinear: new shape must 2D, but got shape ${t}.`),ie(!1===r||!1===n,()=>"Error in resizeBilinear: If halfPixelCenters is true, alignCorners must be false.");let a=s,i=!1;3===s.rank&&(i=!0,a=sc(s,[1,s.shape[0],s.shape[1],s.shape[2]]));const[]=t,o={images:a},u={alignCorners:n,halfPixelCenters:r,size:t},l=Da.runKernel(vr,o,u);return i?sc(l,[l.shape[1],l.shape[2],l.shape[3]]):l}}),uf=Ka({resizeNearestNeighbor_:function(e,t,n=!1,r=!1){const s=Ha(e,"images","resizeNearestNeighbor");ie(3===s.rank||4===s.rank,()=>`Error in resizeNearestNeighbor: x must be rank 3 or 4, but got rank ${s.rank}.`),ie(2===t.length,()=>`Error in resizeNearestNeighbor: new shape must 2D, but got shape ${t}.`),ie("float32"===s.dtype||"int32"===s.dtype,()=>"`images` must have `int32` or `float32` as dtype"),ie(!1===r||!1===n,()=>"Error in resizeNearestNeighbor: If halfPixelCenters is true, alignCorners must be false.");let a=s,i=!1;3===s.rank&&(i=!0,a=sc(s,[1,s.shape[0],s.shape[1],s.shape[2]]));const[]=t,o={images:a},u={alignCorners:n,halfPixelCenters:r,size:t},l=Da.runKernel(xr,o,u);return i?sc(l,[l.shape[1],l.shape[2],l.shape[3]]):l}}),lf=Ka({threshold_:function(e,t="binary",n=!1,r=.5){const s=Ha(e,"image","threshold"),a=s.shape[0]*s.shape[1];let i,o,u,l,c=$o(sp([r]),255);if(ie(3===s.rank,()=>`Error in threshold: image must be rank 3,but got rank ${s.rank}.`),ie(3===s.shape[2]||1===s.shape[2],()=>`Error in threshold: image color channel must be equal to 3 or 1but got ${s.shape[2]}.`),ie("int32"===s.dtype||"float32"===s.dtype,()=>`Error in dtype: image dtype must be int32 or float32,but got dtype ${s.dtype}.`),ie("otsu"===t||"binary"===t,()=>`Method must be binary or otsu, but was ${t}`),3===s.shape[2]){[i,o,u]=Yd(s,[1,1,1],-1);const e=$o(i,.2989),t=$o(o,.587),n=$o(u,.114);l=To(To(e,t),n)}else l=e;"otsu"===t&&(c=function(e,t){let n,r,s,a,i,o,u=sp([-1]),l=sp([0]),c=sp([0]);for(let h=0;h<e.size-1;h++){n=lc(e,0,h+1),r=lc(e,h+1),i=Co(oh(n),t),o=Co(oh(r),t);const d=oh($o(n,Nd(0,n.size)));s=Co(d,oh(n));const p=Xo(r.shape,n.size),f=To(Nd(0,r.size),p),m=$o(r,f);a=Co(oh(m),oh(r));const g=Zo(s,a),y=Zo(s,a),b=$o(i,o);c=$o($o(b,g),y);const x=bh(c,l);l=Gc(x,c,l),u=Gc(x,sp([h]),u)}return u}(yc(Io(Fd(l),"int32"),Ja([]),256),a));const h=n?Nh(l,c):bh(l,c);return Io($o(h,255),"int32")}}),cf=Ka({transform_:function(e,t,n="nearest",r="constant",s=0,a){const i=Ha(e,"image","transform","float32"),o=Ha(t,"transforms","transform","float32");ie(4===i.rank,()=>`Error in transform: image must be rank 4,but got rank ${i.rank}.`),ie(2===o.rank&&(o.shape[0]===i.shape[0]||1===o.shape[0])&&8===o.shape[1],()=>"Error in transform: Input transform should be batch x 8 or 1 x 8"),ie(null==a||2===a.length,()=>`Error in transform: outputShape must be [height, width] or null, but got ${a}.`);const u={image:i,transforms:o},l={interpolation:n,fillMode:r,fillValue:s,outputShape:a};return Da.runKernel(is,u,l)}}),hf=Ka({bandPart_:function(e,t,n){const r=Ha(e,"a","bandPart");ie(r.rank>=2,()=>`bandPart(): Rank must be at least 2, got ${r.rank}.`);const s=r.shape,[a,i]=r.shape.slice(-2);let o,u;"number"==typeof t?(ie(t%1==0,()=>`bandPart(): numLower must be an integer, got ${t}.`),ie(t<=a,()=>`bandPart(): numLower (${t}) must not be greater than the number of rows (${a}).`),o=Ha(t<0?a:t,"numLower","bandPart")):(ie("int32"===t.dtype,()=>"bandPart(): numLower\'s dtype must be an int32."),o=Gc(Sh(t,0),a,Kh(t,a))),"number"==typeof n?(ie(n%1==0,()=>`bandPart(): numUpper must be an integer, got ${n}.`),ie(n<=i,()=>`bandPart(): numUpper (${n}) must not be greater than the number of columns (${i}).`),u=Ha(n<0?i:n,"numUpper","bandPart")):(ie("int32"===n.dtype,()=>"bandPart(): numUpper\'s dtype must be an int32."),u=Gc(Sh(n,0),i,Kh(n,i)));const l=sc(Nd(0,a,1,"int32"),[-1,1]),c=Nd(0,i,1,"int32"),h=Zo(l,c),d=Fh(Nh(h,o),xh(h,Mu(u))),p=Hh([a,i],r.dtype);return sc(ep(fp(sc(r,[-1,a,i])).map(e=>Gc(d,e,p))),s)}}),df=Ka({gramSchmidt_:function(e){let t;if(Array.isArray(e)){t=!1,ie(null!=e&&e.length>0,()=>"Gram-Schmidt process: input must not be null, undefined, or empty");const n=e[0].shape[0];for(let t=1;t<e.length;++t)ie(e[t].shape[0]===n,()=>`Gram-Schmidt: Non-unique lengths found in the input vectors: (${e[t].shape[0]} vs. ${n})`)}else t=!0,e=Yd(e,e.shape[0],0).map(e=>Qd(e,[0]));ie(e.length<=e[0].shape[0],()=>`Gram-Schmidt: Number of vectors (${e.length}) exceeds number of dimensions (${e[0].shape[0]}).`);const n=[],r=e;for(let t=0;t<e.length;++t)n.push(Da.tidy(()=>{let e=r[t];if(t>0)for(let r=0;r<t;++r){const t=$o(oh($o(n[r],e)),n[r]);e=Zo(e,t)}return Co(e,lh(e,"euclidean"))}));return t?ep(n,0):n}});function pf(e,t=!1){return Da.tidy(()=>{ie(2===e.shape.length,()=>`qr2d() requires a 2D Tensor, but got a ${e.shape.length}D Tensor.`);const n=e.shape[0],r=e.shape[1];let s=mh(n),a=So(e);const i=ap([[1]],[1,1]);let o=So(i);const u=n>=r?r:n;for(let e=0;e<u;++e){const t=a,u=o,l=s;[o,a,s]=Da.tidy(()=>{const t=lc(a,[e,e],[n-e,1]),u=lh(t),l=lc(a,[e,e],[1,1]),c=Gc(bh(l,0),ap([[-1]]),ap([[1]])),h=Zo(l,$o(c,u)),d=Co(t,h);o=1===d.shape[0]?So(i):oc([i,lc(d,[1,0],[d.shape[0]-1,d.shape[1]])],0);const p=Mu(Co(Au(c,h),u)),f=lc(a,[e,0],[n-e,r]),m=$o(p,o),g=Du(o);if(0===e)a=Zo(f,Au(m,Au(g,f)));else{const t=Zo(f,Au(m,Au(g,f)));a=oc([lc(a,[0,0],[e,r]),t],0)}const y=Du(m),b=lc(s,[0,e],[n,s.shape[1]-e]);if(0===e)s=Zo(b,Au(Au(b,o),y));else{const t=Zo(b,Au(Au(b,o),y));s=oc([lc(s,[0,0],[n,e]),t],1)}return[o,a,s]}),li([t,u,l])}return!t&&n>r&&(s=lc(s,[0,0],[n,r]),a=lc(a,[0,0],[r,r])),[s,a]})}const ff=Ka({qr_:function(e,t=!1){if(ie(e.rank>=2,()=>`qr() requires input tensor to have a rank >= 2, but got rank ${e.rank}`),2===e.rank)return pf(e,t);{const n=e.shape.slice(0,e.shape.length-2).reduce((e,t)=>e*t),r=fp(sc(e,[n,e.shape[e.shape.length-2],e.shape[e.shape.length-1]]),0),s=[],a=[];return r.forEach(e=>{const[n,r]=pf(e,t);s.push(n),a.push(r)}),[sc(ep(s,0),e.shape),sc(ep(a,0),e.shape)]}}});var mf;!function(e){e[e.NONE=0]="NONE",e[e.MEAN=1]="MEAN",e[e.SUM=2]="SUM",e[e.SUM_BY_NONZERO_WEIGHTS=3]="SUM_BY_NONZERO_WEIGHTS"}(mf||(mf={}));const gf=Ka({computeWeightedLoss_:function(e,t,n=mf.SUM_BY_NONZERO_WEIGHTS){const r=Ha(e,"losses","computeWeightedLoss");let s=null;null!=t&&(s=Ha(t,"weights","computeWeightedLoss"));const a=null==s?r:$o(r,s);if(n===mf.NONE)return a;if(n===mf.SUM)return oh(a);if(n===mf.MEAN){if(null==s)return Gh(a);{const e=r.size/s.size,t=Co(oh(a),oh(s));return e>1?Co(t,Bo(e)):t}}if(n===mf.SUM_BY_NONZERO_WEIGHTS){if(null==s)return Co(oh(a),Bo(r.size));{const e=$o(s,jh(r.shape)),t=Io(oh(ed(e,Bo(0))),"float32");return Co(oh(a),t)}}throw Error(`Unknown reduction: ${n}`)}}),yf=Ka({absoluteDifference_:function(e,t,n,r=mf.SUM_BY_NONZERO_WEIGHTS){const s=Ha(e,"labels","absoluteDifference"),a=Ha(t,"predictions","absoluteDifference");let i=null;null!=n&&(i=Ha(n,"weights","absoluteDifference")),oe(s.shape,a.shape,"Error in absoluteDifference: ");const o=eu(Zo(s,a));return gf(o,i,r)}}),bf=Ka({cosineDistance_:function(e,t,n,r,s=mf.SUM_BY_NONZERO_WEIGHTS){const a=Ha(e,"labels","cosineDistance"),i=Ha(t,"predictions","cosineDistance");let o=null;null!=r&&(o=Ha(r,"weights","cosineDistance")),oe(a.shape,i.shape,"Error in cosineDistance: ");const u=Bo(1),l=Zo(u,oh($o(a,i),n,!0));return gf(l,o,s)}}),xf=Ka({hingeLoss_:function(e,t,n,r=mf.SUM_BY_NONZERO_WEIGHTS){let s=Ha(e,"labels","hingeLoss");const a=Ha(t,"predictions","hingeLoss");let i=null;null!=n&&(i=Ha(n,"weights","hingeLoss")),oe(s.shape,a.shape,"Error in hingeLoss: ");const o=Bo(1);s=Zo($o(Bo(2),s),o);const u=Ed(Zo(o,$o(s,a)));return gf(u,i,r)}}),wf=Ka({huberLoss_:function(e,t,n,r=1,s=mf.SUM_BY_NONZERO_WEIGHTS){const a=Ha(e,"labels","huberLoss"),i=Ha(t,"predictions","huberLoss");let o=null;null!=n&&(o=Ha(n,"weights","huberLoss")),oe(a.shape,i.shape,"Error in huberLoss: ");const u=Bo(r),l=eu(Zo(i,a)),c=Kh(l,u),h=Zo(l,c),d=To($o(Bo(.5),Ro(c)),$o(u,h));return gf(d,o,s)}}),vf=Ka({logLoss_:function(e,t,n,r=1e-7,s=mf.SUM_BY_NONZERO_WEIGHTS){const a=Ha(e,"labels","logLoss"),i=Ha(t,"predictions","logLoss");let o=null;null!=n&&(o=Ha(n,"weights","logLoss")),oe(a.shape,i.shape,"Error in logLoss: ");const u=Bo(1),l=Bo(r),c=Mu($o(a,Ch(To(i,l)))),h=$o(Zo(u,a),Ch(To(Zo(u,i),l))),d=Zo(c,h);return gf(d,o,s)}}),kf=Ka({meanSquaredError_:function(e,t,n,r=mf.SUM_BY_NONZERO_WEIGHTS){const s=Ha(e,"labels","meanSquaredError"),a=Ha(t,"predictions","meanSquaredError");let i=null;null!=n&&(i=Ha(n,"weights","meanSquaredError")),oe(s.shape,a.shape,"Error in meanSquaredError: ");const o=Zd(s,a);return gf(o,i,r)}}),If=Ka({sigmoidCrossEntropy_:function(e,t,n,r=0,s=mf.SUM_BY_NONZERO_WEIGHTS){let a=Ha(e,"multiClassLabels","sigmoidCrossEntropy");const i=Ha(t,"logits","sigmoidCrossEntropy");let o=null;if(null!=n&&(o=Ha(n,"weights","sigmoidCrossEntropy")),oe(a.shape,i.shape,"Error in sigmoidCrossEntropy: "),r>0){const e=Bo(r),t=Bo(1),n=Bo(.5);a=To($o(a,Zo(t,e)),$o(n,e))}const u=function(e,t){const n=Ha(e,"labels","sigmoidCrossEntropyWithLogits"),r=Ha(t,"logits","sigmoidCrossEntropyWithLogits");oe(n.shape,r.shape,"Error in sigmoidCrossEntropyWithLogits: ");const s=Ed(r),a=$o(r,n),i=$h(hh(Mu(eu(r))));return To(Zo(s,a),i)}(a,i);return gf(u,o,s)}}),Sf=Ka({softmaxCrossEntropy_:function(e,t,n,r=0,s=mf.SUM_BY_NONZERO_WEIGHTS){let a=Ha(e,"onehotLabels","softmaxCrossEntropy");const i=Ha(t,"logits","softmaxCrossEntropy");let o=null;if(null!=n&&(o=Ha(n,"weights","softmaxCrossEntropy")),oe(a.shape,i.shape,"Error in softmaxCrossEntropy: "),r>0){const e=Bo(r),t=Bo(1),n=Bo(a.shape[1]);a=To($o(a,Zo(t,e)),Co(e,n))}const u=function(e,t,n=-1){if(-1===n&&(n=t.rank-1),n!==t.rank-1)throw Error(`Softmax cross entropy along a non-last dimension is not yet supported. Labels / logits was rank ${t.rank} and dim was ${n}`);const r=zo((e,t,r)=>{const s=Mh(t,[n],!0),a=Zo(Io(t,"float32"),s);r([e,a]);const i=Mu($o(a,e));return{value:oh(i,[n]),gradFunc:(e,t)=>{const[r,s]=t,a=eh(e.shape,[n]);return[$o(sc(e,a),Zo(Io(r,"float32"),hh(s))),$o(sc(e,a),Zo(hh(s),Io(r,"float32")))]}}});return r(e,t)}(a,i);return gf(u,o,s)}}),Nf=Ka({sparseFillEmptyRows_:function(e,t,n,r){const s=Ha(e,"indices","sparseFillEmptyRows","int32"),a=Ha(t,"values","sparseFillEmptyRows"),i=Ha(n,"denseShape","sparseFillEmptyRows","int32"),o=Ha(r,"defaultValue","sparseFillEmptyRows",a.dtype);if(2!==s.rank)throw new Error(`Indices should be Tensor2D but received shape\\n        ${s.shape}`);if(1!==a.rank)throw new Error(`Values should be Tensor1D but received shape ${a.shape}`);if(1!==i.rank)throw new Error(`Dense shape should be Tensor1D but received shape ${i.shape}`);if(0!==o.rank)throw new Error(`Default value should be a scalar but received shape ${o.shape}`);const u={indices:s,values:a,denseShape:i,defaultValue:o},l=Da.runKernel(Wr,u);return{outputIndices:l[0],outputValues:l[1],emptyRowIndicator:l[2],reverseIndexMap:l[3]}}}),Tf=Ka({sparseReshape_:function(e,t,n){const r=Ha(e,"inputIndices","sparseReshape","int32"),s=Ha(t,"inputShape","sparseReshape","int32"),a=Ha(n,"newShape","sparseReshape","int32");if(2!==r.rank)throw new Error(`Input indices should be Tensor2D but received shape\\n        ${r.shape}`);if(1!==s.rank)throw new Error(`Input shape should be Tensor1D but received shape ${s.shape}`);if(1!==a.rank)throw new Error(`New shape should be Tensor1D but received shape ${a.shape}`);const i={inputIndices:r,inputShape:s,newShape:a},o=Da.runKernel(Gr,i);return{outputIndices:o[0],outputShape:o[1]}}}),Ef=Ka({sparseSegmentMean_:function(e,t,n){const r=Ha(e,"data","sparseSegmentMean"),s=Ha(t,"indices","sparseSegmentMean","int32"),a=Ha(n,"segmentIds","sparseSegmentMean","int32");if(r.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==s.rank)throw new Error(`Indices should be Tensor1D but received shape\\n          ${s.shape}`);if(1!==a.rank)throw new Error(`Segment ids should be Tensor1D but received shape\\n          ${a.shape}`);const i={data:r,indices:s,segmentIds:a};return Da.runKernel(Hr,i)}}),Cf=Ka({sparseSegmentSum_:function(e,t,n){const r=Ha(e,"data","sparseSegmentSum"),s=Ha(t,"indices","sparseSegmentSum","int32"),a=Ha(n,"segmentIds","sparseSegmentSum","int32");if(r.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==s.rank)throw new Error(`Indices should be Tensor1D but received shape\\n         ${s.shape}`);if(1!==a.rank)throw new Error(`Segment ids should be Tensor1D but received shape\\n         ${a.shape}`);const i={data:r,indices:s,segmentIds:a};return Da.runKernel(jr,i)}}),$f=Ka({stringNGrams_:function(e,t,n,r,s,a,i,o){const u=Ha(e,"data","stringNGrams","string");if("string"!==u.dtype)throw new Error("Data must be of datatype string");if(1!==u.shape.length)throw new Error(`Data must be a vector, saw: ${u.shape}`);const l=Ha(t,"dataSplits","stringNGrams");if("int32"!==l.dtype)throw new Error("Data splits must be of datatype int32");const c={separator:n,nGramWidths:r,leftPad:s,rightPad:a,padWidth:i,preserveShortSequences:o},h={data:u,dataSplits:l},d=Da.runKernel(Zr,h,c);return{nGrams:d[0],nGramsSplits:d[1]}}}),Af=Ka({stringSplit_:function(e,t,n=!0){const r=Ha(e,"input","stringSplit","string"),s=Ha(t,"delimiter","stringSplit","string");if(1!==r.rank)throw new Error(`Input should be Tensor1D but received shape ${r.shape}`);if(0!==s.rank)throw new Error(`Delimiter should be a scalar but received shape ${s.shape}`);const a={skipEmpty:n},i={input:r,delimiter:s},o=Da.runKernel(Qr,i,a);return{indices:o[0],values:o[1],shape:o[2]}}}),Rf=Ka({stringToHashBucketFast_:function(e,t){const n=Ha(e,"input","stringToHashBucketFast","string"),r={numBuckets:t};if(t<=0)throw new Error("Number of buckets must be at least 1");const s={input:n};return Da.runKernel(es,s,r)}}),_f=Ka({staticRegexReplace_:function(e,t,n,r=!0){const s=Ha(e,"input","staticRegexReplace","string"),a={pattern:t,rewrite:n,replaceGlobal:r};return Da.runKernel(Yr,{x:s},a)}}),Mf={fft:qd,ifft:Kd,rfft:Jd,irfft:Xd},Ff={hammingWindow:zp,hannWindow:Pp,frame:Bp,stft:Vp},Df={flipLeftRight:Wp,grayscaleToRGB:Gp,resizeNearestNeighbor:uf,resizeBilinear:of,rgbToGrayscale:Hp,rotateWithOffset:jp,cropAndResize:Up,nonMaxSuppression:Kp,nonMaxSuppressionAsync:async function(e,t,n,r=.5,s=Number.NEGATIVE_INFINITY){const a=Ha(e,"boxes","nonMaxSuppressionAsync"),i=Ha(t,"scores","nonMaxSuppressionAsync"),o=qp(a,i,n,r,s);n=o.maxOutputSize,r=o.iouThreshold,s=o.scoreThreshold;const u=await Promise.all([a.data(),i.data()]),l=u[0],c=u[1],{selectedIndices:h}=Jp(l,c,n,r,s);return a!==e&&a.dispose(),i!==t&&i.dispose(),sp(h,"int32")},nonMaxSuppressionWithScore:sf,nonMaxSuppressionWithScoreAsync:async function(e,t,n,r=.5,s=Number.NEGATIVE_INFINITY,a=0){const i=Ha(e,"boxes","nonMaxSuppressionAsync"),o=Ha(t,"scores","nonMaxSuppressionAsync"),u=qp(i,o,n,r,s,a);n=u.maxOutputSize,r=u.iouThreshold,s=u.scoreThreshold,a=u.softNmsSigma;const l=await Promise.all([i.data(),o.data()]),c=l[0],h=l[1],{selectedIndices:d,selectedScores:p}=Qp(c,h,n,r,s,a);return i!==e&&i.dispose(),o!==t&&o.dispose(),{selectedIndices:sp(d,"int32"),selectedScores:sp(p)}},nonMaxSuppressionPadded:af,nonMaxSuppressionPaddedAsync:async function(e,t,n,r=.5,s=Number.NEGATIVE_INFINITY,a=!1){const i=Ha(e,"boxes","nonMaxSuppressionAsync"),o=Ha(t,"scores","nonMaxSuppressionAsync"),u=qp(i,o,n,r,s,null),l=u.maxOutputSize,c=u.iouThreshold,h=u.scoreThreshold,[d,p]=await Promise.all([i.data(),o.data()]),{selectedIndices:f,validOutputs:m}=Zp(d,p,l,c,h,a);return i!==e&&i.dispose(),o!==t&&o.dispose(),{selectedIndices:sp(f,"int32"),validOutputs:Bo(m,"int32")}},threshold:lf,transform:cf},Of={bandPart:hf,gramSchmidt:df,qr:ff},Lf={absoluteDifference:yf,computeWeightedLoss:gf,cosineDistance:bf,hingeLoss:xf,huberLoss:wf,logLoss:vf,meanSquaredError:kf,sigmoidCrossEntropy:If,softmaxCrossEntropy:Sf},zf={sparseFillEmptyRows:Nf,sparseReshape:Tf,sparseSegmentMean:Ef,sparseSegmentSum:Cf},Pf={stringNGrams:$f,stringSplit:Af,stringToHashBucketFast:Rf,staticRegexReplace:_f},Bf=Al,Vf="undefined"!=typeof requestAnimationFrame?requestAnimationFrame:"undefined"!=typeof setImmediate?setImmediate:e=>e();function Uf(){return new Promise(e=>Vf(()=>e()))}function Wf(e,t){const n=e[0].length;e.forEach((e,t)=>{ie(e.length===n,()=>`Error in concat${n}D: rank of tensors[${t}] must be the same as the rank of the rest (${n})`)}),ie(t>=0&&t<n,()=>`Error in concat${n}D: axis must be between 0 and ${n-1}.`);const r=e[0];e.forEach((e,s)=>{for(let a=0;a<n;a++)ie(a===t||e[a]===r[a],()=>`Error in concat${n}D: Shape of tensors[${s}] (${e}) does not match the shape of the rest (${r}) along the non-concatenated axis ${s}.`)})}function Gf(e,t){const n=e[0].slice();for(let r=1;r<e.length;r++)n[t]+=e[r][t];return n}var Hf;function jf(e,t,n){let r=new Array;if(null==n&&null==t)return r;if(null==t)for(;r.length<e+n.length;)r.push(-1);else r=t.slice();if(null==n)return r;if(e+n.length!==r.length)throw new Error(`rt input.shape and shape=${t} are incompatible: rt input.rank = ${e+n.length}, but shape.rank = ${r.length}`);for(let s=1;s<n.length;++s){const a=n[s],i=r[r.length-n.length+s],o=r[i];if(a>=0)if(o>=0){if(o!==a)throw new Error(`rt input.shape and shape=${t} are incompatible: rt input.shape[${s+e}] = ${a} but shape[${s+e}] = ${o}`)}else r[i]=a}return r}function qf(e){const t={FIRST_DIM_SIZE:Hf.FIRST_DIM_SIZE,VALUE_ROWIDS:Hf.VALUE_ROWIDS,ROW_LENGTHS:Hf.ROW_LENGTHS,ROW_SPLITS:Hf.ROW_SPLITS,ROW_LIMITS:Hf.ROW_LIMITS,ROW_STARTS:Hf.ROW_STARTS},n=[];for(const r of e){if(!(r in t))break;n.push(t[r])}return n}function Kf(e){return 0===e.length?0:e[0]===Hf.FIRST_DIM_SIZE?e.length-1:e.length}function Xf(e,t){if(null==e||null==t)return;const n=e.length,r=t.length;if(n>=r)throw new Error(`defaultValue.shape=${e} and ragged tensor flatValues.shape=${t}, are incompatible: defaultValue.rank = ${n} must be less than ragged tensor input flatValues.rank = ${r})`);for(let s=0;s<Math.min(n,r-1);++s){const n=e[s],r=t[s+1];if(n>=0&&r>=0&&1!==n&&n!==r)throw new Error(`defaultValue.shape=${e}, and ragged tensor input flatValues.shape=${t} are incompatible: defaultValue.shape[${s-e.length}] = ${n} but ragged tensor input.flatValues.shape[${s-e.length}] = ${r}`)}}!function(e){e[e.FIRST_DIM_SIZE=0]="FIRST_DIM_SIZE",e[e.VALUE_ROWIDS=1]="VALUE_ROWIDS",e[e.ROW_LENGTHS=2]="ROW_LENGTHS",e[e.ROW_SPLITS=3]="ROW_SPLITS",e[e.ROW_LIMITS=4]="ROW_LIMITS",e[e.ROW_STARTS=5]="ROW_STARTS"}(Hf||(Hf={}));const Yf=30;function Jf(e){return e<=Yf?e:Fe(e,Math.floor(Math.sqrt(e)))}function Zf(e,t,n){return[n*("number"==typeof e?e:e[0]),t*("number"==typeof e?e:e[1])]}function Qf(e,t,n,r=!0){let s=[];if(r)s=s.concat(t.slice(0)),s.push(e[0]/n),s=s.concat(e.slice(1));else{s=s.concat(e[0]);const n=t.length;for(let r=0;r<n;++r)s=s.concat([e[r+1]/t[r],t[r]]);s=s.concat(e.slice(n+1))}return s}function em(e,t,n=!0){const r=[];if(n){r.push(t);for(let n=t+1;n<e;++n)n<=2*t?(r.push(n),r.push(n-(t+1))):r.push(n)}else{const n=[],s=[];for(let r=1;r<e;++r)r>=2*t+1||r%2==1?s.push(r):n.push(r);r.push(...n),r.push(0),r.push(...s)}return r}function tm(e,t,n,r=!0){const s=[];r?s.push(e[0]/n):s.push(e[0]*n);for(let n=1;n<e.length;++n)n<=t.length?r?s.push(t[n-1]*e[n]):s.push(e[n]/t[n-1]):s.push(e[n]);return s}function nm(e,t){const n=[0];for(let r=0;r<t;++r)n.push(e[r][0]);return n}function rm(e,t,n){const r=e.slice(0,1);for(let s=0;s<n;++s)r.push(e[s+1]-t[s][0]-t[s][1]);return r}const sm=1.7580993408473768,am=1.0507009873554805,im=.3275911,om=.254829592,um=-.284496736,lm=1.421413741,cm=-1.453152027,hm=1.061405429;function dm(e,t){if(e.length!==t.length)throw new Error(`Cannot merge real and imag arrays of different lengths. real:${e.length}, imag: ${t.length}.`);const n=new Float32Array(2*e.length);for(let r=0;r<n.length;r+=2)n[r]=e[r/2],n[r+1]=t[r/2];return n}function pm(e){const t=new Float32Array(e.length/2),n=new Float32Array(e.length/2);for(let r=0;r<e.length;r+=2)t[r/2]=e[r],n[r/2]=e[r+1];return{real:t,imag:n}}function fm(e){const t=Math.ceil(e.length/4),n=new Float32Array(t),r=new Float32Array(t);for(let t=0;t<e.length;t+=4)n[Math.floor(t/4)]=e[t],r[Math.floor(t/4)]=e[t+1];return{real:n,imag:r}}function mm(e){const t=Math.floor(e.length/4),n=new Float32Array(t),r=new Float32Array(t);for(let t=2;t<e.length;t+=4)n[Math.floor(t/4)]=e[t],r[Math.floor(t/4)]=e[t+1];return{real:n,imag:r}}function gm(e,t){return{real:e[2*t],imag:e[2*t+1]}}function ym(e,t,n,r){e[2*r]=t,e[2*r+1]=n}function bm(e,t){const n=new Float32Array(e/2),r=new Float32Array(e/2);for(let s=0;s<Math.ceil(e/2);s++){const a=(t?2:-2)*Math.PI*(s/e);n[s]=Math.cos(a),r[s]=Math.sin(a)}return{real:n,imag:r}}function xm(e,t,n){const r=(n?2:-2)*Math.PI*(e/t);return{real:Math.cos(r),imag:Math.sin(r)}}const wm="->",vm=/->/g,km=",",Im="...";function Sm(e,t){const n=((e=e.replace(/\\s/g,"")).length-e.replace(vm,"").length)/wm.length;if(n<1)throw new Error("Equations without an arrow are not supported.");if(n>1)throw new Error(`Equation must contain exactly one arrow ("${wm}").`);const[r,s]=e.split(wm);ie(-1===r.indexOf(Im),()=>`The ellipsis notation ("${Im}") is not supported yet.`);const a=r.split(km),i=a.length;if(t!==i)throw new Error(`Expected ${i} input tensors, received ${t}`);if(i>2)throw new Error("Support for more than 2 input tensors is not implemented yet.");const o=[];for(let e=0;e<s.length;++e){const t=s[e];if(!a.some(e=>-1!==e.indexOf(t)))throw new Error(`Output subscripts contain the label ${t} not present in the input subscripts.`);-1===o.indexOf(t)&&o.push(t)}for(let e=0;e<r.length;++e){const t=r[e];-1===o.indexOf(t)&&t!==km&&o.push(t)}const u=new Array(a.length);for(let e=0;e<i;++e){if(new Set(a[e].split("")).size!==a[e].length)throw new Error(`Found duplicate axes in input component ${a[e]}. Support for duplicate axes in input is not implemented yet.`);u[e]=[];for(let t=0;t<a[e].length;++t)u[e].push(o.indexOf(a[e][t]))}const l=o.length,c=[];for(let e=s.length;e<l;++e)c.push(e);return{allDims:o,summedDims:c,idDims:u}}function Nm(e,t){let n=new Array(e);n.fill(-1);for(let e=0;e<t.length;++e)n[t[e]]=e;const r=[];for(let t=0;t<e;++t)-1===n[t]&&r.push(t);return n=n.filter(e=>-1!==e),{permutationIndices:n,expandDims:r}}function Tm(e,t,n){const r=new Array(e);for(let e=0;e<n.length;++e){const s=n[e].shape;for(let n=0;n<t[e].length;++n)void 0===r[t[e][n]]?r[t[e][n]]=s[n]:ie(r[t[e][n]]===s[n],()=>`Expected dimension ${r[t[e][n]]} at axis ${n} of input shaped ${JSON.stringify(s)}, but got dimension ${s[n]}`)}}function Em(e,t){const n=e,r=[];let s=0;0===e.length&&n.push(-1),s=e.length+1;for(let e=0;e<s;++e)r.push([]);const a=[];for(let e=0;e<n.length;++e){const s=$m(t,n[e]);for(const t of s)-1===a.indexOf(t)&&(r[e].push(t),a.push(t))}return{path:n,steps:r}}function Cm(e){return e.every((e,t)=>e===t)}function $m(e,t){const n=[];for(let r=0;r<e.length;++r)0!==e[r].length&&-1===e[r].indexOf(t)&&-1!==t||n.push(r);return n}function Am(e,t,n=0){let r=[];if("number"==typeof t)ie(e.shape[n]%t===0,()=>"Number of splits must evenly divide the axis."),r=new Array(t).fill(e.shape[n]/t);else{const s=t.reduce((e,t)=>(-1===t&&(e+=1),e),0);ie(s<=1,()=>"There should be only one negative value in split array.");const a=t.indexOf(-1);if(-1!==a){const r=t.reduce((e,t)=>t>0?e+t:e);t[a]=e.shape[n]-r}ie(e.shape[n]===t.reduce((e,t)=>e+t),()=>"The sum of sizes must match the size of the axis dimension."),r=t}return r}function Rm(e){return`Received SparseTensor with denseShape[0] = 0 but\\n  indices.shape[0] = ${e}`}function _m(e,t){return`indices(${e}, 0) is invalid: ${t} < 0`}function Mm(e,t,n){return`indices(${e}, 0) is invalid: ${t} >= ${n}`}function Fm(e,t){return`only one output dimension may be -1, not both ${e} and ${t}`}function Dm(e,t){return`size ${e} must be non-negative, not ${t}`}function Om(){return"reshape cannot infer the missing input size for an empty tensor unless all specified input sizes are non-zero"}function Lm(e,t){return`Input to reshape is a SparseTensor with ${le(e)}\\n  dense values, but the requested shape requires a multiple of ${le(t)}. inputShape=${e} outputShape= ${t}`}function zm(e,t){return`Input to reshape is a tensor with ${le(e)} dense values, but the requested shape has ${le(t)}. inputShape=${e} outputShape=${t}`}function Pm(){return"segment ids must be >= 0"}function Bm(){return"segment ids are not increasing"}function Vm(e,t){return`Segment id ${e} out of range [0, ${t}), possibly because segmentIds input is not sorted.`}function Um(e,t,n){return`Bad: indices[${e}] == ${t} out of range [0, ${n})`}function Wm(e,t){let n,r=!1;for(e<=Yf?(n=e,r=!0):n=Fe(e,Math.floor(Math.sqrt(e)));!r;)n>t||n===e?r=!0:n=Fe(e,n+1);return n}function Gm(e,t,n){const r=[],s=e.length;for(let a=0;a<s;a++)a!==t?r.push(e[a]):r.push(n);return r}function Hm(e,t,n,r){const s=t.shape.length,a=e.shape.length;if(0!==r&&(r<-s||r>s))throw new Error(`Expect batchDims in the range of [-${s}, ${s}], but got ${r}`);if(r<0&&(r+=s),r>a)throw new Error(`batchDims (${r}) must be less than rank(x) (\\n    ${a}).`);if(n<r)throw new Error(`batchDims (${r}) must be less than or equal to axis (${n}).`);for(let n=0;n<r;++n)if(e.shape[n]!==t.shape[n])throw new Error(`x.shape[${n}]: ${e.shape[n]} should be equal to indices.shape[${n}]: ${t.shape[n]}.`);const i=e.shape[n],o=[];let u=1,l=1,c=1;for(let t=0;t<r;++t)o.push(e.shape[t]),u*=e.shape[t];for(let t=r;t<n;t++)o.push(e.shape[t]),l*=e.shape[t];for(let e=r;e<s;e++)o.push(t.shape[e]);for(let t=n+1;t<a;t++)o.push(e.shape[t]),c*=e.shape[t];return{batchSize:u,sliceSize:c,outerSize:l,dimSize:i,outputShape:o}}function jm(e){try{return e.map(e=>Zs(e))}catch(e){throw new Error(`Failed to decode encoded string bytes into utf-8, error: ${e}`)}}function qm(e){return e.map(e=>Js(e))}!function(){for(const e of lu)Ho(e)}();const Km={kernelName:et,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>$o(e,tp(Io(n,"float32"),-1))}}},Xm={kernelName:tt,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=Ro(Io(n,"float32")),r=Ao(Zo(Bo(1),t));return Mu(Co(e,r))}}}},Ym={kernelName:nt,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=Ao(Zo(Ro(Io(n,"float32")),1));return Co(e,t)}}}},Jm={kernelName:rt,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,s=ru(n.shape,r.shape);return{a:()=>{let t=e;const r=nu(n.shape,s);return r.length>0&&(t=oh(t,r)),sc(t,n.shape)},b:()=>{let t=e;const n=nu(r.shape,s);return n.length>0&&(t=oh(t,n)),sc(t,r.shape)}}}},Zm={kernelName:st,saveAllInputs:!0,gradFunc:(e,t)=>{const n={};return t.forEach((t,r)=>{n[r]=()=>e.clone()}),n}},Qm={kernelName:ot,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>_o(n)}}},eg={kernelName:ut,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>_o(n)}}},tg={kernelName:lt,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Co(e,Ao(Zo(Bo(1),Ro(Io(n,"float32")))))}}},ng={kernelName:ct,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=Ao(To(Bo(1),Ro(Io(n,"float32"))));return Co(e,t)}}}},rg={kernelName:pt,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,s=ru(n.shape,r.shape);return{a:()=>{const t=To(Ro(n),Ro(r));let a=$o(e,Co(r,t));const i=nu(n.shape,s);return i.length>0&&(a=oh(a,i)),sc(a,n.shape)},b:()=>{const t=To(Ro(n),Ro(r));let a=Mu($o(e,Co(n,t)));const i=nu(r.shape,s);return i.length>0&&(a=oh(a,i)),sc(a,r.shape)}}}},sg={kernelName:ht,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Co(e,To(Ro(Io(n,"float32")),1))}}},ag={kernelName:dt,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Co(e,Zo(Bo(1),Ro(Io(n,"float32"))))}}},ig=Ka({avgPool3dGrad_:function(e,t,n,r,s,a){const i=Ha(e,"dy","avgPool3dGrad"),o=Ha(t,"input","avgPool3dGrad");let u=i,l=o,c=!1;4===o.rank&&(c=!0,u=sc(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]]),l=sc(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]])),ie(5===u.rank,()=>`Error in avgPool3dGrad: dy must be rank 5 but got rank ${u.rank}.`),ie(5===l.rank,()=>`Error in avgPool3dGrad: input must be rank 5 but got rank ${l.rank}.`),rc("avgPool3dGrad",s,a);const h={dy:u,input:l},d={filterSize:n,strides:r,pad:s,dimRoundingMode:a},p=Da.runKernel(yt,h,d);return c?sc(p,[p.shape[1],p.shape[2],p.shape[3],p.shape[4]]):p}}),og={kernelName:gt,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{filterSize:s,strides:a,pad:i,dimRoundingMode:o}=n;return{x:()=>ig(e,r,s,a,i,o)}}},ug=Ka({avgPoolGrad_:function(e,t,n,r,s){const a=Ha(e,"dy","avgPoolGrad"),i=Ha(t,"input","avgPoolGrad");ie(i.rank===a.rank,()=>`Rank of input (${i.rank}) does not match rank of dy (${a.rank})`);let o=i,u=a,l=!1;3===i.rank&&(l=!0,o=sc(i,[1,i.shape[0],i.shape[1],i.shape[2]]),u=sc(a,[1,a.shape[0],a.shape[1],a.shape[2]])),ie(4===u.rank,()=>`Error in avgPoolGrad: dy must be rank 4 but got rank ${u.rank}.`),ie(4===o.rank,()=>`Error in avgPoolGrad: input must be rank 4 but got rank ${o.rank}.`);const c={dy:u,input:o},h={filterSize:n,strides:r,pad:s},d=Da.runKernel(mt,c,h);return l?sc(d,[d.shape[1],d.shape[2],d.shape[3]]):d}}),lg={kernelName:ft,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{filterSize:s,strides:a,pad:i}=n;return{x:()=>ug(e,r,s,a,i)}}},cg={kernelName:bt,inputsToSave:["a","b"],gradFunc:(e,t,n)=>{const[r,s]=t,{transposeA:a,transposeB:i}=n;return a||i?!a&&i?{a:()=>Au(e,s,!1,!1),b:()=>Au(e,r,!0,!1)}:a&&!i?{a:()=>Au(s,e,!1,!0),b:()=>Au(r,e,!1,!1)}:{a:()=>Au(s,e,!0,!0),b:()=>Au(e,r,!0,!0)}:{a:()=>Au(e,s,!1,!0),b:()=>Au(r,e,!0,!1)}}},hg={kernelName:xt,gradFunc:(e,t,n)=>{const{blockShape:r,crops:s}=n;return{x:()=>ud(e,r,s)}}},dg={kernelName:kt,gradFunc:(e,t,n)=>{const r=n,s=r.inputShape,a=r.shape,i=Array.from(a);for(let e=s.length-1;e>=0;e--)if(s[e]===a[e])i[e]=1;else if(1!==s[e])throw new Error(`broadcastTo(): [${s}] cannot be broadcast to [${a}].`);const o=[];for(let e=0;e<i.length;e++)i[e]>1&&o.push(e);return{x:()=>oh(e,o,!0)}}},pg={kernelName:St,gradFunc:e=>({x:()=>e.clone()})},fg={kernelName:Nt,gradFunc:e=>({x:()=>_o(e)})},mg={kernelName:Tt,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{clipValueMin:s,clipValueMax:a}=n;return{x:()=>Gc(Fh(xh(r,s),Nh(r,a)),e,_o(e))}}},gg={kernelName:Ct,inputsToSave:["x"],gradFunc:Km.gradFunc},yg={kernelName:$t,saveAllInputs:!0,gradFunc:(e,t,n)=>{const r=t.map(e=>e.shape),{axis:s}=n,a=we(s,t[0].shape)[0],i=r.map(e=>e[a]);return Yd(e,i,a).map(e=>()=>e)}},bg={kernelName:At,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const[r,s]=t,{dilations:a,strides:i,pad:o,dataFormat:u}=n;return ie(Ql(a),()=>`Error in gradient of conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations \'${a}\'`),{x:()=>$c(r.shape,e,s,i,o,u),filter:()=>Cp(r,e,s.shape,i,o,u)}}},xg={kernelName:_t,inputsToSave:["dy","filter"],gradFunc:(e,t,n)=>{const[r,s]=t,{strides:a,pad:i,dataFormat:o,dimRoundingMode:u}=n;return{dy:()=>Ec(e,s,a,i,o,1,u),filter:()=>Cp(e,r,s.shape,a,i,o,u)}}},wg=Ka({conv3DBackpropFilter_:function(e,t,n,r,s){let a=e;4===e.rank&&(a=sc(e,[1,e.shape[0],e.shape[1],e.shape[2],e.shape[3]]));let i=t;4===i.rank&&(i=sc(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]])),ie(5===a.rank,()=>`Error in conv3dDerFilter: input must be rank 5, but got shape ${a.shape}.`),ie(5===i.rank,()=>`Error in conv3dDerFilter: dy must be rank 5, but got shape ${i.shape}.`),ie(5===n.length,()=>`Error in conv3dDerFilter: filterShape must be length 5, but got ${n}.`),ie(a.shape[4]===n[3],()=>`Error in conv3dDerFilter: depth of input ${a.shape[4]}) must match input depth in filter (${n[3]}.`),ie(i.shape[4]===n[4],()=>`Error in conv3dDerFilter: depth of dy (${i.shape[4]}) must match output depth for filter (${n[4]}).`);const o={x:a,dy:i},u={strides:r,pad:s,filterShape:n};return Da.runKernel(Ft,o,u)}}),vg={kernelName:Mt,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const{dilations:r,strides:s,pad:a}=n;ie(Ql(r),()=>`Error in gradient of conv3D: dilation rates greater than 1 are not yet supported in gradients. Got dilations \'${r}\'`);const[i,o]=t;return{x:()=>_c(i.shape,e,o,s,a),filter:()=>wg(i,e,o.shape,s,a)}}},kg={kernelName:Ot,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>$o(Mu(Bd(Io(n,"float32"))),e)}}},Ig={kernelName:Lt,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>$o(Vd(Io(n,"float32")),e)}}},Sg={kernelName:Pt,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{axis:s,exclusive:a,reverse:i}=n;return{x:()=>{const t=nh([s],r.rank);let n=Lc(e,s,a,!i);return null!=t&&(n=Du(n,t)),n}}}},Ng={kernelName:Wt,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const{dilations:r,strides:s,pad:a,dimRoundingMode:i}=n,o=null==r?[1,1]:r;ie(Ql(o),()=>`Error in gradient of depthwiseConv2dNative: dilation rates greater than 1 are not yet supported. Got dilations \'${o}\'`);const[u,l]=t;return ie(4===u.rank,()=>`Error in gradient of depthwiseConv2dNative: input must be rank 4, but got rank ${u.rank}.`),ie(4===l.rank,()=>`Error in gradient of depthwiseConv2dNative: filter must be rank 4, but got rank ${l.rank}.`),ie(u.shape[3]===l.shape[2],()=>`Error in gradient of depthwiseConv2d: number of input channels (${u.shape[3]}) must match the inChannels dimension in filter ${l.shape[2]}.`),ie(ec(s,o),()=>`Error in gradient of depthwiseConv2d: Either strides or dilations must be  1. Got strides ${s} and dilations \'${o}\'.`),rc("depthwiseConv2d",a,i),{x:()=>Dp(u.shape,e,l,s,a,o,i),filter:()=>Fp(u,e,l.shape,s,a,o,i)}}},Tg={kernelName:qt,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const[r,s]=t,a={x:r,filter:s,dy:e},i={x:r,filter:s,dy:e};return{x:()=>Da.runKernel(Kt,a,n),filter:()=>Da.runKernel(Xt,i,n)}}},Eg={kernelName:Qt,outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t,r={dy:e,y:n};return{x:()=>Da.runKernel(en,r)}}},Cg={kernelName:tn,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t,r=$o(hh(Mu(Ro(n))),2/Math.sqrt(Math.PI));return{x:()=>$o(e,r)}}},$g={kernelName:rn,outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t;return{x:()=>$o(e,n)}}},Ag={kernelName:sn,inputsToSave:["input"],gradFunc:(e,t)=>{const[n]=t;return{input:()=>sc(e,n.shape)}}},Rg={kernelName:an,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>$o(e,hh(n))}}},_g={kernelName:cn,gradFunc:e=>({x:()=>_o(e)})},Mg={kernelName:hn,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,s=ru(n.shape,r.shape);return{a:()=>{const t=Co(e,Io(r,"float32")),a=nu(n.shape,s);return a.length>0?sc(oh(t,a),n.shape):t},b:()=>{let t=$o(e,Io(n,"float32"));const a=nu(r.shape,s);a.length>0&&(t=sc(oh(t,a),r.shape));const i=Ro(r);return Mu(Co(t,Io(i,"float32")))}}}},Fg={kernelName:dn,inputsToSave:["x","mean","variance","scale"],gradFunc:(e,t,n)=>{const{varianceEpsilon:r}=n,[s,a,i,o]=t,u=null==o?Bo(1):o,l=nu(a.shape,s.shape),c=[];if(1===a.rank){for(let e=0;e<s.shape.length-1;++e)c.push(s.shape[e]);c.push(1)}const h=Zo(s,a),d=$o(e,u),p=Dd(To(i,Bo(r))),f=$o($o($o(p,p),p),Bo(-.5));return{x:()=>1===a.rank?sc($o($o(e,fh(sc(p,[1,1,1,a.shape[0]]),c)),u),s.shape):sc($o($o(e,p),u),s.shape),mean:()=>{let e=$o($o(p,Bo(-1)),d);return 1===a.rank&&(e=oh(e,l)),sc(e,a.shape)},variance:()=>{let e=$o($o(f,h),d);return 1===a.rank&&(e=oh(e,l)),sc(e,a.shape)},scale:()=>{const t=$o(h,p);let n=$o(e,t);return 1===a.rank&&(n=oh(n,l)),sc(n,a.shape)},offset:()=>{let t=e;return 1===a.rank&&(t=oh(t,l)),sc(t,a.shape)}}}},Dg={kernelName:pn,inputsToSave:["x","indices"],gradFunc:(e,t,n)=>{const[r,s]=t,{axis:a,batchDims:i}=n,o=we(a,r.shape)[0],u=(e,t,n)=>()=>{const r=e.shape,s=t.size,i=r.slice(0,o),u=i.length,l=r.slice(a,r.length).slice(1),c=l.length,h=Og(0,u),d=Og(u+1,u+1+c),p=Lg([i,[s],l]),f=sc(n,p),m=sc(t,[s]),g=Lg([[u],h,d]),y=Du(f,g);let b=pp(y,m,e.shape[o]);const x=rh(g);return b=Du(b,x),b};if(1===i){const t=r.shape[0],n=r.split(t,0);return{x:()=>{const t=ep(n.map((t,n)=>u(t,s.slice(n,1),e.slice(n,1))()));return t.reshape(r.shape)},indices:()=>s}}return{x:u(r,s,e),indices:()=>s}}};function Og(e,t){const n=[];for(let r=e;r<t;++r)n.push(r);return n}function Lg(e){const t=[];for(let n=0;n<e.length;++n)for(let r=0;r<e[n].length;++r)t.push(e[n][r]);return t}const zg={kernelName:gn,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t;return{a:()=>_o(n),b:()=>_o(r)}}},Pg={kernelName:yn,gradFunc:e=>({x:()=>Io(e,"float32")})},Bg={kernelName:wn,gradFunc:e=>({x:()=>_o(e)})},Vg={kernelName:vn,gradFunc:e=>({x:()=>_o(e)})},Ug={kernelName:kn,gradFunc:e=>({x:()=>_o(e)})},Wg={kernelName:In,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{alpha:s}=n,a=bh(r,0);return{x:()=>Gc(a,e,$o(e,s))}}},Gg={kernelName:Cn,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Co(e,To(n,1))}}},Hg={kernelName:En,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Co(e,Io(n,"float32"))}}},jg={kernelName:Mn,inputsToSave:[],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[r]=t,{axis:s}=n;return{logits:()=>{const t=hh(r);return Zo(e,$o(oh(e,s,!0),t))}}}},qg=Ka({localResponseNormalizationBackprop_:function(e,t,n,r=5,s=1,a=1,i=.5){const o={x:e,y:t,dy:n},u={depthRadius:r,bias:s,alpha:a,beta:i};return Da.runKernel(On,o,u)}}),Kg={kernelName:Dn,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[r,s]=t,{depthRadius:a,bias:i,alpha:o,beta:u}=n;return{x:()=>qg(r,s,e,a,i,o,u)}}};function Xg(e,t,n,r){return t.rank<n.rank&&(t=sc(t,eh(t.shape,r))),e.rank<n.rank&&(e=sc(e,eh(e.shape,r))),{x:()=>$o(e,Io(Wc(n,t),e.dtype))}}const Yg={kernelName:zn,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const r=n,{reductionIndices:s}=r,a=t[0],i=Xg(e,t[1],a,we(s,a.shape));return{x:()=>i.x()}}},Jg={kernelName:Pn,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t;return{a:()=>$o(e,Io(xh(n,r),"float32")),b:()=>$o(e,Io(Sh(n,r),"float32"))}}},Zg=Ka({maxPool3dGrad_:function(e,t,n,r,s,a,i){const o=Ha(e,"dy","maxPool3dGrad"),u=Ha(t,"input","maxPool3dGrad"),l=Ha(n,"output","maxPool3dGrad");let c=o,h=u,d=l,p=!1;4===u.rank&&(p=!0,c=sc(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]]),h=sc(u,[1,u.shape[0],u.shape[1],u.shape[2],u.shape[3]]),d=sc(l,[1,l.shape[0],l.shape[1],l.shape[2],l.shape[3]])),ie(5===c.rank,()=>`Error in maxPool3dGrad: dy must be rank 5 but got rank ${c.rank}.`),ie(5===h.rank,()=>`Error in maxPool3dGrad: input must be rank 5 but got rank ${h.rank}.`),ie(5===d.rank,()=>`Error in maxPool3dGrad: output must be rank 5 but got rank ${d.rank}.`),rc("maxPool3dGrad",a,i);const f={dy:c,input:h,output:d},m={filterSize:r,strides:s,pad:a,dimRoundingMode:i},g=Da.runKernel(Wn,f,m);return p?sc(g,[g.shape[1],g.shape[2],g.shape[3],g.shape[4]]):g}}),Qg={kernelName:Un,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[r,s]=t,{filterSize:a,strides:i,pad:o,dimRoundingMode:u}=n;return{x:()=>Zg(e,r,s,a,i,o,u)}}},ey=Ka({maxPoolGrad_:function(e,t,n,r,s,a,i){const o=Ha(e,"dy","maxPoolGrad"),u=Ha(t,"input","maxPoolGrad"),l=Ha(n,"output","maxPoolGrad");ie(u.rank===o.rank,()=>`Rank of input (${u.rank}) does not match rank of dy (${o.rank})`),ie(4===o.rank,()=>`Error in maxPoolGrad: dy must be rank 4 but got rank ${o.rank}.`),ie(4===u.rank,()=>`Error in maxPoolGrad: input must be rank 4 but got rank ${u.rank}.`),rc("maxPoolGrad",a,i);const c={dy:o,input:u,output:l},h={filterSize:r,strides:s,pad:a,dimRoundingMode:i};return Da.runKernel(Vn,c,h)}}),ty={kernelName:Bn,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[r,s]=t,{filterSize:a,strides:i,pad:o}=n;return{x:()=>ey(e,r,s,a,i,o)}}},ny={kernelName:Kn,inputsToSave:["x"],gradFunc:(e,t,n)=>{const r=t[0],{paddings:s}=n,a=s.map(e=>e[0]);return{x:()=>lc(e,a,r.shape)}}},ry={kernelName:ir,inputsToSave:["x"],gradFunc:(e,t,n)=>{const r=t[0],{paddings:s}=n,a=s.map(e=>e[0]);return{x:()=>lc(e,a,r.shape)}}},sy={kernelName:ur,inputsToSave:["a","b"],outputsToSave:[!0],gradFunc:(e,t)=>{const[n,r,s]=t,a=n,i=r,o=ru(a.shape,i.shape);return{a:()=>{const t=Io(i,"float32");let n=$o(e,$o(t,Jo(a,Zo(t,Bo(1)))));const r=nu(a.shape,o);return r.length>0&&(n=oh(n,r)),sc(n,a.shape)},b:()=>{const t=bh(a,0),n=Gc(t,Ch(a),_o(a));let r=$o(e,$o(s,n));const u=nu(i.shape,o);return u.length>0&&(r=oh(r,u)),sc(r,i.shape)}}}};const ay={kernelName:Rr,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=bh(n,Bo(0)),r=Bo(sm),s=Bo(am),a=$o(e,s),i=$o($o(e,r),hh(Io(n,"float32")));return Gc(t,a,i)}}}},iy={kernelName:Br,gradFunc:(e,t,n)=>{const{blockShape:r,paddings:s}=n;return{x:()=>dc(e,r,s)}}},oy={kernelName:Vr,gradFunc:(e,t,n)=>{const{axis:r}=n;return{x:()=>oc(e,r)}}},uy=[Km,Xm,Ym,Jm,Zm,Qm,eg,tg,ng,rg,sg,ag,og,lg,cg,hg,dg,pg,fg,mg,gg,yg,xg,bg,vg,kg,Ig,Sg,Ng,Tg,{kernelName:Jt,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,s=ru(n.shape,r.shape);return{a:()=>{const t=Co(e,Io(r,"float32")),a=nu(n.shape,s);return a.length>0?sc(oh(t,a),n.shape):t},b:()=>{let t=$o(e,Io(n,"float32"));const a=nu(r.shape,s);a.length>0&&(t=sc(oh(t,a),r.shape));const i=Ro(r);return Mu(Co(t,Io(i,"float32")))}}}},Eg,Cg,$g,Ag,Rg,Mg,_g,Fg,Dg,zg,Pg,Bg,Vg,Ug,Wg,Gg,Hg,jg,Kg,Yg,Yg,Jg,Qg,ty,{kernelName:Hn,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{axis:s}=n,a=we(s,r.shape),i=le(Qc(r.shape,a)[1]);return{x:()=>{const t=r.shape.slice();a.forEach(e=>{t[e]=1});const n=sc(e,t);return Co($o(n,jh(r.shape,"float32")),i)}}}},{kernelName:jn,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const r=n,{axis:s}=r,[a,i]=t,o=Xg(e,i,a,we(s,a.shape));return{x:()=>o.x()}}},{kernelName:qn,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t;return{a:()=>$o(e,Io(Nh(n,r),"float32")),b:()=>$o(e,Io(bh(n,r),"float32"))}}},ny,{kernelName:Xn,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,s=ru(n.shape,r.shape);return{a:()=>{const t=nu(n.shape,s);return t.length>0?sc(oh(e,t),n.shape):e},b:()=>{const t=$o(e,Mu(gh(Co(n,r)))),a=nu(r.shape,s);return a.length>0?sc(oh(t,a),r.shape):t}}}},{kernelName:Jn,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,s=ru(n.shape,r.shape);return{a:()=>{const t=$o(e,Io(r,"float32")),a=nu(n.shape,s);return a.length>0?sc(oh(t,a),n.shape):t},b:()=>{const t=$o(e,Io(n,"float32")),a=nu(r.shape,s);return a.length>0?sc(oh(t,a),r.shape):t}}}},{kernelName:Zn,gradFunc:e=>({x:()=>Mu(e)})},{kernelName:sr,inputsToSave:["indices"],gradFunc:(e,t)=>{const n=t[0];return{indices:()=>Hh(n.shape,"float32")}}},{kernelName:rr,gradFunc:e=>({x:()=>_o(e)})},{kernelName:ar,saveAllInputs:!0,gradFunc:(e,t,n)=>{const{axis:r}=n;return fp(e,r).map(e=>()=>e)}},ry,ry,sy,{kernelName:lr,inputsToSave:["x","alpha"],gradFunc:(e,t)=>{const[n,r]=t,s=bh(n,0);return{x:()=>Gc(s,e,$o(e,r)),alpha:()=>{let t=Gc(s,_o(e),$o(e,n));const a=nu(r.shape,e.shape);return a.length>0&&(t=oh(t,a)),sc(t,r.shape)}}}},{kernelName:cr,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{axis:s}=n;let a=[];return a=null==s?r.shape.map((e,t)=>t):"number"==typeof s?[s]:s,{x:()=>function(e,t,n){const r=e.shape.length,s=r-n.length,a=nh(n,r);let i=e;null!=a&&(i=Du(e,a));const o=i.shape.slice(),u=o.splice(r-n.length,n.length).reduce((e,t)=>e*t,1);o.push(u);let l=function(e,t,n){const r=e.shape.slice();r[n]=1;const s=sc(t,r),a=Oc(e,n,!0,!1),i=Oc(e,n,!0,!0),o=$o(a,i);return $o(s,o)}(i.reshape(o),t,s);if(l=l.reshape(i.shape),null!=a){const e=rh(a);l=Du(l,e)}return l}(r,e,a)}}},{kernelName:gr,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Co(e,Mu(Ro(n)))}}},{kernelName:Ir,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t,r=$o(Nh(n,6),tp(n));return{x:()=>$o(e,Io(r,"float32"))}}},{kernelName:yr,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>$o(e,Io(tp(n),"float32"))}}},{kernelName:br,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>sc(e,n.shape)}}},{kernelName:vr,inputsToSave:["images"],gradFunc:(e,t,n)=>{const[r]=t,s={dy:e,images:r};return{images:()=>Da.runKernel(kr,s,n)}}},{kernelName:xr,inputsToSave:["images"],gradFunc:(e,t,n)=>{const[r]=t,s={dy:e,images:r};return{images:()=>Da.runKernel(wr,s,n)}}},{kernelName:Sr,gradFunc:(e,t,n)=>{const{dims:r}=n,s=we(r,e.shape);return{x:()=>$d(e,s)}}},{kernelName:Nr,gradFunc:e=>({x:()=>_o(e)})},{kernelName:Tr,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Mu(Co(e,$o(Jo(n,1.5),2)))}}},{kernelName:Ar,inputsToSave:["condition"],gradFunc:(e,t)=>{const[n]=t;return{condition:()=>Io(_o(n),"float32"),t:()=>$o(e,Io(n,e.dtype)),e:()=>$o(e,Io(Dh(n),e.dtype))}}},ay,{kernelName:Or,outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t;return{x:()=>$o(e,$o(n,Zo(Bo(1),n)))}}},{kernelName:Dr,gradFunc:e=>({x:()=>_o(e)})},{kernelName:Mr,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>$o(Fc(Io(n,"float32")),e)}}},{kernelName:Fr,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>$o(Dc(Io(n,"float32")),e)}}},{kernelName:_r,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{begin:s,size:a}=n,i=r.shape,[o,u]=dl(r,s,a),l=[];for(let t=0;t<e.rank;t++)l.push([o[t],i[t]-o[t]-u[t]]);return{x:()=>rd(e,l)}}},{kernelName:Ur,outputsToSave:[!0],gradFunc:(e,t,n)=>{const[r]=t,{dim:s}=n,a=$o(e,r);return{logits:()=>Zo(a,$o(oh(a,[s],!0),r))}}},{kernelName:Lr,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>$o(e,uc(n))}}},iy,iy,oy,oy,{kernelName:zr,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Co(e,$o(Ao(Io(n,"float32")),2))}}},{kernelName:Kr,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,s=Bo(2);return{a:()=>$o(e,$o(s,Zo(n,r))),b:()=>$o(e,$o(s,Zo(r,n)))}}},{kernelName:Xr,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>$o(e,$o(Io(n,"float32"),2))}}},{kernelName:ps,gradFunc:e=>({x:()=>_o(e)})},{kernelName:ts,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,s=ru(n.shape,r.shape);return{a:()=>{let t=e;const r=nu(n.shape,s);return r.length>0&&(t=oh(t,r)),sc(t,n.shape)},b:()=>{let t=e;const n=nu(r.shape,s);return n.length>0&&(t=oh(t,n)),sc(Mu(t),r.shape)}}}},{kernelName:Pr,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,s=r.shape.slice(),{axis:a}=n;we(a,r.shape).forEach(e=>{s[e]=1});const i=sc(e,s),o=$o(i,jh(r.shape,"float32"));return{x:()=>o}}},{kernelName:ns,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Co(e,Ro(Fc(n)))}}},{kernelName:rs,outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t;return{x:()=>$o(Zo(Bo(1),Ro(n)),e)}}},{kernelName:ss,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{reps:s}=n;return{x:()=>{let t=_o(r);if(1===r.rank)for(let n=0;n<s[0];++n)t=To(t,lc(e,[n*r.shape[0]],[r.shape[0]]));else if(2===r.rank)for(let n=0;n<s[0];++n)for(let a=0;a<s[1];++a)t=To(t,lc(e,[n*r.shape[0],a*r.shape[1]],[r.shape[0],r.shape[1]]));else if(3===r.rank)for(let n=0;n<s[0];++n)for(let a=0;a<s[1];++a)for(let i=0;i<s[2];++i)t=To(t,lc(e,[n*r.shape[0],a*r.shape[1],i*r.shape[2]],[r.shape[0],r.shape[1],r.shape[2]]));else{if(4!==r.rank)throw new Error(`Gradient for tile operation is not implemented for rank-${r.rank} tensors yet.`);for(let n=0;n<s[0];++n)for(let a=0;a<s[1];++a)for(let i=0;i<s[2];++i)for(let o=0;o<s[3];++o)t=To(t,lc(e,[n*r.shape[0],a*r.shape[1],i*r.shape[2],o*r.shape[3]],[r.shape[0],r.shape[1],r.shape[2],r.shape[3]]))}return t}}}},{kernelName:os,gradFunc:(e,t,n)=>{const r=n,{perm:s}=r,a=rh(s);return{x:()=>Du(e,a)}}},{kernelName:ls,gradFunc:(e,t,n)=>{const r=n,{axis:s}=r;return{value:()=>ep(e,s)}}},{kernelName:cs,inputsToSave:["segmentIds"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>function(e,t){const n=su(t,_o(t)),r=yh(e,n);let s=xh(t,Bo(0,"int32"));const a=r.rank-s.rank;for(let e=0;e<a;++e)s=dh(s,e+1);s=Fh(s,jh(r.shape,"bool"));const i=_o(r);return Gc(s,r,i)}(e,n)}}},{kernelName:ds,gradFunc:e=>({x:()=>_o(e)})}];for(const e of uy)Es(e);fa().prototype.abs=function(){return this.throwIfDisposed(),eu(this)},fa().prototype.acos=function(){return this.throwIfDisposed(),Rl(this)},fa().prototype.acosh=function(){return this.throwIfDisposed(),_l(this)},fa().prototype.add=function(e){return this.throwIfDisposed(),To(this,e)},fa().prototype.all=function(e,t){return this.throwIfDisposed(),Fl(this,e,t)},fa().prototype.any=function(e,t){return this.throwIfDisposed(),Dl(this,e,t)},fa().prototype.argMax=function(e){return this.throwIfDisposed(),Ol(this,e)},fa().prototype.argMin=function(e){return this.throwIfDisposed(),Ll(this,e)},fa().prototype.asScalar=function(){return this.throwIfDisposed(),ie(1===this.size,()=>"The array must have only 1 element."),sc(this,[])},fa().prototype.asType=function(e){return this.throwIfDisposed(),Io(this,e)},fa().prototype.as1D=function(){return this.throwIfDisposed(),sc(this,[this.size])},fa().prototype.as2D=function(e,t){return this.throwIfDisposed(),sc(this,[e,t])},fa().prototype.as3D=function(e,t,n){return this.throwIfDisposed(),sc(this,[e,t,n])},fa().prototype.as4D=function(e,t,n,r){return this.throwIfDisposed(),sc(this,[e,t,n,r])},fa().prototype.as5D=function(e,t,n,r,s){return this.throwIfDisposed(),sc(this,[e,t,n,r,s])},fa().prototype.asin=function(){return this.throwIfDisposed(),zl(this)},fa().prototype.asinh=function(){return this.throwIfDisposed(),Pl(this)},fa().prototype.atan=function(){return this.throwIfDisposed(),Bl(this)},fa().prototype.atan2=function(e){return this.throwIfDisposed(),Vl(this,e)},fa().prototype.atanh=function(){return this.throwIfDisposed(),Ul(this)},fa().prototype.avgPool=function(e,t,n,r){return this.throwIfDisposed(),ac(this,e,t,n,r)},fa().prototype.batchToSpaceND=function(e,t){return this.throwIfDisposed(),dc(this,e,t)},fa().prototype.batchNorm=function(e,t,n,r,s){return this.throwIfDisposed(),pc(this,e,t,n,r,s)},fa().prototype.broadcastTo=function(e){return this.throwIfDisposed(),wc(this,e)},fa().prototype.cast=function(e){return this.throwIfDisposed(),Io(this,e)},fa().prototype.ceil=function(){return this.throwIfDisposed(),vc(this)},fa().prototype.clipByValue=function(e,t){return this.throwIfDisposed(),kc(this,e,t)},fa().prototype.concat=function(e,t){return this.throwIfDisposed(),e instanceof pa&&(e=[e]),oc([this,...e],t)},fa().prototype.conv1d=function(e,t,n,r,s,a){return this.throwIfDisposed(),Cc(this,e,t,n,r,s,a)},fa().prototype.conv2dTranspose=function(e,t,n,r,s){return this.throwIfDisposed(),Ac(this,e,t,n,r,s)},fa().prototype.conv2d=function(e,t,n,r,s,a){return this.throwIfDisposed(),Ec(this,e,t,n,r,s,a)},fa().prototype.cos=function(){return this.throwIfDisposed(),Fc(this)},fa().prototype.cosh=function(){return this.throwIfDisposed(),Dc(this)},fa().prototype.cumprod=function(e,t,n){return this.throwIfDisposed(),Oc(this,e,t,n)},fa().prototype.cumsum=function(e,t,n){return this.throwIfDisposed(),Lc(this,e,t,n)},fa().prototype.depthToSpace=function(e,t){return this.throwIfDisposed(),Pc(this,e,t)},fa().prototype.depthwiseConv2d=function(e,t,n,r,s,a){return this.throwIfDisposed(),Bc(this,e,t,n,r,s,a)},fa().prototype.dilation2d=function(e,t,n,r,s){return this.throwIfDisposed(),Uc(this,e,t,n,r,s)},fa().prototype.divNoNan=function(e){return this.throwIfDisposed(),Hc(this,e)},fa().prototype.div=function(e){return this.throwIfDisposed(),Co(this,e)},fa().prototype.dot=function(e){return this.throwIfDisposed(),jc(this,e)},fa().prototype.elu=function(){return this.throwIfDisposed(),Kc(this)},fa().prototype.equal=function(e){return this.throwIfDisposed(),Wc(this,e)},fa().prototype.erf=function(){return this.throwIfDisposed(),Yc(this)},fa().prototype.euclideanNorm=function(e,t){return this.throwIfDisposed(),ch(this,e,t)},fa().prototype.exp=function(){return this.throwIfDisposed(),hh(this)},fa().prototype.expandDims=function(e){return this.throwIfDisposed(),dh(this,e)},fa().prototype.expm1=function(){return this.throwIfDisposed(),ph(this)},fa().prototype.fft=function(){return this.throwIfDisposed(),qd(this)},fa().prototype.flatten=function(){return this.throwIfDisposed(),sc(this,[this.size])},fa().prototype.floor=function(){return this.throwIfDisposed(),gh(this)},fa().prototype.floorDiv=function(e){return this.throwIfDisposed(),Eo(this,e)},fa().prototype.gather=function(e,t,n){return this.throwIfDisposed(),yh(this,e,t,n)},fa().prototype.greaterEqual=function(e){return this.throwIfDisposed(),xh(this,e)},fa().prototype.greater=function(e){return this.throwIfDisposed(),bh(this,e)},fa().prototype.ifft=function(){return this.throwIfDisposed(),Kd(this)},fa().prototype.irfft=function(){return this.throwIfDisposed(),Xd(this)},fa().prototype.isFinite=function(){return this.throwIfDisposed(),wh(this)},fa().prototype.isInf=function(){return this.throwIfDisposed(),vh(this)},fa().prototype.isNaN=function(){return this.throwIfDisposed(),kh(this)},fa().prototype.leakyRelu=function(e){return this.throwIfDisposed(),Ih(this,e)},fa().prototype.lessEqual=function(e){return this.throwIfDisposed(),Nh(this,e)},fa().prototype.less=function(e){return this.throwIfDisposed(),Sh(this,e)},fa().prototype.localResponseNormalization=function(e,t,n,r){return this.throwIfDisposed(),Eh(this,e,t,n,r)},fa().prototype.logSigmoid=function(){return this.throwIfDisposed(),Rh(this)},fa().prototype.logSoftmax=function(e){return this.throwIfDisposed(),_h(this,e)},fa().prototype.logSumExp=function(e,t){return this.throwIfDisposed(),Mh(this,e,t)},fa().prototype.log=function(){return this.throwIfDisposed(),Ch(this)},fa().prototype.log1p=function(){return this.throwIfDisposed(),$h(this)},fa().prototype.logicalAnd=function(e){return this.throwIfDisposed(),Fh(this,e)},fa().prototype.logicalNot=function(){return this.throwIfDisposed(),Dh(this)},fa().prototype.logicalOr=function(e){return this.throwIfDisposed(),Oh(this,e)},fa().prototype.logicalXor=function(e){return this.throwIfDisposed(),Lh(this,e)},fa().prototype.matMul=function(e,t,n){return this.throwIfDisposed(),Au(this,e,t,n)},fa().prototype.maxPool=function(e,t,n,r){return this.throwIfDisposed(),Vh(this,e,t,n,r)},fa().prototype.max=function(e,t){return this.throwIfDisposed(),ah(this,e,t)},fa().prototype.maximum=function(e){return this.throwIfDisposed(),su(this,e)},fa().prototype.mean=function(e,t){return this.throwIfDisposed(),Gh(this,e,t)},fa().prototype.min=function(e,t){return this.throwIfDisposed(),ih(this,e,t)},fa().prototype.minimum=function(e){return this.throwIfDisposed(),Kh(this,e)},fa().prototype.mirrorPad=function(e,t){return this.throwIfDisposed(),Xh(this,e,t)},fa().prototype.mod=function(e){return this.throwIfDisposed(),Yh(this,e)},fa().prototype.mul=function(e){return this.throwIfDisposed(),$o(this,e)},fa().prototype.neg=function(){return this.throwIfDisposed(),Mu(this)},fa().prototype.norm=function(e,t,n){return this.throwIfDisposed(),lh(this,e,t,n)},fa().prototype.notEqual=function(e){return this.throwIfDisposed(),ed(this,e)},fa().prototype.oneHot=function(e,t=1,n=0){return this.throwIfDisposed(),Ru(this,e,t,n)},fa().prototype.onesLike=function(){return this.throwIfDisposed(),td(this)},fa().prototype.pad=function(e,t){return this.throwIfDisposed(),rd(this,e,t)},fa().prototype.pool=function(e,t,n,r,s,a){return this.throwIfDisposed(),ld(this,e,t,n,r,s,a)},fa().prototype.pow=function(e){return this.throwIfDisposed(),Jo(this,e)},fa().prototype.prelu=function(e){return this.throwIfDisposed(),cd(this,e)},fa().prototype.prod=function(e,t){return this.throwIfDisposed(),hd(this,e,t)},fa().prototype.reciprocal=function(){return this.throwIfDisposed(),Td(this)},fa().prototype.relu=function(){return this.throwIfDisposed(),Ed(this)},fa().prototype.relu6=function(){return this.throwIfDisposed(),Cd(this)},fa().prototype.reshapeAs=function(e){return this.throwIfDisposed(),sc(this,e.shape)},fa().prototype.reshape=function(e){return this.throwIfDisposed(),sc(this,e)},fa().prototype.resizeBilinear=function(e,t,n){return this.throwIfDisposed(),of(this,e,t,n)},fa().prototype.resizeNearestNeighbor=function(e,t,n){return this.throwIfDisposed(),uf(this,e,t,n)},fa().prototype.reverse=function(e){return this.throwIfDisposed(),$d(this,e)},fa().prototype.rfft=function(){return this.throwIfDisposed(),Jd(this)},fa().prototype.round=function(){return this.throwIfDisposed(),Fd(this)},fa().prototype.rsqrt=function(){return this.throwIfDisposed(),Dd(this)},fa().prototype.selu=function(){return this.throwIfDisposed(),Od(this)},fa().prototype.separableConv2d=function(e,t,n,r,s,a){return this.throwIfDisposed(),Ld(this,e,t,n,r,s,a)},fa().prototype.sigmoid=function(){return this.throwIfDisposed(),uc(this)},fa().prototype.sign=function(){return this.throwIfDisposed(),Pd(this)},fa().prototype.sin=function(){return this.throwIfDisposed(),Bd(this)},fa().prototype.sinh=function(){return this.throwIfDisposed(),Vd(this)},fa().prototype.slice=function(e,t){return this.throwIfDisposed(),lc(this,e,t)},fa().prototype.softmax=function(e){return this.throwIfDisposed(),jd(this,e)},fa().prototype.softplus=function(){return this.throwIfDisposed(),Ah(this)},fa().prototype.spaceToBatchND=function(e,t){return this.throwIfDisposed(),ud(this,e,t)},fa().prototype.split=function(e,t){return this.throwIfDisposed(),Yd(this,e,t)},fa().prototype.sqrt=function(){return this.throwIfDisposed(),Ao(this)},fa().prototype.square=function(){return this.throwIfDisposed(),Ro(this)},fa().prototype.squaredDifference=function(e){return this.throwIfDisposed(),Zd(this,e)},fa().prototype.squeeze=function(e){return this.throwIfDisposed(),Qd(this,e)},fa().prototype.stack=function(e,t){this.throwIfDisposed();const n=e instanceof pa?[this,e]:[this,...e];return ep(n,t)},fa().prototype.step=function(e){return this.throwIfDisposed(),tp(this,e)},fa().prototype.stridedSlice=function(e,t,n,r,s,a,i,o){return this.throwIfDisposed(),np(this,e,t,n,r,s,a,i,o)},fa().prototype.sub=function(e){return this.throwIfDisposed(),Zo(this,e)},fa().prototype.sum=function(e,t){return this.throwIfDisposed(),oh(this,e,t)},fa().prototype.tan=function(){return this.throwIfDisposed(),rp(this)},fa().prototype.tanh=function(){return this.throwIfDisposed(),cc(this)},fa().prototype.tile=function(e){return this.throwIfDisposed(),fh(this,e)},fa().prototype.toBool=function(){return this.throwIfDisposed(),Io(this,"bool")},fa().prototype.toFloat=function(){return this.throwIfDisposed(),Io(this,"float32")},fa().prototype.toInt=function(){return this.throwIfDisposed(),Io(this,"int32")},fa().prototype.topk=function(e,t){return this.throwIfDisposed(),cp(this,e,t)},fa().prototype.transpose=function(e){return this.throwIfDisposed(),Du(this,e)},fa().prototype.unique=function(e){return this.throwIfDisposed(),dp(this,e)},fa().prototype.unsortedSegmentSum=function(e,t){return this.throwIfDisposed(),pp(this,e,t)},fa().prototype.unstack=function(e){return this.throwIfDisposed(),fp(this,e)},fa().prototype.where=function(e,t){return this.throwIfDisposed(),Gc(e,this,t)},fa().prototype.zerosLike=function(){return this.throwIfDisposed(),_o(this)};class ly extends Error{constructor(e){super(e),Object.setPrototypeOf(this,ly.prototype)}}class cy extends Error{constructor(e){super(e),Object.setPrototypeOf(this,cy.prototype)}}class hy extends Error{constructor(e){super(e),Object.setPrototypeOf(this,hy.prototype)}}class dy extends Error{constructor(e){super(e),Object.setPrototypeOf(this,dy.prototype)}}class py extends Error{constructor(e){super(e),Object.setPrototypeOf(this,py.prototype)}}Error;class fy{constructor(e){this.maxEntries=e||100,this.cache=new Map}get(e){let t;return this.cache.has(e)&&(t=this.cache.get(e),this.cache.delete(e),this.cache.set(e,t)),t}put(e,t){if(this.cache.has(e))this.cache.delete(e);else if(this.cache.size>=this.maxEntries){const e=this.cache.keys().next().value;this.cache.delete(e)}this.cache.set(e,t)}getMaxEntries(){return this.maxEntries}setMaxEntries(e){if(e<0)throw new Error(`The maxEntries of LRU caches must be at least 0, but got ${e}.`);if(this.maxEntries>e)for(let t=0;t<this.maxEntries-e;t++){const e=this.cache.keys().next().value;this.cache.delete(e)}this.maxEntries=e}}function my(e,t){if(Array.isArray(e)){let n=[];for(let r=0;r<t;r++)n=n.concat(e);return n}{const n=new Array(t);return n.fill(e),n}}function gy(e,t){if(!e)throw new py(t)}function yy(e,t){let n=0;for(const r of e)r===t&&n++;return n}function by(e){return 1===e.length?e[0]:e}function xy(e){return Array.isArray(e)?e:[e]}function wy(e){const t=e.replace(/(.)([A-Z][a-z0-9]+)/g,"$1_$2").replace(/([a-z])([A-Z])/g,"$1_$2").toLowerCase();return"_"!==t[0]?t:"private"+t}function vy(e){return e.length<=1||-1===e.indexOf("_")?e:e.replace(/[_]+(\\w|$)/g,(e,t)=>t.toUpperCase())}let ky={};function Iy(e){if(null==e)return null;const t={};return t.className=e.getClassName(),t.config=e.getConfig(),t}function Sy(e){if(null!=e&&"object"==typeof e)if(Array.isArray(e))e.forEach(e=>Sy(e));else{const t=Object.keys(e);for(const n of t){const t=e[n];null!=t&&"object"==typeof t&&(Array.isArray(t)||"ndarray"!==t.type||"number"!=typeof t.value?Sy(t):e[n]=t.value)}}}function Ny(e,t={},n={},r="object",s=!1){if("string"==typeof e){const s=e;let a;if(s in n)a=n[s];else if(s in ky)a=ky[s];else if(a=t[s],null==a)throw new hy(`Unknown ${r}: ${e}. This may be due to one of the following reasons:\\n1. The ${r} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.\\n2. The custom ${r} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);return a}{const a=e;if(null==a.className||null==a.config)throw new hy(`${r}: Improper config format: ${JSON.stringify(a)}.\\n\'className\' and \'config\' must set.`);const i=a.className;let o,u;if(i in n?[o,u]=n[i]:i in ky?[o,u]=ky.className:i in t&&([o,u]=t[i]),null==o)throw new hy(`Unknown ${r}: ${i}. This may be due to one of the following reasons:\\n1. The ${r} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.\\n2. The custom ${r} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);if(null!=u){const e={};for(const t of Object.keys(ky))e[t]=ky[t];for(const t of Object.keys(n))e[t]=n[t];a.config.customObjects=e;const t=Object.assign({},ky);for(const e of Object.keys(n))ky[e]=n[e];Sy(a.config);const r=u(o,a.config,n,s);return ky=Object.assign({},t),r}{const e=Object.assign({},ky);for(const e of Object.keys(n))ky[e]=n[e];const t=new o(a.config);return ky=Object.assign({},e),t}}}function Ty(e,t){return-1*function(e,t){return e<t?-1:e>t?1:0}(e,t)}function Ey(e){if(null==e)return e;const t=[];for(const n of e)-1===t.indexOf(n)&&t.push(n);return t}function Cy(e){if(null==e)throw new hy(`Invalid value in obj: ${JSON.stringify(e)}`);for(const t in e)if(e.hasOwnProperty(t))return!1;return!0}function $y(e,t,n){if(null!=n&&e.indexOf(n)<0)throw new hy(`${n} is not a valid ${t}.  Valid values are ${e} or null/undefined.`)}function Ay(e,t,n=0,r=1/0){return gy(n>=0),gy(r>=n),Array.isArray(e)&&e.length>=n&&e.length<=r&&e.every(e=>typeof e===t)}function Ry(e,t){Array.isArray(e)?(ie(e.length>0,()=>`${t} is unexpectedly an empty array.`),e.forEach((e,n)=>Ry(e,`element ${n+1} of ${t}`))):ie(Number.isInteger(e)&&e>0,()=>`Expected ${t} to be a positive integer, but got ${_y(e)}.`)}function _y(e){return null===e?"null":Array.isArray(e)?"["+e.map(e=>_y(e)).join(",")+"]":"string"==typeof e?`"${e}"`:`${e}`}function My(e){return"relu"===e?"relu":"linear"===e?"linear":"elu"===e?"elu":null}let Fy=0;function Dy(){return Fy++}const Oy={};function Ly(e=""){return e in Oy||(Oy[e]=0),Oy[e]+=1,e+Oy[e].toString()}const zy=["channelsFirst","channelsLast"],Py=["nearest","bilinear"],By=["valid","same","causal"],Vy=["max","avg"],Uy=["sum","mul","concat","ave"],Wy=new Map;function Gy(e){$y(zy,"DataFormat",e)}function Hy(e){$y(By,"PaddingMode",e)}function jy(e){$y(Vy,"PoolMode",e)}const qy=[];function Ky(e,t){qy.push(e);try{const e=t();return qy.pop(),e}catch(e){throw qy.pop(),e}}function Xy(e){if(!Zy(e))throw new Error("Not a valid tensor name: \'"+e+"\'");return(0===qy.length?"":qy.join("/")+"/")+e}function Yy(e){if(!Zy(e))throw new Error("Not a valid tensor name: \'"+e+"\'");Wy.has(e)||Wy.set(e,0);const t=Wy.get(e);if(Wy.set(e,Wy.get(e)+1),t>0){const n=`${e}_${t}`;return Wy.set(n,1),n}return e}const Jy=new RegExp(/^[A-Za-z0-9][-A-Za-z0-9\\._\\/]*$/);function Zy(e){return!!e.match(Jy)}function Qy(e){return e===parseInt(e.toString(),10)}function eb(e,t,n){null==t&&(t=0),null==n&&(n=e.length);let r=1;for(let s=t;s<n;++s)r*=e[s];return r}function tb(e){if(0===e.length)return Number.NaN;let t=Number.POSITIVE_INFINITY;for(let n=0;n<e.length;n++){const r=e[n];r<t&&(t=r)}return t}function nb(e){if(0===e.length)return Number.NaN;let t=Number.NEGATIVE_INFINITY;for(let n=0;n<e.length;n++){const r=e[n];r>t&&(t=r)}return t}function rb(e,t){if(t<e)throw new hy(`end (${t}) < begin (${e}) is forbidden.`);const n=[];for(let r=e;r<t;++r)n.push(r);return n}let sb;function ab(){return null==sb&&(sb=xi().epsilon()),sb}function ib(e,t){return Io(e,t)}function ob(e,t=-1){const n=e.shape.slice();return t<0&&(t=n.length+t+1),n.splice(t,0,1),sc(e,n)}function ub(e,t,n){return ui(()=>{switch(e.rank){case 1:return Ud(e,t,n);case 2:return Wd(e,[t,0],[n,e.shape[1]]);case 3:return Gd(e,[t,0,0],[n,e.shape[1],e.shape[2]]);case 4:return Hd(e,[t,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3]]);case 5:return lc(e,[t,0,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3],e.shape[4]]);case 6:return lc(e,[t,0,0,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3],e.shape[4],e.shape[5]]);default:throw new hy(`sliceAlongFirstAxis() received an unsupported tensor rank: ${e.rank}`)}})}function lb(e,t,n){return ui(()=>{switch(e.rank){case 1:return Ud(e,t,n);case 2:return Wd(e,[0,t],[e.shape[0],n]);case 3:return Gd(e,[0,0,t],[e.shape[0],e.shape[1],n]);case 4:return Hd(e,[0,0,0,t],[e.shape[0],e.shape[1],e.shape[2],n]);default:throw new hy(`sliceAlongLastAxis() received an unsupported tensor rank: ${e.rank}`)}})}function cb(e,t,n,r){return ui(()=>{switch(e.rank){case 1:return Ud(e,t,n);case 2:switch(r){case 1:return ub(e,t,n);case 2:return lb(e,t,n);default:throw new hy(`The axis is not within the rank of the tensor ${r}`)}case 3:switch(r){case 1:return ub(e,t,n);case 2:return Gd(e,[0,t,0],[e.shape[0],n,e.shape[2]]);case 3:return lb(e,t,n);default:throw new hy(`The axis is not within the rank of the tensor ${r}`)}case 4:switch(r){case 1:return ub(e,t,n);case 2:return Hd(e,[0,t,0,0],[e.shape[0],n,e.shape[2],e.shape[3]]);case 3:return Hd(e,[0,0,t,0],[e.shape[0],e.shape[1],n,e.shape[3]]);case 4:return lb(e,t,n);default:throw new hy(`The axis is not within the rank of the tensor ${r}`)}default:throw new hy(`sliceAlongLastAxis() received an unsupported tensor rank: ${e.rank}`)}})}function hb(e,t=-1){let n;return t<0&&(n=e[0].rank,t=0!==n?n:0),t===e[0].rank&&(t=-1),oc(e,t)}function db(e,t){switch(e.rank){case 1:return Ic([e,t]);case 2:return Sc([e,t],0);case 3:return Nc([e,t],0);case 4:return Tc([e,t],0);default:throw new hy(`concatAlongFirstAxis() received an unsupported tensor rank: ${e.rank}`)}}function pb(e,t){if(Array.isArray(t)||(t=[t]),e.rank!==t.length)throw new hy(`The length of input n (${t.length}) does not match the number of dimensions in input x (${e.rank})`);return fh(e,t)}function fb(e,t=0,n=1,r,s){return vd(e,t,n,r,s)}function mb(e,t,n,r){if(e.rank<2||t.rank<2)throw new dy(`dot requires both inputs to be rank >= 2 but got x shape = ${e.shape} and y shape = ${t.shape}`);if(t.rank>=3&&e.shape.slice(-1)[0]!==t.shape.slice(-2)[0])throw new dy(`If rank y >= 3, then the second last dim of y must equal the last dim of x but got x shape = ${e.shape} and  y shape = ${t.shape}`);if(2===e.rank&&2===t.rank)return Lp({a:e,b:t,transposeA:!1,transposeB:!1,bias:r?bb(e.rank,r,"channelsLast"):null,activation:n});{const s=e.shape.slice(),a=s.pop();e=sc(e,[-1,a]);const i=t.shape.slice(),o=i.pop(),u=i.pop(),l=[...i,o],c=Array.from({length:t.rank},(e,n)=>0===n?t.rank-2:n<=t.rank-2?n-1:n);t=sc(Du(t,c),[u,-1]);const h=[...s,...l];return sc(Lp({a:e,b:t,transposeA:!1,transposeB:!1,bias:r?bb(e.rank,r,"channelsLast"):null,activation:n}),h)}}function gb(e,t,n){return ui(()=>(t=Array.isArray(t)?sp(t,"int32"):Io(t,"int32"),yh(e,t,n)))}function yb(e){return $o(e,e)}function bb(e,t,n){const r=t.shape;if(1!==t.rank&&t.rank!==e)throw new hy(`Unexpected bias dimensions: ${t.rank}; expected it to be 1 or ${e}`);if(5===e){if("channelsFirst"===n)return 1===r.length?sc(t,[1,r[0],1,1,1]):sc(t,[1,r[3],r[0],r[1],r[2]]);if("channelsLast"===n)return 1===r.length?sc(t,[1,1,1,1,r[0]]):sc(t,[1].concat(r))}else if(4===e){if("channelsFirst"===n)return 1===r.length?sc(t,[1,r[0],1,1]):sc(t,[1,r[2],r[0],r[1]]);if("channelsLast"===n)return 1===r.length?sc(t,[1,1,1,r[0]]):sc(t,[1].concat(r))}else if(3===e){if("channelsFirst"===n)return 1===r.length?sc(t,[1,r[0],1]):sc(t,[1,r[1],r[0]]);if("channelsLast"===n)return 1===r.length?sc(t,[1,1,r[0]]):sc(t,[1].concat(r))}else if(e<3)return t;throw new hy(`Unsupported input rank by biasAdd: ${t.rank}`)}function xb(e,t,n){return ui(()=>(null==n&&(n="channelsLast"),Gy(n),To(e,bb(e.rank,t,n))))}function wb(e,t,n,r){return ui(()=>Sp(e,t,n,r))}function vb(e,t,n=!1){return n?e():t()}const kb=["fanIn","fanOut","fanAvg"],Ib=["normal","uniform","truncatedNormal"];class Sb extends Wo{fromConfigUsesCustomObjects(){return!1}getConfig(){return{}}}class Nb extends Sb{apply(e,t){return Hh(e,t)}}Nb.className="Zeros",Ho(Nb);class Tb extends Sb{apply(e,t){return jh(e,t)}}Tb.className="Ones",Ho(Tb);class Eb extends Sb{constructor(e){if(super(),"object"!=typeof e)throw new hy(`Expected argument of type ConstantConfig but got ${e}`);if(void 0===e.value)throw new hy(`config must have value set but got ${e}`);this.value=e.value}apply(e,t){return ui(()=>$o(Bo(this.value),jh(e,t)))}getConfig(){return{value:this.value}}}Eb.className="Constant",Ho(Eb);class Cb extends Sb{constructor(e){super(),this.DEFAULT_MINVAL=-.05,this.DEFAULT_MAXVAL=.05,this.minval=e.minval||this.DEFAULT_MINVAL,this.maxval=e.maxval||this.DEFAULT_MAXVAL,this.seed=e.seed}apply(e,t){return Id(e,this.minval,this.maxval,t,this.seed)}getConfig(){return{minval:this.minval,maxval:this.maxval,seed:this.seed}}}Cb.className="RandomUniform",Ho(Cb);class $b extends Sb{constructor(e){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=e.mean||this.DEFAULT_MEAN,this.stddev=e.stddev||this.DEFAULT_STDDEV,this.seed=e.seed}apply(e,t){if("float32"!==(t=t||"float32")&&"int32"!==t)throw new dy(`randomNormal does not support dType ${t}.`);return fb(e,this.mean,this.stddev,t,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}$b.className="RandomNormal",Ho($b);class Ab extends Sb{constructor(e){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=e.mean||this.DEFAULT_MEAN,this.stddev=e.stddev||this.DEFAULT_STDDEV,this.seed=e.seed}apply(e,t){if("float32"!==(t=t||"float32")&&"int32"!==t)throw new dy(`truncatedNormal does not support dType ${t}.`);return hp(e,this.mean,this.stddev,t,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}Ab.className="TruncatedNormal",Ho(Ab);class Rb extends Sb{constructor(e){super(),this.gain=null!=e.gain?e.gain:1}apply(e,t){return ui(()=>{if(2!==e.length||e[0]!==e[1])throw new hy("Identity matrix initializer can only be used for 2D square matrices.");return $o(this.gain,mh(e[0]))})}getConfig(){return{gain:this.gain}}}Rb.className="Identity",Ho(Rb);class _b extends Sb{constructor(e){if(super(),e.scale<0)throw new hy(`scale must be a positive float. Got: ${e.scale}`);var t;this.scale=null==e.scale?1:e.scale,this.mode=null==e.mode?"fanIn":e.mode,t=this.mode,$y(kb,"FanMode",t),this.distribution=null==e.distribution?"normal":e.distribution,function(e){$y(Ib,"Distribution",e)}(this.distribution),this.seed=e.seed}apply(e,t){const n=function(e,t="channelsLast"){let n,r;if(Gy(t),2===e.length)n=e[0],r=e[1];else if(-1!==[3,4,5].indexOf(e.length)){if("channelsFirst"===t){const t=eb(e,2);n=e[1]*t,r=e[0]*t}else if("channelsLast"===t){const t=eb(e,0,e.length-2);n=e[e.length-2]*t,r=e[e.length-1]*t}}else{const t=eb(e);n=Math.sqrt(t),r=Math.sqrt(t)}return[n,r]}(e),r=n[0],s=n[1];let a=this.scale;if("fanIn"===this.mode?a/=Math.max(1,r):"fanOut"===this.mode?a/=Math.max(1,s):a/=Math.max(1,(r+s)/2),"normal"===this.distribution){const n=Math.sqrt(a);if("float32"!==(t=t||"float32")&&"int32"!==t)throw new dy(`${this.getClassName()} does not support dType ${t}.`);return hp(e,0,n,t,this.seed)}{const n=Math.sqrt(3*a);return Id(e,-n,n,t,this.seed)}}getConfig(){return{scale:this.scale,mode:this.mode,distribution:this.distribution,seed:this.seed}}}_b.className="VarianceScaling",Ho(_b);class Mb extends _b{constructor(e){super({scale:1,mode:"fanAvg",distribution:"uniform",seed:null==e?null:e.seed})}getClassName(){return _b.className}}Mb.className="GlorotUniform",Ho(Mb);class Fb extends _b{constructor(e){super({scale:1,mode:"fanAvg",distribution:"normal",seed:null==e?null:e.seed})}getClassName(){return _b.className}}Fb.className="GlorotNormal",Ho(Fb);class Db extends _b{constructor(e){super({scale:2,mode:"fanIn",distribution:"normal",seed:null==e?null:e.seed})}getClassName(){return _b.className}}Db.className="HeNormal",Ho(Db);class Ob extends _b{constructor(e){super({scale:2,mode:"fanIn",distribution:"uniform",seed:null==e?null:e.seed})}getClassName(){return _b.className}}Ob.className="HeUniform",Ho(Ob);class Lb extends _b{constructor(e){super({scale:1,mode:"fanIn",distribution:"normal",seed:null==e?null:e.seed})}getClassName(){return _b.className}}Lb.className="LeCunNormal",Ho(Lb);class zb extends _b{constructor(e){super({scale:1,mode:"fanIn",distribution:"uniform",seed:null==e?null:e.seed})}getClassName(){return _b.className}}zb.className="LeCunUniform",Ho(zb);class Pb extends Sb{constructor(e){super(),this.DEFAULT_GAIN=1,this.ELEMENTS_WARN_SLOW=2e3,this.gain=null==e.gain?this.DEFAULT_GAIN:e.gain,this.seed=e.seed}apply(e,t){return ui(()=>{if(e.length<2)throw new dy("Shape must be at least 2D.");if("int32"!==t&&"float32"!==t&&void 0!==t)throw new TypeError(`Unsupported data type ${t}.`);const n=le(e.slice(0,-1)),r=e[e.length-1],s=n*r;s>this.ELEMENTS_WARN_SLOW&&console.warn(`Orthogonal initializer is being called on a matrix with more than ${this.ELEMENTS_WARN_SLOW} (${s}) elements: Slowness may result.`);const a=fb([Math.max(r,n),Math.min(r,n)],0,1,t,this.seed),i=Of.qr(a,!1);let o=i[0];const u=i[1].flatten().stridedSlice([0],[Math.min(r,n)*Math.min(r,n)],[Math.min(r,n)+1]);return o=$o(o,u.sign()),n<r&&(o=o.transpose()),$o(Bo(this.gain),o.reshape(e))})}getConfig(){return{gain:this.gain,seed:this.seed}}}Pb.className="Orthogonal",Ho(Pb);const Bb={constant:"Constant",glorotNormal:"GlorotNormal",glorotUniform:"GlorotUniform",heNormal:"HeNormal",heUniform:"HeUniform",identity:"Identity",leCunNormal:"LeCunNormal",leCunUniform:"LeCunUniform",ones:"Ones",orthogonal:"Orthogonal",randomNormal:"RandomNormal",randomUniform:"RandomUniform",truncatedNormal:"TruncatedNormal",varianceScaling:"VarianceScaling",zeros:"Zeros"};function Vb(e,t={}){return Ny(e,Go.getMap().classNameMap,t,"initializer")}function Ub(e){return Iy(e)}function Wb(e){if("string"==typeof e){const t=e in Bb?Bb[e]:e;if("GlorotNormal"===t)return new Fb;if("GlorotUniform"===t)return new Mb;if("HeNormal"===t)return new Db;if("HeUniform"===t)return new Ob;if("LeCunNormal"===t)return new Lb;if("LeCunUniform"===t)return new zb;{const e={};return e.className=t,e.config={},Vb(e)}}return e instanceof Sb?e:Vb(e)}function Gb(e){return Array.isArray(e)&&Array.isArray(e[0])}function Hb(e){return 0===e.length?[]:Array.isArray(e[0])?e:[e]}function jb(e){let t;if(Array.isArray(e)){if(1!==e.length)throw new hy(`Expected Tensor length to be 1; got ${e.length}`);t=e[0]}else t=e;return t}function qb(e){if(Array.isArray(e)&&Array.isArray(e[0])){if(1===e.length)return e[0];throw new hy(`Expected exactly 1 Shape; got ${e.length}`)}return e}function Kb(e){let t=0;for(const n of e)0===n.shape.length?t+=1:t+=n.shape.reduce((e,t)=>e*t);return t}const Xb="Variable";class Yb{constructor(e,t="float32",n=Xb,r=!0,s=null){this.dtype=null==t?"float32":t,this.shape=e.shape,this.id=Dy(),n=null==n?Xb:n,this.originalName=Xy(n),this.name=Yy(this.originalName),this.trainable_=r,this.constraint=s,this.val=gp(e,this.trainable_,this.name,this.dtype)}read(){return this.assertNotDisposed(),this.val}write(e){return this.assertNotDisposed(),function(e,t){if(e.shape.toString()!==t.shape.toString())throw new Error("Shape mismatch: "+JSON.stringify(e.shape)+" vs. "+JSON.stringify(t.shape))}(this.val,e),this.val.id!==e.id&&(this.val.assign(e),null!=this.constraint&&this.val.assign(this.constraint.apply(this.val))),this}dispose(){this.assertNotDisposed(),this.val.dispose()}assertNotDisposed(){if(this.val.isDisposed)throw new Error(`LayersVariable ${this.name} is already disposed.`)}get trainable(){return this.trainable_}set trainable(e){this.trainable_=e,this.val.trainable=e}}function Jb(e){return e.map(e=>e.read())}function Zb(e){e.forEach(e=>{e[0].write(e[1])})}class Qb{constructor(e){this.dtype=e.dtype,this.shape=e.shape,null!=e.shape?this.ndim=e.shape.length:this.ndim=e.ndim,this.maxNDim=e.maxNDim,this.minNDim=e.minNDim,this.axes=e.axes||{}}}class ex{constructor(e,t,n,r,s,a,i){this.dtype=e,this.shape=t,this.sourceLayer=n,this.inputs=r,this.callArgs=s,this.outputTensorIndex=i,this.id=Dy(),null!=a&&(this.originalName=Xy(a),this.name=Yy(this.originalName)),this.rank=t.length}}let tx=0;class nx{constructor(e,t){this.callArgs=t,this.id=tx++,this.outboundLayer=e.outboundLayer,this.inboundLayers=e.inboundLayers,this.nodeIndices=e.nodeIndices,this.tensorIndices=e.tensorIndices,this.inputTensors=e.inputTensors,this.outputTensors=e.outputTensors,this.inputMasks=e.inputMasks,this.outputMasks=e.outputMasks,this.inputShapes=e.inputShapes,this.outputShapes=e.outputShapes;for(const t of e.inboundLayers)null!=t&&t.outboundNodes.push(this);e.outboundLayer.inboundNodes.push(this)}getConfig(){const e=[];for(const t of this.inboundLayers)null!=t?e.push(t.name):e.push(null);return{outboundLayer:this.outboundLayer?this.outboundLayer.name:null,inboundLayers:e,nodeIndices:this.nodeIndices,tensorIndices:this.tensorIndices}}}let rx=0;class sx extends Wo{constructor(e={}){super(),this._callHook=null,this._addedWeightNames=[],this._stateful=!1,this.id=rx++,this.activityRegularizer=null,this.inputSpec=null,this.supportsMasking=!1,this._trainableWeights=[],this._nonTrainableWeights=[],this._losses=[],this._updates=[],this._built=!1,this.inboundNodes=[],this.outboundNodes=[];let t=e.name;if(!t){const e=this.getClassName();t=wy(e)+"_"+Ly(e)}if(this.name=t,this.trainable_=null==e.trainable||e.trainable,null!=e.inputShape||null!=e.batchInputShape){let t;if(null!=e.batchInputShape)t=e.batchInputShape;else if(null!=e.inputShape){let n=null;null!=e.batchSize&&(n=e.batchSize),t=[n].concat(e.inputShape)}this.batchInputShape=t;let n=e.dtype;null==n&&(n=e.inputDType),null==n&&(n="float32"),this.dtype=n}null!=e.weights?this.initialWeights=e.weights:this.initialWeights=null,this._refCount=null,this.fastWeightInitDuringBuild=!1}static nodeKey(e,t){return e.name+"_ib-"+t.toString()}getNodeAtIndex(e,t){if(0===this.inboundNodes.length)throw new cy(`The layer has never been called and thus has no defined ${t}.`);if(this.inboundNodes.length<=e)throw new hy(`Asked to get ${t} at node ${e}, but the layer has only ${this.inboundNodes.length} inbound nodes.`);return this.inboundNodes[e]}getInputAt(e){return by(this.getNodeAtIndex(e,"input").inputTensors)}getOutputAt(e){return by(this.getNodeAtIndex(e,"output").outputTensors)}get input(){if(this.inboundNodes.length>1)throw new ly(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer input" is ill-defined. Use \\`getInputAt(nodeIndex)\\` instead.`);if(0===this.inboundNodes.length)throw new ly(`Layer ${this.name} is not connected, no input to return.`);return by(this.getNodeAtIndex(0,"input").inputTensors)}get output(){if(0===this.inboundNodes.length)throw new ly(`Layer ${this.name} has no inbound nodes.`);if(this.inboundNodes.length>1)throw new ly(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer output" is ill-defined. Use \\`getOutputAt(nodeIndex)\\` instead.`);return by(this.getNodeAtIndex(0,"output").outputTensors)}get losses(){return this._losses}calculateLosses(){return this.losses.map(e=>e())}get updates(){return this._updates}get built(){return this._built}set built(e){this._built=e}get trainable(){return this.trainable_}set trainable(e){this._trainableWeights.forEach(t=>t.trainable=e),this.trainable_=e}get trainableWeights(){return this.trainable_?this._trainableWeights.filter(e=>e.trainable):[]}set trainableWeights(e){this._trainableWeights=e}get nonTrainableWeights(){return this.trainable?this._trainableWeights.filter(e=>!e.trainable).concat(this._nonTrainableWeights):this._trainableWeights.concat(this._nonTrainableWeights)}set nonTrainableWeights(e){this._nonTrainableWeights=e}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}get stateful(){return this._stateful}resetStates(){if(!this.stateful)throw new Error("Cannot call the resetStates() method of a non-stateful Layer object.")}assertInputCompatibility(e){const t=xy(e);if(null==this.inputSpec||0===this.inputSpec.length)return;const n=xy(this.inputSpec);if(t.length!==n.length)throw new hy(`Layer ${this.name} expects ${n.length} inputs, but it received ${t.length} input tensors. Input received: ${e}`);for(let e=0;e<t.length;e++){const r=t[e],s=n[e];if(null==s)continue;const a=r.rank;if(null!=s.ndim&&a!==s.ndim)throw new hy(`Input ${e} is incompatible with layer ${this.name}: expected ndim=${s.ndim}, found ndim=${a}`);if(null!=s.maxNDim&&a>s.maxNDim)throw new hy(`Input ${e} is incompatible with layer ${this.name}: expected max_ndim=${s.maxNDim}, found ndim=${a}`);if(null!=s.minNDim&&a<s.minNDim)throw new hy(`Input ${e} is incompatible with layer ${this.name}: expected min_ndim=${s.minNDim}, found ndim=${a}.`);if(null!=s.dtype&&r.dtype!==s.dtype)throw new hy(`Input ${e} is incompatible with layer ${this.name} : expected dtype=${s.dtype}, found dtype=${r.dtype}.`);if(s.axes){const t=r.shape;for(const n in s.axes){const r=Number(n),a=s.axes[n],i=r>=0?t[r]:t[t.length+r];if(null!=a&&-1===[a,null].indexOf(i))throw new hy(`Input ${e} is incompatible with layer ${this.name}: expected axis ${r} of input shape to have value ${a} but got shape ${t}.`)}}if(null!=s.shape)for(let t=0;t<s.shape.length;++t){const n=s.shape[t],a=r.shape[t];if(null!=n&&null!=a&&n!==a)throw new hy(`Input ${e} is incompatible with layer ${this.name}: expected shape=${s.shape}, found shape=${r.shape}.`)}}}call(e,t){return e}invokeCallHook(e,t){null!=this._callHook&&this._callHook(e,t)}setCallHook(e){this._callHook=e}clearCallHook(){this._callHook=null}apply(e,t){t=t||{},this.assertNotDisposed();const n=xy(e),r=function(e){let t=!0;for(const n of xy(e))if(!(n instanceof ex)){t=!1;break}return t}(e),s=function(e){let t=!0;for(const n of xy(e))if(n instanceof ex){t=!1;break}return t}(e);if(r===s)throw new hy("Arguments to apply() must be all SymbolicTensors or all Tensors");return Ky(this.name,()=>{if(!this.built){this.assertInputCompatibility(e);const t=[];for(const n of xy(e))t.push(n.shape);this.build(by(t)),this.built=!0,this.initialWeights&&this.setWeights(this.initialWeights),null===this._refCount&&s&&(this._refCount=1)}if(this.assertInputCompatibility(e),s){let r=this.call(e,t);this.supportsMasking&&this.setMaskMetadata(e,r);const s=xy(r),a=[];for(let e of s)-1!==n.indexOf(e)&&(e=e.clone()),a.push(e);if(r=by(a),null!=this.activityRegularizer)throw new dy("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return r}{const n=function(e){e=xy(e);const t=[];for(const n of e)t.push(n.shape);return by(t)}(e),r=this.computeOutputShape(n);let s;const a="float32";if(this.warnOnIncompatibleInputShape(Array.isArray(e)?n[0]:n),s=null!=r&&r.length>0&&Array.isArray(r[0])?r.map((n,r)=>new ex(a,n,this,xy(e),t,this.name,r)):new ex(a,r,this,xy(e),t,this.name),this.addInboundNode(e,s,null,null,n,r,t),this._refCount++,null!=this.activityRegularizer)throw new dy("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return s}})}warnOnIncompatibleInputShape(e){if(null!=this.batchInputShape)if(e.length!==this.batchInputShape.length)console.warn(`The rank of the input tensor provided (shape: ${JSON.stringify(e)}) does not match that of the batchInputShape (${JSON.stringify(this.batchInputShape)}) of the layer ${this.name}`);else{let t=!1;this.batchInputShape.forEach((n,r)=>{null!=n&&null!=e[r]&&e[r]!==n&&(t=!0)}),t&&console.warn(`The shape of the input tensor (${JSON.stringify(e)}) does not match the expectation of layer ${this.name}: ${JSON.stringify(this.batchInputShape)}`)}}get outputShape(){if(null==this.inboundNodes||0===this.inboundNodes.length)throw new ly(`The layer ${this.name} has never been called and thus has no defined output shape.`);const e=[];for(const t of this.inboundNodes){const n=JSON.stringify(t.outputShapes);-1===e.indexOf(n)&&e.push(n)}if(1===e.length){const e=this.inboundNodes[0].outputShapes;return Array.isArray(e)&&Array.isArray(e[0])&&1===e.length?e[0]:e}throw new ly(`The layer ${this.name} has multiple inbound nodes with different output shapes. Hence the notion of "output shape" is ill-defined for the layer.`)}countParams(){if(!this.built)throw new cy(`You tried to call countParams() on ${this.name}, but the layer is not built yet. Build it first by calling build(batchInputShape).`);return Kb(this.weights)}build(e){this.built=!0}getWeights(e=!1){return Jb(e?this.trainableWeights:this.weights)}setWeights(e){ui(()=>{const t=this.weights;if(t.length!==e.length)throw new hy(`You called setWeights(weights) on layer "${this.name}" with a weight list of length ${e.length}, but the layer was expecting ${t.length} weights. Provided weights: ${e}...`);if(0===t.length)return;const n=[],r=Jb(t);for(let s=0;s<r.length;++s){const a=r[s],i=t[s],o=e[s];if(!de(a.shape,o.shape))throw new hy(`Layer weight shape ${a.shape} not compatible with provided weight shape ${o.shape}`);n.push([i,o])}Zb(n)})}addWeight(e,t,n,r,s,a,i,o){if(-1!==this._addedWeightNames.indexOf(e))throw new hy(`Duplicate weight name ${e} for layer ${this.name}`);this._addedWeightNames.push(e),null==n&&(n="float32"),this.fastWeightInitDuringBuild&&(r=null!=o?o():Wb("zeros"));const u=r.apply(t,n),l=new Yb(u,n,e,a,i);return u.dispose(),null!=s&&this.addLoss(()=>s.apply(l.read())),null==a&&(a=!0),a?this._trainableWeights.push(l):this._nonTrainableWeights.push(l),l}setFastWeightInitDuringBuild(e){this.fastWeightInitDuringBuild=e}addLoss(e){null==e||Array.isArray(e)&&0===e.length||(e=xy(e),void 0!==this._losses&&null!==this._losses&&this.losses.push(...e))}computeOutputShape(e){return e}computeMask(e,t){if(!this.supportsMasking){if(null!=t){if(!Array.isArray(t))throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`);t.forEach(e=>{if(null!=e)throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`)})}return null}return t}setMaskMetadata(e,t,n){if(!this.supportsMasking)return;const r=this.computeMask(e,n),s=xy(t),a=xy(r);if(s.length!==a.length)throw new Error(`${this.name} outputs ${s.length} tensors but ${s.length} masks for those tensors`);for(let e=0;e<s.length;e++)s[e].kerasMask=a[e]}addInboundNode(e,t,n,r,s,a,i=null){const o=xy(e);t=xy(t),n=xy(n),r=xy(r),s=Hb(s),a=Hb(a);const u=[],l=[],c=[];for(const e of o)u.push(e.sourceLayer),l.push(e.nodeIndex),c.push(e.tensorIndex);new nx({outboundLayer:this,inboundLayers:u,nodeIndices:l,tensorIndices:c,inputTensors:o,outputTensors:t,inputMasks:n,outputMasks:r,inputShapes:s,outputShapes:a},i);for(let e=0;e<t.length;e++)t[e].sourceLayer=this,t[e].nodeIndex=this.inboundNodes.length-1,t[e].tensorIndex=e}getConfig(){const e={name:this.name,trainable:this.trainable};return null!=this.batchInputShape&&(e.batchInputShape=this.batchInputShape),null!=this.dtype&&(e.dtype=this.dtype),e}disposeWeights(){return this.weights.forEach(e=>e.dispose()),this.weights.length}assertNotDisposed(){if(0===this._refCount)throw new Error(`Layer \'${this.name}\' is already disposed.`)}dispose(){if(!this.built)throw new Error(`Cannot dispose Layer ${this.name} because it has not been built yet.`);if(null===this._refCount)throw new Error(`Cannot dispose Layer ${this.name} because it has not been used yet.`);this.assertNotDisposed();let e=0;return 0===--this._refCount&&(e=this.disposeWeights()),{refCountAfterDispose:this._refCount,numDisposedVariables:e}}}function ax(e,t,n){if((null==t||null!=n&&n>0)&&(t=e.sourceLayer,n=e.nodeIndex),0===t.inboundNodes.length)return[e];{const e=t.inboundNodes[n];if(0===e.inboundLayers.length)return e.inputTensors;{const t=[];for(let n=0;n<e.inboundLayers.length;n++){const r=ax(e.inputTensors[n],e.inboundLayers[n],e.nodeIndices[n]);for(const e of r)-1===t.indexOf(e)&&t.push(e)}return t}}}class ix extends sx{constructor(e){if(super({dtype:e.dtype,name:null!=e.name?e.name:Ly("input").toString()}),null==e.batchSize&&(e.batchSize=null),null==e.sparse&&(e.sparse=!1),this.trainable=!1,this.built=!0,this.sparse=e.sparse,null!=e.inputShape&&null!=e.batchInputShape)throw new hy("Only provide the inputShape OR batchInputShape argument to inputLayer, not both at the same time.");let t=e.batchInputShape;if(null==t){if(null==e.inputShape)throw new hy("An InputLayer should be passed either a `batchInputShape` or an `inputShape`.");t=[e.batchSize].concat(e.inputShape)}else if(null!=e.batchSize)throw new hy("Cannot specify batchSize if batchInputShape is specified when creating an InputLayer.");const n=e.dtype||"float32";this.batchInputShape=t,this.dtype=n,this.inputSpec=[{shape:t}];const r=new ex(this.dtype,this.batchInputShape,this,[],{},this.name);r.nodeIndex=0,r.tensorIndex=0,new nx({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:[r],outputTensors:[r],inputMasks:[null],outputMasks:[null],inputShapes:[t],outputShapes:[t]})}apply(e,t){throw new hy(`Cannot pass any input to an InputLayer\'s apply() method. InputLayer name: ${this.name}`)}dispose(){return{refCountAfterDispose:this._refCount,numDisposedVariables:0}}getConfig(){return{batchInputShape:this.batchInputShape,dtype:this.dtype,sparse:this.sparse,name:this.name}}}function ox(e){if(null==e.batchShape&&null==e.shape)throw new Error("Please provide to Input either a `shape` or a `batchShape` argument. Note that `shape` does not include the batch dimension.");if(null!=e.batchShape&&null!=e.shape)throw new hy("Please provide either a `shape` or `batchShape` argument to Input, but not both.");let t=e.batchShape;null!=e.shape&&null==t&&(t=[null].concat(e.shape));let n=e.dtype;return null==n&&(n="float32"),new ix({batchInputShape:t,name:e.name,dtype:n,sparse:e.sparse}).inboundNodes[0].outputTensors[0]}ix.className="InputLayer",Ho(ix);class ux{constructor(e){if(this.id2Value={},this.id2Mask={},this.name2Id={},e instanceof ux)for(const t in e.id2Value)this.id2Value[t]=e.id2Value[t],t in e.id2Mask&&(this.id2Mask[t]=e.id2Mask[t]);else{if(null==e)return;for(const t of e)this.add(t.key,t.value)}}add(e,t,n){if(null!=this.id2Value[e.id])throw new hy(`Duplicate key: name=${e.name}, id=${e.id}`);return this.id2Value[e.id]=function(e,t){if(null==e.dtype||e.dtype===t.dtype)return t;try{return Io(t,e.dtype)}catch(n){throw new hy(`The dtype of the feed (${t.dtype}) can not be cast to the dtype of the key \'${e.name}\' (${e.dtype}).`)}}(e,t),this.name2Id[e.name]=e.id,null!=n&&(this.id2Mask[e.id]=n),this}addFeed(e){this.add(e.key,e.value)}hasKey(e){return null!=this.id2Value[e.id]}names(){return Object.keys(this.name2Id)}getValue(e){if(e instanceof ex){if(null==this.id2Value[e.id])throw new hy(`Nonexistent key: ${e.name}`);return this.id2Value[e.id]}{const t=this.name2Id[e];if(null==t)throw new hy(`Feed dict has no SymbolicTensor name: ${e}`);return this.id2Value[t]}}getMask(e){if(e instanceof ex){if(null==this.id2Value[e.id])throw new hy(`Nonexistent key: ${e.name}`);return this.id2Mask[e.id]}{const t=this.name2Id[e];if(null==t)throw new hy(`Feed dict has no SymbolicTensor name: ${e}`);return this.id2Mask[t]}}disposeMasks(){null!=this.id2Mask&&li(this.id2Mask)}}const lx=new fy,cx=new fy;function hx(e,t,n,r){const s=null!=n&&n.training,a=Array.isArray(e),i=a?e:[e],o=i.map(e=>e.name),u=[],l=t.names();for(const e of o)-1!==l.indexOf(e)?u.push(t.getValue(e)):u.push(null);null!=r&&(r.maxNumTensors=-1/0,r.minNumTensors=1/0);const c=o.join(",")+"|"+t.names().sort().join(",");let h,d=lx.get(c);if(null==d){const e=function(e,t){ie(null!=e&&e.length>0,()=>"Expected at least one fetch, got none");let n=[],r={};if(1===e.length){const s=px(e[0],t);n=s.sorted,r=s.recipientMap}else{const s=new Set;for(const a of e){const{sorted:e,recipientMap:i}=px(a,t);for(const t of e)s.has(t.name)||(n.push(t),s.add(t.name));for(const e in i)null==r[e]&&(r[e]=new Set),i[e].forEach(t=>r[e].add(t))}}return{sorted:n,recipientCounts:dx(r)}}(i,t);d=e.sorted,h=e.recipientCounts,lx.put(c,d),cx.put(c,h)}h={},s||Object.assign(h,cx.get(c));const p=new ux(t);for(let e=0;e<d.length;++e){if(null!=r){const e=ii().numTensors;e>r.maxNumTensors&&(r.maxNumTensors=e),e<r.minNumTensors&&(r.minNumTensors=e)}const a=d[e],i=a.sourceLayer;if(i instanceof ix)continue;const l=[],c=[],f=[];let m=!1;for(const e of a.inputs){const n=p.getValue(e),r=p.getMask(e);l.push(n),c.push(r),null!=r&&(m=!0),s||(h[e.name]--,0!==h[e.name]||t.hasKey(e)||-1!==o.indexOf(e.name)||n.isDisposed||!0===e.sourceLayer.stateful||f.push(n))}m&&((n=n||{}).mask=c[0]);const g=xy(i.apply(l,n));let y=null;i.supportsMasking&&(y=i.computeMask(l,c));const b=fx(a),x=Array.isArray(b)?b:[b];for(let e=0;e<x.length;++e){p.hasKey(x[e])||p.add(x[e],g[e],Array.isArray(y)?y[0]:y);const t=o.indexOf(x[e].name);-1!==t&&(u[t]=g[e])}s||li(f)}return p.disposeMasks(),a?u:u[0]}function dx(e){const t={};for(const n in e)t[n]=e[n].size;return t}function px(e,t){const n=new Set,r=[],s={};for(const e of t.names())n.add(e);const a=[],i=[];for(a.push(e);a.length>0;){const e=a[a.length-1];if(n.has(e.name)){a.pop();continue}const t=i[i.length-1]===a.length-1;if(0===e.inputs.length||t)a.pop(),r.push(e),n.add(e.name),t&&i.pop();else{i.push(a.length-1);for(const t of e.inputs)null==s[t.name]&&(s[t.name]=new Set),s[t.name].add(e.name),n.has(t.name)||a.push(t)}}return{sorted:r,recipientMap:s}}function fx(e){let t;if(1===e.sourceLayer.inboundNodes.length)t=e.sourceLayer.output;else{let n=null;for(let t=0;t<e.sourceLayer.inboundNodes.length;++t)for(const r of e.sourceLayer.inboundNodes[t].outputTensors)if(r.id===e.id){n=t;break}t=e.sourceLayer.getOutputAt(n)}return t}function mx(e,t){return ui(()=>Ao(oh($o(e,e),t,!0)))}Xe().registerFlag("TOPOLOGICAL_SORT_CACHE_MAX_ENTRIES",()=>100,function(e){null!=lx&&lx.setMaxEntries(e),null!=cx&&cx.setMaxEntries(e)});class gx extends Wo{getConfig(){return{}}}class yx extends gx{constructor(e){super(),this.defaultMaxValue=2,this.defaultAxis=0,this.maxValue=null!=e.maxValue?e.maxValue:this.defaultMaxValue,this.axis=null!=e.axis?e.axis:this.defaultAxis}apply(e){return ui(()=>{const t=mx(e,this.axis),n=kc(t,0,this.maxValue);return $o(e,Co(n,To(ab(),t)))})}getConfig(){return{maxValue:this.maxValue,axis:this.axis}}}yx.className="MaxNorm",Ho(yx);class bx extends gx{constructor(e){super(),this.defaultAxis=0,this.axis=null!=e.axis?e.axis:this.defaultAxis}apply(e){return ui(()=>Co(e,To(ab(),mx(e,this.axis))))}getConfig(){return{axis:this.axis}}}bx.className="UnitNorm",Ho(bx);class xx extends gx{apply(e){return Ed(e)}}xx.className="NonNeg",Ho(xx);class wx extends gx{constructor(e){super(),this.defaultMinValue=0,this.defaultMaxValue=1,this.defaultRate=1,this.defaultAxis=0,this.minValue=null!=e.minValue?e.minValue:this.defaultMinValue,this.maxValue=null!=e.maxValue?e.maxValue:this.defaultMaxValue,this.rate=null!=e.rate?e.rate:this.defaultRate,this.axis=null!=e.axis?e.axis:this.defaultAxis}apply(e){return ui(()=>{const t=mx(e,this.axis),n=To($o(this.rate,kc(t,this.minValue,this.maxValue)),$o(1-this.rate,t));return $o(e,Co(n,To(ab(),t)))})}getConfig(){return{minValue:this.minValue,maxValue:this.maxValue,rate:this.rate,axis:this.axis}}}wx.className="MinMaxNorm",Ho(wx);const vx={maxNorm:"MaxNorm",minMaxNorm:"MinMaxNorm",nonNeg:"NonNeg",unitNorm:"UnitNorm"};function kx(e){return Iy(e)}function Ix(e,t={}){return Ny(e,Go.getMap().classNameMap,t,"constraint")}function Sx(e){return null==e?null:"string"==typeof e?Ix({className:e in vx?vx[e]:e,config:{}}):e instanceof gx?e:Ix(e)}function Nx(e){return new yx(e)}function Tx(e){return new bx(e)}function Ex(){return new xx}function Cx(e){return new wx(e)}function $x(){return new Nb}function Ax(){return new Tb}function Rx(e){return new Eb(e)}function _x(e){return new Cb(e)}function Mx(e){return new $b(e)}function Fx(e){return new Ab(e)}function Dx(e){return new Rb(e)}function Ox(e){return new _b(e)}function Lx(e){return new Mb(e)}function zx(e){return new Fb(e)}function Px(e){return new Db(e)}function Bx(e){return new Ob(e)}function Vx(e){return new Lb(e)}function Ux(e){return new zb(e)}function Wx(e){return new Pb(e)}async function Gx(e){if(null==e)return;const t=[],n=[],r=[];for(const s in e){const a=e[s];if("number"!=typeof a){const e=a;t.push(e.data()),n.push(s),r.push(e)}}if(t.length>0){const s=await Promise.all(t);for(let t=0;t<s.length;++t)e[n[t]]=s[t][0];li(r)}}function Hx(e){if(null!=e)for(const t in e){const n=e[t];"number"!=typeof n&&n.dispose()}}var jx;!function(e){e[e.SILENT=0]="SILENT",e[e.VERBOSE=1]="VERBOSE"}(jx||(jx={}));class qx{constructor(){this.validationData=null}setParams(e){this.params=e}async onEpochBegin(e,t){}async onEpochEnd(e,t){}async onBatchBegin(e,t){}async onBatchEnd(e,t){}async onTrainBegin(e){}async onTrainEnd(e){}setModel(e){}}class Kx{constructor(e,t=10){null==e&&(e=[]),this.callbacks=e,this.queueLength=t}append(e){this.callbacks.push(e)}setParams(e){for(const t of this.callbacks)t.setParams(e)}setModel(e){for(const t of this.callbacks)t.setModel(e)}async onEpochBegin(e,t){null==t&&(t={});for(const n of this.callbacks)await n.onEpochBegin(e,t)}async onEpochEnd(e,t){null==t&&(t={});for(const n of this.callbacks)await n.onEpochEnd(e,t)}async onBatchBegin(e,t){null==t&&(t={});for(const n of this.callbacks)await n.onBatchBegin(e,t)}async onBatchEnd(e,t){null==t&&(t={});for(const n of this.callbacks)await n.onBatchEnd(e,t)}async onTrainBegin(e){null==e&&(e={});for(const t of this.callbacks)await t.onTrainBegin(e)}async onTrainEnd(e){null==e&&(e={});for(const t of this.callbacks)await t.onTrainEnd(e)}}class Xx extends qx{constructor(){super()}async onEpochBegin(e){this.seen=0,this.totals={}}async onBatchEnd(e,t){null==t&&(t={});const n=null==t.size?0:t.size;this.seen+=n;for(const e in t){const r=t[e];if("number"==typeof r)this.totals.hasOwnProperty(e)||(this.totals[e]=0),this.totals[e]=this.totals[e]+r*n;else{let t;e in this.totals?t=this.totals[e]:this.totals[e]=0;const s=ui(()=>To(this.totals[e],$o(r,n)));this.totals[e]=s,null!=t&&t.dispose()}}}async onEpochEnd(e,t){if(null!=t)for(const e of this.params.metrics)null!=this.totals[e]&&("number"==typeof this.totals[e]?t[e]=this.totals[e]/this.seen:ui(()=>{const n=$o(Co(1,this.seen),this.totals[e]);t[e]=n,this.totals[e].dispose(),ci(t[e])}))}}class Yx extends qx{async onTrainBegin(e){this.epoch=[],this.history={}}async onEpochEnd(e,t){null==t&&(t={}),this.epoch.push(e);for(const e in t)null==this.history[e]&&(this.history[e]=[]),this.history[e].push(t[e])}async syncData(){const e=[],t=[],n=[];for(const r in this.history){const s=this.history[r];for(let a=0;a<s.length;++a)if("number"!=typeof s[a]){const i=s[a];e.push(i.data()),t.push(r),n.push(a)}}const r=await Promise.all(e);for(let e=0;e<r.length;++e)this.history[t[e]][n[e]].dispose(),this.history[t[e]][n[e]]=r[e][0]}}class Jx extends qx{constructor(e,t){if(super(),this.currentEpoch=0,this.nowFunc=e.nowFunc,this.nextFrameFunc=e.nextFrameFunc||Uf,this.yieldEvery=t||"auto","auto"===this.yieldEvery&&(this.yieldEvery=125),"never"===this.yieldEvery&&null!=e.onYield)throw new Error("yieldEvery is `never` but you provided an `onYield` callback. Either change `yieldEvery` or remove the callback");Re(this.yieldEvery)&&(this.maybeWait=function(e,t,n){let r,s=null!=n?n():Xs();return(...a)=>{const i=null!=n?n():Xs();return i-s<t||(s=i,r=e(...a)),r}}(this.maybeWait.bind(this),this.yieldEvery,this.nowFunc)),this.trainBegin=e.onTrainBegin,this.trainEnd=e.onTrainEnd,this.epochBegin=e.onEpochBegin,this.epochEnd=e.onEpochEnd,this.batchBegin=e.onBatchBegin,this.batchEnd=e.onBatchEnd,this.yield=e.onYield}async maybeWait(e,t,n){const r=[];null!=this.yield&&(await Gx(n),r.push(this.yield(e,t,n))),r.push(this.nextFrameFunc()),await Promise.all(r)}async onEpochBegin(e,t){this.currentEpoch=e,null!=this.epochBegin&&(await Gx(t),await this.epochBegin(e,t))}async onEpochEnd(e,t){const n=[];null!=this.epochEnd&&(await Gx(t),n.push(this.epochEnd(e,t))),"epoch"===this.yieldEvery&&n.push(this.nextFrameFunc()),await Promise.all(n)}async onBatchBegin(e,t){null!=this.batchBegin&&(await Gx(t),await this.batchBegin(e,t))}async onBatchEnd(e,t){const n=[];null!=this.batchEnd&&(await Gx(t),n.push(this.batchEnd(e,t))),"batch"===this.yieldEvery?n.push(this.nextFrameFunc()):Re(this.yieldEvery)&&n.push(this.maybeWait(this.currentEpoch,e,t)),await Promise.all(n)}async onTrainBegin(e){null!=this.trainBegin&&(await Gx(e),await this.trainBegin(e))}async onTrainEnd(e){null!=this.trainEnd&&(await Gx(e),await this.trainEnd(e))}}function Zx(e,t){return null==e&&(e={}),e instanceof qx?[e]:Array.isArray(e)&&e[0]instanceof qx?e:xy(e).map(e=>new Jx(e,t))}class Qx{constructor(){}static registerCallbackConstructor(e,t){ie(e>=0&&Number.isInteger(e),()=>`Verbosity level is expected to be an integer >= 0, but got ${e}`),Qx.checkForDuplicate(t),null==Qx.constructors[e]&&(Qx.constructors[e]=[]),Qx.constructors[e].push(t)}static checkForDuplicate(e){for(const t in Qx.constructors)Qx.constructors[+t].forEach(t=>{if(t===e)throw new hy("Duplicate callback constructor.")})}static clear(){Qx.constructors={}}static createCallbacks(e){const t=[];for(const n in Qx.constructors){const r=+n;e>=r&&t.push(...Qx.constructors[r])}return t.map(e=>new e)}}function ew(e,t,n,r,s,a,i,o,u){const l=new Yx,c=[new Xx,...Qx.createCallbacks(t)];null!=e&&c.push(...e),c.push(l);const h=new Kx(c);return h.setParams({epochs:n,initialEpoch:r,samples:s,steps:a,batchSize:i,verbose:t,doValidation:o,metrics:u}),{callbackList:h,history:l}}function tw(e,t={},n=!1){return Ny(e,Go.getMap().classNameMap,t,"layer",n)}function nw(e,t){return ui(()=>{"float32"!==e.dtype&&(e=Io(e,"float32"));const n=oh(yb(e),t,!0),r=Xo(n.shape,ab()),s=Ao(su(n,r));return Co(e,s)})}function rw(e,t){return ui(()=>Gh(yb(Zo(t,e)),-1))}function sw(e,t){return ui(()=>Gh(eu(Zo(t,e)),-1))}function aw(e,t){return ui(()=>{const n=Zo(e,t),r=kc(eu(e),ab(),Number.MAX_VALUE),s=eu(Co(n,r));return $o(100,Gh(s,-1))})}function iw(e,t,n=!1){return ui(()=>{if(n)t=jd(t);else{const e=oh(t,t.shape.length-1,!0);t=Co(t,e)}return t=kc(t,ab(),1-ab()),Mu(oh($o(Io(e,"float32"),Ch(t)),t.shape.length-1))})}function ow(e,t,n=!1){return ui(()=>{const r=Io(gh(function(e){const t=[eb(e.shape)];return sc(e,t)}(e)),"int32"),s=(t=kc(t,ab(),1-ab())).shape;return iw(sc(Ru(r,s[s.length-1]),s),t,n)})}function uw(e,t){return ui(()=>{let n;return n=kc(t,ab(),1-ab()),n=Ch(Co(n,Zo(1,n))),Gh(function(e,t){if(!de(e.shape,t.shape))throw new hy(`logits and labels must have the same shape, but got shapes ${JSON.stringify(e.shape)} and ${JSON.stringify(t.shape)}`);return ui(()=>{const n=Ed(t),r=Mu(eu(t));return To(Zo(n,$o(t,e)),$h(hh(r)))})}(e,n),-1)})}function lw(e,t){return ui(()=>{const n=nw(e,-1),r=nw(t,-1),s=$o(n,r);return Mu(oh(s,-1))})}Qx.constructors={};const cw={meanSquaredError:rw,meanAbsoluteError:sw,meanAbsolutePercentageError:aw,meanSquaredLogarithmicError:function(e,t){return ui(()=>{const n=kc(t,ab(),Number.MAX_VALUE),r=Ch(To(1,n)),s=kc(e,ab(),Number.MAX_VALUE),a=Ch(To(1,s));return Gh(yb(Zo(r,a)),-1)})},squaredHinge:function(e,t){return ui(()=>{const n=su(0,Zo(1,$o(e,t)));return Gh(yb(n),-1)})},hinge:function(e,t){return ui(()=>{const n=su(0,Zo(1,$o(e,t)));return Gh(n,-1)})},categoricalHinge:function(e,t){return ui(()=>{const n=oh($o(e,t),-1),r=ah($o(Zo(1,e),t),-1);return su(0,To(1,Zo(r,n)))})},logcosh:function(e,t){return ui(()=>{const n=Math.log(2),r=Zo(t,e),s=Zo(To(r,Ah($o(-2,r))),n);return Gh(s,-1)})},categoricalCrossentropy:iw,sparseCategoricalCrossentropy:ow,binaryCrossentropy:uw,kullbackLeiblerDivergence:function(e,t){return ui(()=>{const n=kc(e,ab(),1),r=kc(t,ab(),1);return oh($o(e,Ch(Co(n,r))),-1)})},poisson:function(e,t){return ui(()=>{const n=Ch(To(ab(),t));return Gh(Zo(t,$o(e,n)),-1)})},cosineProximity:lw};function hw(e){if("string"==typeof e){if(e in cw)return cw[e];let t=`Unknown loss ${e}`;throw e.toLowerCase().includes("softmaxcrossentropy")&&(t=`Unknown loss ${e}. Use "categoricalCrossentropy" as the string name for tf.losses.softmaxCrossEntropy`),new hy(t)}return e}function dw(e,t){return ui(()=>{const n=$o(.5,td(t)),r=ib(bh(t,n),e.dtype);return Gh(Wc(e,r),-1)})}function pw(e,t){return ui(()=>ib(Wc(Ol(e,-1),Ol(t,-1)),"float32"))}function fw(e,t){return ui(()=>Io(oh(Fh(Wc(e,1),Wc(t,1))),"float32"))}function mw(e,t){return ui(()=>{const n=fw(e,t),r=function(e,t){return ui(()=>Io(oh(Fh(Wc(e,0),Wc(t,1))),"float32"))}(e,t),s=To(n,r);return Io(Gc(bh(s,0),Co(n,s),0),"float32")})}function gw(e,t){return uw(e,t)}function yw(e,t){return e.rank===t.rank&&(e=Qd(e,[e.rank-1])),(t=Ol(t,-1)).dtype!==e.dtype&&(t=Io(t,e.dtype)),Io(Wc(e,t),"float32")}const bw=iw,xw=ow,ww={binaryAccuracy:dw,categoricalAccuracy:pw,precision:mw,categoricalCrossentropy:bw,sparseCategoricalCrossentropy:xw,mse:rw,MSE:rw,mae:sw,MAE:sw,mape:aw,MAPE:aw,cosine:lw};function vw(e){if("string"==typeof e&&e in ww)return ww[e];if("string"!=typeof e&&null!=e)return e;throw new hy(`Unknown metric ${e}`)}function kw(e){if(gy(null!==e,`Unknown LossOrMetricFn ${e}`),"string"==typeof e)return e;{let t;for(const n of Object.keys(cw))if(cw[n]===e){t=n;break}if(void 0!==t)return t;for(const n of Object.keys(ww))if(ww[n]===e){t=n;break}return void 0!==t?t:e.name}}function Iw(e,t,n=!1){if(null==e||"object"!=typeof e||Object.getPrototypeOf(e)!==Object.prototype||!Sw(e))throw new Error("User-defined metadata is expected to be a JSON object, but is not.");if(n){const n=JSON.stringify(e);n.length>1048576&&console.warn(`User-defined metadata of model "${t}" is too large in size (length=${n.length} when serialized). It is not recommended to store such large objects in user-defined metadata. Please make sure its serialized length is <= 1048576.`)}}function Sw(e){if(null===e)return!0;if("object"==typeof e){if(Object.getPrototypeOf(e)===Object.prototype){const t=Object.keys(e);for(const n of t){if("string"!=typeof n)return!1;if(!Sw(e[n]))return!1}return!0}if(Array.isArray(e)){for(const t of e)if(!Sw(t))return!1;return!0}return!1}{const t=typeof e;return"string"===t||"number"===t||"boolean"===t}}function Nw(e,t,n=console.log){let r="";for(let n=0;n<e.length;++n)n>0&&(r=r.slice(0,r.length-1)+" "),r+=e[n],r=r.slice(0,t[n]),r+=" ".repeat(t[n]-r.length);n(r)}function Tw(e,t,n){let r,s;try{s=e.inboundNodes.map(e=>JSON.stringify(e.inputShapes)).join(",")}catch(e){s="multiple"}try{r=JSON.stringify(e.outputShape)}catch(e){r="multiple"}Nw([`${e.name} (${e.getClassName()})`,s,r,e.countParams().toString()],t,n)}function Ew(e,t,n,r){let s,a;try{a=e.inboundNodes.map(e=>JSON.stringify(e.inputShapes)).join(",")}catch(e){a="multiple"}try{s=JSON.stringify(e.outputShape)}catch(e){s="multiple"}const i=[];for(const t of e.inboundNodes)if(!(null!=n&&n.length>0&&-1===n.indexOf(t)))for(let e=0;e<t.inboundLayers.length;++e){const n=t.inboundLayers[e].name,r=t.nodeIndices[e],s=t.tensorIndices[e];i.push(`${n}[${r}][${s}]`)}const o=e.name,u=e.getClassName(),l=0===i.length?"":i[0];Nw([`${o} (${u})`,a,s,e.countParams().toString(),l],t,r);for(let e=1;e<i.length;++e)Nw(["","","","",i[e]],t,r)}function Cw(e,t,n){return("inboundNodes"===e||"outputLayers"===e||"inputLayers"===e)&&0===t&&"string"==typeof n}function $w(e,t){if(null===e)return null;if("string"==typeof e)return vy(e);if("number"==typeof e||"boolean"==typeof e)return e;if(e instanceof Array){const n=[],r=e.length;for(let s=0;s<r;++s){const r=e[s];Cw(t,s,r)?n.push(r):n.push($w(r,t))}return n}{const t={};for(const n of Object.keys(e)){const r=e[n];if("name"===n&&"string"==typeof r)t[n]=r;else{const e=vy(n);t[e]=$w(r,e)}}return t}}function Aw(e,t){if(null==e)return null;if("string"==typeof e)return wy(e);if("number"==typeof e||"boolean"==typeof e)return e;if(e instanceof Array){const n=[],r=e.length;for(let s=0;s<r;++s){const r=e[s];Cw(t,s,r)?n.push(r):n.push(Aw(r,t))}return n}{const t={};for(const n of Object.keys(e)){const r=e[n];t[wy(n)]="name"!==n&&"className"!==n||"string"!=typeof r?Aw(r,n):r}return t}}const Rw="4.22.0";class _w extends sx{constructor(e){if(super({}),this.containerNodes=new Set,this.name=e.name,null==this.name){const e=this.getClassName().toLowerCase();this.name=Ly(e)}if(this.supportsMasking=!1,this.trainable_=!0,Array.isArray(e.inputs)?this.inputs=e.inputs.slice():this.inputs=[e.inputs],Array.isArray(e.outputs)?this.outputs=e.outputs.slice():this.outputs=[e.outputs],Ey(this.inputs).length!==this.inputs.length)throw new hy(`The list of inputs passed to the model is redundant. All inputs should only appear once. Found: ${this.inputs.map(e=>e.name)}`);Ey(this.outputs).length!==this.outputs.length&&console.warn(`The list of outputs passed to the model is redundant. All outputs should only appear once. Found: ${this.outputs.map(e=>e.name)}`),this.inputLayers=[],this.inputLayersNodeIndices=[],this.inputLayersTensorIndices=[],this.outputLayers=[],this.outputLayersNodeIndices=[],this.outputLayersTensorIndices=[],this.layers=[],this.internalContainerRefs=[];for(const e of this.outputs){const t=e.sourceLayer,n=e.nodeIndex,r=e.tensorIndex;this.outputLayers.push(t),this.outputLayersNodeIndices.push(n),this.outputLayersTensorIndices.push(r)}for(const e of this.inputs){const t=e.sourceLayer,n=e.nodeIndex,r=e.tensorIndex;gy(0===n,"input layer has >1 nodes"),gy(0===r,"input layer has >1 tensors"),this.inputLayers.push(t),this.inputLayersNodeIndices.push(n),this.inputLayersTensorIndices.push(r)}this.inputNames=[],this.outputNames=[],this.feedInputShapes=[],this.feedInputNames=[],this.feedOutputNames=[];for(let t=0;t<this.inputLayers.length;t++){const n=this.inputLayers[t];if(!(n instanceof ix))throw new TypeError(`Input layers to a LayersModel must be InputLayer objects. Received inputs: ${e.inputs}. Input ${t} (0-based) originates from layer type ${n.getClassName()}.`);this.inputNames.push(n.name),this.feedInputShapes.push(n.batchInputShape),this.feedInputNames.push(n.name)}for(const e of this.outputLayers)this.outputNames.push(e.name);this.internalInputShapes=this.inputs.map(e=>e.shape),this.internalOutputShapes=this.outputs.map(e=>e.shape);const t={},n={},r={},s={},a={},i=[],o=(e,t,n,r,s,u)=>{null!=r&&null!=s&&null!=u||(r=e.sourceLayer,s=e.nodeIndex,u=e.tensorIndex);const l=r.inboundNodes[s];if(-1!==n.indexOf(l))throw new cy(`The tensor ${e.name} at layer "${r.name}" is part of a cycle.`);if(-1!==t.indexOf(l))return;this.containerNodes.add(_w.nodeKey(r,s)),r.id in a||(a[r.id]=Object.keys(a).length),-1===n.indexOf(l)&&n.push(l);const c=l.inboundLayers.length;for(let e=0;e<c;e++){const r=l.inputTensors[e],s=l.inboundLayers[e],a=l.nodeIndices[e],i=l.tensorIndices[e];o(r,t,n,s,a,i)}for(t.push(l);n.indexOf(l)>=0;)n.splice(n.indexOf(l),1);i.push(l)},u=[],l=[];for(const e of this.outputs)o(e,u,l);const c=i.slice().reverse();for(const e of c){n[e.id]=e,e.id in t||(t[e.id]=0);let a=t[e.id];const i=null==r[e.outboundLayer.id]?0:r[e.outboundLayer.id];a=Math.max(a,i),r[e.outboundLayer.id]=a,s[e.outboundLayer.id]=e.outboundLayer,t[e.id]=a;for(let r=0;r<e.inboundLayers.length;r++){const s=e.inboundLayers[r],i=e.nodeIndices[r],o=s.inboundNodes[i],u=null==t[o.id]?0:t[o.id];t[o.id]=Math.max(a+1,u),n[o.id]=o}}const h={};for(const e in t){const r=t[e];r in h||(h[r]=[]),h[r].push(n[e])}const d={};for(const e in r){const t=r[e];t in d||(d[t]=[]),d[t].push(s[e])}let p=Object.keys(d).map(e=>parseInt(e,10)).sort(Ty);this.layers=[];for(const e of p){const t=d[e];t.sort((e,t)=>{const n=a[e.id],r=a[t.id];return n<r?-1:n>r?1:0});for(const e of t)e instanceof _w&&this.internalContainerRefs.push(e),this.layers.push(e)}this.layersByDepth=d,p=Object.keys(h).map(e=>parseInt(e,10)).sort(Ty);const f=this.inputs.slice(),m=[];for(const e of p)for(const t of h[e]){const e=t.outboundLayer;if(null!=e){for(const n of t.inputTensors)if(-1===f.indexOf(n))throw new cy(`Graph disconnected: cannot obtain value for tensor ${n} at layer "${e.name}". The following previous layers were accessed without issue: ${m}`);for(const e of t.outputTensors)f.push(e);m.push(e.name)}}this.nodesByDepth=h;const g=this.layers.map(e=>e.name);for(const e of g){const t=g.filter(t=>t===e).length;if(1!==t)throw new cy(`The name "${e}" is used ${t} times in the model. All layer names should be unique. Layer names: `+JSON.stringify(g))}this.outboundNodes=[],this.inboundNodes=[],new nx({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:this.inputs.map(e=>null),outputMasks:this.outputs.map(e=>null),inputShapes:this.inputs.map(e=>e.shape),outputShapes:this.outputs.map(e=>e.shape)}),this.built=!0,this._refCount=1}assertNotDisposed(){if(0===this._refCount)throw new Error(`Container \'${this.name}\' is already disposed.`)}dispose(){this.assertNotDisposed();const e={refCountAfterDispose:null,numDisposedVariables:0};if(0===--this._refCount){for(const t of this.layers)e.numDisposedVariables+=t.dispose().numDisposedVariables;for(const t of this.internalContainerRefs)e.numDisposedVariables+=t.dispose().numDisposedVariables}return e.refCountAfterDispose=this._refCount,e}get trainable(){return this.trainable_}set trainable(e){this.layers.forEach(t=>{t._trainableWeights.forEach(t=>t.trainable=e)}),this.trainable_=e}get trainableWeights(){if(this._trainableWeights.length>0)throw new hy("Container instance unexpectedly contains _trainableWeights.The trainable weights of a Container are a union of the trainable weights of its consituent Layers. Its own _trainableWeights must remain an empty Array.");if(!this.trainable)return[];let e=[];for(const t of this.layers)e=e.concat(t.trainableWeights);return e}get nonTrainableWeights(){const e=[];for(const t of this.layers)e.push(...t.nonTrainableWeights);if(!this.trainable){const t=[];for(const e of this.layers)t.push(...e.trainableWeights);return t.concat(e)}return e}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}loadWeights(e,t=!0){const n={};let r=0;const s=(e=>{const t=Object.keys(e);if(0===t.length)return!1;const n=t[0].split("/");return!isNaN(parseInt(n[n.length-1],10))})(e);s&&this.parseWeights(e);for(const e of this.layers)for(const[t,a]of e.weights.entries()){const e=s?`${a.name.split("/").slice(0,-1).join("/")+"/"}${t}`:a.originalName;if(null!=n[e])throw new hy(`Duplicate weight name: ${e}`);n[e]=a,r++}const a=[];for(const r in e){let s=r;if(null==n[r]){const e=r.split("/");s=e.slice(0,-2).concat([e[e.length-1]]).join("/")}if(null!=n[s])a.push([n[s],e[r]]);else if(t)throw new hy(`Provided weight data has no target variable: ${r}`);delete n[s]}if(t){const e=[];for(const t in n)e.push(t);if(e.length>0)throw new hy(`${e.length} of ${r} weights are not set: ${e}`)}Zb(a)}parseWeights(e){for(const t in Object.keys(e)){const n=t.split("/"),r=["vars","layer_checkpoint_dependencies"],s=n.map(e=>e.startsWith("_")?e.slice(1):e).filter(e=>!r.includes(e)).join("/");s!==t&&(e[s]=e[t],delete e[t])}}updatedConfig(){const e=this.getConfig(),t={};return t.className=this.getClassName(),t.config=e,t.kerasVersion=`tfjs-layers ${Rw}`,t.backend="TensorFlow.js",t}toJSON(e,t=!0){const n=Aw(this.updatedConfig());return t?JSON.stringify(n):n}call(e,t){return ui(()=>{e=xy(e);const n=new ux;for(let t=0;t<this.inputs.length;++t)n.add(this.inputs[t],e[t]);return hx(this.outputs,n,t)})}computeMask(e,t){return ui(()=>{let n;return e=xy(e),n=null==t?my(null,e.length):xy(t),this.runInternalGraph(e,n)[1]})}computeOutputShape(e){const t=Hb(e);if(t.length!==this.inputLayers.length)throw new hy(`Invalid inputShape argument ${e}: model has ${this.inputLayers.length} tensor inputs.`);const n={};for(let e=0;e<t.length;e++){const r=this.inputLayers[e],s=t[e];n[r.name+"_0_0"]=s}const r=Object.keys(this.nodesByDepth).map(e=>parseInt(e,10)).sort(Ty);if(r.length>1)for(const e of r){const t=this.nodesByDepth[e];for(const e of t){const t=e.outboundLayer;if(-1!==this.inputLayers.map(e=>e.id).indexOf(t.id))continue;const r=[];for(let t=0;t<e.inboundLayers.length;t++){const s=e.inboundLayers[t],a=e.nodeIndices[t],i=e.tensorIndices[t],o=n[`${s.name}_${a}_${i}`];r.push(o)}const s=Hb(t.computeOutputShape(by(r))),a=t.inboundNodes.indexOf(e);for(let e=0;e<s.length;e++)n[`${t.name}_${a}_${e}`]=s[e]}}const s=[],a=[];for(let e=0;e<this.outputLayers.length;e++){const t=this.outputLayers[e],n=this.outputLayersNodeIndices[e],r=this.outputLayersTensorIndices[e],s=`${t.name}_${n}_${r}`;a.push(s)}for(let e=0;e<a.length;e++){const t=a[e];gy(t in n),s.push(n[t])}return by(s)}runInternalGraph(e,t){null==t&&(t=my(null,e.length));const n={};for(let r=0;r<this.inputs.length;++r){const s=this.inputs[r],a=e[r],i=t[r];n[s.id]=[a,i]}const r=Object.keys(this.nodesByDepth).map(e=>parseInt(e,10)).sort(Ty);for(const e of r){const t=this.nodesByDepth[e];for(const e of t){const t=e.outboundLayer,r=e.inputTensors,s=e.outputTensors,a=new Array;for(const e of r)e.id in n&&a.push(n[e.id]);if(a.length===r.length){let r,i,o,u,l={};if(null!=e.callArgs&&(l=e.callArgs),1===a.length){const[e,n]=a[0];null==l.mask&&(l.mask=n),o=xy(t.call(e,l)),u=xy(t.computeMask(e,n)),r=[e],i=[n]}else r=a.map(e=>e[0]),i=a.map(e=>e[1]),null==l.mask&&(l.mask=i),o=xy(t.call(r,l)),u=xy(t.computeMask(r,i));if(t.activityRegularizer)throw new dy("LayersModel invocation with concrete Tensor value(s) in the presence of activity regularizer(s) is not supported yet.");for(let e=0;e<s.length;++e){const t=s[e],r=o[e],a=u[e];n[t.id]=[r,a]}}}}const s=[],a=[],i=[];for(const e of this.outputs){gy(e.id in n,`Could not compute output ${e.name} : ${e.id}`);const[t,r]=n[e.id];i.push(t.shape),s.push(t),a.push(r)}return[s,a,i]}buildNodeConversionMap(e){const t={};let n;for(const e of this.layers){n=e instanceof _w?1:0;for(let r=0;r<e.inboundNodes.length;r++){const s=_w.nodeKey(e,r);this.containerNodes.has(s)&&(t[s]=n,n+=1)}}return t}getLayer(e,t){if(null!=t)return this.findLayer(t);if(null==e)throw new hy("Provide either a layer name or layer index");if("number"==typeof e)return this.findLayer(e);for(const t of this.layers)if(t.name===e)return t;throw new hy(`No such layer: ${e}`)}findLayer(e){if(this.layers.length<=e)throw new hy(`Was asked to retrieve layer at index ${e}, but model only has ${this.layers.length} layer(s).`);return this.layers[e]}calculateLosses(){return ui(()=>{const e=[];for(const t of this.layers)for(let n=0;n<t.inboundNodes.length;++n){const r=_w.nodeKey(t,n);this.containerNodes.has(r)&&e.push(...t.calculateLosses())}return e})}getConfig(){const e={name:this.name},t=this.buildNodeConversionMap(this.layers),n=[];for(const e of this.layers){const r=e.getClassName(),s=e.getConfig(),a=[];for(let n=0;n<e.inboundNodes.length;n++){const r=e.inboundNodes[n],s=_w.nodeKey(e,n);let i={};if(this.containerNodes.has(s)){if(r.callArgs)try{JSON.stringify(r.callArgs),i=r.callArgs}catch(t){console.warn(`Layer ${e.name} was passed non-serializable keyword arguments: ${r.callArgs}. They will not be included in the serialized model (and thus will be missing at deserialization time).`),i={}}if(r.inboundLayers.length>0){const e=[];for(let n=0;n<r.inboundLayers.length;n++){const s=r.inboundLayers[n],a=r.nodeIndices[n],o=r.tensorIndices[n];let u=t[_w.nodeKey(s,a)];null==u&&(u=0),e.push([s.name,u,o,i])}a.push(e)}}}const i={};i.name=e.name,i.className=r,i.config=s,i.inboundNodes=a,n.push(i)}e.layers=n;const r=[];for(let e=0;e<this.inputLayers.length;e++){const n=this.inputLayers[e],s=this.inputLayersNodeIndices[e],a=_w.nodeKey(n,s);if(!this.containerNodes.has(a))continue;let i=t[a];null==i&&(i=0);const o=this.inputLayersTensorIndices[e];r.push([n.name,i,o])}e.inputLayers=r;const s=[];for(let e=0;e<this.outputLayers.length;e++){const n=this.outputLayers[e],r=this.outputLayersNodeIndices[e],a=_w.nodeKey(n,r);if(!this.containerNodes.has(a))continue;let i=t[a];null==i&&(i=0);const o=this.outputLayersTensorIndices[e];s.push([n.name,i,o])}return e.outputLayers=s,e}static fromConfig(e,t,n={},r=!1){const s={},a={};function i(e,t){e.name in a?a[e.name].push(t):a[e.name]=[t]}function o(e,t){const n=[];let r;for(const a of t){const o=a[0],u=a[1],l=a[2];if(r=null==a[3]?{}:a[3],!(o in s))return void i(e,t);const c=s[o];if(c.inboundNodes.length<=u)return void i(e,t);const h=c.inboundNodes[u];n.push(h.outputTensors[l])}n.length>0&&e.apply(by(n),r)}function u(e){const n=e.name,a=tw(e,null!=t.customObjects?t.customObjects:{});a.setFastWeightInitDuringBuild(r),s[n]=a,e.inboundNodes.forEach(e=>{if(!(e instanceof Array))throw new hy(`Corrupted configuration, expected array for nodeData: ${e}`);i(a,e)})}const l=t.name,c=t.layers;for(const e of c)u(e);for(;!Cy(a);)for(const e of c){const t=s[e.name];if(t.name in a){const e=a[t.name];delete a[t.name];for(const n of e)o(t,n)}}const h=[],d=[],p=t.inputLayers;for(const e of p){const t=e[0],n=e[1],r=e[2];gy(t in s);const a=s[t].inboundNodes[n].outputTensors;h.push(a[r])}const f=t.outputLayers;for(const e of f){const t=e[0],n=e[1],r=e[2];gy(t in s);const a=s[t].inboundNodes[n].outputTensors;d.push(a[r])}return new e({inputs:h,outputs:d,name:l})}get stateful(){if(this._stateful)throw new hy("Container instance unexpectedly has _stateful = true. The statefulness of a Container is determined by the Layers it contains. Its _stateful property must remain the default false.");for(const e of this.layers)if(e.stateful)return!0;return!1}resetStates(){ui(()=>{this.layers.forEach(e=>{e.stateful&&e.resetStates()})})}}function Mw(e,t){return function(e,t,n){const r=t.length;if(null==e||Array.isArray(e)&&0===e.length)return t.map(e=>null);if(1===r)return Array.isArray(e)&&1===e.length?e:"object"==typeof e&&t[0]in e?[e[t[0]]]:[e];if(Array.isArray(e)){if(e.length!==r)throw new Error(`Provided ${n} is an array of ${e.length} element(s), but the model has ${r} outputs. Make sure a set of weights is provided for each model output.`);return e}if("object"==typeof e&&Object.keys(e).length>0&&"object"==typeof e[Object.keys(e)[0]]){const n=[];return t.forEach(t=>{t in e?n.push(e[t]):n.push(null)}),n}throw new Error(`The model has multiple (${r}) outputs, so ${n} must be either an array with ${r} elements or an object with ${t} keys. Provided ${n} not understood: ${JSON.stringify(e)}`)}(e,t,"classWeight")}async function Fw(e,t,n,r){if(null!=t||null!=r)throw new Error("Support sampleWeight is not implemented yet");if(null!=n){const t=ui(()=>{if(1===e.shape.length)return So(e);if(2===e.shape.length){if(e.shape[1]>1)return Ol(e,1);if(1===e.shape[1])return sc(e,[e.shape[0]]);throw new Error(`Encountered unexpected last-dimension size (${e.shape[1]}) during handling of class weights. The size is expected to be >= 1.`)}throw new Error(`Unexpected rank of target (y) tensor (${e.rank}) during handling of class weights. The rank is expected to be 1 or 2.`)}),r=Array.from(await t.data());li(t);const s=[];return r.forEach(e=>{if(null==n[e])throw new Error(`classWeight must contain all classes in the training data. The class ${e} exists in the data but not in classWeight`);s.push(n[e])}),sp(s,"float32")}return null}function Dw(e,t){return $o(e,t)}function Ow(e,t){let n,r;const s=t;n=s.xs,r=s.ys,ie(null!=n&&null!=r,()=>`A Dataset iterator for fitDataset() is expected to generate objects of the form \\`{xs: xVal, ys: yVal}\\`, where the two values may be \\`tf.Tensor\\`, an array of Tensors, or a map of string to Tensor.  The provided Dataset instead generates ${t}`);const a=Lw("input",e.inputNames,n),i=Lw("output",e.outputNames,r),o=a[0].shape[0];ie(a.length===e.inputs.length,()=>`LayersModel has ${e.inputs.length} inputs, but the dataset provides ${a.length} inputs.  (Expected input keys: ${JSON.stringify(e.inputNames)})`),ie(i.length===e.outputs.length,()=>`LayersModel has ${e.outputs.length} outputs, but the dataset provides ${i.length} outputs.  (Expected output keys: ${JSON.stringify(e.outputNames)})`);for(let t=0;t<a.length;t++)ie(a[t].shape[0]===o,()=>`Batch size mismatch: input ${e.inputNames[t]} has ${a[t].shape[0]}; expected  ${o} based on input ${e.inputNames[0]}.`);for(let t=0;t<i.length;t++)ie(i[t].shape[0]===o,()=>`Batch size mismatch: output ${e.outputNames[t]} has ${i[t].shape[0]}; expected  ${o} based on input ${e.inputNames[0]}.`);return{xs:a,ys:i}}function Lw(e,t,n){if(n instanceof pa)return[n];if(Array.isArray(n))return ie(n.length===t.length,()=>`Received an array of ${n.length} Tensors, but expected ${t.length} to match the ${e} keys ${t}.`),n;{const r=[];for(const s of t){if(null==n[s])throw new hy(`The feature data generated by the dataset lacks the required ${e} key \'${s}\'.`);r.push(n[s])}return r}}function zw(e){return"function"==typeof e.iterator}function Pw(e){ie(e>0&&Number.isInteger(e),()=>`batchSize is required to be a positive integer, but got ${e}`)}function Bw(e,t,n){return null==e?[null]:Array.isArray(e)?e.map(e=>ub(e,t,n-t)):ub(e,t,n-t)}function Vw(e,t){return ui(()=>null==e?null:Array.isArray(e)?e.map(e=>Vw(e,t)):gb(e,"int32"===t.dtype?t:Io(t,"int32")))}function Uw(e,t){const n=[];let r=0,s=null;for(;r<e;)s=r+t,s>=e&&(s=e),n.push([r,s]),r=s;return n}function Ww(e){const t=[];e instanceof pa&&(e=[e]);for(let n=0;n<e.length;++n){const r=e[n];if(1===r.rank)t.push(ob(r,1));else{if(0===r.rank)throw new Error("Expected tensor to be at least 1D, but received a 0D tensor (scalar).");t.push(r)}}return t}function Gw(e,t){if(null==e)return;const n=[];if(t instanceof pa)n.push(t.id);else if(Array.isArray(t))t.forEach(e=>n.push(e.id));else if(null!=t)for(const e in t){const r=t[e];n.push(r.id)}const r=[];if(e instanceof pa)-1===n.indexOf(e.id)&&r.push(e);else if(Array.isArray(e))e.forEach(e=>{-1===n.indexOf(e.id)&&r.push(e)});else if(null!=e)for(const t in e){const s=e[t];-1===n.indexOf(s.id)&&r.push(s)}r.forEach(e=>{e.isDisposed||e.dispose()})}function Hw(e){return Array.isArray(e)}function jw(e){return!function(e){return e instanceof pa}(e)&&!Hw(e)}function qw(e,t,n,r=!0,s=""){if(null==t||0===t.length){if(null!=e){let t=!1;if(Hw(e)&&e.length>0)t=!0;else if(jw(e)){for(const n in e)if(e.hasOwnProperty(n)){t=!0;break}}else t=!0;if(t)throw new hy(`Error when checking model ${s} expected no data, but got ${e}`)}return[]}if(null==e)return t.map(e=>null);let a;if(jw(e)){a=[];for(const n of t){if(null==e[n])throw new hy(`No data provided for "${n}". Need data for each key in: ${t}`);a.push(e[n])}}else if(Hw(e)){if(e.length!==t.length)throw new hy(`Error when checking model ${s}: the Array of Tensors that you are passing to your model is not the size the model expected. Expected to see ${t.length} Tensor(s), but instead got the following list of Tensor(s): ${e}`);a=e}else{if(t.length>1)throw new hy(`The model ${s} expects ${t.length} Tensor(s), but only received one Tensor. Found: Tensor with shape ${e.shape}`);a=[e]}if(a=Ww(a),null!=n)for(let e=0;e<t.length;++e){if(null==n[e])continue;const i=a[e];if(i.shape.length!==n[e].length)throw new hy(`Error when checking ${s}: expected ${t[e]} to have ${n[e].length} dimension(s). but got array with shape ${i.shape}`);for(let t=0;t<n[e].length;++t){if(0===t&&!r)continue;const a=i.shape[t],o=n[e][t];if(null!=o&&o>=0&&a!==o)throw new hy(`${s} expected a batch of elements where each example has shape [${n[e].slice(1,n[e].length)}] (i.e.,tensor shape [*,${n[e].slice(1,n[e].length)}]) but the ${s} received an input with ${i.shape[0]} examples, each with shape [${i.shape.slice(1,i.shape.length)}] (tensor shape [${i.shape}])`)}}return a}function Kw(e,t,n,r=!0,s=""){let a;if(Array.isArray(e)){if(e.length!==t.length)throw new hy(`Error when checking model ${s}: the Array of Tensors that you are passing to your model is not the size the the model expected. Expected to see ${t.length} Tensor(s), but instead got ${e.length} Tensors(s).`);a=e}else{if(t.length>1)throw new hy(`The model expects ${t.length} ${s} Tensors, but only received one Tensor. Found: array with shape ${JSON.stringify(e.shape)}.`);a=[e]}if(null!=n)for(let e=0;e<t.length;++e){if(null==n[e])continue;const i=a[e];if(i.shape.length!==n[e].length)throw new hy(`Error when checking ${s}: expected ${t[e]} to have ${n[e].length} dimension(s), but got array with shape ${JSON.stringify(i.shape)}`);for(let a=0;a<n[e].length;++a){if(0===a&&!r)continue;const o=i.shape[a],u=n[e][a];if(null!=u&&u!==o)throw new hy(`Error when checking ${s}: expected ${t[e]} to have shape ${JSON.stringify(n[e])} but got array with shape ${JSON.stringify(i.shape)}.`)}}}class Xw extends _w{constructor(e){super(e),this.isTraining=!1}summary(e,t,n=console.log){if(!this.built)throw new hy("This model has never been called, thus its weights have not been created yet. So no summary can be displayed. Build the model first (e.g., by calling it on some test data).");!function(e,t,n,r=console.log){const s=function(e){let t=!0;const n=[],r=[];for(const t in e.nodesByDepth)n.push(e.nodesByDepth[t]);for(const e of n){if(e.length>1||1===e.length&&e[0].inboundLayers.length>1){t=!1;break}r.push(...e)}if(t)for(const n of e.layers){let e=!1;for(const s of n.inboundNodes)if(-1!==r.indexOf(s)){if(e){t=!1;break}e=!0}if(!t)break}return t}(e),a=["Layer (type)","Input Shape","Output shape","Param #"];let i;if(s?(t=t||90,n=n||[.32,.61,.89,1]):(t=t||115,n=n||[.24,.48,.7,.8,1]),n[n.length-1]<=1&&(n=n.map(e=>Math.floor(t*e))),!s){a.push("Receives inputs"),i=[];for(const t in e.nodesByDepth)i.push(...e.nodesByDepth[t])}r("_".repeat(t)),Nw(a,n,r),r("=".repeat(t));const o=e.layers;for(let e=0;e<o.length;++e)s?Tw(o[e],n,r):Ew(o[e],n,i,r),r((e===o.length-1?"=":"_").repeat(t));e.checkTrainableWeightsConsistency();const u=function(e){let t;return t=null!=e.collectedTrainableWeights?Kb(e.collectedTrainableWeights):Kb(e.trainableWeights),t}(e),l=Kb(e.nonTrainableWeights);r(`Total params: ${u+l}`),r(`Trainable params: ${u}`),r(`Non-trainable params: ${l}`),r("_".repeat(t))}(this,e,t,n)}compile(e){if(null==e.loss&&(e.loss=[]),this.loss=e.loss,"string"==typeof e.optimizer)this.optimizer_=function(e){const t={Adagrad:()=>Bf.adagrad(.01),Adadelta:()=>Bf.adadelta(1,.95,ab()),Adam:()=>Bf.adam(.001,.9,.999,ab()),Adamax:()=>Bf.adamax(.002,.9,.999,ab(),0),RMSProp:()=>Bf.rmsprop(.001,.9,0,ab()),SGD:()=>Bf.sgd(.01)};if(t.adagrad=t.Adagrad,t.adadelta=t.Adadelta,t.adam=t.Adam,t.adamax=t.Adamax,t.rmsprop=t.RMSProp,t.sgd=t.SGD,e in t)return t[e]();throw new hy(`Unknown Optimizer ${e}`)}(e.optimizer),this.isOptimizerOwned=!0;else{if(!(e.optimizer instanceof qo))throw new hy("User-defined optimizer must be an instance of tf.Optimizer.");this.optimizer_=e.optimizer,this.isOptimizerOwned=!1}let t=[];if(Array.isArray(e.loss)||"string"==typeof e.loss||"function"==typeof e.loss)if(Array.isArray(e.loss)){if(e.loss.length!==this.outputs.length)throw new hy(`When passing an Array as loss, it should have one entry per model output. The model has ${this.outputs.length} output(s), but you passed loss=${e.loss}.`);const n=e.loss;t=n.map(e=>hw(e))}else{const n=hw(e.loss);this.outputs.forEach(e=>{t.push(n)})}else{e.loss=e.loss;for(const t in e.loss)if(-1===this.outputNames.indexOf(t))throw new hy(`Unknown entry in loss dictionary: "${t}". Only expected the following keys: ${this.outputNames}`);for(const n of this.outputNames)null==e.loss[n]&&console.warn(`Output "${n}" is missing from loss dictionary. We assume this was done on purpose, and we will not be expecting data to be passed to ${n} during training`),t.push(hw(e.loss[n]))}this.lossFunctions=t,this.feedOutputNames=[],this.feedOutputShapes=[],this.feedLossFns=[];for(let e=0;e<this.outputs.length;++e){const t=this.internalOutputShapes[e],n=this.outputNames[e];this.feedOutputNames.push(n),this.feedOutputShapes.push(t),this.feedLossFns.push(this.lossFunctions[e])}const n=[];this.metrics=e.metrics,this.metricsNames=["loss"],this.metricsTensors=[],Ky("loss",()=>{for(let e=0;e<this.outputs.length;++e){if(-1!==n.indexOf(e))continue;const t=this.lossFunctions[e];this.outputs.length>1&&(this.metricsTensors.push([t,e]),this.metricsNames.push(this.outputNames[e]+"_loss"))}});const r=function(e,t){if(null==e||Array.isArray(e)&&0===e.length)return t.map(e=>[]);let n;if("string"==typeof e||"function"==typeof e)n=[e];else{if(!Array.isArray(e)&&"object"!=typeof e)throw new TypeError(`Type of metrics argument not understood. Expected an string,function, Array, or Object, found: ${e}`);n=e}if(Array.isArray(n))return t.map(e=>n);{const e=[];for(const r of t){let t=n.hasOwnProperty(r)?n[r]:[];Array.isArray(t)||(t=[t]),e.push(t)}return e}}(e.metrics,this.outputNames),s=(e,t,n)=>{this.outputNames.length>1&&(t=this.outputNames[e]+"_"+t),this.metricsNames.push(t),this.metricsTensors.push([n,e])};Ky("metric",()=>{for(let e=0;e<this.outputs.length;++e)-1===n.indexOf(e)&&(t=>{let n,r,a;for(const i of t){if("string"==typeof i&&-1!==["accuracy","acc","crossentropy","ce"].indexOf(i)){const t=this.internalOutputShapes[e];let s;1===t[t.length-1]||this.lossFunctions[e]===uw?-1!==["accuracy","acc"].indexOf(i)?r=dw:-1!==["crossentropy","ce"].indexOf(i)&&(r=gw):this.lossFunctions[e]===ow?-1!==["accuracy","acc"].indexOf(i)?r=yw:-1!==["crossentropy","ce"].indexOf(i)&&(r=xw):-1!==["accuracy","acc"].indexOf(i)?r=pw:-1!==["crossentropy","ce"].indexOf(i)&&(r=bw),-1!==["accuracy","acc"].indexOf(i)?s="acc":-1!==["crossentropy","ce"].indexOf(i)&&(s="ce"),a=r,n=""+s}else{const e=vw(i);a=e,n=""+kw(i)}let t;Ky(n,()=>{t=a}),s(e,n,t)}})(r[e])}),this.collectedTrainableWeights=this.trainableWeights}checkTrainableWeightsConsistency(){null!=this.collectedTrainableWeights&&this.trainableWeights.length!==this.collectedTrainableWeights.length&&console.warn("Discrepancy between trainableweights and collected trainable weights. Did you set `model.trainable` without calling `model.compile()` afterwards?")}evaluate(e,t,n={}){const r=null==n.batchSize?32:n.batchSize;Pw(r);const s=this.standardizeUserDataXY(e,t,!0,r);try{const e=s[0].concat(s[1]);this.makeTestFunction();const t=this.testFunction;return by(this.testLoop(t,e,r,n.verbose,n.steps))}finally{Gw(s[0],e),Gw(s[1],t)}}async evaluateDataset(e,t){return this.makeTestFunction(),async function(e,t,n){const r=null!=(n=n||{}).batches,s=e.testFunction;let a=[];if(n.verbose>0)throw new dy("Verbose mode is not implemented yet.");ie(!r||n.batches>0&&Number.isInteger(n.batches),()=>`Test loop expects \\`batches\\` to be a positive integer, but received ${JSON.stringify(n.batches)}`);const i="function"==typeof t.next?t:await t.iterator();let o=0,u=0;for(;!r||u<n.batches;){const t=await i.next();if(a=ui(()=>{if(t.value){const{xs:n,ys:r}=Ow(e,t.value),i=n.concat(r),l=ui(()=>s(i));if(li(i),0===u)for(let e=0;e<l.length;++e)a.push(Bo(0));const c=i[0].shape[0];for(let e=0;e<l.length;++e){const t=l[e],n=a[e];a[e]=ui(()=>To(a[e],$o(c,t))),u>0&&li(n)}li(l),o+=c,++u}return a}),t.done){r&&console.warn(`Your dataset iterator ran out of data during evaluateDataset(). Interrupting evalution. Make sure that your dataset can generate at least \\`batches\\` batches (in this case, ${n.batches} batches). You may need to use the repeat() function when building your dataset.`);break}}for(let e=0;e<a.length;++e){const t=a[e];a[e]=Co(a[e],o),li(t)}return by(a)}(this,e,t)}checkNumSamples(e,t,n,r="steps"){let s;if(null!=n){if(s=null,null!=t)throw new hy(`If ${r} is set, batchSize must be null or undefined.Got batchSize = ${t}`)}else{if(null==e)throw new hy(`Either the input data should have a defined shape, or ${r} shoud be specified.`);s=Array.isArray(e)?e[0].shape[0]:e.shape[0]}return s}execute(e,t){if(Array.isArray(t)&&0===t.length)throw new hy("`outputs` is an empty Array, which is not allowed.");const n=Array.isArray(t),r=n?t:[t],s=this.retrieveSymbolicTensors(r),a=new ux;if(e instanceof pa&&(e=[e]),Array.isArray(e)){if(e.length!==this.inputs.length)throw new hy(`The number of inputs provided (${e.length}) does not match the number of inputs of this model (${this.inputs.length}).`);for(let t=0;t<this.inputs.length;++t)a.add(this.inputs[t],e[t])}else for(const t of this.inputs){const n=e[t.name];if(null==n)throw new hy(`No value is provided for the model\'s input ${t.name}`);a.add(t,n)}const i=hx(s,a);return n?i:i[0]}retrieveSymbolicTensors(e){const t=my(null,e.length);let n=e.length;for(const r of this.layers){const s=Array.isArray(r.output)?r.output:[r.output],a=s.map(e=>e.name);for(let r=0;r<e.length;++r){const i=a.indexOf(e[r]);if(-1!==i&&(t[r]=s[i],n--),0===n)break}if(0===n)break}if(n>0){const n=[];throw t.forEach((t,r)=>{null==t&&n.push(e[r])}),new hy(`Cannot find SymbolicTensors for output name(s): ${JSON.stringify(n)}`)}return t}predictLoop(e,t=32,n=!1){return ui(()=>{const r=this.checkNumSamples(e);if(n)throw new dy("Verbose predictLoop() is not implemented yet.");const s=Uw(r,t),a=this.outputs.map(e=>[]);for(let t=0;t<s.length;++t)ui(()=>{const n=s[t][0],r=s[t][1],a=Bw(e,n,r),i=[];if(Array.isArray(a))for(let e=0;e<a.length;++e)i.push({key:this.inputs[e],value:a[e]});else i.push({key:this.inputs[0],value:a});const o=new ux(i);return hx(this.outputs,o)}).forEach((e,t)=>a[t].push(e));return by(a.map(e=>oc(e,0)))})}predict(e,t={}){const n=Ww(e);Kw(n,this.inputNames,this.feedInputShapes,!1);try{const e=null==t.batchSize?32:t.batchSize;return Pw(e),this.predictLoop(n,e)}finally{Gw(n,e)}}predictOnBatch(e){Kw(e,this.inputNames,this.feedInputShapes,!0);const t=(Array.isArray(e)?e[0]:e).shape[0];return this.predictLoop(e,t)}standardizeUserDataXY(e,t,n=!0,r){if(null==this.optimizer_)throw new cy("You must compile a model before training/testing. Use LayersModel.compile(modelCompileArgs).");const s=[];for(let e=0;e<this.feedOutputShapes.length;++e){const t=this.feedOutputShapes[e];this.feedLossFns[e]===ow?s.push(t.slice(0,t.length-1).concat([1])):s.push(t)}if(function(e,t){const n=Ey(e.map(e=>e.shape[0]));n.sort();const r=Ey(t.map(e=>e.shape[0]));if(r.sort(),n.length>1)throw new hy(`All input Tensors (x) should have the same number of samples. Got array shapes: ${JSON.stringify(e.map(e=>e.shape))}`);if(r.length>1)throw new hy(`All target Tensors (y) should have the same number of samples. Got array shapes: ${JSON.stringify(t.map(e=>e.shape))}`);if(n.length>0&&r.length>0&&!de(n,r))throw new hy(`Input Tensors should have the same number of samples as target Tensors. Found ${n[0]} input sample(s) and ${r[0]} target sample(s).`)}(e=qw(e,this.feedInputNames,this.feedInputShapes,!1,"input"),t=qw(t,this.feedOutputNames,s,!1,"target")),function(e,t,n){const r=[rw,uw,iw];for(let s=0;s<e.length;++s){const a=e[s],i=t[s],o=n[s];if(null!=i){if(i===iw&&1===a.shape[a.shape.length-1])throw new hy(`You are passing a target array of shape ${a.shape} while using a loss \'categorical_crossentropy\'. \'categorical_crossentropy\'expects targets to be binary matrices (1s and 0s) of shape [samples, classes].`);if(-1!==r.indexOf(i)){const e=a.shape.slice(1),t=o.slice(1);for(let n=0;n<e.length;++n){const r=e[n],s=t[n];if(null!=s&&r!==s)throw new hy(`A target Tensor with shape ${a.shape} was passed for an output of shape ${o}, while using a loss function that expects targets to have the same shape as the output.`)}}}}}(t,this.feedLossFns,this.feedOutputShapes),this.stateful&&null!=r&&r>0&&e[0].shape[0]%r!==0)throw new hy(`In a stateful network, you should only pass inputs with a number of samples that is divisible by the batch size ${r}. Found: ${e[0].shape[0]} sample(s).`);return[e,t]}async standardizeUserData(e,t,n,r,s=!0,a){const[i,o]=this.standardizeUserDataXY(e,t,s,a);if(null!=n)throw new Error("sample weight is not supported yet.");let u=null;if(null!=r){const e=Mw(r,this.outputNames);u=[];for(let t=0;t<e.length;++t)u.push(await Fw(o[t],null,e[t]))}return[i,o,u]}testLoop(e,t,n,r=0,s){return ui(()=>{const a=this.checkNumSamples(t,n,s,"steps"),i=[];if(r>0)throw new dy("Verbose mode is not implemented yet.");if(null!=s)throw new dy("steps mode in testLoop() is not implemented yet");{const r=Uw(a,n),s=sp(rb(0,a));for(let n=0;n<r.length;++n){const a=r[n][0],o=r[n][1],u=ub(s,a,o-a),l=Vw(t,u),c=e(l);if(0===n)for(let e=0;e<c.length;++e)i.push(Bo(0));for(let e=0;e<c.length;++e){const t=c[e];i[e]=To(i[e],$o(o-a,t))}}for(let e=0;e<i.length;++e)i[e]=Co(i[e],a)}return i})}getDedupedMetricsNames(){const e=this.metricsNames,t=[];for(let n=0;n<e.length;++n){const r=e[n];let s=r;yy(e,r)>1&&(s+=`_${yy(e.slice(0,n),r)}`),t.push(s)}return t}makeTrainFunction(){return e=>{const t=[],n=e.slice(0,this.inputs.length),r=e.slice(this.inputs.length,this.inputs.length+this.outputs.length),s=e.slice(this.inputs.length+this.outputs.length,this.inputs.length+2*this.outputs.length),a=[],i=this.collectedTrainableWeights.map(e=>e.read());return[this.optimizer_.minimize(()=>{const e=[];for(let t=0;t<this.inputs.length;++t)e.push({key:this.inputs[t],value:n[t]});const i=new ux(e),o=hx(this.outputs,i,{training:!0});let u;for(let e=0;e<this.lossFunctions.length;++e){let n=(0,this.lossFunctions[e])(r[e],o[e]);null!=s[e]&&(n=Dw(n,s[e]));const a=Gh(n);t.push(a),u=0===e?n:To(u,n)}for(let e=0;e<this.metricsTensors.length;++e){let n;if(this.outputs.length>1&&e<this.outputs.length)n=t[e];else{const t=this.metricsTensors[e][0],s=this.metricsTensors[e][1];n=Gh(t(r[s],o[s]))}ci(n),a.push(n)}return u=Gh(u),this.calculateLosses().forEach(e=>{u=To(u,e)}),u},!0,i)].concat(a)}}makeTestFunction(){this.testFunction=e=>ui(()=>{const t=[];let n;const r=e.slice(0,this.inputs.length),s=e.slice(this.inputs.length,this.inputs.length+this.outputs.length),a=[];for(let e=0;e<this.inputs.length;++e)a.push({key:this.inputs[e],value:r[e]});const i=new ux(a),o=hx(this.outputs,i);for(let e=0;e<this.lossFunctions.length;++e){const r=this.lossFunctions[e],a=Gh(r(s[e],o[e]));n=0===e?a:To(n,a),t.push(n)}for(let e=0;e<this.metricsTensors.length;++e){const n=this.metricsTensors[e][0],r=this.metricsTensors[e][1],a=Gh(n(s[r],o[r]));t.push(a)}return t})}async fit(e,t,n={}){if(this.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");let r,s,a,i,o,u,l,c,h;this.isTraining=!0;try{const d=null==n.batchSize?32:n.batchSize;Pw(d);const p=!1,f=await this.standardizeUserData(e,t,n.sampleWeight,n.classWeight,p,d);r=f[0],s=f[1],h=f[2];let m,g=!1;if(null!=n.validationData&&n.validationData.length>0){if(g=!0,2!==n.validationData.length)throw 3===n.validationData.length?new dy("validationData including sample weights is not supported yet."):new hy(`When passing validation data, it must contain 2 (valX, valY) or 3 (valX, valY, valSampleWeight) items; ${n.validationData} is invalid.`);o=n.validationData[0],u=n.validationData[1];const e=!0,t=await this.standardizeUserData(o,u,null,null,e,d);l=t[0],c=t[1],m=l.concat(c)}else if(null!=n.validationSplit&&n.validationSplit>0&&n.validationSplit<1){g=!0;const e=Math.floor(r[0].shape[0]*(1-n.validationSplit)),t=r[0].shape[0];l=Bw(r,e,t),a=r,r=Bw(r,0,e),c=Bw(s,e,t),i=s,s=Bw(s,0,e),m=l.concat(c)}else null!=n.validationSteps&&(g=!0);const y=r.concat(s).concat(h);this.checkTrainableWeightsConsistency();const b=this.makeTrainFunction(),x=this.getDedupedMetricsNames();let w,v;g?(this.makeTestFunction(),w=this.testFunction,v=x.slice().concat(x.map(e=>"val_"+e))):(w=null,m=[],v=x.slice());const k=Zx(n.callbacks,n.yieldEvery);return await this.fitLoop(b,y,x,d,n.epochs,n.verbose,k,w,m,n.shuffle,v,n.initialEpoch,null,null)}finally{this.isTraining=!1,Gw(r,e),Gw(s,t),Gw(a,e),Gw(i,t),Gw(l,o),Gw(c,u),null!=h&&li(h)}}async fitLoop(e,t,n,r,s,a,i,o,u,l,c,h,d,p){null==r&&(r=32),null==s&&(s=1),null==l&&(l=!0),null==h&&(h=0);let f=!1;if(null!=o&&null!=u&&(f=!0),null!=p&&(f=!0,null==d))throw new hy("Can only use `validationSteps` when doing step-wise training, i.e., `stepsPerEpoch` must be set.");const m=this.checkNumSamples(t,r,d,"steps_per_epoch");let g;null!=m&&(g=rb(0,m)),null==a&&(a=1);const{callbackList:y,history:b}=ew(i,a,s,h,m,d,r,f,c);y.setModel(this),this.history=b,await y.onTrainBegin(),this.stopTraining_=!1;for(let a=h;a<s;++a){await y.onEpochBegin(a);const s={};if(null!=d)throw new dy("stepsPerEpoch mode is not implemented yet.");{if("batch"===l)throw new dy("batch shuffling is not implemneted yet");l&&Z(g);const a=sp(g),i=Uw(m,r);for(let l=0;l<i.length;++l){const c={};if(await y.onBatchBegin(l,c),ui(()=>{const h=i[l][0],d=i[l][1],p=ub(a,h,d-h);c.batch=l,c.size=d-h;const m=Vw(t,p),g=e(m);for(let e=0;e<n.length;++e){const t=n[e],r=g[e];c[t]=r,ci(r)}if(l===i.length-1&&f){const e=this.testLoop(o,u,r);for(let t=0;t<n.length;++t){const r=n[t],a=e[t];ci(a),s["val_"+r]=a}}}),await y.onBatchEnd(l,c),Hx(c),this.stopTraining_)break}a.dispose()}if(await y.onEpochEnd(a,s),this.stopTraining_)break}return await y.onTrainEnd(),await this.history.syncData(),this.history}async fitDataset(e,t){return async function(e,t,n){const r=null!=n.batchesPerEpoch;if(ie(null!=e.optimizer,()=>"You must compile a model before training/testing. Use LayersModel.compile(modelCompileConfig)."),ie(null!=n,()=>"For fitDataset(), the 2nd argument (config) is required, but it is not provided in this call."),ie(null!=n.epochs&&n.epochs>0&&Number.isInteger(n.epochs),()=>`For fitDataset(), config.epochs is expected to be a positive integer, but got ${n.epochs}`),ie(!r||n.batchesPerEpoch>0&&Number.isInteger(n.batchesPerEpoch),()=>`For fitDataset(), config.batchesPerEpoch is expected to be a positive integer if specified, but got ${n.batchesPerEpoch}`),ie(null==n.validationSplit,()=>"`validationSplit` is not supported by `fitDataset()`. Use validationData instead."),e.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");e.isTraining=!0;try{const s=null!=n.validationData;let a,i;if(s)if(zw(n.validationData))ie(null==n.validationBatches||n.validationBatches>0&&Number.isInteger(n.validationBatches),()=>`For fitDataset() with dataset-based validation, config.validationBatches is expected not to be provided, or to be a positive integer, but got ${n.validationBatches}`);else{const e=function(e){if(3===e.length)throw new dy("Validation with sample weights is not implemented yet.");return{xs:e[0],ys:e[1]}}(n.validationData);a=e.xs,i=e.ys}const o=e.makeTrainFunction(),u=e.getDedupedMetricsNames();let l;l=s?u.slice().concat(u.map(e=>"val_"+e)):u.slice();const c=Zx(n.callbacks,n.yieldEvery),h=null==n.verbose?1:n.verbose,{callbackList:d,history:p}=ew(c,h,n.epochs,null,null,function(e,t){let n=null;return null!=t.batchesPerEpoch?n=t.batchesPerEpoch:Number.isFinite(e.size)&&(n=e.size),n}(t,n),null,s,l);d.setModel(e),e.history=p,await d.onTrainBegin(),e.stopTraining_=!1;let f=null==n.initialEpoch?0:n.initialEpoch,m=await t.iterator();for(;f<n.epochs;){const l={};await d.onEpochBegin(f);let c=0,h=0;for(r||(m=await t.iterator());!r||c<n.batchesPerEpoch;){const t=await m.next();if(r&&t.done){console.warn(`You provided \\`batchesPerEpoch\\` as ${n.batchesPerEpoch}, but your dataset iterator ran out of data after ${c} batches; interrupting training. Make sure that your dataset can generate at least \\`batchesPerEpoch * epochs\\` batches (in this case, `+n.batchesPerEpoch*n.epochs+" batches). You may need to use the repeat() function when building your dataset.");break}if(null!=t.value){const{xs:r,ys:s}=Ow(e,t.value),a={};a.batch=h,a.size=r[0].shape[0],await d.onBatchBegin(h,a);const i=[];if(null!=n.classWeight){const t=Mw(n.classWeight,e.outputNames);for(let e=0;e<t.length;++e)i.push(await Fw(s[e],null,t[e]))}const l=r.concat(s).concat(i),p=o(l);li(l);for(let e=0;e<u.length;++e){const t=u[e],n=p[e];a[t]=n,ci(n)}await d.onBatchEnd(h,a),Hx(a),h++,c++}if(r?c>=n.batchesPerEpoch:t.done){if(s){let t;t=zw(n.validationData)?xy(await e.evaluateDataset(n.validationData,{batches:n.validationBatches})):xy(e.evaluate(a,i,{batchSize:null==n.validationBatchSize?32:n.validationBatchSize,verbose:0}));for(let n=0;n<e.metricsNames.length;++n)l[`val_${e.metricsNames[n]}`]=t[n]}break}if(e.stopTraining_)break}if(await d.onEpochEnd(f,l),f++,e.stopTraining_)break}return await d.onTrainEnd(),await e.history.syncData(),e.history}finally{e.isTraining=!1}}(this,e,t)}async trainOnBatch(e,t){const n=await this.standardizeUserData(e,t),r=n[0],s=n[1],a=this.makeTrainFunction()(r.concat(s)),i=[];for(const e of a){const t=await e.data();i.push(t[0])}return li(a),Gw(n[0],e),Gw(n[1],t),by(i)}getNamedWeights(e){const t=[],n=null!=e&&e.trainableOnly,r=n?this.trainableWeights:this.weights,s=this.getWeights(n);for(let e=0;e<r.length;++e)n&&!r[e].trainable||t.push({name:r[e].originalName,tensor:s[e]});return t}set stopTraining(e){this.stopTraining_=e}get stopTraining(){return this.stopTraining_}get optimizer(){return this.optimizer_}set optimizer(e){this.optimizer_!==e&&(this.optimizer_=e,this.isOptimizerOwned=!1)}dispose(){const e=super.dispose();if(0===e.refCountAfterDispose&&null!=this.optimizer&&this.isOptimizerOwned){const t=ii().numTensors;this.optimizer_.dispose(),e.numDisposedVariables+=t-ii().numTensors}return e}getLossIdentifiers(){let e;if("string"==typeof this.loss)e=wy(this.loss);else if(Array.isArray(this.loss)){for(const e of this.loss)if("string"!=typeof e)throw new Error("Serialization of non-string loss is not supported.");e=this.loss.map(e=>wy(e))}else{const t=Object.keys(this.loss);e={};const n=this.loss;for(const r of t){if("string"!=typeof n[r])throw new Error("Serialization of non-string loss is not supported.");e[r]=wy(n[r])}}return e}getMetricIdentifiers(){if("string"==typeof this.metrics||"function"==typeof this.metrics)return[wy(kw(this.metrics))];if(Array.isArray(this.metrics))return this.metrics.map(e=>wy(kw(e)));{const e={};for(const t in this.metrics)e[t]=wy(kw(this.metrics[t]));return e}}getTrainingConfig(){return{loss:this.getLossIdentifiers(),metrics:this.getMetricIdentifiers(),optimizer_config:{class_name:this.optimizer.getClassName(),config:this.optimizer.getConfig()}}}loadTrainingConfig(e){if(null!=e.weighted_metrics)throw new Error("Loading weight_metrics is not supported yet.");if(null!=e.loss_weights)throw new Error("Loading loss_weights is not supported yet.");if(null!=e.sample_weight_mode)throw new Error("Loading sample_weight_mode is not supported yet.");const t=tw($w(e.optimizer_config));let n,r;if("string"==typeof e.loss)n=vy(e.loss);else if(Array.isArray(e.loss))n=e.loss.map(e=>vy(e));else if(null!=e.loss){n={};for(const t in e.loss)n[t]=vy(e.loss[t])}if(Array.isArray(e.metrics))r=e.metrics.map(e=>vy(e));else if(null!=e.metrics){r={};for(const t in e.metrics)r[t]=vy(e.metrics[t])}this.compile({loss:n,metrics:r,optimizer:t})}async save(e,t){if("string"==typeof e){const t=Ui(e);if(0===t.length)throw new hy(`Cannot find any save handlers for URL \'${e}\'`);if(t.length>1)throw new hy(`Found more than one (${t.length}) save handlers for URL \'${e}\'`);e=t[0]}if(null==e.save)throw new hy("LayersModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");const n=await ki(this.getNamedWeights(t)),r={modelTopology:this.toJSON(null,!1),format:"layers-model",generatedBy:`TensorFlow.js tfjs-layers v${Rw}`,convertedBy:null};if(null!=t&&t.includeOptimizer&&null!=this.optimizer){r.trainingConfig=this.getTrainingConfig();const e="optimizer",{data:t,specs:s}=await ki(await this.optimizer.getWeights(),e);n.specs.push(...s),n.data=_i([n.data,t])}if(null!=this.userDefinedMetadata){const e=!0;Iw(this.userDefinedMetadata,this.name,e),r.userDefinedMetadata=this.userDefinedMetadata}return r.weightData=n.data,r.weightSpecs=n.specs,e.save(r)}setUserDefinedMetadata(e){Iw(e,this.name),this.userDefinedMetadata=e}getUserDefinedMetadata(){return this.userDefinedMetadata}}Xw.className="Model",Ho(Xw);class Yw extends Xw{}async function Jw(e,t){"modelTopology"in e||(e={modelTopology:e});let n=e.modelTopology;null!=n.model_config&&(n=n.model_config);const r=tw($w(n),t);if(null!=e.weightsManifest){const t=await gu(e.weightsManifest,e.pathPrefix,r.weights.map(e=>e.originalName)),n={};for(const e of r.weights)n[e.originalName]=t[e.originalName];r.loadWeights(n),li(t)}return r}async function Zw(e,t){if(null==t&&(t={}),"string"==typeof e){const n=Wi(e,t);if(0===n.length)n.push(ku(e,t));else if(n.length>1)throw new hy(`Found more than one (${n.length}) load handlers for URL \'${e}\'`);e=n[0]}return async function(e,t,n){if(null==n&&(n={}),null==e.load)throw new hy("Cannot proceed with model loading because the IOHandler provided does not have the `load` method implemented.");const r=await e.load();let s=r.modelTopology;null!=s.model_config&&(s=s.model_config);const a=null==n.strict||n.strict,i=null!=r.weightData&&null!=r.weightSpecs&&a,o=tw($w(s),void 0,i),u=r.trainingConfig;if(null!=u&&o.loadTrainingConfig(u),null!=r.userDefinedMetadata&&o.setUserDefinedMetadata(r.userDefinedMetadata),null!=r.weightData){if(null==r.weightSpecs)throw new hy("LayersModel artifacts contains weight data, but not weight specs. Therefore loading of weights cannot proceed.");const{modelWeights:e,optimizerWeights:t}=function(e,t){const n=Ii(e,t),r={},s=[];return t.forEach(e=>{"optimizer"===e.group?s.push({name:e.name,tensor:n[e.name]}):r[e.name]=n[e.name]}),{modelWeights:r,optimizerWeights:s}}(r.weightData,r.weightSpecs);o.loadWeights(e,a),null!=o.optimizer&&t.length>0&&await o.optimizer.setWeights(t),li(e),li(t.map(e=>e.tensor))}return o}(e,0,t)}Yw.className="Functional",Ho(Yw);class Qw extends Xw{constructor(e){if(super({inputs:[],outputs:[]}),e=e||{},this.trainable=!0,this.built=!1,this.name=null!=e.name?e.name:Ly("sequential_"),null!=e.layers)for(const t of e.layers)this.add(t)}checkShape(e){if(e.inboundNodes[0].outputTensors[0].shape.some(e=>e<0))throw new hy(`Negative dimension size caused by adding layer ${e.name} with input shape [${e.inboundNodes[0].inputTensors[0].shape}]`)}add(e){const t=e instanceof Qw||e instanceof Xw;let n;if(t){if(n=e,1!==n.outputs.length)throw new hy("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");if(1!==n.inputs.length)throw new hy("All layers in a Sequential model should have a single input tensor. For multi-input layers, use the functional API.")}if(0===this.outputs.length){if(0===e.inboundNodes.length){if(null==e.batchInputShape)throw new hy("The first layer in a Sequential model must get an `inputShape` or `batchInputShape` argument.");const t=ox({batchShape:e.batchInputShape,dtype:e.dtype,name:e.name+"_input"});e.apply(t)}if(t)this.outputs=n.outputs,this.inputs=n.inputs;else{if(1!==e.inboundNodes.length)throw new hy(`A layer added to a Sequential model must not already be connected somewhere else. LayersModel received layer ${e.name} which has ${e.inboundNodes.length} pre-existing inbound connections.`);if(1!==e.inboundNodes[0].outputTensors.length)throw new hy("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(e),this.outputs=[e.inboundNodes[0].outputTensors[0]],this.inputs=ax(this.outputs[0])}this.inboundNodes=[],new nx({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:my(null,this.inputs.length),outputMasks:[null],inputShapes:this.inputs.map(e=>e.shape),outputShapes:this.outputs[0].shape})}else{const t=e.apply(this.outputs[0]);if(Array.isArray(t))throw new TypeError("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(e),this.outputs=[t],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}this.layers.push(e),this.built=!1}pop(){if(0===this.layers.length)throw new TypeError("There are no layers in the model.");if(this.layers.pop(),0===this.layers.length)this.outputs=[],this.inboundNodes=[],this.outboundNodes=[];else{const e=this.layers.length-1;this.layers[e].outboundNodes=[],this.outputs=[this.layers[e].output],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}}call(e,t){return null==this.model&&this.build(),this.model.call(e,t)}build(e){if(qb(e),0===this.inputs.length||0===this.outputs.length)throw new TypeError("Sequential model cannot be built: model is empty. Add some layers first.");this.model=new Xw({inputs:this.inputs,outputs:this.outputs[0],name:this.name+"_model"}),this.model.trainable=this.trainable,this.supportsMasking=this.model.supportsMasking,this.inputLayers=this.model.inputLayers,this.inputLayersNodeIndices=this.model.inputLayersNodeIndices,this.inputLayersTensorIndices=this.model.inputLayersTensorIndices,this.outputLayers=this.model.outputLayers,this.outputLayersNodeIndices=this.model.outputLayersNodeIndices,this.outputLayersTensorIndices=this.model.outputLayersTensorIndices,this.nodesByDepth=this.model.nodesByDepth,this.containerNodes=this.model.containerNodes,this.outputNames=this.model.outputNames,this.inputNames=this.model.inputNames,this.built=!0}countParams(){return this.built||this.build(),super.countParams()}summary(e,t,n=console.log){this.built||this.build(),super.summary(e,t,n)}setWeights(e){null==this.model&&this.build(),this.model.setWeights(e)}evaluate(e,t,n={}){if(!this.built)throw new cy("The model needs to be compiled before being used.");return this.model.evaluate(e,t,n)}async evaluateDataset(e,t){if(!this.built)throw new cy("The model needs to be compiled before being used.");return this.model.evaluateDataset(e,t)}predict(e,t={}){return null==this.model&&this.build(),this.model.predict(e,t)}predictOnBatch(e){return null==this.model&&this.build(),this.model.predictOnBatch(e)}compile(e){this.build(),this.model.compile(e),this.optimizer_=this.model.optimizer,this.isOptimizerOwned=this.model.isOptimizerOwned,this.loss=this.model.loss,this.metrics=this.model.metrics,this.metricsTensors=this.model.metricsTensors,this.metricsNames=this.model.metricsNames}get optimizer(){return null==this.model?void 0:this.model.optimizer}set optimizer(e){this.model.optimizer=e}async fit(e,t,n={}){if(!this.built)throw new cy("The model needs to be compiled before being used.");return this.model.fit(e,t,n)}async fitDataset(e,t){if(!this.built)throw new cy("The model needs to be compiled before being used.");return this.model.fitDataset(e,t)}async trainOnBatch(e,t){return this.model.trainOnBatch(e,t)}static fromConfig(e,t,n={},r=!1){let s,a={};if(t instanceof Array){if(null==t[0].className||"Merge"===t[0].className)throw new hy("Legacy serialization format not supported yet.");s=t}else ie(null!=t.layers,()=>"When the config data for a Sequential model is not an Array, it must be an Object that contains the \'layers\' field."),s=t.layers,delete t.layers,a=t;const i=new e(a);if(!(i instanceof Qw))throw new dy(`Sequential.fromConfig called on non-Sequential input: ${i}`);for(const e of s){const t=tw(e,void 0,r);r&&t.setFastWeightInitDuringBuild(!0),i.add(t)}return i}set stopTraining(e){if(null==this.model)throw new hy("Cannot set the stopTraining property of a sequential model before it is compiled.");this.model.stopTraining=e}get stopTraining(){if(null==this.model)throw new hy("Cannot get the stopTraining property of a sequential model before it is compiled.");return this.model.stopTraining}getConfig(){const e=[];for(const t of this.layers){const n={};n.className=t.getClassName(),n.config=t.getConfig(),e.push(n)}return{name:this.name,layers:e}}}function ev(e){return new Xw(e)}function tv(e){return new Qw(e)}function nv(e){return ox(e)}function rv(e,t){Qx.registerCallbackConstructor(e,t)}Qw.className="Sequential",Ho(Qw);class sv extends Wo{getConfig(){return{}}}class av extends sv{apply(e,t=1){return function(e,t=1){if(1!==t)throw new dy(`Support for alpha values other than 1 (${t}) is not implemented yet.`);return Kc(e)}(e,t)}}av.className="elu",Ho(av);class iv extends sv{apply(e){return Od(e)}}iv.className="selu",Ho(iv);class ov extends sv{apply(e){return Ed(e)}}ov.className="relu",Ho(ov);class uv extends sv{apply(e){return ui(()=>Kh(6,Ed(e)))}}uv.className="relu6",Ho(uv);class lv extends sv{apply(e){return e}}lv.className="linear",Ho(lv);class cv extends sv{apply(e){return uc(e)}}cv.className="sigmoid",Ho(cv);class hv extends sv{apply(e){return function(e){return ui(()=>{const t=To(.5,$o(.2,e));return kc(t,0,1)})}(e)}}hv.className="hardSigmoid",Ho(hv);class dv extends sv{apply(e){return Ah(e)}}dv.className="softplus",Ho(dv);class pv extends sv{apply(e){return function(e){return ui(()=>Co(e,To(eu(e),1)))}(e)}}pv.className="softsign",Ho(pv);class fv extends sv{apply(e){return cc(e)}}fv.className="tanh",Ho(fv);class mv extends sv{apply(e,t=-1){return jd(e,t)}}mv.className="softmax",Ho(mv);class gv extends sv{apply(e,t=-1){return _h(e,t)}}gv.className="logSoftmax",Ho(gv);class yv extends sv{apply(e){return ui(()=>ui(()=>{const t=Math.sqrt(2),n=$o(.5,To(1,Yc(Co(e,t))));return $o(e,n)}))}}yv.className="gelu",Ho(yv);class bv extends sv{apply(e){return ui(()=>$o(.5,$o(e,To(1,cc($o(Ao(Co(2,Math.PI)),To(e,$o(.044715,Jo(e,3)))))))))}}bv.className="gelu_new",Ho(bv);class xv extends sv{apply(e){return ui(()=>$o(e,cc(Ah(e))))}}xv.className="mish",Ho(xv);class wv extends sv{apply(e,t=1){return ui(()=>$o(uc($o(e,t)),e))}}function vv(e){return e.getClassName()}function kv(e,t={}){return Ny(e,Go.getMap().classNameMap,t,"activation")}function Iv(e){if(null==e){return kv({className:"linear",config:{}})}if("string"==typeof e){const t={};return t.className=e,t.config={},kv(t)}return e instanceof sv?e:kv(e)}function Sv(e){if(null!=e&&"object"!=typeof e)throw new Error(`Argument to L1L2 regularizer\'s constructor is expected to be an object, but received: ${e}`)}wv.className="swish",Ho(wv);class Nv extends Wo{}class Tv extends Nv{constructor(e){super(),Sv(e),this.l1=null==e||null==e.l1?.01:e.l1,this.l2=null==e||null==e.l2?.01:e.l2,this.hasL1=0!==this.l1,this.hasL2=0!==this.l2}apply(e){return ui(()=>{let t=Hh([1]);return this.hasL1&&(t=To(t,oh($o(this.l1,eu(e))))),this.hasL2&&(t=To(t,oh($o(this.l2,yb(e))))),sc(t,[])})}getConfig(){return{l1:this.l1,l2:this.l2}}static fromConfig(e,t){return new e({l1:t.l1,l2:t.l2})}}Tv.className="L1L2",Ho(Tv);const Ev={l1l2:"L1L2"};function Cv(e){return Iy(e)}function $v(e,t={}){return Ny(e,Go.getMap().classNameMap,t,"regularizer")}function Av(e){return null==e?null:"string"==typeof e?$v({className:e in Ev?Ev[e]:e,config:{}}):e instanceof Nv?e:$v(e)}class Rv extends sx{constructor(e){super(null==e?{}:e),this.supportsMasking=!0,null!=e&&(this.maxValue=e.maxValue)}call(e,t){e=jb(e);let n=Ed(e);return null!=this.maxValue&&(n=kc(n,0,this.maxValue)),n}computeOutputShape(e){return e}getConfig(){const e={maxValue:this.maxValue},t=super.getConfig();return Object.assign(e,t),e}}Rv.className="ReLU",Ho(Rv);class _v extends sx{constructor(e){super(null==e?{}:e),this.DEFAULT_ALPHA=.3,null==e&&(e={}),this.alpha=null==e.alpha?this.DEFAULT_ALPHA:e.alpha}call(e,t){const n=jb(e);return Ih(n,this.alpha)}computeOutputShape(e){return e}getConfig(){const e={alpha:this.alpha},t=super.getConfig();return Object.assign(e,t),e}}_v.className="LeakyReLU",Ho(_v);class Mv extends sx{constructor(e){if(super(null==e?{}:e),this.DEFAULT_ALPHA_INITIALIZER="zeros",null==e&&(e={}),this.supportsMasking=!0,this.alphaInitializer=Wb(e.alphaInitializer||this.DEFAULT_ALPHA_INITIALIZER),this.alphaRegularizer=Av(e.alphaRegularizer),this.alphaConstraint=Sx(e.alphaConstraint),null==e.sharedAxes)this.sharedAxes=null;else if(Array.isArray(e.sharedAxes))this.sharedAxes=e.sharedAxes;else{if("number"!=typeof e.sharedAxes)throw new hy(`Expected sharedAxes to be a number or an array of numbers, but got ${e.sharedAxes}`);this.sharedAxes=[e.sharedAxes]}}build(e){const t=(e=qb(e)).slice(1);if(null!=this.sharedAxes)for(const e of this.sharedAxes)t[e-1]=1;this.alpha=this.addWeight("alpha",t,"float32",this.alphaInitializer,this.alphaRegularizer,!0,this.alphaConstraint);const n={};if(null!=this.sharedAxes)for(let t=1;t<e.length;++t)n[t]=e[t];this.inputSpec=[new Qb({ndim:e.length,axes:n})],this.built=!0}call(e,t){return e=jb(e),cd(e,this.alpha.read())}getConfig(){const e={alphaInitializer:Ub(this.alphaInitializer),alphaRegularizer:Cv(this.alphaRegularizer),alphaConstraint:kx(this.alphaConstraint),sharedAxes:this.sharedAxes},t=super.getConfig();return Object.assign(e,t),e}}Mv.className="PReLU",Ho(Mv);class Fv extends sx{constructor(e){if(super(null==e?{}:e),this.DEFAULT_ALPHA=1,null==e&&(e={}),null!=e.alpha&&e.alpha!==this.DEFAULT_ALPHA)throw new dy(`Non-default alpha value (${e.alpha}) is not supported by the ELU layer yet.`);this.alpha=null==e.alpha?this.DEFAULT_ALPHA:e.alpha}call(e,t){const n=jb(e);return Kc(n)}computeOutputShape(e){return e}getConfig(){const e={alpha:this.alpha},t=super.getConfig();return Object.assign(e,t),e}}Fv.className="ELU",Ho(Fv);class Dv extends sx{constructor(e){super(null==e?{}:e),this.DEFAULT_THETA=1,null==e&&(e={}),this.theta=null==e.theta?this.DEFAULT_THETA:e.theta}call(e,t){const n=jb(e);return $o(n,Io(bh(n,this.theta),"float32"))}computeOutputShape(e){return e}getConfig(){const e={theta:this.theta},t=super.getConfig();return Object.assign(e,t),e}}Dv.className="ThresholdedReLU",Ho(Dv);class Ov extends sx{constructor(e){super(null==e?{}:e),this.DEFAULT_AXIS=1,null==e&&(e={}),this.softmax=(new mv).apply,this.axis=null==e.axis?this.DEFAULT_AXIS:e.axis}call(e,t){return ui(()=>{let n=jb(e);const r=t.mask;if(null!=r){const e=$o(Zo(jh(n.shape),Io(r,n.dtype)),Bo(-1e9));n=To(n,e)}return this.axis instanceof Array?this.axis.length>1?hh(Zo(n,Mh(n,this.axis,!0))):this.softmax(n,this.axis[0]):this.softmax(n,this.axis)})}computeOutputShape(e){return e}getConfig(){const e={axis:this.axis},t=super.getConfig();return Object.assign(e,t),e}}function Lv(e,t,n){if("number"==typeof e)return my(e,t);if(e.length!==t)throw new hy(`The ${n} argument must be an integer or tuple of ${t} integers. Received: ${e.length} elements.`);for(let r=0;r<t;++r){const s=e[r];if(!Qy(s))throw new hy(`The ${n} argument must be an integer or tuple of ${t} integers. Received: ${JSON.stringify(e)} including a non-integer number ${s}`)}return e}function zv(e,t,n,r,s=1){if(null==e)return e;let a;return a="same"===n?e:e-(t+(t-1)*(s-1))+1,Math.floor((a+r-1)/r)}function Pv(e,t,n,r){if(null==e)return null;if("valid"===r)e=e*t+nb([n-t,0]);else{if("same"!==r)throw new hy(`Unsupport padding mode: ${r}.`);e*=t}return e}function Bv(e,t){return ui(()=>(Gy(t),"channelsFirst"===t?Du(e,[0,2,3,1]):e))}function Vv(e,t){return ui(()=>(Gy(t),"channelsFirst"===t?Du(e,[0,2,3,4,1]):e))}function Uv(e,t,n,r=[1,1],s="valid",a,i,o=null){return ui(()=>{if(null==a&&(a="channelsLast"),Gy(a),3!==e.rank&&4!==e.rank)throw new hy(`conv2dWithBiasActivation expects input to be of rank 3 or 4, but received ${e.rank}.`);if(3!==t.rank&&4!==t.rank)throw new hy(`conv2dWithBiasActivation expects kernel to be of rank 3 or 4, but received ${e.rank}.`);let u=Bv(e,a);if("causal"===s)throw new dy("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");return u=Mp({x:u,filter:t,strides:r,pad:"same"===s?"same":"valid",dilations:i,dataFormat:"NHWC",bias:n,activation:o}),"channelsFirst"===a&&(u=Du(u,[0,3,1,2])),u})}Ov.className="Softmax",Ho(Ov);class Wv extends sx{constructor(e,t){if(super(t),this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",Wv.verifyArgs(t),this.rank=e,Ry(this.rank,"rank"),1!==this.rank&&2!==this.rank&&3!==this.rank)throw new dy(`Convolution layer for rank other than 1, 2, or 3 (${this.rank}) is not implemented yet.`);if(this.kernelSize=Lv(t.kernelSize,e,"kernelSize"),this.strides=Lv(null==t.strides?1:t.strides,e,"strides"),this.padding=null==t.padding?"valid":t.padding,Hy(this.padding),this.dataFormat=null==t.dataFormat?"channelsLast":t.dataFormat,Gy(this.dataFormat),this.activation=Iv(t.activation),this.useBias=null==t.useBias||t.useBias,this.biasInitializer=Wb(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.biasConstraint=Sx(t.biasConstraint),this.biasRegularizer=Av(t.biasRegularizer),this.activityRegularizer=Av(t.activityRegularizer),this.dilationRate=Lv(null==t.dilationRate?1:t.dilationRate,e,"dilationRate"),1===this.rank&&Array.isArray(this.dilationRate)&&1!==this.dilationRate.length)throw new hy(`dilationRate must be a number or an array of a single number for 1D convolution, but received ${JSON.stringify(this.dilationRate)}`);if(2===this.rank){if("number"==typeof this.dilationRate)this.dilationRate=[this.dilationRate,this.dilationRate];else if(2!==this.dilationRate.length)throw new hy(`dilationRate must be a number or array of two numbers for 2D convolution, but received ${JSON.stringify(this.dilationRate)}`)}else if(3===this.rank)if("number"==typeof this.dilationRate)this.dilationRate=[this.dilationRate,this.dilationRate,this.dilationRate];else if(3!==this.dilationRate.length)throw new hy(`dilationRate must be a number or array of three numbers for 3D convolution, but received ${JSON.stringify(this.dilationRate)}`)}static verifyArgs(e){if(gy("kernelSize"in e,"required key \'kernelSize\' not in config"),"number"!=typeof e.kernelSize&&!Ay(e.kernelSize,"number",1,3))throw new hy(`BaseConv expects config.kernelSize to be number or number[] with length 1, 2, or 3, but received ${JSON.stringify(e.kernelSize)}.`)}getConfig(){const e={kernelSize:this.kernelSize,strides:this.strides,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,activation:vv(this.activation),useBias:this.useBias,biasInitializer:Ub(this.biasInitializer),biasRegularizer:Cv(this.biasRegularizer),activityRegularizer:Cv(this.activityRegularizer),biasConstraint:kx(this.biasConstraint)},t=super.getConfig();return Object.assign(e,t),e}}class Gv extends Wv{constructor(e,t){super(e,t),this.kernel=null,Gv.verifyArgs(t),this.filters=t.filters,Ry(this.filters,"filters"),this.kernelInitializer=Wb(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.kernelConstraint=Sx(t.kernelConstraint),this.kernelRegularizer=Av(t.kernelRegularizer)}build(e){e=qb(e);const t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t])throw new hy(`The channel dimension of the input should be defined. Found ${e[t]}`);const n=e[t],r=this.kernelSize.concat([n,this.filters]);this.kernel=this.addWeight("kernel",r,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[{ndim:this.rank+2,axes:{[t]:n}}],this.built=!0}call(e,t){return ui(()=>{let t;e=jb(e);const n=null==this.bias?null:this.bias.read(),r=My(this.activation.getClassName());if(null!=r&&2===this.rank)t=Uv(e,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate,r);else{if(1===this.rank)t=function(e,t,n,r=1,s="valid",a,i=1){return ui(()=>{if(null==a&&(a="channelsLast"),Gy(a),3!==e.shape.length)throw new hy(`The input of a conv1dWithBias operation should be 3, but is ${e.shape.length} instead.`);if(3!==t.shape.length)throw new hy(`The kernel for a conv1dWithBias operation should be 3, but is ${t.shape.length} instead`);if(null!=n&&1!==n.shape.length)throw new hy(`The bias for a conv1dWithBias operation should be 1, but is ${n.shape.length} instead`);if("channelsFirst"===a&&(e=Du(e,[0,2,1])),"causal"===s)throw new dy("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");let o=Cc(e,t,r,"same"===s?"same":"valid","NWC",i);return null!=n&&(o=xb(o,n)),o})}(e,this.kernel.read(),n,this.strides[0],this.padding,this.dataFormat,this.dilationRate[0]);else if(2===this.rank)t=Uv(e,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate);else{if(3!==this.rank)throw new dy("convolutions greater than 3D are not implemented yet.");t=function(e,t,n,r=[1,1,1],s="valid",a,i){return ui(()=>{if(null==a&&(a="channelsLast"),Gy(a),4!==e.rank&&5!==e.rank)throw new hy(`conv3dWithBias expects input to be of rank 4 or 5, but received ${e.rank}.`);if(4!==t.rank&&5!==t.rank)throw new hy(`conv3dWithBias expects kernel to be of rank 4 or 5, but received ${e.rank}.`);let o=Vv(e,a);if("causal"===s)throw new dy("The support for CAUSAL padding mode in conv3dWithBias is not implemented yet.");return o=Rc(o,t,r,"same"===s?"same":"valid","NDHWC",i),null!=n&&(o=xb(o,n)),"channelsFirst"===a&&(o=Du(o,[0,4,1,2,3])),o})}(e,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate)}null!=this.activation&&(t=this.activation.apply(t))}return t})}computeOutputShape(e){e=qb(e);const t=[],n="channelsLast"===this.dataFormat?e.slice(1,e.length-1):e.slice(2);for(let e=0;e<n.length;++e){const r=zv(n[e],this.kernelSize[e],this.padding,this.strides[e],"number"==typeof this.dilationRate?this.dilationRate:this.dilationRate[e]);t.push(r)}let r=[e[0]];return"channelsLast"===this.dataFormat?(r=r.concat(t),r.push(this.filters)):(r.push(this.filters),r=r.concat(t)),r}getConfig(){const e={filters:this.filters,kernelInitializer:Ub(this.kernelInitializer),kernelRegularizer:Cv(this.kernelRegularizer),kernelConstraint:kx(this.kernelConstraint)},t=super.getConfig();return Object.assign(e,t),e}static verifyArgs(e){if(!("filters"in e)||"number"!=typeof e.filters||e.filters<1)throw new hy(`Convolution layer expected config.filters to be a \'number\' > 0 but got ${JSON.stringify(e.filters)}`)}}class Hv extends Gv{constructor(e){super(2,e),Hv.verifyArgs(e)}getConfig(){const e=super.getConfig();return delete e.rank,e}static verifyArgs(e){if("number"!=typeof e.kernelSize&&!Ay(e.kernelSize,"number",1,2))throw new hy(`Conv2D expects config.kernelSize to be number or number[] with length 1 or 2, but received ${JSON.stringify(e.kernelSize)}.`)}}Hv.className="Conv2D",Ho(Hv);class jv extends Gv{constructor(e){super(3,e),jv.verifyArgs(e)}getConfig(){const e=super.getConfig();return delete e.rank,e}static verifyArgs(e){if("number"!=typeof e.kernelSize&&(!Array.isArray(e.kernelSize)||1!==e.kernelSize.length&&3!==e.kernelSize.length))throw new hy(`Conv3D expects config.kernelSize to be number or [number, number, number], but received ${JSON.stringify(e.kernelSize)}.`)}}jv.className="Conv3D",Ho(jv);class qv extends Hv{constructor(e){if(super(e),this.inputSpec=[new Qb({ndim:4})],"same"!==this.padding&&"valid"!==this.padding)throw new hy(`Conv2DTranspose currently supports only padding modes \'same\' and \'valid\', but received padding mode ${this.padding}`)}build(e){if(4!==(e=qb(e)).length)throw new hy("Input should have rank 4; Received input shape: "+JSON.stringify(e));const t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t])throw new hy("The channel dimension of the inputs should be defined. Found `None`.");const n=e[t],r=this.kernelSize.concat([this.filters,n]);this.kernel=this.addWeight("kernel",r,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new Qb({ndim:4,axes:{[t]:n}})],this.built=!0}call(e,t){return ui(()=>{let t=jb(e);if(4!==t.shape.length)throw new hy(`Conv2DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${t.shape.length}`);const n=t.shape,r=n[0];let s,a;"channelsFirst"===this.dataFormat?(s=2,a=3):(s=1,a=2);const i=n[s],o=n[a],u=this.kernelSize[0],l=this.kernelSize[1],c=this.strides[0],h=this.strides[1],d=[r,Pv(i,c,u,this.padding),Pv(o,h,l,this.padding),this.filters];"channelsLast"!==this.dataFormat&&(t=Du(t,[0,2,3,1]));let p=Ac(t,this.kernel.read(),d,this.strides,this.padding);return"channelsLast"!==this.dataFormat&&(p=Du(p,[0,3,1,2])),null!=this.bias&&(p=xb(p,this.bias.read(),this.dataFormat)),null!=this.activation&&(p=this.activation.apply(p)),p})}computeOutputShape(e){const t=(e=qb(e)).slice();let n,r,s;"channelsFirst"===this.dataFormat?(n=1,r=2,s=3):(n=3,r=1,s=2);const a=this.kernelSize[0],i=this.kernelSize[1],o=this.strides[0],u=this.strides[1];return t[n]=this.filters,t[r]=Pv(t[r],o,a,this.padding),t[s]=Pv(t[s],u,i,this.padding),t}getConfig(){const e=super.getConfig();return delete e.dilationRate,e}}qv.className="Conv2DTranspose",Ho(qv);class Kv extends jv{constructor(e){if(super(e),this.inputSpec=[new Qb({ndim:5})],"same"!==this.padding&&"valid"!==this.padding)throw new hy(`Conv3DTranspose currently supports only padding modes \'same\' and \'valid\', but received padding mode ${this.padding}`)}build(e){if(5!==(e=qb(e)).length)throw new hy("Input should have rank 5; Received input shape: "+JSON.stringify(e));const t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t])throw new hy("The channel dimension of the inputs should be defined. Found `None`.");const n=e[t],r=this.kernelSize.concat([this.filters,n]);this.kernel=this.addWeight("kernel",r,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new Qb({ndim:5,axes:{[t]:n}})],this.built=!0}call(e,t){return ui(()=>{let t=jb(e);if(5!==t.shape.length)throw new hy(`Conv3DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${t.shape.length}`);const n=t.shape,r=n[0];let s,a,i;"channelsFirst"===this.dataFormat?(i=2,s=3,a=4):(i=1,s=2,a=3);const o=n[i],u=n[s],l=n[a],c=this.kernelSize[0],h=this.kernelSize[1],d=this.kernelSize[2],p=this.strides[0],f=this.strides[1],m=this.strides[2],g=[r,Pv(o,p,c,this.padding),Pv(u,f,h,this.padding),Pv(l,m,d,this.padding),this.filters];"channelsLast"!==this.dataFormat&&(t=Du(t,[0,2,3,4,1]));let y=Mc(t,this.kernel.read(),g,this.strides,this.padding);return"channelsLast"!==this.dataFormat&&(y=Du(y,[0,4,1,2,3])),null!==this.bias&&(y=xb(y,this.bias.read(),this.dataFormat)),null!==this.activation&&(y=this.activation.apply(y)),y})}computeOutputShape(e){const t=(e=qb(e)).slice();let n,r,s,a;"channelsFirst"===this.dataFormat?(n=1,r=2,s=3,a=4):(n=4,r=1,s=2,a=3);const i=this.kernelSize[0],o=this.kernelSize[1],u=this.kernelSize[2],l=this.strides[0],c=this.strides[1],h=this.strides[2];return t[n]=this.filters,t[r]=Pv(t[r],l,i,this.padding),t[s]=Pv(t[s],c,o,this.padding),t[a]=Pv(t[a],h,u,this.padding),t}getConfig(){const e=super.getConfig();return delete e.dilationRate,e}}Kv.className="Conv3DTranspose",Ho(Kv);class Xv extends Gv{constructor(e,t){if(super(e,t),this.DEFAULT_DEPTHWISE_INITIALIZER="glorotUniform",this.DEFAULT_POINTWISE_INITIALIZER="glorotUniform",this.depthwiseKernel=null,this.pointwiseKernel=null,null==t.filters)throw new hy("The `filters` configuration field is required by SeparableConv, but is unspecified.");if(null!=t.kernelInitializer||null!=t.kernelRegularizer||null!=t.kernelConstraint)throw new hy("Fields kernelInitializer, kernelRegularizer and kernelConstraint are invalid for SeparableConv2D. Use depthwiseInitializer, depthwiseRegularizer, depthwiseConstraint, pointwiseInitializer, pointwiseRegularizer and pointwiseConstraint instead.");if(null!=t.padding&&"same"!==t.padding&&"valid"!==t.padding)throw new hy(`SeparableConv${this.rank}D supports only padding modes: \'same\' and \'valid\', but received ${JSON.stringify(t.padding)}`);this.depthMultiplier=null==t.depthMultiplier?1:t.depthMultiplier,this.depthwiseInitializer=Wb(t.depthwiseInitializer||this.DEFAULT_DEPTHWISE_INITIALIZER),this.depthwiseRegularizer=Av(t.depthwiseRegularizer),this.depthwiseConstraint=Sx(t.depthwiseConstraint),this.pointwiseInitializer=Wb(t.depthwiseInitializer||this.DEFAULT_POINTWISE_INITIALIZER),this.pointwiseRegularizer=Av(t.pointwiseRegularizer),this.pointwiseConstraint=Sx(t.pointwiseConstraint)}build(e){if((e=qb(e)).length<this.rank+2)throw new hy(`Inputs to SeparableConv${this.rank}D should have rank ${this.rank+2}, but received input shape: ${JSON.stringify(e)}`);const t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t]||e[t]<0)throw new hy(`The channel dimension of the inputs should be defined, but found ${JSON.stringify(e[t])}`);const n=e[t],r=this.kernelSize.concat([n,this.depthMultiplier]),s=[];for(let e=0;e<this.rank;++e)s.push(1);s.push(n*this.depthMultiplier,this.filters);const a=!0;this.depthwiseKernel=this.addWeight("depthwise_kernel",r,"float32",this.depthwiseInitializer,this.depthwiseRegularizer,a,this.depthwiseConstraint),this.pointwiseKernel=this.addWeight("pointwise_kernel",s,"float32",this.pointwiseInitializer,this.pointwiseRegularizer,a,this.pointwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,a,this.biasConstraint):this.bias=null,this.inputSpec=[new Qb({ndim:this.rank+2,axes:{[t]:n}})],this.built=!0}call(e,t){return ui(()=>{let t;if(e=jb(e),1===this.rank)throw new dy("1D separable convolution is not implemented yet.");return 2===this.rank&&("channelsFirst"===this.dataFormat&&(e=Du(e,[0,2,3,1])),t=Ld(e,this.depthwiseKernel.read(),this.pointwiseKernel.read(),this.strides,this.padding,this.dilationRate,"NHWC")),this.useBias&&(t=xb(t,this.bias.read(),this.dataFormat)),null!=this.activation&&(t=this.activation.apply(t)),"channelsFirst"===this.dataFormat&&(t=Du(t,[0,3,1,2])),t})}getConfig(){const e=super.getConfig();return delete e.rank,delete e.kernelInitializer,delete e.kernelRegularizer,delete e.kernelConstraint,e.depthwiseInitializer=Ub(this.depthwiseInitializer),e.pointwiseInitializer=Ub(this.pointwiseInitializer),e.depthwiseRegularizer=Cv(this.depthwiseRegularizer),e.pointwiseRegularizer=Cv(this.pointwiseRegularizer),e.depthwiseConstraint=kx(this.depthwiseConstraint),e.pointwiseConstraint=kx(this.pointwiseConstraint),e}}Xv.className="SeparableConv";class Yv extends Xv{constructor(e){super(2,e)}}Yv.className="SeparableConv2D",Ho(Yv);class Jv extends Gv{constructor(e){super(1,e),Jv.verifyArgs(e),this.inputSpec=[{ndim:3}]}getConfig(){const e=super.getConfig();return delete e.rank,delete e.dataFormat,e}static verifyArgs(e){if("number"!=typeof e.kernelSize&&!Ay(e.kernelSize,"number",1,1))throw new hy(`Conv1D expects config.kernelSize to be number or number[] with length 1, but received ${JSON.stringify(e.kernelSize)}.`)}}Jv.className="Conv1D",Ho(Jv);class Zv extends sx{constructor(e){super(e),"number"==typeof e.cropping?this.cropping=[[e.cropping,e.cropping],[e.cropping,e.cropping]]:"number"==typeof e.cropping[0]?this.cropping=[[e.cropping[0],e.cropping[0]],[e.cropping[1],e.cropping[1]]]:this.cropping=e.cropping,this.dataFormat=void 0===e.dataFormat?"channelsLast":e.dataFormat,this.inputSpec=[{ndim:4}]}computeOutputShape(e){return"channelsFirst"===this.dataFormat?[e[0],e[1],e[2]-this.cropping[0][0]-this.cropping[0][1],e[3]-this.cropping[1][0]-this.cropping[1][1]]:[e[0],e[1]-this.cropping[0][0]-this.cropping[0][1],e[2]-this.cropping[1][0]-this.cropping[1][1],e[3]]}call(e,t){return ui(()=>{if(e=jb(e),"channelsLast"===this.dataFormat){const t=cb(e,this.cropping[0][0],e.shape[1]-this.cropping[0][0]-this.cropping[0][1],2);return cb(t,this.cropping[1][0],e.shape[2]-this.cropping[1][1]-this.cropping[1][0],3)}{const t=cb(e,this.cropping[0][0],e.shape[2]-this.cropping[0][0]-this.cropping[0][1],3);return cb(t,this.cropping[1][0],e.shape[3]-this.cropping[1][1]-this.cropping[1][0],4)}})}getConfig(){const e={cropping:this.cropping,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}Zv.className="Cropping2D",Ho(Zv);class Qv extends sx{constructor(e){var t;super(e),this.DEFAULT_SIZE=[2,2],this.inputSpec=[{ndim:4}],this.size=null==e.size?this.DEFAULT_SIZE:e.size,this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,Gy(this.dataFormat),this.interpolation=null==e.interpolation?"nearest":e.interpolation,t=this.interpolation,$y(Py,"InterpolationFormat",t)}computeOutputShape(e){if("channelsFirst"===this.dataFormat){const t=null==e[2]?null:this.size[0]*e[2],n=null==e[3]?null:this.size[1]*e[3];return[e[0],e[1],t,n]}{const t=null==e[1]?null:this.size[0]*e[1],n=null==e[2]?null:this.size[1]*e[2];return[e[0],t,n,e[3]]}}call(e,t){return ui(()=>{let t=jb(e);const n=t.shape;if("channelsFirst"===this.dataFormat){t=Du(t,[0,2,3,1]);const e=this.size[0]*n[2],r=this.size[1]*n[3],s="nearest"===this.interpolation?Df.resizeNearestNeighbor(t,[e,r]):Df.resizeBilinear(t,[e,r]);return Du(s,[0,3,1,2])}{const e=this.size[0]*n[1],r=this.size[1]*n[2];return"nearest"===this.interpolation?Df.resizeNearestNeighbor(t,[e,r]):Df.resizeBilinear(t,[e,r])}})}getConfig(){const e={size:this.size,dataFormat:this.dataFormat,interpolation:this.interpolation},t=super.getConfig();return Object.assign(e,t),e}}Qv.className="UpSampling2D",Ho(Qv);class ek extends Wv{constructor(e){super(2,e),this.depthwiseKernel=null,this.depthMultiplier=null==e.depthMultiplier?1:e.depthMultiplier,this.depthwiseInitializer=Wb(e.depthwiseInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.depthwiseConstraint=Sx(e.depthwiseConstraint),this.depthwiseRegularizer=Av(e.depthwiseRegularizer)}build(e){if((e=qb(e)).length<4)throw new hy(`Inputs to DepthwiseConv2D should have rank 4. Received input shape: ${JSON.stringify(e)}.`);const t="channelsFirst"===this.dataFormat?1:3;if(null==e[t]||e[t]<0)throw new hy(`The channel dimension of the inputs to DepthwiseConv2D should be defined, but is not (${e[t]}).`);const n=e[t],r=[this.kernelSize[0],this.kernelSize[1],n,this.depthMultiplier];this.depthwiseKernel=this.addWeight("depthwise_kernel",r,null,this.depthwiseInitializer,this.depthwiseRegularizer,!0,this.depthwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[n*this.depthMultiplier],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return ui(()=>{let t=function(e,t,n=[1,1],r="valid",s,a){return ui(()=>{null==s&&(s="channelsLast"),Gy(s);let i=Bv(e,s);if(4!==e.rank)throw new hy(`Input for depthwiseConv2d is required to be 4-D, but is instead ${e.rank}-D`);if(4!==t.rank)throw new hy(`depthwiseKernel is required to be 4-D, but is instead ${t.rank}-D`);return i=Bc(i,t,n,"same"===r?"same":"valid","NHWC",a),"channelsFirst"===s&&(i=Du(i,[0,3,1,2])),i})}(e=jb(e),this.depthwiseKernel.read(),this.strides,this.padding,this.dataFormat,null);return this.useBias&&(t=xb(t,this.bias.read(),this.dataFormat)),null!=this.activation&&(t=this.activation.apply(t)),t})}computeOutputShape(e){e=qb(e);const t="channelsFirst"===this.dataFormat?e[2]:e[1],n="channelsFirst"===this.dataFormat?e[3]:e[2],r="channelsFirst"===this.dataFormat?e[1]*this.depthMultiplier:e[3]*this.depthMultiplier,s=zv(t,this.kernelSize[0],this.padding,this.strides[0]),a=zv(n,this.kernelSize[1],this.padding,this.strides[1]);return"channelsFirst"===this.dataFormat?[e[0],r,s,a]:[e[0],s,a,r]}getConfig(){const e=super.getConfig();return e.depthMultiplier=this.depthMultiplier,e.depthwiseInitializer=Ub(this.depthwiseInitializer),e.depthwiseRegularizer=Cv(this.depthwiseRegularizer),e.depthwiseConstraint=kx(this.depthwiseRegularizer),e}}function tk(e,t,n,r){if(Array.isArray(e)){if(null!=t||null!=n)throw new hy("When inputs is an array, neither initialState or constants should be provided");null!=r&&(n=e.slice(e.length-r,e.length),e=e.slice(0,e.length-r)),e.length>1&&(t=e.slice(1,e.length)),e=e[0]}function s(e){return null==e||Array.isArray(e)?e:[e]}return{inputs:e,initialState:t=s(t),constants:n=s(n)}}function nk(e,t,n,r=!1,s,a,i=!1,o=!1){return ui(()=>{const u=t.shape.length;if(u<3)throw new hy(`Input should be at least 3D, but is ${u}D.`);const l=[1,0].concat(rb(2,u));if(t=Du(t,l),null!=a)throw new dy("The rnn() functoin of the deeplearn.js backend does not support constants yet.");i&&console.warn("Backend rnn(): the unroll = true option is not applicable to the imperative deeplearn.js backend."),null!=s&&((s=Io(Io(s,"bool"),"float32")).rank===u-1&&(s=dh(s,-1)),s=Du(s,l)),r&&(t=$d(t,0),null!=s&&(s=$d(s,0)));const c=[];let h,d=n;const p=t.shape[0],f=fp(t);let m,g;null!=s&&(m=fp(s));for(let t=0;t<p;++t){const n=f[t],r=ui(()=>e(n,d));if(null==s)h=r[0],d=r[1];else{const e=ui(()=>{const e=m[t],n=Zo(td(e),e);return{output:To($o(r[0],e),$o(d[0],n)),newStates:d.map((t,s)=>To($o(r[1][s],e),$o(t,n)))}});h=e.output,d=e.newStates}o&&c.push(h)}return o&&(g=ep(c,1)),[h,g,d]})}ek.className="DepthwiseConv2D",Ho(ek);class rk extends sx{constructor(e){let t;if(super(e),null==e.cell)throw new hy("cell property is missing for the constructor of RNN.");if(t=Array.isArray(e.cell)?new hk({cells:e.cell}):e.cell,null==t.stateSize)throw new hy("The RNN cell should have an attribute `stateSize` (tuple of integers, one integer per RNN state).");this.cell=t,this.returnSequences=null!=e.returnSequences&&e.returnSequences,this.returnState=null!=e.returnState&&e.returnState,this.goBackwards=null!=e.goBackwards&&e.goBackwards,this._stateful=null!=e.stateful&&e.stateful,this.unroll=null!=e.unroll&&e.unroll,this.supportsMasking=!0,this.inputSpec=[new Qb({ndim:3})],this.stateSpec=null,this.states_=null,this.numConstants=null,this.keptStates=[]}getStates(){return null==this.states_?rb(0,Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1).map(e=>null):this.states_}setStates(e){this.states_=e}computeOutputShape(e){Gb(e)&&(e=e[0]);let t=this.cell.stateSize;Array.isArray(t)||(t=[t]);const n=t[0];let r;if(r=this.returnSequences?[e[0],e[1],n]:[e[0],n],this.returnState){const n=[];for(const r of t)n.push([e[0],r]);return[r].concat(n)}return r}computeMask(e,t){return ui(()=>{Array.isArray(t)&&(t=t[0]);const e=this.returnSequences?t:null;if(this.returnState){const t=this.states.map(e=>null);return[e].concat(t)}return e})}get states(){if(null==this.states_){const e=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1,t=[];for(let n=0;n<e;++n)t.push(null);return t}return this.states_}set states(e){this.states_=e}build(e){if(null!=this.numConstants)throw new dy("Constants support is not implemented in RNN yet.");Gb(e)&&(e=e[0]);const t=this.stateful?e[0]:null,n=e.slice(2);this.inputSpec[0]=new Qb({shape:[t,null,...n]});const r=[e[0]].concat(e.slice(2));let s;if(this.cell.build(r),s=Array.isArray(this.cell.stateSize)?this.cell.stateSize:[this.cell.stateSize],null!=this.stateSpec){if(!de(this.stateSpec.map(e=>e.shape[e.shape.length-1]),s))throw new hy(`An initialState was passed that is not compatible with cell.stateSize. Received stateSpec=${this.stateSpec}; However cell.stateSize is ${this.cell.stateSize}`)}else this.stateSpec=s.map(e=>new Qb({shape:[null,e]}));this.stateful&&this.resetStates()}resetStates(e,t=!1){ui(()=>{if(!this.stateful)throw new ly("Cannot call resetStates() on an RNN Layer that is not stateful.");const n=this.inputSpec[0].shape[0];if(null==n)throw new hy("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \\n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(null==this.states_)Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(e=>Hh([n,e])):this.states_=[Hh([n,this.cell.stateSize])];else if(null==e)li(this.states_),null!=this.keptStates&&(li(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(e=>Hh([n,e])):this.states_[0]=Hh([n,this.cell.stateSize]);else{if(Array.isArray(e)||(e=[e]),e.length!==this.states_.length)throw new hy(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${e.length} state value(s). Input received: ${e}`);!0===t?this.keptStates.push(this.states_.slice()):li(this.states_);for(let t=0;t<this.states_.length;++t){const r=e[t],s=Array.isArray(this.cell.stateSize)?this.cell.stateSize[t]:this.cell.stateSize,a=[n,s];if(!de(r.shape,a))throw new hy(`State ${t} is incompatible with layer ${this.name}: expected shape=${a}, received shape=${r.shape}`);this.states_[t]=r}}this.states_=this.states_.map(e=>ci(e.clone()))})}apply(e,t){let n=null==t?null:t.initialState,r=null==t?null:t.constants;null==t&&(t={});const s=tk(e,n,r,this.numConstants);e=s.inputs,n=s.initialState,r=s.constants;let a=[],i=[];if(null!=n){t.initialState=n,a=a.concat(n),this.stateSpec=[];for(const e of n)this.stateSpec.push(new Qb({shape:e.shape}));i=i.concat(this.stateSpec)}if(null!=r&&(t.constants=r,a=a.concat(r),this.numConstants=r.length),a[0]instanceof ex){const n=[e].concat(a),r=this.inputSpec.concat(i),s=this.inputSpec;this.inputSpec=r;const o=super.apply(n,t);return this.inputSpec=s,o}return super.apply(e,t)}call(e,t){return ui(()=>{const n=null==t?null:t.mask,r=null==t?null:t.training;let s=null==t?null:t.initialState;e=jb(e),null==s&&(s=this.stateful?this.states_:this.getInitialState(e));const a=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1;if(s.length!==a)throw new hy(`RNN Layer has ${a} state(s) but was passed ${s.length} initial state(s).`);this.unroll&&console.warn("Ignoring unroll = true for RNN layer, due to imperative backend.");const i={training:r},o=nk((e,t)=>{const n=this.cell.call([e].concat(t),i);return[n[0],n.slice(1)]},e,s,this.goBackwards,n,null,this.unroll,this.returnSequences),u=o[0],l=o[1],c=o[2];this.stateful&&this.resetStates(c,r);const h=this.returnSequences?l:u;return this.returnState?[h].concat(c):h})}getInitialState(e){return ui(()=>{let t=Hh(e.shape);return t=oh(t,[1,2]),t=ob(t),Array.isArray(this.cell.stateSize)?this.cell.stateSize.map(e=>e>1?pb(t,[1,e]):t):this.cell.stateSize>1?[pb(t,[1,this.cell.stateSize])]:[t]})}get trainableWeights(){return this.trainable?this.cell.trainableWeights:[]}get nonTrainableWeights(){return this.trainable?this.cell.nonTrainableWeights:this.cell.weights}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),null!=this.cell&&this.cell.setFastWeightInitDuringBuild(e)}getConfig(){const e=super.getConfig(),t={returnSequences:this.returnSequences,returnState:this.returnState,goBackwards:this.goBackwards,stateful:this.stateful,unroll:this.unroll};null!=this.numConstants&&(t.numConstants=this.numConstants);const n=this.cell.getConfig();return this.getClassName()===rk.className&&(t.cell={className:this.cell.getClassName(),config:n}),Object.assign(Object.assign(Object.assign({},n),e),t)}static fromConfig(e,t,n={}){const r=tw(t.cell,n);return new e(Object.assign(t,{cell:r}))}}rk.className="RNN",Ho(rk);class sk extends sx{}class ak extends sk{constructor(e){super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=e.units,Ry(this.units,"units"),this.activation=Iv(null==e.activation?this.DEFAULT_ACTIVATION:e.activation),this.useBias=null==e.useBias||e.useBias,this.kernelInitializer=Wb(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=Wb(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=Wb(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=Av(e.kernelRegularizer),this.recurrentRegularizer=Av(e.recurrentRegularizer),this.biasRegularizer=Av(e.biasRegularizer),this.kernelConstraint=Sx(e.kernelConstraint),this.recurrentConstraint=Sx(e.recurrentConstraint),this.biasConstraint=Sx(e.biasConstraint),this.dropout=tb([1,nb([0,null==e.dropout?0:e.dropout])]),this.recurrentDropout=tb([1,nb([0,null==e.recurrentDropout?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){e=qb(e),this.kernel=this.addWeight("kernel",[e[e.length-1],this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return ui(()=>{if(2!==e.length)throw new hy(`SimpleRNNCell expects 2 input Tensors, got ${e.length}.`);let n=e[1];e=e[0];const r=null!=t.training&&t.training;let s;0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=dk({ones:()=>td(e),rate:this.dropout,training:r,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=dk({ones:()=>td(n),rate:this.recurrentDropout,training:r,dropoutFunc:this.dropoutFunc}));const a=this.dropoutMask,i=this.recurrentDropoutMask;s=mb(null!=a?$o(e,a):e,this.kernel.read()),null!=this.bias&&(s=xb(s,this.bias.read())),null!=i&&(n=$o(n,i));let o=To(s,mb(n,this.recurrentKernel.read()));return null!=this.activation&&(o=this.activation.apply(o)),[o,o]})}getConfig(){const e=super.getConfig(),t={units:this.units,activation:vv(this.activation),useBias:this.useBias,kernelInitializer:Ub(this.kernelInitializer),recurrentInitializer:Ub(this.recurrentInitializer),biasInitializer:Ub(this.biasInitializer),kernelRegularizer:Cv(this.kernelRegularizer),recurrentRegularizer:Cv(this.recurrentRegularizer),biasRegularizer:Cv(this.biasRegularizer),activityRegularizer:Cv(this.activityRegularizer),kernelConstraint:kx(this.kernelConstraint),recurrentConstraint:kx(this.recurrentConstraint),biasConstraint:kx(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout};return Object.assign(Object.assign({},e),t)}}ak.className="SimpleRNNCell",Ho(ak);class ik extends rk{constructor(e){e.cell=new ak(e),super(e)}call(e,t){return ui(()=>{null!=this.cell.dropoutMask&&(li(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(li(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const n=null==t?null:t.mask,r=null==t?null:t.training,s=null==t?null:t.initialState;return super.call(e,{mask:n,training:r,initialState:s})})}static fromConfig(e,t){return new e(t)}}ik.className="SimpleRNN",Ho(ik);class ok extends sk{constructor(e){if(super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",e.resetAfter)throw new hy("GRUCell does not support reset_after parameter set to true.");this.units=e.units,Ry(this.units,"units"),this.activation=Iv(void 0===e.activation?this.DEFAULT_ACTIVATION:e.activation),this.recurrentActivation=Iv(void 0===e.recurrentActivation?this.DEFAULT_RECURRENT_ACTIVATION:e.recurrentActivation),this.useBias=null==e.useBias||e.useBias,this.kernelInitializer=Wb(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=Wb(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=Wb(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=Av(e.kernelRegularizer),this.recurrentRegularizer=Av(e.recurrentRegularizer),this.biasRegularizer=Av(e.biasRegularizer),this.kernelConstraint=Sx(e.kernelConstraint),this.recurrentConstraint=Sx(e.recurrentConstraint),this.biasConstraint=Sx(e.biasConstraint),this.dropout=tb([1,nb([0,null==e.dropout?0:e.dropout])]),this.recurrentDropout=tb([1,nb([0,null==e.recurrentDropout?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.implementation=e.implementation,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){const t=(e=qb(e))[e.length-1];this.kernel=this.addWeight("kernel",[t,3*this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,3*this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[3*this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return ui(()=>{if(2!==e.length)throw new hy(`GRUCell expects 2 input Tensors (inputs, h, c), got ${e.length}.`);const n=null!=t.training&&t.training;let r=e[1];e=e[0],0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=dk({ones:()=>td(e),rate:this.dropout,training:n,count:3,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=dk({ones:()=>td(r),rate:this.recurrentDropout,training:n,count:3,dropoutFunc:this.dropoutFunc}));const s=this.dropoutMask,a=this.recurrentDropoutMask;let i,o,u;0<this.dropout&&this.dropout<1&&(e=$o(e,s[0]));let l=mb(e,this.kernel.read());this.useBias&&(l=xb(l,this.bias.read())),0<this.recurrentDropout&&this.recurrentDropout<1&&(r=$o(r,a[0]));const c=this.recurrentKernel.read(),[h,d]=Yd(c,[2*this.units,this.units],c.rank-1),p=mb(r,h),[f,m,g]=Yd(l,3,l.rank-1),[y,b]=Yd(p,2,p.rank-1);i=this.recurrentActivation.apply(To(f,y)),o=this.recurrentActivation.apply(To(m,b));const x=mb($o(o,r),d);u=this.activation.apply(To(g,x));const w=To($o(i,r),$o(To(1,Mu(i)),u));return[w,w]})}getConfig(){const e=super.getConfig(),t={units:this.units,activation:vv(this.activation),recurrentActivation:vv(this.recurrentActivation),useBias:this.useBias,kernelInitializer:Ub(this.kernelInitializer),recurrentInitializer:Ub(this.recurrentInitializer),biasInitializer:Ub(this.biasInitializer),kernelRegularizer:Cv(this.kernelRegularizer),recurrentRegularizer:Cv(this.recurrentRegularizer),biasRegularizer:Cv(this.biasRegularizer),activityRegularizer:Cv(this.activityRegularizer),kernelConstraint:kx(this.kernelConstraint),recurrentConstraint:kx(this.recurrentConstraint),biasConstraint:kx(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation,resetAfter:!1};return Object.assign(Object.assign({},e),t)}}ok.className="GRUCell",Ho(ok);class uk extends rk{constructor(e){0===e.implementation&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),e.cell=new ok(e),super(e)}call(e,t){return ui(()=>{null!=this.cell.dropoutMask&&(li(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(li(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const n=null==t?null:t.mask,r=null==t?null:t.training,s=null==t?null:t.initialState;return super.call(e,{mask:n,training:r,initialState:s})})}static fromConfig(e,t){return 0===t.implmentation&&(t.implementation=1),new e(t)}}uk.className="GRU",Ho(uk);class lk extends sk{constructor(e){super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=e.units,Ry(this.units,"units"),this.activation=Iv(void 0===e.activation?this.DEFAULT_ACTIVATION:e.activation),this.recurrentActivation=Iv(void 0===e.recurrentActivation?this.DEFAULT_RECURRENT_ACTIVATION:e.recurrentActivation),this.useBias=null==e.useBias||e.useBias,this.kernelInitializer=Wb(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=Wb(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=Wb(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.unitForgetBias=e.unitForgetBias,this.kernelRegularizer=Av(e.kernelRegularizer),this.recurrentRegularizer=Av(e.recurrentRegularizer),this.biasRegularizer=Av(e.biasRegularizer),this.kernelConstraint=Sx(e.kernelConstraint),this.recurrentConstraint=Sx(e.recurrentConstraint),this.biasConstraint=Sx(e.biasConstraint),this.dropout=tb([1,nb([0,null==e.dropout?0:e.dropout])]),this.recurrentDropout=tb([1,nb([0,null==e.recurrentDropout?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.implementation=e.implementation,this.stateSize=[this.units,this.units],this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){var t;const n=(e=qb(e))[e.length-1];let r;if(this.kernel=this.addWeight("kernel",[n,4*this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,4*this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){if(this.unitForgetBias){const e=this.biasInitializer,n=this.units;r=new((t=class extends Sb{apply(t,r){const s=e.apply([n]),a=(new Tb).apply([n]),i=e.apply([2*n]);return db(db(s,a),i)}}).className="CustomInit",t)}else r=this.biasInitializer;this.bias=this.addWeight("bias",[4*this.units],null,r,this.biasRegularizer,!0,this.biasConstraint)}else this.bias=null;this.built=!0}call(e,t){return ui(()=>{const n=null!=t.training&&t.training;if(3!==e.length)throw new hy(`LSTMCell expects 3 input Tensors (inputs, h, c), got ${e.length}.`);let r=e[1];const s=e[2];e=e[0],0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=dk({ones:()=>td(e),rate:this.dropout,training:n,count:4,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=dk({ones:()=>td(r),rate:this.recurrentDropout,training:n,count:4,dropoutFunc:this.dropoutFunc}));const a=this.dropoutMask,i=this.recurrentDropoutMask;let o,u,l,c;0<this.dropout&&this.dropout<1&&(e=$o(e,a[0]));let h=mb(e,this.kernel.read());0<this.recurrentDropout&&this.recurrentDropout<1&&(r=$o(r,i[0])),h=To(h,mb(r,this.recurrentKernel.read())),this.useBias&&(h=xb(h,this.bias.read()));const[d,p,f,m]=Yd(h,4,h.rank-1);o=this.recurrentActivation.apply(d),u=this.recurrentActivation.apply(p),l=To($o(u,s),$o(o,this.activation.apply(f))),c=this.recurrentActivation.apply(m);const g=$o(c,this.activation.apply(l));return[g,g,l]})}getConfig(){const e=super.getConfig(),t={units:this.units,activation:vv(this.activation),recurrentActivation:vv(this.recurrentActivation),useBias:this.useBias,kernelInitializer:Ub(this.kernelInitializer),recurrentInitializer:Ub(this.recurrentInitializer),biasInitializer:Ub(this.biasInitializer),unitForgetBias:this.unitForgetBias,kernelRegularizer:Cv(this.kernelRegularizer),recurrentRegularizer:Cv(this.recurrentRegularizer),biasRegularizer:Cv(this.biasRegularizer),activityRegularizer:Cv(this.activityRegularizer),kernelConstraint:kx(this.kernelConstraint),recurrentConstraint:kx(this.recurrentConstraint),biasConstraint:kx(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation};return Object.assign(Object.assign({},e),t)}}lk.className="LSTMCell",Ho(lk);class ck extends rk{constructor(e){0===e.implementation&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),e.cell=new lk(e),super(e)}call(e,t){return ui(()=>{null!=this.cell.dropoutMask&&(li(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(li(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const n=null==t?null:t.mask,r=null==t?null:t.training,s=null==t?null:t.initialState;return super.call(e,{mask:n,training:r,initialState:s})})}static fromConfig(e,t){return 0===t.implmentation&&(t.implementation=1),new e(t)}}ck.className="LSTM",Ho(ck);class hk extends sk{constructor(e){super(e),this.cells=e.cells}get stateSize(){const e=[];for(const t of this.cells.slice().reverse())Array.isArray(t.stateSize)?e.push(...t.stateSize):e.push(t.stateSize);return e}call(e,t){return ui(()=>{let n=e.slice(1);const r=[];for(const e of this.cells.slice().reverse())Array.isArray(e.stateSize)?r.push(n.splice(0,e.stateSize.length)):r.push(n.splice(0,1));r.reverse();const s=[];let a;for(let i=0;i<this.cells.length;++i){const o=this.cells[i];n=r[i],a=0===i?[e[0]].concat(n):[a[0]].concat(n),a=o.call(a,t),s.push(a.slice(1))}n=[];for(const e of s.slice().reverse())n.push(...e);return[a[0]].concat(n)})}build(e){let t;Gb(e)&&(e=e[0]),this.cells.forEach((n,r)=>{Ky(`RNNCell_${r}`,()=>{n.build(e),t=Array.isArray(n.stateSize)?n.stateSize[0]:n.stateSize,e=[e[0],t]})}),this.built=!0}getConfig(){const e=super.getConfig(),t={cells:this.cells.map(e=>({className:e.getClassName(),config:e.getConfig()}))};return Object.assign(Object.assign({},e),t)}static fromConfig(e,t,n={}){const r=[];for(const e of t.cells)r.push(tw(e,n));return new e({cells:r})}get trainableWeights(){if(!this.trainable)return[];const e=[];for(const t of this.cells)e.push(...t.trainableWeights);return e}get nonTrainableWeights(){const e=[];for(const t of this.cells)e.push(...t.nonTrainableWeights);if(!this.trainable){const t=[];for(const e of this.cells)t.push(...e.trainableWeights);return t.concat(e)}return e}getWeights(){const e=[];for(const t of this.cells)e.push(...t.weights);return Jb(e)}setWeights(e){const t=[];for(const n of this.cells){const r=n.weights.length,s=e.splice(r);for(let e=0;e<n.weights.length;++e)t.push([n.weights[e],s[e]])}Zb(t)}}function dk(e){const{ones:t,rate:n,training:r=!1,count:s=1,dropoutFunc:a}=e,i=()=>null!=a?a(t(),n):wb(t(),n),o=()=>vb(i,t,r);return!s||s<=1?ci(o().clone()):Array(s).fill(void 0).map(o).map(e=>ci(e.clone()))}hk.className="StackedRNNCells",Ho(hk);class pk extends rk{constructor(e){if(e.unroll)throw new dy("Unrolling is not possible with convolutional RNNs.");if(Array.isArray(e.cell))throw new dy("It is not possible at the moment to stack convolutional cells.");super(e),this.inputSpec=[new Qb({ndim:5})]}call(e,t){return ui(()=>{if(null!=this.cell.dropoutMask&&(li(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(li(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null),t&&t.constants)throw new hy("ConvRNN2D cell does not support constants");const n=null==t?null:t.mask,r=null==t?null:t.training,s=null==t?null:t.initialState;return super.call(e,{mask:n,training:r,initialState:s})})}computeOutputShape(e){let t=this.computeSingleOutputShape(e);return this.returnSequences||(t=[t[0],...t.slice(2)]),this.returnState&&(t=[t,...Array(2).fill([e[0],...t.slice(-3)])]),t}getInitialState(e){return ui(()=>{const{stateSize:t}=this.cell,n=e.shape,r=this.computeSingleOutputShape(n),s=Hh([r[0],...r.slice(2)]);return Array.isArray(t)?Array(t.length).fill(s):[s]})}resetStates(e,t=!1){ui(()=>{if(!this.stateful)throw new ly("Cannot call resetStates() on an RNN Layer that is not stateful.");const n=this.inputSpec[0].shape,r=this.computeSingleOutputShape(n),s=[r[0],...r.slice(2)];if(null==n[0])throw new hy("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \\n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(null==this.getStates())Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(()=>Hh(s)):this.states_=[Hh(s)];else if(null==e)li(this.states_),null!=this.keptStates&&(li(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(()=>Hh(s)):this.states_[0]=Hh(s);else{if(Array.isArray(e)||(e=[e]),e.length!==this.states_.length)throw new hy(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${e.length} state value(s). Input received: ${e}`);t?this.keptStates.push(this.states_.slice()):li(this.states_);for(let t=0;t<this.states_.length;++t){const n=e[t],r=s;if(!de(n.shape,r))throw new hy(`State ${t} is incompatible with layer ${this.name}: expected shape=${r}, received shape=${n.shape}`);this.states_[t]=n}}this.states_=this.states_.map(e=>ci(e.clone()))})}computeSingleOutputShape(e){const{dataFormat:t,filters:n,kernelSize:r,padding:s,strides:a,dilationRate:i}=this.cell,o="channelsFirst"===t,u=e[o?3:2],l=e[o?4:3],c=zv(u,r[0],s,a[0],i[0]),h=zv(l,r[1],s,a[1],i[1]);return[...e.slice(0,2),...o?[n,c,h]:[c,h,n]]}}pk.className="ConvRNN2D";class fk extends lk{constructor(e){const{filters:t,kernelSize:n,strides:r,padding:s,dataFormat:a,dilationRate:i}=e;super(Object.assign(Object.assign({},e),{units:t})),this.filters=t,Ry(this.filters,"filters"),this.kernelSize=Lv(n,2,"kernelSize"),this.kernelSize.forEach(e=>Ry(e,"kernelSize")),this.strides=Lv(r||1,2,"strides"),this.strides.forEach(e=>Ry(e,"strides")),this.padding=s||"valid",Hy(this.padding),this.dataFormat=a||"channelsLast",Gy(this.dataFormat),this.dilationRate=Lv(i||1,2,"dilationRate"),this.dilationRate.forEach(e=>Ry(e,"dilationRate"))}build(e){var t;e=qb(e);const n="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[n])throw new hy(`The channel dimension of the input should be defined. Found ${e[n]}`);const r=e[n],s=this.kernelSize.concat([r,4*this.filters]);this.kernel=this.addWeight("kernel",s,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint);const a=this.kernelSize.concat([this.filters,4*this.filters]);if(this.recurrentKernel=this.addWeight("recurrent_kernel",a,null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){let e;if(this.unitForgetBias){const n=this.biasInitializer,r=this.filters;e=new((t=class extends Sb{apply(e,t){return hb([n.apply([r]),jh([r]),n.apply([2*r])])}}).className="CustomInit",t)}else e=this.biasInitializer;this.bias=this.addWeight("bias",[4*this.filters],null,e,this.biasRegularizer,!0,this.biasConstraint)}this.built=!0}call(e,t){return ui(()=>{if(3!==e.length)throw new hy(`ConvLSTM2DCell expects 3 input Tensors (inputs, h, c), got ${e.length}.`);const n=t.training||!1,r=e[0],s=e[1],a=e[2];0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=dk({ones:()=>td(r),rate:this.dropout,training:n,count:4,dropoutFunc:this.dropoutFunc}));const i=this.dropoutMask,o=(e,t,n)=>t&&t[n]?$o(t[n],e):e;let u=o(r,i,0),l=o(r,i,1),c=o(r,i,2),h=o(r,i,3);0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=dk({ones:()=>td(s),rate:this.recurrentDropout,training:n,count:4,dropoutFunc:this.dropoutFunc}));const d=this.recurrentDropoutMask;let p=o(s,d,0),f=o(s,d,1),m=o(s,d,2),g=o(s,d,3);const[y,b,x,w]=Yd(this.kernel.read(),4,3),[v,k,I,S]=this.useBias?Yd(this.bias.read(),4):[null,null,null,null];u=this.inputConv(u,y,v,this.padding),l=this.inputConv(l,b,k,this.padding),c=this.inputConv(c,x,I,this.padding),h=this.inputConv(h,w,S,this.padding);const[N,T,E,C]=Yd(this.recurrentKernel.read(),4,3);p=this.recurrentConv(p,N),f=this.recurrentConv(f,T),m=this.recurrentConv(m,E),g=this.recurrentConv(g,C);const $=this.recurrentActivation.apply(To(u,p)),A=this.recurrentActivation.apply(To(l,f)),R=To($o(A,a),$o($,this.activation.apply(To(c,m)))),_=$o(this.recurrentActivation.apply(To(h,g)),this.activation.apply(R));return[_,_,R]})}getConfig(){const e=super.getConfig(),{units:t}=e,n=function(e,t){var n={};for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&t.indexOf(r)<0&&(n[r]=e[r]);if(null!=e&&"function"==typeof Object.getOwnPropertySymbols){var s=0;for(r=Object.getOwnPropertySymbols(e);s<r.length;s++)t.indexOf(r[s])<0&&Object.prototype.propertyIsEnumerable.call(e,r[s])&&(n[r[s]]=e[r[s]])}return n}(e,["units"]),r={filters:this.filters,kernelSize:this.kernelSize,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,strides:this.strides};return Object.assign(Object.assign({},n),r)}inputConv(e,t,n,r){const s=Ec(e,t,this.strides,r||"valid","channelsFirst"===this.dataFormat?"NCHW":"NHWC",this.dilationRate);return n?xb(s,n,this.dataFormat):s}recurrentConv(e,t){return Ec(e,t,1,"same","channelsFirst"===this.dataFormat?"NCHW":"NHWC")}}fk.className="ConvLSTM2DCell",Ho(fk);class mk extends pk{constructor(e){const t=new fk(e);super(Object.assign(Object.assign({},e),{cell:t}))}static fromConfig(e,t){return new e(t)}}mk.className="ConvLSTM2D",Ho(mk);class gk extends sx{constructor(e){super(e),this.rate=Math.max(Math.min(e.rate,1),0),this.noiseShape=e.noiseShape,this.seed=e.seed,this.supportsMasking=!0}getNoiseShape(e){if(null==this.noiseShape)return this.noiseShape;const t=e.shape,n=[];for(let e=0;e<this.noiseShape.length;++e)n.push(null==this.noiseShape[e]?t[e]:this.noiseShape[e]);return n}call(e,t){return ui(()=>{this.invokeCallHook(e,t);const n=jb(e);if(0<this.rate&&this.rate<1){const e=null!=t.training&&t.training,r=this.getNoiseShape(n);return vb(()=>wb(n,this.rate,r,this.seed),()=>n,e)}return e})}getConfig(){const e={rate:this.rate,noiseShape:this.noiseShape,seed:this.seed},t=super.getConfig();return Object.assign(e,t),e}dispose(){return super.dispose()}}gk.className="Dropout",Ho(gk);class yk extends gk{constructor(e){super(e),this.inputSpec=[{ndim:3}]}getNoiseShape(e){const t=e.shape;return[t[0],1,t[2]]}}yk.className="SpatialDropout1D",Ho(yk);class bk extends sx{constructor(e){if(super(e),this.activation=null,this.useBias=!0,this.kernel=null,this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",null==e.batchInputShape&&null==e.inputShape&&null!=e.inputDim){let t=null;null!=e.batchSize&&(t=e.batchSize),this.batchInputShape=[t,e.inputDim]}this.units=e.units,Ry(this.units,"units"),this.activation=Iv(e.activation),null!=e.useBias&&(this.useBias=e.useBias),this.kernelInitializer=Wb(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.biasInitializer=Wb(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelConstraint=Sx(e.kernelConstraint),this.biasConstraint=Sx(e.biasConstraint),this.kernelRegularizer=Av(e.kernelRegularizer),this.biasRegularizer=Av(e.biasRegularizer),this.activityRegularizer=Av(e.activityRegularizer),this.supportsMasking=!0,this.inputSpec=[{minNDim:2}]}build(e){const t=(e=qb(e))[e.length-1];null==this.kernel&&(this.kernel=this.addWeight("kernel",[t,this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint))),this.inputSpec=[{minNDim:2,axes:{[-1]:t}}],this.built=!0}computeOutputShape(e){const t=(e=qb(e)).slice();return t[t.length-1]=this.units,t}call(e,t){return ui(()=>{this.invokeCallHook(e,t);const n=jb(e),r=My(this.activation.getClassName());let s;return null!=r?s=mb(n,this.kernel.read(),r,this.bias?this.bias.read():null):(s=mb(n,this.kernel.read()),null!=this.bias&&(s=xb(s,this.bias.read())),null!=this.activation&&(s=this.activation.apply(s))),s})}getConfig(){const e={units:this.units,activation:vv(this.activation),useBias:this.useBias,kernelInitializer:Ub(this.kernelInitializer),biasInitializer:Ub(this.biasInitializer),kernelRegularizer:Cv(this.kernelRegularizer),biasRegularizer:Cv(this.biasRegularizer),activityRegularizer:Cv(this.activityRegularizer),kernelConstraint:kx(this.kernelConstraint),biasConstraint:kx(this.biasConstraint)},t=super.getConfig();return Object.assign(e,t),e}}bk.className="Dense",Ho(bk);class xk extends sx{constructor(e){super(e=e||{}),this.inputSpec=[{minNDim:3}],this.dataFormat=e.dataFormat}computeOutputShape(e){e=qb(e);for(const t of e.slice(1))if(null==t)throw new hy(`The shape of the input to "Flatten" is not fully defined (got ${e.slice(1)}). Make sure to pass a complete "input_shape" or "batch_input_shape" argument to the first layer in your model.`);return[e[0],eb(e,1)]}call(e,t){return ui(()=>{this.invokeCallHook(e,t);let n=jb(e);if("channelsFirst"===this.dataFormat&&n.rank>1){const e=[0];for(let t=2;t<n.rank;++t)e.push(t);e.push(1),n=Du(n,e)}return function(e){if(e.rank<=1)throw new hy(`batchFlatten requires a minimum rank of 2. Got rank: ${e.rank}.`);const t=[e.shape[0],eb(e.shape,1)];return sc(e,t)}(n)})}getConfig(){const e={};null!=this.dataFormat&&(e.dataFormat=this.dataFormat);const t=super.getConfig();return Object.assign(e,t),e}}xk.className="Flatten",Ho(xk);class wk extends sx{constructor(e){super(e),this.supportsMasking=!0,this.activation=Iv(e.activation)}call(e,t){return ui(()=>{this.invokeCallHook(e,t);const n=jb(e);return this.activation.apply(n)})}getConfig(){const e={activation:vv(this.activation)},t=super.getConfig();return Object.assign(e,t),e}}wk.className="Activation",Ho(wk);class vk extends sx{constructor(e){super(e),this.n=e.n,this.inputSpec=[{ndim:2}]}computeOutputShape(e){return[e[0],this.n,e[1]]}call(e,t){return ui(()=>{return e=jb(e),t=e,n=this.n,ui(()=>{if(2!==t.shape.length)throw new hy(`repeat() expects a rank-2 tensor, but received a rank-${t.shape.length} tensor.`);return pb(ob(t,1),[1,n,1])});var t,n})}getConfig(){const e={n:this.n},t=super.getConfig();return Object.assign(e,t),e}}vk.className="RepeatVector",Ho(vk);class kk extends sx{constructor(e){super(e),this.targetShape=e.targetShape;for(let e=0;e<this.targetShape.length;++e)this.isUnknown(this.targetShape[e])&&(this.targetShape[e]=null)}isUnknown(e){return e<0||null==e}fixUnknownDimension(e,t){const n="Total size of new array must be unchanged.",r=t.slice();let s=1,a=null;for(let e=0;e<r.length;++e){const t=r[e];if(this.isUnknown(t)){if(null!==a)throw new hy("Can only specifiy one unknown dimension.");a=e}else s*=t}const i=eb(e);if(null!==a){if(0===s||i%s!==0)throw new hy(n);r[a]=i/s}else if(i!==s)throw new hy(n);return r}computeOutputShape(e){let t=!1;for(let n=0;n<e.length;++n)if(this.isUnknown(e[n])){t=!0;break}return t?e.slice(0,1).concat(this.targetShape):e.slice(0,1).concat(this.fixUnknownDimension(e.slice(1),this.targetShape))}call(e,t){return ui(()=>{this.invokeCallHook(e,t);const n=jb(e),r=n.shape,s=r.slice(0,1).concat(this.fixUnknownDimension(r.slice(1),this.targetShape));return sc(n,s)})}getConfig(){const e={targetShape:this.targetShape},t=super.getConfig();return Object.assign(e,t),e}}kk.className="Reshape",Ho(kk);class Ik extends sx{constructor(e){if(super(e),null==e.dims)throw new Error("Required configuration field `dims` is missing during Permute constructor call.");if(!Array.isArray(e.dims))throw new Error(`Permute constructor requires \\`dims\\` to be an Array, but received ${e.dims} instead.`);const t=rb(1,e.dims.length+1);if(!de(e.dims.slice().sort(),t))throw new Error("Invalid permutation `dims`: "+JSON.stringify(e.dims)+" `dims` must contain consecutive integers starting from 1.");this.dims=e.dims,this.dimsIncludingBatch=[0].concat(this.dims),this.inputSpec=[new Qb({ndim:this.dims.length+1})]}computeOutputShape(e){const t=(e=qb(e)).slice();return this.dims.forEach((n,r)=>{t[r+1]=e[n]}),t}call(e,t){return Du(jb(e),this.dimsIncludingBatch)}getConfig(){const e={dims:this.dims},t=super.getConfig();return Object.assign(e,t),e}}Ik.className="Permute",Ho(Ik);class Sk extends sx{constructor(e){super(null==e?{}:e),this.supportsMasking=!0,this.maskValue=null!=e?null==e.maskValue?0:e.maskValue:0}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={maskValue:this.maskValue};return Object.assign(t,e),t}computeMask(e,t){const n=jb(e);return Dl(ed(n,this.maskValue),-1)}call(e,t){return ui(()=>{this.invokeCallHook(e,t);const n=jb(e),r=Dl(ed(n,this.maskValue),-1,!0);return $o(n,Io(r,n.dtype))})}}Sk.className="Masking",Ho(Sk);class Nk extends sx{constructor(e){if(super(e),this.embeddings=null,this.DEFAULT_EMBEDDINGS_INITIALIZER="randomUniform",null==e.batchInputShape&&null==e.inputShape){let t=null;null!=e.batchSize&&(t=e.batchSize),null==e.inputLength?this.batchInputShape=[t,null]:this.batchInputShape=[t].concat(xy(e.inputLength))}this.inputDim=e.inputDim,Ry(this.inputDim,"inputDim"),this.outputDim=e.outputDim,Ry(this.outputDim,"outputDim"),this.embeddingsInitializer=Wb(e.embeddingsInitializer||this.DEFAULT_EMBEDDINGS_INITIALIZER),this.embeddingsRegularizer=Av(e.embeddingsRegularizer),this.activityRegularizer=Av(e.activityRegularizer),this.embeddingsConstraint=Sx(e.embeddingsConstraint),this.maskZero=e.maskZero,this.supportsMasking=e.maskZero,this.inputLength=e.inputLength}build(e){this.embeddings=this.addWeight("embeddings",[this.inputDim,this.outputDim],this.dtype,this.embeddingsInitializer,this.embeddingsRegularizer,!0,this.embeddingsConstraint),this.built=!0}warnOnIncompatibleInputShape(e){}computeMask(e,t){return ui(()=>this.maskZero?(e=jb(e),ed(e,_o(e))):null)}computeOutputShape(e){if(e=qb(e),null==this.inputLength)return[...e,this.outputDim];const t=xy(this.inputLength);if(t.length!==e.length-1)throw new hy(`"inputLength" is ${this.inputLength}, but received input shape has shape ${e}`);{let n=0;for(let r=0;r<t.length;++r){const s=t[r],a=e[r+1];if(null!=s&&null!=a&&s!==a)throw new hy(`"inputLength" is ${this.inputLength}, but received input shape has shape ${e}`);null==s&&(t[n]=a),n++}}return[e[0],...t,this.outputDim]}call(e,t){return ui(()=>{this.invokeCallHook(e,t);let n=jb(e);"int32"!==n.dtype&&(n=ib(n,"int32"));const r=gb(this.embeddings.read(),sc(n,[n.size]));return sc(r,qb(this.computeOutputShape(n.shape)))})}getConfig(){const e={inputDim:this.inputDim,outputDim:this.outputDim,embeddingsInitializer:Ub(this.embeddingsInitializer),embeddingsRegularizer:Cv(this.embeddingsRegularizer),activityRegularizer:Cv(this.activityRegularizer),embeddingsConstraint:kx(this.embeddingsConstraint),maskZero:this.maskZero,inputLength:this.inputLength},t=super.getConfig();return Object.assign(e,t),e}}Nk.className="Embedding",Ho(Nk);class Tk extends sx{constructor(e){super(e||{}),this.supportsMasking=!0}mergeFunction(e){throw new dy}computeElementwiseOpOutputShape(e,t){if(null==e||null==t)return null;if(e.length<t.length)return this.computeElementwiseOpOutputShape(t,e);if(0===t.length)return e;const n=e.slice(0,e.length-t.length);for(let r=0;r<t.length;++r){const s=e[e.length-t.length+r],a=t[r];if(null==s||null==a||s<0||a<0)n.push(null);else if(1===s)n.push(a);else if(1===a)n.push(s);else{if(s!==a)throw new hy("Operands could not be broadcast together with shapes "+JSON.stringify(e)+" "+JSON.stringify(t));n.push(s)}}return n}build(e){if(Array.isArray(e)&&!Array.isArray(e[0])&&(e=[qb(e)]),e.length<2)throw new hy(`A merge layer should be called on an Array of at least 2 inputs. Got ${e.length} input(s).`);let t=[];for(const n of e)null!=n&&null!==n[0]&&t.push(n[0]);if(t=Ey(t),t.length>1)throw new hy(`Can not merge tensors with different batch sizes. Got tensors with shapes: ${JSON.stringify(e)}.`);let n=null==e[0]?null:e[0].slice(1);for(let t=1;t<e.length;++t){const r=null==e[t]?null:e[t].slice(1);n=this.computeElementwiseOpOutputShape(n,r)}const r=e.map(e=>e.length);-1===e.indexOf(null)&&1===Ey(r).length?this.reshapeRequired=!1:this.reshapeRequired=!0}call(e,t){return ui(()=>{if(this.reshapeRequired){const t=[],n=e.map(e=>e.rank);if(-1===n.indexOf(null)){const r=nb(n);for(let n of e){const e=n.rank;for(let t=0;t<r-e;++t)n=ob(n,1);t.push(n)}return this.mergeFunction(t)}{let n=!1;for(const r of e){const e=r.rank;if(null==e){const e=r.shape,s=e[0],a=e.slice(1).concat([s]);let i=sc(r,[s].concat(eb(e.slice(1))));i=Du(i,[1,0]),i=sc(i,a),t.push(i),n=!0}else if(e>1){const s=rb(1,e).concat([0]);t.push(Du(r,s)),n=!0}else t.push(r)}let r=this.mergeFunction(t);const s=r.rank;if(n)if(null==s){const e=r.shape,t=e[e.length-1],n=[t].concat(e.slice(0,e.length-1));r=sc(Du(sc(r,[-1,t]),[1,0]),n)}else if(s>1){const e=[s-1].concat(rb(0,s-1));r=Du(r,e)}return r}}return this.mergeFunction(e)})}computeOutputShape(e){let t;t=null==e[0]?null:e[0].slice(1);for(let n=1;n<e.length;++n){const r=null==e[n]?null:e[n].slice(1);t=this.computeElementwiseOpOutputShape(t,r)}let n=[];for(const t of e)null!=t&&null!==t[0]&&n.push(t[0]);return n=Ey(n),t=1===n.length?n.concat(t):[null].concat(t),t}computeMask(e,t){return ui(()=>{if(null==t)return null;if(!Array.isArray(t))throw new hy("`mask` should be an Array");if(!Array.isArray(e))throw new hy("`inputs` should be an Array");if(t.length!==e.length)throw new hy(`The Array \'inputs\' and \'mask\' are expected to have the same length, but have different lengths (${e.length} vs ${t.length})`);if(t.every(e=>null==e))return null;let n=(t=t.map(e=>null==e?e:dh(e,0)))[0];for(let e=1;e<t.length-1;++e)n=Fh(n,t[e]);return n})}}class Ek extends Tk{constructor(e){super(e)}mergeFunction(e){return ui(()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=To(t,e[n]);return t})}}Ek.className="Add",Ho(Ek);class Ck extends Tk{constructor(e){super(e)}mergeFunction(e){return ui(()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=$o(t,e[n]);return t})}}Ck.className="Multiply",Ho(Ck);class $k extends Tk{constructor(e){super(e)}mergeFunction(e){return ui(()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=To(t,e[n]);return $o(1/e.length,t)})}}$k.className="Average",Ho($k);class Ak extends Tk{constructor(e){super(e)}mergeFunction(e){return ui(()=>{let t=e[0];for(let n=1;n<e.length;++n)t=su(t,e[n]);return t})}}Ak.className="Maximum",Ho(Ak);class Rk extends Tk{constructor(e){super(e)}mergeFunction(e){return ui(()=>{let t=e[0];for(let n=1;n<e.length;++n)t=Kh(t,e[n]);return t})}}Rk.className="Minimum",Ho(Rk);class _k extends Tk{constructor(e){super(e),this.DEFAULT_AXIS=-1,null==e&&(e={}),this.axis=null==e.axis?this.DEFAULT_AXIS:e.axis,this.supportsMasking=!0,this.reshapeRequired=!1}build(e){if(!Array.isArray(e)||!Array.isArray(e[0])||1===e.length)throw new hy("A `Concatenate` layer should be called on a list of at least 2 inputs");let t=!0;for(const n of e)if(null!=n){t=!1;break}if(t)return;const n=[];for(let t=0;t<e.length;++t){const r=e[t].slice();r.splice(this.axis,1);let s=!1;for(const e of n)if(de(e,r)){s=!0;break}s||n.push(r)}if(n.length>1)throw new hy("A `Concatenate` layer requires inputs with matching shapes except for the concat axis. Got input shapes: "+JSON.stringify(e))}mergeFunction(e){return ui(()=>hb(e,this.axis))}computeOutputShape(e){if(!Array.isArray(e)||!Array.isArray(e[0]))throw new hy("A `Concatenate` layer should be called on a list of inputs.");const t=e,n=t[0].slice(),r=this.axis<0?n.length+this.axis:this.axis;for(const e of t.slice(1)){if(null==n[r]||null==e[r]){n[r]=null;break}n[r]+=e[r]}return n}computeMask(e,t){if(null==t)return null;if(!Array.isArray(t))throw new hy("`mask` should be an array for Concatenate");if(!Array.isArray(e))throw new hy("`inputs` should be an array for Concatenate");if(t.length!==e.length)throw new hy(`Mismatch in the length of mask (${t.length}) and the legnth of inputs (${e.length})`);return ui(()=>{let n=!0;if(t.forEach(e=>{null==e||(n=!1)}),n)return null;const r=[];for(let n=0;n<e.length;++n)null==t[n]?r.push(Io(td(e[n]),"bool")):t[n].rank<e[n].rank?r.push(dh(t[n],-1)):r.push(t[n]);const s=oc(r,this.axis);return Fl(s,-1,!1)})}getConfig(){const e={axis:this.axis},t=super.getConfig();return Object.assign(e,t),e}}function Mk(e,t){for(;e<0;)e+=t;return e}_k.className="Concatenate",Ho(_k);class Fk extends Tk{constructor(e){super(e),this.axes=e.axes,this.normalize=null!=e.normalize&&e.normalize,this.supportsMasking=!0,this.reshapeRequired=!1}build(e){ie(Array.isArray(e)&&2===e.length&&Array.isArray(e[0])&&Array.isArray(e[1]),()=>"A `Dot` layer should be called on a list of exactly 2 inputs.");const t=e[0],n=e[1];if(t.length>3||n.length>3)throw new dy("Dot layer does not support tensors of 4D or higher rank yet.");const r=this.interpretAxes(t,n);if(t[r[0]]!==n[r[1]])throw new hy(`Dimension incompatibility: ${t[r[0]]} !== ${n[r[1]]}`)}mergeFunction(e){if(2!==e.length)throw new hy(`A \\`Dot\\` layer must be called on exactly 2 inputs, but received ${e.length} input(s).`);let t,n=e[0],r=e[1];return t=Array.isArray(this.axes)?this.axes.map((t,n)=>Mk(t,e[n].shape.length)):[Mk(this.axes,n.shape.length),Mk(this.axes,r.shape.length)],this.normalize&&(n=nw(n,t[0]),r=nw(r,t[1])),function(e,t,n){if(e.shape.length>3||t.shape.length>3)throw new dy("batchDot is not implemented for tensors of 4D or higher rank yet");if(ie(e.shape.length>=2,()=>`batchDot requires the rank of x to be >= 2, but got ${e.shape.length}`),ie(e.shape.length>=2,()=>`batchDot requires the rank of y to be >= 2, but got ${t.shape.length}`),"number"==typeof n&&(n=[n,n]),"complex64"===e.dtype||"complex64"===t.dtype)throw new dy("batchDot is not implemented for complex64-type Tensors yet.");const r=e.shape.length,s=t.shape.length;null==n&&(n=[r-1,s-2]);const a=n;return ui(()=>{let n,i;if(r>s){n=r-s;const e=[];for(let t=0;t<n;++t)e.push(1);t=sc(t,t.shape.concat(e))}else if(s>r){n=s-r;const t=[];for(let e=0;e<n;++e)t.push(1);e=sc(e,e.shape.concat(t))}else n=0;if(2===e.shape.length&&2===t.shape.length)i=a[0]===a[1]?oh($o(e,t),a[0]):oh($o(Du(e,[1,0]),t),a[1]);else{const n=a[0]!==e.shape.length-1,r=a[1]===t.shape.length-1;i=Au(e,t,n,r)}if(n>0){let e;e=r>s?r+s-3:r-1;const t=[];for(let r=e;r<e+n;++r)t.push(r);i=Qd(i,t)}return 1===i.shape.length&&(i=dh(i,1)),i})}(n,r,t)}interpretAxes(e,t){let n;return n=Array.isArray(this.axes)?this.axes:[Mk(this.axes,e.length),Mk(this.axes,t.length)],n}computeOutputShape(e){ie(Array.isArray(e)&&2===e.length&&Array.isArray(e[0])&&Array.isArray(e[1]),()=>"A `Dot` layer should be called on a list of exactly 2 inputs.");const t=e[0].slice(),n=e[1].slice();if(t.length>3||n.length>3)throw new dy("Dot layer does not support tensors of 4D or higher rank yet.");const r=this.interpretAxes(t,n);t.splice(r[0],1),n.splice(r[1],1),n.splice(0,1);const s=t.concat(n);return 1===s.length&&s.push(1),s}computeMask(e,t){return null}getConfig(){const e={axes:this.axes,normalize:this.normalize},t=super.getConfig();return Object.assign(e,t),e}}Fk.className="Dot",Ho(Fk);class Dk extends sx{constructor(e){super(e),this.supportsMasking=!0,this.stddev=e.stddev}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={stddev:this.stddev};return Object.assign(t,e),t}call(e,t){return ui(()=>{this.invokeCallHook(e,t);const n=jb(e);return vb(()=>To(fb(n.shape,0,this.stddev),n),()=>n,t.training||!1)})}}Dk.className="GaussianNoise",Ho(Dk);class Ok extends sx{constructor(e){super(e),this.supportsMasking=!0,this.rate=e.rate}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={rate:this.rate};return Object.assign(t,e),t}call(e,t){return ui(()=>{this.invokeCallHook(e,t);const n=jb(e);return this.rate>0&&this.rate<1?vb(()=>{const e=Math.sqrt(this.rate/(1-this.rate));return $o(n,fb(n.shape,1,e))},()=>n,t.training||!1):n})}}Ok.className="GaussianDropout",Ho(Ok);class Lk extends sx{constructor(e){super(e),this.supportsMasking=!0,this.rate=e.rate,this.noiseShape=e.noiseShape}_getNoiseShape(e){return this.noiseShape||jb(e).shape}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={rate:this.rate};return Object.assign(t,e),t}call(e,t){return ui(()=>{if(this.rate<1&&this.rate>0){const n=this._getNoiseShape(e),r=()=>{const t=jb(e),r=-1.7580993408473766;let s=xh(Id(n),this.rate);s=ib(s,"float32");const a=((1-this.rate)*(1+this.rate*r**2))**-.5,i=-a*r*this.rate,o=To($o(t,s),$o(To(s,-1),r));return To($o(o,a),i)};return vb(r,()=>jb(e),t.training||!1)}return e})}}function zk(e,t,n,r,s,a=.001){let i;if(2===e.rank)i=fc(e,t,n,r,s,a);else if(3===e.rank)i=mc(e,t,n,r,s,a);else{if(4!==e.rank)throw new dy(`batchNormalization is not implemented for array of rank ${e.rank} yet`);i=gc(e,t,n,r,s,a)}return i}Lk.className="AlphaDropout",Ho(Lk);class Pk extends sx{constructor(e){null==e&&(e={}),super(e),this.supportsMasking=!0,this.axis=null==e.axis?-1:e.axis,this.momentum=null==e.momentum?.99:e.momentum,this.epsilon=null==e.epsilon?.001:e.epsilon,this.center=null==e.center||e.center,this.scale=null==e.scale||e.scale,this.betaInitializer=Wb(e.betaInitializer||"zeros"),this.gammaInitializer=Wb(e.gammaInitializer||"ones"),this.movingMeanInitializer=Wb(e.movingMeanInitializer||"zeros"),this.movingVarianceInitializer=Wb(e.movingVarianceInitializer||"ones"),this.betaConstraint=Sx(e.betaConstraint),this.gammaConstraint=Sx(e.gammaConstraint),this.betaRegularizer=Av(e.betaRegularizer),this.gammaRegularizer=Av(e.gammaRegularizer)}build(e){e=qb(e);const t=this.axis>=0?this.axis:this.axis+e.length,n=e[t];if(null==n)throw new hy(`Axis ${t} of input tensor should have a defined dimension but the layer received an input with shape ${JSON.stringify(e)}.`);this.inputSpec=[new Qb({ndim:e.length,axes:{[t]:n}})];const r=[n];this.scale&&(this.gamma=this.addWeight("gamma",r,null,this.gammaInitializer,this.gammaRegularizer,!0,this.gammaConstraint)),this.center&&(this.beta=this.addWeight("beta",r,null,this.betaInitializer,this.betaRegularizer,!0,this.betaConstraint)),this.movingMean=this.addWeight("moving_mean",r,null,this.movingMeanInitializer,null,!1),this.movingVariance=this.addWeight("moving_variance",r,null,this.movingVarianceInitializer,null,!1),this.built=!0}call(e,t){return ui(()=>{const n=null!=t.training&&t.training,r=jb(e),s=r.shape,a=s.length,i=rb(0,a),o=this.axis>=0?this.axis:this.axis+a;i.splice(o,1);const u=my(1,a);u[o]=s[o];const l=i.slice();l.sort();const c=!de(l,rb(0,a).slice(0,a-1));if(!n)return(()=>{if(c){const e=sc(this.movingMean.read(),u),t=sc(this.movingVariance.read(),u),n=this.center?sc(this.beta.read(),u):null,s=this.scale?sc(this.gamma.read(),u):null;return zk(r,e,t,n,s,this.epsilon)}return zk(r,this.movingMean.read(),this.movingVariance.read(),null==this.beta?null:this.beta.read(),null==this.gamma?null:this.gamma.read(),this.epsilon)})();const[h,d,p]=function(e,t,n,r,s=.001){return de(r.slice().sort(),rb(0,e.rank-1))?function(e,t,n,r,s=.001){return ui(()=>{const a=Jh(e,r),i=a.mean,o=a.variance;return[zk(e,i,o,n,t,s),i,o]})}(e,t,n,r,s):function(e,t,n,r,s=.001){return ui(()=>{const a=Jh(e,r),i=a.mean,o=a.variance,u=[];for(const t of rb(0,e.rank))-1!==r.indexOf(t)?u.push(1):u.push(e.shape[t]);const l=sc(i,u),c=sc(o,u),h=null==t?null:sc(t,u),d=null==n?null:sc(n,u);return[zk(e,l,c,d,h,s),i,o]})}(e,t,n,r,s)}(r,this.gamma.read(),this.beta.read(),i,this.epsilon),f=(e,t,n)=>{ui(()=>{const r=1-n,s=e.read(),a=$o(Zo(s,t),r);e.write(Zo(s,a))})};return(()=>{f(this.movingMean,d,this.momentum),f(this.movingVariance,p,this.momentum)})(),h})}getConfig(){const e={axis:this.axis,momentum:this.momentum,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:Ub(this.betaInitializer),gammaInitializer:Ub(this.gammaInitializer),movingMeanInitializer:Ub(this.movingMeanInitializer),movingVarianceInitializer:Ub(this.movingVarianceInitializer),betaRegularizer:Cv(this.betaRegularizer),gammaRegularizer:Cv(this.gammaRegularizer),betaConstraint:kx(this.betaConstraint),gammaConstraint:kx(this.gammaConstraint)},t=super.getConfig();return Object.assign(e,t),e}}Pk.className="BatchNormalization",Ho(Pk);class Bk extends sx{constructor(e){if(null==e&&(e={}),super(e),this.axis=null==e.axis?-1:e.axis,"number"==typeof this.axis){if(!Number.isInteger(this.axis))throw new Error(`Expected axis to be an integer, but received ${this.axis}`)}else{if(!Array.isArray(this.axis))throw new Error(`Expected axis to be an integer or an array of integers, but received ${JSON.stringify(this.axis)}`);for(const e of this.axis)if(!Number.isInteger(e))throw new Error(`Expected axis to be an array of integers, but received ${JSON.stringify(this.axis)}`)}this.epsilon=null==e.epsilon?.001:e.epsilon,this.center=null==e.center||e.center,this.scale=null==e.scale||e.scale,this.betaInitializer=Wb(e.betaInitializer||"zeros"),this.gammaInitializer=Wb(e.gammaInitializer||"ones"),this.betaRegularizer=Av(e.betaRegularizer),this.gammaRegularizer=Av(e.gammaRegularizer),this.supportsMasking=!0}build(e){const t=(e=qb(e)).length;"number"==typeof this.axis&&(this.axis=[this.axis]);for(let e=0;e<this.axis.length;++e)this.axis[e]<0&&(this.axis[e]+=t);for(const e of this.axis)if(e<0||e>=t)throw new Error(`Invalid axis: ${e}`);if(this.axis.length!==Ey(this.axis).length)throw new Error(`Found duplicate axes in: ${this.axis}`);const n=this.axis.map(t=>e[t]),r=!0;this.scale?this.gamma=this.addWeight("gamma",n,"float32",this.gammaInitializer,this.gammaRegularizer,r):this.gamma=null,this.center?this.beta=this.addWeight("beta",n,"float32",this.betaInitializer,this.betaRegularizer,r):this.beta=null,this.built=!0}call(e,t){const n=jb(e),r=n.shape,s=r.length;return ui(()=>{let{mean:e,variance:t}=Jh(n,this.axis,!0);const a=my(1,s);for(const e of this.axis)a[e]=r[e];const i=e=>null!=e&&e.shape.length!==s?sc(e,a):e;let o=this.scale?i(this.gamma.read()):null,u=this.center?i(this.beta.read()):null;const l=[],c=[];for(let e=0;e<s;++e)-1!==this.axis.indexOf(e)?(l.push(r[e]),c.push(1)):(l.push(1),c.push(r[e]));return e=fh(e,l),t=fh(t,l),null!=o&&(o=fh(o,c)),null!=u&&(u=fh(u,c)),zk(n,e,t,u,o,this.epsilon)})}getConfig(){const e={axis:this.axis,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:Ub(this.betaInitializer),gammaInitializer:Ub(this.gammaInitializer),betaRegularizer:Cv(this.betaRegularizer),gammaRegularizer:Cv(this.gammaRegularizer)},t=super.getConfig();return Object.assign(e,t),e}}Bk.className="LayerNormalization",Ho(Bk);class Vk extends sx{constructor(e){if(null==e&&(e={}),super(e),this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,null==e.padding)this.padding=[[1,1],[1,1]];else if("number"==typeof e.padding)this.padding=[[e.padding,e.padding],[e.padding,e.padding]];else{if(e.padding=e.padding,2!==e.padding.length)throw new hy(`ZeroPadding2D expects padding to be a length-2 array, but received a length-${e.padding.length} array.`);let t,n;if("number"==typeof e.padding[0])t=[e.padding[0],e.padding[0]],n=[e.padding[1],e.padding[1]];else{if(e.padding=e.padding,2!==e.padding[0].length)throw new hy(`ZeroPadding2D expects height padding to be a length-2 array, but received a length-${e.padding[0].length} array.`);if(t=e.padding[0],2!==e.padding[1].length)throw new hy(`ZeroPadding2D expects width padding to be a length-2 array, but received a length-${e.padding[1].length} array.`);n=e.padding[1]}this.padding=[t,n]}this.inputSpec=[new Qb({ndim:4})]}computeOutputShape(e){let t,n;return e=qb(e),"channelsFirst"===this.dataFormat?(t=null!=e[2]&&e[2]>=0?e[2]+this.padding[0][0]+this.padding[0][1]:null,n=null!=e[3]&&e[3]>=0?e[3]+this.padding[1][0]+this.padding[1][1]:null,[e[0],e[1],t,n]):(t=null!=e[1]&&e[1]>=0?e[1]+this.padding[0][0]+this.padding[0][1]:null,n=null!=e[2]&&e[2]>=0?e[2]+this.padding[1][0]+this.padding[1][1]:null,[e[0],t,n,e[3]])}call(e,t){return ui(()=>{return t=jb(e),n=this.padding,r=this.dataFormat,ui(()=>{if(4!==t.rank)throw new hy(`temporalPadding expects input tensor to be 4-D, but received a ${t.rank}-D tensor.`);if(null==n&&(n=[[1,1],[1,1]]),2!==n.length||2!==n[0].length||2!==n[1].length)throw new hy("spatial2dPadding expects `padding` to be an Array of two Arrays, each of which is an Array of two integers.");if(null==r&&(r="channelsLast"),"channelsLast"!==r&&"channelsFirst"!==r)throw new hy(`Unknown data format: ${r}. Supported data formats are \'channelsLast\' and \'channelsFirst.`);let e;return e="channelsFirst"===r?[[0,0],[0,0],n[0],n[1]]:[[0,0],n[0],n[1],[0,0]],rd(t,e)});var t,n,r})}getConfig(){const e={padding:this.padding,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}function Uk(e,t,n,r,s,a){return ui(()=>{let i;Gy(s),jy(a),Hy(r),null==n&&(n=[1,1]),null==r&&(r="valid"),null==s&&(s="channelsLast"),null==a&&(a="max"),e=Bv(e,s);const o="same"===r?"same":"valid";return i="max"===a?Vh(e,t,n,o):ac(e,t,n,o),"channelsFirst"===s&&(i=Du(i,[0,3,1,2])),i})}function Wk(e,t,n,r,s,a){return ui(()=>{let i;Gy(s),jy(a),Hy(r),null==n&&(n=[1,1,1]),null==r&&(r="valid"),null==s&&(s="channelsLast"),null==a&&(a="max"),e=Vv(e,s);const o="same"===r?"same":"valid";return i="max"===a?Uh(e,t,n,o):ic(e,t,n,o),"channelsFirst"===s&&(i=Du(i,[0,4,1,2,3])),i})}Vk.className="ZeroPadding2D",Ho(Vk);class Gk extends sx{constructor(e){if(null==e.poolSize&&(e.poolSize=2),super(e),"number"==typeof e.poolSize)this.poolSize=[e.poolSize];else{if(!Array.isArray(e.poolSize)||1!==e.poolSize.length||"number"!=typeof e.poolSize[0])throw new hy(`poolSize for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(e.poolSize)}`);this.poolSize=e.poolSize}if(Ry(this.poolSize,"poolSize"),null==e.strides)this.strides=this.poolSize;else if("number"==typeof e.strides)this.strides=[e.strides];else{if(!Array.isArray(e.strides)||1!==e.strides.length||"number"!=typeof e.strides[0])throw new hy(`strides for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(e.strides)}`);this.strides=e.strides}Ry(this.strides,"strides"),this.padding=null==e.padding?"valid":e.padding,Hy(this.padding),this.inputSpec=[new Qb({ndim:3})]}computeOutputShape(e){const t=zv((e=qb(e))[1],this.poolSize[0],this.padding,this.strides[0]);return[e[0],t,e[2]]}call(e,t){return ui(()=>{this.invokeCallHook(e,t),e=ob(jb(e),2);const n=this.poolingFunction(jb(e),[this.poolSize[0],1],[this.strides[0],1],this.padding,"channelsLast");return Qd(n,[2])})}getConfig(){const e={poolSize:this.poolSize,padding:this.padding,strides:this.strides},t=super.getConfig();return Object.assign(e,t),e}}class Hk extends Gk{constructor(e){super(e)}poolingFunction(e,t,n,r,s){return Gy(s),Hy(r),Uk(e,t,n,r,s,"max")}}Hk.className="MaxPooling1D",Ho(Hk);class jk extends Gk{constructor(e){super(e)}poolingFunction(e,t,n,r,s){return Gy(s),Hy(r),Uk(e,t,n,r,s,"avg")}}jk.className="AveragePooling1D",Ho(jk);class qk extends sx{constructor(e){if(null==e.poolSize&&(e.poolSize=[2,2]),super(e),this.poolSize=Array.isArray(e.poolSize)?e.poolSize:[e.poolSize,e.poolSize],null==e.strides)this.strides=this.poolSize;else if(Array.isArray(e.strides)){if(2!==e.strides.length)throw new hy(`If the strides property of a 2D pooling layer is an Array, it is expected to have a length of 2, but received length ${e.strides.length}.`);this.strides=e.strides}else this.strides=[e.strides,e.strides];Ry(this.poolSize,"poolSize"),Ry(this.strides,"strides"),this.padding=null==e.padding?"valid":e.padding,this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,Gy(this.dataFormat),Hy(this.padding),this.inputSpec=[new Qb({ndim:4})]}computeOutputShape(e){e=qb(e);let t="channelsFirst"===this.dataFormat?e[2]:e[1],n="channelsFirst"===this.dataFormat?e[3]:e[2];return t=zv(t,this.poolSize[0],this.padding,this.strides[0]),n=zv(n,this.poolSize[1],this.padding,this.strides[1]),"channelsFirst"===this.dataFormat?[e[0],e[1],t,n]:[e[0],t,n,e[3]]}call(e,t){return ui(()=>(this.invokeCallHook(e,t),this.poolingFunction(jb(e),this.poolSize,this.strides,this.padding,this.dataFormat)))}getConfig(){const e={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}class Kk extends qk{constructor(e){super(e)}poolingFunction(e,t,n,r,s){return Gy(s),Hy(r),Uk(e,t,n,r,s,"max")}}Kk.className="MaxPooling2D",Ho(Kk);class Xk extends qk{constructor(e){super(e)}poolingFunction(e,t,n,r,s){return Gy(s),Hy(r),Uk(e,t,n,r,s,"avg")}}Xk.className="AveragePooling2D",Ho(Xk);class Yk extends sx{constructor(e){if(null==e.poolSize&&(e.poolSize=[2,2,2]),super(e),this.poolSize=Array.isArray(e.poolSize)?e.poolSize:[e.poolSize,e.poolSize,e.poolSize],null==e.strides)this.strides=this.poolSize;else if(Array.isArray(e.strides)){if(3!==e.strides.length)throw new hy(`If the strides property of a 3D pooling layer is an Array, it is expected to have a length of 3, but received length ${e.strides.length}.`);this.strides=e.strides}else this.strides=[e.strides,e.strides,e.strides];Ry(this.poolSize,"poolSize"),Ry(this.strides,"strides"),this.padding=null==e.padding?"valid":e.padding,this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,Gy(this.dataFormat),Hy(this.padding),this.inputSpec=[new Qb({ndim:5})]}computeOutputShape(e){e=qb(e);let t="channelsFirst"===this.dataFormat?e[2]:e[1],n="channelsFirst"===this.dataFormat?e[3]:e[2],r="channelsFirst"===this.dataFormat?e[4]:e[3];return t=zv(t,this.poolSize[0],this.padding,this.strides[0]),n=zv(n,this.poolSize[1],this.padding,this.strides[1]),r=zv(r,this.poolSize[2],this.padding,this.strides[2]),"channelsFirst"===this.dataFormat?[e[0],e[1],t,n,r]:[e[0],t,n,r,e[4]]}call(e,t){return ui(()=>(this.invokeCallHook(e,t),this.poolingFunction(jb(e),this.poolSize,this.strides,this.padding,this.dataFormat)))}getConfig(){const e={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}class Jk extends Yk{constructor(e){super(e)}poolingFunction(e,t,n,r,s){return Gy(s),Hy(r),Wk(e,t,n,r,s,"max")}}Jk.className="MaxPooling3D",Ho(Jk);class Zk extends Yk{constructor(e){super(e)}poolingFunction(e,t,n,r,s){return Gy(s),Hy(r),Wk(e,t,n,r,s,"avg")}}Zk.className="AveragePooling3D",Ho(Zk);class Qk extends sx{constructor(e){super(e),this.inputSpec=[new Qb({ndim:3})]}computeOutputShape(e){return[e[0],e[2]]}call(e,t){throw new dy}}class eI extends Qk{constructor(e){super(e||{})}call(e,t){return ui(()=>{const t=jb(e);return Gh(t,1)})}}eI.className="GlobalAveragePooling1D",Ho(eI);class tI extends Qk{constructor(e){super(e||{})}call(e,t){return ui(()=>{const t=jb(e);return ah(t,1)})}}tI.className="GlobalMaxPooling1D",Ho(tI);class nI extends sx{constructor(e){super(e),this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,Gy(this.dataFormat),this.inputSpec=[new Qb({ndim:4})]}computeOutputShape(e){return"channelsLast"===this.dataFormat?[e[0],e[3]]:[e[0],e[1]]}call(e,t){throw new dy}getConfig(){const e={dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}class rI extends nI{call(e,t){return ui(()=>{const t=jb(e);return"channelsLast"===this.dataFormat?Gh(t,[1,2]):Gh(t,[2,3])})}}rI.className="GlobalAveragePooling2D",Ho(rI);class sI extends nI{call(e,t){return ui(()=>{const t=jb(e);return"channelsLast"===this.dataFormat?ah(t,[1,2]):ah(t,[2,3])})}}sI.className="GlobalMaxPooling2D",Ho(sI);class aI extends sx{constructor(e){super(e),this.layer=e.layer}build(e){this.built=!0}get trainable(){return null!=this.layer&&this.layer.trainable}set trainable(e){null!=this.layer&&(this.layer.trainable=e)}get trainableWeights(){return this.layer.trainableWeights}get nonTrainableWeights(){return this.layer.nonTrainableWeights}get updates(){return this.layer._updates}get losses(){return this.layer.losses}getWeights(){return this.layer.getWeights()}setWeights(e){this.layer.setWeights(e)}getConfig(){const e={layer:{className:this.layer.getClassName(),config:this.layer.getConfig()}},t=super.getConfig();return Object.assign(e,t),e}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),null!=this.layer&&this.layer.setFastWeightInitDuringBuild(e)}static fromConfig(e,t,n={}){const r=tw(t.layer,n);delete t.layer;const s={layer:r};return Object.assign(s,t),new e(s)}}class iI extends aI{constructor(e){super(e),this.supportsMasking=!0}build(e){if((e=qb(e)).length<3)throw new hy(`TimeDistributed layer expects an input shape >= 3D, but received input shape ${JSON.stringify(e)}`);this.inputSpec=[{shape:e}];const t=[e[0]].concat(e.slice(2));this.layer.built||(this.layer.build(t),this.layer.built=!0),super.build(e)}computeOutputShape(e){const t=[(e=qb(e))[0]].concat(e.slice(2)),n=this.layer.computeOutputShape(t),r=e[1];return[n[0],r].concat(n.slice(1))}call(e,t){return ui(()=>nk((e,n)=>[jb(this.layer.call(e,t)),[]],e=jb(e),[],!1,null,null,!1,!0)[1])}}iI.className="TimeDistributed",Ho(iI);class oI extends aI{constructor(e){super(e);const t=e.layer.getConfig(),n={};n.className=e.layer.getClassName(),n.config=t,this.forwardLayer=tw(n),t.goBackwards=!0!==t.goBackwards;const r={};var s;if(r.className=e.layer.getClassName(),r.config=t,this.backwardLayer=tw(r),this.forwardLayer.name="forward_"+this.forwardLayer.name,this.backwardLayer.name="backward_"+this.backwardLayer.name,this.mergeMode=void 0===e.mergeMode?"concat":e.mergeMode,s=this.mergeMode,$y(Uy,"BidirectionalMergeMode",s),e.weights)throw new dy("weights support is not implemented for Bidirectional layer yet.");this._stateful=e.layer.stateful,this.returnSequences=e.layer.returnSequences,this.returnState=e.layer.returnState,this.supportsMasking=!0,this._trainable=!0,this.inputSpec=e.layer.inputSpec,this.numConstants=null}get trainable(){return this._trainable}set trainable(e){this._trainable=e,null!=this.forwardLayer&&(this.forwardLayer.trainable=e),null!=this.backwardLayer&&(this.backwardLayer.trainable=e)}getWeights(){return this.forwardLayer.getWeights().concat(this.backwardLayer.getWeights())}setWeights(e){const t=e.length,n=Math.floor(t/2);this.forwardLayer.setWeights(e.slice(0,n)),this.backwardLayer.setWeights(e.slice(n))}computeOutputShape(e){let t,n,r,s=this.forwardLayer.computeOutputShape(e);return Array.isArray(s)&&Array.isArray(s[0])||(s=[s]),this.returnState?(r=s.slice(1),t=s[0]):t=s[0],"concat"===this.mergeMode?(t[t.length-1]*=2,n=[t]):n=null==this.mergeMode?[t,t.slice()]:[t],this.returnState?null==this.mergeMode?n.concat(r).concat(r.slice()):[t].concat(r).concat(r.slice()):by(n)}apply(e,t){let n=null==t?null:t.initialState,r=null==t?null:t.constants;null==t&&(t={});const s=tk(e,n,r,this.numConstants);if(e=s.inputs,n=s.initialState,r=s.constants,Array.isArray(e)&&(n=e.slice(1),e=e[0]),(null==n||0===n.length)&&null==r)return super.apply(e,t);const a=[],i=[];if(null!=n){const e=n.length;if(e%2>0)throw new hy("When passing `initialState` to a Bidrectional RNN, the state should be an Array containing the states of the underlying RNNs.");t.initialState=n,a.push(...n);const r=n.map(e=>new Qb({shape:e.shape}));this.forwardLayer.stateSpec=r.slice(0,e/2),this.backwardLayer.stateSpec=r.slice(e/2),i.push(...r)}if(null!=r)throw new dy("Support for constants in Bidirectional layers is not implemented yet.");const o=a[0]instanceof ex;for(const e of a)if(e instanceof ex!==o)throw new hy("The initial state of a Bidirectional layer cannot be specified as a mix of symbolic and non-symbolic tensors");if(o){const n=[e].concat(a),r=this.inputSpec.concat(i),s=this.inputSpec;this.inputSpec=r;const o=super.apply(n,t);return this.inputSpec=s,o}return super.apply(e,t)}call(e,t){return ui(()=>{const n=t.initialState;let r,s,a,i;if(null==n)r=this.forwardLayer.call(e,t),s=this.backwardLayer.call(e,t);else{const a=n.slice(0,n.length/2),i=n.slice(n.length/2);r=this.forwardLayer.call(e,Object.assign(t,{initialState:a})),s=this.backwardLayer.call(e,Object.assign(t,{initialState:i}))}return this.returnState&&(Array.isArray(r)&&(a=r.slice(1).concat(s.slice(1))),r=r[0],s=s[0]),this.returnSequences&&(s=$d(s,1)),"concat"===this.mergeMode?i=hb([r,s]):"sum"===this.mergeMode?i=To(r,s):"ave"===this.mergeMode?i=$o(.5,To(r,s)):"mul"===this.mergeMode?i=$o(r,s):null==this.mergeMode&&(i=[r,s]),this.returnState?null==this.mergeMode?i.concat(a):[i].concat(a):i})}resetStates(e){this.forwardLayer.resetStates(),this.backwardLayer.resetStates()}build(e){Ky(this.forwardLayer.name,()=>{this.forwardLayer.build(e)}),Ky(this.backwardLayer.name,()=>{this.backwardLayer.build(e)}),this.built=!0}computeMask(e,t){let n;if(Array.isArray(t)&&(t=t[0]),n=this.returnSequences?null==this.mergeMode?[t,t]:t:null==this.mergeMode?[null,null]:null,this.returnState){const e=this.forwardLayer.states.map(e=>null);return Array.isArray(n)?n.concat(e).concat(e):[n].concat(e).concat(e)}return n}get trainableWeights(){return this.forwardLayer.trainableWeights.concat(this.backwardLayer.trainableWeights)}get nonTrainableWeights(){return this.forwardLayer.nonTrainableWeights.concat(this.backwardLayer.nonTrainableWeights)}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),null!=this.forwardLayer&&this.forwardLayer.setFastWeightInitDuringBuild(e),null!=this.backwardLayer&&this.backwardLayer.setFastWeightInitDuringBuild(e)}getConfig(){const e={mergeMode:this.mergeMode},t=super.getConfig();return Object.assign(e,t),e}static fromConfig(e,t){const n=tw(t.layer);if(delete t.layer,null!=t.numConstants)throw new dy("Deserialization of a Bidirectional layer with numConstants present is not supported yet.");const r=t;return r.layer=n,new e(r)}}oI.className="Bidirectional",Ho(oI);class uI extends sx{constructor(e){super(e),this.scale=e.scale,e.offset?this.offset=e.offset:this.offset=0}getConfig(){const e={scale:this.scale,offset:this.offset},t=super.getConfig();return Object.assign(e,t),e}call(e,t){return ui(()=>("float32"!==(e=jb(e)).dtype&&(e=ib(e,"float32")),To($o(e,this.scale),this.offset)))}}uI.className="Rescaling",Ho(uI);const{resizeBilinear:lI,cropAndResize:cI}=Df;class hI extends sx{constructor(e){super(e),this.height=e.height,this.width=e.width}centerCrop(e,t,n,r,s,a,i,o){return ui(()=>{let u,l=!1;const c=[t/a,n/i,(r+t)/a,(s+n)/i],h=[];3===e.rank?(l=!0,u=ep([e])):u=e;for(let e=0;e<u.shape[0];e++)h.push(c);const d=Ja(h,[h.length,4]),p=Nd(0,h.length,1,"int32"),f=cI(u,d,p,[r,s],"nearest");return ib(l?jb(fp(f)):f,o)})}upsize(e,t,n,r){return ui(()=>ib(lI(e,[t,n]),r))}call(e,t){return ui(()=>{const t=jb(e),n=t.dtype,r=t.shape,s=r[r.length-3],a=r[r.length-2];let i=0;s!==this.height&&(i=Math.floor((s-this.height)/2));let o=0;return a!==this.width&&(o=Math.floor((a-this.width)/2),0===o&&(o=1)),i>=0&&o>=0?this.centerCrop(t,i,o,this.height,this.width,s,a,n):this.upsize(e,this.height,this.width,n)})}getConfig(){const e={height:this.height,width:this.width},t=super.getConfig();return Object.assign(e,t),e}computeOutputShape(e){const t=(e=qb(e)).length-3,n=e.length-2;return e[t]=this.height,e[n]=this.width,e}}hI.className="CenterCrop",Ho(hI);class dI extends sx{constructor(e){super(e),this.numTokens=e.numTokens,e.outputMode?this.outputMode=e.outputMode:this.outputMode="multiHot"}getConfig(){const e={numTokens:this.numTokens,outputMode:this.outputMode},t=super.getConfig();return Object.assign(e,t),e}computeOutputShape(e){return null==(e=qb(e))?[this.numTokens]:"oneHot"===this.outputMode&&1!==e[e.length-1]?(e.push(this.numTokens),e):(e[e.length-1]=this.numTokens,e)}call(e,t){return ui(()=>{let n;if("int32"!==(e=jb(e)).dtype&&(e=ib(e,"int32")),void 0!==t.countWeights){if("count"!==this.outputMode)throw new hy(`countWeights is not used when outputMode !== count.\\n              Received countWeights=${t.countWeights}`);n=jb(t.countWeights)}const r=ah(e),s=ih(e),a=bh(this.numTokens,r).bufferSync().get(0),i=xh(s,0).bufferSync().get(0);if(!a||!i)throw new hy(`Input values must be between 0 < values <= numTokens with numTokens=${this.numTokens}`);return function(e,t,n,r){let s=jb(e);if("int32"!==s.dtype&&(s=ib(s,"int32")),"int"===t)return s;const a=s.shape;if(0===s.rank&&(s=dh(s,-1)),"oneHot"===t&&1!==s.shape[s.shape.length-1]&&(s=dh(s,-1)),s.rank>2)throw new hy(`When outputMode is not int, maximum output rank is 2 Received outputMode ${t} and input shape ${a} which would result in output rank ${s.rank}.`);const i=["multiHot","oneHot"].includes(t);let o;if(o=zc(s,void 0!==r&&"count"===t?r:[],n,i),"tfIdf"!==t)return o;if(r)return $o(o,r);throw new hy("When outputMode is \'tfIdf\', weights must be provided.")}(e,this.outputMode,this.numTokens,n)})}}dI.className="CategoryEncoding",Ho(dI);const pI=new Set(["bilinear","nearest"]);class fI extends sx{constructor(e){if(super(e),this.height=e.height,this.width=e.width,e.interpolation){if(!pI.has(e.interpolation))throw new hy(`Invalid interpolation parameter: ${e.interpolation} is not implemented`);this.interpolation=e.interpolation}else this.interpolation="bilinear";this.cropToAspectRatio=Boolean(e.cropToAspectRatio)}computeOutputShape(e){const t=(e=qb(e))[2];return[this.height,this.width,t]}getConfig(){const e={height:this.height,width:this.width,interpolation:this.interpolation,cropToAspectRatio:this.cropToAspectRatio},t=super.getConfig();return Object.assign(e,t),e}call(e,t){return ui(()=>{const t=[this.height,this.width];if("bilinear"===this.interpolation)return Df.resizeBilinear(e,t,!this.cropToAspectRatio);if("nearest"===this.interpolation)return Df.resizeNearestNeighbor(e,t,!this.cropToAspectRatio);throw new Error(`Interpolation is ${this.interpolation} but only ${[...pI]} are supported`)})}}fI.className="Resizing",Ho(fI);class mI{constructor(e){this.seed=e}next(){if(void 0!==this.seed)return this.seed++}}mI.className="RandomSeed";class gI extends sx{constructor(e){super(e),this.randomGenerator=new mI(e.seed)}getConfig(){const e={seed:this.randomGenerator.seed},t=super.getConfig();return Object.assign(e,t),e}}gI.className="BaseRandomLayer";const yI=new Set(["bilinear","nearest"]);class bI extends gI{constructor(e){super(e);const{factor:t,interpolation:n="bilinear"}=e;if(this.factor=t,Array.isArray(this.factor)&&2===this.factor.length)this.widthLower=this.factor[0],this.widthUpper=this.factor[1];else{if(Array.isArray(this.factor)||!(this.factor>0))throw new hy(`Invalid factor: ${this.factor}. Must be positive number or tuple of 2 numbers`);this.widthLower=-this.factor,this.widthUpper=this.factor}if(this.widthLower<-1||this.widthUpper<-1)throw new hy(`factor must have values larger than -1. Got: ${this.factor}`);if(this.widthUpper<this.widthLower)throw new hy(`factor cannot have upper bound less than lower bound.\\n        Got upper bound: ${this.widthUpper}.\\n        Got lower bound: ${this.widthLower}\\n      `);if(n){if(!yI.has(n))throw new hy(`Invalid interpolation parameter: ${n} is not implemented`);this.interpolation=n}}getConfig(){const e={factor:this.factor,interpolation:this.interpolation},t=super.getConfig();return Object.assign(e,t),e}computeOutputShape(e){const t=(e=qb(e))[2];return[this.imgHeight,-1,t]}call(e,t){return ui(()=>{const t=jb(e);this.imgHeight=t.shape[t.shape.length-3];const n=t.shape[t.shape.length-2];this.widthFactor=Id([1],1+this.widthLower,1+this.widthUpper,"float32",this.randomGenerator.next());let r=this.widthFactor.dataSync()[0]*n;r=Math.round(r);const s=[this.imgHeight,r];switch(this.interpolation){case"bilinear":return Df.resizeBilinear(e,s);case"nearest":return Df.resizeNearestNeighbor(e,s);default:throw new Error(`Interpolation is ${this.interpolation}\\n          but only ${[...yI]} are supported`)}})}}function xI(e){return new ix(e)}function wI(e){return new Fv(e)}function vI(e){return new Rv(e)}function kI(e){return new _v(e)}function II(e){return new Mv(e)}function SI(e){return new Ov(e)}function NI(e){return new Dv(e)}function TI(e){return new Jv(e)}function EI(e){return new Hv(e)}function CI(e){return new qv(e)}function $I(e){return new jv(e)}function AI(e){return new Kv(e)}function RI(e){return new Yv(e)}function _I(e){return new Zv(e)}function MI(e){return new Qv(e)}function FI(e){return new ek(e)}function DI(e){return new wk(e)}function OI(e){return new bk(e)}function LI(e){return new gk(e)}function zI(e){return new yk(e)}function PI(e){return new xk(e)}function BI(e){return new vk(e)}function VI(e){return new kk(e)}function UI(e){return new Ik(e)}function WI(e){return new Nk(e)}function GI(e){return new Ek(e)}function HI(e){return new $k(e)}function jI(e){return new _k(e)}function qI(e){return new Ak(e)}function KI(e){return new Rk(e)}function XI(e){return new Ck(e)}function YI(e){return new Fk(e)}function JI(e){return new Pk(e)}function ZI(e){return new Bk(e)}function QI(e){return new Vk(e)}function eS(e){return new jk(e)}function tS(e){return eS(e)}function nS(e){return eS(e)}function rS(e){return new Xk(e)}function sS(e){return rS(e)}function aS(e){return rS(e)}function iS(e){return new Zk(e)}function oS(e){return iS(e)}function uS(e){return iS(e)}function lS(e){return new eI(e)}function cS(e){return new rI(e)}function hS(e){return new tI(e)}function dS(e){return new sI(e)}function pS(e){return new Hk(e)}function fS(e){return new Kk(e)}function mS(e){return new Jk(e)}function gS(e){return new uk(e)}function yS(e){return new ok(e)}function bS(e){return new ck(e)}function xS(e){return new lk(e)}function wS(e){return new ik(e)}function vS(e){return new ak(e)}function kS(e){return new mk(e)}function IS(e){return new fk(e)}function SS(e){return new rk(e)}function NS(e){return new hk(e)}function TS(e){return new oI(e)}function ES(e){return new iI(e)}bI.className="RandomWidth",Ho(bI);const CS=hS,$S=dS,AS=pS,RS=fS;function _S(e){return new Dk(e)}function MS(e){return new Ok(e)}function FS(e){return new Lk(e)}function DS(e){return new Sk(e)}function OS(e){return new uI(e)}function LS(e){return new hI(e)}function zS(e){return new fI(e)}function PS(e){return new dI(e)}function BS(e){return new bI(e)}function VS(e,t){return dw(e,t)}function US(e,t){return gw(e,t)}function WS(e,t){return yw(e,t)}function GS(e,t){return pw(e,t)}function HS(e,t){return bw(e,t)}function jS(e,t){return mw(e,t)}function qS(e,t){return function(e,t){return ui(()=>{const n=fw(e,t),r=function(e,t){return ui(()=>Io(oh(Fh(Wc(e,1),Wc(t,0))),"float32"))}(e,t),s=To(n,r);return Io(Gc(bh(s,0),Co(n,s),0),"float32")})}(e,t)}function KS(e,t){return lw(e,t)}function XS(e,t){return sw(e,t)}function YS(e,t){return aw(e,t)}function JS(e,t){return aw(e,t)}function ZS(e,t){return aw(e,t)}function QS(e,t){return rw(e,t)}function eN(e,t){return rw(e,t)}function tN(e,t){return rw(e,t)}function nN(e,t){return function(e,t){return ui(()=>{const n=e.sub(t).square().sum(),r=e.sub(e.mean()).square().sum();return Bo(1).sub(n.div(r))})}(e,t)}function rN(e){return new Tv(e)}function sN(e){return Sv(t=e),new Tv({l1:null!=t?t.l1:null,l2:0});var t}function aN(e){return Sv(t=e),new Tv({l2:null!=t?t.l2:null,l1:0});var t}class iN extends qx{constructor(){super(...arguments),this.model=null}setModel(e){if(!(e instanceof Xw))throw new Error("model must be a LayersModel, not some other Container");this.model=e}}function oN(e,t){return e<t}function uN(e,t){return e>t}class lN extends iN{constructor(e){if(super(),null==e&&(e={}),e.restoreBestWeights)throw new dy("restoreBestWeights = True is not implemented in EarlyStopping yet.");this.monitor=e.monitor||"val_loss",this.minDelta=Math.abs(e.minDelta||0),this.patience=e.patience||0,this.verbose=e.verbose||0,this.mode=e.mode||"auto",this.baseline=e.baseline,-1===["auto","min","max"].indexOf(this.mode)&&(console.warn(`EarlyStopping mode \'${this.mode}\' is invalid. Falling back to mode \'auto\'.`),this.mode="auto"),"min"===this.mode?this.monitorFunc=oN:"max"===this.mode||-1!==this.monitor.indexOf("acc")?this.monitorFunc=uN:this.monitorFunc=oN,this.monitorFunc===oN&&(this.minDelta*=-1)}async onTrainBegin(e){this.wait=0,this.stoppedEpoch=0,null!=this.baseline?this.best=this.baseline:this.best=this.monitorFunc===oN?1/0:-1/0}async onEpochEnd(e,t){await Gx(t);const n=this.getMonitorValue(t);null!=n&&(this.monitorFunc(n-this.minDelta,this.best)?(this.best=n,this.wait=0):(this.wait++,this.wait>=this.patience&&(this.stoppedEpoch=e,this.model.stopTraining=!0)))}async onTrainEnd(e){this.stoppedEpoch>0&&this.verbose&&console.log(`Epoch ${this.stoppedEpoch}: early stopping.`)}getMonitorValue(e){null==e&&(e={});const t=e[this.monitor];return null==t&&console.warn(`Metric for EarlyStopping ${this.monitor} is not available. Available metrics are: ${Object.keys(e)}`),t}}const cN={earlyStopping:function(e){return new lN(e)}};var hN,dN;Xe().registerFlag("KEEP_INTERMEDIATE_TENSORS",()=>!1,e=>{e&&console.warn("Keep intermediate tensors is ON. This will print the values of all intermediate tensors during model inference. Not all models support this mode. For details, check e2e/benchmarks/ model_config.js. This significantly impacts performance.")}),function(e){e[e.DT_INVALID=0]="DT_INVALID",e[e.DT_FLOAT=1]="DT_FLOAT",e[e.DT_DOUBLE=2]="DT_DOUBLE",e[e.DT_INT32=3]="DT_INT32",e[e.DT_UINT8=4]="DT_UINT8",e[e.DT_INT16=5]="DT_INT16",e[e.DT_INT8=6]="DT_INT8",e[e.DT_STRING=7]="DT_STRING",e[e.DT_COMPLEX64=8]="DT_COMPLEX64",e[e.DT_INT64=9]="DT_INT64",e[e.DT_BOOL=10]="DT_BOOL",e[e.DT_QINT8=11]="DT_QINT8",e[e.DT_QUINT8=12]="DT_QUINT8",e[e.DT_QINT32=13]="DT_QINT32",e[e.DT_BFLOAT16=14]="DT_BFLOAT16",e[e.DT_QINT16=15]="DT_QINT16",e[e.DT_QUINT16=16]="DT_QUINT16",e[e.DT_UINT16=17]="DT_UINT16",e[e.DT_COMPLEX128=18]="DT_COMPLEX128",e[e.DT_HALF=19]="DT_HALF",e[e.DT_RESOURCE=20]="DT_RESOURCE",e[e.DT_VARIANT=21]="DT_VARIANT",e[e.DT_UINT32=22]="DT_UINT32",e[e.DT_UINT64=23]="DT_UINT64",e[e.DT_FLOAT_REF=101]="DT_FLOAT_REF",e[e.DT_DOUBLE_REF=102]="DT_DOUBLE_REF",e[e.DT_INT32_REF=103]="DT_INT32_REF",e[e.DT_UINT8_REF=104]="DT_UINT8_REF",e[e.DT_INT16_REF=105]="DT_INT16_REF",e[e.DT_INT8_REF=106]="DT_INT8_REF",e[e.DT_STRING_REF=107]="DT_STRING_REF",e[e.DT_COMPLEX64_REF=108]="DT_COMPLEX64_REF",e[e.DT_INT64_REF=109]="DT_INT64_REF",e[e.DT_BOOL_REF=110]="DT_BOOL_REF",e[e.DT_QINT8_REF=111]="DT_QINT8_REF",e[e.DT_QUINT8_REF=112]="DT_QUINT8_REF",e[e.DT_QINT32_REF=113]="DT_QINT32_REF",e[e.DT_BFLOAT16_REF=114]="DT_BFLOAT16_REF",e[e.DT_QINT16_REF=115]="DT_QINT16_REF",e[e.DT_QUINT16_REF=116]="DT_QUINT16_REF",e[e.DT_UINT16_REF=117]="DT_UINT16_REF",e[e.DT_COMPLEX128_REF=118]="DT_COMPLEX128_REF",e[e.DT_HALF_REF=119]="DT_HALF_REF",e[e.DT_RESOURCE_REF=120]="DT_RESOURCE_REF",e[e.DT_VARIANT_REF=121]="DT_VARIANT_REF",e[e.DT_UINT32_REF=122]="DT_UINT32_REF",e[e.DT_UINT64_REF=123]="DT_UINT64_REF"}(hN||(hN={})),function(e){let t;!function(e){e[e.LEGACY=0]="LEGACY",e[e.V1=1]="V1",e[e.V2=2]="V2"}(t=e.CheckpointFormatVersion||(e.CheckpointFormatVersion={}))}(dN||(dN={}));const pN={};function fN(e,t){const n={tfOpName:e,category:"custom",inputs:[],attrs:[],customExecutor:t};pN[e]=n}function mN(e){return pN[e]}function gN(e){delete pN[e]}function yN(e,t,n,r,s){const a=t.inputParams[e];if(a&&void 0!==a.inputIndexStart){const e=a.inputIndexStart,i=0===a.inputIndexEnd?void 0:void 0===a.inputIndexEnd?e+1:a.inputIndexEnd,o=e<0?t.inputNames.length+e:e;if("tensor"===a.type)return bN(t.inputNames[o],n,r,s);if("tensors"===a.type){const a=t.inputs.slice(e,i);return t.inputNames.slice(e,i).filter((e,t)=>{var n;return"NoOp"!==(null===(n=a[t])||void 0===n?void 0:n.op)}).map(e=>bN(e,n,r,s))}const u=bN(t.inputNames[o],n,r,s),l=u.dataSync();return"number"===a.type?l[0]:Le(u.shape,l)}const i=t.attrParams[e];return i&&i.value}function bN(e,t,n,r){const[s,a]=kN(e,n);if(null!=r){const e=r.getHashTableHandleByName(s);if(null!=e)return e}const i=n.currentContextIds.find(e=>!!t[vN(s,e)]);return void 0!==i?t[vN(s,i)][a]:void 0}function xN(e,t,n){return t[vN(e,n.currentContextId)]}function wN(e,t){const[n,r,s]=kN(e,t);return[vN(n,t&&t.currentContextId),r,s]}function vN(e,t){return t?`${e}-${t}`:e}function kN(e,t){if(""===e)return["",0,void 0];const n=null!=t&&null!=t.parseNodeNameCache;if(n){const n=t.parseNodeNameCache.get(e);if(null!=n)return n}const r=e.split(":");let s;if(1===r.length)s=[e,0,void 0];else{const e=r[0],t=3===r.length?r[1]:void 0;s=[e,Number(r[r.length-1]),t]}return n&&t.parseNodeNameCache.set(e,s),s}function IN(e,t,n){let r=yN("pad",e,t,n);if("explicit"===r){r=yN("explicitPaddings",e,t,n);const s=[[0,0],[0,0],[0,0],[0,0]];for(let e=0;e<4;e++)s[e][0]=r[2*e],s[e][1]=r[2*e+1];return s}return r}function SN(e){return e.kept?e:So(e)}const NN=[{tfOpName:"Add",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddV2",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddN",category:"arithmetic",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"BiasAdd",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"Sub",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"RealDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Div",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"DivNoNan",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mul",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Maximum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Minimum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Pow",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SquaredDifference",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorMod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],TN=[{tfOpName:"Abs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan2",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Ceil",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ClipByValue",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"clipValueMin",type:"number"},{start:2,name:"clipValueMax",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Complex",category:"basic_math",inputs:[{start:0,name:"real",type:"tensor"},{start:1,name:"imag",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ComplexAbs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Elu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Exp",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Floor",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Imag",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Neg",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Real",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Prelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"alpha",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu6",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Selu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sigmoid",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Rsqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Square",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sign",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Round",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Expm1",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log1p",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Reciprocal",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Softplus",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Erf",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LeakyRelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"alpha",name:"alpha",type:"number",defaultValue:.2},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"IsNan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"IsFinite",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"IsInf",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],EN=[{tfOpName:"EmptyTensorList",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"maxNumElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"LoopCond",category:"control",inputs:[{start:0,name:"pred",type:"tensor"}]},{tfOpName:"Switch",category:"control",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"pred",type:"tensor"}]},{tfOpName:"Merge",category:"control",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"Enter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"frame_name",name:"frameName",type:"string"},{tfName:"is_constant",name:"isConstant",type:"bool"}]},{tfOpName:"Exit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NextIteration",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayV3",category:"control",inputs:[{start:0,name:"size",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"dynamic_size",name:"dynamicSize",type:"bool"},{tfName:"clear_after_read",name:"clearAfterRead",type:"bool"},{tfName:"identical_element_shapes",name:"identicalElementShapes",type:"bool"},{tfName:"tensor_array_name",name:"name",type:"string"}]},{tfOpName:"TensorArrayWriteV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayReadV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayGatherV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"}]},{tfOpName:"TensorArrayScatterV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArrayConcatV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape_except0",name:"elementShapeExcept0",type:"shape",notSupported:!0}]},{tfOpName:"TensorArraySplitV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"tensor",type:"tensor"},{start:2,name:"lengths",type:"number[]"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArraySizeV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}]},{tfOpName:"TensorArrayCloseV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"}]},{tfOpName:"StatelessIf",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"If",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"StatelessWhile",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"While",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"TensorListScatter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListScatterV2",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"},{start:3,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGather",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListSetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListReserve",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListFromTensor",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListStack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"},{tfName:"num_elements",name:"numElements",type:"dtype"}]},{tfOpName:"TensorListSplit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"},{start:2,name:"lengths",type:"number[]"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListConcat",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}],attrs:[{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListConcatV2",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}],attrs:[{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPopBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPushBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListLength",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}]},{tfOpName:"TensorListResize",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"size",type:"number"}]}],CN=[{tfOpName:"AvgPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[],notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPoolWithArgmax",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"include_batch_in_index",name:"includeBatchInIndex",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AvgPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Conv1D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"stride",name:"stride",type:"number"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NWC"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"dilation",name:"dilation",type:"number",defaultValue:1}]},{tfOpName:"Conv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"useCudnnOnGpu",name:"useCudnnOnGpu",type:"bool"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"_FusedConv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"use_cudnn_on_gpu",name:"useCudnnOnGpu",type:"bool",defaultValue:!0},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"leakyrelu_alpha",name:"leakyreluAlpha",type:"number",defaultValue:.2}]},{tfOpName:"Conv2DBackpropInput",category:"convolution",inputs:[{start:2,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:0,name:"outputShape",type:"number[]"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]",notSupported:!0}]},{tfOpName:"DepthwiseConv2d",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"DepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"FusedDepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]}]},{tfOpName:"Conv3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"Dilation2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"rates",name:"dilations",type:"number[]"},{tfName:"padding",name:"pad",type:"string"}]}],$N=[{tfOpName:"Fill",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"},{start:1,name:"value",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"LinSpace",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"num",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"OneHot",category:"creation",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"depth",type:"number"},{start:2,name:"onValue",type:"number",defaultValue:1},{start:3,name:"offValue",type:"number",defaultValue:0}],attrs:[{tfName:"axis",name:"axis",type:"number",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"Ones",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"OnesLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"RandomStandardNormal",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"RandomUniform",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"minval",name:"minval",type:"number",defaultValue:0},{tfName:"maxval",name:"maxval",type:"number",defaultValue:1},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"RandomUniformInt",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"minval",name:"minval",type:"number"},{tfName:"maxval",name:"maxval",type:"number"},{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0}]},{tfOpName:"Range",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"step",type:"number",defaultValue:0}],attrs:[{tfName:"Tidx",name:"dtype",type:"dtype"}]},{tfOpName:"TruncatedNormal",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"means",name:"mean",type:"number",defaultValue:0},{tfName:"stddev",name:"stdDev",type:"number",defaultValue:1},{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Zeros",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"ZerosLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"Multinomial",category:"creation",inputs:[{start:0,name:"logits",type:"tensor"},{start:1,name:"numSamples",type:"number"}],attrs:[{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number"},{tfName:"T",name:"dtype",type:"dtype"},{tfName:"output_dtype",name:"output_dtype",type:"dtype"}]}],AN=[{tfOpName:"NonMaxSuppressionV2",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV3",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV4",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"T_threshold",name:"threshold",type:"dtype",notSupported:!0},{tfName:"pad_to_max_output_size",name:"padToMaxOutputSize",type:"bool"}]},{tfOpName:"NonMaxSuppressionV5",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"},{start:5,name:"softNmsSigma",type:"number"}]},{tfOpName:"Where",category:"dynamic",inputs:[{start:0,name:"condition",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ListDiff",category:"dynamic",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],RN=[{tfOpName:"LowerBound",category:"evaluation",inputs:[{start:0,name:"sortedSequence",type:"tensor"},{start:1,name:"values",type:"tensor"}]},{tfOpName:"TopKV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"k",type:"number"}],attrs:[{tfName:"sorted",name:"sorted",type:"bool"}]},{tfOpName:"UpperBound",category:"evaluation",inputs:[{start:0,name:"sortedSequence",type:"tensor"},{start:1,name:"values",type:"tensor"}]},{tfOpName:"Unique",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"UniqueV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]}],_N=[{tfOpName:"PlaceholderWithDefault",category:"graph",inputs:[{start:0,name:"default",type:"tensor"}],attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Placeholder",category:"graph",attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Const",category:"graph"},{tfOpName:"Identity",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IdentityN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Snapshot",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Rank",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Size",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Shape",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"ShapeN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Print",category:"graph",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"data",type:"tensors"}],attrs:[{tfName:"message",name:"message",type:"string"},{tfName:"first_n",name:"firstN",type:"number",notSupported:!0},{tfName:"summarize",name:"summarize",type:"number",defaultValue:3}]},{tfOpName:"NoOp",category:"graph",inputs:[]},{tfOpName:"StopGradient",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"FakeQuantWithMinMaxVars",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"min",name:"min",type:"number"},{tfName:"max",name:"max",type:"number"}]}],MN=[{tfOpName:"HashTable",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"HashTableV2",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"LookupTableImport",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableImportV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFind",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFindV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableSize",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]},{tfOpName:"LookupTableSizeV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]},{tfOpName:"InitializeTable",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}]},{tfOpName:"InitializeTableV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}]}],FN=[{tfOpName:"ResizeBilinear",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ResizeNearestNeighbor",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"CropAndResize",category:"image",inputs:[{start:0,name:"image",type:"tensor"},{start:1,name:"boxes",type:"tensor"},{start:2,name:"boxInd",type:"tensor"},{start:3,name:"cropSize",type:"number[]"}],attrs:[{tfName:"method",name:"method",type:"string"},{tfName:"extrapolation_value",name:"extrapolationValue",type:"number"}]},{tfOpName:"ImageProjectiveTransformV3",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"transforms",type:"tensor"},{start:2,name:"outputShape",type:"number[]"},{start:3,name:"fillValue",type:"number"}],attrs:[{tfName:"interpolation",name:"interpolation",type:"string"},{tfName:"fill_mode",name:"fillMode",type:"string"}]}],DN=[{tfOpName:"Equal",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NotEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Greater",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"GreaterEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Less",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LessEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalAnd",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalNot",category:"logical",inputs:[{start:0,name:"a",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalOr",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Select",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SelectV2",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BitwiseAnd",category:"logical",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}]}],ON=[{tfOpName:"_FusedMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"leakyrelu_alpha",name:"leakyreluAlpha",type:"number",defaultValue:.2},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMulV2",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Transpose",category:"matrices",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"perm",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Einsum",category:"matrices",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"equation",name:"equation",type:"string"},{tfName:"N",name:"n",type:"number",defaultValue:2},{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"MatrixBandPart",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"numLower",type:"tensor"},{start:1,name:"numUpper",type:"tensor"}]}],LN=[{tfOpName:"EuclideanNorm",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool",defaultValue:!1}]},{tfOpName:"FusedBatchNorm",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV2",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV3",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"LRN",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"depth_radius",name:"radius",type:"number",defaultValue:5},{tfName:"bias",name:"bias",type:"number",defaultValue:1},{tfName:"alpha",name:"alpha",type:"number",defaultValue:1},{tfName:"beta",name:"beta",type:"number",defaultValue:.5}]},{tfOpName:"Softmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"LogSoftmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]}],zN=[{tfOpName:"Bincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}]},{tfOpName:"DenseBincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}],attrs:[{tfName:"binary_output",name:"binaryOutput",type:"bool"}]},{tfOpName:"Max",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Mean",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Min",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Sum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"All",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Any",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"ArgMax",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"ArgMin",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"Prod",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cumprod",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}],attrs:[{tfName:"exclusive",name:"exclusive",type:"bool"},{tfName:"reverse",name:"reverse",type:"bool"}]},{tfOpName:"Cumsum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}],attrs:[{tfName:"exclusive",name:"exclusive",type:"bool"},{tfName:"reverse",name:"reverse",type:"bool"}]}],PN=[{tfOpName:"ConcatV2",category:"slice_join",inputs:[{start:0,end:-1,name:"tensors",type:"tensors"},{start:-1,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"Concat",category:"slice_join",inputs:[{start:1,end:0,name:"tensors",type:"tensors"},{start:0,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"GatherV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"axis",type:"number",defaultValue:0}],attrs:[{tfName:"batch_dims",name:"batchDims",type:"number",defaultValue:0}]},{tfOpName:"Gather",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",notSupported:!0}]},{tfOpName:"Reverse",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"dims",type:"bool[]"}]},{tfOpName:"ReverseV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}]},{tfOpName:"Slice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"size",type:"number[]"}]},{tfOpName:"StridedSlice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"end",type:"number[]"},{start:3,name:"strides",type:"number[]"}],attrs:[{tfName:"begin_mask",name:"beginMask",type:"number",defaultValue:0},{tfName:"end_mask",name:"endMask",type:"number",defaultValue:0},{tfName:"new_axis_mask",name:"newAxisMask",type:"number",defaultValue:0},{tfName:"ellipsis_mask",name:"ellipsisMask",type:"number",defaultValue:0},{tfName:"shrink_axis_mask",name:"shrinkAxisMask",type:"number",defaultValue:0}]},{tfOpName:"Pack",category:"slice_join",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0}]},{tfOpName:"Unpack",category:"slice_join",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0},{tfName:"num",name:"num",type:"number",defaultValue:0,notSupported:!0}]},{tfOpName:"Tile",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"reps",type:"number[]"}]},{tfOpName:"Split",category:"slice_join",inputs:[{start:0,name:"axis",type:"number",defaultValue:0},{start:1,name:"x",type:"tensor"}],attrs:[{tfName:"num_split",name:"numOrSizeSplits",type:"number",defaultValue:1}]},{tfOpName:"SplitV",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"numOrSizeSplits",type:"number[]"},{start:2,name:"axis",type:"number",defaultValue:0}]},{tfOpName:"ScatterNd",category:"slice_join",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"shape",type:"number[]"}]},{tfOpName:"GatherNd",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}]},{tfOpName:"SparseToDense",category:"slice_join",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!1,notSupported:!0}]},{tfOpName:"TensorScatterUpdate",category:"slice_join",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"values",type:"tensor"}]}],BN=[{tfOpName:"SparseFillEmptyRows",category:"sparse",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"denseShape",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}]},{tfOpName:"SparseReshape",category:"sparse",inputs:[{start:0,name:"inputIndices",type:"tensor"},{start:1,name:"inputShape",type:"tensor"},{start:2,name:"newShape",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SparseSegmentMean",category:"sparse",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"segmentIds",type:"tensor"}]},{tfOpName:"SparseSegmentSum",category:"sparse",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"segmentIds",type:"tensor"}]}],VN=[{tfOpName:"FFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"RFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]},{tfOpName:"IRFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]}],UN=[{tfOpName:"StaticRegexReplace",category:"string",inputs:[{start:0,name:"input",type:"tensor"}],attrs:[{tfName:"pattern",name:"pattern",type:"string"},{tfName:"rewrite",name:"rewrite",type:"string"},{tfName:"replace_global",name:"replaceGlobal",type:"bool"}]},{tfOpName:"StringNGrams",category:"string",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"dataSplits",type:"tensor"}],attrs:[{tfName:"separator",name:"separator",type:"string"},{tfName:"ngram_widths",name:"nGramWidths",type:"number[]"},{tfName:"left_pad",name:"leftPad",type:"string"},{tfName:"right_pad",name:"rightPad",type:"string"},{tfName:"pad_width",name:"padWidth",type:"number"},{tfName:"preserve_short_sequences",name:"preserveShortSequences",type:"bool"}],outputs:["ngrams","ngrams_splits"]},{tfOpName:"StringSplit",category:"string",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"delimiter",type:"tensor"}],attrs:[{tfName:"skip_empty",name:"skipEmpty",type:"bool"}],outputs:["indices","values","shape"]},{tfOpName:"StringToHashBucketFast",category:"string",inputs:[{start:0,name:"input",type:"tensor"}],attrs:[{tfName:"num_buckets",name:"numBuckets",type:"number"}]}],WN=[{tfOpName:"Cast",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"SrcT",name:"sdtype",type:"dtype",notSupported:!0},{tfName:"DstT",name:"dtype",type:"dtype"}]},{tfOpName:"ExpandDims",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"MirrorPad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"mode",name:"mode",type:"string"}]},{tfOpName:"Pad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"constant_value",name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"PadV2",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"},{start:2,name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"Reshape",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}]},{tfOpName:"EnsureShape",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}]},{tfOpName:"Squeeze",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"axis",tfDeprecatedName:"squeeze_dims",name:"axis",type:"number[]"}]},{tfOpName:"SpaceToBatchND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"paddings",type:"number[]"}]},{tfOpName:"BatchToSpaceND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"crops",type:"number[]"}]},{tfOpName:"DepthToSpace",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"block_size",name:"blockSize",type:"number"},{tfName:"data_format",name:"dataFormat",type:"string"}]},{tfOpName:"BroadcastTo",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}],attrs:[]},{tfOpName:"BroadcastArgs",category:"transformation",inputs:[{start:0,name:"s0",type:"tensor"},{start:1,name:"s1",type:"tensor"}],attrs:[]}];class GN{static get Instance(){return this._instance||(this._instance=new this)}constructor(){const e=[].concat(...[N,T,E,C,$,A,R,_,M,F,D,O,L,z,P,B,V,U,W].map(e=>e.json));this.opMappers=e.reduce((e,t)=>(e[t.tfOpName]=t,e),{})}transformGraph(e,t={}){const n=e.node,r=[],s=[],a=[],i=n.reduce((e,t)=>(e[t.name]=this.mapNode(t),t.op.startsWith("Placeholder")?r.push(e[t.name]):"Const"===t.op?s.push(e[t.name]):null!=t.input&&0!==t.input.length||a.push(e[t.name]),e),{});let o=[];const u=[];let l={},c={};null!=t&&(l=this.mapSignatureEntries(t.inputs),c=this.mapSignatureEntries(t.outputs));const h=Object.keys(i);h.forEach(e=>{const t=i[e];t.inputNames.forEach((e,n)=>{const[r,,s]=wN(e),a=i[r];if(null!=a.outputs){const e=a.outputs.indexOf(s);if(-1!==e){const s=`${r}:${e}`;t.inputNames[n]=s}}t.inputs.push(a),a.children.push(t)})}),0===Object.keys(c).length?h.forEach(e=>{const t=i[e];0===t.children.length&&u.push(t)}):Object.keys(c).forEach(e=>{const[t]=wN(e),n=i[t];null!=n&&(n.signatureKey=c[e],u.push(n))}),Object.keys(l).length>0?Object.keys(l).forEach(e=>{const[t]=wN(e),n=i[t];n&&(n.signatureKey=l[e],o.push(n))}):o=r;let d={};null!=e.library&&null!=e.library.function&&(d=e.library.function.reduce((e,t)=>(e[t.signature.name]=this.mapFunction(t),e),{}));const p={nodes:i,inputs:o,outputs:u,weights:s,placeholders:r,signature:t,functions:d};return a.length>0&&(p.initNodes=a),p}mapSignatureEntries(e){return Object.keys(e||{}).reduce((t,n)=>(t[e[n].name]=n,t),{})}mapNode(e){const t=mN(e.op)||this.opMappers[e.op]||{};null==e.attr&&(e.attr={});const n={name:e.name,op:e.op,category:t.category,inputNames:(e.input||[]).map(e=>e.startsWith("^")?e.slice(1):e),inputs:[],children:[],inputParams:{},attrParams:{},rawAttrs:e.attr,outputs:t.outputs};return null!=t.inputs&&(n.inputParams=t.inputs.reduce((e,t)=>(e[t.name]={type:t.type,inputIndexStart:t.start,inputIndexEnd:t.end},e),{})),null!=t.attrs&&(n.attrParams=t.attrs.reduce((t,n)=>{const r=n.type;let s;switch(n.type){case"string":s=jN(e.attr,n.tfName,n.defaultValue),void 0===s&&n.tfDeprecatedName&&(s=jN(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"string[]":s=nT(e.attr,n.tfName,n.defaultValue),void 0===s&&n.tfDeprecatedName&&(s=nT(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"number":s=KN(e.attr,n.tfName,n.defaultValue||0),void 0===s&&n.tfDeprecatedName&&(s=KN(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"number[]":s=tT(e.attr,n.tfName,n.defaultValue),void 0===s&&n.tfDeprecatedName&&(s=tT(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"bool":s=qN(e.attr,n.tfName,n.defaultValue),void 0===s&&n.tfDeprecatedName&&(s=qN(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"bool[]":s=sT(e.attr,n.tfName,n.defaultValue),void 0===s&&n.tfDeprecatedName&&(s=sT(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"shape":s=eT(e.attr,n.tfName,n.defaultValue),void 0===s&&n.tfDeprecatedName&&(s=eT(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"shape[]":s=rT(e.attr,n.tfName,n.defaultValue),void 0===s&&n.tfDeprecatedName&&(s=rT(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"dtype":s=JN(e.attr,n.tfName,n.defaultValue),void 0===s&&n.tfDeprecatedName&&(s=JN(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"dtype[]":s=ZN(e.attr,n.tfName,n.defaultValue),void 0===s&&n.tfDeprecatedName&&(s=ZN(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"func":s=YN(e.attr,n.tfName,n.defaultValue),void 0===s&&n.tfDeprecatedName&&(s=YN(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"tensor":case"tensors":break;default:throw new Error(`Unsupported param type: ${n.type} for op: ${e.op}`)}return t[n.name]={value:s,type:r},t},{})),n}mapFunction(e){const t=e.nodeDef,n=[];let r={};null!=t&&(r=t.reduce((e,t)=>(e[t.name]=this.mapNode(t),"Const"===t.op&&n.push(e[t.name]),e),{}));const s=[],a=[];e.signature.inputArg.forEach(e=>{const[t]=wN(e.name),n={name:t,op:"Placeholder",inputs:[],inputNames:[],category:"graph",inputParams:{},attrParams:{dtype:{value:XN(e.type),type:"dtype"}},children:[]};n.signatureKey=e.name,s.push(n),r[t]=n}),Object.keys(r).forEach(e=>{const t=r[e];t.inputNames.forEach((e,n)=>{const[s,,a]=wN(e),i=r[s];if(null!=i.outputs){const e=i.outputs.indexOf(a);if(-1!==e){const r=`${s}:${e}`;t.inputNames[n]=r}}t.inputs.push(i),i.children.push(t)})});const i=e.ret;e.signature.outputArg.forEach(e=>{const[t,n]=wN(i[e.name]),s=r[t];null!=s&&(s.defaultOutput=n,a.push(s))});const o=this.mapArgsToSignature(e);return{nodes:r,inputs:s,outputs:a,weights:n,placeholders:[],signature:o}}mapArgsToSignature(e){return{methodName:e.signature.name,inputs:e.signature.inputArg.reduce((e,t)=>(e[t.name]=this.mapArgToTensorInfo(t),e),{}),outputs:e.signature.outputArg.reduce((t,n)=>(t[n.name]=this.mapArgToTensorInfo(n,e.ret),t),{})}}mapArgToTensorInfo(e,t){let n=e.name;return null!=t&&(n=t[n]),{name:n,dtype:e.type}}}function HN(e,t){const n=Array.isArray(e)?String.fromCharCode.apply(null,e):function(e){const t=Xe().global;if(void 0!==t.atob)return t.atob(e);if("undefined"!=typeof Buffer)return new Buffer(e,"base64").toString();throw new Error("Unable to decode base64 in this environment. Missing built-in atob() or Buffer()")}(e);return t?n:n.toLowerCase()}function jN(e,t,n,r=!1){const s=e[t];return null!=s?HN(s.s,r):n}function qN(e,t,n){const r=e[t];return r?r.b:n}function KN(e,t,n){const r=e[t]||{},s=null!=r.i?r.i:null!=r.f?r.f:n;return"number"==typeof s?s:parseInt(s,10)}function XN(e){switch("string"==typeof e&&(e=hN[e]),e){case hN.DT_FLOAT:case hN.DT_HALF:return"float32";case hN.DT_INT32:case hN.DT_INT64:case hN.DT_INT8:case hN.DT_UINT8:return"int32";case hN.DT_BOOL:return"bool";case hN.DT_DOUBLE:return"float32";case hN.DT_STRING:return"string";case hN.DT_COMPLEX64:case hN.DT_COMPLEX128:return"complex64";default:return null}}function YN(e,t,n){const r=e[t];return r&&r.func?r.func.name:n}function JN(e,t,n){const r=e[t];return r&&r.type?XN(r.type):n}function ZN(e,t,n){const r=e[t];return r&&r.list&&r.list.type?r.list.type.map(e=>XN(e)):n}function QN(e){if(!e.unknownRank)return null!=e.dim?e.dim.map(e=>"number"==typeof e.size?e.size:parseInt(e.size,10)):[]}function eT(e,t,n){const r=e[t];return r&&r.shape?QN(r.shape):n}function tT(e,t,n){const r=e[t];return r?((r.list.f&&r.list.f.length?r.list.f:r.list.i)||[]).map(e=>"number"==typeof e?e:parseInt(e,10)):n}function nT(e,t,n,r=!1){const s=e[t];return s&&s.list&&s.list.s?s.list.s.map(e=>HN(e,r)):n}function rT(e,t,n){const r=e[t];return r&&r.list&&r.list.shape?r.list.shape.map(e=>QN(e)):n}function sT(e,t,n){const r=e[t];return r&&r.list&&r.list.b?r.list.b:n}class aT{constructor(e,t,n){this.node=e,this.tensorMap=t,this.context=n,this.inputs=[],this.attrs={},this.inputs=e.inputNames.map(e=>this.getInput(e)),null!=e.rawAttrs&&(this.attrs=Object.keys(e.rawAttrs).reduce((e,t)=>(e[t]=this.getAttr(t),e),{}))}getInput(e){return bN(e,this.tensorMap,this.context)}getAttr(e,t){const n=this.node.rawAttrs[e];if(null!=n.tensor)return bN(e,this.tensorMap,this.context);if(null!=n.i||null!=n.f)return KN(this.node.rawAttrs,e,t);if(null!=n.s)return jN(this.node.rawAttrs,e,t);if(null!=n.b)return qN(this.node.rawAttrs,e,t);if(null!=n.shape)return eT(this.node.rawAttrs,e,t);if(null!=n.type)return JN(this.node.rawAttrs,e,t);if(null!=n.list){if(null!=n.list.i||null!=n.list.f)return tT(this.node.rawAttrs,e,t);if(null!=n.list.s)return nT(this.node.rawAttrs,e,t);if(null!=n.list.shape)return rT(this.node.rawAttrs,e,t);if(null!=n.list.b)return sT(this.node.rawAttrs,e,t);if(null!=n.list.type)return ZN(this.node.rawAttrs,e,t)}return t}}function iT(e,t,n=""){if("number"!=typeof e&&"number"!=typeof t){ie(e.length===t.length,()=>n+` Shapes ${e} and ${t} must match`);for(let r=0;r<e.length;r++){const s=e[r],a=t[r];ie(s<0||a<0||s===a,()=>n+` Shapes ${e} and ${t} must match`)}}}function oT(e){return"number"!=typeof e&&!e.some(e=>e<0)}function uT(e,t,n){let r=lT(e,n);const s=!oT(r);if(s&&0===t.length)throw new Error(`Tried to calculate elements of an empty list with non-fully-defined elementShape: ${r}`);if(s&&t.forEach(e=>{r=lT(e.shape,r)}),!oT(r))throw new Error(`Non-fully-defined elementShape: ${r}`);return r}function lT(e,t){if("number"==typeof e)return t;if("number"==typeof t)return e;if(e.length!==t.length)throw new Error(`Incompatible ranks during merge: ${e} vs. ${t}`);const n=[];for(let r=0;r<e.length;++r){const s=e[r],a=t[r];if(s>=0&&a>=0&&s!==a)throw new Error(`Incompatible shape during merge: ${e} vs. ${t}`);n[r]=s>=0?s:a}return n}class cT{constructor(e,t,n,r,s,a,i){this.name=e,this.dtype=t,this.maxSize=n,this.elementShape=r,this.identicalElementShapes=s,this.dynamicSize=a,this.clearAfterRead=i,this.tensors=[],this.closed_=!1,this.idTensor=Bo(0),ci(this.idTensor)}get id(){return this.idTensor.id}get closed(){return this.closed_}clearAndClose(e){this.tensors.forEach(t=>{null!=e&&e.has(t.tensor.id)||t.tensor.dispose()}),this.tensors=[],this.closed_=!0,this.idTensor.dispose()}size(){return this.tensors.length}read(e){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(e<0||e>=this.size())throw new Error(`Tried to read from index ${e}, but array size is: ${this.size()}`);const t=this.tensors[e];if(t.cleared)throw new Error(`TensorArray ${this.name}: Could not read index ${e} twice because it was cleared after a previous read (perhaps try setting clear_after_read = false?).`);return this.clearAfterRead&&(t.cleared=!0),t.read=!0,t.tensor}readMany(e){return e.map(e=>this.read(e))}write(e,t){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(e<0||!this.dynamicSize&&e>=this.maxSize)throw new Error(`Tried to write to index ${e}, but array is not resizeable and size is: ${this.maxSize}`);const n=this.tensors[e]||{};if(t.dtype!==this.dtype)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e},\\n          because the value dtype is ${t.dtype}, but TensorArray dtype is ${this.dtype}.`);if(0!==this.size()||null!=this.elementShape&&0!==this.elementShape.length||(this.elementShape=t.shape),iT(this.elementShape,t.shape,`TensorArray ${this.name}: Could not write to TensorArray index ${e}.`),n.read)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e}, because it has already been read.`);if(n.written)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e}, because it has already been written.`);n.tensor=t,ci(t),n.written=!0,this.tensors[e]=n}writeMany(e,t){if(e.length!==t.length)throw new Error(`TensorArray ${this.name}: could not write multiple tensors,because the index size: ${e.length} is not the same as tensors size: ${t.length}.`);e.forEach((e,n)=>this.write(e,t[n]))}gather(e,t){if(t&&t!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but gather requested dtype ${t}`);if(e)e=e.slice(0,this.size());else{e=[];for(let t=0;t<this.size();t++)e.push(t)}if(0===e.length)return Ja([],[0].concat(this.elementShape));const n=this.readMany(e);return iT(this.elementShape,n[0].shape,"TensorArray shape mismatch: "),ep(n,0)}concat(e){if(e&&e!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but concat requested dtype ${e}`);if(0===this.size())return Ja([],[0].concat(this.elementShape));const t=[];for(let e=0;e<this.size();e++)t.push(e);const n=this.readMany(t);return iT(this.elementShape,n[0].shape,`TensorArray shape mismatch: tensor array shape (${this.elementShape}) vs first tensor shape (${n[0].shape})`),oc(n,0)}scatter(e,t){if(t.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${t.dtype}`);if(e.length!==t.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${e.length} vs. ${t.shape[0]}`);const n=Math.max(...e);if(!this.dynamicSize&&n>=this.maxSize)throw new Error(`Max index must be < array size (${n}  vs. ${this.maxSize})`);this.writeMany(e,fp(t,0))}split(e,t){if(t.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${t.dtype}`);let n=0;const r=e.map(e=>(n+=e,n));if(n!==t.shape[0])throw new Error(`Expected sum of lengths to be equal to\\n          tensor.shape[0], but sum of lengths is\\n        ${n}, and tensor\'s shape is: ${t.shape}`);if(!this.dynamicSize&&e.length!==this.maxSize)throw new Error(`TensorArray\'s size is not equal to the size of lengths (${this.maxSize} vs. ${e.length}), and the TensorArray is not marked as dynamically resizeable`);const s=0===n?0:t.size/n,a=[];ui(()=>{t=sc(t,[1,n,s]);for(let n=0;n<e.length;++n){const i=[0,0===n?0:r[n-1],0],o=[1,e[n],s];a[n]=sc(lc(t,i,o),this.elementShape)}return a});const i=[];for(let t=0;t<e.length;t++)i[t]=t;this.writeMany(i,a)}}class hT{get id(){return this.idTensor.id}constructor(e,t,n,r=-1){this.tensors=e,this.elementShape=t,this.elementDtype=n,null!=e&&e.forEach(e=>{if(n!==e.dtype)throw new Error(`Invalid data types; op elements ${n}, but list elements ${e.dtype}`);iT(t,e.shape,"TensorList shape mismatch: "),ci(e)}),this.idTensor=Bo(0),this.maxNumElements=r,ci(this.idTensor)}copy(){return new hT([...this.tensors],this.elementShape,this.elementDtype)}clearAndClose(e){this.tensors.forEach(t=>{null!=e&&e.has(t.id)||t.dispose()}),this.tensors.length=0,this.idTensor.dispose()}size(){return this.tensors.length}stack(e,t,n=-1){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);if(-1!==n&&this.tensors.length!==n)throw new Error(`Operation expected a list with ${n} elements but got a list with ${this.tensors.length} elements.`);iT(e,this.elementShape,"TensorList shape mismatch: ");const r=uT(this.elementShape,this.tensors,e);return ui(()=>{const e=this.tensors.map(e=>sc(e,r));return ep(e,0)})}popBack(e,t){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);if(0===this.size())throw new Error("Trying to pop from an empty list.");const n=uT(this.elementShape,this.tensors,e),r=this.tensors.pop();return r.kept=!1,iT(r.shape,e,"TensorList shape mismatch: "),sc(r,n)}pushBack(e){if(e.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${e.dtype}, but list elements ${this.elementDtype}`);if(iT(e.shape,this.elementShape,"TensorList shape mismatch: "),this.maxNumElements===this.size())throw new Error("Trying to push element into a full list.");ci(e),this.tensors.push(e)}resize(e){if(e<0)throw new Error(`TensorListResize expects size to be non-negative. Got: ${e}`);if(-1!==this.maxNumElements&&e>this.maxNumElements)throw new Error(`TensorListResize input size ${e} is greater maxNumElement ${this.maxNumElements}.`);const t=new hT([],this.elementShape,this.elementDtype,this.maxNumElements);t.tensors.length=e;for(let n=0;n<Math.min(this.tensors.length,e);++n)t.tensors[n]=this.tensors[n];return t}getItem(e,t,n){if(n!==this.elementDtype)throw new Error(`Invalid data types; op elements ${n}, but list elements ${this.elementDtype}`);if(e<0||e>this.tensors.length)throw new Error(`Trying to access element ${e} in a list with ${this.tensors.length} elements.`);if(null==this.tensors[e])throw new Error(`element at index ${e} is null.`);iT(this.tensors[e].shape,t,"TensorList shape mismatch: ");const r=uT(this.elementShape,this.tensors,t);return sc(this.tensors[e],r)}setItem(e,t){if(t.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t.dtype}, but list elements ${this.elementDtype}`);if(e<0||-1!==this.maxNumElements&&e>=this.maxNumElements)throw new Error(`Trying to set element ${e} in a list with max ${this.maxNumElements} elements.`);iT(this.elementShape,t.shape,"TensorList shape mismatch: "),ci(t),null!=this.tensors[e]&&(this.tensors[e].kept=!1),this.tensors[e]=t}gather(e,t,n){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);iT(this.elementShape,n,"TensorList shape mismatch: "),e=e.slice(0,this.size());const r=uT(this.elementShape,this.tensors,n);return 0===e.length?Ja([],[0].concat(r)):ui(()=>{const t=e.map(e=>sc(this.tensors[e],r));return ep(t,0)})}concat(e,t){if(e&&e!==this.elementDtype)throw new Error(`TensorList dtype is ${this.elementDtype} but concat requested dtype ${e}`);iT(this.elementShape,t,"TensorList shape mismatch: ");const n=uT(this.elementShape,this.tensors,t);return 0===this.size()?Ja([],[0].concat(n)):ui(()=>{const e=this.tensors.map(e=>sc(e,n));return oc(e,0)})}}function dT(e,t,n){const[r,s]=yN("fusedOps",e,t,n),a="biasadd"===r,i=!a,o="prelu"===s,u="fusedbatchnorm"===r,l=yN("numArgs",e,t,n);if(a){if(o&&2!==l)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!o&&a&&1!==l)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd must have one extra argument: bias.")}if(u)throw new Error("FusedConv2d and DepthwiseConv2d with FusedBatchNorm is not supported");const c=yN("strides",e,t,n),h=IN(e,t,n),d=yN("dataFormat",e,t,n).toUpperCase(),p=yN("dilations",e,t,n);let[f,m]=yN("args",e,t,n);return i&&(m=f,f=void 0),{stride:c,pad:h,dataFormat:d,dilations:p,biasArg:f,preluArg:m,activationFunc:s,leakyreluAlpha:yN("leakyreluAlpha",e,t,n)}}function pT(e,t,n){return{boxes:yN("boxes",e,t,n),scores:yN("scores",e,t,n),maxOutputSize:yN("maxOutputSize",e,t,n),iouThreshold:yN("iouThreshold",e,t,n),scoreThreshold:yN("scoreThreshold",e,t,n),softNmsSigma:yN("softNmsSigma",e,t,n)}}class fT{get id(){return this.handle.id}constructor(e,t){this.keyDType=e,this.valueDType=t,this.handle=Bo(0),this.tensorMap=new Map,ci(this.handle)}clearAndClose(){this.tensorMap.forEach(e=>e.dispose()),this.tensorMap.clear(),this.handle.dispose()}size(){return this.tensorMap.size}tensorSize(){return Bo(this.size(),"int32")}async import(e,t){this.checkKeyAndValueTensor(e,t);const n=await e.data();return this.tensorMap.forEach(e=>e.dispose()),this.tensorMap.clear(),ui(()=>{const e=fp(t),r=n.length,s=e.length;ie(r===s,()=>`The number of elements doesn\'t match, keys has ${r} elements, the values has ${s} elements.`);for(let t=0;t<r;t++){const r=n[t],s=e[t];ci(s),this.tensorMap.set(r,s)}return this.handle})}async find(e,t){this.checkKeyAndValueTensor(e,t);const n=await e.data();return ui(()=>{const e=[];for(let r=0;r<n.length;r++){const s=n[r],a=this.findWithDefault(s,t);e.push(a)}return ep(e)})}findWithDefault(e,t){const n=this.tensorMap.get(e);return null!=n?n:t}checkKeyAndValueTensor(e,t){if(e.dtype!==this.keyDType)throw new Error(`Expect key dtype ${this.keyDType}, but got ${e.dtype}`);if(t.dtype!==this.valueDType)throw new Error(`Expect value dtype ${this.valueDType}, but got ${t.dtype}`)}}function mT(e,t,n,r,s=ui){const a=((e,t,n)=>{switch(e.category){case"arithmetic":return s(()=>((e,t,n,r=G)=>{switch(e.op){case"BiasAdd":case"AddV2":case"Add":return[r.add(yN("a",e,t,n),yN("b",e,t,n))];case"AddN":return[r.addN(yN("tensors",e,t,n))];case"FloorMod":case"Mod":return[r.mod(yN("a",e,t,n),yN("b",e,t,n))];case"Mul":return[r.mul(yN("a",e,t,n),yN("b",e,t,n))];case"RealDiv":case"Div":return[r.div(yN("a",e,t,n),yN("b",e,t,n))];case"DivNoNan":return[r.divNoNan(yN("a",e,t,n),yN("b",e,t,n))];case"FloorDiv":return[r.floorDiv(yN("a",e,t,n),yN("b",e,t,n))];case"Sub":return[r.sub(yN("a",e,t,n),yN("b",e,t,n))];case"Minimum":return[r.minimum(yN("a",e,t,n),yN("b",e,t,n))];case"Maximum":return[r.maximum(yN("a",e,t,n),yN("b",e,t,n))];case"Pow":return[r.pow(yN("a",e,t,n),yN("b",e,t,n))];case"SquaredDifference":return[r.squaredDifference(yN("a",e,t,n),yN("b",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n));case"basic_math":return s(()=>((e,t,n,r=G)=>{switch(e.op){case"Abs":case"ComplexAbs":return[r.abs(yN("x",e,t,n))];case"Acos":return[r.acos(yN("x",e,t,n))];case"Acosh":return[r.acosh(yN("x",e,t,n))];case"Asin":return[r.asin(yN("x",e,t,n))];case"Asinh":return[r.asinh(yN("x",e,t,n))];case"Atan":return[r.atan(yN("x",e,t,n))];case"Atan2":return[r.atan2(yN("x",e,t,n),yN("y",e,t,n))];case"Atanh":return[r.atanh(yN("x",e,t,n))];case"Ceil":return[r.ceil(yN("x",e,t,n))];case"Complex":return[r.complex(yN("real",e,t,n),yN("imag",e,t,n))];case"Cos":return[r.cos(yN("x",e,t,n))];case"Cosh":return[r.cosh(yN("x",e,t,n))];case"Elu":return[r.elu(yN("x",e,t,n))];case"Erf":return[r.erf(yN("x",e,t,n))];case"Exp":return[r.exp(yN("x",e,t,n))];case"Expm1":return[r.expm1(yN("x",e,t,n))];case"Floor":return[r.floor(yN("x",e,t,n))];case"Log":return[r.log(yN("x",e,t,n))];case"Log1p":return[r.log1p(yN("x",e,t,n))];case"Imag":return[r.imag(yN("x",e,t,n))];case"Neg":return[r.neg(yN("x",e,t,n))];case"Reciprocal":return[r.reciprocal(yN("x",e,t,n))];case"Real":return[r.real(yN("x",e,t,n))];case"Relu":return[r.relu(yN("x",e,t,n))];case"Round":return[r.round(yN("x",e,t,n))];case"Selu":return[r.selu(yN("x",e,t,n))];case"Sigmoid":return[r.sigmoid(yN("x",e,t,n))];case"Sin":return[r.sin(yN("x",e,t,n))];case"Sign":return[r.sign(yN("x",e,t,n))];case"Sinh":return[r.sinh(yN("x",e,t,n))];case"Softplus":return[r.softplus(yN("x",e,t,n))];case"Sqrt":return[r.sqrt(yN("x",e,t,n))];case"Square":return[r.square(yN("x",e,t,n))];case"Tanh":return[r.tanh(yN("x",e,t,n))];case"Tan":return[r.tan(yN("x",e,t,n))];case"ClipByValue":return[r.clipByValue(yN("x",e,t,n),yN("clipValueMin",e,t,n),yN("clipValueMax",e,t,n))];case"Relu6":return[r.relu6(yN("x",e,t,n))];case"Rsqrt":return[r.rsqrt(bN(e.inputNames[0],t,n))];case"LeakyRelu":return[r.leakyRelu(yN("x",e,t,n),yN("alpha",e,t,n))];case"Prelu":return[r.prelu(yN("x",e,t,n),yN("alpha",e,t,n))];case"IsNan":return[r.isNaN(bN(e.inputNames[0],t,n))];case"IsInf":return[r.isInf(bN(e.inputNames[0],t,n))];case"IsFinite":return[r.isFinite(bN(e.inputNames[0],t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n));case"control":return(async(e,t,n)=>{switch(e.op){case"If":case"StatelessIf":{const r=yN("thenBranch",e,t,n),s=yN("elseBranch",e,t,n),a=yN("cond",e,t,n),i=yN("args",e,t,n);return(await a.data())[0]?n.functionMap[r].executeFunctionAsync(i,n.tensorArrayMap,n.tensorListMap):n.functionMap[s].executeFunctionAsync(i,n.tensorArrayMap,n.tensorListMap)}case"While":case"StatelessWhile":{const r=yN("body",e,t,n),s=yN("cond",e,t,n),a=yN("args",e,t,n),i=await n.functionMap[s].executeFunctionAsync(a,n.tensorArrayMap,n.tensorListMap),o=a.map(e=>e.id);let u=await i[0].data();i.forEach(e=>{e.kept||-1!==o.indexOf(e.id)||e.dispose()});let l=a;for(;u[0];){const e=l;l=await n.functionMap[r].executeFunctionAsync(l,n.tensorArrayMap,n.tensorListMap);const t=l.map(e=>e.id);e.forEach(e=>{e.kept||-1!==o.indexOf(e.id)||-1!==t.indexOf(e.id)||e.dispose()});const a=await n.functionMap[s].executeFunctionAsync(l,n.tensorArrayMap,n.tensorListMap);u=await a[0].data(),a.forEach(e=>{e.kept||-1!==o.indexOf(e.id)||-1!==t.indexOf(e.id)||e.dispose()})}return l}case"LoopCond":return[SN(yN("pred",e,t,n))];case"Switch":{const r=yN("pred",e,t,n);let s=yN("data",e,t,n);return s.kept||(s=SN(s)),(await r.data())[0]?[void 0,s]:[s,void 0]}case"Merge":{const r=e.inputNames.find(e=>void 0!==bN(e,t,n));return r?[SN(bN(r,t,n))]:void 0}case"Enter":{const r=yN("frameName",e,t,n),s=yN("tensor",e,t,n);return n.enterFrame(r),[SN(s)]}case"Exit":{const r=yN("tensor",e,t,n);return n.exitFrame(),[SN(r)]}case"NextIteration":{const r=yN("tensor",e,t,n);return n.nextIteration(),[SN(r)]}case"TensorArrayV3":{const r=yN("size",e,t,n),s=yN("dtype",e,t,n),a=yN("elementShape",e,t,n),i=yN("dynamicSize",e,t,n),o=yN("clearAfterRead",e,t,n),u=yN("identicalElementShapes",e,t,n),l=yN("name",e,t,n),c=new cT(l,s,r,a,u,i,o);return n.addTensorArray(c),[c.idTensor,Bo(1)]}case"TensorArrayWriteV3":{const r=yN("tensorArrayId",e,t,n),s=yN("index",e,t,n),a=yN("tensor",e,t,n),i=n.getTensorArray(r.id);return i.write(s,a),[i.idTensor]}case"TensorArrayReadV3":{const r=yN("tensorArrayId",e,t,n),s=yN("index",e,t,n);return[n.getTensorArray(r.id).read(s)]}case"TensorArrayGatherV3":{const r=yN("tensorArrayId",e,t,n),s=yN("indices",e,t,n),a=yN("dtype",e,t,n);return[n.getTensorArray(r.id).gather(s,a)]}case"TensorArrayScatterV3":{const r=yN("tensorArrayId",e,t,n),s=yN("indices",e,t,n),a=yN("tensor",e,t,n),i=n.getTensorArray(r.id);return i.scatter(s,a),[i.idTensor]}case"TensorArrayConcatV3":{const r=yN("tensorArrayId",e,t,n),s=n.getTensorArray(r.id),a=yN("dtype",e,t,n);return[s.concat(a)]}case"TensorArraySplitV3":{const r=yN("tensorArrayId",e,t,n),s=yN("tensor",e,t,n),a=yN("lengths",e,t,n),i=n.getTensorArray(r.id);return i.split(a,s),[i.idTensor]}case"TensorArraySizeV3":{const r=yN("tensorArrayId",e,t,n);return[Bo(n.getTensorArray(r.id).size(),"int32")]}case"TensorArrayCloseV3":{const r=yN("tensorArrayId",e,t,n),s=n.getTensorArray(r.id);return s.clearAndClose(),[s.idTensor]}case"TensorListSetItem":{const r=yN("tensorListId",e,t,n),s=yN("index",e,t,n),a=yN("tensor",e,t,n),i=n.getTensorList(r.id);return i.setItem(s,a),[i.idTensor]}case"TensorListGetItem":{const r=yN("tensorListId",e,t,n),s=yN("index",e,t,n),a=yN("elementShape",e,t,n),i=yN("elementDType",e,t,n);return[n.getTensorList(r.id).getItem(s,a,i)]}case"TensorListScatterV2":case"TensorListScatter":{const r=yN("indices",e,t,n),s=function(e,t,n,r){if(t.length!==e.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${t.length} vs. ${e.shape[0]}`);const s=Math.max(...t);if(null!=r&&-1!==r&&s>=r)throw new Error(`Max index must be < array size (${s}  vs. ${r})`);const a=new hT([],n,e.dtype,r),i=fp(e,0);return t.forEach((e,t)=>{a.setItem(e,i[t])}),a}(yN("tensor",e,t,n),r,yN("elementShape",e,t,n),yN("numElements",e,t,n));return n.addTensorList(s),[s.idTensor]}case"TensorListReserve":case"EmptyTensorList":{const r=yN("elementShape",e,t,n),s=yN("elementDType",e,t,n);let a;a="TensorListReserve"===e.op?"numElements":"maxNumElements";const i=yN(a,e,t,n),o=function(e,t,n,r){return new hT([],e,t,r)}(r,s,0,"TensorListReserve"===e.op?-1:i);return n.addTensorList(o),[o.idTensor]}case"TensorListGather":{const r=yN("tensorListId",e,t,n),s=yN("indices",e,t,n),a=yN("elementShape",e,t,n),i=yN("elementDType",e,t,n);return[n.getTensorList(r.id).gather(s,i,a)]}case"TensorListStack":{const r=yN("tensorListId",e,t,n),s=yN("elementShape",e,t,n),a=yN("elementDType",e,t,n),i=yN("numElements",e,t,n);return[n.getTensorList(r.id).stack(s,a,i)]}case"TensorListFromTensor":{const r=function(e,t,n){const r=e.dtype;if(e.shape.length<1)throw new Error(`Tensor must be at least a vector, but saw shape: ${e.shape}`);if(e.dtype!==n)throw new Error(`Invalid data types; op elements ${e.dtype}, but list elements ${n}`);iT(e.shape.slice(1),t,"TensorList shape mismatch: ");const s=fp(e);return new hT(s,t,r)}(yN("tensor",e,t,n),yN("elementShape",e,t,n),yN("elementDType",e,t,n));return n.addTensorList(r),[r.idTensor]}case"TensorListConcat":case"TensorListConcatV2":{const r=yN("tensorListId",e,t,n),s=n.getTensorList(r.id),a=yN("dtype",e,t,n),i=yN("elementShape",e,t,n);return[s.concat(a,i)]}case"TensorListPushBack":{const r=yN("tensorListId",e,t,n),s=yN("tensor",e,t,n),a=n.getTensorList(r.id);return a.pushBack(s),[a.idTensor]}case"TensorListPopBack":{const r=yN("tensorListId",e,t,n),s=yN("elementShape",e,t,n),a=yN("elementDType",e,t,n);return[n.getTensorList(r.id).popBack(s,a)]}case"TensorListSplit":{const r=yN("tensor",e,t,n),s=yN("elementShape",e,t,n),a=function(e,t,n){let r=0;const s=t.map(e=>(r+=e,r));if(r!==e.shape[0])throw new Error(`Expected sum of lengths to be equal to\\n          tensor.shape[0], but sum of lengths is\\n        ${r}, and tensor\'s shape is: ${e.shape}`);const a=lT(e.shape.slice(1),n),i=0===r?0:e.size/r,o=ui(()=>{const n=[];e=sc(e,[1,r,i]);for(let r=0;r<t.length;++r){const o=[0,0===r?0:s[r-1],0],u=[1,t[r],i];n[r]=sc(lc(e,o,u),a)}return e.dispose(),n}),u=new hT([],n,e.dtype,t.length);for(let e=0;e<o.length;e++)u.setItem(e,o[e]);return u}(r,yN("lengths",e,t,n),s);return n.addTensorList(a),[a.idTensor]}case"TensorListLength":{const r=yN("tensorListId",e,t,n);return[Bo(n.getTensorList(r.id).size(),"int32")]}case"TensorListResize":{const r=yN("tensorListId",e,t,n),s=yN("size",e,t,n),a=n.getTensorList(r.id).resize(s);return n.addTensorList(a),[a.idTensor]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n);case"convolution":return s(()=>((e,t,n,r=G)=>{switch(e.op){case"Conv1D":{const s=yN("stride",e,t,n),a=yN("pad",e,t,n),i=yN("dataFormat",e,t,n).toUpperCase(),o=yN("dilation",e,t,n);return[r.conv1d(yN("x",e,t,n),yN("filter",e,t,n),s,a,i,o)]}case"Conv2D":{const s=yN("strides",e,t,n),a=IN(e,t,n),i=yN("dataFormat",e,t,n).toUpperCase(),o=yN("dilations",e,t,n);return[r.conv2d(yN("x",e,t,n),yN("filter",e,t,n),[s[1],s[2]],a,i,[o[1],o[2]])]}case"_FusedConv2D":{const{stride:s,pad:a,dataFormat:i,dilations:o,biasArg:u,preluArg:l,activationFunc:c,leakyreluAlpha:h}=dT(e,t,n);return[r.fused.conv2d({x:yN("x",e,t,n),filter:yN("filter",e,t,n),strides:[s[1],s[2]],pad:a,dataFormat:i,dilations:[o[1],o[2]],bias:u,activation:c,preluActivationWeights:l,leakyreluAlpha:h})]}case"FusedDepthwiseConv2dNative":{const{stride:s,pad:a,dataFormat:i,dilations:o,biasArg:u,preluArg:l,activationFunc:c,leakyreluAlpha:h}=dT(e,t,n);return[r.fused.depthwiseConv2d({x:yN("x",e,t,n),filter:yN("filter",e,t,n),strides:[s[1],s[2]],pad:a,dataFormat:i,dilations:[o[1],o[2]],bias:u,activation:c,preluActivationWeights:l,leakyreluAlpha:h})]}case"Conv2DBackpropInput":case"Conv2dTranspose":{const s=yN("outputShape",e,t,n),a=yN("strides",e,t,n),i=IN(e,t,n);return[r.conv2dTranspose(yN("x",e,t,n),yN("filter",e,t,n),s,[a[1],a[2]],i)]}case"DepthwiseConv2dNative":case"DepthwiseConv2d":{const s=yN("strides",e,t,n),a=IN(e,t,n),i=yN("dilations",e,t,n),o=yN("dataFormat",e,t,n).toUpperCase();return[r.depthwiseConv2d(yN("input",e,t,n),yN("filter",e,t,n),[s[1],s[2]],a,o,[i[1],i[2]])]}case"Conv3D":{const s=yN("strides",e,t,n),a=yN("pad",e,t,n),i=yN("dataFormat",e,t,n).toUpperCase(),o=yN("dilations",e,t,n);return[r.conv3d(yN("x",e,t,n),yN("filter",e,t,n),[s[1],s[2],s[3]],a,i,[o[1],o[2],o[3]])]}case"AvgPool":{const s=yN("strides",e,t,n),a=yN("pad",e,t,n),i=yN("kernelSize",e,t,n);return[r.avgPool(yN("x",e,t,n),[i[1],i[2]],[s[1],s[2]],a)]}case"MaxPool":{const s=yN("strides",e,t,n),a=yN("pad",e,t,n),i=yN("kernelSize",e,t,n);return[r.maxPool(yN("x",e,t,n),[i[1],i[2]],[s[1],s[2]],a)]}case"MaxPoolWithArgmax":{const s=yN("strides",e,t,n),a=yN("pad",e,t,n),i=yN("kernelSize",e,t,n),o=yN("includeBatchInIndex",e,t,n),{result:u,indexes:l}=r.maxPoolWithArgmax(yN("x",e,t,n),[i[1],i[2]],[s[1],s[2]],a,o);return[u,l]}case"AvgPool3D":{const s=yN("strides",e,t,n),a=yN("pad",e,t,n),i=yN("kernelSize",e,t,n);return[r.avgPool3d(yN("x",e,t,n),[i[1],i[2],i[3]],[s[1],s[2],s[3]],a)]}case"MaxPool3D":{const s=yN("strides",e,t,n),a=yN("pad",e,t,n),i=yN("kernelSize",e,t,n);return[r.maxPool3d(yN("x",e,t,n),[i[1],i[2],i[3]],[s[1],s[2],s[3]],a)]}case"Dilation2D":{const s=yN("strides",e,t,n),a=yN("pad",e,t,n),i=yN("dilations",e,t,n),o=s[1],u=s[2],l=i[1],c=i[2];return[r.dilation2d(yN("x",e,t,n),yN("filter",e,t,n),[o,u],a,[l,c],"NHWC")]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n));case"creation":return s(()=>((e,t,n,r=G)=>{switch(e.op){case"Fill":{const s=yN("shape",e,t,n),a=yN("dtype",e,t,n),i=yN("value",e,t,n);return[r.fill(s,i,a)]}case"LinSpace":{const s=yN("start",e,t,n),a=yN("stop",e,t,n),i=yN("num",e,t,n);return[r.linspace(s,a,i)]}case"Multinomial":{const s=yN("logits",e,t,n),a=yN("numSamples",e,t,n),i=yN("seed",e,t,n);return[r.multinomial(s,a,i)]}case"OneHot":{const s=yN("indices",e,t,n),a=yN("depth",e,t,n),i=yN("onValue",e,t,n),o=yN("offValue",e,t,n),u=yN("dtype",e,t,n);return[r.oneHot(s,a,i,o,u)]}case"Ones":return[r.ones(yN("shape",e,t,n),yN("dtype",e,t,n))];case"OnesLike":return[r.onesLike(yN("x",e,t,n))];case"RandomStandardNormal":return[r.randomStandardNormal(yN("shape",e,t,n),yN("dtype",e,t,n),yN("seed",e,t,n))];case"RandomUniform":return[r.randomUniform(yN("shape",e,t,n),yN("minval",e,t,n),yN("maxval",e,t,n),yN("dtype",e,t,n))];case"RandomUniformInt":return[r.randomUniformInt(yN("shape",e,t,n),yN("minval",e,t,n),yN("maxval",e,t,n),yN("seed",e,t,n))];case"Range":{const s=yN("start",e,t,n),a=yN("stop",e,t,n),i=yN("step",e,t,n);return[r.range(s,a,i,yN("dtype",e,t,n))]}case"TruncatedNormal":{const s=yN("shape",e,t,n),a=yN("mean",e,t,n),i=yN("stdDev",e,t,n),o=yN("seed",e,t,n);return[r.truncatedNormal(s,a,i,yN("dtype",e,t,n),o)]}case"Zeros":return[r.zeros(yN("shape",e,t,n),yN("dtype",e,t,n))];case"ZerosLike":return[r.zerosLike(yN("x",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n));case"dynamic":return(async(e,t,n,r,s=G)=>{switch(e.op){case"NonMaxSuppressionV5":{const{boxes:r,scores:a,maxOutputSize:i,iouThreshold:o,scoreThreshold:u,softNmsSigma:l}=pT(e,t,n),c=await s.image.nonMaxSuppressionWithScoreAsync(r,a,i,o,u,l);return[c.selectedIndices,c.selectedScores]}case"NonMaxSuppressionV4":{const{boxes:r,scores:a,maxOutputSize:i,iouThreshold:o,scoreThreshold:u}=pT(e,t,n),l=yN("padToMaxOutputSize",e,t,n),c=await s.image.nonMaxSuppressionPaddedAsync(r,a,i,o,u,l);return[c.selectedIndices,c.validOutputs]}case"NonMaxSuppressionV3":case"NonMaxSuppressionV2":{const{boxes:r,scores:a,maxOutputSize:i,iouThreshold:o,scoreThreshold:u}=pT(e,t,n);return[await s.image.nonMaxSuppressionAsync(r,a,i,o,u)]}case"Where":{const r=s.cast(yN("condition",e,t,n),"bool"),a=[await s.whereAsync(r)];return r.dispose(),a}case"ListDiff":return s.setdiff1dAsync(yN("x",e,t,n),yN("y",e,t,n));default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n);case"evaluation":return s(()=>((e,t,n,r=G)=>{switch(e.op){case"LowerBound":{const s=yN("sortedSequence",e,t,n),a=yN("values",e,t,n);return[r.lowerBound(s,a)]}case"TopKV2":{const s=yN("x",e,t,n),a=yN("k",e,t,n),i=yN("sorted",e,t,n),o=r.topk(s,a,i);return[o.values,o.indices]}case"UpperBound":{const s=yN("sortedSequence",e,t,n),a=yN("values",e,t,n);return[r.upperBound(s,a)]}case"Unique":{const s=yN("x",e,t,n),a=r.unique(s);return[a.values,a.indices]}case"UniqueV2":{const s=yN("x",e,t,n),a=yN("axis",e,t,n),i=r.unique(s,a);return[i.values,i.indices]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n));case"image":return s(()=>((e,t,n,r=G)=>{switch(e.op){case"ResizeBilinear":{const s=yN("images",e,t,n),a=yN("size",e,t,n),i=yN("alignCorners",e,t,n),o=yN("halfPixelCenters",e,t,n);return[r.image.resizeBilinear(s,[a[0],a[1]],i,o)]}case"ResizeNearestNeighbor":{const s=yN("images",e,t,n),a=yN("size",e,t,n),i=yN("alignCorners",e,t,n),o=yN("halfPixelCenters",e,t,n);return[r.image.resizeNearestNeighbor(s,[a[0],a[1]],i,o)]}case"CropAndResize":{const s=yN("image",e,t,n),a=yN("boxes",e,t,n),i=yN("boxInd",e,t,n),o=yN("cropSize",e,t,n),u=yN("method",e,t,n),l=yN("extrapolationValue",e,t,n);return[r.image.cropAndResize(s,a,i,o,u,l)]}case"ImageProjectiveTransformV3":{const s=yN("images",e,t,n),a=yN("transforms",e,t,n),i=yN("outputShape",e,t,n),o=yN("fillValue",e,t,n),u=yN("interpolation",e,t,n),l=yN("fillMode",e,t,n);return[r.image.transform(s,a,u.toLowerCase(),l.toLowerCase(),o,i)]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n));case"graph":return s(()=>((e,t,n,r=G)=>{switch(e.op){case"Const":return t[e.name];case"PlaceholderWithDefault":const s=yN("default",e,t,n);return[bN(e.name,t,n)||s];case"Placeholder":return[bN(e.name,t,n)];case"Identity":case"StopGradient":case"FakeQuantWithMinMaxVars":case"Snapshot":return[SN(yN("x",e,t,n))];case"IdentityN":return yN("x",e,t,n).map(e=>SN(e));case"Shape":return[r.tensor1d(yN("x",e,t,n).shape,"int32")];case"ShapeN":return yN("x",e,t,n).map(e=>r.tensor1d(e.shape));case"Size":return[r.scalar(yN("x",e,t,n).size,"int32")];case"Rank":return[r.scalar(yN("x",e,t,n).rank,"int32")];case"NoOp":return[r.scalar(1)];case"Print":const a=yN("x",e,t,n),i=yN("data",e,t,n),o=yN("message",e,t,n),u=yN("summarize",e,t,n);console.warn("The graph has a tf.print() operation,usually used for debugging, which slows down performance."),console.log(o);for(let e=0;e<i.length;e++)console.log(Array.prototype.slice.call(i[e].dataSync()).slice(0,u));return[a];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n));case"logical":return s(()=>((e,t,n,r=G)=>{switch(e.op){case"Equal":return[r.equal(yN("a",e,t,n),yN("b",e,t,n))];case"NotEqual":return[r.notEqual(yN("a",e,t,n),yN("b",e,t,n))];case"Greater":return[r.greater(yN("a",e,t,n),yN("b",e,t,n))];case"GreaterEqual":return[r.greaterEqual(yN("a",e,t,n),yN("b",e,t,n))];case"Less":return[r.less(yN("a",e,t,n),yN("b",e,t,n))];case"LessEqual":return[r.lessEqual(yN("a",e,t,n),yN("b",e,t,n))];case"LogicalAnd":return[r.logicalAnd(yN("a",e,t,n),yN("b",e,t,n))];case"LogicalNot":return[r.logicalNot(yN("a",e,t,n))];case"LogicalOr":return[r.logicalOr(yN("a",e,t,n),yN("b",e,t,n))];case"Select":case"SelectV2":return[r.where(yN("condition",e,t,n),yN("a",e,t,n),yN("b",e,t,n))];case"BitwiseAnd":return[r.bitwiseAnd(yN("a",e,t,n),yN("b",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n));case"matrices":return s(()=>((e,t,n,r=G)=>{switch(e.op){case"BatchMatMul":case"BatchMatMulV2":case"MatMul":return[r.matMul(yN("a",e,t,n),yN("b",e,t,n),yN("transposeA",e,t,n),yN("transposeB",e,t,n))];case"Einsum":return[r.einsum(yN("equation",e,t,n),...yN("tensors",e,t,n))];case"Transpose":return[r.transpose(yN("x",e,t,n),yN("perm",e,t,n))];case"_FusedMatMul":const[s,a]=yN("fusedOps",e,t,n),i="biasadd"===s,o="prelu"===a,u=yN("numArgs",e,t,n),l=yN("leakyreluAlpha",e,t,n);if(i){if(o&&2!==u)throw new Error("Fused MatMul with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!o&&1!==u)throw new Error("Fused MatMul with BiasAdd must have one extra argument: bias.")}const[c,h]=yN("args",e,t,n);return[r.fused.matMul({a:yN("a",e,t,n),b:yN("b",e,t,n),transposeA:yN("transposeA",e,t,n),transposeB:yN("transposeB",e,t,n),bias:c,activation:a,preluActivationWeights:h,leakyreluAlpha:l})];case"MatrixBandPart":return[r.linalg.bandPart(yN("a",e,t,n),yN("numLower",e,t,n),yN("numUpper",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n));case"normalization":return s(()=>((e,t,n,r=G)=>{switch(e.op){case"EuclideanNorm":return[r.euclideanNorm(yN("x",e,t,n),yN("axis",e,t,n),yN("keepDims",e,t,n))];case"FusedBatchNorm":case"FusedBatchNormV2":case"FusedBatchNormV3":return[r.batchNorm(yN("x",e,t,n),yN("mean",e,t,n),yN("variance",e,t,n),yN("offset",e,t,n),yN("scale",e,t,n),yN("epsilon",e,t,n))];case"LRN":return[r.localResponseNormalization(yN("x",e,t,n),yN("radius",e,t,n),yN("bias",e,t,n),yN("alpha",e,t,n),yN("beta",e,t,n))];case"Softmax":return[r.softmax(yN("x",e,t,n))];case"LogSoftmax":return[r.logSoftmax(yN("x",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n));case"ragged":return s(()=>((e,t,n,r=G)=>{switch(e.op){case"RaggedGather":{const{outputNestedSplits:s,outputDenseValues:a}=r.raggedGather(yN("paramsNestedSplits",e,t,n),yN("paramsDenseValues",e,t,n),yN("indices",e,t,n),yN("outputRaggedRank",e,t,n));return s.concat(a)}case"RaggedRange":{const{rtNestedSplits:s,rtDenseValues:a}=r.raggedRange(yN("starts",e,t,n),yN("limits",e,t,n),yN("splits",e,t,n));return[s,a]}case"RaggedTensorToTensor":return[r.raggedTensorToTensor(yN("shape",e,t,n),yN("values",e,t,n),yN("defaultValue",e,t,n),yN("rowPartitionTensors",e,t,n),yN("rowPartitionTypes",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n));case"reduction":return s(()=>((e,t,n,r=G)=>{switch(e.op){case"Max":{const s=yN("axis",e,t,n),a=yN("keepDims",e,t,n);return[r.max(yN("x",e,t,n),s,a)]}case"Mean":{const s=yN("axis",e,t,n),a=yN("keepDims",e,t,n);return[r.mean(yN("x",e,t,n),s,a)]}case"Min":{const s=yN("axis",e,t,n),a=yN("keepDims",e,t,n);return[r.min(yN("x",e,t,n),s,a)]}case"Sum":{const s=yN("axis",e,t,n),a=yN("keepDims",e,t,n);return[r.sum(yN("x",e,t,n),s,a)]}case"All":{const s=yN("axis",e,t,n),a=yN("keepDims",e,t,n);return[r.all(yN("x",e,t,n),s,a)]}case"Any":{const s=yN("axis",e,t,n),a=yN("keepDims",e,t,n);return[r.any(yN("x",e,t,n),s,a)]}case"ArgMax":{const s=yN("axis",e,t,n);return[r.argMax(yN("x",e,t,n),s)]}case"ArgMin":{const s=yN("axis",e,t,n);return[r.argMin(yN("x",e,t,n),s)]}case"Prod":{const s=yN("axis",e,t,n),a=yN("keepDims",e,t,n);return[r.prod(yN("x",e,t,n),s,a)]}case"Cumprod":{const s=yN("axis",e,t,n),a=yN("exclusive",e,t,n),i=yN("reverse",e,t,n);return[r.cumprod(yN("x",e,t,n),s,a,i)]}case"Cumsum":{const s=yN("axis",e,t,n),a=yN("exclusive",e,t,n),i=yN("reverse",e,t,n);return[r.cumsum(yN("x",e,t,n),s,a,i)]}case"Bincount":const s=yN("x",e,t,n),a=yN("weights",e,t,n),i=yN("size",e,t,n);return[r.bincount(s,a,i)];case"DenseBincount":{const s=yN("x",e,t,n),a=yN("weights",e,t,n),i=yN("size",e,t,n),o=yN("binaryOutput",e,t,n);return[r.denseBincount(s,a,i,o)]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n));case"slice_join":return s(()=>((e,t,n,r=G)=>{switch(e.op){case"ConcatV2":case"Concat":{const s=yN("n",e,t,n),a=yN("axis",e,t,n);let i=yN("tensors",e,t,n);return i=i.slice(0,s),[r.concat(i,a)]}case"Gather":{const s=yN("x",e,t,n),a=yN("indices",e,t,n);return[r.gather(s,r.cast(a,"int32"),0)]}case"GatherV2":{const s=yN("axis",e,t,n),a=yN("batchDims",e,t,n),i=yN("x",e,t,n),o=yN("indices",e,t,n);return[r.gather(i,r.cast(o,"int32"),s,a)]}case"Reverse":{const s=yN("dims",e,t,n),a=[];for(let e=0;e<s.length;e++)s[e]&&a.push(e);const i=yN("x",e,t,n);return[r.reverse(i,a)]}case"ReverseV2":{const s=yN("axis",e,t,n),a=yN("x",e,t,n);return[r.reverse(a,s)]}case"Slice":{const s=yN("begin",e,t,n),a=yN("size",e,t,n);return[r.slice(yN("x",e,t,n),s,a)]}case"StridedSlice":{const s=yN("begin",e,t,n),a=yN("end",e,t,n),i=yN("strides",e,t,n),o=yN("beginMask",e,t,n),u=yN("endMask",e,t,n),l=yN("ellipsisMask",e,t,n),c=yN("newAxisMask",e,t,n),h=yN("shrinkAxisMask",e,t,n),d=yN("x",e,t,n);return[r.stridedSlice(d,s,a,i,o,u,l,c,h)]}case"Pack":return ui(()=>{const s=yN("axis",e,t,n),a=yN("tensors",e,t,n),i=a[0].shape,o=r.squeeze(a[0]).shape,u=a.map(e=>{const t=de(e.shape,i);if(!t&&!de(r.squeeze(e).shape,o))throw new Error("the input tensors shape does not match");return t?e:r.reshape(e,i)});return[r.stack(u,s)]});case"Unpack":{const s=yN("axis",e,t,n),a=yN("tensor",e,t,n);return r.unstack(a,s)}case"Tile":{const s=yN("reps",e,t,n);return[r.tile(yN("x",e,t,n),s)]}case"Split":case"SplitV":{const s=yN("axis",e,t,n),a=yN("numOrSizeSplits",e,t,n),i=yN("x",e,t,n);return r.split(i,a,s)}case"ScatterNd":{const s=yN("indices",e,t,n),a=yN("values",e,t,n),i=yN("shape",e,t,n);return[r.scatterND(s,a,i)]}case"GatherNd":{const s=yN("x",e,t,n),a=yN("indices",e,t,n);return[r.gatherND(s,a)]}case"SparseToDense":{const s=yN("sparseIndices",e,t,n),a=yN("outputShape",e,t,n),i=yN("sparseValues",e,t,n),o=yN("defaultValue",e,t,n);return[r.sparseToDense(s,i,a,i.dtype===o.dtype?o:r.cast(o,i.dtype))]}case"TensorScatterUpdate":{const s=yN("indices",e,t,n),a=yN("values",e,t,n),i=yN("tensor",e,t,n);return[r.tensorScatterUpdate(i,s,a)]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n));case"sparse":return s(()=>((e,t,n,r=G)=>{switch(e.op){case"SparseFillEmptyRows":{const{outputIndices:s,outputValues:a,emptyRowIndicator:i,reverseIndexMap:o}=r.sparse.sparseFillEmptyRows(yN("indices",e,t,n),yN("values",e,t,n),yN("denseShape",e,t,n),yN("defaultValue",e,t,n));return[s,a,i,o]}case"SparseReshape":{const{outputIndices:s,outputShape:a}=r.sparse.sparseReshape(yN("inputIndices",e,t,n),yN("inputShape",e,t,n),yN("newShape",e,t,n));return[s,a]}case"SparseSegmentMean":return[r.sparse.sparseSegmentMean(yN("data",e,t,n),yN("indices",e,t,n),yN("segmentIds",e,t,n))];case"SparseSegmentSum":return[r.sparse.sparseSegmentSum(yN("data",e,t,n),yN("indices",e,t,n),yN("segmentIds",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n));case"spectral":return s(()=>((e,t,n,r=G)=>{switch(e.op){case"FFT":return[r.fft(yN("x",e,t,n))];case"IFFT":return[r.ifft(yN("x",e,t,n))];case"RFFT":return[r.rfft(yN("x",e,t,n))];case"IRFFT":return[r.irfft(yN("x",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n));case"string":return s(()=>((e,t,n,r=G)=>{switch(e.op){case"StaticRegexReplace":return[r.string.staticRegexReplace(yN("input",e,t,n),yN("pattern",e,t,n),yN("rewrite",e,t,n),yN("replaceGlobal",e,t,n))];case"StringNGrams":{const{nGrams:s,nGramsSplits:a}=r.string.stringNGrams(yN("data",e,t,n),yN("dataSplits",e,t,n),yN("separator",e,t,n),yN("nGramWidths",e,t,n),yN("leftPad",e,t,n),yN("rightPad",e,t,n),yN("padWidth",e,t,n),yN("preserveShortSequences",e,t,n));return[s,a]}case"StringSplit":{const{indices:s,values:a,shape:i}=r.string.stringSplit(yN("input",e,t,n),yN("delimiter",e,t,n),yN("skipEmpty",e,t,n));return[s,a,i]}case"StringToHashBucketFast":return[r.string.stringToHashBucketFast(yN("input",e,t,n),yN("numBuckets",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n));case"transformation":return s(()=>((e,t,n,r=G)=>{switch(e.op){case"Cast":return[r.cast(yN("x",e,t,n),yN("dtype",e,t,n))];case"ExpandDims":{const s=yN("axis",e,t,n);return[r.expandDims(yN("x",e,t,n),s)]}case"Squeeze":{const s=yN("axis",e,t,n);return[r.squeeze(yN("x",e,t,n),s)]}case"Reshape":return[r.reshape(yN("x",e,t,n),yN("shape",e,t,n))];case"EnsureShape":return[r.ensureShape(yN("x",e,t,n),yN("shape",e,t,n))];case"MirrorPad":return[r.mirrorPad(yN("x",e,t,n),yN("padding",e,t,n),yN("mode",e,t,n))];case"PadV2":case"Pad":return[r.pad(yN("x",e,t,n),yN("padding",e,t,n),yN("constantValue",e,t,n))];case"SpaceToBatchND":{const s=yN("blockShape",e,t,n),a=yN("paddings",e,t,n);return[r.spaceToBatchND(yN("x",e,t,n),s,a)]}case"BatchToSpaceND":{const s=yN("blockShape",e,t,n),a=yN("crops",e,t,n);return[r.batchToSpaceND(yN("x",e,t,n),s,a)]}case"DepthToSpace":{const s=yN("blockSize",e,t,n),a=yN("dataFormat",e,t,n).toUpperCase();return[r.depthToSpace(yN("x",e,t,n),s,a)]}case"BroadcastTo":return[r.broadcastTo(yN("x",e,t,n),yN("shape",e,t,n))];case"BroadcastArgs":return[r.broadcastArgs(yN("s0",e,t,n),yN("s1",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n));case"hash_table":return(async(e,t,n,r)=>{switch(e.op){case"HashTable":case"HashTableV2":{const s=r.getHashTableHandleByName(e.name);if(null!=s)return[s];{const s=yN("keyDType",e,t,n),a=yN("valueDType",e,t,n),i=new fT(s,a);return r.addHashTable(e.name,i),[i.handle]}}case"InitializeTable":case"InitializeTableV2":case"LookupTableImport":case"LookupTableImportV2":{const s=yN("tableHandle",e,t,n,r),a=yN("keys",e,t,n),i=yN("values",e,t,n),o=r.getHashTableById(s.id);return[await o.import(a,i)]}case"LookupTableFind":case"LookupTableFindV2":{const s=yN("tableHandle",e,t,n,r),a=yN("keys",e,t,n),i=yN("defaultValue",e,t,n),o=r.getHashTableById(s.id);return[await o.find(a,i)]}case"LookupTableSize":case"LookupTableSizeV2":{const s=yN("tableHandle",e,t,n,r);return[r.getHashTableById(s.id).tensorSize()]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n,r);case"custom":const a=mN(e.op);if(a&&a.customExecutor)return a.customExecutor(new aT(e,t,n));throw TypeError(`Custom op ${e.op} is not registered.`);default:throw TypeError(`Unknown op \'${e.op}\'. File an issue at https://github.com/tensorflow/tfjs/issues so we can add it, or register a custom execution with tf.registerOp()`)}})(e,t,n);return He(a)?a.then(e=>[].concat(e)):[].concat(a)}class gT{constructor(e={},t={},n={},r={},s){this.weightMap=e,this.tensorArrayMap=t,this.tensorListMap=n,this.functionMap=r,this.parseNodeNameCache=s,this.rootContext={id:0,frameName:"",iterationId:0},this.contexts=[this.rootContext],this.lastId=0,this.generateCurrentContextIds()}newFrame(e,t){return{id:e,frameName:t,iterationId:0}}set currentContext(e){this.contexts!==e&&(this.contexts=e,this.generateCurrentContextIds())}get currentContext(){return this.contexts}get currentContextId(){return this._currentContextIds[0]}get currentContextIds(){return this._currentContextIds}generateCurrentContextIds(){const e=[];for(let t=0;t<this.contexts.length-1;t++){const n=this.contexts.slice(0,this.contexts.length-t);e.push(this.contextIdforContexts(n))}e.push(""),this._currentContextIds=e}contextIdforContexts(e){return e?e.map(e=>0===e.id&&0===e.iterationId?"":`${e.frameName}-${e.iterationId}`).join("/"):""}enterFrame(e){this.contexts&&(this.lastId++,this.contexts=this.contexts.slice(),this.contexts.push(this.newFrame(this.lastId,e)),this._currentContextIds.unshift(this.contextIdforContexts(this.contexts)))}exitFrame(){if(!(this.contexts&&this.contexts.length>1))throw new Error("Cannot exit frame, the context is empty");this.contexts=this.contexts.slice(),this.contexts.splice(-1),this.currentContextIds.shift()}nextIteration(){if(!(this.contexts&&this.contexts.length>0))throw new Error("Cannot increase frame iteration, the context is empty");{this.contexts=this.contexts.slice(),this.lastId++;const e=Object.assign({},this.contexts[this.contexts.length-1]);e.iterationId+=1,e.id=this.lastId,this.contexts.splice(-1,1,e),this._currentContextIds.splice(0,1,this.contextIdforContexts(this.contexts))}}getWeight(e){return this.weightMap[e]}addTensorArray(e){this.tensorArrayMap[e.id]=e}getTensorArray(e){return this.tensorArrayMap[e]}addTensorList(e){this.tensorListMap[e.id]=e}getTensorList(e){return this.tensorListMap[e]}dispose(e){for(const t in this.tensorArrayMap)this.tensorArrayMap[t].clearAndClose(e);for(const t in this.tensorListMap)this.tensorListMap[t].clearAndClose(e)}}function yT(e,t,n,r){const s=new Set,a=[];let i=null,o=null;const u=new Set,l=new Set(Object.keys(e).map(e=>kN(e)[0]));r=r||[];const c=new Set(r.map(e=>kN(e.name)[0])),h=[...t];for(;h.length>0;){const e=h.pop();(kT(e)||IT(e)||ST(e))&&null==i&&(i=e,o=i.children.map(e=>e.name).filter(e=>s.has(e))),s.add(e.name),null==n[e.name]&&(l.has(e.name)||c.has(e.name)||(0!==e.inputs.length?e.inputs.forEach(e=>{u.has(e.name)||(u.add(e.name),h.push(e))}):a.push(e.name)))}return{inputs:e,outputs:t,usedNodes:s,missingInputs:a,dynamicNode:i,syncInputs:o}}class bT extends Error{constructor(e){super(`NodesExecutionOrderError: ${e}`)}}const xT=new Set(["Switch","Merge","Enter","Exit","NextIteration","StatelessIf","StatelessWhile","if","While"]),wT=new Set(["NonMaxSuppressionV2","NonMaxSuppressionV3","NonMaxSuppressionV5","Where"]),vT=new Set(["HashTable","HashTableV2","LookupTableImport","LookupTableImportV2","LookupTableFind","LookupTableFindV2","LookupTableSize","LookupTableSizeV2"]);function kT(e){return xT.has(e.op)}function IT(e){return wT.has(e.op)}function ST(e){return vT.has(e.op)}class NT{get weightIds(){return this.parent?this.parent.weightIds:this._weightIds}get functionExecutorMap(){return this.parent?this.parent.functionExecutorMap:this._functionExecutorMap}get weightMap(){return this.parent?this.parent.weightMap:this._weightMap}set weightMap(e){const t=Object.keys(e).map(t=>e[t].map(e=>e.id));this._weightIds=[].concat(...t),this._weightMap=e}set resourceManager(e){this._resourceManager=e}get inputs(){return this._inputs.map(e=>({name:e.name,shape:e.attrParams.shape?e.attrParams.shape.value:void 0,dtype:e.attrParams.dtype?e.attrParams.dtype.value:void 0}))}get outputs(){return this._outputs.map(e=>({name:e.name,shape:e.attrParams.shape?e.attrParams.shape.value:void 0,dtype:e.attrParams.dtype?e.attrParams.dtype.value:void 0}))}get inputNodes(){return this._inputs.map(e=>e.signatureKey||e.name)}get outputNodes(){return this._outputs.map(e=>{const t=e.signatureKey||e.name;return e.defaultOutput?`${t}:${e.defaultOutput}`:t})}get functions(){return Object.keys(this._functions).reduce((e,t)=>(e[t]=this._functions[t].signature,e),{})}constructor(e,t){this.graph=e,this.parent=t,this.compiledMap=new Map,this.parseNodeNameCache=new Map,this._weightMap={},this.SEPARATOR=",",this._functions={},this._functionExecutorMap={},this.keepIntermediateTensors=!1,this._outputs=e.outputs,this._inputs=e.inputs,this._initNodes=e.initNodes,this._signature=e.signature,this._functions=e.functions,null!=e.functions&&Object.keys(e.functions).forEach(t=>{this._functionExecutorMap[t]=new NT(e.functions[t],this)})}getCompilationKey(e,t){const n=e.map(e=>e.name).sort(),r=t.map(e=>e.name).sort();return n.join(this.SEPARATOR)+"--"+r.join(this.SEPARATOR)}compile(e,t){const n=yT(e,t,this.weightMap,this._initNodes),{missingInputs:r,dynamicNode:s,syncInputs:a}=n;if(null!=s)throw new Error(`This execution contains the node \'${s.name}\', which has the dynamic op \'${s.op}\'. Please use model.executeAsync() instead. Alternatively, to avoid the dynamic ops, specify the inputs [${a}]`);if(r.length>0){const n=t.map(e=>e.name),s=Object.keys(e);throw new Error(`Cannot compute the outputs [${n}] from the provided inputs [${s}]. Missing the following inputs: [${r}]`)}const i=function(e,t){const{usedNodes:n,inputs:r}=t,s=Object.keys(r).map(e=>kN(e)[0]).map(t=>e.nodes[t]),a=e.initNodes||[],i=e=>n.has("string"==typeof e?e:e.name);function o(e){return[...new Map(e.map(e=>[e.name,e])).values()]}const u=o([...s,...e.weights,...a]).filter(i),l=o([...u,...Object.values(e.nodes)]).filter(i),c=new Map(l.map(e=>[e.name,e])),h={};for(const e of l){h[e.name]=h[e.name]||0;for(const t of e.children)i(t)||(h[t.name]=Number.POSITIVE_INFINITY),h[t.name]=(h[t.name]||0)+1}const d=Object.entries(h).filter(([,e])=>0===e).map(([e])=>e),p=[...d];for(;d.length>0;){const e=d.pop(),t=c.get(e);for(const e of t.children.filter(i))0===--h[e.name]&&(p.push(e.name),d.push(e.name))}const f=function(e,t){const n=new Map(e.map(e=>[e.name,e])),r=t.map(e=>e.name),s=new Set(r);for(;r.length>0;){const e=r.pop(),t=n.get(e);for(const e of t.children)n.has(e.name)&&!s.has(e.name)&&(s.add(e.name),r.push(e.name))}return e.filter(e=>s.has(e.name))}(p.map(e=>c.get(e)),u);return function(e,t){const n=new Map(e.map((e,t)=>[e.name,t])),r=new Set(t.map(e=>e.name)),s=e=>r.has("string"==typeof e?e:e.name),a=new Set(e.map(e=>e.name)),i=e=>a.has("string"==typeof e?e:e.name);for(const t of e){for(const e of t.children.filter(i)){if(!n.has(e.name))throw new bT(`Child ${e.name} of node ${t.name} is unreachable.`);if(n.get(t.name)>n.get(e.name))throw new bT(`Node ${t.name} is scheduled to run after its child ${e.name}.`)}if(!s(t))for(const e of t.inputs){if(!n.has(e.name))throw new bT(`Input ${e.name} of node ${t.name} is unreachable.`);if(n.get(e.name)>n.get(t.name))throw new bT(`Node ${t.name} is scheduled to run before its input ${e.name}.`)}}}(f,u),f}(this.graph,n),o=function(e){const t=new Map(e.map((e,t)=>[e.name,t])),n=Number.MAX_SAFE_INTEGER,r=e.map((e,t)=>kT(e)?n:t),s=e=>{const n=r[t.get(e.name)];return null==n?-1:n},a=e.map((e,t)=>e.children.map(s).reduce((e,t)=>Math.max(e,t),r[t])),i=new Map;for(let t=0;t<e.length;++t){const r=a[t];if(r===n)continue;const s=e[t],o=e[r];i.has(o.name)||i.set(o.name,[]),i.get(o.name).push(s)}return i}(i);return{orderedNodes:i,nodeLiveUntilMap:o}}cloneAndKeepTensor(e){if(null==e)return null;const t=e.clone();return ci(t),t}cloneTensorList(e){if(!e)return null;const t=e.map(e=>this.cloneAndKeepTensor(e));return t}cloneTensorMap(e){return Object.fromEntries(Object.entries(e).map(([e,t])=>[e,this.cloneTensorList(t)]))}execute(e,t){this.disposeIntermediateTensors(),e=this.mapInputs(e);const n=Object.keys(e).sort();this.checkInputs(e),this.checkInputShapeAndType(e),t=this.mapOutputs(t),this.checkOutputs(t);const r=n.map(e=>this.graph.nodes[kN(e)[0]]),s=t.map(e=>kN(e)[0]),a=new Set(s);let i=s.map(e=>this.graph.nodes[e]);0===i.length&&(i=this._outputs);const o=this.getCompilationKey(r,i);let u=this.compiledMap.get(o);null==u&&(u=this.compile(e,i),this.compiledMap.set(o,u));try{this.keepIntermediateTensors=Xe().getBool("KEEP_INTERMEDIATE_TENSORS")}catch(e){this.keepIntermediateTensors=!1,console.warn(e.message)}const l={},c={};return ui(()=>{const n=new gT(this.weightMap,l,c,this.functionExecutorMap,this.parseNodeNameCache),r=Object.assign({},this.weightMap);this.keepIntermediateTensors&&(this.clonedTensorsMap=this.cloneTensorMap(this.weightMap)),Object.keys(e).forEach(t=>{const[s,a]=kN(t,n),i=[];i[a]=e[t],r[s]=i,this.keepIntermediateTensors&&(this.clonedTensorsMap[s]=this.cloneTensorList(i))});const s=this.getFrozenTensorIds(r),{orderedNodes:i,nodeLiveUntilMap:o}=u;for(const e of i){if(r[e.name])continue;const t=mT(e,r,n,this._resourceManager);if(He(t))throw new Error(`The execution of the op \'${e.op}\' returned a promise. Please use model.executeAsync() instead.`);r[e.name]=t,this.keepIntermediateTensors&&(this.clonedTensorsMap[e.name]=this.cloneTensorList(t)),this.checkTensorForDisposalWithNodeLiveUntilInfo(e,r,n,s,a,o.get(e.name))}return null==this.parent&&n.dispose(s),t.map(e=>bN(e,r,n))})}getFrozenTensorIds(e){const t=[].concat.apply([],Object.keys(e).map(t=>e[t]).map(e=>e.map(e=>e.id)));return new Set(t)}checkTensorForDisposal(e,t,n,r,s,a,i){if(!kT(t)&&!a.has(e)){for(const r of n[e])null!=r&&(i[r.id]=(i[r.id]||0)+t.children.length);for(const e of t.inputs){if(kT(e))continue;const t=xN(e.name,n,r);if(null!=t)for(const e of t){if(!e||e.kept||s.has(e.id))continue;const t=i[e.id];1===t?(e.dispose(),delete i[e.id]):null!=t&&i[e.id]--}}}}checkTensorForDisposalWithNodeLiveUntilInfo(e,t,n,r,s,a){function i(e){return kT(e)||s.has(e.name)}if(!kT(e)&&null!=a)for(const e of a){if(i(e))continue;const s=xN(e.name,t,n);for(const e of s)!e||e.kept||r.has(e.id)||e.dispose()}}async executeAsync(e,t){return this._executeAsync(e,t)}disposeIntermediateTensors(){this.clonedTensorsMap&&(Object.values(this.clonedTensorsMap).forEach(e=>{for(const t of e)t&&!t.isDisposed&&t.dispose()}),this.clonedTensorsMap=null)}getIntermediateTensors(){return this.clonedTensorsMap}async _executeAsync(e,t,n=!1,r={},s={}){this.disposeIntermediateTensors(),n||(e=this.mapInputs(e),this.checkInputs(e),this.checkInputShapeAndType(e),t=this.mapOutputs(t),this.checkOutputs(t));try{this.keepIntermediateTensors=Xe().getBool("KEEP_INTERMEDIATE_TENSORS")}catch(e){this.keepIntermediateTensors=!1,console.warn(e.message)}const a=new gT(this.weightMap,r,s,this.functionExecutorMap,this.parseNodeNameCache);this.keepIntermediateTensors&&(this.clonedTensorsMap=this.cloneTensorMap(this.weightMap));const i=await this.executeWithControlFlow(e,a,t,n),o=t.map(e=>bN(e,i,a)),u=o.map(e=>e.id),l=Object.keys(e).map(t=>e[t].id),c=new Set([...u,...l,...this.weightIds]);return Object.values(i).forEach(e=>{e.forEach(e=>{!e||e.isDisposed||c.has(e.id)||e.dispose()})}),null==this.parent&&a.dispose(c),o}async executeFunctionAsync(e,t,n){const r=e.reduce((e,t,n)=>(e[this.inputs[n].name]=t,e),{});return this._executeAsync(r,this.outputNodes,!0,t,n)}async executeWithControlFlow(e,t,n,r){const s=Object.keys(e),a=s.map(e=>this.graph.nodes[kN(e)[0]]),i=n.map(e=>kN(e)[0]),o=new Set(i);let u=i.map(e=>this.graph.nodes[e]);0===u.length&&(u=this._outputs);const{usedNodes:l,missingInputs:c,dynamicNode:h,syncInputs:d}=yT(e,u,this.weightMap,this._initNodes),p=[...a,...this.graph.weights,...this._initNodes||[]].map(e=>({node:e,contexts:t.currentContext})),f=Object.assign({},this.weightMap);Object.keys(e).forEach(t=>{const[n,r]=kN(t),s=[];s[r]=e[t],f[n]=s});const m={},g=this.getFrozenTensorIds(f),y={};for(;p.length>0;){const e=this.processStack(a,p,t,f,y,g,o,m,l);await Promise.all(e)}null!=h||r||console.warn("This model execution did not contain any nodes with control flow or dynamic output shapes. You can use model.execute() instead.");const b=u.filter(e=>!kT(e)&&!bN(e.name,f,t)).map(e=>e.name);if(b.length>0){let e="";throw null!=h&&(e=`Alternatively, to avoid the dynamic ops, use model.execute() and specify the inputs [${d}]`),new Error(`Cannot compute the outputs [${b}] from the provided inputs [${s}]. Consider providing the following inputs: [${c}]. ${e}`)}return f}processStack(e,t,n,r,s,a,i,o,u){const l=[];for(;t.length>0;){const e=t.pop();n.currentContext=e.contexts;let c="";if("Enter"===e.node.op&&yN("isConstant",e.node,r,n)&&([c]=wN(e.node.name,n)),null==r[e.node.name]){const h=mT(e.node,r,n,this._resourceManager);c||([c]=wN(e.node.name,n));const d=n.currentContext;He(h)?l.push(h.then(l=>(r[c]=l,this.keepIntermediateTensors&&(this.clonedTensorsMap[c]=this.cloneTensorList(l)),n.currentContext=d,this.checkTensorForDisposal(c,e.node,r,n,a,i,o),this.processChildNodes(e.node,t,n,r,s,u),l))):(r[c]=h,this.keepIntermediateTensors&&(this.clonedTensorsMap[c]=this.cloneTensorList(h)),this.checkTensorForDisposal(c,e.node,r,n,a,i,o),this.processChildNodes(e.node,t,n,r,s,u))}else this.processChildNodes(e.node,t,n,r,s,u)}return l}processChildNodes(e,t,n,r,s,a){e.children.forEach(e=>{const[i]=wN(e.name,n);!s[i]&&a.has(e.name)&&("Merge"===e.op?e.inputNames.some(e=>!!bN(e,r,n))&&(s[i]=!0,t.push({contexts:n.currentContext,node:e})):e.inputNames.every(e=>!!bN(e,r,n))&&(s[i]=!0,t.push({contexts:n.currentContext,node:e})))})}dispose(){Object.keys(this.weightMap).forEach(e=>this.weightMap[e].forEach(e=>e.dispose()))}checkInputShapeAndType(e){Object.keys(e).forEach(t=>{const n=e[t],[r]=kN(t),s=this.graph.nodes[r];if(s.attrParams.shape&&s.attrParams.shape.value){const e=s.attrParams.shape.value;ie(e.length===n.shape.length&&n.shape.every((t,n)=>-1===e[n]||e[n]===t),()=>`The shape of dict[\'${s.name}\'] provided in model.execute(dict) must be [${e}], but was [${n.shape}]`)}s.attrParams.dtype&&s.attrParams.dtype.value&&ie(n.dtype===s.attrParams.dtype.value,()=>`The dtype of dict[\'${s.name}\'] provided in model.execute(dict) must be ${s.attrParams.dtype.value}, but was ${n.dtype}`)})}mapInputs(e){var t,n;const r={};for(const s in e){const a=null===(n=null===(t=this._signature)||void 0===t?void 0:t.inputs)||void 0===n?void 0:n[s];null!=a?r[a.name]=e[s]:r[s]=e[s]}return r}checkInputs(e){const t=Object.keys(e).filter(e=>{const[t]=kN(e);return null==this.graph.nodes[t]});if(t.length>0)throw new Error(`The dict provided in model.execute(dict) has keys: [${t}] that are not part of graph`)}mapOutputs(e){return e.map(e=>{var t,n;const r=null===(n=null===(t=this._signature)||void 0===t?void 0:t.outputs)||void 0===n?void 0:n[e];return null!=r?r.name:e},{})}checkOutputs(e){e.forEach(e=>{const[t]=kN(e);if(!this.graph.nodes[t])throw new Error(`The output \'${e}\' is not found in the graph`)})}}class TT{constructor(e={},t={}){this.hashTableNameToHandle=e,this.hashTableMap=t}addHashTable(e,t){this.hashTableNameToHandle[e]=t.handle,this.hashTableMap[t.id]=t}getHashTableHandleByName(e){return this.hashTableNameToHandle[e]}getHashTableById(e){return this.hashTableMap[e]}dispose(){for(const e in this.hashTableMap)this.hashTableMap[e].clearAndClose(),delete this.hashTableMap[e];for(const e in this.hashTableNameToHandle)this.hashTableNameToHandle[e].dispose(),delete this.hashTableNameToHandle[e]}}const ET="?tfjs-format=file",CT="model.json";class $T{get modelVersion(){return this.version}get inputNodes(){return this.executor.inputNodes}get outputNodes(){return this.executor.outputNodes}get inputs(){return this.executor.inputs}get outputs(){return this.executor.outputs}get weights(){return this.executor.weightMap}get metadata(){return this.artifacts.userDefinedMetadata}get modelSignature(){return this.signature}get modelStructuredOutputKeys(){return this.structuredOutputKeys}constructor(e,t={},n=u){this.modelUrl=e,this.loadOptions=t,this.version="n/a",this.io=n,null==t&&(this.loadOptions={}),this.resourceManager=new TT}findIOHandler(){const e=this.modelUrl;if(null!=e.load)this.handler=e;else if(null!=this.loadOptions.requestInit)this.handler=this.io.browserHTTPRequest(e,this.loadOptions);else{const t=this.io.getLoadHandlers(e,this.loadOptions);if(0===t.length)t.push(this.io.browserHTTPRequest(e,this.loadOptions));else if(t.length>1)throw new Error(`Found more than one (${t.length}) load handlers for URL \'${[e]}\'`);this.handler=t[0]}}load(){if(this.findIOHandler(),null==this.handler.load)throw new Error("Cannot proceed with model loading because the IOHandler provided does not have the `load` method implemented.");const e=this.handler.load();return He(e)?e.then(e=>null==e.getWeightStream?this.loadSync(e):this.loadStreaming(e)):this.loadSync(e)}loadSync(e){const t=this.io.decodeWeights(e.weightData,e.weightSpecs);return this.loadWithWeightMap(e,t)}async loadStreaming(e){if(null==e.getWeightStream)throw new Error("Model artifacts missing streamWeights function");const t=await Ci(e.getWeightStream(),e.weightSpecs);return this.loadWithWeightMap(e,t)}loadWithWeightMap(e,t){this.artifacts=e;const n=this.artifacts.modelTopology;let r=this.artifacts.signature;if(null!=this.artifacts.userDefinedMetadata){const e=this.artifacts.userDefinedMetadata;null!=e.signature&&(r=e.signature),null!=e.structuredOutputKeys&&(this.structuredOutputKeys=e.structuredOutputKeys)}if(this.signature=r,this.version=`${n.versions.producer}.${n.versions.minConsumer}`,this.executor=new NT(GN.Instance.transformGraph(n,this.signature)),this.executor.weightMap=this.convertTensorMapToTensorsMap(t),this.executor.resourceManager=this.resourceManager,null!=e.modelInitializer&&null!=e.modelInitializer.node){const t=GN.Instance.transformGraph(e.modelInitializer);this.initializer=new NT(t),this.initializer.weightMap=this.executor.weightMap,this.initializer.resourceManager=this.resourceManager,this.initializerSignature=e.initializerSignature}return!0}async save(e,t){if("string"==typeof e){const t=this.io.getSaveHandlers(e);if(0===t.length)throw new Error(`Cannot find any save handlers for URL \'${e}\'`);if(t.length>1)throw new Error(`Found more than one (${t.length}) save handlers for URL \'${e}\'`);e=t[0]}if(null==e.save)throw new Error("GraphModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");return e.save(this.artifacts)}addStructuredOutputNames(e){if(this.structuredOutputKeys){const t={};return(e instanceof pa?[e]:e).forEach((e,n)=>t[this.structuredOutputKeys[n]]=e),t}return e}predict(e,t){const n=this.execute(e,this.outputNodes);return this.addStructuredOutputNames(n)}async predictAsync(e,t){const n=await this.executeAsync(e,this.outputNodes);return this.addStructuredOutputNames(n)}normalizeInputs(e){var t;if(!(e instanceof pa||Array.isArray(e))){const n=null===(t=this.signature)||void 0===t?void 0:t.inputs;if(null!=n)for(const t in n){const r=n[t];null!=r.resourceId&&(e[t]=this.resourceIdToCapturedInput[r.resourceId])}return e}e=Array.isArray(e)?e:[e];const n=Object.keys(this.resourceIdToCapturedInput).length;if(e.length+n!==this.inputNodes.length)throw new Error(`Input tensor count mismatch, the graph model has ${this.inputNodes.length-n} non-resource placeholders, while there are ${e.length} input tensors provided.`);let r=0;return this.inputNodes.reduce((t,n)=>{var s,a,i;const o=null===(i=null===(a=null===(s=this.signature)||void 0===s?void 0:s.inputs)||void 0===a?void 0:a[n])||void 0===i?void 0:i.resourceId;return t[n]=null!=o?this.resourceIdToCapturedInput[o]:e[r++],t},{})}normalizeOutputs(e){return e=e||this.outputNodes,Array.isArray(e)?e:[e]}executeInitializerGraph(){return null==this.initializer?[]:null==this.initializerSignature?this.initializer.execute({},[]):this.initializer.execute({},Object.keys(this.initializerSignature.outputs))}async executeInitializerGraphAsync(){return null==this.initializer?[]:null==this.initializerSignature?this.initializer.executeAsync({},[]):this.initializer.executeAsync({},Object.keys(this.initializerSignature.outputs))}setResourceIdToCapturedInput(e){if(this.resourceIdToCapturedInput={},this.initializerSignature){const t=this.initializerSignature.outputs,n=Object.keys(t);for(let r=0;r<n.length;r++){const s=t[n[r]];this.resourceIdToCapturedInput[s.resourceId]=e[r]}}}execute(e,t){null==this.resourceIdToCapturedInput&&this.setResourceIdToCapturedInput(this.executeInitializerGraph()),e=this.normalizeInputs(e),t=this.normalizeOutputs(t);const n=this.executor.execute(e,t);return n.length>1?n:n[0]}async executeAsync(e,t){null==this.resourceIdToCapturedInput&&this.setResourceIdToCapturedInput(await this.executeInitializerGraphAsync()),e=this.normalizeInputs(e),t=this.normalizeOutputs(t);const n=await this.executor.executeAsync(e,t);return n.length>1?n:n[0]}getIntermediateTensors(){return this.executor.getIntermediateTensors()}disposeIntermediateTensors(){this.executor.disposeIntermediateTensors()}convertTensorMapToTensorsMap(e){return Object.keys(e).reduce((t,n)=>(t[n]=[e[n]],t),{})}dispose(){this.executor.dispose(),this.initializer&&(this.initializer.dispose(),this.resourceIdToCapturedInput&&li(this.resourceIdToCapturedInput)),this.resourceManager.dispose()}}async function AT(e,t={},n=u){if(null==e)throw new Error("modelUrl in loadGraphModel() cannot be null. Please provide a url or an IOHandler that loads the model");null==t&&(t={}),t.fromTFHub&&"string"==typeof e&&(e=function(e){return e.endsWith("/")||(e+="/"),`${e}${CT}${ET}`}(e));const r=new $T(e,t,n);return await r.load(),r}function RT(e){if(null==e)throw new Error("modelUrl in loadGraphModelSync() cannot be null. Please provide model artifacts or an IOHandler that loads the model");let t;if(e instanceof Array){const[n,r]=e;if(!n)throw new Error("modelJSON must be the first element of the array");if(!(r&&r instanceof ArrayBuffer))throw new Error("An ArrayBuffer of weights must be the second element of the array");if(!("modelTopology"in n))throw new Error("Model JSON is missing \'modelTopology\'");if(!("weightsManifest"in n))throw new Error("Model JSON is missing \'weightsManifest\'");t=Eu(Di(n,zi(n.weightsManifest),r))}else if("load"in e)t=e;else{if(!("modelTopology"in e&&"weightSpecs"in e&&"weightData"in e))throw new Error("Unknown model format");t=Eu(e)}const n=new $T(t);return n.load(),n}const _T="4.22.0";function MT(e,t,n=new Map,r=new Set){if(null==e)return null;if("function"==typeof Blob&&e instanceof Blob)return e.slice();if(r.has(e))throw new Error("Circular references are not supported.");if(n.has(e))return n.get(e);const s=t(e);if(s.recurse&&null!==s.value)throw new Error("A deep map function may not return both a value and recurse=true.");if(s.recurse){if(zT(e)){const s=Array.isArray(e)?[]:{};r.add(e);for(const a in e){const i=MT(e[a],t,n,r);s[a]=i}return r.delete(e),e.__proto__&&(s.__proto__=e.__proto__),s}throw new Error(`Can\'t recurse into non-iterable type: ${e}`)}return n.set(e,s.value),s.value}function FT(e,t=OT){return DT(e,t)}function DT(e,t,n=new Set){const r=e[0];if(n.has(r))throw new Error("Circular references are not supported.");const s=t(e);if(s.recurse&&null!==s.value)throw new Error("A deep zip function may not return both a value and recurse=true.");if(s.recurse){if(zT(r)){const s=Array.isArray(r)?[]:{};n.add(r);for(const a in r){const r=DT(e.map(e=>e[a]),t,n);s[a]=r}return n.delete(r),s}throw new Error(`Can\'t recurse into non-iterable type: ${r}`)}return s.value}function OT(e){return null===e?null:zT(e[0])?{value:null,recurse:!0}:{value:e,recurse:!1}}async function LT(e,t){const n=new Map;MT(e,t,n);for(const e of Array.from(n.keys())){const t=n.get(e);if(He(t)){const r=await t;n.set(e,r)}}return MT(e,t,n)}function zT(e){let t=!1;if(Xe().get("IS_BROWSER"))t=e instanceof TextDecoder;else{const{StringDecoder:r}=n(551);t=e instanceof r}return null!=e&&!ArrayBuffer.isView(e)&&(Array.isArray(e)||"object"==typeof e&&!(e instanceof pa)&&!(e instanceof Promise)&&!t)}function PT(e){return e instanceof pa?{value:e.clone(),recurse:!1}:zT(e)?{value:null,recurse:!0}:{value:e,recurse:!1}}class BT{constructor(e){if(this.capacity=e,this.begin=0,this.end=0,null==e)throw new RangeError("Can\'t create a ring buffer of unknown capacity.");if(e<1)throw new RangeError("Can\'t create ring buffer of capacity < 1.");this.data=new Array(e),this.doubledCapacity=2*e}wrap(e){for(;e<0;)e+=this.doubledCapacity;return e%this.doubledCapacity}get(e){if(e<0)throw new RangeError("Can\'t get item at a negative index.");return this.data[e%this.capacity]}set(e,t){if(e<0)throw new RangeError("Can\'t set item at a negative index.");this.data[e%this.capacity]=t}length(){let e=this.end-this.begin;return e<0&&(e=this.doubledCapacity+e),e}isFull(){return this.length()===this.capacity}isEmpty(){return 0===this.length()}push(e){if(this.isFull())throw new RangeError("Ring buffer is full.");this.set(this.end,e),this.end=this.wrap(this.end+1)}pushAll(e){for(const t of e)this.push(t)}pop(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");this.end=this.wrap(this.end-1);const e=this.get(this.end);return this.set(this.end,void 0),e}unshift(e){if(this.isFull())throw new RangeError("Ring buffer is full.");this.begin=this.wrap(this.begin-1),this.set(this.begin,e)}shift(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");const e=this.get(this.begin);return this.set(this.begin,void 0),this.begin=this.wrap(this.begin+1),e}shuffleExcise(e){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");const t=this.wrap(this.begin+e),n=this.get(t);return this.set(t,this.pop()),n}}class VT extends BT{constructor(){super(VT.INITIAL_CAPACITY)}isFull(){return!1}push(e){super.isFull()&&this.expand(),super.push(e)}unshift(e){super.isFull()&&this.expand(),super.unshift(e)}expand(){const e=2*this.capacity,t=new Array(e),n=this.length();for(let e=0;e<n;e++)t[e]=this.get(this.wrap(this.begin+e));this.data=t,this.capacity=e,this.doubledCapacity=2*this.capacity,this.begin=0,this.end=n}}function UT(e){return new HT(e)}function WT(e){return new jT(e)}VT.INITIAL_CAPACITY=32;class GT{async toArray(){const e=[];let t=await this.next();for(;!t.done;)e.push(t.value),t=await this.next();return e}async toArrayForTest(){const e=this.prefetch(100),t=[];let n=await e.next();for(;!n.done;)t.push(n.value),n=await e.next();return t}async resolveFully(){let e=await this.next();for(;!e.done;)e=await this.next()}async resolveWhile(e){let t=await this.next(),n=e(t.value);for(;!t.done&&n;)t=await this.next(),n=e(t.value)}handleErrors(e){return new QT(this,e)}filter(e){return new JT(this,e)}map(e){return new ZT(this,e)}mapAsync(e){return new eE(this,e)}serialMapAsync(e){return new eE(this,e).serial()}flatmap(e){return new nE(this,e)}async forEachAsync(e){return this.map(e).resolveFully()}async serialForEach(e){return this.serialMapAsync(e).resolveWhile(e=>!0===e)}rowMajorBatch(e,t=!0){return new YT(this,e,t)}columnMajorBatch(e,t=!0,n=OT){return this.rowMajorBatch(e,t).map(e=>FT(e,n))}concatenate(e,t){return new rE(UT([this,e]),t)}take(e){return e<0||null==e?this:new XT(this,e)}skip(e){return e<0||null==e?this:new KT(this,e)}prefetch(e){return new iE(this,e)}shuffle(e,t){return new oE(this,e,t)}serial(){return new qT(this)}}class HT extends GT{constructor(e){super(),this.items=e,this.trav=0}summary(){return`Array of ${this.items.length} items`}async next(){if(this.trav>=this.items.length)return{value:null,done:!0};const e=this.items[this.trav];return this.trav++,{value:(t=e,function(e,t){return MT(e,t)}(t,PT)),done:!1};var t}}class jT extends GT{constructor(e){super(),this.nextFn=e}summary(){return"Function call"}async next(){try{return this.nextFn()}catch(e){throw e.message=`Error thrown while iterating through a dataset: ${e.message}`,e}}}class qT extends GT{constructor(e){super(),this.upstream=e,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Serial`}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){return this.upstream.next()}}class KT extends GT{constructor(e,t){super(),this.upstream=e,this.maxCount=t,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Skip`}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){for(;this.count++<this.maxCount;){const e=await this.upstream.next();if(e.done)return e;li(e.value)}return this.upstream.next()}}class XT extends GT{constructor(e,t){super(),this.upstream=e,this.maxCount=t,this.count=0}summary(){return`${this.upstream.summary()} -> Take`}async next(){return this.count++>=this.maxCount?{value:null,done:!0}:this.upstream.next()}}class YT extends GT{constructor(e,t,n=!0){super(),this.upstream=e,this.batchSize=t,this.enableSmallLastBatch=n,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> RowMajorBatch`}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){const e=[];for(;e.length<this.batchSize;){const t=await this.upstream.next();if(t.done)return this.enableSmallLastBatch&&e.length>0?{value:e,done:!1}:{value:null,done:!0};e.push(t.value)}return{value:e,done:!1}}}class JT extends GT{constructor(e,t){super(),this.upstream=e,this.predicate=t,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Filter`}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){for(;;){const e=await this.upstream.next();if(e.done||this.predicate(e.value))return e;li(e.value)}}}class ZT extends GT{constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return`${this.upstream.summary()} -> Map`}async next(){const e=await this.upstream.next();if(e.done)return{value:null,done:!0};const t=$a(e.value),n=this.transform(e.value),r=$a(n);for(const e of t)Ca(e,r)||e.dispose();return{value:n,done:!1}}}class QT extends GT{constructor(e,t){super(),this.upstream=e,this.handler=t,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> handleErrors`}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){for(;;)try{return await this.upstream.next()}catch(e){if(!this.handler(e))return{value:null,done:!0}}}}class eE extends GT{constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return`${this.upstream.summary()} -> AsyncMap`}async next(){const e=await this.upstream.next();if(e.done)return{value:null,done:!0};const t=$a(e.value),n=await this.transform(e.value),r=$a(n);for(const e of t)Ca(e,r)||e.dispose();return{value:n,done:!1}}}class tE extends GT{constructor(){super(),this.outputQueue=new VT,this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){for(;0===this.outputQueue.length();)if(!await this.pump())return{value:null,done:!0};return{value:this.outputQueue.shift(),done:!1}}}class nE extends tE{constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return`${this.upstream.summary()} -> Flatmap`}async pump(){const e=await this.upstream.next();if(e.done)return!1;const t=$a(e.value),n=this.transform(e.value),r=$a(n);this.outputQueue.pushAll(n);for(const e of t)Ca(e,r)||e.dispose();return!0}}class rE extends GT{constructor(e,t){super(),this.baseErrorHandler=t,this.lastRead=null,this.iterator=null,this.moreIterators=e}summary(){return"TODO: fill in upstream of chained summaries -> Chained"}async next(){return this.lastRead=this.readFromChain(this.lastRead),this.lastRead}async readFromChain(e){if(await e,null==this.iterator){const e=await this.moreIterators.next();if(e.done)return{value:null,done:!0};this.iterator=e.value,null!=this.baseErrorHandler&&(this.iterator=this.iterator.handleErrors(this.baseErrorHandler))}const t=await this.iterator.next();return t.done?(this.iterator=null,this.readFromChain(e)):t}}var sE;!function(e){e[e.FAIL=0]="FAIL",e[e.SHORTEST=1]="SHORTEST",e[e.LONGEST=2]="LONGEST"}(sE||(sE={}));class aE extends GT{constructor(e,t=sE.FAIL){super(),this.iterators=e,this.mismatchMode=t,this.count=0,this.currentPromise=null}summary(){return"{TODO: fill in upstream of zip summaries} -> Zip"}async nextState(e){await e;let t=0,n=0;const r=await LT(this.iterators,function(e){return e instanceof GT?{value:e.next().then(e=>(t++,e.done&&n++,e.value)),recurse:!1}:{value:null,recurse:!0}});if(t===n)return{value:null,done:!0};if(n>0)switch(this.mismatchMode){case sE.FAIL:throw new Error(`Zipped streams should have the same length. Mismatched at element ${this.count}.`);case sE.SHORTEST:return{value:null,done:!0};case sE.LONGEST:}return this.count++,{value:r,done:!1}}async next(){return this.currentPromise=this.nextState(this.currentPromise),this.currentPromise}}class iE extends GT{constructor(e,t){super(),this.upstream=e,this.bufferSize=t,this.buffer=new BT(t)}summary(){return`${this.upstream.summary()} -> Prefetch`}refill(){for(;!this.buffer.isFull();){const e=this.upstream.next();this.buffer.push(e)}}next(){return this.refill(),this.buffer.shift()}}class oE extends iE{constructor(e,t,n){super(e,t),this.upstream=e,this.windowSize=t,this.upstreamExhausted=!1,this.random=gd.alea(n||Xs().toString()),this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}randomInt(e){return Math.floor(this.random()*e)}chooseIndex(){return this.randomInt(this.buffer.length())}async serialNext(){for(this.upstreamExhausted||this.refill();!this.buffer.isEmpty();){const e=this.chooseIndex(),t=await this.buffer.shuffleExcise(e);if(!t.done)return this.refill(),t;this.upstreamExhausted=!0}return{value:null,done:!0}}}class uE{constructor(){this.size=null}batch(e,t=!0){const n=this;let r;return ie(e>0,()=>`batchSize needs to be positive, but it is\\n      ${e}`),r=this.size===1/0||null==this.size?this.size:t?Math.ceil(this.size/e):Math.floor(this.size/e),lE(async()=>(await n.iterator()).columnMajorBatch(e,t,dE),r)}concatenate(e){const t=this;let n;return n=this.size===1/0||e.size===1/0?1/0:null!=this.size&&null!=e.size?this.size+e.size:null,lE(async()=>(await t.iterator()).concatenate(await e.iterator()),n)}filter(e){const t=this;let n;return n=this.size===1/0?1/0:null,lE(async()=>(await t.iterator()).filter(t=>ui(()=>e(t))),n)}async forEachAsync(e){return(await this.iterator()).forEachAsync(e)}map(e){const t=this;return lE(async()=>(await t.iterator()).map(t=>ui(()=>e(t))),this.size)}mapAsync(e){const t=this;return lE(async()=>(await t.iterator()).mapAsync(e),this.size)}prefetch(e){if(null==e)throw new RangeError("`Dataset.prefetch()` requires bufferSize to be specified.");const t=this;return lE(async()=>(await t.iterator()).prefetch(e),this.size)}repeat(e){const t=this;let n;return n=null!=this.size&&e>0?this.size*e:0===e?0:null!=this.size&&(void 0===e||e<0)?1/0:null,lE(async()=>{return n=WT(async()=>({value:await t.iterator(),done:!1})).take(e),new rE(n,r);var n,r},n)}skip(e){const t=this;let n;return n=null!=this.size&&e>=0&&this.size>=e?this.size-e:null!=this.size&&(this.size<e||void 0===e||e<0)?0:null,lE(async()=>(await t.iterator()).skip(e),n)}shuffle(e,t,n=!0){if(null==e||e<0)throw null==this.size?new RangeError("`Dataset.shuffle()` requires bufferSize to be specified."):new RangeError(`\\`Dataset.shuffle()\\` requires bufferSize to be specified.  If your data fits in main memory (for regular JS objects), and/or GPU memory (for \\`tf.Tensor\\`s), consider setting bufferSize to the dataset size (${this.size} elements)`);const r=this,s=gd.alea(t||Xs().toString());return lE(async()=>{let t=s.int32();return n&&(t+=s.int32()),(await r.iterator()).shuffle(e,t.toString())},this.size)}take(e){const t=this;let n;return n=null!=this.size&&this.size>e?e:null!=this.size&&this.size<=e?this.size:null,lE(async()=>(await t.iterator()).take(e),n)}async toArray(){if(this.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArray()}async toArrayForTest(){if(this.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArrayForTest()}}function lE(e,t=null){return new class extends uE{constructor(){super(...arguments),this.size=t}async iterator(){return e()}}}function cE(e){return lE(async()=>UT(e),e.length)}function hE(e){if(!zT(e))throw new Error("The argument to zip() must be an object or array.");let t;if(Array.isArray(e))for(let n=0;n<e.length;n++)t=null==t?e[n].size:Math.min(t,e[n].size);else if(e instanceof Object)for(const n in e)t=null==t?e[n].size:Math.min(t,e[n].size);return lE(async()=>function(e,t=sE.FAIL){return new aE(e,t)}(await LT(e,e=>{if(e instanceof uE)return{value:e.iterator(),recurse:!1};if(zT(e))return{value:null,recurse:!0};throw new Error("Leaves of the structure passed to zip() must be Datasets, not primitives.")}),sE.SHORTEST),t)}function dE(e){if(null===e)return null;return null==(t=e[0])||null===(n=t)||"object"!=typeof n&&"function"!=typeof n||Array.isArray(t)||"object"==typeof t&&t instanceof pa||Qs(t)?{value:function(e){if(0===e.length)throw new Error("Can\'t make a batch of zero elements.");return e[0]instanceof pa?ep(e):Ja(e)}(e),recurse:!1}:{value:null,recurse:!0};var t,n}uE.MAX_BUFFER_SIZE=1e4;class pE extends uE{constructor(e){super(),this.input=e}async iterator(){return(await this.input.iterator()).decodeUTF8().split("\\n").map(e=>(e.endsWith("\\r")&&(e=e.slice(0,-1)),e))}}const fE=\'"\',mE=Symbol("out"),gE=Symbol("field"),yE=Symbol("quote"),bE=Symbol("quoteafterquote"),xE=Symbol("quoteinquote");class wE extends uE{async columnNames(){return this.columnNamesValidated||await this.setColumnNames(),this.configuredColumnsOnly?Object.keys(this.columnConfigs):this.fullColumnNames}async setColumnNames(){const e=await this.maybeReadHeaderLine();if(!this.fullColumnNames&&!e)throw new Error("Column names must be provided if there is no header line.");this.fullColumnNames&&e&&ie(e.length===this.fullColumnNames.length,()=>"The length of provided columnNames ("+this.fullColumnNames.length.toString()+") does not match the length of the header line read from file ("+e.length.toString()+")."),this.fullColumnNames||(this.fullColumnNames=e);const t=this.fullColumnNames.reduce((e,t)=>(e[t]=e[t]+1||1,e),{}),n=Object.keys(t).filter(e=>t[e]>1);if(ie(0===n.length,()=>"Duplicate column names found: "+n.toString()),this.columnConfigs)for(const e of Object.keys(this.columnConfigs))if(-1===this.fullColumnNames.indexOf(e))throw new Error(\'The key "\'+e+\'" provided in columnConfigs does not match any of the column names (\'+this.fullColumnNames.toString()+").");this.columnNamesValidated=!0}async maybeReadHeaderLine(){if(this.hasHeader){const e=await this.base.iterator(),t=await e.next();if(t.done)throw new Error("No data was found for CSV parsing.");const n=t.value;return this.parseRow(n,!1)}return null}constructor(e,t){super(),this.input=e,this.hasHeader=!0,this.fullColumnNames=null,this.columnNamesValidated=!1,this.columnConfigs=null,this.configuredColumnsOnly=!1,this.delimiter=",",this.delimWhitespace=!1,this.base=new pE(e),t||(t={}),this.hasHeader=!1!==t.hasHeader,this.fullColumnNames=t.columnNames,this.columnConfigs=t.columnConfigs,this.configuredColumnsOnly=t.configuredColumnsOnly,t.delimWhitespace?(ie(null==t.delimiter,()=>"Delimiter should not be provided when delimWhitespace is true."),this.delimWhitespace=!0,this.delimiter=" "):this.delimiter=t.delimiter?t.delimiter:","}async iterator(){this.columnNamesValidated||await this.setColumnNames();let e=await this.base.iterator();return this.hasHeader&&(e=e.skip(1)),e.map(e=>this.makeDataElement(e))}makeDataElement(e){const t=this.parseRow(e),n={},r={};for(let s=0;s<this.fullColumnNames.length;s++){const a=this.fullColumnNames[s],i=this.columnConfigs?this.columnConfigs[a]:null;if(!this.configuredColumnsOnly||i){const o=t[s];let u=null;if(""===o)if(i&&void 0!==i.default)u=i.default;else{if(i&&(i.required||i.isLabel))throw new Error(`Required column ${a} is empty in this line: ${e}`);u=void 0}else{const e=Number(o);if(isNaN(e))u=i&&"bool"===i.dtype?this.getBoolean(o):o;else if(i&&i.dtype)switch(i.dtype){case"float32":default:u=e;break;case"int32":u=Math.floor(e);break;case"bool":u=this.getBoolean(o)}else u=e}i&&i.isLabel?r[a]=u:n[a]=u}}return 0===Object.keys(r).length?n:{xs:n,ys:r}}getBoolean(e){return"1"===e||"true"===e.toLowerCase()?1:0}parseRow(e,t=!0){const n=[];let r=0;const s=e.length;let a=mE;for(let t=0;t<s;t++)switch(a){case mE:switch(e.charAt(t)){case fE:r=t+1,a=yE;break;case this.delimiter:if(r=t+1," "===this.delimiter&&this.delimWhitespace)break;n.push(""),a=mE;break;default:a=gE,r=t}break;case gE:e.charAt(t)===this.delimiter&&(n.push(e.substring(r,t)),a=mE,r=t+1);break;case yE:e.charAt(t)===fE&&(a=bE);break;case bE:switch(e.charAt(t)){case this.delimiter:n.push(e.substring(r,t-1)),a=mE,r=t+1;break;case fE:a=yE;break;default:a=xE}break;case xE:e.charAt(t)===fE&&(a=yE)}if(a===bE?n.push(e.substring(r,s-1)):n.push(e.substring(r)),t&&n.length!==this.fullColumnNames.length)throw new Error(`Invalid row in csv file. Should have ${this.fullColumnNames.length} elements in a row, but got ${n}`);return n}}class vE extends GT{constructor(e){super(),this.microphoneConfig=e,this.isClosed=!1,this.fftSize=e.fftSize||1024;const t=Math.log2(this.fftSize);if(this.fftSize<0||t<4||t>14||!Number.isInteger(t))throw new Error(`Invalid fftSize: it must be a power of 2 between 2 to 4 and 2 to 14, but got ${this.fftSize}`);if(this.numFrames=e.numFramesPerSpectrogram||43,this.sampleRateHz=e.sampleRateHz,this.columnTruncateLength=e.columnTruncateLength||this.fftSize,this.audioTrackConstraints=e.audioTrackConstraints,this.smoothingTimeConstant=e.smoothingTimeConstant||0,this.includeSpectrogram=!1!==e.includeSpectrogram,this.includeWaveform=!0===e.includeWaveform,!this.includeSpectrogram&&!this.includeWaveform)throw new Error("Both includeSpectrogram and includeWaveform are false. At least one type of data should be returned.")}summary(){return"microphone"}static async create(e={}){if(!Xe().get("IS_BROWSER"))throw new Error("microphone API is only supported in browser environment.");const t=new vE(e);return await t.start(),t}async start(){try{this.stream=await navigator.mediaDevices.getUserMedia({audio:null==this.audioTrackConstraints||this.audioTrackConstraints,video:!1})}catch(e){throw new Error(`Error thrown while initializing video stream: ${e.message}`)}if(!this.stream)throw new Error("Could not obtain audio from microphone.");const e=window.AudioContext||window.webkitAudioContext;if(this.audioContext=new e,this.sampleRateHz){if(this.audioContext.sampleRate!==this.sampleRateHz)throw new Error(`Mismatch in sampling rate: Expected: ${this.sampleRateHz}; Actual: ${this.audioContext.sampleRate}`)}else this.sampleRateHz=this.audioContext.sampleRate;const t=this.audioContext.createMediaStreamSource(this.stream);this.analyser=this.audioContext.createAnalyser(),this.analyser.fftSize=2*this.fftSize,this.analyser.smoothingTimeConstant=this.smoothingTimeConstant,t.connect(this.analyser),this.freqData=new Float32Array(this.fftSize),this.timeData=new Float32Array(this.fftSize)}async next(){if(this.isClosed)return{value:null,done:!0};let e,t;const n=await this.getAudioData();if(this.includeSpectrogram){const t=this.flattenQueue(n.freqDataQueue);e=this.getTensorFromAudioDataArray(t,[this.numFrames,this.columnTruncateLength,1])}if(this.includeWaveform){const e=this.flattenQueue(n.timeDataQueue);t=this.getTensorFromAudioDataArray(e,[this.numFrames*this.fftSize,1])}return{value:{spectrogram:e,waveform:t},done:!1}}async capture(){return(await this.next()).value}async getAudioData(){const e=[],t=[];let n=0;return new Promise(r=>{const s=setInterval(()=>{this.includeSpectrogram&&(this.analyser.getFloatFrequencyData(this.freqData),this.freqData[0]===-1/0&&r({freqDataQueue:e,timeDataQueue:t}),e.push(this.freqData.slice(0,this.columnTruncateLength))),this.includeWaveform&&(this.analyser.getFloatTimeDomainData(this.timeData),t.push(this.timeData.slice())),++n===this.numFrames&&(clearInterval(s),r({freqDataQueue:e,timeDataQueue:t}))},this.fftSize/this.sampleRateHz*1e3)})}stop(){this.isClosed||(this.isClosed=!0,this.analyser.disconnect(),this.audioContext.close(),null!=this.stream&&this.stream.getTracks().length>0&&this.stream.getTracks()[0].stop())}toArray(){throw new Error("Can not convert infinite audio stream to array.")}getSampleRate(){return this.sampleRateHz}flattenQueue(e){const t=e[0].length,n=new Float32Array(e.length*t);return e.forEach((e,r)=>n.set(e,r*t)),n}getTensorFromAudioDataArray(e,t){const n=new Float32Array(le(t));return n.set(e,n.length-e.length),Ja(n,t)}}class kE extends GT{constructor(e,t){if(super(),this.webcamVideoElement=e,this.webcamConfig=t,this.isClosed=!0,this.resize=!1,this.needToResize())if(this.resize=!0,this.cropSize=[this.webcamConfig.resizeHeight,this.webcamConfig.resizeWidth],this.cropBoxInd=sp([0],"int32"),this.webcamConfig.centerCrop){const e=1*this.webcamConfig.resizeWidth/this.webcamVideoElement.width,t=1*this.webcamConfig.resizeHeight/this.webcamVideoElement.height,n=(1-e)/2,r=(1-t)/2,s=n+e,a=t+r;this.cropBox=ap([r,n,a,s],[1,4])}else this.cropBox=ap([0,0,1,1],[1,4])}summary(){return"webcam"}static async create(e,t={}){if(!Xe().get("IS_BROWSER"))throw new Error("tf.data.webcam is only supported in browser environment.");if(!e){if(e=document.createElement("video"),!t.resizeWidth||!t.resizeHeight)throw new Error("Please provide webcam video element, or resizeWidth and resizeHeight to create a hidden video element.");e.width=t.resizeWidth,e.height=t.resizeHeight}const n=new kE(e,t);return await n.start(),n}async start(){this.webcamConfig.facingMode&&ie("user"===this.webcamConfig.facingMode||"environment"===this.webcamConfig.facingMode,()=>`Invalid webcam facing mode: ${this.webcamConfig.facingMode}. Please provide \'user\' or \'environment\'`);try{this.stream=await navigator.mediaDevices.getUserMedia({video:{deviceId:this.webcamConfig.deviceId,facingMode:this.webcamConfig.facingMode?this.webcamConfig.facingMode:"user",width:this.webcamVideoElement.width,height:this.webcamVideoElement.height}})}catch(e){throw e.message=`Error thrown while initializing video stream: ${e.message}`,e}if(!this.stream)throw new Error("Could not obtain video from webcam.");try{this.webcamVideoElement.srcObject=this.stream}catch(e){console.log(e),this.webcamVideoElement.src=window.URL.createObjectURL(this.stream)}return this.webcamVideoElement.play(),this.isClosed=!1,new Promise(e=>{this.webcamVideoElement.onloadedmetadata=()=>{e()}})}async next(){if(this.isClosed)return{value:null,done:!0};let e;try{e=Hu(this.webcamVideoElement)}catch(e){throw new Error(`Error thrown converting video to pixels: ${JSON.stringify(e)}`)}if(!this.resize)return{value:e,done:!1};try{return{value:this.cropAndResizeFrame(e),done:!1}}catch(e){throw new Error(`Error thrown cropping the video: ${e.message}`)}finally{e.dispose()}}needToResize(){return!(!this.webcamConfig.resizeWidth||!this.webcamConfig.resizeHeight||this.webcamVideoElement.width===this.webcamConfig.resizeWidth&&this.webcamVideoElement.height===this.webcamConfig.resizeHeight)}cropAndResizeFrame(e){return ui(()=>{const t=dh(Io(e,"float32"),0);let n;n=Df.cropAndResize(t,this.cropBox,this.cropBoxInd,this.cropSize,"bilinear");const r=n.shape;return sc(n,r.slice(1))})}async capture(){return(await this.next()).value}stop(){this.stream.getTracks().forEach(e=>e.stop());try{this.webcamVideoElement.srcObject=null}catch(e){console.log(e),this.webcamVideoElement.src=null}this.isClosed=!0}toArray(){throw new Error("Can not convert infinite video stream to array.")}}class IE{}class SE extends GT{split(e){return new NE(this,e)}}class NE extends SE{constructor(e,t){super(),this.upstream=e,this.impl=new TE(e,t)}summary(){return this.impl.summary()}async next(){return this.impl.next()}}class TE extends tE{constructor(e,t){super(),this.upstream=e,this.separator=t,this.carryover=""}summary(){return`${this.upstream.summary()} -> Split(\'${this.separator}\')`}async pump(){const e=await this.upstream.next();if(e.done)return""!==this.carryover&&(this.outputQueue.push(this.carryover),this.carryover="",!0);const t=e.value.split(this.separator);t[0]=this.carryover+t[0];for(const e of t.slice(0,-1))this.outputQueue.push(e);return this.carryover=t[t.length-1],!0}}class EE extends GT{decodeUTF8(){return new CE(this)}}class CE extends SE{constructor(e){super(),this.upstream=e,this.impl=new $E(e)}summary(){return this.impl.summary()}async next(){return this.impl.next()}}class $E extends tE{constructor(e){if(super(),this.upstream=e,Xe().get("IS_BROWSER"))this.decoder=new TextDecoder("utf-8");else{const{StringDecoder:e}=n(530);this.decoder=new e("utf8")}}summary(){return`${this.upstream.summary()} -> Utf8`}async pump(){const e=await this.upstream.next();let t,n;return!e.done&&(t=e.value,n=Xe().get("IS_BROWSER")?this.decoder.decode(t,{stream:!0}):this.decoder.write(Buffer.from(t.buffer)),this.outputQueue.push(n),!0)}}class AE extends EE{constructor(e,t={}){super(),this.file=e,this.options=t,ie(e instanceof Uint8Array||!!Xe().get("IS_BROWSER")&&(e instanceof File||e instanceof Blob),()=>"FileChunkIterator only supports File, Blob and Uint8Array right now."),this.offset=t.offset||0,this.chunkSize=t.chunkSize||1048576}summary(){return`FileChunks ${this.file}`}async next(){if(this.offset>=(this.file instanceof Uint8Array?this.file.byteLength:this.file.size))return{value:null,done:!0};const e=new Promise((e,t)=>{const n=this.offset+this.chunkSize;if(this.file instanceof Uint8Array)e(new Uint8Array(this.file.slice(this.offset,n)));else{const r=new FileReader;r.onload=n=>{let s=r.result;if(s instanceof ArrayBuffer&&(s=new Uint8Array(s)),!(s instanceof Uint8Array))return t(new TypeError("FileReader returned unknown type."));e(s)},r.onabort=e=>t(new Error("Aborted")),r.onerror=e=>t(new Error(e.type));const s=this.file.slice(this.offset,n);r.readAsArrayBuffer(s)}this.offset=n});return{value:await e,done:!1}}}function RE(e){return"string"==typeof e&&"file://"===e.slice(0,7)}class _E extends IE{constructor(e,t={}){super(),this.input=e,this.options=t}async iterator(){if(RE(this.input)&&Xe().get("IS_NODE")){const e=n(108);this.input=e.readFileSync(this.input.slice(7))}return new AE(this.input,this.options)}}class ME extends IE{constructor(e,t={}){super(),this.url=e,this.fileOptions=t}async iterator(){return RE(this.url)?new _E(this.url,this.fileOptions).iterator():async function(e,t={},n){let r,s;var a;"string"==typeof e?r=e:(r=e.url,s={method:(a=e).method,headers:a.headers,body:a.body,mode:a.mode,credentials:a.credentials,cache:a.cache,redirect:a.redirect,referrer:a.referrer,integrity:a.integrity});const i=await(n||Ys)(r,s);if(i.ok){const e=new Uint8Array(await i.arrayBuffer());return new AE(e,t)}throw new Error(i.statusText)}(this.url,this.fileOptions)}}function FE(e,t={}){return new wE(new ME(e),t)}function DE(e){const t=WT(e);return lE(async()=>t)}function OE(e){return lE(async()=>{const t=await e();return WT(()=>t.next())})}async function LE(e,t){return kE.create(e,t)}async function zE(e){return vE.create(e)}const PE="4.22.0";function BE(e,t){Array.isArray(e)||(e=[e]),e.forEach(e=>{null!=e&&ie("complex64"!==e.dtype,()=>`${t} does not support complex64 tensors in the CPU backend.`)})}const VE=yp;class UE extends Y{nextDataId(){return UE.nextDataId++}constructor(){super(),this.blockSize=48,this.firstUse=!0,this.data=new X(this,ai())}write(e,t,n){this.firstUse&&(this.firstUse=!1,Xe().get("IS_NODE")&&xs("\\n============================\\nHi, looks like you are running TensorFlow.js in Node.js. To speed things up dramatically, install our node backend, visit https://github.com/tensorflow/tfjs-node for more details. \\n============================"));const r={id:this.nextDataId()};return this.data.set(r,{values:e,dtype:n,refCount:1}),r}makeTensorInfo(e,t,n){let r;if("string"===t&&null!=n&&n.length>0&&$e(n[0])){const s=n.map(e=>Js(e));r=this.write(s,e,t)}else r=this.write(n,e,t);return{dataId:r,shape:e,dtype:t}}refCount(e){return this.data.has(e)?this.data.get(e).refCount:0}incRef(e){this.data.get(e).refCount++}decRef(e){this.data.has(e)&&this.data.get(e).refCount--}move(e,t,n,r,s){this.data.set(e,{values:t,dtype:r,refCount:s})}numDataIds(){return this.data.numDataIds()}async read(e){return this.readSync(e)}readSync(e){const{dtype:t,complexTensorInfos:n}=this.data.get(e);return"complex64"===t?dm(this.readSync(n.real.dataId),this.readSync(n.imag.dataId)):ze(this.data.get(e).values,t)}bufferSync(e){const t=this.readSync(e.dataId);if("string"===e.dtype)try{const n=t.map(e=>Zs(e));return ko(e.shape,e.dtype,n)}catch(e){throw new Error("Failed to decode encoded string bytes into utf-8")}return ko(e.shape,e.dtype,t)}makeOutput(e,t,n){return ai().makeTensorFromTensorInfo(this.makeTensorInfo(t,n,e),this)}disposeData(e,t=!1){if(this.data.has(e)){if(this.data.get(e).refCount--,!t&&this.data.get(e).refCount>0)return!1;const{complexTensorInfos:n}=this.data.get(e);null!=n&&(this.disposeData(n.real.dataId,!0),this.disposeData(n.imag.dataId,!0)),this.data.delete(e)}return!0}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}async time(e){const t=Xs();return e(),{kernelMs:Xs()-t}}memory(){return{unreliable:!0,reasons:["The reported memory is an upper bound. Due to automatic garbage collection, the true allocated memory may be less."]}}where(e){BE([e],"where");const t=this.readSync(e.dataId);return VE(e.shape,t)}dispose(){}floatPrecision(){return 32}epsilon(){return super.epsilon()}}function WE(e){const t=new Float32Array(e.length);for(let n=0;n<e.length;++n)t[n]=Math.abs(e[n]);return t}UE.nextDataId=0;const GE={kernelName:et,backendName:"cpu",kernelFunc:e=>{const{x:t}=e.inputs,n=e.backend;BE(t,"abs");let r=new Float32Array(le(t.shape));return r=WE(n.data.get(t.dataId).values),n.makeOutput(r,t.shape,t.dtype)}};function HE(e){return(t,n,r,s,a)=>{const i=ru(t,n),o=i.length,u=De(i),l=ke(a,le(i)),c=t.length,h=n.length,d=De(t),p=De(n),f=tu(t,i),m=tu(n,i);if(f.length+m.length===0)for(let t=0;t<l.length;++t)l[t]=e(r[t%r.length],s[t%s.length]);else for(let t=0;t<l.length;++t){const n=Ge(t,o,u),a=n.slice(-c);f.forEach(e=>a[e]=0);const i=We(a,c,d),g=n.slice(-h);m.forEach(e=>g[e]=0);const y=We(g,h,p);l[t]=e(r[i],s[y])}return[l,i]}}function jE(e){const{inputs:t,backend:n}=e,{real:r,imag:s}=t,a=n.data.get(r.dataId).values,i=n.data.get(s.dataId).values,o=n.makeTensorInfo(r.shape,"complex64");return n.data.get(o.dataId).complexTensorInfos={real:n.makeTensorInfo(r.shape,"float32",a),imag:n.makeTensorInfo(s.shape,"float32",i)},o}const qE={kernelName:Et,backendName:"cpu",kernelFunc:jE};function KE(e,t,n="float32"){if("complex64"===n)return jE({inputs:{real:KE(e,t,"float32"),imag:KE(e,t,"float32")},backend:e});const r=Be(le(t),n);return e.makeTensorInfo(t,n,r)}function XE(e){const{inputs:t,backend:n}=e,{x:r}=t;return n.incRef(r.dataId),{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}const YE={kernelName:yn,backendName:"cpu",kernelFunc:XE};function JE(e){const{inputs:t,backend:n}=e,{input:r}=t,s=n.data.get(r.dataId).complexTensorInfos.real,a=n.data.get(s.dataId).values;return n.makeTensorInfo(s.shape,s.dtype,a)}const ZE={kernelName:mr,backendName:"cpu",kernelFunc:JE};function QE(e,t,n,r){if("int32"===r)return[t,"int32",Int32Array.from(e)];if("bool"===r){const r=Ks([0],n),[s,a]=HE((e,t)=>e!==t?1:0)(t,[],e,r,"bool");return[a,"bool",s]}throw new Error(`Error in Cast: failed to cast ${n} to ${r}`)}function eC(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{dtype:a}=r;if("complex64"===a){if("complex64"===s.dtype)return XE({inputs:{x:s},backend:n});const e=KE(n,s.shape,s.dtype),t=eC({inputs:{x:s},backend:n,attrs:{dtype:"float32"}}),r=jE({inputs:{real:t,imag:e},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),r}if("complex64"===s.dtype){const e=JE({inputs:{input:s},backend:n}),t=eC({inputs:{x:e},backend:n,attrs:{dtype:a}});return n.disposeIntermediateTensorInfo(e),t}if(!Te(s.dtype,a)){const e=XE({inputs:{x:s},backend:n});return{dataId:e.dataId,shape:e.shape,dtype:a}}const i=n.data.get(s.dataId).values,[o,u,l]=QE(i,s.shape,s.dtype,a);return n.makeTensorInfo(o,u,l)}const tC={kernelName:St,backendName:"cpu",kernelFunc:eC};function nC(e,t,n,r){return null==n?({inputs:n,backend:s})=>{const{a,b:i}=n,o=s;BE([a,i],e);const u=o.data.get(a.dataId).values,l=o.data.get(i.dataId).values,c="string"===a.dtype?jm(u):u,h="string"===a.dtype?jm(l):l,d=r||a.dtype,[p,f]=t(a.shape,i.shape,c,h,d);return o.makeTensorInfo(f,d,p)}:({inputs:e,backend:s})=>{const{a,b:i}=e,o=s;if("complex64"===a.dtype||"complex64"===i.dtype){const e=eC({inputs:{x:a},backend:o,attrs:{dtype:"complex64"}}),t=o.data.get(e.dataId),r=t.complexTensorInfos.real,s=t.complexTensorInfos.imag,u=o.data.get(r.dataId).values,l=o.data.get(s.dataId).values,c=eC({inputs:{x:i},backend:o,attrs:{dtype:"complex64"}}),h=o.data.get(c.dataId),d=h.complexTensorInfos.real,p=h.complexTensorInfos.imag,f=o.data.get(d.dataId).values,m=o.data.get(p.dataId).values,[g,y,b]=n(a.shape,i.shape,u,l,f,m),x=o.makeTensorInfo(b,"float32",g),w=o.makeTensorInfo(b,"float32",y),v=jE({inputs:{real:x,imag:w},backend:o});return o.disposeIntermediateTensorInfo(e),o.disposeIntermediateTensorInfo(c),o.disposeIntermediateTensorInfo(x),o.disposeIntermediateTensorInfo(w),v}{const e=o.data.get(a.dataId).values,n=o.data.get(i.dataId).values,s=r||a.dtype,[u,l]=t(a.shape,i.shape,e,n,s);return o.makeTensorInfo(l,s,u)}}}function rC(e){return(t,n,r,s,a,i)=>{const o=ru(t,n),u=le(o),l=o.length,c=De(o),h=ke("float32",u),d=ke("float32",u),p=tu(t,o),f=tu(n,o),m=dm(r,s),g=dm(a,i),y=t.length,b=De(t),x=n.length,w=De(n);if(p.length+f.length===0)for(let t=0;t<h.length;t++){const n=t%m.length,r=t%g.length,s=e(m[2*n],m[2*n+1],g[2*r],g[2*r+1]);h[t]=s.real,d[t]=s.imag}else for(let t=0;t<h.length;t++){const n=Ge(t,l,c),r=n.slice(-y);p.forEach(e=>r[e]=0);const s=We(r,y,b),a=n.slice(-x);f.forEach(e=>a[e]=0);const i=We(a,x,w),o=e(m[2*s],m[2*s+1],g[2*i],g[2*i+1]);h[t]=o.real,d[t]=o.imag}return[h,d,o]}}const sC=HE((e,t)=>e+t),aC=rC((e,t,n,r)=>({real:e+n,imag:t+r})),iC=nC(rt,sC,aC),oC={kernelName:rt,backendName:"cpu",kernelFunc:iC};function uC(e,t,n,r,s){const a=le(r),i=Be(s,n);for(let n=0;n<e.length;n++){const r=e[n];if(r<0)throw new Error("Input x must be non-negative!");r>=s||(i[r]+=a>0?t[n]:1)}return i}function lC(e,t,n,r=!1){const s=e.shape[0],a=e.shape[1],i=ko([s,n],t.dtype);for(let o=0;o<s;o++)for(let s=0;s<a;s++){const a=e.get(o,s);if(a<0)throw new Error("Input x must be non-negative!");a>=n||(r?i.set(1,o,a):t.size>0?i.set(i.get(o,a)+t.get(o,s),o,a):i.set(i.get(o,a)+1,o,a))}return i}const cC=HE((e,t)=>e&t),hC=nC(vt,cC),dC={kernelName:vt,backendName:"cpu",kernelFunc:hC};function pC(e){return(t,n,r)=>{const s=Ie(n,t.length);for(let n=0;n<t.length;++n)s[n]=e(t[n],r);return s}}function fC(e,t,n){return mC(e,pC(t),n)}function mC(e,t,n){return({inputs:r,attrs:s,backend:a})=>{const{x:i}=r;BE(i,e);const o=a,u=o.data.get(i.dataId).values;let l;if("string"===i.dtype){if(!Array.isArray(u))throw new Error("String tensor\'s value was not an instance of Array");l=jm(u)}else l=u;const c=n||i.dtype,h=t(l,c,s);return o.makeTensorInfo(i.shape,c,h)}}const gC=pC(e=>Math.ceil(e)),yC=mC(Nt,gC),bC={kernelName:Nt,backendName:"cpu",kernelFunc:yC};function xC(e,t,n,r){const s=Ie(n,le(t));if(r&&"string"!==n){let t=0;e.forEach(e=>{const n=le(e.shape);s.set(e.vals,t),t+=n})}else{let r=0;e.forEach(e=>{const a="string"===n?jm(e.vals):e.vals;let i=0;for(let n=0;n<e.shape[0];++n){const o=n*t[1]+r;for(let t=0;t<e.shape[1];++t)s[o+t]=a[i++]}r+=e.shape[1]})}return s}const wC=HE((e,t)=>e===t?1:0),vC=nC(nn,wC,null,"bool"),kC={kernelName:nn,backendName:"cpu",kernelFunc:vC},IC=pC(e=>Math.exp(e)),SC=mC(rn,IC,"float32"),NC={kernelName:rn,backendName:"cpu",kernelFunc:SC},TC=pC(e=>Math.expm1(e)),EC=mC(an,TC),CC={kernelName:an,backendName:"cpu",kernelFunc:EC},$C=pC(e=>Math.floor(e)),AC=mC(cn,$C),RC={kernelName:cn,backendName:"cpu",kernelFunc:AC},_C=HE((e,t)=>Math.floor(e/t)),MC=nC(hn,_C,null,"int32"),FC={kernelName:hn,backendName:"cpu",kernelFunc:MC};function DC(e,t,n,r,s,a,i,o,u){const l=ko([r,a],n);for(let n=0;n<r;n++){const r=[];let c=0;for(let t=0;t<s;t++){const a=e[n*s+t];c+=a*i[t],r.push(a)}if(c<0||c>=u/a)throw new Error(`Invalid indices: ${r} does not index into ${o}`);for(let e=0;e<a;e++)l.values[n*a+e]=t.get(...t.indexToLoc(c*a+e))}return l}function OC(e,t,n){const r=ko(n,e.dtype);for(let n=0;n<r.size;++n){const s=r.indexToLoc(n).slice(),a=s[0],i=s[2],o=t.locToIndex([a,i]);s[2]=t.values[o];const u=e.locToIndex(s);0<=u&&u<e.values.length&&(r.values[n]=e.values[u])}return r}const LC=HE((e,t)=>e>t?1:0),zC=nC(mn,LC,null,"bool"),PC={kernelName:mn,backendName:"cpu",kernelFunc:zC},BC=HE((e,t)=>e>=t?1:0),VC=nC(gn,BC,null,"bool"),UC={kernelName:gn,backendName:"cpu",kernelFunc:VC},WC=HE((e,t)=>e<t?1:0),GC=nC(Sn,WC,null,"bool"),HC={kernelName:Sn,backendName:"cpu",kernelFunc:GC},jC=HE((e,t)=>e<=t?1:0),qC=nC(Nn,jC,null,"bool"),KC={kernelName:Nn,backendName:"cpu",kernelFunc:qC};function XC(e,t,n){const r=(t-e)/(n-1),s=Be(n,"float32");s[0]=e;for(let e=1;e<s.length;e++)s[e]=s[e-1]+r;return s}const YC=pC(e=>Math.log(e)),JC=mC(En,YC),ZC={kernelName:En,backendName:"cpu",kernelFunc:JC};function QC(e,t,n,r){const s=ke(r,le(n));for(let n=0;n<s.length;++n){const r=n*t;let a=e[r];for(let n=0;n<t;++n){const t=e[r+n];(Number.isNaN(t)||t>a)&&(a=t)}s[n]=a}return s}const e$=HE((e,t)=>Math.max(e,t)),t$=nC(Pn,e$),n$={kernelName:Pn,backendName:"cpu",kernelFunc:t$},r$=HE((e,t)=>Math.min(e,t)),s$=nC(qn,r$),a$={kernelName:qn,backendName:"cpu",kernelFunc:s$},i$=HE((e,t)=>e*t),o$=rC((e,t,n,r)=>({real:e*n-t*r,imag:e*r+t*n})),u$=nC(Jn,i$,o$),l$={kernelName:Jn,backendName:"cpu",kernelFunc:u$};function c$(e,t,n){const r=qs(-1,n);return i$([],t,r,e,n)}const h$={kernelName:Zn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r}=t;BE(r,"neg");const s=n.data.get(r.dataId).values,[a,i]=c$(s,r.shape,r.dtype);return n.makeTensorInfo(i,r.dtype,a)}},d$=HE((e,t)=>e!==t?1:0),p$=nC(Qn,d$,null,"bool"),f$={kernelName:Qn,backendName:"cpu",kernelFunc:p$};function m$(e,t,n,r,s){const a=t.length,i=le(t),o=De(t),u=De(s),l=ke(n,le(s));for(let t=0;t<i;++t){const n=Ge(t,a,o),s=new Array(n.length);for(let e=0;e<s.length;e++)s[e]=n[r[e]];l[We(s,a,u)]=e[t]}return l}function g$(e){const{inputs:t,attrs:n,backend:r}=e,{x:s}=t,{perm:a}=n;BE(s,"transpose");const i=s.shape.length,o=new Array(i);for(let e=0;e<o.length;e++)o[e]=s.shape[a[e]];const u=m$(r.data.get(s.dataId).values,s.shape,s.dtype,a,o);return{dataId:r.write(u,o,s.dtype),shape:o,dtype:s.dtype}}const y$={kernelName:os,backendName:"cpu",kernelFunc:g$};function b$(e,t,n,r){const[s,a]=Qc(e,r),i=ka(t,"int32"),o=Be(le(s),i),u=le(a);for(let e=0;e<o.length;++e){const t=e*u;let r=1;for(let e=0;e<u;++e)r*=n[t+e];o[e]=r}return{outVals:o,outShape:s,outDtype:i}}const x$={kernelName:cr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a,keepDims:i}=r;BE(s,"prod");const o=s.shape.length,u=we(a,s.shape),l=nh(u,o);let c=u,h=s;const d=[];null!=l&&(h=g$({inputs:{x:s},backend:n,attrs:{perm:l}}),d.push(h),c=sh(c.length,o));const p=n.data.get(h.dataId).values,{outVals:f,outShape:m,outDtype:g}=b$(h.shape,h.dtype,p,c);let y=m;return i&&(y=eh(m,u)),d.forEach(e=>n.disposeIntermediateTensorInfo(e)),n.makeTensorInfo(y,g,f)}};function w$(e,t){const n=e.slice(0,t);for(;n.length<t;)n.push(1);for(let r=t;r<e.length;r++)n[t-1]*=e[r];return n}function v$(e,t,n,r,s,a,i,o){if(0===e.length)throw new Error("paramsNestedSplits must be non empty");if(0===t[0].length)throw new Error("Split tensors must not be scalars");if(function(e,t,n){e.forEach((e,r)=>{if(e<0||e>=n){const s=Ge(r,t.length,De(t)).join(",");throw new Error(`indices[${s}] = ${e} is not in [0, ${n})`)}})}(a,i,t[0][0]-1),0===r.length)throw new Error("params.rank must be nonzero");const u=r[0],{outSplits:l,valueSlices:c,numValues:h}=function(e,t,n,r){const s=[];let a=0;const i=t.length-1+n.length,o=new Array(i).fill(null).map(()=>[0]);!function(e,t){for(let n=0;n<e.length;++n){const r=e[n],s=n===e.length-1?t:e[n+1].length;if(0===r.length)throw new Error("Ragged splits may not be empty");if(r[0]<0)throw new Error("Ragged splits must be non-negative");if(r[r.length-1]>s)throw new Error("Ragged splits must not point past values");for(let e=1;e<r.length;++e)if(r[e-1]>r[e])throw new Error("Ragged splits must be sorted in ascending order")}}(n,r);let u=1;for(let e=0;e<t.length-1;++e){u*=t[e];const n=t[e+1];for(let t=1;t<u+1;++t)o[e].push(t*n)}for(let r=0;r<e.length;++r){let i=e[r],u=e[r]+1;for(let e=0;e<n.length;++e){const r=n[e],s=e+t.length-1;if(s>=0){const e=o[s],t=e[e.length-1]-r[i];for(let e=i;e<u;++e)o[s].push(r[e+1]+t)}i=r[i],u=r[u]}u!==i&&(s.push([i,u]),a+=u-i)}return{outSplits:o,valueSlices:s,numValues:a}}(a,i,e,u),d=function(e){const t=[];for(let n=0;n<e.length;++n){const r=Ie("int32",e[n].length);t.push(r),e[n].forEach((e,t)=>r[t]=e)}return t}(l),p=function(e,t,n,r,s){const a=t.slice();a[0]=s;const i=Ie(n,le(a)),o=e.length;return function(e,t,n,r,s,a){const i=w$(t,2)[1],o=w$(a,2)[1];let u=0;for(const t of n)for(let n=t[0];n<t[1];++n){for(let t=0;t<r;++t)s[u*o+t]=e[n*i+t];++u}}(e,t,r,0===o?0:o/t[0],i,a),[i,a]}(n,r,s,c,h);return[d,p[0],p[1]]}const k$=2147483647;function I$(e,t,n,r,s,a,i){if(t.length>1)throw new Error("starts must be a scalar or vector");if(s.length>1)throw new Error("limits must be a scalar or vector");if(i.length>1)throw new Error("deltas must be a scalar or vector");const o=0===t.length,u=0===s.length,l=0===i.length,c=[];o||c.push(t[0]),u||c.push(s[0]),l||c.push(i[0]);for(let e=1;e<c.length;++e)if(c[e]!==c[e-1])throw new Error("starts, limits, and deltas must have the same shape");const h=0===c.length?1:c[0],d=Ie("int32",h+1);d[0]=0;for(let t=0;t<h;++t){const n=o?e[0]:e[t],s=u?r[0]:r[t],i=l?a[0]:a[t];if(0===i)throw new Error("Requires delta != 0");let c;if(i>0&&s<n||i<0&&s>n)c=0;else if(c=Math.ceil(Math.abs((s-n)/i)),c>k$)throw new Error(`Requires ((limit - start) / delta) <= ${k$}`);d[t+1]=d[t]+c}const p=Ie(n,d[h]);let f=0;for(let t=0;t<h;++t){const n=d[t+1]-d[t];let r=o?e[0]:e[t];const s=l?a[0]:a[t];for(let e=0;e<n;++e)p[f++]=r,r+=s}return[d,p]}var S$=Hf;class N${constructor(e,t,n,r,s,a,i,o,u,l){this.shape=e,this.shapeShape=t,this.values=n,this.valuesShape=r,this.valuesDType=s,this.defaultValue=a,this.defaultValueShape=i,this.rowPartitionValues=o,this.rowPartitionValuesShapes=u,this.rowPartitionTypes=qf(l),this.raggedRank=Kf(this.rowPartitionTypes)}getRowPartitionTypeByDimension(e){return this.rowPartitionTypes[0]===S$.FIRST_DIM_SIZE?this.rowPartitionTypes[e+1]:this.rowPartitionTypes[e]}getRowPartitionTensor(e){return this.rowPartitionTypes[0]===S$.FIRST_DIM_SIZE?this.rowPartitionValues[e+1]:this.rowPartitionValues[e]}getMaxWidth(e){const t=this.getRowPartitionTensor(e-1);switch(this.getRowPartitionTypeByDimension(e-1)){case S$.VALUE_ROWIDS:return N$.getMaxWidthValueRowID(t);case S$.ROW_SPLITS:return N$.getMaxWidthRowSplit(t);default:throw new Error(`Cannot handle partition type ${S$[this.getRowPartitionTypeByDimension(e-1)]}`)}}static getMaxWidthRowSplit(e){const t=e.length;if(0===t||1===t)return 0;let n=0;for(let r=0;r<t-1;++r){const t=e[r+1]-e[r];t>n&&(n=t)}return n}static getMaxWidthValueRowID(e){const t=e.length;if(0===t)return 0;let n=0,r=e[0],s=0;for(let a=1;a<t;++a){const t=e[a];t!==r&&(r=t,s=Math.max(a-n,s),n=a)}return Math.max(t-n,s)}tensorShapeFromTensor(e,t,n=!0){if(0===t.length){if(-1===e[0])return[];throw new Error("The only valid scalar shape tensor is the fully unknown shape specified as -1.")}return E$(e,n)}calculateOutputSize(e){const t=this.valuesShape;Xf(this.defaultValueShape,t);const n=this.tensorShapeFromTensor(this.shape,this.shapeShape),r=jf(this.raggedRank,n,t);r[0]<0&&(r[0]=e);for(let e=1;e<=this.raggedRank;++e)r[e]<0&&(r[e]=this.getMaxWidth(e));return r}calculateFirstParentOutputIndex(e,t,n){const r=Math.min(e,n),s=[];let a=0;for(let e=0;e<r;++e,a+=t)s.push(a);for(let t=r;t<e;++t)s.push(-1);return ie(s.length===e,()=>"Final length of result must be equal to firstDimension."),s}calculateOutputIndexRowSplit(e,t,n,r){const s=e.length,a=[];for(let i=0;i<s-1;++i){const s=e[i+1]-e[i];let o=Math.min(r,s),u=t[i];-1===u&&(o=0);for(let e=0;e<o;++e)a.push(u),u+=n;for(let e=0;e<s-o;++e)a.push(-1)}if(s>0&&a.length!==e[s-1])throw new Error("Invalid row split size.");return a}calculateOutputIndexValueRowID(e,t,n,r){const s=e.length,a=[];if(0===s)return[];let i=0,o=e[0];if(o>=t.length)throw new Error(`Got currentValueRowId=${o}, which is not less than ${t.length}`);let u=t[o];a.push(u);for(let l=1;l<s;++l){const s=e[l];if(s===o)u>=0&&(++i,i<r?u+=n:u=-1);else{if(i=0,o=s,s>=t.length)throw new Error(`Got nextValueRowId=${s} which is not less than ${t.length}`);u=t[s]}a.push(u)}if(a.length!==e.length)throw new Error("Invalid row ids.");return a}calculateOutputIndex(e,t,n,r){const s=this.getRowPartitionTensor(e),a=this.getRowPartitionTypeByDimension(e);switch(a){case S$.VALUE_ROWIDS:return this.calculateOutputIndexValueRowID(s,t,n,r);case S$.ROW_SPLITS:if(s.length-1>t.length)throw new Error(`Row partition size is greater than output size: ${s.length-1} > ${t.length}`);return this.calculateOutputIndexRowSplit(s,t,n,r);default:throw new Error(`Unsupported partition type: ${S$[a]}`)}}getFirstDimensionSize(){const e=this.rowPartitionValues[0];if(0===this.rowPartitionTypes.length)throw new Error("No row_partition_types given.");const t=this.rowPartitionTypes[0];switch(t){case S$.FIRST_DIM_SIZE:return e[0];case S$.VALUE_ROWIDS:throw new Error("Cannot handle VALUE_ROWIDS in first dimension.");case S$.ROW_SPLITS:return this.rowPartitionValuesShapes[0][0]-1;default:throw new Error(`Cannot handle type ${S$[t]}`)}}compute(){if(this.rowPartitionValues[0].length<=0)throw new Error("Invalid first partition input. Tensor requires at least one element.");const e=this.getFirstDimensionSize(),t=this.calculateOutputSize(e),n=new Array(this.raggedRank+1);n[n.length-1]=1;for(let e=n.length-2;e>=0;--e)n[e]=n[e+1]*t[e+1];const r=E$(t,!1),s=Ie(this.valuesDType,le(r));if(n[0]*t[0]>0){let a=this.calculateFirstParentOutputIndex(e,n[0],t[0]);for(let e=1;e<=this.raggedRank;++e)a=this.calculateOutputIndex(e-1,a,n[e],t[e]);this.setOutput(this.raggedRank,a,s,r)}return[r,s]}setOutput(e,t,n,r){if(0===n.length)return;const s=this.values,a=n;let i=r.slice();i=i.slice(e+1);const o=le(i),u=t.length;let l=this.defaultValue;if(l.length!==o&&1!==l.length){const e=this.defaultValueShape;ui(()=>{const t=sc(l,e),n=wc(t,i);l=n.dataSync()})}let c=0,h=0,d=0;for(let e=0;e<=u;++e){let r=e<u?t[e]:-1;if(r!==d){if(h<d){const e=s.subarray(c*o);T$(a.subarray(h*o),e,(d-h)*o)}if(e>=u){const e=n.length;r=Math.floor(e/o)}if(r>d)if(1===this.defaultValue.length)a.subarray(d*o,r*o).fill(this.defaultValue[0]),d=r;else for(;r>d;)T$(a.slice(d*o),l,o),++d;r<0?(c=e+1,h=d):(c=e,h=d,d=h+1)}else++d}}}function T$(e,t,n){for(let r=0;r<n;r++)e[r]=t[r]}function E$(e,t){const n=[];for(let r of e){if(r<0){if(!t)throw new Error(`Dimension ${r} must be >= 0`);if(r<-1)throw new Error(`Dimension ${r} must be >= -1`);r=-1}n.push(r)}return n}function C$(e,t,n,r,s,a,i,o,u,l){return new N$(e,t,n,r,s,a,i,o,u,l).compute()}function $$(e,t,n,r){if(e===t||e<t&&n<0||t<e&&n>1)return Be(0,r);const s=Be(Math.abs(Math.ceil((t-e)/n)),r);t<e&&1===n&&(n=-1),s[0]=e;for(let e=1;e<s.length;e++)s[e]=s[e-1]+n;return s}const A$=pC(e=>1/Math.sqrt(e)),R$=mC(Tr,A$),_$={kernelName:Tr,backendName:"cpu",kernelFunc:R$};function M$(e,t,n,r,s,a,i,o,u,l){const c=[r/s,s],h=e.values,d=t.values;if(0===r)return ko(n,t.dtype);const p=u instanceof la?u:ko(c,t.dtype);"string"==typeof u||"number"==typeof u?p.values.fill(u):"boolean"==typeof u&&p.values.fill(+u);for(let e=0;e<a;e++){const a=[];let u=0;for(let t=0;t<i;t++){const n=h[e*i+t];a.push(n),u+=n*o[t]}if(u<0||u>=r/s)throw new Error(`Invalid indices: ${a} does not index into ${n}`);for(let n=0;n<s;n++)l?p.values[u*s+n]+=d[e*s+n]:p.values[u*s+n]=0===t.rank?d[0]:d[e*s+n]}return p}const F$=pC(e=>1/(1+Math.exp(-e))),D$=fC(Or,e=>1/(1+Math.exp(-e))),O$={kernelName:Or,backendName:"cpu",kernelFunc:D$};function L$(e,t,n,r,s){const a=cl(r,t,n),i=le(n),o=De(r);if(a){const n=hl(t,o);return"string"===s?e.slice(n,n+i):e.subarray(n,n+i)}const u=ko(r,s,"string"===s?jm(e):e),l=ko(n,s);for(let e=0;e<l.size;++e){const n=l.indexToLoc(e),r=n.map((e,n)=>e+t[n]);l.set(u.get(...r),...n)}return"string"===s?qm(l.values):l.values}function z$(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{begin:a,size:i}=r;BE(s,"slice");const[o,u]=dl(s,a,i);Zu(s,o,u);const l=L$(n.data.get(s.dataId).values,o,u,s.shape,s.dtype);return n.makeTensorInfo(u,s.dtype,l)}const P$={kernelName:_r,backendName:"cpu",kernelFunc:z$};function B$(e,t,n,r,s,a,i){const o=t[0],u=a[0],l=new Array(u),c=new Array(o),h=t[1];if(0===u){if(0!==o)throw new Error(Rm(o));return[Ie(n,0),[0,h],Ie(s,0),l,c]}let d=!0,p=0;const f=new Array(u).fill(0);for(let t=0;t<o;++t){const n=e[t*h];if(n<0)throw new Error(_m(t,n));if(n>=u)throw new Error(Mm(t,n,u));++f[n],d=d&&n>=p,p=n}let m=!0;for(let e=0;e<u;++e){const t=0===f[e];l[e]=t,m=m&&!t,f[e]=Math.max(f[e],1),e>0&&(f[e]+=f[e-1])}if(m&&d){const t=e,n=r;for(let e=0;e<o;++e)c[e]=e;return[t,[o,h],n,l,c]}{const t=f[u-1],a=Ie(n,t*h),d=Ie(s,t),p=new Array(u).fill(0);for(let t=0;t<o;++t){const n=e[t*h],s=p[n],i=(0===n?0:f[n-1])+s;p[n]++;for(let n=0;n<h;++n)a[i*h+n]=e[t*h+n];d[i]=r[t],c[t]=i}for(let e=0;e<u;++e)if(0===p[e]){const t=0===e?0:f[e-1];a[t*h+0]=e;for(let e=1;e<h;++e)a[t*h+e]=0;d[t]=i}return[a,[t,h],d,l,c]}}function V$(e,t,n,r,s){const a=le(r),i=t[0],o=s.length,u=[];let l=1,c=-1;for(let e=0;e<o;++e){const t=s[e];if(-1===t){if(-1!==c)throw new Error(Fm(c,e));c=e,u.push(1)}else{if(t<0)throw new Error(Dm(e,t));l*=t,u.push(t)}}if(-1!==c){if(l<=0)throw new Error("reshape cannot infer the missing input size for an empty tensor unless all specified input sizes are non-zero");const e=Math.trunc(a/l);if(l*e!==a)throw new Error(Lm(r,u));u[c]=e}if(le(u)!==a)throw new Error(zm(r,u));const h=r.length,d=[];if(h>0){d[h-1]=1;for(let e=h-2;e>=0;--e)d[e]=d[e+1]*r[e+1]}const p=[];if(o>0){p[o-1]=1;for(let e=o-2;e>=0;--e)p[e]=p[e+1]*u[e+1]}const f=Ie(n,i*o);for(let t=0;t<i;++t){let n=0;for(let r=0;r<h;++r)n+=e[t*h+r]*d[r];for(let e=0;e<o;++e)f[t*o+e]=Math.trunc(n/p[e]),n%=p[e]}return[f,[i,o],u]}function U$(e,t,n,r,s,a=!1,i=0){const o=r.length,u=[t[0],e.length/t[0]],l=u[1],c=o>0?s[o-1]+1:0;if(c<0)throw new Error("segment ids must be >= 0");const h=t.slice();h[0]=c;const d=Ie(n,h.reduce((e,t)=>e*t,1));if(0===o)return c>0&&d.fill(i),[d,h];if(c<=0)throw new Error("segment ids must be >= 0");let p=0,f=1,m=0,g=s[p];for(;;){let t=0;if(f<o){if(t=s[f],g===t){++f;continue}if(g>=t)throw new Error(Bm())}if(g<0||g>=c)throw new Error(Vm(g,c));g>m&&d.fill(i,m*l,g*l);for(let t=p;t<f;++t){const n=r[t];if(n<0||n>=u[0])throw new Error(Um(t,r[t],u[0]));for(let t=0;t<l;t++)d[g*l+t]+=e[n*l+t]}if(a)for(let e=0;e<l;e++)d[g*l+e]/=f-p;if(p=f,++f,m=g+1,g=t,f>o)break}return m<c&&d.fill(i,m*l,c*l),[d,h]}const W$=pC(e=>Math.sqrt(e)),G$=fC(zr,e=>Math.sqrt(e)),H$={kernelName:zr,backendName:"cpu",kernelFunc:G$},j$=HE((e,t)=>{const n=e-t;return n*n}),q$=nC(Kr,j$),K$={kernelName:Kr,backendName:"cpu",kernelFunc:q$},X$=pC((e,t)=>{const{pattern:n,replaceGlobal:r,rewrite:s}=t;return e.replace(new RegExp(n,r?"g":""),s)}),Y$=mC(Yr,X$),J$={kernelName:Yr,backendName:"cpu",kernelFunc:Y$};function Z$(e,t,n,r){const s=ko(e,t.dtype);for(let e=0;e<s.size;e++){const a=s.indexToLoc(e),i=new Array(a.length);for(let e=0;e<i.length;e++)i[e]=a[e]*n[e]+r[e];s.set(t.get(...i),...a)}return s}class Q${constructor(e,t,n,r,s,a){this.separator=Js(e),this.nGramWidths=t,this.leftPad=Js(n),this.rightPad=Js(r),this.padWidth=s,this.preserveShort=a}getPadWidth(e){return Math.min(this.padWidth<0?e-1:this.padWidth,e-1)}getNumNGrams(e,t){const n=this.getPadWidth(t);return Math.max(0,e+2*n-t+1)}createNGrams(e,t,n,r,s,a){for(let i=0;i<s;++i){const o=this.getPadWidth(a),u=Math.max(0,o-i),l=Math.max(0,o-(s-(i+1))),c=a-(u+l),h=t+(u>0?0:i-o);let d=0;d+=u*this.leftPad.length;for(let t=0;t<c;++t)d+=e[h+t].length;d+=l*this.rightPad.length,d+=(u+l+c-1)*this.separator.length,n[r+i]=new Uint8Array(d);const p=n[r+i];let f=0;const m=e=>e.forEach(e=>p[f++]=e);for(let e=0;e<u;++e)m(this.leftPad),m(this.separator);for(let t=0;t<c-1;++t)m(e[h+t]),m(this.separator);if(c>0){m(e[h+c-1]);for(let e=0;e<l;++e)m(this.separator),m(this.rightPad)}else{for(let e=0;e<l-1;++e)m(this.rightPad),m(this.separator);m(this.rightPad)}}}compute(e,t){const n=e.length,r=t.length;if(r>0){let e=t[0];if(0!==e)throw new Error(`First split value must be 0, got ${e}`);for(let s=1;s<r;++s){let r=t[s]>=e;if(r=r&&t[s]<=n,!r)throw new Error(`Invalid split value ${t[s]}, must be in [${e}, ${n}]`);e=t[s]}if(e!==n)throw new Error(`Last split value must be data size. Expected ${n}, got ${e}`)}const s=r-1,a=Ie("int32",r);if(0===n||0===r){const e=new Array(n);for(let e=0;e<=s;++e)a[e]=0;return[e,a]}a[0]=0;for(let e=1;e<=s;++e){const n=t[e]-t[e-1];let r=0;this.nGramWidths.forEach(e=>{r+=this.getNumNGrams(n,e)}),this.preserveShort&&n>0&&0===r&&(r=1),a[e]=a[e-1]+r}const i=new Array(a[s]);for(let n=0;n<s;++n){const r=t[n];let s=a[n];if(this.nGramWidths.forEach(a=>{const o=t[n+1]-t[n],u=this.getNumNGrams(o,a);this.createNGrams(e,r,i,s,u,a),s+=u}),this.preserveShort&&s===a[n]){const a=t[n+1]-t[n];if(0===a)continue;const o=a+2*this.padWidth,u=1;this.createNGrams(e,r,i,s,u,o)}}return[i,a]}}function eA(e,t,n,r,s,a,i,o){return new Q$(n,r,s,a,i,o).compute(e,t)}function tA(e,t,n,r){if(!e.length)return;if(0===t.length){for(let t=0;t<e.length;++t)r.push(e.subarray(t,t+1));return}if(1===t.length){const s=t[0];let a=e.indexOf(s);for(;-1!==a;){const t=e.subarray(0,a);n&&0===t.length||r.push(t),a=(e=e.subarray(a+1)).indexOf(s)}return void(n&&0===e.length||r.push(e))}let s=0;for(let a=0;a<e.length+1;a++)if(a===e.length||-1!==t.indexOf(e[a])){const t=e.subarray(s,a);n&&0===t.length||r.push(t),s=a+1}}function nA(e,t,n){const r=e.length,s=[];let a=0,i=0;const o=new Array(r);for(let u=0;u<r;++u){const r=s.length;tA(e[u],t,n,s);const l=s.length-r;o[u]=l,a+=l,i=Math.max(i,l)}const u=Ie("int32",2*a),l=new Array(a),c=[r,i];let h=0;for(let e=0;e<r;++e)for(let t=0;t<o[e];++t)u[2*h]=e,u[2*h+1]=t,l[h]=s[h],++h;return[u,l,c]}function rA(e,t){const n=Ie("int32",e.length);for(let r=0;r<e.length;++r)n[r]=js(e[r]).modulo(t).getLowBitsUnsigned();return n}const sA=HE((e,t)=>e-t),aA=rC((e,t,n,r)=>({real:e-n,imag:t-r})),iA=nC(ts,sA,aA),oA={kernelName:ts,backendName:"cpu",kernelFunc:iA};function uA(e,t){const n=new Array(e.rank);for(let r=0;r<n.length;r++)n[r]=e.shape[r]*t[r];const r=ko(n,e.dtype);for(let t=0;t<r.values.length;++t){const n=r.indexToLoc(t),s=new Array(e.rank);for(let t=0;t<s.length;t++)s[t]=n[t]%e.shape[t];const a=e.locToIndex(s);r.values[t]=e.values[a]}return r}const lA=(e,t)=>{const n=t.value-e.value;return 0===n?e.index-t.index:n};function cA(e,t,n=0,r=e.length-1){for(;r>n;){if(r-n>600){const s=r-n+1,a=t-n+1,i=Math.log(s),o=.5*Math.exp(2*i/3),u=.5*Math.sqrt(i*o*(s-o)/s)*Math.sign(a-s/2);cA(e,t,Math.max(n,Math.floor(t-a*o/s+u)),Math.min(r,Math.floor(t+(s-a)*o/s+u)))}const s=e[t];let a=n,i=r;for(ne(e,n,t),lA(e[r],s)>0&&ne(e,n,r);a<i;){for(ne(e,a,i),a++,i--;lA(e[a],s)<0;)a+=1;for(;lA(e[i],s)>0;)i-=1}0===lA(e[n],s)?ne(e,n,i):(i+=1,ne(e,i,r)),i<=t&&(n=i+1),t<=i&&(r=i-1)}}function hA(e,t,n,r,s){const a=t[t.length-1],[i,o]=[e.length/a,a],u=ke(n,i*r),l=ke("int32",i*r);for(let t=0;t<i;t++){const n=t*o,a=e.subarray(n,n+o);let i=new Array(a.length);a.forEach((e,t)=>i[t]={value:e,index:t}),r<i.length&&(cA(i,r),i=i.slice(0,r)),s&&i.sort(lA);const c=t*r,h=u.subarray(c,c+r),d=l.subarray(c,c+r);for(let e=0;e<r;e++)h[e]=i[e].value,d[e]=i[e].index}const c=t.slice();return c[c.length-1]=r,[ko(c,n,u),ko(c,"int32",l)]}function dA(e,t,n,r){const s=we(t,n)[0],a=[1,n[0],1];for(let e=0;e<s;e++)a[0]*=n[e];a[1]=n[s];for(let e=s+1;e<n.length;e++)a[2]*=n[e];const i=new Map,o=new Int32Array(n[s]),u=new la(a,r,e),l=[],c=1===a[0]&&1===a[2];for(let t=0;t<n[s];t++){let n;if(c)n=e[t].toString();else{const e=[];for(let n=0;n<a[0];n++)for(let r=0;r<a[2];r++)e.push(u.get(n,t,r));n=e.join(",")}const r=i.get(n);if(null!=r)o[t]=r;else{const e=i.size;i.set(n,e),o[t]=e,l.push(t)}}const h=a.slice();h[1]=i.size;const d=new la(h,r);l.forEach((e,t)=>{for(let n=0;n<a[0];n++)for(let r=0;r<a[2];r++)d.set(u.get(n,e,r),n,t,r)});const p=n.slice();return p[s]=h[1],{outputValues:d.values,outputShape:p,indices:o}}const pA="4.22.0";bi("cpu",()=>new UE,1);const fA=fC(Qt,e=>e>=0?e:Math.exp(e)-1),mA={kernelName:Qt,backendName:"cpu",kernelFunc:fA};function gA(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{alpha:a}=r;BE([s],"leakyRelu");const i=le(s.shape),o=n.data.get(s.dataId).values,u=ke("float32",i);for(let e=0;e<o.length;e++)u[e]=o[e]<0?a*o[e]:o[e];return n.makeTensorInfo(s.shape,"float32",u)}const yA={kernelName:In,backendName:"cpu",kernelFunc:gA},bA=HE((e,t)=>e<0?t*e:e);function xA(e){const{inputs:t,backend:n}=e,{x:r,alpha:s}=t;BE([r,s],"prelu");const a=n.data.get(r.dataId).values,i=n.data.get(s.dataId).values,[o,u]=bA(r.shape,s.shape,a,i,"float32");return n.makeTensorInfo(u,"float32",o)}const wA={kernelName:lr,backendName:"cpu",kernelFunc:xA},vA=fC(yr,e=>Math.max(0,e)),kA={kernelName:yr,backendName:"cpu",kernelFunc:vA},IA=fC(Ir,e=>Math.min(Math.max(0,e),6)),SA={kernelName:Ir,backendName:"cpu",kernelFunc:IA};function NA(e,t,n,r,s){if("linear"===n)return XE({inputs:{x:t},backend:e});if("relu"===n)return vA({inputs:{x:t},backend:e});if("elu"===n)return fA({inputs:{x:t},backend:e});if("relu6"===n)return IA({inputs:{x:t},backend:e});if("prelu"===n)return xA({inputs:{x:t,alpha:r},backend:e});if("leakyrelu"===n)return gA({inputs:{x:t},backend:e,attrs:{alpha:s}});if("sigmoid"===n)return D$({inputs:{x:t},backend:e});throw new Error(`Activation ${n} has not been implemented for the CPU backend.`)}function TA(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{shape:a}=r,i=le(s.shape),o=xe(a,i),u=le(o);ie(i===u,()=>`The new shape (${o}) has ${u} elements and the old shape (${s.shape}) has ${i} elements. The new shape and old shape must have the same number of elements.`),n.incRef(s.dataId);const l=n.data.get(s.dataId);if(null!=l.complexTensorInfos){const e=l.complexTensorInfos.real,t=l.complexTensorInfos.imag;e.shape=o,t.shape=o}return{dataId:s.dataId,shape:o,dtype:s.dtype}}const EA={kernelName:br,backendName:"cpu",kernelFunc:TA};function CA(e){const{inputs:t,backend:n,attrs:r}=e,{a:s,b:a}=t,{transposeA:i,transposeB:o}=r;BE([s,a],"matMul");const u=s.shape.length,l=a.shape.length,c=i?s.shape[u-2]:s.shape[u-1],h=o?a.shape[l-1]:a.shape[l-2],d=i?s.shape[u-1]:s.shape[u-2],p=o?a.shape[l-2]:a.shape[l-1],f=s.shape.slice(0,-2),m=a.shape.slice(0,-2),g=le(f),y=le(m),b=ru(s.shape.slice(0,-2),a.shape.slice(0,-2)).concat([d,p]);ie(c===h,()=>`Error in matMul: inner shapes (${c}) and (${h}) of Tensors with shapes ${s.shape} and ${a.shape} and transposeA=${i} and transposeB=${o} must match.`);const x=o?[y,p,h]:[y,h,p],w=TA({inputs:{x:s},backend:n,attrs:{shape:i?[g,c,d]:[g,d,c]}}),v=TA({inputs:{x:a},backend:n,attrs:{shape:x}}),k=i?w.shape[1]:w.shape[2],I=i?w.shape[2]:w.shape[1],S=o?v.shape[1]:v.shape[2],N=Math.max(g,y),T=n.data.get(w.dataId).values,E=n.data.get(v.dataId).values,C=De(w.shape),$=De(v.shape),[A,R,_]=i?[C[0],1,C[1]]:[C[0],C[1],1],[M,F,D]=o?[1,$[1],$[0]]:[$[1],1,$[0]],O=I*S,L=ko([N,I,S],w.dtype),z=L.values,P=n.blockSize;for(let e=0;e<N;e++){const t=e%g,n=e%y;for(let r=0;r<I;r+=P){const s=Math.min(r+P,I);for(let a=0;a<S;a+=P){const i=Math.min(a+P,S);for(let o=0;o<k;o+=P){const u=Math.min(o+P,k);for(let l=r;l<s;l++)for(let r=a;r<i;r++){let s=0;for(let e=o;e<u;e++)s+=T[t*A+l*R+e*_]*E[e*M+r*F+n*D];z[e*O+(l*S+r)]+=s}}}}}return n.disposeIntermediateTensorInfo(w),n.disposeIntermediateTensorInfo(v),n.makeTensorInfo(b,L.dtype,L.values)}const $A={kernelName:bt,backendName:"cpu",kernelFunc:CA},AA={kernelName:gs,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{a:s,b:a,bias:i,preluActivationWeights:o}=t,{transposeA:u,transposeB:l,activation:c,leakyreluAlpha:h}=r;let d,p,f;const m=[];d=CA({inputs:{a:s,b:a},attrs:{transposeA:u,transposeB:l},backend:n}),i&&(p=iC({inputs:{a:d,b:i},backend:n}),m.push(d),d=p),c&&(f=NA(n,d,c,o,h),m.push(d),d=f);for(const e of m)n.disposeIntermediateTensorInfo(e);return d}},RA=fC(tt,e=>Math.acos(e)),_A={kernelName:tt,backendName:"cpu",kernelFunc:RA},MA=fC(nt,e=>Math.acosh(e)),FA={kernelName:nt,backendName:"cpu",kernelFunc:MA},DA={kernelName:st,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,r=t;BE(t,"addN");const s=r.map(e=>n.data.get(e.dataId).values),a=ko(r[0].shape,r[0].dtype),i=a.values;for(let e=0;e<r.length;e++){const t=s[e];for(let e=0;e<i.length;e++)i[e]+=t[e]}return n.makeTensorInfo(a.shape,a.dtype,a.values)}},OA={kernelName:at,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a,keepDims:i}=r;BE(s,"all");const o=we(a,s.shape);let u=o;const l=nh(u,s.shape.length);let c=s;null!=l&&(c=g$({inputs:{x:s},backend:n,attrs:{perm:l}}),u=sh(u.length,s.shape.length)),th("all",u,c.shape.length);const[h,d]=Qc(c.shape,u),p=le(d),f=Be(le(h),c.dtype),m=n.data.get(c.dataId).values;for(let e=0;e<f.length;++e){const t=e*p;let n=m[t];for(let e=0;e<p;++e){const r=m[t+e];n=n&&r}f[e]=n}null!=l&&n.disposeIntermediateTensorInfo(c);const g=n.makeTensorInfo(h,c.dtype,f);if(i){const e=TA({inputs:{x:g},backend:n,attrs:{shape:eh(h,o)}});return n.disposeIntermediateTensorInfo(g),e}return g}},LA={kernelName:it,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a,keepDims:i}=r;BE(s,"any");const o=we(a,s.shape);let u=o;const l=nh(u,s.shape.length);let c=s;null!=l&&(c=g$({inputs:{x:s},backend:n,attrs:{perm:l}}),u=sh(u.length,s.shape.length)),th("any",u,c.shape.length);const[h,d]=Qc(c.shape,u),p=le(d),f=Be(le(h),c.dtype),m=n.data.get(c.dataId).values;for(let e=0;e<f.length;++e){const t=e*p;let n=m[t];for(let e=0;e<p;++e){const r=m[t+e];n=n||r}f[e]=n}null!=l&&n.disposeIntermediateTensorInfo(c);const g=n.makeTensorInfo(h,c.dtype,f);if(i){const e=TA({inputs:{x:g},backend:n,attrs:{shape:eh(h,o)}});return n.disposeIntermediateTensorInfo(g),e}return g}},zA={kernelName:ot,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a}=r;BE(s,"argMax");let i=we(a,s.shape);const o=nh(i,s.shape.length);let u=s;const l=[];null!=o&&(u=g$({inputs:{x:s},backend:n,attrs:{perm:o}}),l.push(u),i=sh(i.length,u.shape.length)),i=[i[0]],th("argMax",i,u.shape.length);const[c,h]=Qc(u.shape,i),d=Be(le(c),"int32"),p=le(h),f=n.data.get(u.dataId).values;for(let e=0;e<d.length;++e){const t=e*p;let n=f[t],r=0;for(let e=0;e<p;++e){const s=f[t+e];s>n&&(n=s,r=e)}d[e]=r}return l.forEach(e=>n.disposeIntermediateTensorInfo(e)),n.makeTensorInfo(c,"int32",d)}},PA={kernelName:ut,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a}=r;BE(s,"argMin");let i=we(a,s.shape);const o=nh(i,s.shape.length);let u=s;const l=[];null!=o&&(u=g$({inputs:{x:s},backend:n,attrs:{perm:o}}),l.push(u),i=sh(i.length,u.shape.length)),i=[i[0]],th("argMin",i,u.shape.length);const[c,h]=Qc(u.shape,i),d=Be(le(c),"int32"),p=le(h),f=n.data.get(u.dataId).values;for(let e=0;e<d.length;++e){const t=e*p;let n=f[t],r=0;for(let e=0;e<p;++e){const s=f[t+e];s<n&&(n=s,r=e)}d[e]=r}return l.forEach(e=>n.disposeIntermediateTensorInfo(e)),n.makeTensorInfo(c,"int32",d)}},BA=fC(lt,e=>Math.asin(e)),VA={kernelName:lt,backendName:"cpu",kernelFunc:BA},UA=fC(ct,e=>Math.asinh(e)),WA={kernelName:ct,backendName:"cpu",kernelFunc:UA},GA=fC(ht,e=>Math.atan(e)),HA={kernelName:ht,backendName:"cpu",kernelFunc:GA},jA=HE((e,t)=>Math.atan2(e,t)),qA=nC(pt,jA),KA={kernelName:pt,backendName:"cpu",kernelFunc:qA},XA=fC(dt,e=>Math.atanh(e)),YA={kernelName:dt,backendName:"cpu",kernelFunc:XA};function JA(e,t,n,r,s,a){const i=s.strideHeight,o=s.strideWidth,u=s.dilationHeight,l=s.dilationWidth,c=s.effectiveFilterHeight,h=s.effectiveFilterWidth,d=s.padInfo.top,p=s.padInfo.left,f="max"===a?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,m=ko(s.outShape,n),g=m.values,y=s.outShape[1]*s.outShape[2]*s.outShape[3],b=s.outShape[2]*s.outShape[3],x=s.outShape[3];for(let t=0;t<s.batchSize;++t){const n=t*y,m=t*r[0];for(let t=0;t<s.inChannels;++t)for(let y=0;y<s.outHeight;++y){const w=y*i-d,v=Math.max(0,w),k=Math.min(s.inHeight,c+w),I=n+y*b;for(let n=0;n<s.outWidth;++n){const i=n*o-p,c=Math.max(0,i),d=Math.min(s.inWidth,h+i);let y=f,b=0,w=0;for(let n=v;n<k;n+=u){const s=m+n*r[1];for(let n=c;n<d;n+=l){const i=e[s+n*r[2]+t];"max"===a&&i>y?y=i:"avg"===a&&(b+=i,w++)}if(isNaN(y))break}g[I+n*x+t]="avg"===a?b/w:y}}}return m}function ZA(e,t,n,r,s=!1,a=!1){const i=ko(r.outShape,"int32"),o=r.strideHeight,u=r.strideWidth,l=r.dilationHeight,c=r.dilationWidth,h=r.effectiveFilterHeight,d=r.effectiveFilterWidth,p=r.padInfo.top,f=r.padInfo.left,m=ko(t,n,e);for(let e=0;e<r.batchSize;++e)for(let t=0;t<r.inChannels;++t)for(let n=0;n<r.outHeight;++n){const g=n*o-p;let y=g;for(;y<0;)y+=l;const b=Math.min(r.inHeight,h+g);for(let o=0;o<r.outWidth;++o){const h=o*u-f;let p=h;for(;p<0;)p+=c;const x=Math.min(r.inWidth,d+h);let w=Number.NEGATIVE_INFINITY,v=-1;for(let n=y;n<b;n+=l){const i=n-g;for(let o=p;o<x;o+=c){const u=o-h,l=m.get(e,n,o,t);l>w&&(w=l,v=s?a?((e*r.inHeight+n)*r.inWidth+o)*r.inChannels+t:(n*r.inWidth+o)*r.inChannels+t:i*d+u)}}i.set(v,e,n,o,t)}}return i}function QA(e,t,n,r,s,a){const i=s.strideDepth,o=s.strideHeight,u=s.strideWidth,l=s.dilationDepth,c=s.dilationHeight,h=s.dilationWidth,d=s.effectiveFilterDepth,p=s.effectiveFilterHeight,f=s.effectiveFilterWidth,m=s.padInfo.front,g=s.padInfo.top,y=s.padInfo.left,b="max"===a?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,x=ko(s.outShape,n),w=x.values,v=s.outShape[1]*s.outShape[2]*s.outShape[3]*s.outShape[4],k=s.outShape[2]*s.outShape[3]*s.outShape[4],I=s.outShape[3]*s.outShape[4],S=s.outShape[4];for(let t=0;t<s.batchSize;++t){const n=t*v,x=t*r[0];for(let t=0;t<s.inChannels;++t)for(let v=0;v<s.outDepth;++v){const N=v*i-m;let T=N;for(;T<0;)T+=l;const E=Math.min(s.inDepth,d+N),C=n+v*k;for(let n=0;n<s.outHeight;++n){const i=n*o-g;let d=i;for(;d<0;)d+=c;const m=Math.min(s.inHeight,p+i),v=C+n*I;for(let n=0;n<s.outWidth;++n){const i=n*u-y;let o=i;for(;o<0;)o+=h;const p=Math.min(s.inWidth,f+i),g=v+n*S;let k=b,I=0,N=0;for(let n=T;n<E;n+=l){const s=x+n*r[1];for(let n=d;n<m;n+=c){const i=s+n*r[2];for(let n=o;n<p;n+=h){const s=e[i+n*r[3]+t];if("max"===a&&s>k?k=s:"avg"===a&&(I+=s,N++),isNaN(k))break}if(isNaN(k))break}if(isNaN(k))break}w[g+t]="avg"===a?I/Math.max(N,1):k}}}}return x}const eR={kernelName:ft,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t;BE(s,"avgPool");const{filterSize:a,strides:i,pad:o,dimRoundingMode:u}=r;ie(ec(i,1),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${i} and dilations \'1\'`);const l=Gl(s.shape,a,i,1,o,u);let c;if(1===l.filterWidth&&1===l.filterHeight&&de(l.inShape,l.outShape))c=XE({inputs:{x:s},backend:n});else{const e=n.data.get(s.dataId).values,t=De(s.shape),r=JA(e,s.shape,s.dtype,t,l,"avg");c=n.makeTensorInfo(l.outShape,s.dtype,r.values)}return c}},tR={kernelName:gt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{filterSize:a,strides:i,pad:o,dimRoundingMode:u,dataFormat:l}=r;BE(s,"avgPool3d");const c=Hl(s.shape,a,i,1,o,u,l),h=QA(n.data.get(s.dataId).values,s.shape,s.dtype,De(s.shape),c,"avg");return n.makeTensorInfo(h.shape,"float32",h.values)}},nR={kernelName:yt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,input:a}=t,{filterSize:i,strides:o,pad:u,dimRoundingMode:l}=r;BE([s,a],"avgPool3DGrad");const c=Hl(a.shape,i,o,1,u,l),h=c.strideDepth,d=c.strideHeight,p=c.strideWidth,f=c.filterDepth,m=c.filterHeight,g=c.filterWidth,y=c.dilationDepth,b=c.dilationHeight,x=c.dilationWidth,w=c.effectiveFilterDepth,v=c.effectiveFilterHeight,k=c.effectiveFilterWidth,I=w-1-c.padInfo.front,S=k-1-c.padInfo.left,N=v-1-c.padInfo.top,T=ko(a.shape,"float32"),E=1/(f*m*g),C=n.bufferSync(s);for(let e=0;e<c.batchSize;++e)for(let t=0;t<c.inChannels;++t)for(let n=0;n<c.inDepth;++n)for(let r=0;r<c.inHeight;++r)for(let s=0;s<c.inWidth;++s){const a=n-I,i=r-N,o=s-S;let u=0;for(let n=0;n<w;n+=y){const r=(a+n)/h;if(!(r<0||r>=c.outDepth||Math.floor(r)!==r))for(let n=0;n<v;n+=b){const s=(i+n)/d;if(!(s<0||s>=c.outHeight||Math.floor(s)!==s))for(let n=0;n<k;n+=x){const a=(o+n)/p;a<0||a>=c.outWidth||Math.floor(a)!==a||(u+=C.get(e,r,s,a,t))}}}T.set(u*E,e,n,r,s,t)}return n.makeTensorInfo(T.shape,T.dtype,T.values)}},rR={kernelName:mt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,input:a}=t,i=a;BE([s,a],"avgPoolGrad");const{filterSize:o,strides:u,pad:l}=r,c=Gl(i.shape,o,u,1,l),h=c.strideHeight,d=c.strideWidth,p=c.filterHeight,f=c.filterWidth,m=c.dilationHeight,g=c.dilationWidth,y=c.effectiveFilterHeight,b=c.effectiveFilterWidth,x=b-1-c.padInfo.left,w=y-1-c.padInfo.top,v=ko(i.shape,"float32"),k=1/(p*f),I=n.data.get(s.dataId).values,S=ko(s.shape,"float32",I);for(let e=0;e<c.batchSize;++e)for(let t=0;t<c.inChannels;++t)for(let n=0;n<c.inHeight;++n)for(let r=0;r<c.inWidth;++r){const s=n-w,a=r-x;let i=0;for(let n=0;n<y;n+=m){const r=(s+n)/h;if(!(r<0||r>=c.outHeight||Math.floor(r)!==r))for(let n=0;n<b;n+=g){const s=(a+n)/d;s<0||s>=c.outWidth||Math.floor(s)!==s||(i+=S.get(e,r,s,t))}}v.set(i*k,e,n,r,t)}return n.makeTensorInfo(v.shape,v.dtype,v.values)}},sR={kernelName:dn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,scale:a,offset:i,mean:o,variance:u}=t;ie(o.shape.length===u.shape.length,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),ie(null==i||o.shape.length===i.shape.length,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),ie(null==a||o.shape.length===a.shape.length,()=>"Batch normalization gradient requires mean and scale to have equal ranks."),BE([s,o,u,a,i],"batchNorm");let{varianceEpsilon:l}=r;null==l&&(l=.001);const c=n.data.get(s.dataId).values,h=n.data.get(o.dataId).values,d=n.data.get(u.dataId).values,p=a?n.data.get(a.dataId).values:new Float32Array([1]),f=i?n.data.get(i.dataId).values:new Float32Array([0]),m=new Float32Array(c.length),g=f.length,y=p.length,b=d.length,x=h.length;let w=0,v=0,k=0,I=0;for(let e=0;e<c.length;++e)m[e]=f[w++]+(c[e]-h[v++])*p[k++]/Math.sqrt(d[I++]+l),w>=g&&(w=0),v>=x&&(v=0),k>=y&&(k=0),I>=b&&(I=0);return n.makeTensorInfo(s.shape,s.dtype,m)}},aR={kernelName:xt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{blockShape:a,crops:i}=r;BE([s],"batchToSpaceND");const o=a.reduce((e,t)=>e*t),u=Qf(s.shape,a,o),l=em(u.length,a.length),c=tm(s.shape,a,o),h=nm(i,a.length),d=rm(c,i,a.length),p=TA({inputs:{x:s},backend:n,attrs:{shape:u}}),f=g$({inputs:{x:p},backend:n,attrs:{perm:l}}),m=TA({inputs:{x:f},backend:n,attrs:{shape:c}}),g=z$({inputs:{x:m},backend:n,attrs:{begin:h,size:d}});return n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),g}},iR={kernelName:wt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,weights:a}=t,{size:i}=r,o=uC(n.data.get(s.dataId).values,n.data.get(a.dataId).values,a.dtype,a.shape,i);return n.makeTensorInfo([i],a.dtype,o)}},oR={kernelName:It,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{s0:r,s1:s}=t,a=n.data.get(r.dataId).values,i=n.data.get(s.dataId).values,o=ru(Array.from(a),Array.from(i));return n.makeTensorInfo([o.length],"int32",Int32Array.from(o))}},uR=fC(Tt,(e,t)=>{const n=t;return e>n.clipValueMax?n.clipValueMax:e<n.clipValueMin?n.clipValueMin:e}),lR={kernelName:Tt,backendName:"cpu",kernelFunc:uR},cR={kernelName:Ct,backendName:"cpu",kernelFunc:e=>{const{x:t}=e.inputs,n=e.backend,r=new Float32Array(le(t.shape)),s=n.data.get(t.dataId),a=s.complexTensorInfos.real,i=s.complexTensorInfos.imag,o=n.data.get(a.dataId).values,u=n.data.get(i.dataId).values;for(let e=0;e<o.length;e++){const t=o[e],n=u[e];r[e]=Math.hypot(t,n)}return n.makeOutput(r,t.shape,"float32")}};function hR(e){const{inputs:t,backend:n}=e,{input:r}=t,s=n.data.get(r.dataId).complexTensorInfos.imag,a=n.data.get(s.dataId).values;return n.makeTensorInfo(s.shape,s.dtype,a)}const dR={kernelName:xn,backendName:"cpu",kernelFunc:hR};function pR(e){const{inputs:t,backend:n,attrs:r}=e,{axis:s}=r,a=we(s,t[0].shape)[0];Wf(t.map(e=>e.shape),a);let i=Gf(t.map(e=>e.shape),a);if(0===le(i))return n.makeTensorInfo(i,t[0].dtype,[]);const o=t.filter(e=>le(e.shape)>0);if(1===o.length)return XE({inputs:{x:o[0]},backend:n});if("complex64"===o[0].dtype){const e=o.map(e=>JE({inputs:{input:e},backend:n})),t=o.map(e=>hR({inputs:{input:e},backend:n})),r=pR({inputs:e,backend:n,attrs:{axis:a}}),s=pR({inputs:t,backend:n,attrs:{axis:a}}),i=jE({inputs:{real:r,imag:s},backend:n});return e.forEach(e=>n.disposeIntermediateTensorInfo(e)),t.forEach(e=>n.disposeIntermediateTensorInfo(e)),n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(s),i}const u=o.map(e=>{const t=le(e.shape.slice(a));return TA({inputs:{x:e},backend:n,attrs:{shape:[-1,t]}})}),l=u.map(e=>({vals:n.data.get(e.dataId).values,shape:e.shape}));i=Gf(u.map(e=>e.shape),1);const c=1===u[0].shape[0],h=xC(l,i,t[0].dtype,c),d=Gf(o.map(e=>e.shape),a),p=n.makeTensorInfo(d,t[0].dtype,h);return u.forEach(e=>n.disposeIntermediateTensorInfo(e)),p}const fR={kernelName:$t,backendName:"cpu",kernelFunc:pR};function mR(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:a}=t,{strides:i,pad:o,dataFormat:u,dilations:l,dimRoundingMode:c}=r;BE([s,a],"conv2d");const h=nc(u),d=jl(s.shape,a.shape,i,l,o,c,!1,h),p=d.filterHeight,f=d.filterWidth,m=d.dilationHeight,g=d.dilationWidth,y=d.padInfo.left,b=d.padInfo.top,x="channelsLast"===d.dataFormat,w=new la(d.outShape,s.dtype),v=De(s.shape),k=De(a.shape),I=v[0],S=x?v[1]:v[2],N=x?v[2]:1,T=x?1:v[1],E=w.strides[0],C=x?w.strides[1]:w.strides[2],$=x?w.strides[2]:1,A=x?1:w.strides[1],R=n.data.get(s.dataId).values,_=n.data.get(a.dataId).values,M=w.values;for(let e=0;e<d.batchSize;++e){const t=e*I,n=e*E;for(let e=0;e<d.outHeight;++e){const r=n+e*C,s=e*d.strideHeight-b;for(let e=0;e<p;++e){const n=s+e*m;if(n<0||n>=d.inHeight)continue;const a=e*k[0],i=t+n*S;for(let e=0;e<d.outWidth;++e){const t=r+e*$,n=e*d.strideWidth-y;for(let e=0;e<f;++e){const r=n+e*g;if(r<0||r>=d.inWidth)continue;const s=i+r*N;let o=a+e*k[1];for(let e=0;e<d.inChannels;++e){const n=R[s+e*T];for(let e=0;e<d.outChannels;++e)M[t+e*A]+=n*_[o+e];o+=d.outChannels}}}}}}return n.makeTensorInfo(w.shape,w.dtype,M)}const gR={kernelName:At,backendName:"cpu",kernelFunc:mR},yR={kernelName:Rt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,dy:a}=t,{strides:i,pad:o,dataFormat:u,dimRoundingMode:l,filterShape:c}=r;BE([s,a],"conv2dBackpropFilter");const h=nc(u),d=jl(s.shape,c,i,1,o,l,!1,h),{strideHeight:p,strideWidth:f,filterHeight:m,filterWidth:g}=d,y="channelsLast"===d.dataFormat,b=new la(d.filterShape,"float32"),x=d.padInfo.left,w=d.padInfo.top,v=n.data.get(s.dataId).values,k=n.data.get(a.dataId).values,I=new la(s.shape,s.dtype,v),S=new la(a.shape,a.dtype,k);for(let e=0;e<m;++e){const t=Math.max(0,Math.ceil((w-e)/p)),n=Math.min(d.outHeight,(d.inHeight+w-e)/p);for(let r=0;r<g;++r){const s=Math.max(0,Math.ceil((x-r)/f)),a=Math.min(d.outWidth,(d.inWidth+x-r)/f);for(let i=0;i<d.inChannels;++i)for(let o=0;o<d.outChannels;++o){let u=0;for(let l=0;l<d.batchSize;++l)for(let c=t;c<n;++c){const t=e+c*p-w;for(let e=s;e<a;++e){const n=r+e*f-x;u+=y?I.get(l,t,n,i)*S.get(l,c,e,o):I.get(l,i,t,n)*S.get(l,o,c,e)}}b.set(u,e,r,i,o)}}}return n.makeTensorInfo(b.shape,b.dtype,b.values)}},bR={kernelName:_t,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,filter:a}=t,{inputShape:i,strides:o,pad:u,dataFormat:l,dimRoundingMode:c}=r;BE([s,a],"conv2dBackpropInput");const h=De(a.shape),d=De(s.shape);let p=nc(l);const f=jl(i,a.shape,o,1,u,c,!1,p),m=new la(f.inShape,"float32"),g=m.values,y=n.data.get(s.dataId).values,b=n.data.get(a.dataId).values,[x,w,v]=h,{batchSize:k,filterHeight:I,filterWidth:S,inChannels:N,inHeight:T,inWidth:E,outChannels:C,outHeight:$,outWidth:A,strideHeight:R,strideWidth:_}=f;p=f.dataFormat;const M=I-1-f.padInfo.top,F=S-1-f.padInfo.left,D="channelsLast"===p,O=m.strides[0],L=D?m.strides[1]:m.strides[2],z=D?m.strides[2]:1,P=D?1:m.strides[1],B=d[0],V=D?d[1]:d[2],U=D?d[2]:1,W=D?1:d[1];for(let e=0;e<k;++e)for(let t=0;t<N;++t)for(let n=0;n<T;++n){const r=n-M,s=Math.max(0,Math.ceil(r/R)),a=Math.min($,(I+r)/R);for(let i=0;i<E;++i){const o=i-F,u=Math.max(0,Math.ceil(o/_)),l=Math.min(A,(S+o)/_);let c=0;for(let n=s;n<a;++n){const s=n*R-r;for(let r=u;r<l;++r){const a=B*e+V*n+U*r,i=x*(I-1-s)+w*(S-1-(r*_-o))+v*t;for(let e=0;e<C;++e)c+=y[a+W*e]*b[i+e]}}g[O*e+L*n+z*i+P*t]=c}}return n.makeTensorInfo(m.shape,m.dtype,m.values)}},xR={kernelName:Mt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:a}=t,{strides:i,pad:o,dilations:u}=r;BE([s,a],"conv3d");const l=ql(s.shape,a.shape,i,u,o),{filterDepth:c,filterHeight:h,filterWidth:d,dilationDepth:p,dilationHeight:f,dilationWidth:m,padInfo:g}=l,y=g.front,b=g.left,x=g.top,w=new la(l.outShape,s.dtype),v=n.data.get(s.dataId).values,k=n.data.get(a.dataId).values,I=w.values,S=De(s.shape),N=De(a.shape);for(let e=0;e<l.batchSize;++e){const t=e*S[0],n=e*w.strides[0];for(let e=0;e<l.outDepth;++e){const r=n+e*w.strides[1],s=e*l.strideDepth-y;for(let e=0;e<c;++e){const n=s+e*p;if(n<0||n>=l.inDepth)continue;const a=e*N[0],i=t+n*S[1];for(let e=0;e<l.outHeight;++e){const t=r+e*w.strides[2],n=e*l.strideHeight-x;for(let e=0;e<h;++e){const r=n+e*f;if(r<0||r>=l.inHeight)continue;const s=a+e*N[1],o=i+r*S[2];for(let e=0;e<l.outWidth;++e){const n=t+e*l.outChannels,r=e*l.strideWidth-b;for(let e=0;e<d;++e){const t=r+e*m;if(t<0||t>=l.inWidth)continue;const a=s+e*N[2],i=o+t*l.inChannels;let u=a;for(let e=0;e<l.inChannels;++e){const t=v[i+e];for(let e=0;e<l.outChannels;++e)I[n+e]+=t*k[u+e];u+=l.outChannels}}}}}}}}return n.makeTensorInfo(w.shape,w.dtype,w.values)}},wR={kernelName:Ft,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,dy:a}=t,{strides:i,pad:o,filterShape:u}=r;BE([s,a],"conv3dBackpropFilterV2");const l=De(s.shape),c=De(a.shape),h=ql(s.shape,u,i,1,o),d=h.strideDepth,p=h.strideHeight,f=h.strideWidth,m=h.filterDepth,g=h.filterHeight,y=h.filterWidth,b=new la(h.filterShape,"float32"),x=b.values,[w,v,k,I]=b.strides,S=n.data.get(a.dataId).values,[N,T,E,C]=c,$=n.data.get(s.dataId).values,[A,R,_,M]=l,F=h.padInfo.front,D=h.padInfo.left,O=h.padInfo.top;for(let e=0;e<m;++e){const t=Math.max(0,Math.ceil((F-e)/d)),n=Math.min(h.outDepth,(h.inDepth+F-e)/d),r=e*w;for(let s=0;s<g;++s){const a=Math.max(0,Math.ceil((O-s)/p)),i=Math.min(h.outHeight,(h.inHeight+O-s)/p),o=s*v+r;for(let r=0;r<y;++r){const u=Math.max(0,Math.ceil((D-r)/f)),l=Math.min(h.outWidth,(h.inWidth+D-r)/f),c=r*k+o;for(let o=0;o<h.inChannels;++o){const m=o*I+c;for(let c=0;c<h.outChannels;++c){let g=0;for(let m=0;m<h.batchSize;++m){const h=m*A,y=m*N;for(let m=t;m<n;++m){const t=(e+m*d-F)*R+h,n=m*T+y;for(let e=a;e<i;++e){const a=(s+e*p-O)*_+t,i=e*E+n;for(let e=u;e<l;++e){const t=e*C+i;g+=$[(r+e*f-D)*M+a+o]*S[t+c]}}}}x[m+c]=g}}}}}return n.makeTensorInfo(b.shape,b.dtype,b.values)}},vR={kernelName:Dt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,filter:a}=t,{pad:i,strides:o,inputShape:u}=r;BE([s],"conv3dBackpropInputV2");const l=De(s.shape),c=De(a.shape),h=ql(u,a.shape,o,1,i),d=new la(h.inShape,"float32"),p=d.values,[f,m,g,y]=d.strides,b=n.data.get(s.dataId).values,[x,w,v,k]=l,I=n.data.get(a.dataId).values,[S,N,T,E]=c,{batchSize:C,filterDepth:$,filterHeight:A,filterWidth:R,inChannels:_,inDepth:M,inHeight:F,inWidth:D,outChannels:O,outDepth:L,outHeight:z,outWidth:P,strideDepth:B,strideHeight:V,strideWidth:U}=h,W=$-1-h.padInfo.front,G=A-1-h.padInfo.top,H=R-1-h.padInfo.left;for(let e=0;e<C;++e)for(let t=0;t<_;++t)for(let n=0;n<M;++n){const r=n-W,s=Math.max(0,Math.ceil(r/B)),a=Math.min(L,($+r)/B);for(let i=0;i<F;++i){const o=i-G,u=Math.max(0,Math.ceil(o/V)),l=Math.min(z,(A+o)/V);for(let c=0;c<D;++c){const h=c-H,d=Math.max(0,Math.ceil(h/U)),C=Math.min(P,(R+h)/U);let _=0;for(let n=s;n<a;++n){const s=n*B-r;for(let r=u;r<l;++r){const a=r*V-o;for(let i=d;i<C;++i){const o=x*e+w*n+v*r+k*i,u=S*($-1-s)+N*(A-1-a)+T*(R-1-(i*U-h))+E*t;for(let e=0;e<O;++e)_+=b[o+e]*I[u+e]}}}p[f*e+m*n+g*i+y*c+t]=_}}}return n.makeTensorInfo(d.shape,d.dtype,d.values)}},kR=fC(Ot,e=>Math.cos(e)),IR={kernelName:Ot,backendName:"cpu",kernelFunc:kR},SR=fC(Lt,e=>Math.cosh(e)),NR={kernelName:Lt,backendName:"cpu",kernelFunc:SR},TR={kernelName:Bt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{image:s,boxes:a,boxInd:i}=t,{cropSize:o,method:u,extrapolationValue:l}=r,[c,h,d,p]=s.shape,f=a.shape[0],[m,g]=o,y=ko([f,m,g,p],"float32"),b=n.data.get(a.dataId).values,x=n.data.get(i.dataId).values,w=n.data.get(s.dataId).values,v=De(s.shape),k=De(y.shape);for(let e=0;e<f;e++){const t=4*e,n=b[t],r=b[t+1],s=b[t+2],a=b[t+3],i=x[e];if(i>=c)continue;const o=m>1?(s-n)*(h-1)/(m-1):0,f=g>1?(a-r)*(d-1)/(g-1):0;for(let t=0;t<m;t++){const c=m>1?n*(h-1)+t*o:.5*(n+s)*(h-1);if(c<0||c>h-1)for(let n=0;n<g;n++)for(let r=0;r<p;r++){const s=r+n*k[2]+t*k[1]+e*k[0];y.values[s]=l}else if("bilinear"===u){const n=Math.floor(c),s=Math.ceil(c),o=c-n;for(let u=0;u<g;u++){const c=g>1?r*(d-1)+u*f:.5*(r+a)*(d-1);if(c<0||c>d-1){for(let n=0;n<p;n++){const r=n+u*k[2]+t*k[1]+e*k[0];y.values[r]=l}continue}const h=Math.floor(c),m=Math.ceil(c),b=c-h;for(let r=0;r<p;r++){let a=r+h*v[2]+n*v[1]+i*v[0];const l=w[a];a=r+m*v[2]+n*v[1]+i*v[0];const c=w[a];a=r+h*v[2]+s*v[1]+i*v[0];const d=w[a];a=r+m*v[2]+s*v[1]+i*v[0];const p=l+(c-l)*b,f=d+(w[a]-d)*b;a=r+u*k[2]+t*k[1]+e*k[0],y.values[a]=p+(f-p)*o}}}else for(let n=0;n<g;++n){const s=g>1?r*(d-1)+n*f:.5*(r+a)*(d-1);if(s<0||s>d-1){for(let r=0;r<p;r++){const s=r+n*k[2]+t*k[1]+e*k[0];y.values[s]=l}continue}const o=Math.round(s),u=Math.round(c);for(let r=0;r<p;r++){const s=r+o*v[2]+u*v[1]+i*v[0],a=r+n*k[2]+t*k[1]+e*k[0];y.values[a]=w[s]}}}}return n.makeTensorInfo(y.shape,y.dtype,y.values)}},ER={kernelName:zt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a,exclusive:i,reverse:o}=r;BE(s,"cumprod");const u=nh([a],s.shape.length);let l=s;null!=u&&(l=g$({inputs:{x:s},backend:n,attrs:{perm:u}}));const c=sh(1,s.shape.length)[0];if(c!==l.shape.length-1)throw new Error(`backend.cumprod in CPU expects an inner-most axis=${l.shape.length-1} but got axis=${c}`);const h=ka(l.dtype,"int32"),d=Pe(le(l.shape),h),p=n.data.get(l.dataId).values,f=l.shape[l.shape.length-1],m=o?(e,t)=>e+f-t-1:(e,t)=>e+t;for(let e=0;e<p.length;e+=f)for(let t=0;t<f;t++){const n=m(e,t);if(0===t)d[n]=i?1:p[n];else{const r=m(e,t-1);d[n]=i?p[r]*d[r]:p[n]*d[r]}}const g=n.makeTensorInfo(l.shape,h,d);if(null!=u){const e=g$({inputs:{x:g},backend:n,attrs:{perm:rh(u)}});return n.disposeIntermediateTensorInfo(g),n.disposeIntermediateTensorInfo(l),e}return g}},CR={kernelName:Pt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a,exclusive:i,reverse:o}=r;BE(s,"cumsum");const u=nh([a],s.shape.length);let l=s;null!=u&&(l=g$({inputs:{x:s},backend:n,attrs:{perm:u}}));const c=sh(1,s.shape.length)[0];if(c!==l.shape.length-1)throw new Error(`backend.cumsum in CPU expects an inner-most axis=${l.shape.length-1} but got axis=${c}`);const h=ka(l.dtype,"int32"),d=Be(le(l.shape),h),p=n.data.get(l.dataId).values,f=l.shape[l.shape.length-1],m=o?(e,t)=>e+f-t-1:(e,t)=>e+t;for(let e=0;e<p.length;e+=f)for(let t=0;t<f;t++){const n=m(e,t);if(0===t)d[n]=i?0:p[n];else{const r=m(e,t-1);d[n]=i?p[r]+d[r]:p[n]+d[r]}}const g=n.makeTensorInfo(l.shape,h,d);if(null!=u){const e=g$({inputs:{x:g},backend:n,attrs:{perm:rh(u)}});return n.disposeIntermediateTensorInfo(g),n.disposeIntermediateTensorInfo(l),e}return g}},$R={kernelName:Vt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,weights:a}=t,{size:i,binaryOutput:o}=r;if(1===s.shape.length){const e=uC(n.data.get(s.dataId).values,n.data.get(a.dataId).values,a.dtype,a.shape,i);return n.makeTensorInfo([i],a.dtype,e)}if(2===s.shape.length){const e=lC(n.bufferSync(s),n.bufferSync(a),i,o);return n.makeTensorInfo(e.shape,a.dtype,e.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${s.shape.length}.`)}},AR={kernelName:Ut,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{blockSize:a,dataFormat:i}=r;ie("NHWC"===i,()=>`Only NHWC dataFormat supported on CPU for depthToSpace. Got ${i}`);const o=s.shape[0],u=s.shape[1],l=s.shape[2],c=s.shape[3],h=u*a,d=l*a,p=c/(a*a),f=n.data.get(s.dataId).values,m=new Float32Array(o*h*d*p);let g=0;for(let e=0;e<o;++e)for(let t=0;t<h;++t){const n=Math.floor(t/a),r=t%a;for(let t=0;t<d;++t){const s=Math.floor(t/a),i=(r*a+t%a)*p;for(let t=0;t<p;++t){const r=t+i+c*(s+l*(n+u*e));m[g++]=f[r]}}}return n.makeTensorInfo([o,h,d,p],s.dtype,m)}};function RR(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:a}=t,{strides:i,pad:o,dilations:u,dimRoundingMode:l}=r;BE([s,a],"depthwiseConv2DNative");const c=De(s.shape),h=De(a.shape);let d=u;null==d&&(d=[1,1]),ie(ec(i,d),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${i} and dilations \'${d}\'`);const p=jl(s.shape,a.shape,i,d,o,l,!0),{filterHeight:f,filterWidth:m,dilationHeight:g,dilationWidth:y,padInfo:b}=p,x=b.left,w=b.top,v=p.outChannels/p.inChannels,k=new la(p.outShape,s.dtype),I=n.data.get(s.dataId).values,S=n.data.get(a.dataId).values,N=k.values;for(let e=0;e<p.batchSize;++e){const t=e*c[0],n=e*k.strides[0];for(let e=0;e<p.outHeight;++e){const r=n+e*k.strides[1],s=e*p.strideHeight-w;for(let e=0;e<f;++e){const n=s+e*g;if(n<0||n>=p.inHeight)continue;const a=e*h[0],i=t+n*c[1];for(let e=0;e<p.outWidth;++e){const t=r+e*k.strides[2],n=e*p.strideWidth-x;for(let e=0;e<m;++e){const r=n+e*y;if(r<0||r>=p.inWidth)continue;const s=a+e*h[1],o=i+r*p.inChannels;let u=t,l=s;for(let e=0;e<p.inChannels;++e){const t=I[o+e];for(let e=0;e<v;++e)N[u+e]+=t*S[l+e];u+=v,l+=v}}}}}}return n.makeTensorInfo(k.shape,k.dtype,k.values)}const _R={kernelName:Wt,backendName:"cpu",kernelFunc:RR},MR={kernelName:Gt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,dy:a}=t,{strides:i,dilations:o,pad:u,dimRoundingMode:l,filterShape:c}=r;BE([s,a],"depthwiseConv2dNativeBackpropFilter");const h=jl(s.shape,c,i,o,u,l,!0),{strideHeight:d,strideWidth:p,filterHeight:f,filterWidth:m}=h,g=new la(h.filterShape,"float32"),y=h.padInfo.left,b=h.padInfo.top,x=h.outChannels/h.inChannels,w=n.data.get(s.dataId).values,v=new la(s.shape,s.dtype,w),k=n.data.get(a.dataId).values,I=new la(a.shape,a.dtype,k);for(let e=0;e<f;++e){const t=Math.max(0,Math.ceil((b-e)/d)),n=Math.min(h.outHeight,(h.inHeight+b-e)/d);for(let r=0;r<m;++r){const s=Math.max(0,Math.ceil((y-r)/p)),a=Math.min(h.outWidth,(h.inWidth+y-r)/p);for(let i=0;i<h.outChannels;++i){const o=Math.trunc(i/x),u=i%x;let l=0;for(let u=0;u<h.batchSize;++u)for(let c=t;c<n;++c){const t=e+c*d-b;for(let e=s;e<a;++e){const n=r+e*p-y;l+=v.get(u,t,n,o)*I.get(u,c,e,i)}}g.set(l,e,r,o,u)}}}return n.makeTensorInfo(g.shape,g.dtype,g.values)}},FR={kernelName:Ht,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,filter:a}=t,{strides:i,dilations:o,pad:u,dimRoundingMode:l,inputShape:c}=r;BE([s,a],"depthwiseConv2DNativeBackpropInput");const h=De(s.shape),d=De(a.shape),p=jl(c,a.shape,i,o,u,l,!0),f=new la(p.inShape,"float32"),m=f.values,[g,y,b]=f.strides,x=n.data.get(s.dataId).values,[w,v,k]=h,I=n.data.get(a.dataId).values,[S,N,T]=d,{batchSize:E,filterHeight:C,filterWidth:$,inChannels:A,inHeight:R,inWidth:_,outChannels:M,outHeight:F,outWidth:D,strideHeight:O,strideWidth:L}=p,z=C-1-p.padInfo.top,P=$-1-p.padInfo.left,B=M/A;for(let e=0;e<E;++e)for(let t=0;t<A;++t)for(let n=0;n<R;++n){const r=n-z,s=Math.max(0,Math.ceil(r/O)),a=Math.min(F,(C+r)/O);for(let i=0;i<_;++i){const o=i-P,u=Math.max(0,Math.ceil(o/L)),l=Math.min(D,($+o)/L);let c=0;for(let n=s;n<a;++n){const s=n*O-r;for(let r=u;r<l;++r){const a=w*e+v*n+k*r,i=S*(C-1-s)+N*($-1-(r*L-o))+T*t;for(let e=0;e<B;++e)c+=x[a+(t*B+e)]*I[i+e]}}m[g*e+y*n+b*i+t]=c}}return n.makeTensorInfo(f.shape,f.dtype,f.values)}},DR={kernelName:jt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r}=t,s=le(r.shape),a=n.data.get(r.dataId).values,i=ko([s,s],r.dtype),o=i.values;for(let e=0;e<a.length;e++)o[e*s+e]=a[e];const u=[...r.shape,...r.shape];return n.makeTensorInfo(u,i.dtype,i.values)}},OR={kernelName:qt,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:r,filter:s}=e,{strides:a,pad:i,dilations:o}=n,u=t,l=u.data.get(r.dataId).values,c=r.shape.length,h=u.data.get(s.dataId).values,d=s.shape.length,{batchSize:p,inHeight:f,inWidth:m,inChannels:g,outHeight:y,outWidth:b,padInfo:x,strideHeight:w,strideWidth:v,filterHeight:k,filterWidth:I,dilationHeight:S,dilationWidth:N,outShape:T}=Wl(r.shape,s.shape,a,i,"NHWC",o),E=le(T),C=T.length,$=Ie(r.dtype,E);for(let e=0;e<p;++e)for(let t=0;t<y;++t){const n=t*w-x.top;for(let a=0;a<b;++a){const i=a*v-x.left;for(let o=0;o<g;++o){let u=Number.MIN_SAFE_INTEGER;for(let t=0;t<k;++t){const a=n+t*S;if(a>=0&&a<f)for(let n=0;n<I;++n){const p=i+n*N;if(p>=0&&p<m){const i=We([e,a,p,o],c,De(r.shape)),f=We([t,n,o],d,De(s.shape)),m=l[i]+h[f];m>u&&(u=m)}}}$[We([e,t,a,o],C,De(T))]=u}}}return{dataId:u.write(Ks($,r.dtype),T,r.dtype),shape:T,dtype:r.dtype}}},LR={kernelName:Xt,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:r,filter:s,dy:a}=e,{strides:i,pad:o,dilations:u}=n,l=t,c=Le(r.shape,l.data.get(r.dataId).values),h=Le(s.shape,l.data.get(s.dataId).values),{batchSize:d,inHeight:p,inWidth:f,inChannels:m,outHeight:g,outWidth:y,padInfo:b,strideHeight:x,strideWidth:w,filterHeight:v,filterWidth:k,dilationHeight:I,dilationWidth:S,outShape:N}=Wl(r.shape,s.shape,i,o,"NHWC",u);ie(a.rank===N.length,()=>`Error in ${Xt}, dy must have the same rank as output ${N.length}, but got ${a.rank}`);const T=Le(N,l.data.get(a.dataId).values),E=Ve(s.shape,s.dtype);for(let e=0;e<d;++e)for(let t=0;t<g;++t){const n=t*x-b.top;for(let r=0;r<y;++r){const s=r*w-b.left;for(let a=0;a<m;++a){let i=Number.MIN_SAFE_INTEGER,o=0,u=0;for(let t=0;t<v;++t){const r=n+t*I;if(r>=0&&r<p)for(let n=0;n<k;++n){const l=s+n*S;if(l>=0&&l<f){const s=c[e][r][l][a]+h[t][n][a];s>i&&(i=s,o=t,u=n)}}}E[o][u][a]+=T[e][t][r][a]}}}return{dataId:l.write(Ks(E,r.dtype),s.shape,s.dtype),shape:s.shape,dtype:s.dtype}}},zR={kernelName:Kt,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:r,filter:s,dy:a}=e,{strides:i,pad:o,dilations:u}=n,l=t,c=Le(r.shape,l.data.get(r.dataId).values),h=Le(s.shape,l.data.get(s.dataId).values),{batchSize:d,inHeight:p,inWidth:f,inChannels:m,outHeight:g,outWidth:y,padInfo:b,strideHeight:x,strideWidth:w,filterHeight:v,filterWidth:k,dilationHeight:I,dilationWidth:S,outShape:N}=Wl(r.shape,s.shape,i,o,"NHWC",u);ie(a.rank===N.length,()=>`Error in ${Kt}, dy must have the same rank as output ${N.length}, but got ${a.rank}`);const T=Le(N,l.data.get(a.dataId).values),E=Ve(r.shape,r.dtype);for(let e=0;e<d;++e)for(let t=0;t<g;++t){const n=t*x-b.top;for(let r=0;r<y;++r){const s=r*w-b.left;for(let a=0;a<m;++a){let i=Number.MIN_SAFE_INTEGER,o=n<0?0:n,u=s<0?0:s;for(let t=0;t<v;++t){const r=n+t*I;if(r>=0&&r<p)for(let n=0;n<k;++n){const l=s+n*S;if(l>=0&&l<f){const s=c[e][r][l][a]+h[t][n][a];s>i&&(i=s,o=r,u=l)}}}E[e][o][u][a]+=T[e][t][r][a]}}}return{dataId:l.write(Ks(E,r.dtype),r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}},PR={kernelName:Yt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{image:s}=t,{canvas:a,options:i}=r,{contextOptions:o,imageOptions:u}=i||{},l=(null==u?void 0:u.alpha)||1,c=(null==o?void 0:o.contextType)||"2d";if("2d"!==c)throw new Error(`Context type ${o.contextType} is not supported by the CPU backend.`);const h=a.getContext(c,(null==o?void 0:o.contextAttributes)||{});if(null==h)throw new Error(`Could not get the context with ${c} type.`);const[d,p]=s.shape.slice(0,2),f=2===s.shape.length?1:s.shape[2],m=n.data.get(s.dataId).values,g="float32"===s.dtype?255:1,y=new Uint8ClampedArray(p*d*4);for(let e=0;e<d*p;++e){const t=[0,0,0,255*l];for(let n=0;n<f;n++){const r=m[e*f+n];if("float32"===s.dtype){if(r<0||r>1)throw new Error(`Tensor values for a float32 Tensor must be in the range [0 - 1] but encountered ${r}.`)}else if("int32"===s.dtype&&(r<0||r>255))throw new Error(`Tensor values for a int32 Tensor must be in the range [0 - 255] but encountered ${r}.`);1===f?(t[0]=r*g,t[1]=r*g,t[2]=r*g):t[n]=r*g}const n=4*e;y[n+0]=Math.round(t[0]),y[n+1]=Math.round(t[1]),y[n+2]=Math.round(t[2]),y[n+3]=Math.round(t[3])}a.width=p,a.height=d;const b=new ImageData(y,p,d);return h.putImageData(b,0,0),s}};function BR(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a,keepDims:i}=r;let o;BE(s,"sum"),o="bool"===s.dtype?eC({inputs:{x:s},backend:n,attrs:{dtype:"int32"}}):XE({inputs:{x:s},backend:n});const u=o.shape.length,l=we(a,o.shape),c=nh(l,u);let h=l,d=o;null!=c&&(d=g$({inputs:{x:o},backend:n,attrs:{perm:c}}),h=sh(h.length,u)),th("sum",h,d.shape.length);const[p,f]=Qc(d.shape,h);let m=KE(n,p,ka(d.dtype,"int32"));const g=le(f),y=n.data.get(m.dataId).values,b=n.data.get(d.dataId).values;for(let e=0;e<y.length;++e){const t=e*g;let n=0;for(let e=0;e<g;++e)n+=b[t+e];y[e]=n}if(i){const e=m;m=TA({inputs:{x:m},backend:n,attrs:{shape:eh(m.shape,l)}}),n.disposeIntermediateTensorInfo(e)}return n.disposeIntermediateTensorInfo(o),null!=c&&n.disposeIntermediateTensorInfo(d),m}const VR={kernelName:Pr,backendName:"cpu",kernelFunc:BR},UR={kernelName:Zt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{equation:s}=r,a=t,{allDims:i,summedDims:o,idDims:u}=Sm(s,a.length);Tm(i.length,u,a);const{path:l,steps:c}=Em(o,u),h=c.length;let d=null,p=i.length;const f=[];for(let e=0;e<h;++e){for(const t of c[e]){const{permutationIndices:e,expandDims:r}=Nm(p,u[t]);let s;Cm(e)?s=a[t]:(s=g$({inputs:{x:a[t]},backend:n,attrs:{perm:e}}),f.push(s));const i=s.shape.slice();for(let e=0;e<r.length;++e)i.splice(r[e],0,1);de(s.shape,i)||(s=TA({inputs:{x:s},backend:n,attrs:{shape:i}}),f.push(s)),null===d?d=s:(d=u$({inputs:{a:s,b:d},backend:n}),f.push(d))}e<h-1&&(l[e]>=0&&(d=BR({inputs:{x:d},backend:n,attrs:{axis:l[e]-(i.length-p),keepDims:!1}}),f.push(d)),p--)}for(const e of f)e!==d&&n.disposeIntermediateTensorInfo(e);return d}},WR={kernelName:en,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{dy:r,y:s}=t;BE([r,s],"eluGrad");const a=new Float32Array(le(s.shape)),i=n.data.get(s.dataId).values,o=n.data.get(r.dataId).values;for(let e=0;e<i.length;++e){const t=i[e];a[e]=t>=0?o[e]:o[e]*(t+1)}return n.makeTensorInfo(s.shape,"float32",a)}},GR=im,HR=om,jR=um,qR=lm,KR=cm,XR=hm,YR=fC(tn,e=>{const t=Math.sign(e),n=Math.abs(e),r=1/(1+GR*n);return t*(1-((((XR*r+KR)*r+qR)*r+jR)*r+HR)*r*Math.exp(-n*n))}),JR={kernelName:tn,backendName:"cpu",kernelFunc:YR};function ZR(e){const{inputs:t,backend:n,attrs:r}=e,{input:s}=t,{dim:a}=r,i=s.shape.length,o=s.shape.slice();let u=a;return a<0&&(ie(-(i+1)<=a,()=>`Axis must be in the interval [${-(i+1)}, ${i}]`),u=i+a+1),o.splice(u,0,1),TA({inputs:{x:s},backend:n,attrs:{shape:o}})}const QR={kernelName:sn,backendName:"cpu",kernelFunc:ZR},e_=HE((e,t)=>e/t),t_=nC(Jt,e_),n_={kernelName:Jt,backendName:"cpu",kernelFunc:t_};function r_(e,t,n){const r=e.shape,s=r[0],a=r[1],i=n.data.get(e.dataId),o=i.complexTensorInfos.real,u=i.complexTensorInfos.imag,l=[s,a],c=le(l),h=ke("float32",c),d=ke("float32",c);for(let e=0;e<s;e++){const r=z$({inputs:{x:o},backend:n,attrs:{begin:[e,0],size:[1,a]}}),s=z$({inputs:{x:u},backend:n,attrs:{begin:[e,0],size:[1,a]}}),i=jE({inputs:{real:r,imag:s},backend:n}),{real:l,imag:c}=s_(i,t,n),p=dm(l,c);for(let t=0;t<a;t++){const n=gm(p,t);h[e*a+t]=n.real,d[e*a+t]=n.imag}n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(i)}const p=n.makeTensorInfo(l,"float32",h),f=n.makeTensorInfo(l,"float32",d),m=jE({inputs:{real:p,imag:f},backend:n});return n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),m}function s_(e,t,n){const r=le(e.shape),s=n.data.get(e.dataId),a=n.data.get(s.complexTensorInfos.real.dataId).values,i=n.data.get(s.complexTensorInfos.imag.dataId).values;if((o=r)&o-1){const e=function(e,t,n){const r=new Float32Array(2*t);for(let s=0;s<t;s++){let a=0,i=0;for(let r=0;r<t;r++){const o=xm(s*r,t,n),u=gm(e,r);a+=u.real*o.real-u.imag*o.imag,i+=u.real*o.imag+u.imag*o.real}n&&(a/=t,i/=t),ym(r,a,i,s)}return r}(dm(a,i),r,t);return pm(e)}{const s=a_(a,i,r,t,n),o=[e.shape[0],e.shape[1]];if(t){const e=n.makeTensorInfo(o,"float32",s.real),t=n.makeTensorInfo(o,"float32",s.imag),a=n.makeTensorInfo([],"float32",qs(r,"float32")),i=XE({inputs:{x:a},backend:n}),u=n_.kernelFunc({inputs:{a:e,b:a},backend:n}),l=n_.kernelFunc({inputs:{a:t,b:i},backend:n}),c=n.data.get(u.dataId).values,h=n.data.get(l.dataId).values;return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(l),{real:c,imag:h}}return s}var o}function a_(e,t,n,r,s){if(1===n)return{real:e,imag:t};const a=dm(e,t),i=n/2,o=fm(a),u=o.real,l=o.imag,c=[u.length],h=s.makeTensorInfo(c,"float32",u),d=s.makeTensorInfo(c,"float32",l),p=jE({inputs:{real:h,imag:d},backend:s}),f=mm(a),m=f.real,g=f.imag,y=[m.length],b=s.makeTensorInfo(y,"float32",m),x=s.makeTensorInfo(y,"float32",g),w=jE({inputs:{real:b,imag:x},backend:s}),v=a_(u,l,i,r,s),k=v.real,I=v.imag,S=[k.length],N=s.makeTensorInfo(S,"float32",k),T=s.makeTensorInfo(S,"float32",I),E=jE({inputs:{real:N,imag:T},backend:s}),C=a_(m,g,i,r,s),$=C.real,A=C.imag,R=[$.length],_=s.makeTensorInfo(R,"float32",$),M=s.makeTensorInfo(R,"float32",A),F=jE({inputs:{real:_,imag:M},backend:s}),D=bm(n,r),O=[D.real.length],L=s.makeTensorInfo(O,"float32",D.real),z=s.makeTensorInfo(O,"float32",D.imag),P=jE({inputs:{real:L,imag:z},backend:s}),B=u$({inputs:{a:P,b:F},backend:s}),V=iC({inputs:{a:E,b:B},backend:s}),U=iA({inputs:{a:E,b:B},backend:s}),W=JE({inputs:{input:V},backend:s}),G=JE({inputs:{input:U},backend:s}),H=hR({inputs:{input:V},backend:s}),j=hR({inputs:{input:U},backend:s}),q=pR({inputs:[W,G],backend:s,attrs:{axis:0}}),K=pR({inputs:[H,j],backend:s,attrs:{axis:0}}),X=s.data.get(q.dataId).values,Y=s.data.get(K.dataId).values;return s.disposeIntermediateTensorInfo(h),s.disposeIntermediateTensorInfo(d),s.disposeIntermediateTensorInfo(p),s.disposeIntermediateTensorInfo(b),s.disposeIntermediateTensorInfo(x),s.disposeIntermediateTensorInfo(w),s.disposeIntermediateTensorInfo(N),s.disposeIntermediateTensorInfo(T),s.disposeIntermediateTensorInfo(E),s.disposeIntermediateTensorInfo(_),s.disposeIntermediateTensorInfo(M),s.disposeIntermediateTensorInfo(F),s.disposeIntermediateTensorInfo(L),s.disposeIntermediateTensorInfo(z),s.disposeIntermediateTensorInfo(P),s.disposeIntermediateTensorInfo(B),s.disposeIntermediateTensorInfo(V),s.disposeIntermediateTensorInfo(U),s.disposeIntermediateTensorInfo(W),s.disposeIntermediateTensorInfo(H),s.disposeIntermediateTensorInfo(G),s.disposeIntermediateTensorInfo(j),s.disposeIntermediateTensorInfo(q),s.disposeIntermediateTensorInfo(K),{real:X,imag:Y}}const i_={kernelName:on,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:r}=t,s=le(r.shape),a=r.shape[r.shape.length-1],i=TA({inputs:{x:r},backend:n,attrs:{shape:[s/a,a]}}),o=r_(i,!1,n),u=TA({inputs:{x:o},backend:n,attrs:{shape:r.shape}});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(o),u}};function o_(e){const{backend:t,attrs:n}=e,{shape:r,value:s,dtype:a}=n,i=a||_e(s),o=Ie(i,le(r));return function(e,t){e.fill(t)}(o,s),t.makeTensorInfo(r,i,o)}const u_={kernelName:un,backendName:"cpu",kernelFunc:o_},l_={kernelName:ln,backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{image:r}=e,s=n,a=ke(r.dtype,le(r.shape)),[i,o,u,l]=r.shape,c=s.data.get(r.dataId).values;for(let e=0;e<i;e++){const t=e*u*o*l;for(let e=0;e<o;e++){const n=e*(u*l);for(let e=0;e<u;e++){const r=e*l;for(let s=0;s<l;s++){const i=Math.round(u-e-1),o=t+n+r+s;let h=c[o];i>=0&&i<u&&(h=c[t+n+i*l+s]),a[o]=h}}}}return{dataId:s.write(a,r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}},c_={kernelName:ys,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:a,bias:i,preluActivationWeights:o}=t,{strides:u,pad:l,dataFormat:c,dilations:h,dimRoundingMode:d,activation:p,leakyreluAlpha:f}=r;let m=mR({inputs:{x:s,filter:a},backend:n,attrs:{strides:u,pad:l,dataFormat:c,dilations:h,dimRoundingMode:d}});if(i){const e=m;if("NCHW"===c&&1===i.shape.length&&1!==i.shape[0]){const e=TA({inputs:{x:i},backend:n,attrs:{shape:[i.shape[0],1,1]}});m=iC({inputs:{a:m,b:e},backend:n}),n.disposeIntermediateTensorInfo(e)}else m=iC({inputs:{a:m,b:i},backend:n});n.disposeIntermediateTensorInfo(e)}if(p){const e=m;if("NCHW"===c&&"prelu"===p&&1===o.shape.length&&1!==o.shape[0]){const e=TA({inputs:{x:o},backend:n,attrs:{shape:[o.shape[0],1,1]}});m=NA(n,m,p,e,f),n.disposeIntermediateTensorInfo(e)}else m=NA(n,m,p,o,f);n.disposeIntermediateTensorInfo(e)}return m}},h_={kernelName:bs,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:a,bias:i,preluActivationWeights:o}=t,{strides:u,pad:l,dataFormat:c,dilations:h,dimRoundingMode:d,activation:p,leakyreluAlpha:f}=r;let m=RR({inputs:{x:s,filter:a},backend:n,attrs:{strides:u,pad:l,dataFormat:c,dilations:h,dimRoundingMode:d}});if(i){const e=m;m=iC({inputs:{a:m,b:i},backend:n}),n.disposeIntermediateTensorInfo(e)}if(p){const e=m;m=NA(n,m,p,o,f),n.disposeIntermediateTensorInfo(e)}return m}},d_={kernelName:fn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{params:r,indices:s}=t,a=le(r.shape),i=s.shape,o=i[i.length-1],[u,l,c,h]=ju(r,s);if(0===l)return n.makeTensorInfo(u,r.dtype,[]);const d=DC(n.data.get(s.dataId).values,n.bufferSync(r),r.dtype,l,o,c,h,r.shape,a);return n.makeTensorInfo(u,r.dtype,d.values)}},p_={kernelName:pn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,indices:a}=t,{axis:i,batchDims:o}=r;BE([s,a],"gatherV2");const u=we(i,s.shape)[0],l=n.data.get(a.dataId).values,c=s.shape[u];for(let e=0;e<l.length;++e){const t=l[e];ie(t<=c-1&&t>=0,()=>`GatherV2: the index value ${t} is not in [0, ${c-1}]`)}let h=o;null==o&&(h=0);const d=le(a.shape),p=Hm(s,a,u,h),f=TA({inputs:{x:s},backend:n,attrs:{shape:[p.batchSize,p.outerSize,p.dimSize,p.sliceSize]}}),m=TA({inputs:{x:a},backend:n,attrs:{shape:[p.batchSize,d/p.batchSize]}}),g=[p.batchSize,p.outerSize,d/p.batchSize,p.sliceSize],y=n.bufferSync(m),b=OC(n.bufferSync(f),y,g);return n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),n.makeTensorInfo(p.outputShape,b.dtype,b.values)}},f_={kernelName:bn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:r}=t,s=le(r.shape),a=r.shape[r.shape.length-1],i=TA({inputs:{x:r},backend:n,attrs:{shape:[s/a,a]}}),o=r_(i,!0,n),u=TA({inputs:{x:o},backend:n,attrs:{shape:r.shape}});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(o),u}},m_=fC(wn,e=>Number.isFinite(e)?1:0,"bool"),g_={kernelName:wn,backendName:"cpu",kernelFunc:m_},y_=fC(vn,e=>Math.abs(e)===1/0?1:0,"bool"),b_={kernelName:vn,backendName:"cpu",kernelFunc:y_},x_=fC(kn,e=>Number.isNaN(e)?1:0,"bool"),w_={kernelName:kn,backendName:"cpu",kernelFunc:x_},v_={kernelName:Tn,backendName:"cpu",kernelFunc:function(e){const{backend:t,attrs:n}=e,{start:r,stop:s,num:a}=n,i=XC(r,s,a);return t.makeTensorInfo([i.length],"float32",i)}},k_=fC(Cn,e=>Math.log1p(e)),I_={kernelName:Cn,backendName:"cpu",kernelFunc:k_},S_=HE((e,t)=>e&&t),N_=nC($n,S_,null,"bool"),T_={kernelName:$n,backendName:"cpu",kernelFunc:N_},E_=fC(An,e=>e?0:1,"bool"),C_={kernelName:An,backendName:"cpu",kernelFunc:E_},$_=HE((e,t)=>e||t),A_=nC(Rn,$_,null,"bool"),R_={kernelName:Rn,backendName:"cpu",kernelFunc:A_},__={kernelName:Dn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{depthRadius:a,bias:i,alpha:o,beta:u}=r;BE(s,"LRN");const l=s.shape[3],c=l-1,h=n.data.get(s.dataId).values,d=le(s.shape),p=new Float32Array(d);function f(e){const t=e%l;let n=e-t+Math.max(0,t-a);const r=e-t+Math.min(t+a,c);let s=0;for(;n<=r;n++){const e=h[n];s+=e*e}return s}for(let e=0;e<d;e++){const t=f(e),n=h[e]*Math.pow(i+o*t,-u);p[e]=n}return n.makeTensorInfo(s.shape,s.dtype,p)}},M_={kernelName:On,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,y:a,dy:i}=t,{depthRadius:o,bias:u,alpha:l,beta:c}=r;BE(i,"LRNGrad");const h=le(i.shape),d=i.shape[3],p=n.data.get(i.dataId).values,f=n.data.get(s.dataId).values,m=n.data.get(a.dataId).values,g=new Float32Array(h),y=h;for(let e=0;e<y;e++){const t=e%d,n=e-t+Math.max(0,t-o),r=e-t+Math.min(d,t+o+1);let s=0;for(let e=n;e<r;e++)s+=Math.pow(f[e],2);s=l*s+u;for(let t=n;t<r;t++){let n=-2*l*c*f[t]*m[e]/s;e===t&&(n+=Math.pow(s,-c)),n*=p[e],g[t]+=n}}return n.makeTensorInfo(i.shape,s.dtype,g)}};function F_(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{reductionIndices:a,keepDims:i}=r,o=n;let u=s.shape;const l=u.length,c=we(a,u);let h=c;const d=nh(h,l);let p=o.data.get(s.dataId).values;if(null!=d){const e=new Array(l);for(let t=0;t<e.length;t++)e[t]=u[d[t]];p=m$(p,u,s.dtype,d,e),h=sh(h.length,l),u=e}BE(s,"max"),th("max",h,l);const[f,m]=Qc(u,h),g=QC(p,le(m),f,s.dtype),y=o.write(g,f,s.dtype);let b=f;return i&&(b=eh(f,c)),{dataId:y,shape:b,dtype:s.dtype}}const D_={kernelName:zn,backendName:"cpu",kernelFunc:F_},O_={kernelName:Bn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t;BE(s,"maxPool");const{filterSize:a,strides:i,pad:o,dimRoundingMode:u}=r;ie(ec(i,1),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${i} and dilations \'1\'`);const l=Gl(s.shape,a,i,1,o,u);let c;if(1===l.filterWidth&&1===l.filterHeight&&de(l.inShape,l.outShape))c=XE({inputs:{x:s},backend:n});else{const e=n.data.get(s.dataId).values,t=De(s.shape),r=JA(e,s.shape,s.dtype,t,l,"max");c=n.makeTensorInfo(l.outShape,s.dtype,r.values)}return c}},L_={kernelName:Un,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{filterSize:a,strides:i,pad:o,dimRoundingMode:u,dataFormat:l}=r;BE(s,"maxPool3d");const c=Hl(s.shape,a,i,1,o,u,l),h=QA(n.data.get(s.dataId).values,s.shape,s.dtype,De(s.shape),c,"max");return n.makeTensorInfo(h.shape,"float32",h.values)}},z_={kernelName:Wn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,input:a}=t,{filterSize:i,strides:o,pad:u,dimRoundingMode:l}=r;BE([s,a],"maxPool3DGrad");const c=Hl(a.shape,i,o,1,u,l),h=function(e,t){const n=ko(t.outShape,"int32"),r=t.strideDepth,s=t.strideHeight,a=t.strideWidth,i=t.dilationDepth,o=t.dilationHeight,u=t.dilationWidth,l=t.effectiveFilterDepth,c=t.effectiveFilterHeight,h=t.effectiveFilterWidth,d=t.padInfo.front,p=t.padInfo.top,f=t.padInfo.left;for(let m=0;m<t.batchSize;++m)for(let g=0;g<t.inChannels;++g)for(let y=0;y<t.outDepth;++y){const b=y*r-d;let x=b;for(;x<0;)x+=i;const w=Math.min(t.inDepth,l+b);for(let r=0;r<t.outHeight;++r){const l=r*s-p;let d=l;for(;d<0;)d+=o;const v=Math.min(t.inHeight,c+l);for(let s=0;s<t.outWidth;++s){const p=s*a-f;let k=p;for(;k<0;)k+=u;const I=Math.min(t.inWidth,h+p);let S=Number.NEGATIVE_INFINITY,N=-1;for(let t=x;t<w;t+=i){const n=t-b;for(let r=d;r<v;r+=o){const s=r-l;for(let a=k;a<I;a+=u){const i=a-p,o=e.get(m,t,r,a,g);o>=S&&(S=o,N=n*c*h+s*c+i)}}}n.set(N,m,y,r,s,g)}}}return n}(n.bufferSync(a),c),d=c.strideDepth,p=c.strideHeight,f=c.strideWidth,m=c.dilationDepth,g=c.dilationHeight,y=c.dilationWidth,b=c.effectiveFilterDepth,x=c.effectiveFilterHeight,w=c.effectiveFilterWidth,v=b-1-c.padInfo.front,k=w-1-c.padInfo.left,I=x-1-c.padInfo.top,S=ko(a.shape,"float32"),N=n.bufferSync(s);for(let e=0;e<c.batchSize;++e)for(let t=0;t<c.inChannels;++t)for(let n=0;n<c.inDepth;++n)for(let r=0;r<c.inHeight;++r)for(let s=0;s<c.inWidth;++s){const a=n-v,i=r-I,o=s-k;let u=0;for(let n=0;n<b;n+=m){const r=(a+n)/d;if(!(r<0||r>=c.outDepth||Math.floor(r)!==r))for(let s=0;s<x;s+=g){const a=(i+s)/p;if(!(a<0||a>=c.outHeight||Math.floor(a)!==a))for(let i=0;i<w;i+=y){const l=(o+i)/f;if(l<0||l>=c.outWidth||Math.floor(l)!==l)continue;const d=b*x*w-1-h.get(e,r,a,l,t)===n*x*w+s*w+i?1:0;0!==d&&(u+=N.get(e,r,a,l,t)*d)}}}S.set(u,e,n,r,s,t)}return n.makeTensorInfo(S.shape,S.dtype,S.values)}},P_={kernelName:Vn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,input:a,output:i}=t,o=a;BE([a,i],"maxPoolGrad");const{filterSize:u,strides:l,pad:c,dimRoundingMode:h}=r,d=Gl(o.shape,u,l,1,c,h),p=n.data.get(o.dataId).values,f=ko(d.outShape,o.dtype,ZA(p,o.shape,o.dtype,d).values),m=d.strideHeight,g=d.strideWidth,y=d.dilationHeight,b=d.dilationWidth,x=d.effectiveFilterHeight,w=d.effectiveFilterWidth,v=w-1-d.padInfo.left,k=x-1-d.padInfo.top,I=ko(o.shape,"float32"),S=n.data.get(s.dataId).values,N=ko(s.shape,"float32",S);for(let e=0;e<d.batchSize;++e)for(let t=0;t<d.inChannels;++t)for(let n=0;n<d.inHeight;++n)for(let r=0;r<d.inWidth;++r){const s=n-k,a=r-v;let i=0;for(let n=0;n<x;n+=y){const r=(s+n)/m;if(!(r<0||r>=d.outHeight||Math.floor(r)!==r))for(let s=0;s<w;s+=b){const o=(a+s)/g;if(o<0||o>=d.outWidth||Math.floor(o)!==o)continue;const u=x*w-1-f.get(e,r,o,t)===n*w+s?1:0;0!==u&&(i+=N.get(e,r,o,t)*u)}}I.set(i,e,n,r,t)}return n.makeTensorInfo(I.shape,I.dtype,I.values)}},B_={kernelName:Gn,backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{x:r}=e,{filterSize:s,strides:a,pad:i,includeBatchInIndex:o}=t,u=n;BE(r,"MaxPoolWithArgmax");const l=u.data.get(r.dataId).values,c=Gl(r.shape,s,a,[1,1],i),[h,d]=function(e,t,n,r,s){const a=JA(e,0,n,De(t),s,"max"),i=ZA(e,t,n,s,!0,r);return[a.values,i.values]}(l,r.shape,r.dtype,o,c),p=u.write(h,c.outShape,r.dtype),f=u.write(d,c.outShape,r.dtype);return[{dataId:p,shape:c.outShape,dtype:r.dtype},{dataId:f,shape:c.outShape,dtype:"int32"}]}},V_={kernelName:Hn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a,keepDims:i}=r,o=we(a,s.shape),u=le(Qc(s.shape,o)[1]),l=[],c=n.makeTensorInfo([],"float32",new Float32Array([u]));l.push(c);const h=eC({inputs:{x:s},backend:n,attrs:{dtype:"float32"}});l.push(h);const d=t_({inputs:{a:h,b:c},backend:n});l.push(d);const p=BR({inputs:{x:d},backend:n,attrs:{axis:a,keepDims:i}});return l.forEach(e=>n.disposeIntermediateTensorInfo(e)),p}},U_={kernelName:jn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a,keepDims:i}=r;BE(s,"min");const o=we(a,s.shape);let u=o;const l=nh(u,s.shape.length);let c=s;null!=l&&(c=g$({inputs:{x:s},backend:n,attrs:{perm:l}}),u=sh(u.length,s.shape.length)),th("min",u,c.shape.length);const[h,d]=Qc(c.shape,u),p=le(d),f=Be(le(h),c.dtype),m=n.data.get(c.dataId).values;for(let e=0;e<f.length;++e){const t=e*p;let n=m[t];for(let e=0;e<p;++e){const r=m[t+e];(Number.isNaN(r)||r<n)&&(n=r)}f[e]=n}null!=l&&n.disposeIntermediateTensorInfo(c);const g=n.makeTensorInfo(h,c.dtype,f);if(i){const e=TA({inputs:{x:g},backend:n,attrs:{shape:eh(h,o)}});return n.disposeIntermediateTensorInfo(g),e}return g}},W_={kernelName:Kn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{paddings:a,mode:i}=r;BE(s,"mirrorPad");const o=a.map((e,t)=>e[0]+s.shape[t]+e[1]),u=a.map(e=>e[0]),l=a.map((e,t)=>e[0]+s.shape[t]),c="reflect"===i?0:1,h=n.data.get(s.dataId).values,d=s.shape.length,p=De(s.shape),f=le(o),m=o.length,g=De(o),y=ke(s.dtype,f);for(let e=0;e<f;e++){let t=Ge(e,m,g);for(let e=0;e<m;e++)t[e]<u[e]?t[e]=2*u[e]-t[e]-c:t[e]>=l[e]&&(t[e]=2*(l[e]-1)-t[e]+c);t=t.map((e,t)=>e-u[t]);const n=We(t,d,p);y[e]=h[n]}return{dataId:n.write(y,o,s.dtype),shape:o,dtype:s.dtype}}},G_=HE((e,t)=>{const n=e%t;return e<0&&t<0||e>=0&&t>=0?n:(n+t)%t}),H_=nC(Xn,G_),j_={kernelName:Xn,backendName:"cpu",kernelFunc:H_};function q_(e){const{inputs:t,backend:n,attrs:r}=e,{logits:s}=t,{dim:a}=r,i=s.shape.length;let o=a;if(-1===o&&(o=i-1),o!==i-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${i} and dim was ${o}`);const u=we([o],s.shape),l=F_({inputs:{x:s},backend:n,attrs:{reductionIndices:u,keepDims:!1}}),c=eh(l.shape,u),h=TA({inputs:{x:l},backend:n,attrs:{shape:c}}),d=iA({inputs:{a:s,b:h},backend:n}),p=SC({inputs:{x:d},backend:n}),f=BR({inputs:{x:p},backend:n,attrs:{axis:u,keepDims:!1}}),m=TA({inputs:{x:f},backend:n,attrs:{shape:c}}),g=t_({inputs:{a:p,b:m},backend:n});return n.disposeIntermediateTensorInfo(l),n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),g}const K_={kernelName:Ur,backendName:"cpu",kernelFunc:q_},X_={kernelName:Yn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{logits:s}=t,{numSamples:a,seed:i,normalized:o}=r;BE(s,"multinomial");const u=o?s:q_({inputs:{logits:s},backend:n,attrs:{dim:-1}}),l=u.shape[0],c=u.shape[1],h=n.data.get(u.dataId).values,d=[l,a],p=Be(le(d),"int32");for(let e=0;e<l;++e){const t=e*c,n=new Float32Array(c-1);n[0]=h[t];for(let e=1;e<n.length;++e)n[e]=n[e-1]+h[t+e];const r=gd.alea(i.toString()),s=e*a;for(let e=0;e<a;++e){const t=r();p[s+e]=n.length;for(let r=0;r<n.length;r++)if(t<n[r]){p[s+e]=r;break}}}return o||n.disposeIntermediateTensorInfo(u),n.makeTensorInfo(d,"int32",p)}},Y_=Jp,J_={kernelName:er,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{boxes:s,scores:a}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:u}=r;BE(s,"NonMaxSuppression");const l=n.data.get(s.dataId).values,c=n.data.get(a.dataId).values,{selectedIndices:h}=Y_(l,c,i,o,u);return n.makeTensorInfo([h.length],"int32",new Int32Array(h))}},Z_=Zp,Q_={kernelName:tr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{boxes:s,scores:a}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:u,padToMaxOutputSize:l}=r;BE(s,"NonMaxSuppressionPadded");const c=n.data.get(s.dataId).values,h=n.data.get(a.dataId).values,{selectedIndices:d,validOutputs:p}=Z_(c,h,i,o,u,l);return[n.makeTensorInfo([d.length],"int32",new Int32Array(d)),n.makeTensorInfo([],"int32",new Int32Array([p]))]}},eM=Qp,tM={kernelName:nr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{boxes:s,scores:a}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:u,softNmsSigma:l}=r;BE(s,"NonMaxSuppressionWithScore");const c=n.data.get(s.dataId).values,h=n.data.get(a.dataId).values,d=i,p=o,f=u,m=l,{selectedIndices:g,selectedScores:y}=eM(c,h,d,p,f,m);return[n.makeTensorInfo([g.length],"int32",new Int32Array(g)),n.makeTensorInfo([y.length],"float32",new Float32Array(y))]}},nM={kernelName:sr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{indices:s}=t,{dtype:a,depth:i,onValue:o,offValue:u}=r;BE(s,"oneHot");const l=le(s.shape),c=new Float32Array(l*i);c.fill(u);const h=n.data.get(s.dataId).values;for(let e=0;e<l;++e)h[e]>=0&&h[e]<i&&(c[e*i+h[e]]=o);return n.makeTensorInfo([...s.shape,i],a,c)}};function rM(e){const{inputs:t,backend:n}=e,{x:r}=t;if("string"===r.dtype)throw new Error("zerosLike is not supported for string tensors");if("complex64"===r.dtype){const e=JE({inputs:{input:r},backend:n}),t=rM({inputs:{x:e},backend:n}),s=hR({inputs:{input:r},backend:n}),a=rM({inputs:{x:s},backend:n}),i=jE({inputs:{real:t,imag:a},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(a),i}return o_({backend:n,attrs:{shape:r.shape,value:0,dtype:r.dtype}})}const sM={kernelName:ds,backendName:"cpu",kernelFunc:rM},aM={kernelName:rr,backendName:"cpu",kernelFunc:function e(t){const{inputs:n,backend:r}=t,{x:s}=n;if("string"===s.dtype)throw new Error("onesLike is not supported for string tensors");if("complex64"===s.dtype){const t=JE({inputs:{input:s},backend:r}),n=e({inputs:{x:t},backend:r}),a=hR({inputs:{input:s},backend:r}),i=rM({inputs:{x:a},backend:r}),o=jE({inputs:{real:n,imag:i},backend:r});return r.disposeIntermediateTensorInfo(t),r.disposeIntermediateTensorInfo(n),r.disposeIntermediateTensorInfo(a),r.disposeIntermediateTensorInfo(i),o}return o_({backend:r,attrs:{shape:s.shape,value:1,dtype:s.dtype}})}};function iM(e){const{inputs:t,backend:n,attrs:r}=e,{axis:s}=r;if(1===t.length)return ZR({inputs:{input:t[0]},backend:n,attrs:{dim:s}});const a=t[0].shape,i=t[0].dtype;t.forEach(e=>{oe(a,e.shape,"All tensors passed to stack must have matching shapes"),ie(i===e.dtype,()=>"All tensors passed to stack must have matching dtypes")});const o=[],u=pR({inputs:t.map(e=>{const t=ZR({inputs:{input:e},backend:n,attrs:{dim:s}});return o.push(t),t}),backend:n,attrs:{axis:s}});return o.forEach(e=>n.disposeIntermediateTensorInfo(e)),u}const oM={kernelName:ar,backendName:"cpu",kernelFunc:iM},uM={kernelName:ir,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{paddings:a,constantValue:i}=r;BE(s,"pad");const o=a.map((e,t)=>e[0]+s.shape[t]+e[1]),u=a.map(e=>e[0]),l=n.data.get(s.dataId).values,c=le(s.shape),h=s.shape.length,d=De(s.shape),p=le(o),f=o.length,m=De(o),g=ke(s.dtype,p);0!==i&&g.fill(i);for(let e=0;e<c;e++)g[We(Ge(e,h,d).map((e,t)=>e+u[t]),f,m)]=l[e];return{dataId:n.write(g,o,s.dtype),shape:o,dtype:s.dtype}}},lM=HE((e,t)=>Math.pow(e,t)),cM=nC(ur,lM),hM={kernelName:ur,backendName:"cpu",kernelFunc:cM},dM={kernelName:hr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{paramsNestedSplits:s,paramsDenseValues:a,indices:i}=t,{outputRaggedRank:o}=r,u=s.map(e=>n.data.get(e.dataId).values),l=s.map(e=>e.shape),c=n.data.get(a.dataId).values,h=n.data.get(i.dataId).values,[d,p,f]=v$(u,l,c,a.shape,a.dtype,h,i.shape),m=d.map(e=>n.makeTensorInfo([e.length],"int32",e)),g=n.makeTensorInfo(f,a.dtype,p);return m.concat([g])}},pM={kernelName:dr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{starts:r,limits:s,deltas:a}=t,i=n.data.get(r.dataId).values,o=n.data.get(s.dataId).values,u=n.data.get(a.dataId).values,[l,c]=I$(i,r.shape,r.dtype,o,s.shape,u,a.shape);return[n.makeTensorInfo([l.length],"int32",l),n.makeTensorInfo([c.length],r.dtype,c)]}},fM={kernelName:pr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{shape:s,values:a,defaultValue:i,rowPartitionTensors:o}=t,{rowPartitionTypes:u}=r,l=n.data.get(s.dataId).values,c=n.data.get(a.dataId).values,h=n.data.get(i.dataId).values,d=o.map(e=>n.data.get(e.dataId).values),p=o.map(e=>e.shape),[f,m]=C$(l,s.shape,c,a.shape,a.dtype,h,i.shape,d,p,u);return n.makeTensorInfo(f,a.dtype,m)}},mM={kernelName:fr,backendName:"cpu",kernelFunc:function(e){const{backend:t,attrs:n}=e,{start:r,stop:s,dtype:a,step:i}=n,o=$$(r,s,i,a);return t.makeTensorInfo([o.length],a,o)}},gM=fC(gr,e=>1/e),yM={kernelName:gr,backendName:"cpu",kernelFunc:gM},bM={kernelName:vr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:s}=t,{alignCorners:a,halfPixelCenters:i,size:o}=r;BE(s,"resizeBilinear");const u=De(s.shape),[l,c]=o,[h,d,p,f]=s.shape,m=n.data.get(s.dataId).values,g=new Float32Array(le([h,l,c,f])),y=[a&&l>1?d-1:d,a&&c>1?p-1:p],b=[a&&l>1?l-1:l,a&&c>1?c-1:c];let x=0;const w=y[0]/b[0],v=y[1]/b[1];for(let e=0;e<h;e++)for(let t=0;t<l;t++){let n;n=i?w*(t+.5)-.5:w*t;const r=Math.max(0,Math.floor(n)),s=n-r,a=Math.min(d-1,Math.ceil(n)),o=e*u[0]+r*u[1],l=e*u[0]+a*u[1];for(let e=0;e<c;e++){let t;t=i?v*(e+.5)-.5:v*e;const n=Math.max(0,Math.floor(t)),r=t-n,a=Math.min(p-1,Math.ceil(t)),c=o+n*u[2],h=l+n*u[2],d=o+a*u[2],y=l+a*u[2];for(let e=0;e<f;e++){const t=m[c+e],n=m[h+e],a=t+(m[d+e]-t)*r,i=a+(n+(m[y+e]-n)*r-a)*s;g[x++]=i}}}return n.makeTensorInfo([h,l,c,f],"float32",g)}},xM={kernelName:kr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:s,dy:a}=t,{alignCorners:i}=r;BE([a,s],"resizeBilinearGrad");const o=De(s.shape),[u,l,c,h]=s.shape,[,d,p]=a.shape,f=new Float32Array(u*l*c*h),m=[i&&d>1?l-1:l,i&&p>1?c-1:c],g=[i&&d>1?d-1:d,i&&p>1?p-1:p],y=m[0]/g[0],b=m[1]/g[1],x=n.data.get(a.dataId).values;let w=0;for(let e=0;e<u;e++){const t=e*o[0];for(let e=0;e<d;e++){const n=e*y,r=Math.floor(n),s=Math.min(Math.ceil(n),l-1),a=t+r*o[1],i=t+s*o[1],u=n-r,d=1-u;for(let e=0;e<p;e++){const t=e*b,n=Math.floor(t),r=Math.min(Math.ceil(t),c-1),s=t-n,l=1-s,p=a+n*o[2],m=a+r*o[2],g=i+n*o[2],y=i+r*o[2],v=d*l,k=d*s,I=u*l,S=u*s;for(let e=0;e<h;e++){const t=x[w++];f[p+e]+=t*v,f[m+e]+=t*k,f[g+e]+=t*I,f[y+e]+=t*S}}}}return n.makeTensorInfo([u,c,l,h],"float32",f)}},wM={kernelName:xr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:s}=t,{alignCorners:a,halfPixelCenters:i,size:o}=r;BE(s,"resizeNearestNeighbor");const u=De(s.shape),[l,c]=o,[h,d,p,f]=s.shape,m=n.data.get(s.dataId).values,g=new Float32Array(h*l*c*f),y=[a&&l>1?d-1:d,a&&c>1?p-1:p],b=[a&&l>1?l-1:l,a&&c>1?c-1:c],x=y[0]/b[0],w=y[1]/b[1];let v=0;for(let e=0;e<h;e++){const t=e*u[0];for(let e=0;e<l;e++){const n=i?x*(e+.5):x*e;let r=Math.min(d-1,a?Math.round(n):Math.floor(n));i&&(r=Math.max(0,r));const s=t+r*u[1];for(let e=0;e<c;e++){const t=i?w*(e+.5):w*e;let n=Math.min(p-1,a?Math.round(t):Math.floor(t));i&&(n=Math.max(0,n));const r=s+n*u[2];for(let e=0;e<f;e++){const t=m[r+e];g[v++]=t}}}}return n.makeTensorInfo([h,l,c,f],s.dtype,g)}},vM={kernelName:wr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:s,dy:a}=t,{alignCorners:i}=r;BE([a,s],"resizeNearestNeighborGrad");const o=De(s.shape),u=De(a.shape),[l,c,h,d]=s.shape,[,p,f]=a.shape,m=new Float32Array(l*c*h*d),g=n.data.get(a.dataId).values,y=[i&&p>1?c-1:c,i&&f>1?h-1:h],b=[i&&p>1?p-1:p,i&&f>1?f-1:f],x=y[0]/b[0],w=y[1]/b[1],v=1/x,k=1/w,I=2*Math.ceil(v)+2,S=2*Math.ceil(k)+2;for(let e=0;e<l;e++){const t=e*o[0];for(let e=0;e<c;e++){const n=t+e*o[1],r=Math.floor(e*v),s=Math.floor(r-I/2);for(let r=0;r<h;r++){const a=n+r*o[2],l=Math.floor(r*k),y=Math.floor(l-S/2);for(let n=0;n<d;n++){let o=0;for(let a=0;a<I;a++){const l=a+s;if(l<0||l>=p)continue;const d=t+l*u[1],m=l*x;if(e===Math.min(c-1,i?Math.round(m):Math.floor(m)))for(let e=0;e<S;e++){const t=e+y;if(t<0||t>=f)continue;const s=d+t*u[2],a=t*w;r===Math.min(h-1,i?Math.round(a):Math.floor(a))&&(o+=g[s+n])}}m[a+n]=o}}}}return n.makeTensorInfo(s.shape,s.dtype,m)}},kM={kernelName:Sr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{dims:a}=r;BE(s,"reverse");const i=s.shape.length,o=we(a,s.shape);if(0===i)return XE({inputs:{x:s},backend:n});const u=new la(s.shape,s.dtype),l=n.bufferSync(s);for(let e=0;e<u.size;e++){const t=u.indexToLoc(e),n=t.slice();o.forEach(e=>n[e]=s.shape[e]-1-n[e]),u.set(l.get(...n),...t)}return n.makeTensorInfo(u.shape,u.dtype,u.values)}},IM={kernelName:ms,backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{image:r}=e,{radians:s,fillValue:a,center:i}=t,o=n,u=ke(r.dtype,le(r.shape)),[l,c,h,d]=r.shape,[p,f]=Zf(i,c,h),m=Math.sin(s),g=Math.cos(s),y=o.data.get(r.dataId).values;for(let e=0;e<l;e++){const t=e*h*c*d;for(let e=0;e<c;e++){const n=e*(h*d);for(let r=0;r<h;r++){const s=r*d;for(let i=0;i<d;i++){const o=[l,e,r,i],b=o[2],x=o[1];let w=(b-p)*g-(x-f)*m,v=(b-p)*m+(x-f)*g;w=Math.round(w+p),v=Math.round(v+f);let k=a;"number"!=typeof a&&(k=3===i?255:a[i]),w>=0&&w<h&&v>=0&&v<c&&(k=y[t+v*(h*d)+w*d+i]),u[t+n+s+i]=k}}}}return{dataId:o.write(u,r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}},SM=fC(Nr,e=>{const t=Math.floor(e);return e-t<.5?Math.floor(e):e-t>.5?Math.ceil(e):t%2==0?t:t+1}),NM={kernelName:Nr,backendName:"cpu",kernelFunc:SM},TM={kernelName:Er,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{indices:s,updates:a}=t,{shape:i}=r,{sliceRank:o,numUpdates:u,sliceSize:l,strides:c,outputSize:h}=Xu(0,s,i),d=M$(n.bufferSync(s),n.bufferSync(a),i,h,l,u,o,c,0,!0);return n.makeTensorInfo(i,d.dtype,d.values)}};function EM(e,t){let n=0,r=e.length,s=0;for(;n<r;)s=Math.floor((n+r)/2),e[s]<t?n=s+1:r=s;return r}function CM(e,t){let n=0,r=e.length,s=0;for(;n<r;)s=Math.floor((n+r)/2),e[s]<=t?n=s+1:r=s;return r}const $M={kernelName:$r,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{sortedSequence:s,values:a}=t,{side:i}=r,o=function(e,t,n,r,s,a){const i=Ie("int32",n*s);for(let o=0;o<n;++o){const n=e.slice(o*r,(o+1)*r),u=o*s;for(let e=0;e<s;++e)i[u+e]="left"===a?EM(n,t[e+u]):CM(n,t[e+u])}return i}(n.data.get(s.dataId).values,n.data.get(a.dataId).values,s.shape[0],s.shape[1],a.shape[1],i);return n.makeTensorInfo(a.shape,"int32",o)}},AM={kernelName:Ar,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{condition:r,t:s,e:a}=t;BE([r,s,a],"select");const i=r.shape.length,o=n.data.get(r.dataId).values,u=n.data.get(s.dataId).values,l=n.data.get(a.dataId).values,c=ka(s.dtype,a.dtype),h=Be(le(s.shape),c);let d=0;const p=0===i||i>1||1===s.shape.length?1:le(s.shape.slice(1));for(let e=0;e<o.length;e++)for(let t=0;t<p;t++)1===o[e]?h[d++]=u[e]:h[d++]=l[e];return n.makeTensorInfo(s.shape,c,h)}},RM=sm,_M=am,MM=fC(Rr,e=>e>=0?_M*e:RM*(Math.exp(e)-1)),FM={kernelName:Rr,backendName:"cpu",kernelFunc:MM},DM=fC(Dr,e=>e<0?-1:e>0?1:0),OM={kernelName:Dr,backendName:"cpu",kernelFunc:DM},LM=fC(Mr,e=>Math.sin(e)),zM={kernelName:Mr,backendName:"cpu",kernelFunc:LM},PM=fC(Fr,e=>Math.sinh(e)),BM={kernelName:Fr,backendName:"cpu",kernelFunc:PM},VM=Math.log(1.1920928955078125e-7)+2,UM=fC(Lr,e=>{const t=e>-VM,n=e<VM,r=Math.exp(e);let s;return s=n?r:t?e:Math.log(1+r),s}),WM={kernelName:Lr,backendName:"cpu",kernelFunc:UM},GM={kernelName:Br,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{blockShape:a,paddings:i}=r;BE([s],"spaceToBatchND");const o=le(a),u=[[0,0]];u.push(...i);for(let e=1+a.length;e<s.shape.length;++e)u.push([0,0]);const l=uM.kernelFunc({inputs:{x:s},backend:n,attrs:{paddings:u,constantValue:0}}),c=Qf(l.shape,a,o,!1),h=em(c.length,a.length,!1),d=tm(l.shape,a,o,!1),p=TA({inputs:{x:l},backend:n,attrs:{shape:c}}),f=g$({inputs:{x:p},backend:n,attrs:{perm:h}}),m=TA({inputs:{x:f},backend:n,attrs:{shape:d}});return n.disposeIntermediateTensorInfo(l),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),m}},HM={kernelName:Wr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{indices:r,values:s,denseShape:a,defaultValue:i}=t;if(1!==a.shape.length)throw new Error(`Dense shape must be a vector, saw:\\n        ${a.shape}`);if(2!==r.shape.length)throw new Error(`Indices must be a matrix, saw:\\n        ${r.shape}`);if(1!==s.shape.length)throw new Error(`Values must be a vector, saw:\\n        ${s.shape}`);if(0!==i.shape.length)throw new Error(`Default value must be a scalar, saw:\\n        ${i.shape}`);const o=n.data.get(r.dataId).values,u=n.data.get(s.dataId).values,l=n.data.get(a.dataId).values,c=n.data.get(i.dataId).values[0],[h,d,p,f,m]=B$(o,r.shape,r.dtype,u,s.dtype,l,c);return[n.makeTensorInfo(d,r.dtype,h),n.makeTensorInfo([d[0]],s.dtype,p),n.makeTensorInfo([f.length],"bool",new Uint8Array(f.map(e=>Number(e)))),n.makeTensorInfo([m.length],r.dtype,new Int32Array(m))]}},jM={kernelName:Gr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{inputIndices:r,inputShape:s,newShape:a}=t;if(2!==r.shape.length)throw new Error(`Input indices should be a matrix but received shape\\n        ${r.shape}`);if(1!==s.shape.length)throw new Error(`Input shape should be a vector but received shape\\n        ${s.shape}`);if(1!==a.shape.length)throw new Error(`Target shape should be a vector but received shape ${a.shape}`);const i=Array.from(n.data.get(s.dataId).values),o=n.data.get(r.dataId).values,u=Array.from(n.data.get(a.dataId).values),[l,c,h]=V$(o,r.shape,r.dtype,i,u);return[n.makeTensorInfo(c,r.dtype,l),n.makeTensorInfo([h.length],a.dtype,new Int32Array(h))]}},qM={kernelName:Hr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{data:r,indices:s,segmentIds:a}=t;if(r.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==s.shape.length)throw new Error(`Indices should be a vector but received shape\\n          ${s.shape}`);if(1!==a.shape.length)throw new Error(`Segment ids should be a vector but received shape\\n          ${a.shape}`);if(s.shape[0]!==a.shape[0])throw new Error("segmentIds and indices should have same size.");const i=n.data.get(r.dataId).values,o=n.data.get(s.dataId).values,u=n.data.get(a.dataId).values,[l,c]=U$(i,r.shape,r.dtype,o,u,!0);return n.makeTensorInfo(c,r.dtype,l)}},KM={kernelName:jr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{data:r,indices:s,segmentIds:a}=t;if(r.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==s.shape.length)throw new Error(`Indices should be a vector but received shape\\n         ${s.shape}`);if(1!==a.shape.length)throw new Error(`Segment ids should be a vector but received shape\\n         ${a.shape}`);if(s.shape[0]!==a.shape[0])throw new Error("segmentIds and indices should have same size.");const i=n.data.get(r.dataId).values,o=n.data.get(s.dataId).values,u=n.data.get(a.dataId).values,[l,c]=U$(i,r.shape,r.dtype,o,u);return n.makeTensorInfo(c,r.dtype,l)}},XM={kernelName:qr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{sparseIndices:s,sparseValues:a,defaultValue:i}=t,{outputShape:o}=r,{sliceRank:u,numUpdates:l,sliceSize:c,strides:h,outputSize:d}=Xu(0,s,o),p=!1,f=n.bufferSync(s);let m;switch(a.dtype){case"bool":m=M$(f,n.bufferSync(a),o,d,c,l,u,h,Boolean(n.data.get(i.dataId).values[0]),p);break;case"float32":case"int32":m=M$(f,n.bufferSync(a),o,d,c,l,u,h,n.data.get(i.dataId).values[0],p);break;case"string":m=M$(f,n.bufferSync(a),o,d,c,l,u,h,Zs(n.data.get(i.dataId).values[0]),p);break;default:throw new Error(`Unsupported type ${a.dtype}`)}return n.makeTensorInfo(o,m.dtype,m.values)}},YM={kernelName:Vr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{numOrSizeSplits:a,axis:i}=r,o=we(i,s.shape)[0],u=Am(s,a,o),l=new Array(s.shape.length).fill(0),c=s.shape.slice();return u.map(e=>{const t=[...c];t[o]=e;const r=z$({inputs:{x:s},backend:n,attrs:{begin:l,size:t}});return l[o]+=e,r})}},JM={kernelName:Xr,backendName:"cpu",kernelFunc:({inputs:e,backend:t})=>{const{x:n}=e,r=t;BE(n,"square");const s=r.data.get(n.dataId).values,a=new Float32Array(s.length);for(let e=0;e<s.length;++e){const t=s[e];a[e]=t*t}return{dataId:r.write(a,n.shape,n.dtype),shape:n.shape,dtype:n.dtype}}},ZM=fC(ps,(e,t)=>{const n=t;return isNaN(e)?NaN:e>0?1:n.alpha}),QM={kernelName:ps,backendName:"cpu",kernelFunc:ZM},eF={kernelName:Jr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{begin:a,end:i,strides:o,beginMask:u,endMask:l,ellipsisMask:c,newAxisMask:h,shrinkAxisMask:d}=r;BE(s,"stridedSlice");const{finalShapeSparse:p,finalShape:f,isIdentity:m,sliceDim0:g,isSimpleSlice:y,begin:b,end:x,strides:w}=pl(s.shape,a,i,o,u,l,c,h,d);let v;if(m)v=TA({inputs:{x:s},backend:n,attrs:{shape:f}});else if(g||y){ie(s.shape.length>=1,()=>`Input must have rank at least 1, got: ${s.shape.length}`);const e=el(b,x,w),t=z$({inputs:{x:s},backend:n,attrs:{begin:b,size:e}});v=TA({inputs:{x:t},backend:n,attrs:{shape:f}}),n.disposeIntermediateTensorInfo(t)}else{const e=Z$(p,n.bufferSync(s),w,b);v=n.makeTensorInfo(f,e.dtype,e.values)}return v}},tF={kernelName:Zr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{separator:s,nGramWidths:a,leftPad:i,rightPad:o,padWidth:u,preserveShortSequences:l}=r,{data:c,dataSplits:h}=t,d=n.data.get(c.dataId).values,p=n.data.get(h.dataId).values,[f,m]=eA(d,p,s,a,i,o,u,l);return[n.makeTensorInfo([f.length],"string",f),n.makeTensorInfo(h.shape,"int32",m)]}},nF={kernelName:Qr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{skipEmpty:s}=r,{input:a,delimiter:i}=t;if("string"!==a.dtype)throw new Error("Input must be of datatype string");if(1!==a.shape.length)throw new Error(`Input must be a vector, got shape: ${a.shape}`);if(0!==i.shape.length)throw new Error(`Delimiter must be a scalar, got shape: ${i.shape}`);const o=n.data.get(a.dataId).values,u=n.data.get(i.dataId).values[0],[l,c,h]=nA(o,u,s),d=c.length;return[n.makeTensorInfo([d,2],"int32",l),n.makeTensorInfo([d],"string",c),n.makeTensorInfo([2],"int32",new Int32Array(h))]}},rF={kernelName:es,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{numBuckets:s}=r,{input:a}=t;if("string"!==a.dtype)throw new Error("Input must be of datatype string");if(s<=0)throw new Error("Number of buckets must be at least 1");const i=rA(n.data.get(a.dataId).values,s);return n.makeTensorInfo(a.shape,"int32",i)}},sF=fC(ns,e=>Math.tan(e)),aF={kernelName:ns,backendName:"cpu",kernelFunc:sF},iF=fC(rs,e=>Math.tanh(e)),oF={kernelName:Cr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{tensor:r,indices:s,updates:a}=t,{sliceRank:i,numUpdates:o,sliceSize:u,strides:l,outputSize:c}=Xu(0,s,r.shape),h=n.bufferSync(s),d=n.bufferSync(a),p=n.bufferSync(r),f=M$(h,d,r.shape,c,u,o,i,l,p,!1);return n.makeTensorInfo(r.shape,f.dtype,f.values)}},uF={kernelName:ss,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{reps:a}=r;BE(s,"tile");const i=uA(n.bufferSync(s),a);return n.makeTensorInfo(i.shape,i.dtype,i.values)}},lF={kernelName:as,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{k:a,sorted:i}=r;BE(s,"topk");const o=n.data.get(s.dataId).values,[u,l]=hA(o,s.shape,s.dtype,a,i);return[n.makeTensorInfo(u.shape,u.dtype,u.values),n.makeTensorInfo(l.shape,l.dtype,l.values)]}},cF={kernelName:is,backendName:"cpu",kernelFunc:function(e){const{inputs:t,attrs:n,backend:r}=e,{image:s,transforms:a}=t,{interpolation:i,fillMode:o,fillValue:u,outputShape:l}=n,[c,h,d,p]=s.shape,[f,m]=null!=l?l:[h,d],g=[c,f,m,p],y=De(s.shape),b=y[0],x=y[1],w=y[2],v=De(g),k=v[0],I=v[1],S=v[2],N=ke(s.dtype,le(g));N.fill(u);const T=r.data.get(s.dataId).values,E=r.data.get(a.dataId).values;for(let e=0;e<c;++e){const t=1===a.shape[0]?E:E.subarray(8*e,8*e+8);for(let n=0;n<f;++n)for(let r=0;r<m;++r)for(let s=0;s<p;++s){let a;const l=t[6]*r+t[7]*n+1;if(0===l)continue;const c=(t[0]*r+t[1]*n+t[2])/l,p=(t[3]*r+t[4]*n+t[5])/l,f=hF(c,d,o),m=hF(p,h,o);switch(i){case"nearest":a=pF(T,h,d,b,x,w,e,m,f,s,u);break;case"bilinear":a=fF(T,h,d,b,x,w,e,m,f,s,u);break;default:throw new Error(`Error in Transform: Expect \'nearest\' or \'bilinear\', but got ${i}`)}N[e*k+n*I+r*S+s]=a}return r.makeTensorInfo(g,s.dtype,N)}return{dataId:r.write(N,g,s.dtype),shape:s.shape,dtype:s.dtype}}};function hF(e,t,n){switch(n){case"reflect":return function(e,t){let n=e;if(n<0)if(t<=1)n=0;else{const e=2*t;n<e&&(n=e*Math.trunc(-n/e)+n),n=n<-t?n+e:-n-1}else if(n>t-1)if(t<=1)n=0;else{const e=2*t;n-=e*Math.trunc(n/e),n>=t&&(n=e-n-1)}return ee(0,n,t-1)}(e,t);case"wrap":return function(e,t){let n=e;if(n<0)if(t<=1)n=0;else{const e=t-1;n+=t*(Math.trunc(-n/e)+1)}else if(n>t-1)if(t<=1)n=0;else{const e=t-1;n-=t*Math.trunc(n/e)}return ee(0,n,t-1)}(e,t);case"nearest":return function(e,t){return ee(0,e,t-1)}(e,t);default:return e}}function dF(e,t,n,r,s,a,i,o,u,l,c){return 0<=o&&o<t&&0<=u&&u<n?e[i*r+o*s+u*a+l]:c}function pF(e,t,n,r,s,a,i,o,u,l,c){return dF(e,t,n,r,s,a,i,Math.round(o),Math.round(u),l,c)}function fF(e,t,n,r,s,a,i,o,u,l,c){const h=Math.floor(o),d=Math.floor(u),p=h+1,f=d+1;return(p-o)*((f-u)*dF(e,t,n,r,s,a,i,h,d,l,c)+(u-d)*dF(e,t,n,r,s,a,i,h,f,l,c))+(o-h)*((f-u)*dF(e,t,n,r,s,a,i,p,d,l,c)+(u-d)*dF(e,t,n,r,s,a,i,p,f,l,c))}const mF={kernelName:us,backendName:"cpu",kernelFunc:function(e){const{inputs:t,attrs:n,backend:r}=e,{axis:s}=n,{x:a}=t;BE(a,"unique");const i=r.data.get(a.dataId).values,{outputValues:o,outputShape:u,indices:l}=dA(i,s,a.shape,a.dtype);return[r.makeTensorInfo(u,a.dtype,o),r.makeTensorInfo([l.length],"int32",l)]}},gF={kernelName:ls,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{value:s}=t;let{axis:a}=r;a<0&&(a+=s.shape.length);const i=s.shape.length,o=s.shape[a],u=new Array(i-1);let l=0;for(let e=0;e<i;e++)e!==a&&(u[l++]=s.shape[e]);const c=new Array(i).fill(0),h=s.shape.slice();h[a]=1;const d=new Array(o);for(let e=0;e<d.length;e++){c[a]=e;const t=z$({inputs:{x:s},backend:n,attrs:{begin:c,size:h}});d[e]=TA({inputs:{x:t},backend:n,attrs:{shape:u}}),n.disposeIntermediateTensorInfo(t)}return d}},yF={kernelName:cs,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,segmentIds:a}=t,{numSegments:i}=r;BE(s,"unsortedSegmentSum");const o=[],u=[],l=s.shape.length-a.shape.length;let c=a;for(let e=0;e<l;++e){const t=ZR({inputs:{input:c},backend:n,attrs:{dim:e+1}});c=t,u.push(t)}for(let e=0;e<i;++e){const t=qs(e,"int32"),r=n.makeTensorInfo([],"int32",t),a=vC({inputs:{a:r,b:c},backend:n}),i=eC({inputs:{x:a},backend:n,attrs:{dtype:"float32"}}),l=u$({inputs:{a:i,b:s},backend:n}),h=BR({inputs:{x:l},backend:n,attrs:{axis:0,keepDims:!1}});o.push(h),u.push(r),u.push(a),u.push(i),u.push(l),u.push(h)}const h=iM({inputs:o,backend:n,attrs:{axis:0}});return u.forEach(e=>n.disposeIntermediateTensorInfo(e)),h}},bF=[AA,GE,_A,FA,oC,DA,OA,LA,zA,PA,VA,WA,HA,KA,YA,eR,tR,nR,rR,$A,sR,aR,iR,dC,oR,tC,bC,lR,qE,cR,fR,gR,yR,bR,xR,wR,vR,IR,NR,TR,ER,CR,$R,AR,_R,MR,FR,DR,OR,LR,zR,PR,UR,mA,WR,kC,JR,NC,QR,CC,i_,u_,l_,RC,FC,c_,h_,d_,p_,PC,UC,YE,f_,dR,g_,b_,w_,yA,HC,KC,v_,ZC,I_,T_,C_,R_,__,M_,D_,n$,O_,L_,z_,P_,B_,V_,U_,a$,W_,j_,X_,l$,h$,J_,Q_,tM,f$,nM,aM,oM,uM,hM,wA,x$,dM,pM,fM,mM,ZE,n_,yM,kA,SA,EA,bM,xM,wM,vM,kM,IM,NM,_$,TM,$M,AM,FM,O$,OM,zM,BM,P$,K_,WM,GM,HM,jM,qM,KM,XM,YM,H$,JM,K$,J$,QM,eF,tF,nF,rF,oA,VR,aF,{kernelName:rs,backendName:"cpu",kernelFunc:iF},oF,uF,lF,cF,y$,mF,gF,yF,sM];for(const e of bF)Ts(e);const xF={},wF={alpha:!1,antialias:!1,premultipliedAlpha:!1,preserveDrawingBuffer:!1,depth:!1,stencil:!1,failIfMajorPerformanceCaveat:!0};function vF(e,t){xF[e]=t}function kF(e,t){if(!(e in xF)||null!=t){const n=function(e,t){if(1!==e&&2!==e)throw new Error("Cannot get WebGL rendering context, WebGL is disabled.");const n=null==t?function(e){if(Xe().getBool("IS_SAFARI")||"undefined"==typeof OffscreenCanvas||2!==e){if("undefined"!=typeof document)return document.createElement("canvas");throw new Error("Cannot create a canvas in this context")}return new OffscreenCanvas(300,150)}(e):t;return n.addEventListener("webglcontextlost",t=>{t.preventDefault(),delete xF[e]},!1),Xe().getBool("SOFTWARE_WEBGL_ENABLED")&&(wF.failIfMajorPerformanceCaveat=!1),1===e?n.getContext("webgl",wF)||n.getContext("experimental-webgl",wF):n.getContext("webgl2",wF)}(e,t);if(null===n)return console.log("Could not get context for WebGL version",e),null;xF[e]=n}const n=xF[e];return null==n||n.isContextLost()?(delete xF[e],kF(e)):(n.disable(n.DEPTH_TEST),n.disable(n.STENCIL_TEST),n.disable(n.BLEND),n.disable(n.DITHER),n.disable(n.POLYGON_OFFSET_FILL),n.disable(n.SAMPLE_COVERAGE),n.enable(n.SCISSOR_TEST),n.enable(n.CULL_FACE),n.cullFace(n.BACK),xF[e])}var IF,SF,NF;function TF(e,t){return[t,e]}function EF(e){const t=le(e);return me(Math.ceil(t/4))}function CF(e,t){return[Math.max(1,Math.ceil(t/2)),Math.max(1,Math.ceil(e/2))]}function $F(e,t){const n=e;let r,s,a,i,o,u,l,c,h,d;return 2===Xe().getNumber("WEBGL_VERSION")?(r=n.R32F,s=n.R16F,a=n.RGBA16F,i=n.RGBA32F,o=n.RED,l=4,c=1,h=n.HALF_FLOAT,d=n.FLOAT,u=n.RGBA8):(r=e.RGBA,s=e.RGBA,a=e.RGBA,i=n.RGBA,o=e.RGBA,l=4,c=4,h=null!=t?t.HALF_FLOAT_OES:null,d=e.FLOAT,u=e.RGBA),{internalFormatFloat:r,internalFormatHalfFloat:s,internalFormatPackedHalfFloat:a,internalFormatPackedFloat:i,textureFormatFloat:o,downloadTextureFormat:u,downloadUnpackNumChannels:l,defaultNumChannels:c,textureTypeHalfFloat:h,textureTypeFloat:d}}function AF(e,t){const n=t();return Xe().getBool("DEBUG")&&function(e){const t=e.getError();if(t!==e.NO_ERROR)throw new Error("WebGL Error: "+FF(e,t))}(e),n}!function(e){e[e.DENSE=0]="DENSE",e[e.SHARED_BATCH=1]="SHARED_BATCH"}(IF||(IF={})),function(e){e[e.RENDER=0]="RENDER",e[e.UPLOAD=1]="UPLOAD",e[e.PIXELS=2]="PIXELS",e[e.DOWNLOAD=3]="DOWNLOAD"}(SF||(SF={})),function(e){e[e.UNPACKED_FLOAT16=0]="UNPACKED_FLOAT16",e[e.UNPACKED_FLOAT32=1]="UNPACKED_FLOAT32",e[e.PACKED_4X1_UNSIGNED_BYTE=2]="PACKED_4X1_UNSIGNED_BYTE",e[e.PACKED_2X2_FLOAT32=3]="PACKED_2X2_FLOAT32",e[e.PACKED_2X2_FLOAT16=4]="PACKED_2X2_FLOAT16"}(NF||(NF={}));const RF=5.96e-8,_F=65504;function MF(e){return!!(Xe().getBool("WEBGL_RENDER_FLOAT32_ENABLED")||0===e||RF<Math.abs(e)&&Math.abs(e)<_F)}function FF(e,t){switch(t){case e.NO_ERROR:return"NO_ERROR";case e.INVALID_ENUM:return"INVALID_ENUM";case e.INVALID_VALUE:return"INVALID_VALUE";case e.INVALID_OPERATION:return"INVALID_OPERATION";case e.INVALID_FRAMEBUFFER_OPERATION:return"INVALID_FRAMEBUFFER_OPERATION";case e.OUT_OF_MEMORY:return"OUT_OF_MEMORY";case e.CONTEXT_LOST_WEBGL:return"CONTEXT_LOST_WEBGL";default:return`Unknown error code ${t}`}}function DF(e,t){return iD(e,()=>e.getExtension(t),\'Extension "\'+t+\'" not supported on this browser.\')}function OF(e,t){const n=iD(e,()=>e.createShader(e.VERTEX_SHADER),"Unable to create vertex WebGLShader.");if(AF(e,()=>e.shaderSource(n,t)),AF(e,()=>e.compileShader(n)),!1===e.getShaderParameter(n,e.COMPILE_STATUS))throw console.log(e.getShaderInfoLog(n)),new Error("Failed to compile vertex shader.");return n}function LF(e,t){const n=iD(e,()=>e.createShader(e.FRAGMENT_SHADER),"Unable to create fragment WebGLShader.");if(AF(e,()=>e.shaderSource(n,t)),AF(e,()=>e.compileShader(n)),Xe().get("ENGINE_COMPILE_ONLY"))return n;if(!1===e.getShaderParameter(n,e.COMPILE_STATUS))throw PF(t,e.getShaderInfoLog(n)),new Error("Failed to compile fragment shader.");return n}const zF=/ERROR: [0-9]+:([0-9]+):/g;function PF(e,t){const n=zF.exec(t);if(null==n)return console.log(`Couldn\'t parse line number in error: ${t}`),void console.log(e);const r=+n[1],s=e.split("\\n"),a=s.length.toString().length+2,i=s.map((e,t)=>ye((t+1).toString(),a)+e);let o=0;for(let e=0;e<i.length;e++)o=Math.max(i[e].length,o);const u=i.slice(0,r-1),l=i.slice(r-1,r),c=i.slice(r);console.log(u.join("\\n")),console.log(t.split("\\n")[0]),console.log(`%c ${ye(l[0],o)}`,"border:1px solid red; background-color:#e3d2d2; color:#a61717"),console.log(c.join("\\n"))}function BF(e){return iD(e,()=>e.createProgram(),"Unable to create WebGLProgram.")}function VF(e,t){if(AF(e,()=>e.linkProgram(t)),!Xe().get("ENGINE_COMPILE_ONLY")&&!1===e.getProgramParameter(t,e.LINK_STATUS))throw console.log(e.getProgramInfoLog(t)),new Error("Failed to link vertex and fragment shaders.")}function UF(e,t){if(AF(e,()=>e.validateProgram(t)),!1===e.getProgramParameter(t,e.VALIDATE_STATUS))throw console.log(e.getProgramInfoLog(t)),new Error("Shader program validation failed.")}function WF(e,t){const n=iD(e,()=>e.createBuffer(),"Unable to create WebGLBuffer");return AF(e,()=>e.bindBuffer(e.ARRAY_BUFFER,n)),AF(e,()=>e.bufferData(e.ARRAY_BUFFER,t,e.STATIC_DRAW)),n}function GF(e,t){const n=iD(e,()=>e.createBuffer(),"Unable to create WebGLBuffer");return AF(e,()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,n)),AF(e,()=>e.bufferData(e.ELEMENT_ARRAY_BUFFER,t,e.STATIC_DRAW)),n}function HF(){return 2===Xe().getNumber("WEBGL_VERSION")?1:4}function jF(e){return iD(e,()=>e.createTexture(),"Unable to create WebGLTexture.")}function qF(e,t){const n=Xe().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(e<=0||t<=0)throw new Error(`Requested texture size [${e}x${t}] is invalid.`);if(e>n||t>n)throw new Error(`Requested texture size [${e}x${t}] greater than WebGL maximum on this browser / GPU [${n}x${n}].`)}function KF(e){return iD(e,()=>e.createFramebuffer(),"Unable to create WebGLFramebuffer.")}function XF(e,t,n,r,s,a,i){const o=e.getAttribLocation(t,n);return-1!==o&&(AF(e,()=>e.bindBuffer(e.ARRAY_BUFFER,r)),AF(e,()=>e.vertexAttribPointer(o,s,e.FLOAT,!1,a,i)),AF(e,()=>e.enableVertexAttribArray(o)),!0)}function YF(e,t,n){oD(e,n),AF(e,()=>e.activeTexture(e.TEXTURE0+n)),AF(e,()=>e.bindTexture(e.TEXTURE_2D,t))}function JF(e,t){oD(e,t),AF(e,()=>e.activeTexture(e.TEXTURE0+t)),AF(e,()=>e.bindTexture(e.TEXTURE_2D,null))}function ZF(e,t,n){return iD(e,()=>e.getUniformLocation(t,n),\'uniform "\'+n+\'" not present in program.\')}function QF(e,t,n){return e.getUniformLocation(t,n)}function eD(e,t,n,r){AF(e,()=>YF(e,t,r)),AF(e,()=>e.uniform1i(n,r))}function tD(e){AF(e,()=>e.bindFramebuffer(e.FRAMEBUFFER,null)),AF(e,()=>e.viewport(0,0,e.canvas.width,e.canvas.height)),AF(e,()=>e.scissor(0,0,e.canvas.width,e.canvas.height))}function nD(e,t,n){AF(e,()=>e.bindFramebuffer(e.FRAMEBUFFER,n)),AF(e,()=>e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,t,0))}function rD(e,t){AF(e,()=>e.bindFramebuffer(e.FRAMEBUFFER,t)),AF(e,()=>e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,null,0))}function sD(e){const t=e.checkFramebufferStatus(e.FRAMEBUFFER);if(t!==e.FRAMEBUFFER_COMPLETE)throw new Error("Error binding framebuffer: "+aD(e,t))}function aD(e,t){switch(t){case e.FRAMEBUFFER_INCOMPLETE_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_ATTACHMENT";case e.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT";case e.FRAMEBUFFER_INCOMPLETE_DIMENSIONS:return"FRAMEBUFFER_INCOMPLETE_DIMENSIONS";case e.FRAMEBUFFER_UNSUPPORTED:return"FRAMEBUFFER_UNSUPPORTED";default:return`unknown error ${t}`}}function iD(e,t,n){const r=AF(e,()=>t());if(null==r)throw new Error(n);return r}function oD(e,t){const n=e.MAX_COMBINED_TEXTURE_IMAGE_UNITS-1,r=t+e.TEXTURE0;if(r<e.TEXTURE0||r>n)throw new Error(`textureUnit must be in [gl.TEXTURE0, gl.TEXTURE${n}].`)}function uD(e,t=2){return le(e.slice(0,e.length-t))}function lD(e){if(0===e.length)throw Error("Cannot get rows and columns of an empty shape array.");return[e.length>1?e[e.length-2]:1,e[e.length-1]]}function cD(e){let t=[1,1,1];return 0===e.length||1===e.length&&1===e[0]||(t=[uD(e),...lD(e)]),t}function hD(e,t=!1){let n=Xe().getNumber("WEBGL_MAX_TEXTURE_SIZE"),r=Xe().getNumber("WEBGL_MAX_SIZE_FOR_NARROW_TEXTURE");if(r===1/0&&Xe().getBool("WEBGL_AUTO_SQUARIFY_NARROW_TEXTURE_SHAPE")&&(r=n/2),t&&(n*=2,r*=2,1===(e=e.map((t,n)=>n>=e.length-2?te(e[n]):e[n])).length&&(e=[2,e[0]])),2!==e.length){const t=ve(e);e=t.newShape}let s=le(e),a=null;e.length<=1&&s<=n?a=[1,s]:2===e.length&&e[0]<=n&&e[1]<=n?a=e:3===e.length&&e[0]*e[1]<=n&&e[2]<=n?a=[e[0]*e[1],e[2]]:3===e.length&&e[0]<=n&&e[1]*e[2]<=n?a=[e[0],e[1]*e[2]]:4===e.length&&e[0]*e[1]*e[2]<=n&&e[3]<=n?a=[e[0]*e[1]*e[2],e[3]]:4===e.length&&e[0]<=n&&e[1]*e[2]*e[3]<=n&&(a=[e[0],e[1]*e[2]*e[3]]);const i=null!=a&&Math.max(...a)>r&&Math.min(...a)<=(t?2:1)&&Math.min(...a)>0;if(null==a||i)if(t){const t=uD(e);let n=2,r=2;e.length&&([n,r]=lD(e)),s=t*(n/2)*(r/2),a=me(s).map(e=>2*e)}else a=me(s);return a}function dD(e){return e%2==0}function pD(e,t){if(de(e=e.slice(-2),t=t.slice(-2)))return!0;if(!e.length||!t.length)return!0;if(0===e[0]||0===e[1]||0===t[0]||0===t[1])return!0;if(e.length!==t.length){const n=e[e.length-1],r=t[t.length-1];if(n===r)return!0;if(dD(n)&&dD(r)&&(1===e[0]||1===t[0]))return!0}return e[1]===t[1]&&dD(e[0])&&dD(t[0])}let fD,mD;function gD(e){if(null==fD){const t=kF(e);fD=t.getParameter(t.MAX_TEXTURE_SIZE)}return fD}function yD(){fD=null}function bD(){mD=null}function xD(e){if(null==mD){const t=kF(e);mD=t.getParameter(t.MAX_TEXTURE_IMAGE_UNITS)}return Math.min(16,mD)}function wD(e){if(0===e)return 0;let t;const n=kF(e);return t=vD(n,"EXT_disjoint_timer_query_webgl2")&&2===e?2:vD(n,"EXT_disjoint_timer_query")?1:0,t}function vD(e,t){return null!=e.getExtension(t)}function kD(e){try{if(null!=kF(e))return!0}catch(e){return console.log("Error when getting WebGL context: ",e),!1}return!1}function ID(e){if(0===e)return!1;const t=kF(e);if(1===e){if(!vD(t,"OES_texture_float"))return!1}else if(!vD(t,"EXT_color_buffer_float"))return!1;return ND(t)}function SD(e){if(0===e)return!1;const t=kF(e);if(1!==e){if(vD(t,"EXT_color_buffer_float"))return ND(t);const e="EXT_color_buffer_half_float";if(vD(t,e)){const n=t.getExtension(e);return function(e,t){const n=$F(e,t),r=e.createTexture();e.bindTexture(e.TEXTURE_2D,r);e.texImage2D(e.TEXTURE_2D,0,n.internalFormatHalfFloat,1,1,0,n.textureFormatFloat,n.textureTypeHalfFloat,null);const s=e.createFramebuffer();e.bindFramebuffer(e.FRAMEBUFFER,s),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,r,0);const a=e.checkFramebufferStatus(e.FRAMEBUFFER)===e.FRAMEBUFFER_COMPLETE;return e.bindTexture(e.TEXTURE_2D,null),e.bindFramebuffer(e.FRAMEBUFFER,null),e.deleteTexture(r),e.deleteFramebuffer(s),a}(t,n)}return!1}return!!vD(t,"OES_texture_float")&&(!!vD(t,"WEBGL_color_buffer_float")&&ND(t))}function ND(e){const t=$F(e),n=e.createTexture();e.bindTexture(e.TEXTURE_2D,n),e.texImage2D(e.TEXTURE_2D,0,t.internalFormatFloat,1,1,0,t.textureFormatFloat,t.textureTypeFloat,null);const r=e.createFramebuffer();e.bindFramebuffer(e.FRAMEBUFFER,r),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,n,0);const s=e.checkFramebufferStatus(e.FRAMEBUFFER)===e.FRAMEBUFFER_COMPLETE;return e.bindTexture(e.TEXTURE_2D,null),e.bindFramebuffer(e.FRAMEBUFFER,null),e.deleteTexture(n),e.deleteFramebuffer(r),s}function TD(e){return 2===e&&null!=kF(e).fenceSync}function ED(e,t){Array.isArray(e)||(e=[e]),e.forEach(e=>{null!=e&&ie("complex64"!==e.dtype,()=>`${t} does not support complex64 tensors in the WebGL backend.`)})}const CD=Xe();function $D(){let e,t,n,r,s,a,i,o,u,l;return 2===Xe().getNumber("WEBGL_VERSION")?(e="#version 300 es",t="in",n="out",r="in",s="texture",a="outputColor",i="out vec4 outputColor;",o=Xe().getBool("WEBGL2_ISNAN_CUSTOM")?"\\n      bool isnan_custom(float val) {\\n        uint floatToUint = floatBitsToUint(val);\\n        return (floatToUint & 0x7fffffffu) > 0x7f800000u;\\n      }\\n\\n      bvec4 isnan_custom(vec4 val) {\\n        return bvec4(isnan_custom(val.x),\\n          isnan_custom(val.y), isnan_custom(val.z), isnan_custom(val.w));\\n      }\\n\\n      #define isnan(value) isnan_custom(value)\\n    ":"",u="",l="\\n      #define round(value) newRound(value)\\n      int newRound(float value) {\\n        return int(floor(value + 0.5));\\n      }\\n\\n      ivec4 newRound(vec4 value) {\\n        return ivec4(floor(value + vec4(0.5)));\\n      }\\n    "):(e="",t="attribute",n="varying",r="varying",s="texture2D",a="gl_FragColor",i="",o="\\n      #define isnan(value) isnan_custom(value)\\n      bool isnan_custom(float val) {\\n        return (val > 0. || val < 1. || val == 0.) ? false : true;\\n      }\\n      bvec4 isnan_custom(vec4 val) {\\n        return bvec4(isnan(val.x), isnan(val.y), isnan(val.z), isnan(val.w));\\n      }\\n    ",u="\\n      uniform float INFINITY;\\n\\n      bool isinf(float val) {\\n        return abs(val) == INFINITY;\\n      }\\n      bvec4 isinf(vec4 val) {\\n        return equal(abs(val), vec4(INFINITY));\\n      }\\n    ",l="\\n      int round(float value) {\\n        return int(floor(value + 0.5));\\n      }\\n\\n      ivec4 round(vec4 value) {\\n        return ivec4(floor(value + vec4(0.5)));\\n      }\\n    "),{version:e,attribute:t,varyingVs:n,varyingFs:r,texture2D:s,output:a,defineOutput:i,defineSpecialNaN:o,defineSpecialInf:u,defineRound:l}}function AD(e,t,n="index"){const r=De(t);return r.map((t,s)=>`int ${e[s]} = ${n} / ${t}; ${s===r.length-1?`int ${e[s+1]} = ${n} - ${e[s]} * ${t}`:`index -= ${e[s]} * ${t}`};`).join("")}function RD(e,t,n="index"){const r=De(t);return r.map((t,s)=>`int ${e[s]} = ${n} / outShapeStrides[${s}]; ${s===r.length-1?`int ${e[s+1]} = ${n} - ${e[s]} * outShapeStrides[${s}]`:`index -= ${e[s]} * outShapeStrides[${s}]`};`).join("")}function _D(e){const t=De(e).map(e=>e.toString());return`\\n  int getFlatIndex(ivec3 coords) {\\n    return coords.x * ${t[0]} + coords.y * ${t[1]} + coords.z;\\n  }\\n`}CD.registerFlag("HAS_WEBGL",()=>CD.getNumber("WEBGL_VERSION")>0),CD.registerFlag("WEBGL_VERSION",()=>kD(2)?2:kD(1)?1:0),CD.registerFlag("WEBGL_CHECK_NUMERICAL_PROBLEMS",()=>!1),CD.registerFlag("WEBGL_BUFFER_SUPPORTED",()=>2===CD.get("WEBGL_VERSION")),CD.registerFlag("WEBGL_CPU_FORWARD",()=>!0),CD.registerFlag("WEBGL_FORCE_F16_TEXTURES",()=>!1),CD.registerFlag("WEBGL_PACK",()=>CD.getBool("HAS_WEBGL")),CD.registerFlag("WEBGL_PACK_NORMALIZATION",()=>CD.getBool("WEBGL_PACK")),CD.registerFlag("WEBGL_PACK_CLIP",()=>CD.getBool("WEBGL_PACK")),CD.registerFlag("WEBGL_PACK_DEPTHWISECONV",()=>CD.getBool("WEBGL_PACK")),CD.registerFlag("WEBGL_PACK_BINARY_OPERATIONS",()=>CD.getBool("WEBGL_PACK")),CD.registerFlag("WEBGL_PACK_UNARY_OPERATIONS",()=>CD.getBool("WEBGL_PACK")),CD.registerFlag("WEBGL_PACK_ARRAY_OPERATIONS",()=>CD.getBool("WEBGL_PACK")),CD.registerFlag("WEBGL_PACK_IMAGE_OPERATIONS",()=>CD.getBool("WEBGL_PACK")),CD.registerFlag("WEBGL_PACK_REDUCE",()=>CD.getBool("WEBGL_PACK")),CD.registerFlag("WEBGL_LAZILY_UNPACK",()=>CD.getBool("WEBGL_PACK")),CD.registerFlag("WEBGL_CONV_IM2COL",()=>CD.getBool("WEBGL_PACK")),CD.registerFlag("WEBGL_PACK_CONV2DTRANSPOSE",()=>CD.getBool("WEBGL_PACK")),CD.registerFlag("WEBGL_MAX_TEXTURE_SIZE",()=>gD(CD.getNumber("WEBGL_VERSION"))),CD.registerFlag("WEBGL_MAX_TEXTURES_IN_SHADER",()=>xD(CD.getNumber("WEBGL_VERSION"))),CD.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION",()=>{const e=CD.getNumber("WEBGL_VERSION");return 0===e?0:wD(e)}),CD.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE",()=>CD.getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0&&!Pa()),CD.registerFlag("WEBGL_RENDER_FLOAT32_CAPABLE",()=>ID(CD.getNumber("WEBGL_VERSION"))),CD.registerFlag("WEBGL_RENDER_FLOAT32_ENABLED",()=>!CD.getBool("WEBGL_FORCE_F16_TEXTURES")&&CD.getBool("WEBGL_RENDER_FLOAT32_CAPABLE")),CD.registerFlag("WEBGL_DOWNLOAD_FLOAT_ENABLED",()=>SD(CD.getNumber("WEBGL_VERSION"))),CD.registerFlag("WEBGL_FENCE_API_ENABLED",()=>TD(CD.getNumber("WEBGL_VERSION"))),CD.registerFlag("WEBGL_SIZE_UPLOAD_UNIFORM",()=>CD.getBool("WEBGL_RENDER_FLOAT32_ENABLED")?4:0),CD.registerFlag("WEBGL_DELETE_TEXTURE_THRESHOLD",()=>-1,e=>{if("number"!=typeof e)throw new Error(`WEBGL_DELETE_TEXTURE_THRESHOLD must be a number but got ${e}.`);if(e<0&&-1!==e)throw new Error(`WEBGL_DELETE_TEXTURE_THRESHOLD must be -1 (indicating never delete) or at least 0, but got ${e}.`)}),CD.registerFlag("WEBGL_FLUSH_THRESHOLD",()=>Pa()?1:-1,e=>{if("number"!=typeof e)throw new Error(`WEBGL_FLUSH_THRESHOLD must be a number but got ${e}.`);if(e<0&&-1!==e)throw new Error(`WEBGL_FLUSH_THRESHOLD must be -1 (indicating never manual flush) or at least 0, but got ${e}.`)}),CD.registerFlag("CPU_HANDOFF_SIZE_THRESHOLD",()=>128),CD.registerFlag("WEBGL_USE_SHAPES_UNIFORMS",()=>!1),CD.registerFlag("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD",()=>1e5),CD.registerFlag("TOPK_K_CPU_HANDOFF_THRESHOLD",()=>128),CD.registerFlag("WEBGL_EXP_CONV",()=>!1),CD.registerFlag("SOFTWARE_WEBGL_ENABLED",()=>CD.getBool("IS_TEST")),CD.registerFlag("WEBGL_MAX_SIZE_FOR_NARROW_TEXTURE",()=>1/0),CD.registerFlag("WEBGL_AUTO_SQUARIFY_NARROW_TEXTURE_SHAPE",()=>!1),CD.registerFlag("WEBGL2_ISNAN_CUSTOM",()=>!1),CD.registerFlag("ENGINE_COMPILE_ONLY",()=>!1);const MD="\\n  const float FLOAT_MAX = 1.70141184e38;\\n  const float FLOAT_MIN = 1.17549435e-38;\\n\\n  lowp vec4 encode_float(highp float v) {\\n    if (isnan(v)) {\\n      return vec4(255, 255, 255, 255);\\n    }\\n\\n    highp float av = abs(v);\\n\\n    if(av < FLOAT_MIN) {\\n      return vec4(0.0, 0.0, 0.0, 0.0);\\n    } else if(v > FLOAT_MAX) {\\n      return vec4(0.0, 0.0, 128.0, 127.0) / 255.0;\\n    } else if(v < -FLOAT_MAX) {\\n      return vec4(0.0, 0.0,  128.0, 255.0) / 255.0;\\n    }\\n\\n    highp vec4 c = vec4(0,0,0,0);\\n\\n    highp float e = floor(log2(av));\\n    highp float m = exp2(fract(log2(av))) - 1.0;\\n\\n    c[2] = floor(128.0 * m);\\n    m -= c[2] / 128.0;\\n    c[1] = floor(32768.0 * m);\\n    m -= c[1] / 32768.0;\\n    c[0] = floor(8388608.0 * m);\\n\\n    highp float ebias = e + 127.0;\\n    c[3] = floor(ebias / 2.0);\\n    ebias -= c[3] * 2.0;\\n    c[2] += floor(ebias) * 128.0;\\n\\n    c[3] += 128.0 * step(0.0, -v);\\n\\n    return c / 255.0;\\n  }\\n",{getBroadcastDims:FD}=y;function DD(e,t,n){const r=[];if(e.forEach(e=>{const t=le(e.shapeInfo.logicalShape);if(e.shapeInfo.isUniform?r.push(`uniform float ${e.name}${t>1?`[${t}]`:""};`):(r.push(`uniform sampler2D ${e.name};`),r.push(`uniform int offset${e.name};`)),n.enableShapeUniforms){const{uniformShape:t}=HD(n.packedInputs,e.shapeInfo.logicalShape,e.shapeInfo.texShape);switch(t.length){case 1:r.push(`uniform int ${e.name}Shape;`);break;case 2:r.push(`uniform ivec2 ${e.name}Shape;`);break;case 3:r.push(`uniform ivec3 ${e.name}Shape;`);break;case 4:r.push(`uniform ivec4 ${e.name}Shape;`)}r.push(`uniform ivec2 ${e.name}TexShape;`)}}),n.enableShapeUniforms){switch(t.logicalShape.length){case 1:r.push("uniform int outShape;");break;case 2:r.push("uniform ivec2 outShape;"),r.push("uniform int outShapeStrides;");break;case 3:r.push("uniform ivec3 outShape;"),r.push("uniform ivec2 outShapeStrides;");break;case 4:r.push("uniform ivec4 outShape;"),r.push("uniform ivec3 outShapeStrides;")}r.push("uniform ivec2 outTexShape;")}n.customUniforms&&n.customUniforms.forEach(e=>{r.push(`uniform ${e.type} ${e.name}${e.arrayIndex?`[${e.arrayIndex}]`:""};`)});const s=r.join("\\n"),a=e.map(e=>function(e,t,n=!1,r){let s="";s+=n?LD(e,r):OD(e,r);const a=e.shapeInfo.logicalShape,i=t.logicalShape;return a.length<=i.length&&(s+=n?function(e,t){const n=e.name,r=n.charAt(0).toUpperCase()+n.slice(1),s="get"+r+"AtOutCoords",a=e.shapeInfo.logicalShape.length,i=t.logicalShape.length,o=FD(e.shapeInfo.logicalShape,t.logicalShape),u=GD(i),l=i-a;let c;const h=["x","y","z","w","u","v"];c=0===a?"":i<2&&o.length>=1?"coords = 0;":o.map(e=>`coords.${h[e+l]} = 0;`).join("\\n");let d="";d=i<2&&a>0?"coords":e.shapeInfo.logicalShape.map((e,t)=>`coords.${h[t+l]}`).join(", ");let p="return outputValue;";const f=1===le(e.shapeInfo.logicalShape),m=1===le(t.logicalShape);if(1!==a||f||m){if(f&&!m)p=1===i?"\\n        return vec4(outputValue.x, outputValue.x, 0., 0.);\\n      ":"\\n        return vec4(outputValue.x);\\n      ";else if(o.length){const e=a-2,t=a-1;o.indexOf(e)>-1&&o.indexOf(t)>-1?p="return vec4(outputValue.x);":o.indexOf(e)>-1?p="return vec4(outputValue.x, outputValue.y, outputValue.x, outputValue.y);":o.indexOf(t)>-1&&(p="return vec4(outputValue.xx, outputValue.zz);")}}else p="\\n      return vec4(outputValue.xy, outputValue.xy);\\n    ";return`\\n    vec4 ${s}() {\\n      ${u} coords = getOutputCoords();\\n      ${c}\\n      vec4 outputValue = get${r}(${d});\\n      ${p}\\n    }\\n  `}(e,t):function(e,t){const n=e.name,r=n.charAt(0).toUpperCase()+n.slice(1),s="get"+r+"AtOutCoords",a=t.texShape,i=e.shapeInfo.texShape,o=e.shapeInfo.logicalShape.length,u=t.logicalShape.length;if(!e.shapeInfo.isUniform&&o===u&&null==e.shapeInfo.flatOffset&&de(i,a))return`\\n      float ${s}() {\\n        return sampleTexture(${n}, resultUV);\\n      }\\n    `;const l=GD(u),c=FD(e.shapeInfo.logicalShape,t.logicalShape),h=u-o;let d;const p=["x","y","z","w","u","v"];d=0===o?"":u<2&&c.length>=1?"coords = 0;":c.map(e=>`coords.${p[e+h]} = 0;`).join("\\n");let f="";return f=u<2&&o>0?"coords":e.shapeInfo.logicalShape.map((e,t)=>`coords.${p[t+h]}`).join(", "),`\\n    float ${s}() {\\n      ${l} coords = getOutputCoords();\\n      ${d}\\n      return get${r}(${f});\\n    }\\n  `}(e,t)),s}(e,t,n.packedInputs,n.enableShapeUniforms)).join("\\n"),i=t.texShape,o=$D(),u=function(e){return`\\n    float sampleTexture(sampler2D textureSampler, vec2 uv) {\\n      return ${e.texture2D}(textureSampler, uv).r;\\n    }\\n  `}(o);let l,c,h=function(e){return`${e.version}\\n    precision highp float;\\n    precision highp int;\\n    precision highp sampler2D;\\n    ${e.varyingFs} vec2 resultUV;\\n    ${e.defineOutput}\\n    const vec2 halfCR = vec2(0.5, 0.5);\\n\\n    struct ivec5\\n    {\\n      int x;\\n      int y;\\n      int z;\\n      int w;\\n      int u;\\n    };\\n\\n    struct ivec6\\n    {\\n      int x;\\n      int y;\\n      int z;\\n      int w;\\n      int u;\\n      int v;\\n    };\\n\\n    uniform float NAN;\\n    ${e.defineSpecialNaN}\\n    ${e.defineSpecialInf}\\n    ${e.defineRound}\\n\\n    int imod(int x, int y) {\\n      return x - y * (x / y);\\n    }\\n\\n    int idiv(int a, int b, float sign) {\\n      int res = a / b;\\n      int mod = imod(a, b);\\n      if (sign < 0. && mod != 0) {\\n        res -= 1;\\n      }\\n      return res;\\n    }\\n\\n    //Based on the work of Dave Hoskins\\n    //https://www.shadertoy.com/view/4djSRW\\n    #define HASHSCALE1 443.8975\\n    float random(float seed){\\n      vec2 p = resultUV * seed;\\n      vec3 p3  = fract(vec3(p.xyx) * HASHSCALE1);\\n      p3 += dot(p3, p3.yzx + 19.19);\\n      return fract((p3.x + p3.y) * p3.z);\\n    }\\n\\n    ${zD}\\n    ${PD}\\n    ${BD}\\n  `}(o);return t.isPacked?(l=function(e,t,n){switch(e.length){case 0:return"\\n    int getOutputCoords() {\\n      return 0;\\n    }\\n  ";case 1:return function(e,t,n){const r=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];return 1===r[0]?n?"\\n      int getOutputCoords() {\\n        return 2 * int(resultUV.x * ceil(float(outTexShape[1]) / 2.0));\\n      }\\n    ":`\\n      int getOutputCoords() {\\n        return 2 * int(resultUV.x * ${r[1]}.0);\\n      }\\n    `:1===r[1]?n?"\\n      int getOutputCoords() {\\n        return 2 * int(resultUV.y * ceil(float(outTexShape[0]) / 2.0));\\n      }\\n    ":`\\n      int getOutputCoords() {\\n        return 2 * int(resultUV.y * ${r[0]}.0);\\n      }\\n    `:n?"\\n    int getOutputCoords() {\\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\\n      ivec2 resTexRC = ivec2(resultUV.yx *\\n                             vec2(packedTexShape[0], packedTexShape[1]));\\n      return 2 * (resTexRC.x * packedTexShape[1] + resTexRC.y);\\n    }\\n  ":`\\n    int getOutputCoords() {\\n      ivec2 resTexRC = ivec2(resultUV.yx *\\n                             vec2(${r[0]}, ${r[1]}));\\n      return 2 * (resTexRC.x * ${r[1]} + resTexRC.y);\\n    }\\n  `}(0,t,n);case 2:return function(e,t,n){const r=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];if(de(e,t))return n?"\\n      ivec2 getOutputCoords() {\\n        ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\\n        return 2 * ivec2(resultUV.yx * vec2(packedTexShape[0], packedTexShape[1]));\\n      }\\n    ":`\\n      ivec2 getOutputCoords() {\\n        return 2 * ivec2(resultUV.yx * vec2(${r[0]}, ${r[1]}));\\n      }\\n    `;const s=Math.ceil(e[1]/2);return n?"\\n    ivec2 getOutputCoords() {\\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\\n      int texelsInLogicalRow = int(ceil(float(outShape[1]) / 2.0));\\n      ivec2 resTexRC = ivec2(resultUV.yx *\\n                             vec2(packedTexShape[0], packedTexShape[1]));\\n\\n      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;\\n      int r = 2 * (index / texelsInLogicalRow);\\n      int c = imod(index, texelsInLogicalRow) * 2;\\n\\n      return ivec2(r, c);\\n    }\\n  ":`\\n    ivec2 getOutputCoords() {\\n      ivec2 resTexRC = ivec2(resultUV.yx *\\n                             vec2(${r[0]}, ${r[1]}));\\n\\n      int index = resTexRC.x * ${r[1]} + resTexRC.y;\\n      int r = 2 * (index / ${s});\\n      int c = imod(index, ${s}) * 2;\\n\\n      return ivec2(r, c);\\n    }\\n  `}(e,t,n);case 3:return function(e,t,n){if(n)return"\\n    ivec3 getOutputCoords() {\\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\\n      int texelsInLogicalRow = int(ceil(float(outShape[2]) / 2.0));\\n      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[1]) / 2.0));\\n      ivec2 resTexRC = ivec2(resultUV.yx *\\n                             vec2(packedTexShape[0], packedTexShape[1]));\\n      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;\\n\\n      int b = index / texelsInBatch;\\n      index -= b * texelsInBatch;\\n\\n      int r = 2 * (index / texelsInLogicalRow);\\n      int c = imod(index, texelsInLogicalRow) * 2;\\n\\n      return ivec3(b, r, c);\\n    }\\n  ";const r=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],s=Math.ceil(e[2]/2),a=s*Math.ceil(e[1]/2);return`\\n    ivec3 getOutputCoords() {\\n      ivec2 resTexRC = ivec2(resultUV.yx *\\n                             vec2(${r[0]}, ${r[1]}));\\n      int index = resTexRC.x * ${r[1]} + resTexRC.y;\\n\\n      int b = index / ${a};\\n      index -= b * ${a};\\n\\n      int r = 2 * (index / ${s});\\n      int c = imod(index, ${s}) * 2;\\n\\n      return ivec3(b, r, c);\\n    }\\n  `}(e,t,n);default:return function(e,t,n){if(n)return"\\n    ivec4 getOutputCoords() {\\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\\n      ivec2 resTexRC = ivec2(resultUV.yx *\\n                             vec2(packedTexShape[0], packedTexShape[1]));\\n      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;\\n\\n      int texelsInLogicalRow = int(ceil(float(outShape[3]) / 2.0));\\n      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[2]) / 2.0));\\n      int texelsInBatchN = texelsInBatch * outShape[1];\\n\\n      int b2 = index / texelsInBatchN;\\n      index -= b2 * texelsInBatchN;\\n\\n      int b = index / texelsInBatch;\\n      index -= b * texelsInBatch;\\n\\n      int r = 2 * (index / texelsInLogicalRow);\\n      int c = imod(index, texelsInLogicalRow) * 2;\\n\\n      return ivec4(b2, b, r, c);\\n    }\\n  ";const r=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],s=Math.ceil(e[e.length-1]/2),a=s*Math.ceil(e[e.length-2]/2);let i=a,o="",u="b, r, c";for(let t=2;t<e.length-1;t++)i*=e[e.length-t-1],o=`\\n      int b${t} = index / ${i};\\n      index -= b${t} * ${i};\\n    `+o,u=`b${t}, `+u;return`\\n    ivec${e.length} getOutputCoords() {\\n      ivec2 resTexRC = ivec2(resultUV.yx *\\n                             vec2(${r[0]}, ${r[1]}));\\n      int index = resTexRC.x * ${r[1]} + resTexRC.y;\\n\\n      ${o}\\n\\n      int b = index / ${a};\\n      index -= b * ${a};\\n\\n      int r = 2 * (index / ${s});\\n      int c = imod(index, ${s}) * 2;\\n\\n      return ivec${e.length}(${u});\\n    }\\n  `}(e,t,n)}}(t.logicalShape,i,n.enableShapeUniforms),c=function(e){return`\\n    void setOutput(vec4 val) {\\n      ${e.output} = val;\\n    }\\n  `}(o)):(l=function(e,t,n){switch(e.length){case 0:return"\\n    int getOutputCoords() {\\n      return 0;\\n    }\\n  ";case 1:return function(e,t,n){return 1===t[0]?n?"\\n      int getOutputCoords() {\\n        return int(resultUV.x * float(outTexShape[1]));\\n      }\\n    ":`\\n      int getOutputCoords() {\\n        return int(resultUV.x * ${t[1]}.0);\\n      }\\n    `:1===t[1]?n?"\\n      int getOutputCoords() {\\n        return int(resultUV.y * float(outTexShape[0]));\\n      }\\n    ":`\\n      int getOutputCoords() {\\n        return int(resultUV.y * ${t[0]}.0);\\n      }\\n    `:n?"\\n    int getOutputCoords() {\\n      ivec2 resTexRC = ivec2(resultUV.yx *\\n                             vec2(outTexShape[0], outTexShape[1]));\\n      return resTexRC.x * outTexShape[1] + resTexRC.y;\\n    }\\n  ":`\\n    int getOutputCoords() {\\n      ivec2 resTexRC = ivec2(resultUV.yx *\\n                             vec2(${t[0]}, ${t[1]}));\\n      return resTexRC.x * ${t[1]} + resTexRC.y;\\n    }\\n  `}(0,t,n);case 2:return function(e,t,n){return de(e,t)?n?"\\n      ivec2 getOutputCoords() {\\n        return ivec2(resultUV.yx * vec2(outTexShape[0], outTexShape[1]));\\n      }\\n    ":`\\n      ivec2 getOutputCoords() {\\n        return ivec2(resultUV.yx * vec2(${t[0]}, ${t[1]}));\\n      }\\n    `:1===e[1]?n?"\\n      ivec2 getOutputCoords() {\\n        ivec2 resTexRC = ivec2(resultUV.yx *\\n                               vec2(outTexShape[0], outTexShape[1]));\\n        int index = resTexRC.x * outTexShape[1] + resTexRC.y;\\n        return ivec2(index, 0);\\n      }\\n    ":`\\n      ivec2 getOutputCoords() {\\n        ivec2 resTexRC = ivec2(resultUV.yx *\\n                               vec2(${t[0]}, ${t[1]}));\\n        int index = resTexRC.x * ${t[1]} + resTexRC.y;\\n        return ivec2(index, 0);\\n      }\\n    `:1===e[0]?n?"\\n      ivec2 getOutputCoords() {\\n        ivec2 resTexRC = ivec2(resultUV.yx *\\n                               vec2(outTexShape[0], outTexShape[1]));\\n        int index = resTexRC.x * outTexShape[1] + resTexRC.y;\\n        return ivec2(0, index);\\n      }\\n    ":`\\n      ivec2 getOutputCoords() {\\n        ivec2 resTexRC = ivec2(resultUV.yx *\\n                               vec2(${t[0]}, ${t[1]}));\\n        int index = resTexRC.x * ${t[1]} + resTexRC.y;\\n        return ivec2(0, index);\\n      }\\n    `:n?"\\n    ivec2 getOutputCoords() {\\n      ivec2 resTexRC = ivec2(resultUV.yx *\\n                             vec2(outTexShape[0], outTexShape[1]));\\n      int index = resTexRC.x * outTexShape[1] + resTexRC.y;\\n      int r = index / outShape[1];\\n      int c = index - r * outShape[1];\\n      return ivec2(r, c);\\n    }\\n  ":`\\n    ivec2 getOutputCoords() {\\n      ivec2 resTexRC = ivec2(resultUV.yx *\\n                             vec2(${t[0]}, ${t[1]}));\\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\\n      int r = index / ${e[1]};\\n      int c = index - r * ${e[1]};\\n      return ivec2(r, c);\\n    }\\n  `}(e,t,n);case 3:return function(e,t,n){if(n)return`\\n  ivec3 getOutputCoords() {\\n    ivec2 resTexRC = ivec2(resultUV.yx *\\n                           vec2(outTexShape[0], outTexShape[1]));\\n    int index = resTexRC.x * outTexShape[1] + resTexRC.y;\\n    ${RD(["r","c","d"],e)}\\n    return ivec3(r, c, d);\\n  }\\n`;const r=AD(["r","c","d"],e);return`\\n    ivec3 getOutputCoords() {\\n      ivec2 resTexRC = ivec2(resultUV.yx *\\n                             vec2(${t[0]}, ${t[1]}));\\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\\n      ${r}\\n      return ivec3(r, c, d);\\n    }\\n  `}(e,t,n);case 4:return function(e,t,n){if(n)return`\\n    ivec4 getOutputCoords() {\\n      ivec2 resTexRC = ivec2(resultUV.yx *\\n        vec2(outTexShape[0], outTexShape[1]));\\n      int index = resTexRC.x * outTexShape[1] + resTexRC.y;\\n      ${RD(["r","c","d","d2"],e)}\\n      return ivec4(r, c, d, d2);\\n    }\\n  `;const r=AD(["r","c","d","d2"],e);return`\\n    ivec4 getOutputCoords() {\\n      ivec2 resTexRC = ivec2(resultUV.yx *\\n        vec2(${t[0]}, ${t[1]}));\\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\\n      ${r}\\n      return ivec4(r, c, d, d2);\\n    }\\n  `}(e,t,n);case 5:return function(e,t){const n=AD(["r","c","d","d2","d3"],e);return`\\n    ivec5 getOutputCoords() {\\n      ivec2 resTexRC = ivec2(resultUV.yx * vec2(${t[0]},\\n                             ${t[1]}));\\n\\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\\n\\n      ${n}\\n\\n      ivec5 outShape = ivec5(r, c, d, d2, d3);\\n      return outShape;\\n    }\\n  `}(e,t);case 6:return function(e,t){const n=AD(["r","c","d","d2","d3","d4"],e);return`\\n    ivec6 getOutputCoords() {\\n      ivec2 resTexRC = ivec2(resultUV.yx *\\n        vec2(${t[0]}, ${t[1]}));\\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\\n\\n      ${n}\\n\\n      ivec6 result = ivec6(r, c, d, d2, d3, d4);\\n      return result;\\n    }\\n  `}(e,t);default:throw new Error(`${e.length}-D output sampling is not yet supported`)}}(t.logicalShape,i,n.enableShapeUniforms),c=function(e){return`\\n    void setOutput(float val) {\\n      ${e.output} = vec4(val, 0, 0, 0);\\n    }\\n  `}(o)),n.packedInputs&&(h+=VD),[h,u,c,s,l,a,n.userCode].join("\\n")}function OD(e,t=!1){const n=e.shapeInfo.logicalShape;switch(n.length){case 0:return function(e,t){const n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1);if(e.shapeInfo.isUniform)return`float ${r}() {return ${n};}`;const[s,a]=e.shapeInfo.texShape;if(1===s&&1===a)return`\\n      float ${r}() {\\n        return sampleTexture(${n}, halfCR);\\n      }\\n    `;const i=UD(n);if(t)return`\\n    float ${r}() {\\n      vec2 uv = uvFromFlat(${n}TexShape[0], ${n}TexShape[1], ${i});\\n      return sampleTexture(${n}, uv);\\n    }\\n  `;const[o,u]=e.shapeInfo.texShape;return`\\n    float ${r}() {\\n      vec2 uv = uvFromFlat(${o}, ${u}, ${i});\\n      return sampleTexture(${n}, uv);\\n    }\\n  `}(e,t);case 1:return function(e,t){const n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1);if(e.shapeInfo.isUniform)return`\\n      float ${r}(int index) {\\n        ${WD(e)}\\n      }\\n    `;const s=e.shapeInfo.texShape,a=s[0],i=s[1];if(1===i&&1===a)return`\\n      float ${r}(int index) {\\n        return sampleTexture(${n}, halfCR);\\n      }\\n    `;const o=UD(n);return 1===i?t?`\\n      float ${r}(int index) {\\n        vec2 uv = vec2(0.5, (float(index + ${o}) + 0.5) / float(${n}TexShape[0]));\\n        return sampleTexture(${n}, uv);\\n      }\\n    `:`\\n      float ${r}(int index) {\\n        vec2 uv = vec2(0.5, (float(index + ${o}) + 0.5) / ${a}.0);\\n        return sampleTexture(${n}, uv);\\n      }\\n    `:1===a?t?`\\n      float ${r}(int index) {\\n        vec2 uv = vec2((float(index + ${o}) + 0.5) / float(${n}TexShape[1]), 0.5);\\n        return sampleTexture(${n}, uv);\\n      }\\n    `:`\\n      float ${r}(int index) {\\n        vec2 uv = vec2((float(index + ${o}) + 0.5) / ${i}.0, 0.5);\\n        return sampleTexture(${n}, uv);\\n      }\\n    `:t?`\\n    float ${r}(int index) {\\n      vec2 uv = uvFromFlat(${n}TexShape[0], ${n}TexShape[1], index + ${o});\\n      return sampleTexture(${n}, uv);\\n    }\\n  `:`\\n    float ${r}(int index) {\\n      vec2 uv = uvFromFlat(${a}, ${i}, index + ${o});\\n      return sampleTexture(${n}, uv);\\n    }\\n  `}(e,t);case 2:return function(e,t){const n=e.shapeInfo.logicalShape,r=e.name,s="get"+r.charAt(0).toUpperCase()+r.slice(1),a=e.shapeInfo.texShape;if(null!=a&&de(n,a)){if(t)return`\\n      float ${s}(int row, int col) {\\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(${r}TexShape[1], ${r}TexShape[0]);\\n        return sampleTexture(${r}, uv);\\n      }\\n    `;const e=a[0];return`\\n    float ${s}(int row, int col) {\\n      vec2 uv = (vec2(col, row) + halfCR) / vec2(${a[1]}.0, ${e}.0);\\n      return sampleTexture(${r}, uv);\\n    }\\n  `}const{newShape:i,keptDims:o}=ve(n),u=i;if(u.length<n.length){const n=["row","col"];return`\\n      ${OD(jD(e,u),t)}\\n      float ${s}(int row, int col) {\\n        return ${s}(${qD(n,o)});\\n      }\\n    `}if(e.shapeInfo.isUniform)return`\\n      float ${s}(int row, int col) {\\n        int index = round(dot(vec2(row, col), vec2(${n[1]}, 1)));\\n        ${WD(e)}\\n      }\\n    `;const l=a[0],c=a[1],h=UD(r);return 1===c?t?`\\n      float ${s}(int row, int col) {\\n        float index = dot(vec3(row, col, ${h}), vec3(${r}Shape[1], 1, 1));\\n        vec2 uv = vec2(0.5, (index + 0.5) / float(${r}TexShape[0]));\\n        return sampleTexture(${r}, uv);\\n      }\\n    `:`\\n    float ${s}(int row, int col) {\\n      float index = dot(vec3(row, col, ${h}), vec3(${n[1]}, 1, 1));\\n      vec2 uv = vec2(0.5, (index + 0.5) / ${l}.0);\\n      return sampleTexture(${r}, uv);\\n    }\\n  `:1===l?t?`\\n      float ${s}(int row, int col) {\\n        float index = dot(vec3(row, col, ${h}), vec3(${r}Shape[1], 1, 1));\\n        vec2 uv = vec2((index + 0.5) / float(${r}TexShape[1]), 0.5);\\n        return sampleTexture(${r}, uv);\\n      }\\n    `:`\\n    float ${s}(int row, int col) {\\n      float index = dot(vec3(row, col, ${h}), vec3(${n[1]}, 1, 1));\\n      vec2 uv = vec2((index + 0.5) / ${c}.0, 0.5);\\n      return sampleTexture(${r}, uv);\\n    }\\n  `:t?`\\n      float ${s}(int row, int col) {\\n        // Explicitly use integer operations as dot() only works on floats.\\n        int index = row * ${r}Shape[1] + col + ${h};\\n        vec2 uv = uvFromFlat(${r}TexShape[0], ${r}TexShape[1], index);\\n        return sampleTexture(${r}, uv);\\n      }\\n    `:`\\n  float ${s}(int row, int col) {\\n    // Explicitly use integer operations as dot() only works on floats.\\n    int index = row * ${n[1]} + col + ${h};\\n    vec2 uv = uvFromFlat(${l}, ${c}, index);\\n    return sampleTexture(${r}, uv);\\n  }\\n`}(e,t);case 3:return function(e,t){const n=e.shapeInfo.logicalShape,r=e.name,s="get"+r.charAt(0).toUpperCase()+r.slice(1),a=n[1]*n[2],i=n[2],{newShape:o,keptDims:u}=ve(n),l=o;if(l.length<n.length){const n=["row","col","depth"];return`\\n        ${OD(jD(e,l),t)}\\n        float ${s}(int row, int col, int depth) {\\n          return ${s}(${qD(n,u)});\\n        }\\n      `}if(e.shapeInfo.isUniform)return`\\n      float ${s}(int row, int col, int depth) {\\n        int index = round(dot(vec3(row, col, depth),\\n                          vec3(${a}, ${i}, 1)));\\n        ${WD(e)}\\n      }\\n    `;const c=e.shapeInfo.texShape,h=c[0],d=c[1],p=e.shapeInfo.flatOffset;if(d===a&&null==p)return t?`\\n      float ${s}(int row, int col, int depth) {\\n        int stride1 = ${r}Shape[2];\\n        float texR = float(row);\\n        float texC = dot(vec2(col, depth), vec2(stride1, 1));\\n        vec2 uv = (vec2(texC, texR) + halfCR) /\\n                   vec2(${r}TexShape[1], ${r}TexShape[0]);\\n        return sampleTexture(${r}, uv);\\n      }\\n    `:`\\n        float ${s}(int row, int col, int depth) {\\n          float texR = float(row);\\n          float texC = dot(vec2(col, depth), vec2(${i}, 1));\\n          vec2 uv = (vec2(texC, texR) + halfCR) /\\n                     vec2(${d}.0, ${h}.0);\\n          return sampleTexture(${r}, uv);\\n        }\\n      `;if(d===i&&null==p)return t?`\\n      float ${s}(int row, int col, int depth) {\\n        float texR = dot(vec2(row, col), vec2(${r}Shape[1], 1));\\n        float texC = float(depth);\\n        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${r}TexShape[1], ${r}TexShape[0]);\\n        return sampleTexture(${r}, uv);\\n      }\\n    `:`\\n    float ${s}(int row, int col, int depth) {\\n      float texR = dot(vec2(row, col), vec2(${n[1]}, 1));\\n      float texC = float(depth);\\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${d}.0, ${h}.0);\\n      return sampleTexture(${r}, uv);\\n    }\\n  `;const f=UD(r);return t?`\\n    float ${s}(int row, int col, int depth) {\\n      // Explicitly use integer operations as dot() only works on floats.\\n      int stride0 = ${r}Shape[1] * ${r}Shape[2];\\n      int stride1 = ${r}Shape[2];\\n      int index = row * stride0 + col * stride1 + depth + ${f};\\n      vec2 uv = uvFromFlat(${r}TexShape[0], ${r}TexShape[1], index);\\n      return sampleTexture(${r}, uv);\\n    }\\n    `:`\\n      float ${s}(int row, int col, int depth) {\\n        // Explicitly use integer operations as dot() only works on floats.\\n        int index = row * ${a} + col * ${i} + depth + ${f};\\n        vec2 uv = uvFromFlat(${h}, ${d}, index);\\n        return sampleTexture(${r}, uv);\\n      }\\n  `}(e,t);case 4:return function(e,t){const n=e.shapeInfo.logicalShape,r=e.name,s="get"+r.charAt(0).toUpperCase()+r.slice(1),a=n[3],i=n[2]*a,o=n[1]*i,{newShape:u,keptDims:l}=ve(n);if(u.length<n.length){const n=["row","col","depth","depth2"];return`\\n      ${OD(jD(e,u),t)}\\n      float ${s}(int row, int col, int depth, int depth2) {\\n        return ${s}(${qD(n,l)});\\n      }\\n    `}if(e.shapeInfo.isUniform)return`\\n      float ${s}(int row, int col, int depth, int depth2) {\\n        int index = round(dot(vec4(row, col, depth, depth2),\\n                          vec4(${o}, ${i}, ${a}, 1)));\\n        ${WD(e)}\\n      }\\n    `;const c=e.shapeInfo.flatOffset,h=e.shapeInfo.texShape,d=h[0],p=h[1],f=`int stride2 = ${r}Shape[3];`,m=`int stride1 = ${r}Shape[2] * stride2;`,g=`int stride0 = ${r}Shape[1] * stride1;`;if(p===o&&null==c)return t?`\\n      float ${s}(int row, int col, int depth, int depth2) {\\n        ${f}\\n        ${m}\\n        float texR = float(row);\\n        float texC =\\n            dot(vec3(col, depth, depth2),\\n                vec3(stride1, stride2, 1));\\n        vec2 uv = (vec2(texC, texR) + halfCR) /\\n                   vec2(${r}TexShape[1], ${r}TexShape[0]);\\n        return sampleTexture(${r}, uv);\\n      }\\n    `:`\\n      float ${s}(int row, int col, int depth, int depth2) {\\n        float texR = float(row);\\n        float texC =\\n            dot(vec3(col, depth, depth2),\\n                vec3(${i}, ${a}, 1));\\n        vec2 uv = (vec2(texC, texR) + halfCR) /\\n                   vec2(${p}.0, ${d}.0);\\n        return sampleTexture(${r}, uv);\\n      }\\n    `;if(p===a&&null==c)return t?`\\n      float ${s}(int row, int col, int depth, int depth2) {\\n        float texR = dot(vec3(row, col, depth),\\n                         vec3(${r}Shape[1] * ${r}Shape[2], ${r}Shape[2], 1));\\n        float texC = float(depth2);\\n        vec2 uv = (vec2(texC, texR) + halfCR) /\\n                  vec2(${r}TexShape[1], ${r}TexShape[0]);\\n        return sampleTexture(${r}, uv);\\n      }\\n    `:`\\n      float ${s}(int row, int col, int depth, int depth2) {\\n        float texR = dot(vec3(row, col, depth),\\n                         vec3(${n[1]*n[2]}, ${n[2]}, 1));\\n        float texC = float(depth2);\\n        vec2 uv = (vec2(texC, texR) + halfCR) /\\n                  vec2(${p}.0, ${d}.0);\\n        return sampleTexture(${r}, uv);\\n      }\\n    `;const y=UD(r);return t?`\\n    float ${s}(int row, int col, int depth, int depth2) {\\n      // Explicitly use integer operations as dot() only works on floats.\\n      ${f}\\n      ${m}\\n      ${g}\\n      int index = row * stride0 + col * stride1 +\\n          depth * stride2 + depth2;\\n      vec2 uv = uvFromFlat(${r}TexShape[0], ${r}TexShape[1], index + ${y});\\n      return sampleTexture(${r}, uv);\\n    }\\n  `:`\\n    float ${s}(int row, int col, int depth, int depth2) {\\n      // Explicitly use integer operations as dot() only works on floats.\\n      int index = row * ${o} + col * ${i} +\\n          depth * ${a} + depth2;\\n      vec2 uv = uvFromFlat(${d}, ${p}, index + ${y});\\n      return sampleTexture(${r}, uv);\\n    }\\n  `}(e,t);case 5:return function(e){const t=e.shapeInfo.logicalShape,n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),s=t[4],a=t[3]*s,i=t[2]*a,o=t[1]*i,{newShape:u,keptDims:l}=ve(t);if(u.length<t.length){const t=["row","col","depth","depth2","depth3"];return`\\n      ${OD(jD(e,u))}\\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\\n        return ${r}(${qD(t,l)});\\n      }\\n    `}if(e.shapeInfo.isUniform)return`\\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\\n        float index = dot(\\n          vec4(row, col, depth, depth2),\\n          vec4(${o}, ${i}, ${a}, ${s})) +\\n          depth3;\\n        ${WD(e)}\\n      }\\n    `;const c=e.shapeInfo.flatOffset,h=e.shapeInfo.texShape,d=h[0],p=h[1];if(p===o&&null==c)return`\\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\\n        int texR = row;\\n        float texC = dot(vec4(col, depth, depth2, depth3),\\n                         vec4(${i}, ${a}, ${s}, 1));\\n        vec2 uv = (vec2(texC, texR) + halfCR) /\\n                   vec2(${p}.0, ${d}.0);\\n        return sampleTexture(${n}, uv);\\n      }\\n    `;if(p===s&&null==c)return`\\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\\n        float texR = dot(\\n          vec4(row, col, depth, depth2),\\n          vec4(${t[1]*t[2]*t[3]},\\n               ${t[2]*t[3]}, ${t[3]}, 1));\\n        int texC = depth3;\\n        vec2 uv = (vec2(texC, texR) + halfCR) /\\n                  vec2(${p}.0, ${d}.0);\\n        return sampleTexture(${n}, uv);\\n      }\\n    `;return`\\n    float ${r}(int row, int col, int depth, int depth2, int depth3) {\\n      // Explicitly use integer operations as dot() only works on floats.\\n      int index = row * ${o} + col * ${i} + depth * ${a} +\\n          depth2 * ${s} + depth3 + ${UD(n)};\\n      vec2 uv = uvFromFlat(${d}, ${p}, index);\\n      return sampleTexture(${n}, uv);\\n    }\\n  `}(e);case 6:return function(e){const t=e.shapeInfo.logicalShape,n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),{newShape:s,keptDims:a}=ve(t);if(s.length<t.length){const t=["row","col","depth","depth2","depth3","depth4"];return`\\n      ${OD(jD(e,s))}\\n      float ${r}(int row, int col, int depth,\\n                    int depth2, int depth3, int depth4) {\\n        return ${r}(${qD(t,a)});\\n      }\\n    `}const i=t[5],o=t[4]*i,u=t[3]*o,l=t[2]*u,c=t[1]*l;if(e.shapeInfo.isUniform)return`\\n      float ${r}(int row, int col, int depth,\\n                  int depth2, int depth3, int depth4) {\\n        int index = round(dot(\\n          vec4(row, col, depth, depth2),\\n          vec4(${c}, ${l}, ${u}, ${o})) +\\n          dot(\\n            vec2(depth3, depth4),\\n            vec2(${i}, 1)));\\n        ${WD(e)}\\n      }\\n    `;const h=e.shapeInfo.flatOffset,d=e.shapeInfo.texShape,p=d[0],f=d[1];if(f===c&&null==h)return`\\n      float ${r}(int row, int col, int depth,\\n                    int depth2, int depth3, int depth4) {\\n        int texR = row;\\n        float texC = dot(vec4(col, depth, depth2, depth3),\\n          vec4(${l}, ${u}, ${o}, ${i})) +\\n               float(depth4);\\n        vec2 uv = (vec2(texC, texR) + halfCR) /\\n                   vec2(${f}.0, ${p}.0);\\n        return sampleTexture(${n}, uv);\\n      }\\n    `;if(f===i&&null==h)return`\\n      float ${r}(int row, int col, int depth,\\n                    int depth2, int depth3, int depth4) {\\n        float texR = dot(vec4(row, col, depth, depth2),\\n          vec4(${t[1]*t[2]*t[3]*t[4]},\\n               ${t[2]*t[3]*t[4]},\\n               ${t[3]*t[4]},\\n               ${t[4]})) + float(depth3);\\n        int texC = depth4;\\n        vec2 uv = (vec2(texC, texR) + halfCR) /\\n                  vec2(${f}.0, ${p}.0);\\n        return sampleTexture(${n}, uv);\\n      }\\n    `;return`\\n    float ${r}(int row, int col, int depth,\\n                  int depth2, int depth3, int depth4) {\\n      // Explicitly use integer operations as dot() only works on floats.\\n      int index = row * ${c} + col * ${l} + depth * ${u} +\\n          depth2 * ${o} + depth3 * ${i} + depth4 + ${UD(n)};\\n      vec2 uv = uvFromFlat(${p}, ${f}, index);\\n      return sampleTexture(${n}, uv);\\n    }\\n  `}(e);default:throw new Error(`${n.length}-D input sampling is not yet supported`)}}function LD(e,t){switch(e.shapeInfo.logicalShape.length){case 0:return function(e){const t=e.name;return`\\n    vec4 ${"get"+t.charAt(0).toUpperCase()+t.slice(1)}() {\\n      return ${$D().texture2D}(${t}, halfCR);\\n    }\\n  `}(e);case 1:return function(e,t){const n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),s=e.shapeInfo.texShape,a=$D();if(t)return`\\n    vec4 ${r}(int index) {\\n      ivec2 packedTexShape = ivec2(ceil(float(${n}TexShape[0]) / 2.0), ceil(float(${n}TexShape[1]) / 2.0));\\n      vec2 uv = packedUVfrom1D(\\n        packedTexShape[0], packedTexShape[1], index);\\n      return ${a.texture2D}(${n}, uv);\\n    }\\n  `;const i=[Math.ceil(s[0]/2),Math.ceil(s[1]/2)];return`\\n    vec4 ${r}(int index) {\\n      vec2 uv = packedUVfrom1D(\\n        ${i[0]}, ${i[1]}, index);\\n      return ${a.texture2D}(${n}, uv);\\n    }\\n  `}(e,t);case 2:return function(e,t){const n=e.shapeInfo.logicalShape,r=e.name,s="get"+r.charAt(0).toUpperCase()+r.slice(1),a=e.shapeInfo.texShape,i=a[0],o=a[1],u=$D();if(null!=a&&de(n,a))return t?`\\n      vec4 ${s}(int row, int col) {\\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(${r}TexShape[1], ${r}TexShape[0]);\\n\\n        return ${u.texture2D}(${r}, uv);\\n      }\\n    `:`\\n      vec4 ${s}(int row, int col) {\\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(${o}.0, ${i}.0);\\n\\n        return ${u.texture2D}(${r}, uv);\\n      }\\n    `;if(t)return`\\n    vec4 ${s}(int row, int col) {\\n      ivec2 packedTexShape = ivec2(ceil(float(${r}TexShape[0]) / 2.0), ceil(float(${r}TexShape[1]) / 2.0));\\n      int valuesPerRow = int(ceil(float(${r}Shape[1]) / 2.0));\\n      vec2 uv = packedUVfrom2D(valuesPerRow, packedTexShape[0], packedTexShape[1], row, col);\\n      return ${u.texture2D}(${r}, uv);\\n    }\\n  `;const l=[Math.ceil(a[0]/2),Math.ceil(a[1]/2)];return`\\n    vec4 ${s}(int row, int col) {\\n      vec2 uv = packedUVfrom2D(${Math.ceil(n[1]/2)}, ${l[0]}, ${l[1]}, row, col);\\n      return ${u.texture2D}(${r}, uv);\\n    }\\n  `}(e,t);case 3:return function(e,t){const n=e.shapeInfo.logicalShape,r=e.name,s="get"+r.charAt(0).toUpperCase()+r.slice(1),a=e.shapeInfo.texShape,i=[Math.ceil(a[0]/2),Math.ceil(a[1]/2)];if(1===n[0]){const r=[1,2],a=["b","row","col"];return`\\n        ${LD(jD(e,n.slice(1)),t)}\\n        vec4 ${s}(int b, int row, int col) {\\n          return ${s}(${qD(a,r)});\\n        }\\n      `}const o=$D();if(t)return`\\n    vec4 ${s}(int b, int row, int col) {\\n      ivec2 packedTexShape = ivec2(ceil(float(${r}TexShape[0]) / 2.0), ceil(float(${r}TexShape[1]) / 2.0));\\n      int valuesPerRow = int(ceil(float(${r}Shape[2]) / 2.0));\\n      int texelsInBatch = valuesPerRow * int(ceil(float(${r}Shape[1]) / 2.0));\\n      vec2 uv = packedUVfrom3D(\\n        packedTexShape[0], packedTexShape[1], texelsInBatch, valuesPerRow, b, row, col);\\n      return ${o.texture2D}(${r}, uv);\\n    }\\n  `;const u=i[0],l=i[1],c=Math.ceil(n[2]/2);return`\\n    vec4 ${s}(int b, int row, int col) {\\n      vec2 uv = packedUVfrom3D(\\n        ${u}, ${l}, ${c*Math.ceil(n[1]/2)}, ${c}, b, row, col);\\n      return ${o.texture2D}(${r}, uv);\\n    }\\n  `}(e,t);default:return function(e,t){const n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),s=$D();if(t)return`\\n    vec4 ${r}(int b2, int b, int row, int col) {\\n      int valuesPerRow = int(ceil(float(${n}Shape[3]) / 2.0));\\n      int texelsInBatch = valuesPerRow * int(ceil(float(${n}Shape[2]) / 2.0));\\n      int index = b * texelsInBatch + (row / 2) * valuesPerRow + (col / 2);\\n      texelsInBatch *= ${n}Shape[1];\\n      index = b2 * texelsInBatch + index;\\n      ivec2 packedTexShape = ivec2(ceil(float(${n}TexShape[0]) / 2.0), ceil(float(${n}TexShape[1]) / 2.0));\\n      int texR = index / packedTexShape[1];\\n      int texC = index - texR * packedTexShape[1];\\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(packedTexShape[1], packedTexShape[0]); return ${s.texture2D}(${n}, uv);\\n    }\\n  `;const a=e.shapeInfo.logicalShape,i=a.length,o=e.shapeInfo.texShape,u=[Math.ceil(o[0]/2),Math.ceil(o[1]/2)],l=u[0],c=u[1],h=Math.ceil(a[i-1]/2);let d=h*Math.ceil(a[i-2]/2),p="int b, int row, int col",f=`b * ${d} + (row / 2) * ${h} + (col / 2)`;for(let e=2;e<i-1;e++)p=`int b${e}, `+p,d*=a[i-e-1],f=`b${e} * ${d} + `+f;return`\\n    vec4 ${r}(${p}) {\\n      int index = ${f};\\n      int texR = index / ${c};\\n      int texC = index - texR * ${c};\\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${c}, ${l});\\n      return ${s.texture2D}(${n}, uv);\\n    }\\n  `}(e,t)}}const zD="\\nvec2 uvFromFlat(int texNumR, int texNumC, int index) {\\n  int texR = index / texNumC;\\n  int texC = index - texR * texNumC;\\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\\n}\\nvec2 packedUVfrom1D(int texNumR, int texNumC, int index) {\\n  int texelIndex = index / 2;\\n  int texR = texelIndex / texNumC;\\n  int texC = texelIndex - texR * texNumC;\\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\\n}\\n",PD="\\nvec2 packedUVfrom2D(int texelsInLogicalRow, int texNumR,\\n  int texNumC, int row, int col) {\\n  int texelIndex = (row / 2) * texelsInLogicalRow + (col / 2);\\n  int texR = texelIndex / texNumC;\\n  int texC = texelIndex - texR * texNumC;\\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\\n}\\n",BD="\\nvec2 packedUVfrom3D(int texNumR, int texNumC,\\n    int texelsInBatch, int texelsInLogicalRow, int b,\\n    int row, int col) {\\n  int index = b * texelsInBatch + (row / 2) * texelsInLogicalRow + (col / 2);\\n  int texR = index / texNumC;\\n  int texC = index - texR * texNumC;\\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\\n}\\n",VD="\\n  float getChannel(vec4 frag, vec2 innerDims) {\\n    vec2 modCoord = mod(innerDims, 2.);\\n    return modCoord.x == 0. ?\\n      (modCoord.y == 0. ? frag.r : frag.g) :\\n      (modCoord.y == 0. ? frag.b : frag.a);\\n  }\\n  float getChannel(vec4 frag, int dim) {\\n    float modCoord = mod(float(dim), 2.);\\n    return modCoord == 0. ? frag.r : frag.g;\\n  }\\n";function UD(e){return`offset${e}`}function WD(e){const t=e.name,n=le(e.shapeInfo.logicalShape);return n<2?`return ${t};`:`\\n    for (int i = 0; i < ${n}; i++) {\\n      if (i == index) {\\n        return ${t}[i];\\n      }\\n    }\\n  `}function GD(e){if(e<=1)return"int";if(2===e)return"ivec2";if(3===e)return"ivec3";if(4===e)return"ivec4";if(5===e)return"ivec5";if(6===e)return"ivec6";throw Error(`GPU for rank ${e} is not yet supported`)}function HD(e,t,n){const{newShape:r,keptDims:s}=ve(t),a=t.length,i=e&&3===a&&1===t[0],o=i?t.slice(1):r,u=!e&&a>1&&!de(t,n)&&r.length<a||i;return{useSqueezeShape:u,uniformShape:u?o:t,keptDims:s}}function jD(e,t){const n=JSON.parse(JSON.stringify(e));return n.shapeInfo.logicalShape=t,n}function qD(e,t){return t.map(t=>e[t]).join(", ")}function KD(e,t,n){const r=[],s=[];let a,i,o,u=null,l=null;l=e.getUniformLocation(n,"NAN",!1),1===Xe().getNumber("WEBGL_VERSION")&&(u=e.getUniformLocation(n,"INFINITY",!1));const c=!1;for(const s of t.variableNames){const a={name:s,uniform:e.getUniformLocation(n,s,c),offset:e.getUniformLocation(n,`offset${s}`,c)};t.enableShapeUniforms&&(a.shape=e.getUniformLocation(n,`${s}Shape`,c),a.texShape=e.getUniformLocation(n,`${s}TexShape`,c)),r.push(a)}if(t.enableShapeUniforms&&(a=e.getUniformLocation(n,"outShape",c),o=e.getUniformLocation(n,"outShapeStrides",c),i=e.getUniformLocation(n,"outTexShape",c)),t.customUniforms)for(const r of t.customUniforms)s.push(e.getUniformLocation(n,r.name,c));return{variablesLocations:r,customUniformLocations:s,infLoc:u,nanLoc:l,outShapeLocation:a,outShapeStridesLocation:o,outTexShapeLocation:i}}function XD(e,t){if(e.length!==t.length)throw Error(`Binary was compiled with ${e.length} inputs, but was executed with ${t.length} inputs`);e.forEach((e,n)=>{const r=e.logicalShape,s=t[n],a=s.shape;if(!de(r,a))throw Error(`Binary was compiled with different shapes than the current args. Shapes ${r} and ${a} must match`);if(e.isUniform&&s.isUniform)return;const i=e.texShape,o=s.isUniform?null:s.texData.texShape;if(!de(i,o))throw Error(`Binary was compiled with different texture shapes than the current args. Shape ${i} and ${o} must match`)})}function YD(e){return Xe().getBool("WEBGL_USE_SHAPES_UNIFORMS")&&e<=4}class JD{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outPackingScheme=IF.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];const t=$D();this.outputShape=e,this.enableShapeUniforms=YD(this.outputShape.length),this.userCode=`\\n      ivec3 outCoordsFromFlatIndex(int index) {\\n        ${this.enableShapeUniforms?RD(["r","c","d"],e):AD(["r","c","d"],e)}\\n        return ivec3(r, c, d);\\n      }\\n\\n      void main() {\\n        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));\\n        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);\\n\\n        vec4 result = vec4(0.);\\n\\n        for (int i=0; i<4; i++) {\\n          int flatIndex = index + i;\\n          ivec3 rc = outCoordsFromFlatIndex(flatIndex);\\n          result[i] = getA(rc.x, rc.y, rc.z);\\n        }\\n\\n        ${t.output} = result;\\n      }\\n    `}}class ZD{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outPackingScheme=IF.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];const t=$D();this.outputShape=e,this.enableShapeUniforms=YD(this.outputShape.length),this.userCode=`\\n      ivec3 outCoordsFromFlatIndex(int index) {\\n        ${this.enableShapeUniforms?RD(["r","c","d"],e):AD(["r","c","d"],e)}\\n        return ivec3(r, c, d);\\n      }\\n\\n      void main() {\\n        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));\\n        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);\\n\\n        vec4 result = vec4(0.);\\n\\n        for (int i=0; i<4; i++) {\\n          int flatIndex = index + i;\\n          ivec3 rc = outCoordsFromFlatIndex(flatIndex);\\n          result[i] = getChannel(getA(rc.x, rc.y, rc.z), vec2(rc.y, rc.z));\\n        }\\n\\n        ${t.output} = result;\\n      }\\n    `}}class QD{constructor(e){this.variableNames=["A"],this.outTexUsage=SF.DOWNLOAD;const t=$D();this.outputShape=e,this.userCode=`\\n      ${MD}\\n\\n      void main() {\\n        float x = getAAtOutCoords();\\n        ${t.output} = encode_float(x);\\n      }\\n    `}}class eO{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outTexUsage=SF.DOWNLOAD;const t=$D();this.outputShape=e,this.userCode=`\\n      ${MD}\\n\\n      void main() {\\n        ivec3 coords = getOutputCoords();\\n        float x = getChannel(getAAtOutCoords(), vec2(coords.y, coords.z));\\n        ${t.output} = encode_float(x);\\n      }\\n    `}}const tO={R:0,G:1,B:2,A:3};class nO{constructor(e,t=!1,n="RGBA"){this.variableNames=["A"],this.customUniforms=[{name:"texShape",type:"ivec2"}];const r=$D();this.outputShape=e,this.enableShapeUniforms=YD(this.outputShape.length);let s="result";t&&(s="floor(result * 255. + 0.5)");let a="";for(let e=0;e<n.length;e++){const t=n[e];a+=`\\n          if(offset == ${e}) {\\n            result = values[${tO[t]}];\\n          }`}this.userCode=`\\n      ${this.enableShapeUniforms?"\\n  int getFlatIndex(ivec3 coords) {\\n    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;\\n  }\\n":_D(e)}\\n\\n      void main() {\\n        ivec3 coords = getOutputCoords();\\n        int flatIndex = getFlatIndex(coords);\\n        float result = 0.;\\n        int offset = imod(flatIndex, ${n.length});\\n\\n        flatIndex = idiv(flatIndex, ${n.length}, 1.);\\n\\n        int r = flatIndex / texShape[1];\\n        if (r < texShape[0]) {\\n          int c = imod(flatIndex, texShape[1]);\\n          vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);\\n          vec4 values = ${r.texture2D}(A, uv);\\n          ${a}\\n        }\\n        ${r.output} = vec4(${s}, 0., 0., 0.);\\n      }\\n    `}}class rO{constructor(e,t=!1){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.customUniforms=[{name:"texShape",type:"ivec2"}];const n=$D();this.outputShape=e,this.enableShapeUniforms=YD(this.outputShape.length);let r="",s="result";t&&(s="floor(result * 255. + 0.5)");for(let t=0;t<=1;t++)for(let s=0;s<=1;s++){const a=2*t+s;r+=`\\n          localCoords = coords;\\n          if(localCoords[2] + ${s} < ${this.enableShapeUniforms?"outShape[2]":`${e[2]}`}) {\\n          localCoords[2] += ${s};\\n          if (localCoords[1] + ${t} < ${this.enableShapeUniforms?"outShape[1]":`${e[1]}`}) {\\n            localCoords[1] += ${t};\\n\\n            flatIndex = getFlatIndex(localCoords);\\n            offset = imod(flatIndex, 4);\\n\\n            flatIndex = idiv(flatIndex, 4, 1.);\\n\\n            int r = flatIndex / texShape[1];\\n            int c = imod(flatIndex, texShape[1]);\\n            vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);\\n            values = ${n.texture2D}(A, uv);\\n\\n            if (offset == 0) {\\n              result[${a}] = values[0];\\n            } else if (offset == 1) {\\n              result[${a}] = values[1];\\n            } else if (offset == 2) {\\n              result[${a}] = values[2];\\n            } else {\\n              result[${a}] = values[3];\\n            }\\n          }\\n        }\\n        `}this.userCode=`\\n        ${this.enableShapeUniforms?"\\n  int getFlatIndex(ivec3 coords) {\\n    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;\\n  }\\n":_D(e)}\\n\\n        void main() {\\n          ivec3 coords = getOutputCoords();\\n\\n          vec4 result = vec4(0.);\\n          int flatIndex, r, c, offset;\\n          ivec3 localCoords;\\n          vec2 uv;\\n          vec4 values;\\n\\n          ${r}\\n\\n          ${n.output} = ${s};\\n        }\\n    `}}function sO(e){const t=$D();return OF(e,`${t.version}\\n    precision highp float;\\n    ${t.attribute} vec3 clipSpacePos;\\n    ${t.attribute} vec2 uv;\\n    ${t.varyingVs} vec2 resultUV;\\n\\n    void main() {\\n      gl_Position = vec4(clipSpacePos, 1);\\n      resultUV = uv;\\n    }`)}function aO(e){return WF(e,new Float32Array([-1,1,0,0,1,-1,-1,0,0,0,1,1,0,1,1,1,-1,0,1,0]))}function iO(e){return GF(e,new Uint16Array([0,1,2,2,1,3]))}function oO(e,t,n,r,s,a){qF(t,n);const i=jF(e),o=e.TEXTURE_2D;return AF(e,()=>e.bindTexture(o,i)),AF(e,()=>e.texParameteri(o,e.TEXTURE_WRAP_S,e.CLAMP_TO_EDGE)),AF(e,()=>e.texParameteri(o,e.TEXTURE_WRAP_T,e.CLAMP_TO_EDGE)),AF(e,()=>e.texParameteri(o,e.TEXTURE_MIN_FILTER,e.NEAREST)),AF(e,()=>e.texParameteri(o,e.TEXTURE_MAG_FILTER,e.NEAREST)),1===Xe().getNumber("WEBGL_VERSION")?AF(e,()=>e.texImage2D(o,0,r,t,n,0,s,a,null)):AF(e,()=>e.texStorage2D(o,1,r,t,n)),AF(e,()=>e.bindTexture(e.TEXTURE_2D,null)),{texture:i,texShape:[n,t]}}function uO(e){return e.internalFormatFloat}function lO(e,t,n,r){const[s,a]=TF(t,n);return oO(e,s,a,uO(r),r.textureFormatFloat,e.FLOAT)}function cO(e){return e.internalFormatHalfFloat}function hO(e,t,n,r){const[s,a]=TF(t,n);return oO(e,s,a,cO(r),r.textureFormatFloat,r.textureTypeHalfFloat)}function dO(e){return e.downloadTextureFormat}function pO(e,t,n,r){const[s,a]=TF(t,n);return oO(e,s,a,dO(r),e.RGBA,e.UNSIGNED_BYTE)}function fO(e){return e.internalFormatPackedFloat}function mO(e,t,n,r){const[s,a]=CF(t,n);return oO(e,s,a,fO(r),e.RGBA,e.FLOAT)}function gO(e){return e.internalFormatPackedHalfFloat}function yO(e,t,n,r){const[s,a]=CF(t,n);return oO(e,s,a,gO(r),e.RGBA,r.textureTypeHalfFloat)}function bO(e,t,n){return AF(e,()=>e.bindBuffer(e.ARRAY_BUFFER,n)),XF(e,t,"clipSpacePos",n,3,20,0)&&XF(e,t,"uv",n,2,20,12)}function xO(e,t,n,r,s,a){let i,o,u;AF(e,()=>e.bindTexture(e.TEXTURE_2D,t)),s instanceof Uint8Array?(i=new Uint8Array(n*r*4),o=e.UNSIGNED_BYTE,u=e.RGBA):(i=new Float32Array(n*r*4),o=e.FLOAT,u=a.internalFormatPackedFloat),i.set(s),2===Xe().getNumber("WEBGL_VERSION")?AF(e,()=>e.texSubImage2D(e.TEXTURE_2D,0,0,0,n,r,e.RGBA,o,i)):AF(e,()=>e.texImage2D(e.TEXTURE_2D,0,u,n,r,0,e.RGBA,o,i)),AF(e,()=>e.bindTexture(e.TEXTURE_2D,null))}function wO(e,t,n){AF(e,()=>e.bindTexture(e.TEXTURE_2D,t)),n.data instanceof Uint8Array?2===Xe().getNumber("WEBGL_VERSION")?AF(e,()=>e.texSubImage2D(e.TEXTURE_2D,0,0,0,n.width,n.height,e.RGBA,e.UNSIGNED_BYTE,n.data)):AF(e,()=>e.texImage2D(e.TEXTURE_2D,0,e.RGBA,n.width,n.height,0,e.RGBA,e.UNSIGNED_BYTE,n.data)):2===Xe().getNumber("WEBGL_VERSION")?AF(e,()=>e.texSubImage2D(e.TEXTURE_2D,0,0,0,e.RGBA,e.UNSIGNED_BYTE,n)):AF(e,()=>e.texImage2D(e.TEXTURE_2D,0,e.RGBA,e.RGBA,e.UNSIGNED_BYTE,n)),AF(e,()=>e.bindTexture(e.TEXTURE_2D,null))}function vO(e,t,n,r){const s=e.createBuffer();AF(e,()=>e.bindBuffer(e.PIXEL_PACK_BUFFER,s));const a=16*t*n;return AF(e,()=>e.bufferData(e.PIXEL_PACK_BUFFER,a,e.STREAM_READ)),AF(e,()=>e.readPixels(0,0,n,t,e.RGBA,e.FLOAT,0)),AF(e,()=>e.bindBuffer(e.PIXEL_PACK_BUFFER,null)),s}function kO(e,t,n){const r=e,s=new Float32Array(n);return r.bindBuffer(r.PIXEL_PACK_BUFFER,t),r.getBufferSubData(r.PIXEL_PACK_BUFFER,0,s),r.bindBuffer(r.PIXEL_PACK_BUFFER,null),s}function IO(e,t,n,r){const[s,a]=TF(t,n),i=new Uint8Array(t*n*4);return AF(e,()=>e.readPixels(0,0,s,a,r.downloadTextureFormat,e.UNSIGNED_BYTE,i)),new Float32Array(i.buffer)}function SO(e,t,n,r,s,a,i,o){const u=e,l=new Float32Array(function(e,t){const[n,r]=CF(e,t);return n*r*4}(a,i));return u.bindBuffer(u.PIXEL_PACK_BUFFER,t),u.getBufferSubData(u.PIXEL_PACK_BUFFER,0,l),u.bindBuffer(u.PIXEL_PACK_BUFFER,null),l}function NO(e,t,n){const r=new Float32Array(t*n*4);return AF(e,()=>e.readPixels(0,0,n,t,e.RGBA,e.FLOAT,r)),r}class TO{constructor(e){this.outputTexture=null,this.program=null,this.disposed=!1,this.itemsToPoll=[];const t=Xe().getNumber("WEBGL_VERSION");if(null!=e?(this.gl=e,vF(t,e)):this.gl=kF(t),e=this.gl,2===Xe().getNumber("WEBGL_VERSION")){const t=e;this.createVertexArray=()=>AF(t,()=>t.createVertexArray()),this.bindVertexArray=e=>AF(t,()=>t.bindVertexArray(e)),this.deleteVertexArray=e=>AF(t,()=>t.deleteVertexArray(e)),this.getVertexArray=()=>AF(t,()=>t.getParameter(t.VERTEX_ARRAY_BINDING))}else if(null!=e){const t=e.getExtension("OES_vertex_array_object");if(null==t)throw new Error("All WebGL1 implementations are expected to offer OES_vertex_array_object.");this.createVertexArray=()=>AF(e,()=>t.createVertexArrayOES()),this.bindVertexArray=n=>AF(e,()=>t.bindVertexArrayOES(n)),this.deleteVertexArray=n=>AF(e,()=>t.deleteVertexArrayOES(n)),this.getVertexArray=()=>AF(e,()=>e.getParameter(t.VERTEX_ARRAY_BINDING_OES))}let n="WEBGL_color_buffer_float";const r="EXT_color_buffer_half_float";if(this.parallelCompilationExtension=this.gl.getExtension("KHR_parallel_shader_compile"),1===Xe().getNumber("WEBGL_VERSION")){const e="OES_texture_float",t="OES_texture_half_float";if(this.textureFloatExtension=DF(this.gl,e),vD(this.gl,t))this.textureHalfFloatExtension=DF(this.gl,t);else if(Xe().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support half float textures, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.");if(this.colorBufferFloatExtension=this.gl.getExtension(n),vD(this.gl,r))this.colorBufferHalfFloatExtension=DF(this.gl,r);else if(Xe().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support color renderable half floats, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.")}else if(n="EXT_color_buffer_float",vD(this.gl,n))this.colorBufferFloatExtension=this.gl.getExtension(n);else{if(!vD(this.gl,r))throw new Error("GL context does not support color renderable floats");this.colorBufferHalfFloatExtension=this.gl.getExtension(r)}this.vertexBuffer=aO(this.gl),this.indexBuffer=iO(this.gl),this.framebuffer=KF(this.gl),this.textureConfig=$F(this.gl,this.textureHalfFloatExtension)}get debug(){return Xe().getBool("DEBUG")}dispose(){if(this.disposed)return;null!=this.program&&console.warn("Disposing a GPGPUContext that still has a bound WebGLProgram. This is probably a resource leak, delete the program with GPGPUContext.deleteProgram before disposing."),null!=this.outputTexture&&console.warn("Disposing a GPGPUContext that still has a bound output matrix texture.  This is probably a resource leak, delete the output matrix texture with GPGPUContext.deleteMatrixTexture before disposing.");const e=this.gl;AF(e,()=>e.finish()),AF(e,()=>e.bindFramebuffer(e.FRAMEBUFFER,null)),AF(e,()=>e.deleteFramebuffer(this.framebuffer)),AF(e,()=>e.bindBuffer(e.ARRAY_BUFFER,null)),AF(e,()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,null)),AF(e,()=>e.deleteBuffer(this.indexBuffer)),this.disposed=!0}createFloat32MatrixTexture(e,t){return this.throwIfDisposed(),lO(this.gl,e,t,this.textureConfig)}createFloat16MatrixTexture(e,t){return this.throwIfDisposed(),hO(this.gl,e,t,this.textureConfig)}createUnsignedBytesMatrixTexture(e,t){return this.throwIfDisposed(),pO(this.gl,e,t,this.textureConfig)}uploadPixelDataToTexture(e,t){this.throwIfDisposed(),wO(this.gl,e,t)}uploadDenseMatrixToTexture(e,t,n,r){this.throwIfDisposed(),xO(this.gl,e,t,n,r,this.textureConfig)}createFloat16PackedMatrixTexture(e,t){return this.throwIfDisposed(),yO(this.gl,e,t,this.textureConfig)}createPackedMatrixTexture(e,t){return this.throwIfDisposed(),mO(this.gl,e,t,this.textureConfig)}deleteMatrixTexture(e){this.throwIfDisposed(),this.outputTexture===e&&(rD(this.gl,this.framebuffer),this.outputTexture=null),AF(this.gl,()=>this.gl.deleteTexture(e))}downloadByteEncodedFloatMatrixFromOutputTexture(e,t,n){return this.downloadMatrixDriver(e,()=>IO(this.gl,t,n,this.textureConfig))}downloadPackedMatrixFromBuffer(e,t,n,r,s,a){return SO(this.gl,e,0,0,0,s,a,this.textureConfig)}downloadFloat32MatrixFromBuffer(e,t){return kO(this.gl,e,t)}createBufferFromTexture(e,t,n){this.bindTextureToFrameBuffer(e);const r=vO(this.gl,t,n,this.textureConfig);return this.unbindTextureToFrameBuffer(),r}createAndWaitForFence(){const e=this.createFence(this.gl);return this.pollFence(e)}createFence(e){let t,n;if(Xe().getBool("WEBGL_FENCE_API_ENABLED")){const r=e,s=r.fenceSync(r.SYNC_GPU_COMMANDS_COMPLETE,0);e.flush(),n=()=>{const e=r.clientWaitSync(s,0,0);return e===r.ALREADY_SIGNALED||e===r.CONDITION_SATISFIED},t=s}else Xe().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0?(t=this.beginQuery(),this.endQuery(),n=()=>this.isQueryAvailable(t,Xe().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))):n=()=>!0;return{query:t,isFencePassed:n}}downloadMatrixFromPackedTexture(e,t,n){return this.downloadMatrixDriver(e,()=>NO(this.gl,t,n))}createProgram(e){this.throwIfDisposed();const t=this.gl;null==this.vertexShader&&(this.vertexShader=sO(t));const n=BF(t);AF(t,()=>t.attachShader(n,this.vertexShader)),AF(t,()=>t.attachShader(n,e)),VF(t,n);const r=Object.assign(n,{vao:this.createVertexArray()});return this.debug&&UF(t,r),r}buildVao(e){this.setProgram(e),this.bindVertexArray(e.vao);const t=this.gl;AF(t,()=>t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,this.indexBuffer)),bO(t,e,this.vertexBuffer)}deleteProgram(e){this.throwIfDisposed(),e===this.program&&(this.program=null),null!=e&&(AF(this.gl,()=>this.gl.deleteProgram(e)),this.deleteVertexArray(e.vao))}setProgram(e){this.throwIfDisposed(),this.program=e,null!=this.program&&this.debug&&UF(this.gl,this.program),AF(this.gl,()=>this.gl.useProgram(e))}getUniformLocation(e,t,n=!0){return this.throwIfDisposed(),n?ZF(this.gl,e,t):QF(this.gl,e,t)}getAttributeLocation(e,t){return this.throwIfDisposed(),AF(this.gl,()=>this.gl.getAttribLocation(e,t))}getUniformLocationNoThrow(e,t){return this.throwIfDisposed(),this.gl.getUniformLocation(e,t)}setInputMatrixTexture(e,t,n){this.throwIfDisposed(),this.throwIfNoProgram(),eD(this.gl,e,t,n)}setOutputMatrixTexture(e,t,n){this.setOutputMatrixTextureDriver(e,n,t)}setOutputPackedMatrixTexture(e,t,n){this.throwIfDisposed();const[r,s]=CF(t,n);this.setOutputMatrixTextureDriver(e,r,s)}setOutputMatrixWriteRegion(e,t,n,r){this.setOutputMatrixWriteRegionDriver(n,e,r,t)}setOutputPackedMatrixWriteRegion(e,t,n,r){throw new Error("setOutputPackedMatrixWriteRegion not implemented.")}debugValidate(){null!=this.program&&UF(this.gl,this.program),sD(this.gl)}executeProgram(){this.throwIfDisposed(),this.throwIfNoProgram();const e=this.gl;if(this.debug){const e=this.getVertexArray();console.assert(e===this.program.vao,"VAO changed between setProgram and executeProgram!"),this.debugValidate()}AF(e,()=>e.drawElements(e.TRIANGLES,6,e.UNSIGNED_SHORT,0))}blockUntilAllProgramsCompleted(){this.throwIfDisposed(),AF(this.gl,()=>this.gl.finish())}getQueryTimerExtension(){return null==this.disjointQueryTimerExtension&&(this.disjointQueryTimerExtension=DF(this.gl,2===Xe().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")?"EXT_disjoint_timer_query_webgl2":"EXT_disjoint_timer_query")),this.disjointQueryTimerExtension}getQueryTimerExtensionWebGL2(){return this.getQueryTimerExtension()}getQueryTimerExtensionWebGL1(){return this.getQueryTimerExtension()}beginQuery(){if(2===Xe().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")){const e=this.gl,t=this.getQueryTimerExtensionWebGL2(),n=e.createQuery();return e.beginQuery(t.TIME_ELAPSED_EXT,n),n}const e=this.getQueryTimerExtensionWebGL1(),t=e.createQueryEXT();return e.beginQueryEXT(e.TIME_ELAPSED_EXT,t),t}endQuery(){if(2===Xe().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")){const e=this.gl,t=this.getQueryTimerExtensionWebGL2();return void e.endQuery(t.TIME_ELAPSED_EXT)}const e=this.getQueryTimerExtensionWebGL1();e.endQueryEXT(e.TIME_ELAPSED_EXT)}async waitForQueryAndGetTime(e){return await be(()=>this.disposed||this.isQueryAvailable(e,Xe().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))),this.getQueryTime(e,Xe().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))}getQueryTime(e,t){if(0===t)return null;if(2===t){const t=this.gl;return t.getQueryParameter(e,t.QUERY_RESULT)/1e6}{const t=this.getQueryTimerExtensionWebGL1();return t.getQueryObjectEXT(e,t.QUERY_RESULT_EXT)/1e6}}isQueryAvailable(e,t){if(0===t)return!0;if(2===t){const t=this.gl,n=this.getQueryTimerExtensionWebGL2(),r=t.getQueryParameter(e,t.QUERY_RESULT_AVAILABLE);return null==this.disjoint&&(this.disjoint=this.gl.getParameter(n.GPU_DISJOINT_EXT)),r&&!this.disjoint}{const t=this.getQueryTimerExtensionWebGL1(),n=t.getQueryObjectEXT(e,t.QUERY_RESULT_AVAILABLE_EXT);return null==this.disjoint&&(this.disjoint=this.gl.getParameter(t.GPU_DISJOINT_EXT)),n&&!this.disjoint}}pollFence(e){return new Promise(t=>{this.addItemToPoll(()=>e.isFencePassed(),()=>t())})}pollItems(){const e=function(e){let t=0;for(;t<e.length&&e[t]();++t);return t-1}(this.itemsToPoll.map(e=>e.isDoneFn));for(let t=0;t<=e;++t){const{resolveFn:e}=this.itemsToPoll[t];e()}this.itemsToPoll=this.itemsToPoll.slice(e+1)}addItemToPoll(e,t){if(this.itemsToPoll.push({isDoneFn:e,resolveFn:t}),this.itemsToPoll.length>1)return;let n;"setTimeoutCustom"in Xe().platform&&(n=Xe().platform.setTimeoutCustom.bind(Xe().platform)),be(()=>(this.pollItems(),0===this.itemsToPoll.length),()=>0,null,n)}bindTextureToFrameBuffer(e){this.throwIfDisposed(),nD(this.gl,e,this.framebuffer),this.debug&&sD(this.gl)}unbindTextureToFrameBuffer(){null!=this.outputTexture?(nD(this.gl,this.outputTexture,this.framebuffer),this.debug&&sD(this.gl)):rD(this.gl,this.framebuffer)}downloadMatrixDriver(e,t){this.bindTextureToFrameBuffer(e);const n=t();return this.unbindTextureToFrameBuffer(),n}setOutputMatrixTextureDriver(e,t,n){this.throwIfDisposed();const r=this.gl;nD(r,e,this.framebuffer),this.debug&&sD(r),this.outputTexture=e,AF(r,()=>r.viewport(0,0,t,n)),AF(r,()=>r.scissor(0,0,t,n))}setOutputMatrixWriteRegionDriver(e,t,n,r){this.throwIfDisposed(),AF(this.gl,()=>this.gl.scissor(e,t,n,r))}throwIfDisposed(){if(this.disposed)throw new Error("Attempted to use disposed GPGPUContext.")}throwIfNoProgram(){if(null==this.program)throw new Error("No GPU program is currently set.")}}const{addImpl:EO,bincountImpl:CO,bincountReduceImpl:$O,bitwiseAndImpl:AO,castImpl:RO,ceilImpl:_O,concatImpl:MO,equalImpl:FO,expImpl:DO,expm1Impl:OO,floorImpl:LO,gatherNdImpl:zO,gatherV2Impl:PO,greaterImpl:BO,greaterEqualImpl:VO,lessImpl:UO,lessEqualImpl:WO,linSpaceImpl:GO,logImpl:HO,maxImpl:jO,maximumImpl:qO,minimumImpl:KO,multiplyImpl:XO,negImpl:YO,notEqualImpl:JO,prodImpl:ZO,raggedGatherImpl:QO,raggedRangeImpl:eL,raggedTensorToTensorImpl:tL,rangeImpl:nL,rsqrtImpl:rL,scatterImpl:sL,sigmoidImpl:aL,simpleAbsImpl:iL,sliceImpl:oL,sparseFillEmptyRowsImpl:uL,sparseReshapeImpl:lL,sparseSegmentReductionImpl:cL,sqrtImpl:hL,staticRegexReplaceImpl:dL,stridedSliceImpl:pL,stringNGramsImpl:fL,stringSplitImpl:mL,stringToHashBucketFastImpl:gL,subImpl:yL,tileImpl:bL,topKImpl:xL,transposeImpl:wL,uniqueImpl:vL}=j;function kL(e,t){return["x","y","z","w","u","v"].slice(0,t).map(t=>`${e}.${t}`)}function IL(e,t){return 1===t?[e]:kL(e,t)}class SL{constructor(e){if(this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outputShape=e,this.rank=e.length,this.enableShapeUniforms=YD(this.outputShape.length),0===this.rank)this.userCode="\\n        void main() {\\n          setOutput(vec4(getA(), 0., 0., 0.));\\n        }\\n      ";else{const e=IL("rc",this.rank),t=GD(this.rank),n=this.getOutOfBoundsCondition(e),r=this.getSetup(e),s=this.getOutput(e);this.userCode=`\\n        void main() {\\n          ${t} rc = getOutputCoords();\\n\\n          if(${n}) {\\n            setOutput(vec4(0));\\n          } else {\\n            ${r}\\n\\n            setOutput(vec4(${s}));\\n          }\\n        }\\n      `}}getSourceCoordsArr(e){const t=[];for(let n=0;n<=1;n++)for(let r=0;r<=1;r++){let s=`${0===n?"r":"rp1"}, ${0===r?"c":"cp1"}`;for(let t=2;t<this.rank;t++)s=`${e[e.length-1-t]},`+s;t.push(s)}return t}getOutOfBoundsCondition(e){if(1===this.rank)return`rc > ${this.enableShapeUniforms?"outShape":this.outputShape[0]}`;let t="";for(let n=this.rank-2;n<this.rank;n++)t+=`${e[n]} >= ${this.enableShapeUniforms?`outShape[${n}]`:this.outputShape[n]}`,n<this.rank-1&&(t+="||");return t}getSetup(e){if(1===this.rank)return"";const t=e.slice(-2),n=this.enableShapeUniforms?`outShape[${this.rank} - 1]`:this.outputShape[this.rank-1],r=this.enableShapeUniforms?`outShape[${this.rank} - 2]`:this.outputShape[this.rank-2];return`\\n      int r = ${t[0]};\\n      int c = ${t[1]};\\n      int rp1 = r + 1;\\n      int cp1 = c + 1;\\n\\n      bool cEdge = cp1 >= ${n};\\n      bool rEdge = rp1 >= ${r};\\n    `}getOutput(e){const t=this.getSourceCoordsArr(e);return 1===this.rank?`getA(rc), (rc + 1 >= ${this.enableShapeUniforms?"outShape":this.outputShape[0]} ? 0. : getA(rc + 1)), 0, 0`:`getA(${t[0]}),\\n            cEdge ? 0. : getA(${t[1]}),\\n            rEdge ? 0. : getA(${t[2]}),\\n            rEdge || cEdge ? 0. : getA(${t[3]})`}}class NL{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec3"}],this.outputShape=e,this.enableShapeUniforms=YD(this.outputShape.length);let n="";for(let e=0;e<4;e++){let t="thisRC = rc;";e%2==1&&(t+="thisRC.z += 1;"),e>1&&(t+="thisRC.y += 1;"),n+=`\\n        ${t}\\n        ${e>0?"if(thisRC.y < rows && thisRC.z < cols){":""}\\n          int flatIndex = getFlatIndex(thisRC);\\n\\n          ivec3 inputRC = inputCoordsFromReshapedOutCoords(flatIndex);\\n          vec2 inputRCInnerDims = vec2(float(inputRC.y),float(inputRC.z));\\n\\n          result[${e}] =\\n            getChannel(getA(inputRC.x, inputRC.y, inputRC.z), inputRCInnerDims);\\n        ${e>0?"}":""}\\n      `}var r,s;this.userCode=`\\n      ${r=t,s=this.enableShapeUniforms,`\\n    ivec3 inputCoordsFromReshapedOutCoords(int index) {\\n      ${s?function(e,t,n="index"){const r=function(e,t){const n=e.length,r=e.map(e=>`${t}[${e}]`),s=new Array(n-1);s[n-2]=r[n-1];for(let e=n-3;e>=0;--e)s[e]=`(${s[e+1]} * ${r[e+1]})`;return s}(e.map((e,t)=>t),t);return r.map((t,s)=>`int ${e[s]} = ${n} / ${r[s]}; ${s===r.length-1?`int ${e[s+1]} = ${n} - ${e[s]} * ${r[s]}`:`index -= ${e[s]} * ${r[s]}`};`).join("")}(["r","c","d"],"inputShape"):AD(["r","c","d"],r)}\\n      return ivec3(r, c, d);\\n    }\\n  `}\\n      ${this.enableShapeUniforms?"\\n  int getFlatIndex(ivec3 coords) {\\n    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;\\n  }\\n":_D(e)}\\n\\n      void main() {\\n        ivec3 rc = getOutputCoords();\\n\\n        vec4 result = vec4(0.);\\n\\n        ivec3 thisRC;\\n        int rows = ${this.enableShapeUniforms?"outShape[1]":e[1]};\\n        int cols = ${this.enableShapeUniforms?"outShape[2]":e[2]};\\n\\n        ${n}\\n\\n        setOutput(result);\\n      }\\n    `}}class TL{constructor(e){this.gpgpu=e,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0,this.freeTextures={},this.usedTextures={},this.logEnabled=!1}acquireTexture(e,t,n){const r=CL(t,n),s=$L(e,r,n);s in this.freeTextures||(this.freeTextures[s]=[]),s in this.usedTextures||(this.usedTextures[s]=[]);const a=EL(e,r,this.gpgpu.gl,this.gpgpu.textureConfig,n);if(this.freeTextures[s].length>0){this.numFreeTextures--,this.numUsedTextures++,this._numBytesFree-=a,this.log();const e=this.freeTextures[s].pop();return this.usedTextures[s].push(e),e}let i;return r===NF.PACKED_2X2_FLOAT32?i=this.gpgpu.createPackedMatrixTexture(e[0],e[1]):r===NF.PACKED_2X2_FLOAT16?i=this.gpgpu.createFloat16PackedMatrixTexture(e[0],e[1]):r===NF.UNPACKED_FLOAT32?i=this.gpgpu.createFloat32MatrixTexture(e[0],e[1]):r===NF.UNPACKED_FLOAT16?i=this.gpgpu.createFloat16MatrixTexture(e[0],e[1]):r===NF.PACKED_4X1_UNSIGNED_BYTE&&(i=this.gpgpu.createUnsignedBytesMatrixTexture(e[0],e[1])),this.usedTextures[s].push(i),this.numUsedTextures++,this._numBytesAllocated+=a,this.log(),i}releaseTexture(e,t,n,r){if(null==this.freeTextures)return;const s=CL(n,r),a=$L(t,s,r);a in this.freeTextures||(this.freeTextures[a]=[]);const i=EL(t,s,this.gpgpu.gl,this.gpgpu.textureConfig,r),o=Xe().getNumber("WEBGL_DELETE_TEXTURE_THRESHOLD");-1!==o&&this._numBytesAllocated>o?(this.gpgpu.deleteMatrixTexture(e.texture),this._numBytesAllocated-=i):(this.freeTextures[a].push(e),this.numFreeTextures++,this._numBytesFree+=i),this.numUsedTextures--;const u=this.usedTextures[a],l=u&&u.indexOf(e);if(null==l||l<0)throw new Error("Cannot release a texture that was never provided by this texture manager");u[l]=u[u.length-1],u.pop(),this.log()}log(){if(!this.logEnabled)return;const e=this.numFreeTextures+this.numUsedTextures;console.log("Free/Used",`${this.numFreeTextures} / ${this.numUsedTextures}`,`(${e})`);const t=this._numBytesFree/this._numBytesAllocated;console.log(`Bytes allocated: ${this._numBytesAllocated}`),console.log(`Bytes unused: ${this._numBytesFree} (${Math.round(100*t)}%)`)}get numBytesAllocated(){return this._numBytesAllocated}get numBytesFree(){return this._numBytesFree}getNumUsedTextures(){return this.numUsedTextures}getNumFreeTextures(){return this.numFreeTextures}dispose(){if(null!=this.freeTextures){for(const e in this.freeTextures)this.freeTextures[e].forEach(e=>{this.gpgpu.deleteMatrixTexture(e.texture)});for(const e in this.usedTextures)this.usedTextures[e].forEach(e=>{this.gpgpu.deleteMatrixTexture(e.texture)});this.freeTextures=null,this.usedTextures=null,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0}}}function EL(e,t,n,r,s){const a=function(e,t){switch(e){case NF.PACKED_2X2_FLOAT32:return fO(t);case NF.PACKED_2X2_FLOAT16:return gO(t);case NF.UNPACKED_FLOAT32:return uO(t);case NF.UNPACKED_FLOAT16:return cO(t);case NF.PACKED_4X1_UNSIGNED_BYTE:return dO(t);default:throw new Error(`Unknown physical texture type ${e}`)}}(t,r);let i;if(s){const[t,n]=CF(e[0],e[1]);i=t*n}else{const[t,n]=TF(e[0],e[1]);i=t*n}const o=function(e,t){const n=e;if(t===n.R32F)return 4;if(t===n.R16F)return 2;if(t===n.RGBA32F)return 16;if(t===e.RGBA)return 16;if(t===n.RGBA16F)return 8;if(t===n.RGBA8)return 4;throw new Error(`Unknown internal format ${t}`)}(n,a);return i*o}function CL(e,t){if(e===SF.UPLOAD)return NF.PACKED_2X2_FLOAT32;if(e===SF.RENDER||null==e)return function(e){return Xe().getBool("WEBGL_RENDER_FLOAT32_ENABLED")?e?NF.PACKED_2X2_FLOAT32:NF.UNPACKED_FLOAT32:e?NF.PACKED_2X2_FLOAT16:NF.UNPACKED_FLOAT16}(t);if(e===SF.DOWNLOAD||e===SF.PIXELS)return NF.PACKED_4X1_UNSIGNED_BYTE;throw new Error(`Unknown logical texture type ${e}`)}function $L(e,t,n){return`${e[0]}_${e[1]}_${t}_${n}`}class AL{constructor(e,t){this.variableNames=["A"],this.outputShape=e,this.enableShapeUniforms=YD(this.outputShape.length),this.userCode=`\\n      float unaryOperation(float x) {\\n        ${t}\\n      }\\n\\n      void main() {\\n        float x = getAAtOutCoords();\\n        float y = unaryOperation(x);\\n\\n        setOutput(y);\\n      }\\n    `}}const RL="if (isnan(x)) return x;",_L="return abs(x);",ML=RL+"\\n  return (x < 0.0) ? 0.0 : x;\\n",FL=RL+"\\n  return (x < 0.0) ? 0.0 : min(6.0, x);\\n",DL="return x;";class OL{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.enableShapeUniforms=YD(this.outputShape.length),this.userCode=`\\n      vec4 unaryOperation(vec4 x) {\\n        ${t}\\n      }\\n\\n      void main() {\\n        vec4 x = getAAtOutCoords();\\n        vec4 y = unaryOperation(x);\\n\\n        setOutput(y);\\n      }\\n    `}}class LL{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outputShape=e,this.enableShapeUniforms=YD(this.outputShape.length);const t=e.length,n=IL("rc",t),r=GD(t),s=function(e,t){if(1===e)return"rc";let n="";for(let r=0;r<e;r++)n+=t[r],r<e-1&&(n+=",");return n}(t,n),a=n.slice(-2),i=t<=1?"rc":`vec2(${a.join(",")})`;this.userCode=`\\n      void main() {\\n        ${r} rc = getOutputCoords();\\n        vec4 packedInput = getA(${s});\\n\\n        setOutput(getChannel(packedInput, ${i}));\\n      }\\n    `}}const zL=yp,PL={},BL=Xe().getNumber("CPU_HANDOFF_SIZE_THRESHOLD");class VL extends Y{nextDataId(){return VL.nextDataId++}constructor(e){if(super(),this.pendingRead=new WeakMap,this.pendingDisposal=new WeakSet,this.dataRefCount=new WeakMap,this.numBytesInGPU=0,this.uploadWaitMs=0,this.downloadWaitMs=0,this.lastGlFlushTime=0,this.warnedAboutMemory=!1,this.pendingDeletes=0,this.disposed=!1,!Xe().getBool("HAS_WEBGL"))throw new Error("WebGL is not supported on this device");let t;if(null!=e){if(e instanceof TO)t=e;else{const n=kF(Xe().getNumber("WEBGL_VERSION"),e);t=new TO(n)}this.binaryCache={},this.gpgpuCreatedLocally=!1}else{const e=kF(Xe().getNumber("WEBGL_VERSION"));t=new TO(e),this.binaryCache=((n=Xe().getNumber("WEBGL_VERSION"))in PL||(PL[n]={}),PL[n]),this.gpgpuCreatedLocally=!0}var n;this.gpgpu=t,this.canvas=this.gpgpu.gl.canvas,this.textureManager=new TL(this.gpgpu),this.numMBBeforeWarning=null==Xe().global.screen?1024:Xe().global.screen.height*Xe().global.screen.width*window.devicePixelRatio*600/1024/1024,this.texData=new X(this,ai())}numDataIds(){return this.texData.numDataIds()-this.pendingDeletes}writeTexture(e,t,n,r,s,a){const i=this.makeTensorInfo(t,n),o=this.texData.get(i.dataId);o.isPacked=!1,o.texture={texture:e,texShape:[r,s]},o.texShape=[r,s];const u=cD(t),l=new nO(u,!1,a),c=this.runWebGLProgram(l,[i],n,[[r,s]]);return c.shape=t,o.texture=null,this.disposeIntermediateTensorInfo(i),c.dataId}write(e,t,n){if((Xe().getBool("WEBGL_CHECK_NUMERICAL_PROBLEMS")||Xe().getBool("DEBUG"))&&this.checkNumericalProblems(e),"complex64"===n&&null!=e)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");const r={id:this.nextDataId()};return this.texData.set(r,{shape:t,dtype:n,values:e,usage:SF.UPLOAD,refCount:1}),r}refCount(e){return this.texData.has(e)?this.texData.get(e).refCount:0}incRef(e){this.texData.get(e).refCount++}decRef(e){this.texData.has(e)&&this.texData.get(e).refCount--}move(e,t,n,r,s){if(Xe().getBool("DEBUG")&&this.checkNumericalProblems(t),"complex64"===r)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");this.texData.set(e,{shape:n,dtype:r,values:t,usage:SF.UPLOAD,refCount:s})}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}readSync(e){const t=this.texData.get(e),{values:n,dtype:r,complexTensorInfos:s,slice:a,shape:i,isPacked:o}=t;if(null!=a){let t;t=o?new OL(i,DL):new AL(i,DL);const n=this.runWebGLProgram(t,[{dataId:e,shape:i,dtype:r}],r),s=this.readSync(n.dataId);return this.disposeIntermediateTensorInfo(n),s}if(null!=n)return this.convertAndCacheOnCPU(e);if("string"===r)return n;const u=null!=this.activeTimers;let l,c;return u&&(l=Xs()),c="complex64"===r?dm(this.readSync(s.real.dataId),this.readSync(s.imag.dataId)):this.getValuesFromTexture(e),u&&(this.downloadWaitMs+=Xs()-l),this.convertAndCacheOnCPU(e,c)}async read(e){if(this.pendingRead.has(e)){const t=this.pendingRead.get(e);return new Promise(e=>t.push(e))}const t=this.texData.get(e),{values:n,shape:r,slice:s,dtype:a,complexTensorInfos:i,isPacked:o}=t;if(null!=s){let t;t=o?new OL(r,DL):new AL(r,DL);const n=this.runWebGLProgram(t,[{dataId:e,shape:r,dtype:a}],a),s=this.read(n.dataId);return this.disposeIntermediateTensorInfo(n),s}if(null!=n)return this.convertAndCacheOnCPU(e);if(Xe().getBool("DEBUG")&&!Xe().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")&&2===Xe().getNumber("WEBGL_VERSION"))throw new Error("tensor.data() with WEBGL_DOWNLOAD_FLOAT_ENABLED=false and WEBGL_VERSION=2 not yet supported.");let u,l,c=null;if("complex64"!==a&&Xe().get("WEBGL_BUFFER_SUPPORTED")){u=this.decode(e);const t=this.texData.get(u.dataId);c=this.gpgpu.createBufferFromTexture(t.texture.texture,...EF(r))}if(this.pendingRead.set(e,[]),"complex64"!==a&&await this.gpgpu.createAndWaitForFence(),"complex64"===a){const e=await Promise.all([this.read(i.real.dataId),this.read(i.imag.dataId)]);l=dm(e[0],e[1])}else if(null==c)l=this.getValuesFromTexture(e);else{const e=le(r);l=this.gpgpu.downloadFloat32MatrixFromBuffer(c,e)}if(null!=u&&this.disposeIntermediateTensorInfo(u),null!=c){const e=this.gpgpu.gl;AF(e,()=>e.deleteBuffer(c))}const h=this.convertAndCacheOnCPU(e,l),d=this.pendingRead.get(e);return this.pendingRead.delete(e),d.forEach(e=>e(h)),this.pendingDisposal.has(e)&&(this.pendingDisposal.delete(e),this.disposeData(e)&&ai().removeDataId(e,this),this.pendingDeletes--),h}readToGPU(e,t={}){const n=this.texData.get(e),{values:r,shape:s,slice:a,dtype:i,isPacked:o,texture:u}=n;if("complex64"===i)throw new Error("Does not support reading texture for complex64 dtype.");if(null!=a){let n;n=o?new OL(s,DL):new AL(s,DL);const r=this.runWebGLProgram(n,[{dataId:e,shape:s,dtype:i}],i),a=this.readToGPU(r,t);return this.disposeIntermediateTensorInfo(r),a}if(null==u)throw null!=r?new Error("Data is not on GPU but on CPU."):new Error("There is no data on GPU or CPU.");const l=this.decode(e,t.customTexShape),c=ai().makeTensorFromTensorInfo(l),h=this.texData.get(l.dataId);return Object.assign({tensorRef:c},h.texture)}bufferSync(e){const t=this.readSync(e.dataId);if("string"===e.dtype)try{const n=t.map(e=>Zs(e));return ko(e.shape,e.dtype,n)}catch(e){throw new Error("Failed to decode encoded string bytes into utf-8")}return ko(e.shape,e.dtype,t)}checkNumericalProblems(e){if(null!=e)for(let t=0;t<e.length;t++){const n=e[t];if(!MF(n)){if(Xe().getBool("WEBGL_RENDER_FLOAT32_CAPABLE"))throw Error(`The value ${n} cannot be represented with your current settings. Consider enabling float32 rendering: \'tf.env().set(\'WEBGL_RENDER_FLOAT32_ENABLED\', true);\'`);throw Error(`The value ${n} cannot be represented on this device.`)}}}getValuesFromTexture(e){const{shape:t,dtype:n,isPacked:r}=this.texData.get(e),s=le(t);if(Xe().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")){const n=this.decode(e),r=this.texData.get(n.dataId),a=this.gpgpu.downloadMatrixFromPackedTexture(r.texture.texture,...EF(t)).subarray(0,s);return this.disposeIntermediateTensorInfo(n),a}const a=Xe().getBool("WEBGL_PACK")&&!0===r,i=a?cD(t):t,o=a?new eO(i):new QD(i),u=this.runWebGLProgram(o,[{shape:i,dtype:n,dataId:e}],"float32"),l=this.texData.get(u.dataId),c=this.gpgpu.downloadByteEncodedFloatMatrixFromOutputTexture(l.texture.texture,l.texShape[0],l.texShape[1]).subarray(0,s);return this.disposeIntermediateTensorInfo(u),c}timerAvailable(){return Xe().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0}time(e){const t=this.activeTimers,n=[];let r=!1;null==this.programTimersStack?(this.programTimersStack=n,r=!0):this.activeTimers.push(n),this.activeTimers=n,e();const s=ea(this.activeTimers.map(e=>e.query)).filter(e=>null!=e),a=ea(this.activeTimers.map(e=>e.name)).filter(e=>null!=e);this.activeTimers=t,r&&(this.programTimersStack=null);const i={uploadWaitMs:this.uploadWaitMs,downloadWaitMs:this.downloadWaitMs,kernelMs:null,wallMs:null};return(async()=>{if(Xe().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0){const e=await Promise.all(s);i.kernelMs=re(e),i.getExtraProfileInfo=()=>e.map((e,t)=>({name:a[t],ms:e})).map(e=>`${e.name}: ${e.ms}`).join(", ")}else i.kernelMs={error:"WebGL query timers are not supported in this environment."};return this.uploadWaitMs=0,this.downloadWaitMs=0,i})()}memory(){return{unreliable:!1,numBytesInGPU:this.numBytesInGPU,numBytesInGPUAllocated:this.textureManager.numBytesAllocated,numBytesInGPUFree:this.textureManager.numBytesFree}}startTimer(){return Xe().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?this.gpgpu.beginQuery():{startMs:Xs(),endMs:null}}endTimer(e){return Xe().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?(this.gpgpu.endQuery(),e):(e.endMs=Xs(),e)}async getQueryTime(e){if(Xe().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0)return this.gpgpu.waitForQueryAndGetTime(e);const t=e;return t.endMs-t.startMs}disposeData(e,t=!1){if(this.pendingDisposal.has(e))return!1;if(!this.texData.has(e))return!0;if(t?this.texData.get(e).refCount=0:this.texData.get(e).refCount--,!t&&this.texData.get(e).refCount>0)return!1;if(this.pendingRead.has(e))return this.pendingDisposal.add(e),this.pendingDeletes++,!1;this.releaseGPUData(e);const{complexTensorInfos:n}=this.texData.get(e);return null!=n&&(this.disposeData(n.real.dataId,t),this.disposeData(n.imag.dataId,t)),this.texData.delete(e),!0}releaseGPUData(e){const{texture:t,dtype:n,texShape:r,usage:s,isPacked:a,slice:i}=this.texData.get(e),o=i&&i.origDataId||e,u=this.dataRefCount.get(o);u>1?this.dataRefCount.set(o,u-1):(this.dataRefCount.delete(o),null!=t&&(this.numBytesInGPU-=this.computeBytes(r,n),this.textureManager.releaseTexture(t,r,s,a)));const l=this.texData.get(e);l.texture=null,l.texShape=null,l.isPacked=!1,l.slice=null}getTexture(e){return this.uploadToGPU(e),this.texData.get(e).texture.texture}getDataInfo(e){return this.texData.get(e)}shouldExecuteOnCPU(e,t=BL){return Xe().getBool("WEBGL_CPU_FORWARD")&&e.every(e=>null==this.texData.get(e.dataId).texture&&le(e.shape)<t)}getGPGPUContext(){return this.gpgpu}where(e){xs("tf.where() in webgl locks the UI thread. Call tf.whereAsync() instead");const t=e.dataSync();return zL(e.shape,t)}packedUnaryOp(e,t,n){const r=new OL(e.shape,t),s=this.compileAndRun(r,[e],n);return ai().makeTensorFromTensorInfo(s)}abs(e){if(this.shouldExecuteOnCPU([e])&&"complex64"!==e.dtype){const t=iL(this.texData.get(e.dataId).values);return this.makeOutput(e.shape,e.dtype,t)}if(Xe().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(e,_L,e.dtype);const t=new AL(e.shape,_L),n=this.compileAndRun(t,[e]);return ai().makeTensorFromTensorInfo(n)}makeTensorInfo(e,t,n){let r;if("string"===t&&null!=n&&n.length>0&&$e(n[0])){const s=n.map(e=>Js(e));r=this.write(s,e,t)}else r=this.write(n,e,t);return this.texData.get(r).usage=null,{dataId:r,shape:e,dtype:t}}makeOutput(e,t,n){return ai().makeTensorFromTensorInfo(this.makeTensorInfo(e,t,n),this)}unpackTensor(e){const t=new LL(e.shape);return this.runWebGLProgram(t,[e],e.dtype)}packTensor(e){const t=new SL(e.shape);return this.runWebGLProgram(t,[e],e.dtype,null,!0)}packedReshape(e,t){const n=[uD(e.shape),...lD(e.shape)],r={dtype:e.dtype,shape:n,dataId:e.dataId},s=[uD(t),...lD(t)],a=new NL(s,n),i=[n],o=this.runWebGLProgram(a,[r],e.dtype,i,!0);return{dataId:o.dataId,shape:t,dtype:o.dtype}}decode(e,t){const n=this.texData.get(e),{isPacked:r,shape:s,dtype:a}=n;null!=t&&ie(le(s)<=t[0]*t[1]*4,()=>"customTexShape is too small. Row * Column * 4 should be equal or larger than the size of the tensor data.");const i=cD(s);let o;o=r?new ZD(i):new JD(i);const u=[null!=t?t:EF(i)];return{dtype:a,shape:s,dataId:this.runWebGLProgram(o,[{shape:i,dtype:a,dataId:e}],a,u,!0,t).dataId}}runWebGLProgram(e,t,n,r,s=!1,a){const i=this.makeTensorInfo(e.outputShape,n),o=this.texData.get(i.dataId);if(e.packedOutput&&(o.isPacked=!0),e.outPackingScheme===IF.DENSE){const t=null!=a?a:EF(e.outputShape);o.texShape=t.map(e=>2*e)}if(null!=e.outTexUsage&&(o.usage=e.outTexUsage),0===le(i.shape))return o.values=ke(i.dtype,0),i;const u=[],l=t.map(t=>{if("complex64"===t.dtype)throw new Error("GPGPUProgram does not support complex64 input. For complex64 dtypes, please separate the program into real and imaginary parts.");let n=this.texData.get(t.dataId);if(null==n.texture){if(!e.packedInputs&&le(t.shape)<=Xe().getNumber("WEBGL_SIZE_UPLOAD_UNIFORM"))return{shape:t.shape,texData:null,isUniform:!0,uniformValues:n.values};e.packedInputs&&(n.isPacked=!0,n.shape=t.shape)}if(this.uploadToGPU(t.dataId),!!n.isPacked!=!!e.packedInputs)t=n.isPacked?this.unpackTensor(t):this.packTensor(t),u.push(t),n=this.texData.get(t.dataId);else if(n.isPacked&&!pD(n.shape,t.shape)){const e=t,r=t.shape;t.shape=n.shape,t=this.packedReshape(t,r),u.push(t),n=this.texData.get(t.dataId),e.shape=r}return{shape:t.shape,texData:n,isUniform:!1}});this.uploadToGPU(i.dataId);const c={shape:i.shape,texData:o,isUniform:!1},h=function(e,t,n){let r="";t.concat(n).forEach(t=>{const s=null!=t.texData&&null!=t.texData.slice&&t.texData.slice.flatOffset>0;if(e.enableShapeUniforms&&!t.isUniform){const a=t.texData.texShape,{useSqueezeShape:i,uniformShape:o,keptDims:u}=HD(e.packedInputs,t.shape,a);let l="",c="",h="";if(1===o.length&&e.packedInputs){const e=[Math.ceil(a[0]/2),Math.ceil(a[1]/2)];l=`${e[0]>1}_${e[1]>1}`}else if(2!==o.length||e.packedInputs){if(o.length>2&&!e.packedInputs){const e=De(o);h=`${e[0]===a[1]}_${e[e.length-1]===a[1]}`}}else c=`${o[0]>1}_${o[1]>1}`;const d=t.shape.length,p=2===o.length&&de(t.shape,a),f=1===le(t.shape),m=tu(t.shape,n.shape),g=!e.packedInputs&&d===n.shape.length&&de(a,n.texData.texShape),y=e.packedInputs||o.length>2?"":`${a[0]>1}_${a[1]>1}`;r+=`${d}_${g}_${i?u:""}_${o.length}_${f}_${m}_${p}_${l}_${c}_${h}_${y}_${s}`}else{const e=t.isUniform?"uniform":t.texData.texShape;r+=`${t.shape}_${e}_${s}`}});const s=e.userCode;let a=e.constructor.name;return a+="_"+r+"_"+s+`${Xe().getNumber("WEBGL_VERSION")}`,a}(e,l,c),d=this.getAndSaveBinary(h,()=>function(e,t,n,r){const s=n.map((e,n)=>{const r={logicalShape:e.shape,texShape:e.isUniform?null:e.texData.texShape,isUniform:e.isUniform,isPacked:!e.isUniform&&e.texData.isPacked,flatOffset:null};return null!=e.texData&&null!=e.texData.slice&&e.texData.slice.flatOffset>0&&(r.flatOffset=e.texData.slice.flatOffset),{name:t.variableNames[n],shapeInfo:r}}),a=s.map(e=>e.shapeInfo),i={logicalShape:r.shape,texShape:r.texData.texShape,isUniform:!1,isPacked:r.texData.isPacked,flatOffset:null},o=DD(s,i,t),u=LF(e.gl,o),l=e.createProgram(u);return Xe().get("ENGINE_COMPILE_ONLY")?{program:t,fragmentShader:u,source:o,webGLProgram:l,inShapeInfos:a,outShapeInfo:i,variablesLocations:null,customUniformLocations:null,infLoc:null,nanLoc:null,outShapeLocation:null,outShapeStridesLocation:null,outTexShapeLocation:null}:(e.buildVao(l),Object.assign({program:t,fragmentShader:u,source:o,webGLProgram:l,inShapeInfos:a,outShapeInfo:i},KD(e,t,l)))}(this.gpgpu,e,l,c)),p=null!=this.activeTimers;let f;p&&(f=this.startTimer()),Xe().get("ENGINE_COMPILE_ONLY")||function(e,t,n,r,s){t.program.enableShapeUniforms||(XD(t.inShapeInfos,n),XD([t.outShapeInfo],[r]));const a=r.texData.texture,i=r.texData.texShape;r.texData.isPacked?e.setOutputPackedMatrixTexture(a.texture,i[0],i[1]):e.setOutputMatrixTexture(a.texture,i[0],i[1]),e.setProgram(t.webGLProgram),e.bindVertexArray(t.webGLProgram.vao),1===Xe().getNumber("WEBGL_VERSION")&&null!==t.infLoc&&e.gl.uniform1f(t.infLoc,1/0),null!==t.nanLoc&&e.gl.uniform1f(t.nanLoc,NaN);for(let r=0;r<n.length;++r){const s=n[r],{uniform:a,offset:i,shape:o,texShape:u}=t.variablesLocations[r];if(o){const{uniformShape:n}=HD(t.program.packedInputs,s.shape,s.texData.texShape);switch(n.length){case 1:e.gl.uniform1iv(o,new Int32Array(n));break;case 2:e.gl.uniform2iv(o,new Int32Array(n));break;case 3:e.gl.uniform3iv(o,new Int32Array(n));break;case 4:e.gl.uniform4iv(o,new Int32Array(n))}}if(u&&e.gl.uniform2i(u,s.texData.texShape[0],s.texData.texShape[1]),null!=a)if(s.isUniform)if(le(s.shape)<2)e.gl.uniform1f(a,s.uniformValues[0]);else{let t=s.uniformValues;t instanceof Float32Array||(t=new Float32Array(t)),e.gl.uniform1fv(a,t)}else null!=s.texData.slice&&null!=i&&e.gl.uniform1i(i,s.texData.slice.flatOffset),e.setInputMatrixTexture(s.texData.texture.texture,a,r)}const o=t.outShapeLocation;if(o)switch(r.shape.length){case 1:e.gl.uniform1iv(o,new Int32Array(r.shape));break;case 2:e.gl.uniform2iv(o,new Int32Array(r.shape));break;case 3:e.gl.uniform3iv(o,new Int32Array(r.shape));break;case 4:e.gl.uniform4iv(o,new Int32Array(r.shape))}if(t.outShapeStridesLocation){const n=De(r.shape);switch(r.shape.length){case 2:e.gl.uniform1iv(t.outShapeStridesLocation,new Int32Array(n));break;case 3:e.gl.uniform2iv(t.outShapeStridesLocation,new Int32Array(n));break;case 4:e.gl.uniform3iv(t.outShapeStridesLocation,new Int32Array(n))}}if(t.outTexShapeLocation&&e.gl.uniform2i(t.outTexShapeLocation,r.texData.texShape[0],r.texData.texShape[1]),t.program.customUniforms&&s)for(let n=0;n<t.program.customUniforms.length;++n){const r=t.program.customUniforms[n],a=t.customUniformLocations[n],i=s[n];if("float"===r.type)e.gl.uniform1fv(a,i);else if("vec2"===r.type)e.gl.uniform2fv(a,i);else if("vec3"===r.type)e.gl.uniform3fv(a,i);else if("vec4"===r.type)e.gl.uniform4fv(a,i);else if("int"===r.type)e.gl.uniform1iv(a,i);else if("ivec2"===r.type)e.gl.uniform2iv(a,i);else if("ivec3"===r.type)e.gl.uniform3iv(a,i);else{if("ivec4"!==r.type)throw Error(`uniform type ${r.type} is not supported yet.`);e.gl.uniform4iv(a,i)}}e.executeProgram()}(this.gpgpu,d,l,c,r),u.forEach(e=>this.disposeIntermediateTensorInfo(e)),p&&(f=this.endTimer(f),this.activeTimers.push({name:e.constructor.name,query:this.getQueryTime(f)}));const m=Xe().getNumber("WEBGL_FLUSH_THRESHOLD");if(m>0){const e=Xs();e-this.lastGlFlushTime>m&&(this.gpgpu.gl.flush(),this.lastGlFlushTime=e)}if(!Xe().getBool("WEBGL_LAZILY_UNPACK")&&o.isPacked&&!1===s){const e=this.unpackTensor(i);return this.disposeIntermediateTensorInfo(i),e}return i}compileAndRun(e,t,n,r,s=!1){return n=n||t[0].dtype,this.runWebGLProgram(e,t,n,r,s)}getAndSaveBinary(e,t){return e in this.binaryCache||(this.binaryCache[e]=t()),this.binaryCache[e]}getTextureManager(){return this.textureManager}dispose(){this.disposed||(Xe().getBool("IS_TEST")||Object.keys(this.binaryCache).forEach(e=>{this.gpgpu.deleteProgram(this.binaryCache[e].webGLProgram),delete this.binaryCache[e]}),this.textureManager.dispose(),null!=this.canvas&&"undefined"!=typeof HTMLCanvasElement&&this.canvas instanceof HTMLCanvasElement?this.canvas.remove():this.canvas=null,this.gpgpuCreatedLocally&&(this.gpgpu.program=null,this.gpgpu.dispose()),this.disposed=!0)}floatPrecision(){return null==this.floatPrecisionValue&&(this.floatPrecisionValue=ui(()=>{if(!Xe().get("WEBGL_RENDER_FLOAT32_ENABLED")){const e=Xe().getBool("DEBUG");Xe().set("DEBUG",!1);const t=this.abs(Bo(1e-8)).dataSync()[0];if(Xe().set("DEBUG",e),t>0)return 32}return 16})),this.floatPrecisionValue}epsilon(){return 32===this.floatPrecision()?1e-7:1e-4}uploadToGPU(e){const t=this.texData.get(e),{shape:n,dtype:r,values:s,texture:a,usage:i,isPacked:o}=t;if(null!=a)return;const u=null!=this.activeTimers;let l;u&&(l=Xs());let c=t.texShape;if(null==c&&(c=hD(n,o),t.texShape=c),null!=s){const e=cD(n);let a,i=c[1],h=c[0];const d=s instanceof Uint8Array||s instanceof Uint8ClampedArray;!o&&d||([i,h]=CF(c[0],c[1])),a=o?new rO(e,d):new nO(e,d);const p=d?[h,i]:c,f=this.makeTensorInfo(p,r),m=this.texData.get(f.dataId);m.usage=d?SF.PIXELS:SF.UPLOAD,m.texShape=p,this.gpgpu.uploadDenseMatrixToTexture(this.getTexture(f.dataId),i,h,s);const g=[[h,i]],y=!0,b=this.runWebGLProgram(a,[f],r,g,y),x=this.texData.get(b.dataId);t.texShape=x.texShape,t.isPacked=x.isPacked,t.usage=x.usage,Xe().get("ENGINE_COMPILE_ONLY")?this.disposeData(b.dataId):(t.texture=x.texture,t.values=null,this.texData.delete(b.dataId)),this.disposeIntermediateTensorInfo(f),u&&(this.uploadWaitMs+=Xs()-l)}else{const e=this.acquireTexture(c,i,r,o);t.texture=e}}convertAndCacheOnCPU(e,t){const n=this.texData.get(e),{dtype:r}=n;return null!=t&&(n.values=function(e,t){if("float32"===t||"complex64"===t)return e;if("int32"===t||"bool"===t){const n="int32"===t?new Int32Array(e.length):new Uint8Array(e.length);for(let t=0;t<n.length;++t)n[t]=Math.round(e[t]);return n}throw new Error(`Unknown dtype ${t}`)}(t,r)),n.values}acquireTexture(e,t,n,r){if(this.numBytesInGPU+=this.computeBytes(e,n),!this.warnedAboutMemory&&this.numBytesInGPU>1024*this.numMBBeforeWarning*1024){const e=(this.numBytesInGPU/1024/1024).toFixed(2);this.warnedAboutMemory=!0,console.warn(`High memory usage in GPU: ${e} MB, most likely due to a memory leak`)}return this.textureManager.acquireTexture(e,t,r)}computeBytes(e,t){return e[0]*e[1]*Ee(t)}checkCompileCompletion(){for(const[,e]of Object.entries(this.binaryCache))this.checkCompletion_(e)}async checkCompileCompletionAsync(){const e=[];if(this.gpgpu.parallelCompilationExtension){for(const[,t]of Object.entries(this.binaryCache))e.push(this.checkCompletionAsync_(t));return Promise.all(e)}for(const[,t]of Object.entries(this.binaryCache)){const n=new Promise(e=>{try{this.checkCompletion_(t),e(!0)}catch(e){throw e}});e.push(n)}return Promise.all(e)}async checkCompletionAsync_(e){return this.gpgpu.gl.getProgramParameter(e.webGLProgram,this.gpgpu.parallelCompilationExtension.COMPLETION_STATUS_KHR)?this.checkCompletion_(e):(await Uf(),this.checkCompletionAsync_(e))}checkCompletion_(e){if(!1===this.gpgpu.gl.getProgramParameter(e.webGLProgram,this.gpgpu.gl.LINK_STATUS)){if(console.log(this.gpgpu.gl.getProgramInfoLog(e.webGLProgram)),!1===this.gpgpu.gl.getShaderParameter(e.fragmentShader,this.gpgpu.gl.COMPILE_STATUS))throw PF(e.source,this.gpgpu.gl.getShaderInfoLog(e.fragmentShader)),new Error("Failed to compile fragment shader.");throw new Error("Failed to link vertex and fragment shaders.")}return!0}getUniformLocations(){for(const e of Object.values(this.binaryCache)){this.gpgpu.buildVao(e.webGLProgram);const{variablesLocations:t,customUniformLocations:n,infLoc:r,nanLoc:s,outShapeLocation:a,outShapeStridesLocation:i,outTexShapeLocation:o}=KD(this.gpgpu,e.program,e.webGLProgram);e.variablesLocations=t,e.customUniformLocations=n,e.infLoc=r,e.nanLoc=s,e.outShapeLocation=a,e.outShapeStridesLocation=i,e.outTexShapeLocation=o}}createTensorFromGPUData(e,t,n){e.channels=e.channels||"RGBA";const{texture:r,height:s,width:a,channels:i}=e,o=ai().backend;if(!o.gpgpu.gl.isTexture(r))throw new Error("The texture is invalid. Also, please make sure the texture and the TFJS WebGL backend are using the same canvas. If you want to use your own custom canvas, you have to create and use the custom TFJS WebGL backend created from the canvas through \'new tf.MathBackendWebGL(customCanvas)\'.");const u=o.writeTexture(r,t,n,s,a,i);return ai().makeTensorFromDataId(u,t,n,o)}}VL.nextDataId=0;const UL="4.22.0";function WL(){Xe().set("WEBGL_FORCE_F16_TEXTURES",!0)}Ba()&&bi("webgl",()=>new VL,2);const GL={forceHalfFloat:WL},HL="\\n  if (isnan(a)) return a;\\n  if (isnan(b)) return b;\\n";class jL{constructor(e,t,n){this.variableNames=["A","B"],this.outputShape=ru(t,n),this.enableShapeUniforms=YD(this.outputShape.length),this.userCode=`\\n      float binaryOperation(float a, float b) {\\n        ${e}\\n      }\\n\\n      void main() {\\n        float a = getAAtOutCoords();\\n        float b = getBAtOutCoords();\\n        setOutput(binaryOperation(a, b));\\n      }\\n    `}}const qL="\\n  result.r = isNaN.r ? NAN : result.r;\\n  result.g = isNaN.g ? NAN : result.g;\\n  result.b = isNaN.b ? NAN : result.b;\\n  result.a = isNaN.a ? NAN : result.a;\\n";class KL{constructor(e,t,n,r=!1){this.variableNames=["A","B"],this.supportsBroadcasting=!0,this.packedInputs=!0,this.packedOutput=!0,this.outputShape=ru(t,n);const s=this.outputShape.length;this.enableShapeUniforms=YD(s);let a="";if(r)if(0===s||1===le(this.outputShape))a="\\n          result.y = 0.;\\n          result.z = 0.;\\n          result.w = 0.;\\n        ";else if(a=`\\n          ${GD(s)} coords = getOutputCoords();\\n        `,1===s)this.enableShapeUniforms?a+="\\n            result.y = (coords + 1) >= outShape ? 0. : result.y;\\n            result.z = 0.;\\n            result.w = 0.;\\n          ":a+=`\\n            result.y = (coords + 1) >= ${this.outputShape[0]} ? 0. : result.y;\\n            result.z = 0.;\\n            result.w = 0.;\\n          `;else{const e=IL("coords",s);this.enableShapeUniforms?a+=`\\n            bool nextRowOutOfBounds =\\n              (${e[s-2]} + 1) >= outShape[${s} - 2];\\n            bool nextColOutOfBounds =\\n              (${e[s-1]} + 1) >= outShape[${s} - 1];\\n            result.y = nextColOutOfBounds ? 0. : result.y;\\n            result.z = nextRowOutOfBounds ? 0. : result.z;\\n            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;\\n          `:a+=`\\n            bool nextRowOutOfBounds =\\n              (${e[s-2]} + 1) >= ${this.outputShape[s-2]};\\n            bool nextColOutOfBounds =\\n              (${e[s-1]} + 1) >= ${this.outputShape[s-1]};\\n            result.y = nextColOutOfBounds ? 0. : result.y;\\n            result.z = nextRowOutOfBounds ? 0. : result.z;\\n            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;\\n          `}this.userCode=`\\n      vec4 binaryOperation(vec4 a, vec4 b) {\\n        ${e}\\n      }\\n\\n      void main() {\\n        vec4 a = getAAtOutCoords();\\n        vec4 b = getBAtOutCoords();\\n\\n        vec4 result = binaryOperation(a, b);\\n        ${a}\\n\\n        setOutput(result);\\n      }\\n    `}}function XL(e){const{inputs:t,backend:n}=e,{x:r}=t;return n.incRef(r.dataId),{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}const YL={kernelName:yn,backendName:"webgl",kernelFunc:XL};function JL(e){const{inputs:t,backend:n}=e,{real:r,imag:s}=t,a=n.makeTensorInfo(r.shape,"complex64"),i=n.texData.get(a.dataId),o=XL({inputs:{x:r},backend:n}),u=XL({inputs:{x:s},backend:n});return i.complexTensorInfos={real:o,imag:u},a}const ZL={kernelName:Et,backendName:"webgl",kernelFunc:JL},QL="return (a < 0.) ? b * a : a;",ez="\\n  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));\\n  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);\\n",tz={kernelName:In,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{alpha:a}=r,i=n.makeTensorInfo([],"float32",qs(a,"float32")),o=Xe().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new KL(ez,s.shape,i.shape):new jL(QL,s.shape,i.shape),u=n.runWebGLProgram(o,[s,i],"float32");return n.disposeIntermediateTensorInfo(i),u}},nz="return (a < 0.) ? b * a : a;",rz="\\n  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));\\n  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);\\n",sz={kernelName:lr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r,alpha:s}=t,a=Xe().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new KL(rz,r.shape,s.shape):new jL(nz,r.shape,s.shape);return n.runWebGLProgram(a,[r,s],"float32")}},az="if (isnan(x)) return x;";function iz({opSnippet:e,packedOpSnippet:t,cpuKernelImpl:n,dtype:r}){return({inputs:s,backend:a})=>{const{x:i}=s,o=a,u=r||i.dtype;if(o.shouldExecuteOnCPU([i])&&null!=n){const e=o.texData.get(i.dataId),t=n(e.values,u);return o.makeTensorInfo(i.shape,u,t)}let l;return l=Xe().getBool("WEBGL_PACK_UNARY_OPERATIONS")&&null!=t?new OL(i.shape,t):new AL(i.shape,e),o.runWebGLProgram(l,[i],u)}}function oz({opSnippet:e,packedOpSnippet:t,checkOutOfBounds:n=!1,supportsComplex:r=!1,cpuKernelImpl:s,dtype:a}){return({inputs:i,backend:o})=>{const{a:u,b:l}=i,c=o;if(r&&"complex64"===u.dtype){const t=c.texData.get(u.dataId),n=c.texData.get(l.dataId),[r,s]=[[t.complexTensorInfos.real,n.complexTensorInfos.real],[t.complexTensorInfos.imag,n.complexTensorInfos.imag]].map(t=>{const[n,r]=t,s={dataId:n.dataId,dtype:n.dtype,shape:u.shape},a={dataId:r.dataId,dtype:r.dtype,shape:l.shape},i=new jL(e,u.shape,l.shape);return c.runWebGLProgram(i,[s,a],ka(n.dtype,r.dtype))}),a=JL({inputs:{real:r,imag:s},backend:c});return c.disposeIntermediateTensorInfo(r),c.disposeIntermediateTensorInfo(s),a}const h=a||ka(u.dtype,l.dtype);if(("string"===u.dtype||"string"===l.dtype||c.shouldExecuteOnCPU([u,l]))&&null!=s){const e=c.texData.get(u.dataId).values,t=c.texData.get(l.dataId).values,n="string"===u.dtype?jm(e):e,r="string"===u.dtype?jm(t):t,[a,i]=s(u.shape,l.shape,n,r,h),o=c.makeTensorInfo(i,h);return c.texData.get(o.dataId).values=a,o}let d;return d=Xe().getBool("WEBGL_PACK_BINARY_OPERATIONS")&&null!=t?new KL(t,u.shape,l.shape,n):new jL(e,u.shape,l.shape),c.runWebGLProgram(d,[u,l],h)}}function uz(e,t=!1){if("linear"===e)return"return x;";if("relu"===e)return t?"\\n  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));\\n  bvec4 isNaN = isnan(x);\\n\\n  result.r = isNaN.r ? x.r : result.r;\\n  result.g = isNaN.g ? x.g : result.g;\\n  result.b = isNaN.b ? x.b : result.b;\\n  result.a = isNaN.a ? x.a : result.a;\\n\\n  return result;\\n":ML;if("elu"===e)return t?"\\n  vec4 result;\\n\\n  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);\\n  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);\\n  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);\\n  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);\\n\\n  return result;\\n":"return (x >= 0.0) ? x : (exp(x) - 1.0);";if("relu6"===e)return t?"\\n  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));\\n  bvec4 isNaN = isnan(x);\\n\\n  result.r = isNaN.r ? x.r : result.r;\\n  result.g = isNaN.g ? x.g : result.g;\\n  result.b = isNaN.b ? x.b : result.b;\\n  result.a = isNaN.a ? x.a : result.a;\\n\\n  return result;\\n":FL;if("prelu"===e)return t?rz:nz;if("leakyrelu"===e)return t?ez:QL;if("sigmoid"===e)return"return 1.0 / (1.0 + exp(-1.0 * x));";throw new Error(`Activation ${e} has not been implemented for the WebGL backend.`)}class lz{constructor(e,t,n,r=!1,s=!1,a=!1,i=null,o=!1,u=!1){this.variableNames=["matrixA","matrixB"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=n,this.enableShapeUniforms=YD(this.outputShape.length);const l=r?e[1]:e[2],c=Math.ceil(l/2),h=r?"i * 2, rc.y":"rc.y, i * 2",d=s?"rc.z, i * 2":"i * 2, rc.z",p=r?["a.xxyy","a.zzww"]:["a.xxzz","a.yyww"],f=s?["b.xzxz","b.ywyw"]:["b.xyxy","b.zwzw"];let m="",g="";i&&(m=o?`vec4 activation(vec4 a) {\\n          vec4 b = getPreluActivationWeightsAtOutCoords();\\n          ${i}\\n        }`:u?`vec4 activation(vec4 a) {\\n          vec4 b = getLeakyreluAlphaAtOutCoords();\\n          ${i}\\n        }`:`vec4 activation(vec4 x) {\\n          ${i}\\n        }`,g="result = activation(result);");const y=a?"result += getBiasAtOutCoords();":"";a&&this.variableNames.push("bias"),o&&this.variableNames.push("preluActivationWeights"),u&&this.variableNames.push("leakyreluAlpha");let b="rc.x",x="rc.x";e[0]<t[0]?b=`imod(rc.x, ${e[0]})`:t[0]<e[0]&&(x=`imod(rc.x, ${t[0]})`),this.userCode=`\\n      ${m}\\n      // Don\'t use uniform for sharedDimensionPacked for performance.\\n      const float sharedDimension = ${c}.0;\\n\\n      vec4 dot2x2ARowBCol(ivec3 rc) {\\n        vec4 result = vec4(0);\\n        int batchA = ${b};\\n        int batchB = ${x};\\n        for (int i = 0; i < ${c}; i++) {\\n          vec4 a = getMatrixA(batchA, ${h});\\n          vec4 b = getMatrixB(batchB, ${d});\\n\\n          // These swizzled products need to be separately added.\\n          // See: https://github.com/tensorflow/tfjs/issues/1735\\n          result += (${p[0]} * ${f[0]});\\n          result += (${p[1]} * ${f[1]});\\n        }\\n        return result;\\n      }\\n\\n      void main() {\\n        ivec3 rc = getOutputCoords();\\n        vec4 result = dot2x2ARowBCol(rc);\\n\\n        ${y}\\n\\n        ${g}\\n\\n        setOutput(result);\\n      }\\n    `}}class cz{constructor(e,t,n){this.variableNames=["AReal","AImag","BReal","BImag"],this.outputShape=ru(t,n),this.userCode=`\\n      float binaryOpComplex(\\n          float areal, float aimag, float breal, float bimag) {\\n        ${e}\\n      }\\n\\n      void main() {\\n        float areal = getARealAtOutCoords();\\n        float aimag = getAImagAtOutCoords();\\n        float breal = getBRealAtOutCoords();\\n        float bimag = getBImagAtOutCoords();\\n        setOutput(binaryOpComplex(areal, aimag, breal, bimag));\\n      }\\n    `}}const hz="return a * b;";function dz(e){const{inputs:t,backend:n}=e,{a:r,b:s}=t,a=ka(r.dtype,s.dtype);if("complex64"===r.dtype){const e=n.texData.get(r.dataId),t=n.texData.get(s.dataId),a=new cz("return areal * breal - aimag * bimag;",r.shape,s.shape),i=new cz("return areal * bimag + aimag * breal;",r.shape,s.shape),o=[{dataId:e.complexTensorInfos.real.dataId,dtype:e.complexTensorInfos.real.dtype,shape:r.shape},{dataId:e.complexTensorInfos.imag.dataId,dtype:e.complexTensorInfos.imag.dtype,shape:r.shape},{dataId:t.complexTensorInfos.real.dataId,dtype:t.complexTensorInfos.real.dtype,shape:s.shape},{dataId:t.complexTensorInfos.imag.dataId,dtype:t.complexTensorInfos.imag.dtype,shape:s.shape}],u=n.runWebGLProgram(a,o,"float32"),l=n.runWebGLProgram(i,o,"float32"),c=JL({inputs:{real:u,imag:l},backend:n});return n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(l),c}if(n.shouldExecuteOnCPU([r,s])){const e=n.texData.get(r.dataId),t=n.texData.get(s.dataId),[i,o]=XO(r.shape,s.shape,e.values,t.values,a),u=n.makeTensorInfo(o,a);return n.texData.get(u.dataId).values=i,u}let i;return i=Xe().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new KL(hz,r.shape,s.shape):new jL(hz,r.shape,s.shape),n.runWebGLProgram(i,[r,s],a)}const pz={kernelName:Jn,backendName:"webgl",kernelFunc:dz};function fz(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{shape:a}=r,i=n,o=le(s.shape),u=xe(a,o),l=le(u);ie(o===l,()=>`The new shape (${u}) has ${l} elements and the old shape (${s.shape}) has ${o} elements. The new shape and old shape must have the same number of elements.`);const c=i.texData.get(s.dataId);return!c.isPacked||pD(s.shape,u)||null!==c.texture&&pD(c.shape,u)?(i.incRef(s.dataId),{dataId:s.dataId,shape:u,dtype:s.dtype}):function(e,t,n){const r=[uD(e.shape),...lD(e.shape)],s={dtype:e.dtype,shape:r,dataId:e.dataId},a=[uD(t),...lD(t)],i=new NL(a,r),o=[r],u=n.runWebGLProgram(i,[s],e.dtype,o,!0);return{dataId:u.dataId,shape:t,dtype:u.dtype}}(s,u,i)}const mz={kernelName:br,backendName:"webgl",kernelFunc:fz};class gz{constructor(e,t){this.variableNames=["x"];const{windowSize:n,batchSize:r,inSize:s,outSize:a}=e;this.outputShape=[r,a];const i=4*Math.floor(n/4),o=n%4;let u="sumValue += dot(values, ones);";if(null!=t){const e=1/t;u=`sumValue += dot(values * ${pe(e)?e.toPrecision(2):e}, ones);`}let l="";s%n>0&&(l=`\\n        if (inIdx < 0 || inIdx >= ${s}) {\\n          return 0.0;\\n        }\\n      `),this.userCode=`\\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\\n\\n      float getValue(int batch, int inIdx) {\\n        ${l}\\n        return getX(batch, inIdx);\\n      }\\n\\n      void main() {\\n        ivec2 coords = getOutputCoords();\\n        int batch = coords[0];\\n        int outIdx = coords[1];\\n        int inOffset = outIdx * ${n};\\n\\n        float sumValue = 0.0;\\n\\n        for (int i = 0; i < ${i}; i += 4) {\\n          int inIdx = inOffset + i;\\n          vec4 values = vec4(\\n            getValue(batch, inIdx),\\n            getValue(batch, inIdx + 1),\\n            getValue(batch, inIdx + 2),\\n            getValue(batch, inIdx + 3)\\n          );\\n\\n          ${u}\\n        }\\n\\n        int inIdx = inOffset + ${i};\\n        if (${1===o}) {\\n          vec4 values = vec4(getValue(batch, inIdx), 0.0, 0.0, 0.0);\\n\\n          ${u}\\n        } else if (${2===o}) {\\n          vec4 values = vec4(\\n            getValue(batch, inIdx),\\n            getValue(batch, inIdx + 1), 0.0, 0.0);\\n\\n          ${u}\\n        } else if (${3===o}) {\\n          vec4 values = vec4(\\n            getValue(batch, inIdx),\\n            getValue(batch, inIdx + 1),\\n            getValue(batch, inIdx + 2), 0.0);\\n\\n          ${u}\\n        }\\n        setOutput(sumValue);\\n      }\\n    `}}class yz{constructor(e,t){this.variableNames=["x"];const{windowSize:n,batchSize:r,inSize:s,outSize:a}=e;this.outputShape=[r,a];let i="0.0",o="";"prod"===t?i="1.0":"min"===t?(i="1.0 / 1e-20",o="min"):"max"===t&&(i="-1.0 / 1e-20",o="max");let u=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"sum"===t?u="sumValue":"prod"===t?u="prodValue":"all"===t?u="allValue":"any"===t&&(u="anyValue");const l=4*Math.floor(n/4),c=n%4;let h=`\\n      if (${"sum"===t}) {\\n        sumValue += dot(values, ones);\\n      } else if (${"prod"===t}) {\\n        vec2 tmp = vec2(values[0], values[1]) * vec2(values[2], values[3]);\\n        prodValue *= tmp[0] * tmp[1];\\n      } else {\\n        minMaxValue = ${o}(values, minMaxValue);\\n        if (${"min"===t} || ${"max"===t}) {\\n          minMaxValue = ${o}(values, minMaxValue);\\n          bvec4 isNaN = isnan(values);\\n          if (isNaN.r || isNaN.g || isNaN.b || isNaN.a) {\\n            minMaxValue = vec4(NAN);\\n          }\\n        }\\n      }\\n    `,d="vec4";"all"===t?(i="1.0",h="\\n        bool reducedAllValue = all(values);\\n        float floatedReducedAllValue = float(reducedAllValue);\\n        allValue = float(allValue >= 1.0 && floatedReducedAllValue >= 1.0);\\n      ",d="bvec4"):"any"===t&&(i="0.0",h="\\n        bool reducedAnyValue = any(values);\\n        float floatedReducedAnyValue = float(reducedAnyValue);\\n        anyValue = float(anyValue >= 1.0 || floatedReducedAnyValue >= 1.0);\\n      ",d="bvec4");let p="";s%n>0&&(p=`\\n        if (inIdx < 0 || inIdx >= ${s}) {\\n          return initializationValue;\\n        }\\n      `),this.userCode=`\\n      const float initializationValue = ${i};\\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\\n\\n      float getValue(int batch, int inIdx) {\\n        ${p}\\n        return getX(batch, inIdx);\\n      }\\n\\n      void main() {\\n        ivec2 coords = getOutputCoords();\\n        int batch = coords[0];\\n        int outIdx = coords[1];\\n        int inOffset = outIdx * ${n};\\n\\n        vec4 minMaxValue = vec4(${i});\\n        float prodValue = 1.0;\\n        float sumValue = 0.0;\\n        float allValue = 1.0;\\n        float anyValue = 0.0;\\n\\n        for (int i = 0; i < ${l}; i += 4) {\\n          int inIdx = inOffset + i;\\n          ${d} values = ${d}(\\n            getValue(batch, inIdx),\\n            getValue(batch, inIdx + 1),\\n            getValue(batch, inIdx + 2),\\n            getValue(batch, inIdx + 3)\\n          );\\n\\n          ${h}\\n        }\\n\\n        int inIdx = inOffset + ${l};\\n        if (${1===c}) {\\n          ${d} values = ${d}(\\n            getValue(batch, inIdx),\\n            initializationValue,\\n            initializationValue,\\n            initializationValue\\n          );\\n\\n          ${h}\\n        } else if (${2===c}) {\\n          ${d} values = ${d}(\\n            getValue(batch, inIdx),\\n            getValue(batch, inIdx + 1),\\n            initializationValue,\\n            initializationValue\\n          );\\n\\n          ${h}\\n        } else if (${3===c}) {\\n          ${d} values = ${d}(\\n            getValue(batch, inIdx),\\n            getValue(batch, inIdx + 1),\\n            getValue(batch, inIdx + 2),\\n            initializationValue\\n          );\\n\\n          ${h}\\n        }\\n        setOutput(${u});\\n      }\\n    `}}function bz(e,t,n,r){const s=function(e){const t=[];for(;0===t.length||1!==t[t.length-1].outSize;){const n=t.length?t[t.length-1].outSize:e[1],r=Jf(n);t.push({inSize:n,windowSize:r,outSize:Math.ceil(n/r)})}return t}(e.shape);let a=e;for(let i=0;i<s.length;i++){const{inSize:o,windowSize:u,outSize:l}=s[i];let c,h;c="mean"===n?0===i?new gz({windowSize:u,inSize:o,batchSize:e.shape[0],outSize:l},o):new gz({windowSize:u,inSize:o,batchSize:e.shape[0],outSize:l}):new yz({windowSize:u,inSize:o,batchSize:e.shape[0],outSize:l},n),h=a,a=r.runWebGLProgram(c,[a],t),h.dataId!==e.dataId&&r.disposeIntermediateTensorInfo(h)}return a}class xz{constructor(e,t){this.variableNames=["A"];const n=new Array(e.length);for(let r=0;r<n.length;r++)n[r]=e[t[r]];this.outputShape=n,this.rank=n.length;const r=GD(this.rank),s=function(e){const t=e.length;if(t>6)throw Error(`Transpose for rank ${t} is not yet supported`);const n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u","resRC.v"],r=new Array(t);for(let t=0;t<e.length;t++)r[e[t]]=n[t];return r.join()}(t);this.userCode=`\\n    void main() {\\n      ${r} resRC = getOutputCoords();\\n      setOutput(getA(${s}));\\n    }\\n    `}}class wz{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0;const n=new Array(e.length);for(let r=0;r<n.length;r++)n[r]=e[t[r]];if(this.outputShape=n,this.rank=n.length,this.rank>6)throw Error(`Packed transpose for rank ${this.rank} is not yet supported.`);const r=GD(this.rank),s=kL("rc",this.rank),a=new Array(this.rank);for(let e=0;e<t.length;e++)a[t[e]]=s[e];const i=`vec2(${a.slice(-2).join()})`,o=`++${s[this.rank-1]} < ${n[this.rank-1]}`,u=`getChannel(getA(${a.join()}), ${i})`;this.userCode=`\\n    void main() {\\n      ${r} rc = getOutputCoords();\\n      vec4 result = vec4(0.);\\n      result[0] = ${u};\\n      if(${o}) {\\n        result[1] = ${u};\\n      }\\n      --${s[this.rank-1]};\\n      if(++${s[this.rank-2]} < ${n[this.rank-2]}) {\\n        result[2] = ${u};\\n        if(${o}) {\\n          result[3] = ${u};\\n        }\\n      }\\n      setOutput(result);\\n    }\\n    `}}function vz(e,t,n){const r=Xe().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new wz(e.shape,t):new xz(e.shape,t);return n.runWebGLProgram(r,[e],e.dtype)}function kz(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a,keepDims:i}=r;return function(e,t,n,r){const s=t,a=e.shape.length,i=we(s,e.shape);let o=i;const u=nh(o,a),l=null!=u;let c=e;l&&(c=vz(e,u,r),o=sh(o.length,a)),th("sum",o,a);const[h,d]=Qc(c.shape,o);let p=h;n&&(p=eh(h,i));const f=le(d),m=fz({inputs:{x:c},attrs:{shape:[le(e.shape)/f,f]},backend:r}),g=bz(m,Ia(e.dtype),"sum",r),y=fz({inputs:{x:g},attrs:{shape:p},backend:r});return r.disposeIntermediateTensorInfo(m),r.disposeIntermediateTensorInfo(g),l&&r.disposeIntermediateTensorInfo(c),y}(s,a,i,n)}const Iz={kernelName:Pr,backendName:"webgl",kernelFunc:kz};function Sz(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{perm:a}=r,i=n,o=s.shape.length,u=new Array(o);for(let e=0;e<u.length;e++)u[e]=s.shape[a[e]];let l;if(i.shouldExecuteOnCPU([s])){const e=i.texData.get(s.dataId).values,t=wL(e,s.shape,s.dtype,a,u);l=i.makeTensorInfo(u,s.dtype),i.texData.get(l.dataId).values=t}else l=vz(s,a,i);return l}const Nz={kernelName:os,backendName:"webgl",kernelFunc:Sz};function Tz({a:e,b:t,transposeA:n,transposeB:r,backend:s,bias:a=null,preluActivationWeights:i=null,leakyreluAlpha:o=0,activation:u=null}){const l=e.shape.length,c=t.shape.length,h=n?e.shape[l-2]:e.shape[l-1],d=r?t.shape[c-1]:t.shape[c-2],p=n?e.shape[l-1]:e.shape[l-2],f=r?t.shape[c-2]:t.shape[c-1],m=e.shape.slice(0,-2),g=t.shape.slice(0,-2),y=le(m),b=le(g),x=ru(e.shape.slice(0,-2),t.shape.slice(0,-2)).concat([p,f]);ie(h===d,()=>`Error in matMul: inner shapes (${h}) and (${d}) of Tensors with shapes ${e.shape} and ${t.shape} and transposeA=${n} and transposeB=${r} must match.`);const w=n?[y,h,p]:[y,p,h],v=r?[b,f,d]:[b,d,f],k=fz({inputs:{x:e},backend:s,attrs:{shape:w}}),I=fz({inputs:{x:t},backend:s,attrs:{shape:v}}),S=[k,I],N=Math.max(y,b),T=n?k.shape[1]:k.shape[2],E=null!=a,C=null!=i,$="leakyrelu"===u,A=null!=u?uz(u,!0):null;let R;if((1===p||1===f)&&T>1e3&&!1===(E||C||$||null!=A)){let e=k,t=I;n&&(e=Sz({inputs:{x:k},backend:s,attrs:{perm:[0,2,1]}}),S.push(e)),r&&(t=Sz({inputs:{x:I},backend:s,attrs:{perm:[0,2,1]}}),S.push(t));const a=1===f;let i=e;1!==f&&(i=fz({inputs:{x:e},backend:s,attrs:{shape:[N,T,1]}}),S.push(i));const o=1===f?2:1;let u=t;a&&(u=fz({inputs:{x:t},backend:s,attrs:{shape:[N,1,T]}}),S.push(u));const l=dz({inputs:{a:i,b:u},backend:s});R=kz({inputs:{x:l},backend:s,attrs:{axis:o,keepDims:!0}}),S.push(l)}else{const u=ka(e.dtype,t.dtype),l=new lz(w,v,[N,p,f],n,r,E,A,C,$),c=[k,I];if(null!=a&&c.push(a),C&&c.push(i),$){const e=s.makeTensorInfo([],"float32",qs(o,"float32"));c.push(e),S.push(e)}R=s.runWebGLProgram(l,c,u)}const _=fz({inputs:{x:R},backend:s,attrs:{shape:x}});S.push(R);for(const e of S)s.disposeIntermediateTensorInfo(e);return _}const Ez={kernelName:gs,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{a:s,b:a,bias:i,preluActivationWeights:o}=t,{transposeA:u,transposeB:l,activation:c,leakyreluAlpha:h}=r;return Tz({a:s,b:a,transposeA:u,transposeB:l,backend:n,bias:i,preluActivationWeights:o,leakyreluAlpha:h,activation:c})}},Cz="return abs(x);",$z={kernelName:et,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r}=t;if(n.shouldExecuteOnCPU([r])&&"complex64"!==r.dtype){const e=n.texData.get(r.dataId),t=iL(e.values);return n.makeTensorInfo(r.shape,r.dtype,t)}let s;return s=Xe().getBool("WEBGL_PACK_UNARY_OPERATIONS")?new OL(r.shape,Cz):new AL(r.shape,Cz),n.runWebGLProgram(s,[r],r.dtype)}},Az=iz({opSnippet:RL+"\\n  if (abs(x) > 1.) {\\n    return NAN;\\n  }\\n  return acos(x);\\n"}),Rz={kernelName:tt,backendName:"webgl",kernelFunc:Az},_z=iz({opSnippet:RL+"\\n  if (x < 1.0) return NAN;\\nreturn log(x + sqrt(x * x - 1.0));"}),Mz={kernelName:nt,backendName:"webgl",kernelFunc:_z},Fz="return a + b;",Dz=oz({opSnippet:Fz,packedOpSnippet:Fz,supportsComplex:!0,cpuKernelImpl:EO}),Oz={kernelName:rt,backendName:"webgl",kernelFunc:Dz};class Lz{constructor(e,t){this.outputShape=[],this.outputShape=e,this.variableNames=t.map((e,t)=>`T${t}`);const n=[];this.variableNames.forEach(e=>{n.push(`float v${e} = get${e}AtOutCoords();`)});const r=this.variableNames.map(e=>`v${e}`).join(" + ");this.userCode=`\\n      void main() {\\n        ${n.join("\\n        ")}\\n\\n        float result = ${r};\\n        setOutput(result);\\n      }\\n    `}}class zz{constructor(e,t){this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.variableNames=t.map((e,t)=>`T${t}`);const n=[];this.variableNames.forEach(e=>{n.push(`vec4 v${e} = get${e}AtOutCoords();`)});const r=this.variableNames.map(e=>`v${e}`).join(" + ");this.userCode=`\\n      void main() {\\n        ${n.join("\\n        ")}\\n\\n        vec4 result = ${r};\\n        setOutput(result);\\n      }\\n    `}}const Pz={kernelName:st,backendName:"webgl",kernelFunc:function e(t){const{inputs:n,backend:r}=t,s=n;if(1===s.length)return XL({inputs:{x:s[0]},backend:r});if(s.length>Xe().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER")){const t=Math.floor(s.length/2),n=e({inputs:s.slice(0,t),backend:r}),a=e({inputs:s.slice(t),backend:r});return e({inputs:[n,a],backend:r})}const a=s.map(e=>e.dtype).reduce((e,t)=>ka(e,t)),i=s.map(e=>e.shape),o=Xe().getBool("WEBGL_PACK")?new zz(s[0].shape,i):new Lz(s[0].shape,i);return r.runWebGLProgram(o,s,a)}},Bz={kernelName:at,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a,keepDims:i}=r,o=s.shape.length,u=we(a,s.shape);let l=u;const c=nh(l,o);let h=s;null!=c&&(h=Sz({inputs:{x:s},backend:n,attrs:{perm:c}}),l=sh(l.length,o)),th("all",l,o);const[d,p]=Qc(h.shape,l),f=fz({inputs:{x:h},backend:n,attrs:{shape:[-1,le(p)]}}),m=bz(f,f.dtype,"all",n);let g;return g=fz(i?{inputs:{x:m},backend:n,attrs:{shape:eh(d,u)}}:{inputs:{x:m},backend:n,attrs:{shape:d}}),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),null!=c&&n.disposeIntermediateTensorInfo(h),g}},Vz={kernelName:it,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a,keepDims:i}=r,o=s.shape.length,u=we(a,s.shape);let l=u;const c=nh(l,o);let h=s;null!=c&&(h=Sz({inputs:{x:s},backend:n,attrs:{perm:c}}),l=sh(l.length,o)),th("any",l,o);const[d,p]=Qc(h.shape,l),f=fz({inputs:{x:h},backend:n,attrs:{shape:[-1,le(p)]}}),m=bz(f,f.dtype,"any",n);let g;return g=fz(i?{inputs:{x:m},backend:n,attrs:{shape:eh(d,u)}}:{inputs:{x:m},backend:n,attrs:{shape:d}}),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),null!=c&&n.disposeIntermediateTensorInfo(h),g}};class Uz{constructor(e,t,n){this.variableNames=["A"];const{windowSize:r,batchSize:s,outSize:a}=e;n||this.variableNames.push("bestIndicesA"),this.outputShape=[s,a];const i="max"===t?">":"<",o=n?"inOffset + i;":"round(getBestIndicesA(batch, inOffset + i));";this.userCode=`\\n      void main() {\\n        ivec2 coords = getOutputCoords();\\n        int batch = coords[0];\\n        int outIdx = coords[1];\\n        int inOffset = outIdx * ${r};\\n\\n        int bestIndex = inOffset;\\n        float bestValue = getA(batch, bestIndex);\\n\\n        for (int i = 0; i < ${r}; i++) {\\n          int inIdx = ${o};\\n          float candidate = getA(batch, inIdx);\\n          if (candidate ${i} bestValue) {\\n            bestValue = candidate;\\n            bestIndex = inIdx;\\n          }\\n        }\\n        setOutput(float(bestIndex));\\n      }\\n    `}}class Wz{constructor(e,t,n,r){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,ie(e.length>2,()=>`Packed arg${n.charAt(0).toUpperCase()+n.slice(1)} supports only inputs with rank above 2.`);const s=e[e.length-1],a=Math.ceil(s/t);this.outputShape=e.slice(0,-1),a>1&&this.outputShape.push(a),r||this.variableNames.push("bestIndicesA");const i=this.outputShape,o=i.length,u=GD(o),l=IL("coords",o);let c,h;if(1===a){h=o+1;const e=GD(h);c=`\\n        ${e} sourceLocR = ${e}(${l.join()}, 0);\\n        ++${l[o-1]};\\n        ${e} sourceLocG = ${e}(${l.join()}, 0);\\n        ++${l[o-2]};\\n        ${e} sourceLocA = ${e}(${l.join()}, 0);\\n        --${l[o-1]};\\n        ${e} sourceLocB = ${e}(${l.join()}, 0);\\n        --${l[o-2]};`}else h=o,c=`\\n        ${u} sourceLocR = coords;\\n        ++${l[o-1]};\\n        ${u} sourceLocG = coords;\\n        ++${l[o-2]};\\n        ${u} sourceLocA = coords;\\n        --${l[o-1]};\\n        ${u} sourceLocB = coords;\\n        --${l[o-2]};`;const d=["x","y","z","w","u","v"].slice(0,h),p="."+d[h-1],f=d.map(e=>"int "+e),m=IL("sourceLocR",h-1).concat("inIdx.r"),g=IL("sourceLocG",h-1).concat("inIdx.g"),y=IL("sourceLocB",h-1).concat("inIdx.b"),b=IL("sourceLocA",h-1).concat("inIdx.a"),x="max"===n?"greaterThan":"lessThan",w=r?"":`\\n          inIdx = round(vec4(getBestIndicesAChannel(${m.join()}),\\n                             getBestIndicesAChannel(${g.join()}),\\n                             getBestIndicesAChannel(${y.join()}),\\n                             getBestIndicesAChannel(${b.join()})));`,v=`vec4(\\n            getAChannel(${m.join()}),\\n            hasNextCol ? getAChannel(${g.join()}) : 0.,\\n            hasNextRow ? getAChannel(${y.join()}) : 0.,\\n            hasNextRow && hasNextCol ? getAChannel(${b.join()}) : 0.)`,k=r?"":`\\n      float getBestIndicesAChannel(${f.join()}) {\\n        return getChannel(getBestIndicesA(${d.join()}),\\n                                          vec2(${d.slice(-2).join()}));\\n      }`;this.userCode=`\\n      float getAChannel(${f.join()}) {\\n        return getChannel(getA(${d.join()}),\\n                               vec2(${d.slice(-2).join()}));\\n      }\\n      ${k}\\n      void main() {\\n        ${u} coords = getOutputCoords();\\n        bool hasNextCol = ${l[o-1]} < ${i[o-1]-1};\\n        bool hasNextRow = ${l[o-2]} < ${i[o-2]-1};\\n        ${c}\\n        ivec4 srcIdx = ivec4(sourceLocR${p}, sourceLocG${p},\\n          sourceLocB${p}, sourceLocA${p}) * ${t};\\n        ivec4 inIdx = srcIdx;\\n        vec4 bestIndex = vec4(inIdx);\\n        vec4 bestValue = ${v};\\n\\n        for (int i = 0; i < ${t}; i++) {\\n          inIdx = srcIdx;\\n          ${w}\\n          vec4 candidate = ${v};\\n          bvec4 nan = isnan(candidate);\\n          bvec4 replace = bvec4(\\n            vec4(${x}(candidate, bestValue)) * (vec4(1.0) - vec4(nan)));\\n\\n          bestValue = vec4(replace.x  ? candidate.x : bestValue.x,\\n                           replace.y  ? candidate.y : bestValue.y,\\n                           replace.z  ? candidate.z : bestValue.z,\\n                           replace.w  ? candidate.w : bestValue.w);\\n          bestIndex = mix(bestIndex, vec4(inIdx), vec4(replace));\\n          srcIdx++;\\n        }\\n        setOutput(bestIndex);\\n      }\\n    `}}function Gz(e,t,n,r=null){let s=t.shape[0],a=t.shape[1];null!=r&&(s=r.shape[0],a=r.shape[1]);const i=Jf(a),o={windowSize:i,inSize:a,batchSize:s,outSize:Math.ceil(a/i)},u=new Uz(o,n,null==r),l=[t];null!=r&&l.push(r);const c=e.runWebGLProgram(u,l,"int32");if(1===c.shape[1])return c;const h=Gz(e,t,n,c);return e.disposeIntermediateTensorInfo(c),h}function Hz(e,t,n,r=null){const s=null!=r?r.shape:t.shape,a=Jf(s[s.length-1]),i=new Wz(s,a,n,null==r),o=null==r?[t]:[t,r],u=e.runWebGLProgram(i,o,"int32");if(u.shape.length===t.shape.length){const r=Hz(e,t,n,u);return e.disposeIntermediateTensorInfo(u),r}return u}function jz(e,t,n,r){const s=[n];if(th("arg"+r.charAt(0).toUpperCase()+r.slice(1),s,t.shape.length),!Xe().getBool("WEBGL_PACK_REDUCE")||t.shape.length<=2){const n=[],a=e.texData.get(t.dataId);let i=t;null!==a&&a.isPacked&&(i=e.unpackTensor(t),n.push(i));const[o,u]=Qc(i.shape,s),l=le(u),c=fz({inputs:{x:i},backend:e,attrs:{shape:[-1,l]}});n.push(c);const h=Gz(e,c,r);n.push(h);const d=fz({inputs:{x:h},backend:e,attrs:{shape:o}});return n.forEach(t=>e.disposeIntermediateTensorInfo(t)),d}return Hz(e,t,r)}const qz={kernelName:ot,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a}=r;let i=we(a,s.shape);const o=nh(i,s.shape.length);let u=s;const l=[];null!=o&&(u=Sz({inputs:{x:s},backend:n,attrs:{perm:o}}),l.push(u),i=sh(i.length,u.shape.length)),th("argMax",[i[0]],u.shape.length);const c=jz(n,u,i[0],"max");return l.forEach(e=>n.disposeIntermediateTensorInfo(e)),c}},Kz={kernelName:ut,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a}=r;let i=we(a,s.shape);const o=nh(i,s.shape.length);let u=s;const l=[];null!=o&&(u=Sz({inputs:{x:s},backend:n,attrs:{perm:o}}),l.push(u),i=sh(i.length,u.shape.length)),th("argMin",[i[0]],u.shape.length);const c=jz(n,u,i[0],"min");return l.forEach(e=>n.disposeIntermediateTensorInfo(e)),c}},Xz=iz({opSnippet:RL+"\\n  if (abs(x) > 1.) {\\n    return NAN;\\n  }\\n  return asin(x);\\n"}),Yz={kernelName:lt,backendName:"webgl",kernelFunc:Xz},Jz=iz({opSnippet:RL+"return log(x + sqrt(x * x + 1.0));"}),Zz={kernelName:ct,backendName:"webgl",kernelFunc:Jz},Qz=iz({opSnippet:RL+"\\n  return atan(x);\\n"}),eP={kernelName:ht,backendName:"webgl",kernelFunc:Qz},tP=oz({opSnippet:HL+"\\n  return atan(a, b);\\n",packedOpSnippet:"\\n  vec4 result = atan(a, b);\\n  bvec4 isNaNA = isnan(a);\\n  bvec4 isNaNB = isnan(b);\\n  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);\\n  "+qL+"\\n  return result;\\n"}),nP={kernelName:pt,backendName:"webgl",kernelFunc:tP},rP=iz({opSnippet:RL+"\\n  if ((x < -1.0) || (x > 1.0)) return NAN;\\nreturn (log(1.0 + x) - log(1.0 - x)) / 2.0;"}),sP={kernelName:dt,backendName:"webgl",kernelFunc:rP};class aP{constructor(e,t,n,r=!1,s=!1){if(this.variableNames=["x"],"avg"===t&&n)throw new Error("Cannot compute positions for average pool.");const a=e.filterWidth,i=e.strideHeight,o=e.strideWidth,u=e.dilationHeight,l=e.dilationWidth,c=e.effectiveFilterHeight,h=e.effectiveFilterWidth,d=e.padInfo.top,p=e.padInfo.left;this.outputShape=e.outShape;const f="avg"===t,m=`((batch  * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + d`,g=`(xR * ${e.inWidth} + xC) * ${e.inChannels} + d`;let y="0.0";if(f||(y="-1.0 / 1e-20"),n){const t=">=";return void(this.userCode=`\\n        const ivec2 strides = ivec2(${i}, ${o});\\n        const ivec2 pads = ivec2(${d}, ${p});\\n\\n        void main() {\\n          ivec4 coords = getOutputCoords();\\n          int batch = coords[0];\\n          int d = coords[3];\\n\\n          ivec2 xRCCorner = coords.yz * strides - pads;\\n          int xRCorner = xRCCorner.x;\\n          int xCCorner = xRCCorner.y;\\n\\n          // max/min x(?, ?, d) to get y(yR, yC, d).\\n          // ? = to be determined\\n          float minMaxValue = 0.0;\\n          float minMaxValueFound = 0.0;\\n          int minMaxPosition = 0;\\n          float avgValue = 0.0;\\n\\n          for (int wR = 0; wR < ${c};\\n              wR += ${u}) {\\n            int xR = xRCorner + wR;\\n\\n            if (xR < 0 || xR >= ${e.inHeight}) {\\n              continue;\\n            }\\n\\n            for (int wC = 0; wC < ${h};\\n                wC += ${l}) {\\n              int xC = xCCorner + wC;\\n\\n              if (xC < 0 || xC >= ${e.inWidth}) {\\n                continue;\\n              }\\n\\n              float value = getX(batch, xR, xC, d);\\n\\n              // If a min / max value has already been found, use it. If not,\\n              // use the current value.\\n              float currMinMaxValue = mix(\\n                  value, minMaxValue, minMaxValueFound);\\n              if (value ${t} currMinMaxValue) {\\n                minMaxValue = value;\\n                minMaxValueFound = 1.0;\\n                minMaxPosition = ${r?s?m:g:`wR * ${h} + wC`};\\n              }\\n            }\\n          }\\n          setOutput(float(minMaxPosition));\\n        }\\n      `)}let b=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"avg"===t&&(b="avgValue / max(count, 1.0)");const x=4*Math.floor(a/4),w=a%4,v=`\\n      if (${f}) {\\n        avgValue += dot(values, ones);\\n      } else {\\n        minMaxValue = max(values, minMaxValue);\\n      }\\n    `;this.userCode=`\\n      const ivec2 strides = ivec2(${i}, ${o});\\n      const ivec2 pads = ivec2(${d}, ${p});\\n      const float initializationValue = ${y};\\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\\n\\n      float count = 0.0;\\n\\n      float getValue(int batch, int xR, int xC, int d) {\\n        if (xC < 0 || xC >= ${e.inWidth}) {\\n          return initializationValue;\\n        }\\n        count += 1.0;\\n        return getX(batch, xR, xC, d);\\n      }\\n\\n      void main() {\\n        ivec4 coords = getOutputCoords();\\n        int batch = coords[0];\\n        int d = coords[3];\\n\\n        ivec2 xRCCorner = coords.yz * strides - pads;\\n        int xRCorner = xRCCorner.x;\\n        int xCCorner = xRCCorner.y;\\n\\n        // max/min x(?, ?, d) to get y(yR, yC, d).\\n        // ? = to be determined\\n        vec4 minMaxValue = vec4(${y});\\n        float avgValue = 0.0;\\n        count = 0.0;\\n\\n        for (int wR = 0; wR < ${c};\\n            wR += ${u}) {\\n          int xR = xRCorner + wR;\\n\\n          if (xR < 0 || xR >= ${e.inHeight}) {\\n            continue;\\n          }\\n\\n          for (int wC = 0; wC < ${x}; wC += 4) {\\n            int xC = xCCorner + wC * ${l};\\n\\n            vec4 values = vec4(\\n              getValue(batch, xR, xC, d),\\n              getValue(batch, xR, xC + ${l}, d),\\n              getValue(batch, xR, xC + 2 * ${l}, d),\\n              getValue(batch, xR, xC + 3 * ${l}, d)\\n            );\\n\\n            ${v}\\n          }\\n\\n          int xC = xCCorner + ${x};\\n          if (${1===w}) {\\n            vec4 values = vec4(\\n              getValue(batch, xR, xC, d),\\n              initializationValue,\\n              initializationValue,\\n              initializationValue\\n            );\\n\\n            ${v}\\n          } else if (${2===w}) {\\n            vec4 values = vec4(\\n              getValue(batch, xR, xC, d),\\n              getValue(batch, xR, xC + ${l}, d),\\n              initializationValue,\\n              initializationValue\\n            );\\n\\n            ${v}\\n          } else if (${3===w}) {\\n            vec4 values = vec4(\\n              getValue(batch, xR, xC, d),\\n              getValue(batch, xR, xC + ${l}, d),\\n              getValue(batch, xR, xC + 2 * ${l}, d),\\n              initializationValue\\n            );\\n\\n            ${v}\\n          }\\n        }\\n        setOutput(${b});\\n      }\\n    `}}class iP{constructor(e,t,n,r=!1,s=!1){if(this.variableNames=["x"],"avg"===t&&n)throw new Error("Cannot compute positions for average pool.");const a=e.filterWidth,i=e.strideDepth,o=e.strideHeight,u=e.strideWidth,l=e.dilationDepth,c=e.dilationHeight,h=e.dilationWidth,d=e.effectiveFilterDepth,p=e.effectiveFilterHeight,f=e.effectiveFilterWidth,m=e.padInfo.front,g=e.padInfo.top,y=e.padInfo.left;this.outputShape=e.outShape;const b="avg"===t;let x="0.0";if(b||(x="-1.0 / 1e-20"),n){const t=">=";return void(this.userCode=`\\n        const ivec3 strides =\\n            ivec3(${i}, ${o}, ${u});\\n        const ivec3 pads = ivec3(${m}, ${g}, ${y});\\n\\n        void main() {\\n          ivec5 coords = getOutputCoords();\\n          int batch = coords.x;\\n          int ch = coords.u;\\n\\n          ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\\n          int xDCorner = xCorner.x;\\n          int xRCorner = xCorner.y;\\n          int xCCorner = xCorner.z;\\n\\n          // max/min x(?, ?, ?, ch) to get y(yD, yR, yC, ch).\\n          // ? = to be determined\\n          float minMaxValue = 0.0;\\n          float minMaxValueFound = 0.0;\\n          int minMaxPosition = 0;\\n\\n          for (int wD = 0; wD < ${d};\\n              wD += ${l}) {\\n            int xD = xDCorner + wD;\\n\\n            if (xD < 0 || xD >= ${e.inDepth}) {\\n              continue;\\n            }\\n\\n            for (int wR = 0; wR < ${p};\\n                wR += ${c}) {\\n              int xR = xRCorner + wR;\\n\\n              if (xR < 0 || xR >= ${e.inHeight}) {\\n                continue;\\n              }\\n\\n              for (int wC = 0; wC < ${f};\\n                  wC += ${h}) {\\n                int xC = xCCorner + wC;\\n\\n                if (xC < 0 || xC >= ${e.inWidth}) {\\n                  continue;\\n                }\\n\\n                float value = getX(batch, xD, xR, xC, ch);\\n\\n                // If a min / max value has already been found, use it. If not,\\n                // use the current value.\\n                float currMinMaxValue = mix(\\n                    value, minMaxValue, minMaxValueFound);\\n                if (value ${t} currMinMaxValue) {\\n                  minMaxValue = value;\\n                  minMaxValueFound = 1.0;\\n                  minMaxPosition = ${r?s?`(((batch * ${e.inDepth} + xD) * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`((xD * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`wD * ${p} * ${f} +\\n                      wR * ${f} + wC`};\\n                }\\n              }\\n            }\\n          }\\n          setOutput(float(minMaxPosition));\\n        }\\n      `)}let w=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"avg"===t&&(w="avgValue / max(count, 1.0)");const v=4*Math.floor(a/4),k=a%4,I=`\\n      if (${b}) {\\n        avgValue += dot(values, ones);\\n      } else {\\n        minMaxValue = max(values, minMaxValue);\\n      }\\n    `;this.userCode=`\\n      const ivec3 strides =\\n        ivec3(${i}, ${o}, ${u});\\n      const ivec3 pads = ivec3(${m}, ${g}, ${y});\\n      const float initializationValue = ${x};\\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\\n\\n      float count = 0.0;\\n\\n      float getValue(int batch, int xD, int xR, int xC, int ch) {\\n        if (xC < 0 || xC >= ${e.inWidth}) {\\n          return initializationValue;\\n        }\\n        count += 1.0;\\n        return getX(batch, xD, xR, xC, ch);\\n      }\\n\\n      void main() {\\n        ivec5 coords = getOutputCoords();\\n        int batch = coords.x;\\n        int ch = coords.u;\\n\\n        ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\\n        int xDCorner = xCorner.x;\\n        int xRCorner = xCorner.y;\\n        int xCCorner = xCorner.z;\\n\\n        // max/min x(?, ?, ?, d) to get y(yD, yR, yC, ch).\\n        // ? = to be determined\\n        vec4 minMaxValue = vec4(${x});\\n        float avgValue = 0.0;\\n        count = 0.0;\\n\\n        for (int wD = 0; wD < ${d};\\n            wD += ${l}) {\\n          int xD = xDCorner + wD;\\n\\n          if (xD < 0 || xD >= ${e.inDepth}) {\\n            continue;\\n          }\\n\\n          for (int wR = 0; wR < ${p};\\n            wR += ${c}) {\\n            int xR = xRCorner + wR;\\n\\n            if (xR < 0 || xR >= ${e.inHeight}) {\\n              continue;\\n            }\\n\\n            for (int wC = 0; wC < ${v}; wC += 4) {\\n              int xC = xCCorner + wC * ${h};\\n\\n              vec4 values = vec4(\\n                getValue(batch, xD, xR, xC, ch),\\n                getValue(batch, xD, xR, xC + ${h}, ch),\\n                getValue(batch, xD, xR, xC + 2 * ${h}, ch),\\n                getValue(batch, xD, xR, xC + 3 * ${h}, ch)\\n              );\\n\\n              ${I}\\n            }\\n\\n            int xC = xCCorner + ${v};\\n            if (${1===k}) {\\n              vec4 values = vec4(\\n                getValue(batch, xD, xR, xC, ch),\\n                initializationValue,\\n                initializationValue,\\n                initializationValue\\n              );\\n\\n              ${I}\\n            } else if (${2===k}) {\\n              vec4 values = vec4(\\n                getValue(batch, xD, xR, xC, ch),\\n                getValue(batch, xD, xR, xC + ${h}, ch),\\n                initializationValue,\\n                initializationValue\\n              );\\n\\n              ${I}\\n            } else if (${3===k}) {\\n              vec4 values = vec4(\\n                getValue(batch, xD, xR, xC, ch),\\n                getValue(batch, xD, xR, xC + ${h}, ch),\\n                getValue(batch, xD, xR, xC + 2 * ${h}, ch),\\n                initializationValue\\n              );\\n\\n              ${I}\\n            }\\n          }\\n        }\\n        setOutput(${w});\\n      }\\n    `}}const oP={kernelName:ft,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t;ED(s,"avgPool");const{filterSize:a,strides:i,pad:o,dimRoundingMode:u}=r;ie(ec(i,1),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${i} and dilations \'1\'`);const l=Gl(s.shape,a,i,1,o,u);if(1===l.filterWidth&&1===l.filterHeight&&de(l.inShape,l.outShape))return XL({inputs:{x:s},backend:n});const c=new aP(l,"avg",!1);return n.runWebGLProgram(c,[s],"float32")}},uP={kernelName:gt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{filterSize:a,strides:i,pad:o,dimRoundingMode:u,dataFormat:l}=r,c=Hl(s.shape,a,i,[1,1,1],o,u,l),h=new iP(c,"avg",!1);return n.runWebGLProgram(h,[s],"float32")}};class lP{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;const t=e.filterHeight,n=e.filterWidth,r=e.strideHeight,s=e.strideWidth,a=e.dilationHeight,i=e.dilationWidth,o=e.effectiveFilterHeight,u=e.effectiveFilterWidth,l=o-1-e.padInfo.top,c=u-1-e.padInfo.left,h=1/(t*n);this.userCode=`\\n      const ivec2 pads = ivec2(${l}, ${c});\\n      const float avgMultiplier = float(${h});\\n\\n      void main() {\\n        ivec4 coords = getOutputCoords();\\n        int b = coords[0];\\n        int d = coords[3];\\n\\n        ivec2 dyRCCorner = coords.yz - pads;\\n        int dyRCorner = dyRCCorner.x;\\n        int dyCCorner = dyRCCorner.y;\\n\\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\\n        // ? = to be determined. : = across all values in that axis.\\n        float dotProd = 0.0;\\n        for (int wR = 0; wR < ${o};\\n            wR += ${a}) {\\n          float dyR = float(dyRCorner + wR) / ${r}.0;\\n\\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\\n            continue;\\n          }\\n          int idyR = int(dyR);\\n\\n          for (int wC = 0; wC < ${u};\\n            wC+= ${i}) {\\n            float dyC = float(dyCCorner + wC) / ${s}.0;\\n\\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\\n                fract(dyC) > 0.0) {\\n              continue;\\n            }\\n            int idyC = int(dyC);\\n\\n            float dyValue = getDy(b, idyR, idyC, d);\\n\\n            dotProd += dyValue * avgMultiplier;\\n          }\\n        }\\n        setOutput(dotProd);\\n      }\\n    `}}class cP{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;const t=e.filterDepth,n=e.filterHeight,r=e.filterWidth,s=e.strideDepth,a=e.strideHeight,i=e.strideWidth,o=e.dilationDepth,u=e.dilationHeight,l=e.dilationWidth,c=e.effectiveFilterDepth,h=e.effectiveFilterHeight,d=e.effectiveFilterWidth,p=c-1-e.padInfo.front,f=h-1-e.padInfo.top,m=d-1-e.padInfo.left,g=1/(t*n*r);this.userCode=`\\n      const ivec3 pads = ivec3(${p}, ${f}, ${m});\\n      const float avgMultiplier = float(${g});\\n\\n      void main() {\\n        ivec5 coords = getOutputCoords();\\n        int batch = coords.x;\\n        int ch = coords.u;\\n\\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\\n        int dyDCorner = dyCorner.x;\\n        int dyRCorner = dyCorner.y;\\n        int dyCCorner = dyCorner.z;\\n\\n        // Convolve dy(?, ?, ?, d) with pos mask(:, :, :, ch) to get\\n        // dx(xD, xR, xC, ch).\\n        // ? = to be determined. : = across all values in that axis.\\n        float dotProd = 0.0;\\n\\n        for (int wD = 0; wD < ${c};\\n            wD += ${o}) {\\n          float dyD = float(dyDCorner + wD) / ${s}.0;\\n\\n          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {\\n            continue;\\n          }\\n          int idyD = int(dyD);\\n\\n          for (int wR = 0; wR < ${h};\\n              wR += ${u}) {\\n            float dyR = float(dyRCorner + wR) / ${a}.0;\\n\\n            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||\\n                fract(dyR) > 0.0) {\\n              continue;\\n            }\\n            int idyR = int(dyR);\\n\\n            for (int wC = 0; wC < ${d};\\n                wC += ${l}) {\\n              float dyC = float(dyCCorner + wC) / ${i}.0;\\n\\n              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\\n                  fract(dyC) > 0.0) {\\n                continue;\\n              }\\n              int idyC = int(dyC);\\n\\n              float dyValue = getDy(batch, idyD, idyR, idyC, ch);\\n\\n              dotProd += dyValue * avgMultiplier;\\n            }\\n          }\\n        }\\n        setOutput(dotProd);\\n      }\\n    `}}const hP={kernelName:yt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,input:a}=t,i=a,{filterSize:o,strides:u,pad:l,dimRoundingMode:c}=r,h=Hl(i.shape,o,u,[1,1,1],l,c),d=new cP(h);return n.runWebGLProgram(d,[s],i.dtype)}},dP={kernelName:mt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,input:a}=t,i=a;ED([s,a],"avgPoolGrad");const{filterSize:o,strides:u,pad:l}=r,c=Gl(i.shape,o,u,1,l),h=new lP(c);return n.runWebGLProgram(h,[s],i.dtype)}},pP={kernelName:bt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{a:s,b:a}=t,{transposeA:i,transposeB:o}=r;return Tz({a:s,b:a,transposeA:i,transposeB:o,backend:n})}};class fP{constructor(e,t,n,r,s,a){this.outputShape=[],this.variableNames=["x","mean","variance"],ru(e,t),ru(e,n);let i="0.0";null!=r&&(ru(e,r),this.variableNames.push("offset"),i="getOffsetAtOutCoords()");let o="1.0";null!=s&&(ru(e,s),this.variableNames.push("scale"),o="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`\\n      void main() {\\n        float x = getXAtOutCoords();\\n        float mean = getMeanAtOutCoords();\\n        float variance = getVarianceAtOutCoords();\\n        float offset = ${i};\\n        float scale = ${o};\\n        float inv = scale * inversesqrt(variance + float(${a}));\\n        setOutput(dot(vec3(x, -mean, offset), vec3(inv, inv, 1)));\\n      }\\n    `}}class mP{constructor(e,t,n,r,s,a){this.packedInputs=!0,this.packedOutput=!0,this.variableNames=["x","mean","variance"],ru(e,t),ru(e,n);let i="vec4(0.0)";null!=r&&(ru(e,r),this.variableNames.push("offset"),i="getOffsetAtOutCoords()");let o="vec4(1.0)";null!=s&&(ru(e,s),this.variableNames.push("scale"),o="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`\\n      void main() {\\n        vec4 offset = ${i};\\n        vec4 scale = ${o};\\n\\n        vec4 x = getXAtOutCoords();\\n        vec4 mean = getMeanAtOutCoords();\\n        vec4 variance = getVarianceAtOutCoords();\\n\\n        vec4 inv = scale * inversesqrt(variance + vec4(${a}));\\n\\n        setOutput((x - mean) * inv + offset);\\n      }\\n    `}}const gP={kernelName:dn,backendName:"webgl",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:r,mean:s,variance:a,offset:i,scale:o}=e;ie(s.shape.length===a.shape.length,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),ie(null==i||s.shape.length===i.shape.length,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),ie(null==o||s.shape.length===o.shape.length,()=>"Batch normalization gradient requires mean and scale to have equal ranks.");let{varianceEpsilon:u}=n;null==u&&(u=.001);const l=[r,s,a];let c=null;null!=i&&(c=i.shape,l.push(i));let h=null;null!=o&&(h=o.shape,l.push(o));const d=Xe().getBool("WEBGL_PACK_NORMALIZATION")?new mP(r.shape,s.shape,a.shape,c,h,u):new fP(r.shape,s.shape,a.shape,c,h,u);return t.runWebGLProgram(d,l,l[0].dtype)}};class yP{constructor(e){this.variableNames=["source"],this.outputShape=e,this.rank=e.length;const t=GD(this.rank);this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];const n=function(e){if(1===e)return"sourceLoc";if(e<=6)return bP.slice(0,e).map(e=>"sourceLoc."+e).join(",");throw Error(`Slicing for rank ${e} is not yet supported`)}(this.rank);let r;r=`\\n        ${t} sourceLoc;\\n        ${t} coords = getOutputCoords();\\n        ${e.map((e,t)=>`sourceLoc.${bP[t]} = start[${t}] + coords.${bP[t]};`).join("\\n")}\\n      `,this.userCode=`\\n      void main() {\\n        ${r}\\n        setOutput(getSource(${n}));\\n      }\\n    `}}const bP=["x","y","z","w","u","v"];class xP{constructor(e){this.variableNames=["source"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.rank=e.length,this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];const t=GD(this.rank),n=IL("coords",this.rank),r=IL("sourceLoc",this.rank),s=1===this.rank?"sourceLoc":`vec2(${r.slice(-2).join()})`,a=`getChannel(getSource(${r.join()}), ${s})`,i=`\\n      result.x = ${a};\\n      if (++${n[this.rank-1]} < ${e[this.rank-1]}) {\\n        ++${r[this.rank-1]};\\n        result.y = ${a};\\n        --${r[this.rank-1]};\\n      }\\n    `,o=1===this.rank?"":`\\n      --${n[this.rank-1]};\\n      if (++${n[this.rank-2]} < ${e[this.rank-2]}) {\\n        ++${r[this.rank-2]};\\n        result.z = ${a};\\n        if (++${n[this.rank-1]} < ${e[this.rank-1]}) {\\n          ++${r[this.rank-1]};\\n          result.w = ${a};\\n        }\\n      }\\n    `,u=this.rank<=4?`sourceLoc = coords +\\n            ${t}(${e.map((e,t)=>`start[${t}]`).join()});`:e.map((e,t)=>`${r[t]} = ${n[t]} + start[${t}];`).join("\\n");this.userCode=`\\n      void main() {\\n        ${t} coords = getOutputCoords();\\n        ${t} sourceLoc;\\n        ${u}\\n        vec4 result = vec4(0.);\\n        ${i}\\n        ${o}\\n        setOutput(result);\\n      }\\n    `}}function wP(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{begin:a,size:i}=r,[o,u]=dl(s,a,i);if(Zu(s,o,u),0===le(u))return n.makeTensorInfo(u,s.dtype,[]);if(n.shouldExecuteOnCPU([s])||"string"===s.dtype){const e=n.texData.get(s.dataId),t=oL(e.values,o,u,s.shape,s.dtype);return n.makeTensorInfo(u,s.dtype,t)}const{isPacked:l}=n.texData.get(s.dataId),c=cl(s.shape,o,u);if(l||!c){const e=Xe().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new xP(u):new yP(u),t=[o];return n.runWebGLProgram(e,[s],s.dtype,t)}return n.uploadToGPU(s.dataId),function(e,t,n,r){const s=r.texData.get(e.dataId),a=r.makeTensorInfo(n,e.dtype),i=r.texData.get(a.dataId);Object.assign(i,s),i.refCount=1,i.shape=n,i.dtype=e.dtype;let o=hl(t,De(e.shape));s.slice&&(o+=s.slice.flatOffset),i.slice={flatOffset:o,origDataId:s.slice&&s.slice.origDataId||e.dataId};const u=r.dataRefCount.get(i.slice.origDataId)||1;return r.dataRefCount.set(i.slice.origDataId,u+1),a}(s,o,u,n)}const vP={kernelName:_r,backendName:"webgl",kernelFunc:wP},kP={kernelName:xt,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{blockShape:a,crops:i}=r;ie(s.shape.length<=4,()=>"batchToSpaceND for rank > 4 with a WebGL backend not implemented yet");const o=a.reduce((e,t)=>e*t),u=Qf(s.shape,a,o),l=em(u.length,a.length),c=tm(s.shape,a,o),h=nm(i,a.length),d=rm(c,i,a.length),p=[],f=fz({inputs:{x:s},backend:n,attrs:{shape:u}}),m=Sz({inputs:{x:f},backend:n,attrs:{perm:l}}),g=fz({inputs:{x:m},backend:n,attrs:{shape:c}}),y=wP({inputs:{x:g},backend:n,attrs:{begin:h,size:d}});return p.push(f),p.push(m),p.push(g),p.forEach(e=>n.disposeIntermediateTensorInfo(e)),y}},IP={kernelName:wt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,weights:a}=t,{size:i}=r,o=n.readSync(s.dataId),u=n.readSync(a.dataId),l=CO(o,u,a.dtype,a.shape,i);return n.makeTensorInfo([i],a.dtype,l)}},SP={kernelName:vt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{a:r,b:s}=t,a=Xe().getBool("WEBGL_PACK_BINARY_OPERATIONS"),i=Xe().getNumber("WEBGL_VERSION");if(n.shouldExecuteOnCPU([r,s])||1===i){const e=n.texData.get(r.dataId).values,t=n.texData.get(s.dataId).values,[a,i]=AO(r.shape,s.shape,e,t,r.dtype),o=n.makeTensorInfo(i,r.dtype);return n.texData.get(o.dataId).values=a,o}let o;return o=a?new KL("\\n  int r = int(a.r) & int(b.r);\\n  int g = int(a.g) & int(b.g);\\n  int rb = int(a.b) & int(b.b);\\n  int ra = int(a.a) & int(b.a);\\n  return vec4(r, g, rb, ra);\\n",r.shape,s.shape,!1):new jL("\\n  return float(int(a.r) & int(b.r));\\n",r.shape,s.shape),n.runWebGLProgram(o,[r,s],r.dtype)}},NP={kernelName:It,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{s0:r,s1:s}=t,a=n.readSync(r.dataId),i=n.readSync(s.dataId),o=ru(Array.from(a),Array.from(i));return n.makeTensorInfo([o.length],"int32",Int32Array.from(o))}},TP=oz({opSnippet:"return float(a != b);",cpuKernelImpl:JO,dtype:"bool"}),EP={kernelName:Qn,backendName:"webgl",kernelFunc:TP};function CP(e){const{inputs:t,backend:n}=e,{input:r}=t;return XL({inputs:{x:n.texData.get(r.dataId).complexTensorInfos.real},backend:n})}const $P={kernelName:mr,backendName:"webgl",kernelFunc:CP},AP={kernelName:St,backendName:"webgl",kernelFunc:function e(t){const{inputs:n,backend:r,attrs:s}=t,{x:a}=n,{dtype:i}=s;if("complex64"===i){if("complex64"===a.dtype)return XL({inputs:{x:a},backend:r});const t=Hh(a.shape),n=e({inputs:{x:a},backend:r,attrs:{dtype:"float32"}}),s=JL({inputs:{real:n,imag:t},backend:r});return t.dispose(),r.disposeIntermediateTensorInfo(n),s}if("complex64"===a.dtype){const t=CP({inputs:{input:a},backend:r}),n=e({inputs:{x:t},backend:r,attrs:{dtype:i}});return r.disposeIntermediateTensorInfo(t),n}if(!Te(a.dtype,i)){const e=XL({inputs:{x:a},backend:r});return{dataId:e.dataId,shape:e.shape,dtype:i}}if(r.shouldExecuteOnCPU([a])){const e=r.texData.get(a.dataId).values,[t,n,s]=RO(e,a.shape,a.dtype,i);return r.makeTensorInfo(t,n,s)}if("int32"===i)return function(e,t){const n=new AL(e.shape,"return float(int(x));"),r=t.runWebGLProgram(n,[e],"int32");return{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}(a,r);if("bool"===i){const e=r.makeTensorInfo([],"bool",ke("bool",1)),t=TP({inputs:{a,b:e},backend:r});return r.disposeIntermediateTensorInfo(e),t}throw new Error(`Error in Cast: failed to cast ${a.dtype} to ${i}`)}},RP="return ceil(x);",_P=iz({opSnippet:RP,packedOpSnippet:RP,cpuKernelImpl:_O}),MP={kernelName:Nt,backendName:"webgl",kernelFunc:_P};class FP{constructor(e){this.variableNames=["A"],this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=e,this.userCode="\\n\\n      void main() {\\n        float value = getAAtOutCoords();\\n        if (isnan(value)) {\\n          setOutput(value);\\n          return;\\n        }\\n\\n        setOutput(clamp(value, minVal, maxVal));\\n      }\\n    "}}class DP{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=e,this.userCode="\\n      void main() {\\n        vec4 value = getAAtOutCoords();\\n\\n        if (any(isnan(value))) {\\n          setOutput(value);\\n          return;\\n        }\\n\\n        setOutput(clamp(value, vec4(minVal), vec4(maxVal)));\\n      }\\n    "}}const OP={kernelName:Tt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{clipValueMin:a,clipValueMax:i}=r;let o;o=Xe().getBool("WEBGL_PACK_CLIP")?new DP(s.shape):new FP(s.shape);const u=[[a],[i]];return n.runWebGLProgram(o,[s],s.dtype,u)}};class LP{constructor(e){this.variableNames=["real","imag"],this.outputShape=e,this.userCode="\\n      void main() {\\n        float re = abs(getRealAtOutCoords());\\n        float im = abs(getImagAtOutCoords());\\n        float mx = max(re, im);\\n\\n        // sadly the length function in glsl is not underflow-safe\\n        // (at least not on Intel GPUs). So the safe solution is\\n        // to ensure underflow-safety in all cases.\\n        setOutput(\\n          mx == 0.0 ? 0.0 : mx * length(vec2(1, min(re, im)/mx))\\n        );\\n      }\\n    "}}function zP(e,t){return{dataId:t.dataId,dtype:t.dtype,shape:e.shape}}const PP={kernelName:Ct,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r}=t,s=n.texData.get(r.dataId),a=new LP(r.shape),i=[zP(r,s.complexTensorInfos.real),zP(r,s.complexTensorInfos.imag)];return n.runWebGLProgram(a,i,i[0].dtype)}};class BP{constructor(e){this.outputShape=[],this.outputShape=Gf(e,1),this.variableNames=e.map((e,t)=>`T${t}`);const t=new Array(e.length-1);t[0]=e[0][1];for(let n=1;n<t.length;n++)t[n]=t[n-1]+e[n][1];const n=[`if (yC < ${t[0]}) setOutput(getT0(yR, yC));`];for(let e=1;e<t.length;e++){const r=t[e-1];n.push(`else if (yC < ${t[e]}) setOutput(getT${e}(yR, yC-${r}));`)}const r=t.length,s=t[t.length-1];n.push(`else setOutput(getT${r}(yR, yC-${s}));`),this.userCode=`\\n      void main() {\\n        ivec2 coords = getOutputCoords();\\n        int yR = coords.x;\\n        int yC = coords.y;\\n\\n        ${n.join("\\n        ")}\\n      }\\n    `}}class VP{constructor(e,t){this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[],this.outputShape=Gf(e,t);const n=this.outputShape,r=n.length,s=GD(r),a=IL("coords",r),i=["x","y","z","w","u","v"].slice(0,r);this.variableNames=e.map((e,t)=>`T${t}`);const o=new Array(e.length-1);o[0]=e[0][t];for(let n=1;n<o.length;n++)o[n]=o[n-1]+e[n][t];const u=i[t],l=i.slice(-2),c=i.join();let h=`if (${u} < ${o[0]}) {\\n        return getChannel(\\n            getT0(${c}), vec2(${l.join()}));\\n        }`;for(let e=1;e<o.length;e++){const t=o[e-1];h+=`\\n        if (${u} < ${o[e]}  && ${u} >= ${o[e-1]}) {\\n          return getChannel(\\n            getT${e}(${UP(i,u,t)}),\\n            vec2(${UP(l,u,t)}));\\n        }`}const d=o.length,p=o[o.length-1];h+=`\\n        return getChannel(\\n          getT${d}(${UP(i,u,p)}),\\n          vec2(${UP(l,u,p)}));`,this.userCode=`\\n      float getValue(${i.map(e=>"int "+e)}) {\\n        ${h}\\n      }\\n\\n      void main() {\\n        ${s} coords = getOutputCoords();\\n        vec4 result = vec4(getValue(${a}), 0., 0., 0.);\\n\\n        ${a[r-1]} = ${a[r-1]} + 1;\\n        if (${a[r-1]} < ${n[r-1]}) {\\n          result.g = getValue(${a});\\n        }\\n\\n        ${a[r-2]} = ${a[r-2]} + 1;\\n        if (${a[r-2]} < ${n[r-2]}) {\\n          result.a = getValue(${a});\\n        }\\n\\n        ${a[r-1]} = ${a[r-1]} - 1;\\n        if (${a[r-2]} < ${n[r-2]} &&\\n            ${a[r-1]} < ${n[r-1]}) {\\n          result.b = getValue(${a});\\n        }\\n        setOutput(result);\\n      }\\n    `}}function UP(e,t,n){const r=e.indexOf(t);return e.map((e,t)=>t===r?`${e} - ${n}`:e).join()}function WP(e){const{inputs:t,backend:n}=e,{input:r}=t;return XL({inputs:{x:n.texData.get(r.dataId).complexTensorInfos.imag},backend:n})}const GP={kernelName:xn,backendName:"webgl",kernelFunc:WP};function HP(e,t,n){const r=e[0].dtype;if("complex64"===r){const r=e.map(e=>CP({inputs:{input:e},backend:n})),s=e.map(e=>WP({inputs:{input:e},backend:n})),a=HP(r,t,n),i=HP(s,t,n),o=JL({inputs:{real:a,imag:i},backend:n});return r.forEach(e=>n.disposeIntermediateTensorInfo(e)),s.forEach(e=>n.disposeIntermediateTensorInfo(e)),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(i),o}let s=n.shouldExecuteOnCPU(e);if("string"===r&&(s=!0),s){const s=e.map(e=>{const r=le(e.shape.slice(t));return fz({inputs:{x:e},backend:n,attrs:{shape:[-1,r]}})}),a=s.map(e=>({vals:n.readSync(e.dataId),shape:e.shape})),i=Gf(s.map(e=>e.shape),1),o=1===s[0].shape[0],u=MO(a,i,r,o),l=Gf(e.map(e=>e.shape),t),c=n.makeTensorInfo(l,r,u);return s.forEach(e=>n.disposeIntermediateTensorInfo(e)),c}const a=e.filter(e=>le(e.shape)>0),i=Xe().getBool("WEBGL_PACK_ARRAY_OPERATIONS")&&a[0].shape.length>1;if(1===a.length){const t=i?new AL(e[0].shape,DL):new OL(e[0].shape,DL);return n.runWebGLProgram(t,e,r)}const o=Xe().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER");if(a.length>o){const e=[];for(let r=0;r<a.length;r+=o){const s=a.slice(r,r+o);e.push(HP(s,t,n))}const r=HP(e,t,n);for(const t of e)n.disposeIntermediateTensorInfo(t);return r}if(i){const e=new VP(a.map(e=>e.shape),t);return n.runWebGLProgram(e,a,r)}const{tensors2D:u,outShape:l}=function(e,t,n){const r=Gf(e.map(e=>e.shape),t);return{tensors2D:e.map(e=>fz({inputs:{x:e},attrs:{shape:[-1,le(e.shape.slice(t))]},backend:n})),outShape:r}}(a,t,n),c=new BP(u.map(e=>e.shape)),h=n.runWebGLProgram(c,u,r);u.forEach(e=>n.disposeIntermediateTensorInfo(e));const d=fz({inputs:{x:h},attrs:{shape:l},backend:n});return n.disposeIntermediateTensorInfo(h),d}function jP(e){const{inputs:t,backend:n,attrs:r}=e,{axis:s}=r,a=we(s,t[0].shape)[0];Wf(t.map(e=>e.shape),a);const i=Gf(t.map(e=>e.shape),a);if(0===le(i))return n.makeTensorInfo(i,t[0].dtype,[]);const o=t.filter(e=>le(e.shape)>0);return 1===o.length?XL({inputs:{x:o[0]},backend:n}):HP(o,a,n)}const qP={kernelName:$t,backendName:"webgl",kernelFunc:jP};class KP{constructor(e,t=!1,n=null,r=!1,s=!1){this.variableNames=["x","W"],this.outputShape=e.outShape;const a=e.padInfo.top,i=e.padInfo.left,o=e.strideHeight,u=e.strideWidth,l=e.dilationHeight,c=e.dilationWidth,h=e.filterHeight,d=e.filterWidth,p=4*Math.floor(e.inChannels/4),f=e.inChannels%4,m="channelsLast"===e.dataFormat,g=m?1:2,y=m?2:3,b=m?3:1;let x="",w="";n&&(x=r?`float activation(float a) {\\n          float b = getPreluActivationWeightsAtOutCoords();\\n          ${n}\\n        }`:s?`float activation(float a) {\\n          float b = getLeakyreluAlphaAtOutCoords();\\n          ${n}\\n        }`:`\\n          float activation(float x) {\\n            ${n}\\n          }\\n        `,w="result = activation(result);");const v=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),s&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\\n      ${x}\\n\\n      const ivec2 strides = ivec2(${o}, ${u});\\n      const ivec2 pads = ivec2(${a}, ${i});\\n\\n      void main() {\\n        ivec4 coords = getOutputCoords();\\n        int batch = coords[0];\\n        int d2 = coords[${b}];\\n\\n        ivec2 xRCCorner =\\n            ivec2(coords[${g}], coords[${y}]) * strides - pads;\\n        int xRCorner = xRCCorner.x;\\n        int xCCorner = xRCCorner.y;\\n\\n        // Convolve x(?, ?, d1) with w(:, :, d1, d2) to get y(yR, yC, d2).\\n        // ? = to be determined. : = across all values in that axis.\\n        float dotProd = 0.0;\\n        for (int wR = 0; wR < ${h}; wR++) {\\n          int xR = xRCorner + wR * ${l};\\n\\n          if (xR < 0 || xR >= ${e.inHeight}) {\\n            continue;\\n          }\\n\\n          for (int wC = 0; wC < ${d}; wC++) {\\n            int xC = xCCorner + wC * ${c};\\n\\n            if (xC < 0 || xC >= ${e.inWidth}) {\\n              continue;\\n            }\\n\\n            for (int d1 = 0; d1 < ${p}; d1 += 4) {\\n              vec4 wValues = vec4(\\n                getW(wR, wC, d1, d2),\\n                getW(wR, wC, d1 + 1, d2),\\n                getW(wR, wC, d1 + 2, d2),\\n                getW(wR, wC, d1 + 3, d2)\\n              );\\n\\n              if (${m}) {\\n                vec4 xValues = vec4(\\n                  getX(batch, xR, xC, d1),\\n                  getX(batch, xR, xC, d1 + 1),\\n                  getX(batch, xR, xC, d1 + 2),\\n                  getX(batch, xR, xC, d1 + 3)\\n                );\\n                dotProd += dot(xValues, wValues);\\n              } else {\\n                vec4 xValues = vec4(\\n                  getX(batch, d1, xR, xC),\\n                  getX(batch, d1 + 1, xR, xC),\\n                  getX(batch, d1 + 2, xR, xC),\\n                  getX(batch, d1 + 3, xR, xC)\\n                );\\n                dotProd += dot(xValues, wValues);\\n              }\\n            }\\n\\n            if (${1===f}) {\\n\\n              if (${m}) {\\n                dotProd +=\\n                    getX(batch, xR, xC, ${p}) *\\n                    getW(wR, wC, ${p}, d2);\\n              } else {\\n                dotProd +=\\n                    getX(batch, ${p}, xR, xC) *\\n                    getW(wR, wC, ${p}, d2);\\n              }\\n\\n            } else if (${2===f}) {\\n              vec2 wValues = vec2(\\n                getW(wR, wC, ${p}, d2),\\n                getW(wR, wC, ${p} + 1, d2)\\n              );\\n\\n              if (${m}) {\\n                vec2 xValues = vec2(\\n                  getX(batch, xR, xC, ${p}),\\n                  getX(batch, xR, xC, ${p} + 1)\\n                );\\n                dotProd += dot(xValues, wValues);\\n              } else {\\n                vec2 xValues = vec2(\\n                  getX(batch, ${p}, xR, xC),\\n                  getX(batch, ${p} + 1, xR, xC)\\n                );\\n                dotProd += dot(xValues, wValues);\\n              }\\n\\n            } else if (${3===f}) {\\n              vec3 wValues = vec3(\\n                getW(wR, wC, ${p}, d2),\\n                getW(wR, wC, ${p} + 1, d2),\\n                getW(wR, wC, ${p} + 2, d2)\\n              );\\n\\n              if (${m}) {\\n                vec3 xValues = vec3(\\n                  getX(batch, xR, xC, ${p}),\\n                  getX(batch, xR, xC, ${p} + 1),\\n                  getX(batch, xR, xC, ${p} + 2)\\n                );\\n                dotProd += dot(xValues, wValues);\\n              } else {\\n                vec3 xValues = vec3(\\n                  getX(batch, ${p}, xR, xC),\\n                  getX(batch, ${p} + 1, xR, xC),\\n                  getX(batch, ${p} + 2, xR, xC)\\n                );\\n                dotProd += dot(xValues, wValues);\\n              }\\n\\n            }\\n          }\\n        }\\n\\n        float result = dotProd;\\n        ${v}\\n        ${w}\\n        setOutput(result);\\n      }\\n    `}}class XP{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;const t=e.padInfo.front,n=e.padInfo.top,r=e.padInfo.left,s=e.strideDepth,a=e.strideHeight,i=e.strideWidth,o=e.dilationDepth,u=e.dilationHeight,l=e.dilationWidth,c=e.filterDepth,h=e.filterHeight,d=e.filterWidth,p=4*Math.floor(e.inChannels/4),f=e.inChannels%4;this.userCode=`\\n      const ivec3 strides = ivec3(${s}, ${a}, ${i});\\n      const ivec3 pads = ivec3(${t}, ${n}, ${r});\\n\\n      void main() {\\n        ivec5 coords = getOutputCoords();\\n        int batch = coords.x;\\n        int d2 = coords.u;\\n\\n        ivec3 xFRCCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\\n        int xFCorner = xFRCCorner.x;\\n        int xRCorner = xFRCCorner.y;\\n        int xCCorner = xFRCCorner.z;\\n\\n        // Convolve x(?, ?, ?, d1) with w(:, :, :, d1, d2) to get\\n        // y(yF, yR, yC, d2). ? = to be determined. : = across all\\n        // values in that axis.\\n        float dotProd = 0.0;\\n        for (int wF = 0; wF < ${c}; wF++) {\\n          int xF = xFCorner + wF * ${o};\\n\\n          if (xF < 0 || xF >= ${e.inDepth}) {\\n            continue;\\n          }\\n\\n          for (int wR = 0; wR < ${h}; wR++) {\\n            int xR = xRCorner + wR * ${u};\\n\\n            if (xR < 0 || xR >= ${e.inHeight}) {\\n              continue;\\n            }\\n\\n            for (int wC = 0; wC < ${d}; wC++) {\\n              int xC = xCCorner + wC * ${l};\\n\\n              if (xC < 0 || xC >= ${e.inWidth}) {\\n                continue;\\n              }\\n\\n              for (int d1 = 0; d1 < ${p}; d1 += 4) {\\n                vec4 xValues = vec4(\\n                  getX(batch, xF, xR, xC, d1),\\n                  getX(batch, xF, xR, xC, d1 + 1),\\n                  getX(batch, xF, xR, xC, d1 + 2),\\n                  getX(batch, xF, xR, xC, d1 + 3)\\n                );\\n                vec4 wValues = vec4(\\n                  getW(wF, wR, wC, d1, d2),\\n                  getW(wF, wR, wC, d1 + 1, d2),\\n                  getW(wF, wR, wC, d1 + 2, d2),\\n                  getW(wF, wR, wC, d1 + 3, d2)\\n                );\\n\\n                dotProd += dot(xValues, wValues);\\n              }\\n\\n              if (${1===f}) {\\n                dotProd +=\\n                  getX(batch, xF, xR, xC, ${p}) *\\n                  getW(wF, wR, wC, ${p}, d2);\\n              } else if (${2===f}) {\\n                vec2 xValues = vec2(\\n                  getX(batch, xF, xR, xC, ${p}),\\n                  getX(batch, xF, xR, xC, ${p} + 1)\\n                );\\n                vec2 wValues = vec2(\\n                  getW(wF, wR, wC, ${p}, d2),\\n                  getW(wF, wR, wC, ${p} + 1, d2)\\n                );\\n                dotProd += dot(xValues, wValues);\\n              } else if (${3===f}) {\\n                vec3 xValues = vec3(\\n                  getX(batch, xF, xR, xC, ${p}),\\n                  getX(batch, xF, xR, xC, ${p} + 1),\\n                  getX(batch, xF, xR, xC, ${p} + 2)\\n                );\\n                vec3 wValues = vec3(\\n                  getW(wF, wR, wC, ${p}, d2),\\n                  getW(wF, wR, wC, ${p} + 1, d2),\\n                  getW(wF, wR, wC, ${p} + 2, d2)\\n                );\\n                dotProd += dot(xValues, wValues);\\n              }\\n            }\\n          }\\n        }\\n        setOutput(dotProd);\\n      }\\n    `}}class YP{constructor(e,t=!1,n=null,r=!1,s=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=YD(this.outputShape.length);const a=e.padInfo.left,i=e.strideWidth,o=e.dilationWidth,u=e.filterHeight,l=e.filterWidth,c=l;let h="\\n       int xR; int xC; int xCOffset;\\n       vec4 wTexel; vec4 previous; vec4 final;";for(let e=0;e<l;e++)h+=`\\n           vec4 xTexelC${2*e};\\n           int xTexelC${2*e}Ready;\\n           vec4 xTexelC${2*e+1};\\n           int xTexelC${2*e+1}Ready;\\n           vec4 xC${e};`;h+=`\\n     for (int r = 0; r < ${u}; r++) {\\n      for (int d1 = 0; d1 < ${e.inChannels}; d1 += 2) {\\n       `;for(let e=0;e<l;e++)h+=`\\n           xTexelC${2*e} = vec4(0.0);\\n           xTexelC${2*e}Ready = 0;\\n           xTexelC${2*e+1} = vec4(0.0);\\n           xTexelC${2*e+1}Ready = 0;\\n           xC${e} = vec4(0.0);`;h+="\\n         xR = xRCorner + r * dilations[0];\\n         if (xR >=0 && xR < inDims[0]) {\\n       ";for(let t=0;t<(c+1)/2;t++){const n=2*t;if(h+=`\\n           xC = xCCorner + ${n*o};\\n           `,1===i){if(n<l&&(a%2==1?(h+=`\\n                 xCOffset = xC + 1;\\n                 if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${n}Ready == 0) {\\n                   xTexelC${n} = getX(batch, xR, xCOffset, d1);\\n\\n                   // Need to manually clear unused channels in case\\n                   // we\'re reading from recycled texture.\\n                   if (xCOffset + 1 >= inDims[1]) {\\n                     xTexelC${n}.zw = vec2(0.0);\\n                   }\\n                   xTexelC${n}Ready = 1;\\n                 }\\n               `,h+=1===o&&n>0?`\\n                 xC${n} = vec4(xTexelC${n-2}.zw, xTexelC${n}.xy);\\n                 `:`\\n                   xCOffset = xC + 1 - 2;\\n\\n                   if (xCOffset >= 0 && xCOffset < inDims[1]) {\\n                     previous = getX(batch, xR, xCOffset, d1);\\n\\n                     // Need to manually clear unused channels in case\\n                     // we\'re reading from recycled texture.\\n                     if (xCOffset + 1 >= inDims[1]) {\\n                       previous.zw = vec2(0.0);\\n                     }\\n\\n                     xC${n} = vec4(previous.zw, xTexelC${n}.xy);\\n                   } else {\\n                     xC${n} = vec4(0.0, 0.0, xTexelC${n}.xy);\\n                   }\\n                   `):h+=`\\n                 if (xC >= 0 && xC < inDims[1] && xTexelC${n}Ready == 0) {\\n                   xTexelC${n} = getX(batch, xR, xC, d1);\\n                   if (xC + 1 >= inDims[1]) {\\n                     xTexelC${n}.zw = vec2(0.0);\\n                   }\\n                   xTexelC${n}Ready = 1;\\n                 }\\n\\n                 xC${n} = xTexelC${n};\\n                 `,n+1<l)){const e=a%2==0?te(o):o;o%2==0&&a%2==1||o%2!=0&&a%2!=1?(h+=`\\n                   xCOffset = xC + imod(pads[1], 2) + ${e};\\n\\n                   if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${n+1}Ready == 0) {\\n                     xTexelC${n+1} = getX(batch, xR, xCOffset, d1);\\n\\n                     // Need to manually clear unused channels in case\\n                     // we\'re reading from recycled texture.\\n                     if (xCOffset + 1 >= inDims[1]) {\\n                       xTexelC${n+1}.zw = vec2(0.0);\\n                     }\\n                     xTexelC${n+1}Ready = 1;\\n                   }\\n                   `,h+=o>1?`\\n                     xCOffset -= 2;\\n                     if (xCOffset >= 0 && xCOffset < inDims[1]) {\\n                      previous = getX(batch, xR, xCOffset, d1);\\n                      xC${n+1} = vec4(previous.zw, xTexelC${n+1}.xy);\\n                     } else {\\n                      xC${n+1} = vec4(0.0, 0.0, xTexelC${n+1}.xy);\\n                     }\\n                     `:`\\n                     xC${n+1} = vec4(xTexelC${n}.zw, xTexelC${n+1}.xy);\\n                     `):h+=1===e?`\\n                     xC${n+1} = xTexelC${n};\\n                     `:`\\n                     xCOffset = xC + ${e};\\n\\n                     if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${n+1}Ready == 0) {\\n                       xTexelC${n+1} = getX(batch, xR, xCOffset, d1);\\n                       if (xCOffset + 1 >= inDims[1]) {\\n                         xTexelC${n+1}.zw = vec2(0.0);\\n                       }\\n                       xTexelC${n+1}Ready = 1;\\n                     }\\n\\n                     xC${n+1} = xTexelC${n+1};\\n                     `}}else n<l&&(a%2==1?(h+=`\\n                 xCOffset = xC + 1 - strides[1];\\n                 if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${n}Ready == 0) {\\n                   xTexelC${n} = getX(batch, xR, xCOffset, d1);\\n                   // Need to manually clear unused channels in case\\n                   // we\'re reading from recycled texture.\\n                   if (xCOffset + 1 >= inDims[1]) {\\n                     xTexelC${n}.zw = vec2(0.0);\\n                   }\\n                   xTexelC${n}Ready = 1;\\n                 }\\n\\n                 if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC${n+1}Ready == 0) {\\n                   xTexelC${n+1} = getX(batch, xR, xC + 1, d1);\\n                   // Need to manually clear unused channels in case\\n                   // we\'re reading from recycled texture.\\n                   if (xC + 2 >= inDims[1]) {\\n                     xTexelC${n+1}.zw = vec2(0.0);\\n                   }\\n                   xTexelC${n+1}Ready = 1;\\n                 }\\n\\n                 xC${n} = vec4(xTexelC${n}.zw, xTexelC${n+1}.zw);\\n               `,n+1<l&&(h+=`\\n                   final = vec4(0.0);\\n                   xCOffset = xC + 1 + strides[1];\\n                   if(xCOffset >= 0 && xCOffset < inDims[1]) {\\n                     final = getX(batch, xR, xCOffset, d1);\\n                   }\\n                   xC${n+1} = vec4(xTexelC${n+1}.xy, final.xy);\\n                 `)):(h+=`\\n                 if(xC >= 0 && xC < inDims[1] && xTexelC${n}Ready == 0) {\\n                   xTexelC${n} = getX(batch, xR, xC, d1);\\n                   if (xC + 1 >= inDims[1]) {\\n                     xTexelC${n}.zw = vec2(0.0);\\n                   }\\n                   xTexelC${n}Ready = 1;\\n                 }\\n\\n                 xCOffset = xC + strides[1];\\n                 if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${n+1}Ready == 0) {\\n                   xTexelC${n+1} = getX(batch, xR, xCOffset, d1);\\n                   if (xCOffset + 1 >= inDims[1]) {\\n                     xTexelC${n+1}.zw = vec2(0.);\\n                   }\\n                   xTexelC${n+1}Ready = 1;\\n                 }\\n\\n                 xC${n} = vec4(\\n                   xTexelC${n}.xy, xTexelC${n+1}.xy);\\n               `,n+1<l&&(h+=`\\n                   xC${n+1} = vec4(xTexelC${n}.zw, xTexelC${n+1}.zw);\\n                 `)));n<l&&(h+=`\\n             wTexel = getW(r, ${n}, d1, d2);\\n             dotProd += xC${n}.xxzz * vec4(wTexel.xy, wTexel.xy);\\n             if(d1 + 1 < ${e.inChannels}) {\\n               dotProd += xC${n}.yyww * vec4(wTexel.zw, wTexel.zw);\\n             }\\n           `,n+1<l&&(h+=`\\n               wTexel = getW(r, ${n+1}, d1, d2);\\n               dotProd += xC${n+1}.xxzz * vec4(wTexel.xy, wTexel.xy);\\n               if(d1 + 1 < ${e.inChannels}) {\\n                 dotProd += xC${n+1}.yyww * vec4(wTexel.zw, wTexel.zw);\\n               }\\n             `))}h+="\\n     }\\n   ",h+="\\n     }\\n   ",h+="\\n     }\\n   ";let d="",p="";n&&(d=r?`vec4 activation(vec4 a) {\\n           vec4 b = getPreluActivationWeightsAtOutCoords();\\n           ${n}\\n         }`:s?`vec4 activation(vec4 a) {\\n           vec4 b = getLeakyreluAlphaAtOutCoords();\\n           ${n}\\n         }`:`vec4 activation(vec4 x) {\\n           ${n}\\n         }`,p="result = activation(result);");const f=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),s&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\\n       ${d}\\n\\n       void main() {\\n         ivec4 coords = getOutputCoords();\\n         int batch = coords.x;\\n         ivec2 xRCCorner = coords.yz * strides - pads;\\n         int d2 = coords.w;\\n         int xRCorner = xRCCorner.x;\\n         int xCCorner = xRCCorner.y;\\n\\n         //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.\\n         vec4 dotProd = vec4(0.000000000000001);\\n\\n         ${h}\\n\\n         vec4 result = dotProd - vec4(0.000000000000001);\\n         ${f}\\n         ${p}\\n         setOutput(result);\\n       }\\n     `}}class JP{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec4"},{name:"pad",type:"ivec2"},{name:"stride",type:"ivec2"},{name:"dilation",type:"ivec2"},{name:"inChannels",type:"int"},{name:"itemsPerBlockRow",type:"int"},{name:"outWidth",type:"int"}],this.outputShape=e,this.enableShapeUniforms=YD(this.outputShape.length);const{dataFormat:n}=t,r=$D(),s="channelsLast"===n,a=s?1:2,i=s?2:3,o=this.enableShapeUniforms?"if(blockIndex < outShape[2] && pos < outShape[1]) {":`if(blockIndex < ${e[2]} && pos < ${e[1]}) {`;let u="";for(let e=0;e<=1;e++)for(let t=0;t<=1;t++)u+=`\\n          blockIndex = rc.z + ${t};\\n          pos = rc.y + ${e};\\n\\n          ${o}\\n            offsetY = int(blockIndex / outWidth) * stride[0] - pad[0];\\n            d0 = offsetY + dilation[0] * (pos / itemsPerBlockRow);\\n\\n            if(d0 < inputShape[${a}] && d0 >= 0) {\\n              // Use custom imod instead mod. On Intel GPU, mod may generate\\n              // unexpected value.\\n              // https://github.com/tensorflow/tfjs/issues/5447\\n              offsetX = imod(blockIndex, outWidth) * stride[1] - pad[1];\\n              d1 = offsetX + dilation[1] * (imod(pos, itemsPerBlockRow) /\\n                  inChannels);\\n\\n              if(d1 < inputShape[${i}] && d1 >= 0) {\\n\\n                ch = imod(pos, inChannels);\\n\\n                if (${s}) {\\n                  innerDims = vec2(d1, ch);\\n                  result[${2*e+t}] = getChannel(\\n                    getA(rc.x, d0, int(innerDims.x),\\n                    int(innerDims.y)), innerDims);\\n                } else {\\n                  innerDims = vec2(d0, d1);\\n                  result[${2*e+t}] = getChannel(\\n                    getA(rc.x, ch, int(innerDims.x),\\n                    int(innerDims.y)), innerDims);\\n                }\\n              }\\n            }\\n          }\\n        `;this.userCode=`\\n      void main() {\\n        ivec3 rc = getOutputCoords();\\n\\n        vec4 result = vec4(0);\\n\\n        int blockIndex, pos, offsetY, d0, offsetX, d1, ch;\\n        vec2 innerDims;\\n\\n        ${u}\\n\\n        ${r.output} = result;\\n      }\\n    `}}function ZP(e,t){const n=e.length;return n>=3?t?[...e.slice(0,-3),e[n-3]*e[n-2],e[n-1]]:[...e.slice(0,-3),e[n-3],e[n-2]*e[n-1]]:!t&&1===n&&e[0]>1?[e[0],1]:null}function QP({x:e,filter:t,convInfo:n,backend:r,bias:s=null,preluActivationWeights:a=null,leakyreluAlpha:i=0,activation:o=null}){const u=e.shape,l=r.texData.get(e.dataId),c=n.inChannels,h=u[0]*u[1]*u[2],d=n.outChannels,p="channelsLast"===n.dataFormat,f=!1;let m;const g=[];if(null!=a){const e=ZP(a.shape,p);null!=e&&(a=fz({inputs:{x:a},backend:r,attrs:{shape:e}}),g.push(a))}if(null!=s){const e=ZP(s.shape,p);null!=e&&(s=fz({inputs:{x:s},backend:r,attrs:{shape:e}}),g.push(s))}if((1!==h&&1!==d||!(c>1e3))&&l.isPacked&&p&&null!=l.texture&&u[2]%2!=0&&de(l.shape.slice(-3),u.slice(-3))){const c=u[0]*u[1]*(u[2]+1),h={dataId:e.dataId,shape:[1,c,n.inChannels],dtype:e.dtype},d=l.shape;l.shape=l.shape.slice(),l.shape[l.shape.length-2]++,ie(pD(l.shape,h.shape),()=>`packed reshape ${l.shape} to ${h.shape} isn\'t free`);const p=fz({inputs:{x:t},backend:r,attrs:{shape:[1,n.inChannels,n.outChannels]}});g.push(p);const y=Tz({a:h,b:p,backend:r,transposeA:!1,transposeB:f,bias:s,activation:o,preluActivationWeights:a,leakyreluAlpha:i}),b=r.texData.get(y.dataId);ie(b.isPacked,()=>"batchMatMul result is expected to be packed"),l.shape=d,b.shape=n.outShape,m=XL({inputs:{x:y},backend:r}),m.shape=n.outShape,g.push(y)}else{const u=n.outHeight*n.outWidth,l=fz({inputs:{x:e},backend:r,attrs:{shape:p?[n.batchSize,u,n.inChannels]:[n.batchSize,n.inChannels,u]}}),c=fz({inputs:{x:t},backend:r,attrs:{shape:[1,n.inChannels,n.outChannels]}}),h=Tz({a:p?l:c,b:p?c:l,transposeA:!p,transposeB:f,backend:r,bias:s,activation:o,preluActivationWeights:a,leakyreluAlpha:i});m=fz({inputs:{x:h},backend:r,attrs:{shape:n.outShape}}),g.push(l),g.push(c),g.push(h)}for(const e of g)r.disposeIntermediateTensorInfo(e);return m}function eB({x:e,filter:t,convInfo:n,backend:r,bias:s=null,preluActivationWeights:a=null,leakyreluAlpha:i=0,activation:o=null}){const{filterWidth:u,filterHeight:l,inChannels:c,outWidth:h,outHeight:d,dataFormat:p}=n,f="channelsLast"===p,m=u*l*c,g=d*h,y=[n.batchSize,m,g],b=[];if(null!=a){const e=ZP(a.shape,f);null!=e&&(a=fz({inputs:{x:a},backend:r,attrs:{shape:e}}),b.push(a))}if(null!=s){const e=ZP(s.shape,f);null!=e&&(s=fz({inputs:{x:s},backend:r,attrs:{shape:e}}),b.push(s))}const x=fz({inputs:{x:t},backend:r,attrs:{shape:[1,m,le(t.shape)/m]}});b.push(x);const w=new JP(y,n),v=[e.shape,[n.padInfo.top,n.padInfo.left],[n.strideHeight,n.strideWidth],[n.dilationHeight,n.dilationWidth],[n.inChannels],[n.filterWidth*n.inChannels],[n.outWidth]],k=r.runWebGLProgram(w,[e],"float32",v),I=fz({inputs:{x:k},backend:r,attrs:{shape:y}});b.push(k),b.push(I);const S=null!=s,N=null!=a,T="leakyrelu"===o,E=o?uz(o,!0):null,C=new lz(f?I.shape:x.shape,f?x.shape:I.shape,f?[n.batchSize,g,n.outChannels]:[n.batchSize,n.outChannels,g],!0,!1,S,E,N,T),$=f?[I,x]:[x,I];if(s&&$.push(s),N&&$.push(a),T){const e=r.makeTensorInfo([],"float32",qs(i,"float32"));$.push(e),b.push(e)}const A=r.runWebGLProgram(C,$,"float32"),R=fz({inputs:{x:A},backend:r,attrs:{shape:n.outShape}});b.push(A);for(const e of b)r.disposeIntermediateTensorInfo(e);return R}const tB={kernelName:At,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:a}=t,{strides:i,pad:o,dataFormat:u,dilations:l,dimRoundingMode:c}=r,h=nc(u),d=jl(s.shape,a.shape,i,l,o,c,!1,h);let p;if(1!==d.filterHeight||1!==d.filterWidth||1!==d.dilationHeight||1!==d.dilationWidth||1!==d.strideHeight||1!==d.strideWidth||"SAME"!==d.padInfo.type&&"VALID"!==d.padInfo.type)if(d.strideWidth<=2&&"channelsLast"===h&&Xe().getBool("WEBGL_EXP_CONV")){const e=new YP(d),t=[[d.padInfo.top,d.padInfo.left],[d.strideHeight,d.strideWidth],[d.dilationHeight,d.dilationWidth],[d.inHeight,d.inWidth]];p=n.runWebGLProgram(e,[s,a],"float32",t)}else if(Xe().getBool("WEBGL_CONV_IM2COL"))p=eB({x:s,filter:a,convInfo:d,backend:n});else{const e=new KP(d);p=n.runWebGLProgram(e,[s,a],"float32")}else p=QP({x:s,filter:a,convInfo:d,backend:n});const f=fz({inputs:{x:p},backend:n,attrs:{shape:d.outShape}});return n.disposeIntermediateTensorInfo(p),f}};class nB{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideHeight,n=e.strideWidth,r=e.padInfo.top,s=e.padInfo.left,a="channelsLast"===e.dataFormat;this.userCode=`\\n      void main() {\\n        ivec4 coords = getOutputCoords();\\n        int wR = coords.x;\\n        int wC = coords.y;\\n        int d1 = coords.z;\\n        int d2 = coords.w;\\n\\n        // Convolve x(?, ?, d1) with dy(:, :, d2) to get dw(wR, wC, d1, d2).\\n        // ? = to be determined. : = across all values in that axis.\\n        float dotProd = 0.0;\\n\\n        for (int b = 0; b < ${e.batchSize}; b++) {\\n          for (int yR = 0; yR < ${e.outHeight}; yR++) {\\n            int xR = wR + yR * ${t} - ${r};\\n\\n            if (xR < 0 || xR >= ${e.inHeight}) {\\n              continue;\\n            }\\n\\n            for (int yC = 0; yC < ${e.outWidth}; yC++) {\\n              int xC = wC + yC * ${n} - ${s};\\n\\n              if (xC < 0 || xC >= ${e.inWidth}) {\\n                continue;\\n              }\\n\\n              ${a?"float dyValue = getDy(b, yR, yC, d2);\\n              float xValue = getX(b, xR, xC, d1);\\n              dotProd += (xValue * dyValue);":"float dyValue = getDy(b, d2, yR, yC);\\n              float xValue = getX(b, d1, xR, xC);\\n              dotProd += (xValue * dyValue);"}\\n            }\\n          }\\n        }\\n        setOutput(dotProd);\\n      }\\n    `}}class rB{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterHeight,n=e.filterWidth,r=e.strideHeight,s=e.strideWidth,a="channelsLast"===e.dataFormat,i=t-1-e.padInfo.top,o=n-1-e.padInfo.left,u=a?1:2,l=a?2:3,c=a?3:1;this.userCode=`\\n      const ivec2 pads = ivec2(${i}, ${o});\\n\\n      void main() {\\n        ivec4 coords = getOutputCoords();\\n        int batch = coords[0];\\n        int d1 = coords[${c}];\\n\\n        ivec2 dyCorner = ivec2(coords[${u}], coords[${l}]) - pads;\\n        int dyRCorner = dyCorner.x;\\n        int dyCCorner = dyCorner.y;\\n\\n        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).\\n        // ? = to be determined. : = across all values in that axis.\\n        float dotProd = 0.0;\\n        for (int wR = 0; wR < ${t}; wR++) {\\n          float dyR = float(dyRCorner + wR) / ${r}.0;\\n\\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\\n            continue;\\n          }\\n          int idyR = int(dyR);\\n\\n          int wRPerm = ${t} - 1 - wR;\\n\\n          for (int wC = 0; wC < ${n}; wC++) {\\n            float dyC = float(dyCCorner + wC) / ${s}.0;\\n\\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\\n                fract(dyC) > 0.0) {\\n              continue;\\n            }\\n            int idyC = int(dyC);\\n\\n            int wCPerm = ${n} - 1 - wC;\\n\\n            for (int d2 = 0; d2 < ${e.outChannels}; d2++) {\\n\\n              if (${a}) {\\n                float xValue = getDy(batch, idyR, idyC, d2);\\n                float wValue = getW(wRPerm, wCPerm, d1, d2);\\n                dotProd += xValue * wValue;\\n              } else {\\n                float xValue = getDy(batch, d2, idyR, idyC);\\n                float wValue = getW(wRPerm, wCPerm, d1, d2);\\n                dotProd += xValue * wValue;\\n              }\\n\\n            }\\n          }\\n        }\\n        setOutput(dotProd);\\n      }\\n    `}}class sB{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideDepth,n=e.strideHeight,r=e.strideWidth,s=e.padInfo.front,a=e.padInfo.top,i=e.padInfo.left;this.userCode=`\\n      void main() {\\n        ivec5 coords = getOutputCoords();\\n        int wF = coords.x;\\n        int wR = coords.y;\\n        int wC = coords.z;\\n        int d1 = coords.w;\\n        int d2 = coords.u;\\n\\n        float dotProd = 0.0;\\n\\n        for (int b = 0; b < ${e.batchSize}; b++) {\\n          for (int yF = 0; yF < ${e.outDepth}; yF++) {\\n            int xF = wF + yF * ${t} - ${s};\\n\\n            if (xF < 0 || xF >= ${e.inDepth}) {\\n              continue;\\n            }\\n\\n            for (int yR = 0; yR < ${e.outHeight}; yR++) {\\n              int xR = wR + yR * ${n} - ${a};\\n\\n              if (xR < 0 || xR >= ${e.inHeight}) {\\n                continue;\\n              }\\n\\n              for (int yC = 0; yC < ${e.outWidth}; yC++) {\\n                int xC = wC + yC * ${r} - ${i};\\n\\n                if (xC < 0 || xC >= ${e.inWidth}) {\\n                  continue;\\n                }\\n\\n                float dyValue = getDy(b, yF, yR, yC, d2);\\n                float xValue = getX(b, xF, xR, xC, d1);\\n                dotProd += (xValue * dyValue);\\n              }\\n            }\\n          }\\n        }\\n        setOutput(dotProd);\\n      }\\n    `}}class aB{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterDepth,n=e.filterHeight,r=e.filterWidth,s=e.strideDepth,a=e.strideHeight,i=e.strideWidth,o=t-1-e.padInfo.front,u=n-1-e.padInfo.top,l=r-1-e.padInfo.left;this.userCode=`\\n      const ivec3 pads = ivec3(${o}, ${u}, ${l});\\n\\n      void main() {\\n        ivec5 coords = getOutputCoords();\\n        int batch = coords.x;\\n        int d1 = coords.u;\\n\\n\\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\\n        int dyFCorner = dyCorner.x;\\n        int dyRCorner = dyCorner.y;\\n        int dyCCorner = dyCorner.z;\\n\\n        float dotProd = 0.0;\\n        for (int wF = 0; wF < ${t}; wF++) {\\n          float dyF = float(dyFCorner + wF) / ${s}.0;\\n\\n          if (dyF < 0.0 || dyF >= ${e.outDepth}.0 || fract(dyF) > 0.0) {\\n            continue;\\n          }\\n          int idyF = int(dyF);\\n\\n          int wFPerm = ${t} - 1 - wF;\\n\\n          for (int wR = 0; wR < ${n}; wR++) {\\n            float dyR = float(dyRCorner + wR) / ${a}.0;\\n\\n            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||\\n              fract(dyR) > 0.0) {\\n              continue;\\n            }\\n            int idyR = int(dyR);\\n\\n            int wRPerm = ${n} - 1 - wR;\\n\\n            for (int wC = 0; wC < ${r}; wC++) {\\n              float dyC = float(dyCCorner + wC) / ${i}.0;\\n\\n              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\\n                  fract(dyC) > 0.0) {\\n                continue;\\n              }\\n              int idyC = int(dyC);\\n\\n              int wCPerm = ${r} - 1 - wC;\\n\\n              for (int d2 = 0; d2 < ${e.outChannels}; d2++) {\\n                float xValue = getDy(batch, idyF, idyR, idyC, d2);\\n                float wValue = getW(wFPerm, wRPerm, wCPerm, d1, d2);\\n                dotProd += xValue * wValue;\\n              }\\n            }\\n          }\\n        }\\n        setOutput(dotProd);\\n      }\\n    `}}const iB={kernelName:Rt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,dy:a}=t,{strides:i,pad:o,dataFormat:u,dimRoundingMode:l,filterShape:c}=r,h=nc(u),d=jl(s.shape,c,i,1,o,l,!1,h),p=new nB(d);return n.runWebGLProgram(p,[s,a],"float32")}};class oB{constructor(e){this.variableNames=["dy","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"strides",type:"vec2"}],this.outputShape=e.inShape,this.enableShapeUniforms=YD(this.outputShape.length);const t=e.filterHeight,n=e.filterWidth,r=t-1-e.padInfo.top,s=n-1-e.padInfo.left;this.userCode=`\\n      const ivec2 pads = ivec2(${r}, ${s});\\n\\n      void main() {\\n        ivec4 coords = getOutputCoords();\\n        int batch = coords[0];\\n        int d1 = coords[3];\\n\\n        ivec2 dyCorner = ivec2(coords[1], coords[2]) - pads;\\n        int dyRCorner = dyCorner.x;\\n        int dyCCorner = dyCorner.y;\\n\\n        vec4 result = vec4(0.);\\n        for (int wR = 0; wR < ${t}; wR++) {\\n          float dyR = float(dyRCorner + wR) / strides[0];\\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\\n            continue;\\n          }\\n          int idyR = int(dyR);\\n          int wRPerm = ${t} - 1 - wR;\\n\\n          for (int wC = 0; wC < ${n}; wC++) {\\n            int wCPerm = ${n} - 1 - wC;\\n\\n            float dyC = float(dyCCorner + wC) / strides[1];\\n            bool idyCVal = (dyC >= 0.0) && (dyC < ${e.outWidth}.0)\\n              && (fract(dyC) == 0.0);\\n            int idyC = int(dyC);\\n\\n            float dyC2 = float(dyCCorner + wC + 1) / strides[1];\\n            bool idyCVal2 = (dyC2 >= 0.0) && (dyC2 < ${e.outWidth}.0)\\n              && (fract(dyC2) == 0.0);\\n            int idyC2 = int(dyC2);\\n\\n            if (idyCVal && idyCVal2) {\\n              for (int d2 = 0; d2 < ${e.outChannels}; d2 += 2) {\\n                vec4 wValue = getW(wRPerm, wCPerm, d1, d2);\\n                vec4 dySample = getDy(batch, idyR, idyC, d2);\\n                vec4 dySample2 = (idyC / 2 == idyC2 / 2) ?\\n                  dySample : getDy(batch, idyR, idyC2, d2);\\n\\n                vec2 dyValue = mod(float(idyC), 2.) == 0. ?\\n                  dySample.xy : dySample.zw;\\n                result.xy += vec2(dot(dyValue, wValue.xy),\\n                  dot(dyValue, wValue.zw));\\n\\n                dyValue = mod(float(idyC2), 2.) == 0. ?\\n                  dySample2.xy : dySample2.zw;\\n                result.zw += vec2(dot(dyValue, wValue.xy),\\n                  dot(dyValue, wValue.zw));\\n              }\\n            } else if (idyCVal) {\\n              for (int d2 = 0; d2 < ${e.outChannels}; d2 += 2) {\\n                vec4 wValue = getW(wRPerm, wCPerm, d1, d2);\\n                vec4 dySample = getDy(batch, idyR, idyC, d2);\\n                vec2 dyValue = mod(float(idyC), 2.) == 0. ?\\n                  dySample.xy : dySample.zw;\\n                result.xy += vec2(dot(dyValue, wValue.xy),\\n                  dot(dyValue, wValue.zw));\\n              }\\n            } else if (idyCVal2) {\\n              for (int d2 = 0; d2 < ${e.outChannels}; d2 += 2) {\\n                vec4 wValue = getW(wRPerm, wCPerm, d1, d2);\\n                vec4 dySample = getDy(batch, idyR, idyC2, d2);\\n                vec2 dyValue = mod(float(idyC2), 2.) == 0. ?\\n                  dySample.xy : dySample.zw;\\n                result.zw += vec2(dot(dyValue, wValue.xy),\\n                  dot(dyValue, wValue.zw));\\n              }\\n            }\\n          }\\n        }\\n        setOutput(result);\\n      }\\n    `}}const uB={kernelName:_t,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,filter:a}=t,{inputShape:i,strides:o,pad:u,dataFormat:l,dimRoundingMode:c}=r,h=nc(l),d=jl(i,a.shape,o,1,u,c,!1,h);if(Xe().getBool("WEBGL_PACK_CONV2DTRANSPOSE")&&"channelsLast"===h){const e=[[d.strideHeight,d.strideWidth]],t=new oB(d);return n.runWebGLProgram(t,[s,a],"float32",e)}{const e=new rB(d);return n.runWebGLProgram(e,[s,a],"float32")}}},lB={kernelName:Mt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:a}=t,{strides:i,pad:o,dilations:u}=r,l=ql(s.shape,a.shape,i,u,o),c=new XP(l);return n.runWebGLProgram(c,[s,a],"float32")}},cB={kernelName:Ft,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,dy:a}=t,{strides:i,pad:o,filterShape:u}=r,l=ql(s.shape,u,i,1,o),c=new sB(l);return n.runWebGLProgram(c,[s,a],"float32")}},hB={kernelName:Dt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,filter:a}=t,{pad:i,strides:o,inputShape:u}=r,l=ql(u,a.shape,o,1,i),c=new aB(l);return n.runWebGLProgram(c,[s,a],"float32")}},dB=iz({opSnippet:az+"\\n  return cos(x);\\n",packedOpSnippet:`\\n  vec4 result = cos(x);\\n  bvec4 isNaN = isnan(x);\\n  ${qL}\\n  return result;\\n`}),pB={kernelName:Ot,backendName:"webgl",kernelFunc:dB},fB=iz({opSnippet:"\\n  float e2x = exp(-x);\\n  return (e2x + 1.0 / e2x) / 2.0;\\n"}),mB={kernelName:Lt,backendName:"webgl",kernelFunc:fB};class gB{constructor(e,t,n,r,s){this.variableNames=["Image","Boxes","BoxInd"],this.outputShape=[];const[a,i,o,u]=e,[l]=t,[c,h]=n;this.outputShape=[l,c,h,u];const d="bilinear"===r?1:0,[p,f]=[i-1+".0",o-1+".0"],[m,g,y]=c>1?[""+(i-1)/(c-1),"(y2-y1) * height_ratio",`y1*${p} + float(y)*(height_scale)`]:["0.0","0.0",`0.5 * (y1+y2) * ${p}`],[b,x,w]=h>1?[""+(o-1)/(h-1),"(x2-x1) * width_ratio",`x1*${f} + float(x)*(width_scale)`]:["0.0","0.0",`0.5 * (x1+x2) * ${f}`];this.userCode=`\\n      const float height_ratio = float(${m});\\n      const float width_ratio = float(${b});\\n      void main() {\\n        ivec4 coords = getOutputCoords();\\n        int b = coords[0];\\n        int y = coords[1];\\n        int x = coords[2];\\n        int d = coords[3];\\n\\n        // get box vals\\n        float y1 = getBoxes(b,0);\\n        float x1 = getBoxes(b,1);\\n        float y2 = getBoxes(b,2);\\n        float x2 = getBoxes(b,3);\\n\\n        // get image in batch index\\n        int bInd = round(getBoxInd(b));\\n        if(bInd < 0 || bInd >= ${a}) {\\n          return;\\n        }\\n\\n        float height_scale = ${g};\\n        float width_scale = ${x};\\n\\n        float in_y = ${y};\\n        if( in_y < 0.0 || in_y > ${p} ) {\\n          setOutput(float(${s}));\\n          return;\\n        }\\n        float in_x = ${w};\\n        if( in_x < 0.0 || in_x > ${f} ) {\\n          setOutput(float(${s}));\\n          return;\\n        }\\n\\n        vec2 sourceFracIndexCR = vec2(in_x,in_y);\\n        if(${d} == 1) {\\n          // Compute the four integer indices.\\n          ivec2 sourceFloorCR = ivec2(sourceFracIndexCR);\\n          ivec2 sourceCeilCR = ivec2(ceil(sourceFracIndexCR));\\n\\n          float topLeft = getImage(b, sourceFloorCR.y, sourceFloorCR.x, d);\\n          float bottomLeft = getImage(b, sourceCeilCR.y, sourceFloorCR.x, d);\\n          float topRight = getImage(b, sourceFloorCR.y, sourceCeilCR.x, d);\\n          float bottomRight = getImage(b, sourceCeilCR.y, sourceCeilCR.x, d);\\n\\n          vec2 fracCR = sourceFracIndexCR - vec2(sourceFloorCR);\\n\\n          float top = topLeft + (topRight - topLeft) * fracCR.x;\\n          float bottom = bottomLeft + (bottomRight - bottomLeft) * fracCR.x;\\n          float newValue = top + (bottom - top) * fracCR.y;\\n          setOutput(newValue);\\n        } else {\\n          // Compute the coordinators of nearest neighbor point.\\n          ivec2 sourceNearestCR = ivec2(floor(\\n            sourceFracIndexCR + vec2(0.5,0.5)));\\n          float newValue = getImage(b, sourceNearestCR.y, sourceNearestCR.x, d);\\n          setOutput(newValue);\\n        }\\n      }\\n    `}}const yB={kernelName:Bt,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{image:s,boxes:a,boxInd:i}=t,{cropSize:o,method:u,extrapolationValue:l}=r,c=new gB(s.shape,a.shape,o,u,l);return n.runWebGLProgram(c,[s,a,i],"float32")}};var bB;!function(e){e.Prod="*",e.Sum="+"}(bB||(bB={}));class xB{constructor(e,t,n,r){this.op=e,this.outputShape=t,this.variableNames=["x"],this.customUniforms=[{name:"index",type:"float"}];const s=this.outputShape.length,a=this.op===bB.Prod?"1.0":"0.0",i=n?a:`getX(${wB(s,"coords",this.op)})`,o=this.outputShape[this.outputShape.length-1];let u="",l="";n?(u=r?"end != "+(o-1):"end != 0",l=r?"end + 1":"end - 1"):(u=r?`end + pow2 < ${o}`:"end >= pow2",l=r?"end + pow2":"end - pow2"),this.userCode=`\\n      void main() {\\n        ${GD(s)} coords = getOutputCoords();\\n        int end = ${vB(s,"coords",this.op)};\\n        float val = ${i};\\n        int pow2 = int(pow(2.0, index));\\n        if (${u}) {\\n          int idx = ${l};\\n          ${vB(s,"coords",this.op)} = idx;\\n          val ${this.op}= getX(${wB(s,"coords",this.op)});\\n        }\\n        setOutput(val);\\n      }\\n    `}}function wB(e,t,n){if(1===e)return`${t}`;if(2===e)return`${t}.x, ${t}.y`;if(3===e)return`${t}.x, ${t}.y, ${t}.z`;if(4===e)return`${t}.x, ${t}.y, ${t}.z, ${t}.w`;throw new Error(`Cumulative ${n} for rank ${e} is not yet supported`)}function vB(e,t,n){if(1===e)return`${t}`;if(2===e)return`${t}.y`;if(3===e)return`${t}.z`;if(4===e)return`${t}.w`;throw new Error(`Cumulative ${n} for rank ${e} is not yet supported`)}function kB(e,t,n,r,s,a){const i=t.shape.length,o=nh([r],i);let u=t;null!=o&&(u=Sz({inputs:{x:t},backend:n,attrs:{perm:o}}));const l=sh(1,i)[0];if(l!==i-1)throw new Error(`WebGL cumprod shader expects an inner-most axis=${t.shape.length-1} but got axis=${r}`);const c=u.shape[l];let h=XL({inputs:{x:u},backend:n});for(let t=0;t<=Math.ceil(Math.log2(c))-1;t++){const r=new xB(e,u.shape,!1,a),s=[[t]],i=h;h=n.runWebGLProgram(r,[h],h.dtype,s),n.disposeIntermediateTensorInfo(i)}if(s){const t=new xB(e,u.shape,s,a),r=h;h=n.runWebGLProgram(t,[h],h.dtype),n.disposeIntermediateTensorInfo(r)}if(null!=o){const e=Sz({inputs:{x:h},backend:n,attrs:{perm:rh(o)}});return n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(u),e}return h}const IB={kernelName:zt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a,exclusive:i,reverse:o}=r;return kB(bB.Prod,s,n,a,i,o)}},SB={kernelName:Pt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a,exclusive:i,reverse:o}=r;return kB(bB.Sum,s,n,a,i,o)}},NB={kernelName:Vt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,weights:a}=t,{size:i,binaryOutput:o}=r;if(1===s.shape.length){const e=n.readSync(s.dataId),t=n.readSync(a.dataId),r=CO(e,t,a.dtype,a.shape,i);return n.makeTensorInfo([i],a.dtype,r)}if(2===s.shape.length){const e=n.bufferSync(s),t=n.bufferSync(a),r=$O(e,t,i,o);return n.makeTensorInfo(r.shape,a.dtype,r.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${s.shape.length}.`)}};class TB{constructor(e,t,n){this.variableNames=["x"],this.outputShape=[],this.outputShape=e,this.blockSize=t,this.dataFormat=n,this.userCode=`\\n    void main() {\\n      ivec4 coords = getOutputCoords();\\n      int b = coords[0];\\n      int h = ${this.getHeightCoordString()};\\n      int w = ${this.getWidthCoordString()};\\n      int d = ${this.getDepthCoordString()};\\n\\n      int in_h = h / ${t};\\n      int offset_h = imod(h, ${t});\\n      int in_w = w / ${t};\\n      int offset_w = imod(w, ${t});\\n      int offset_d = (offset_h * ${t} + offset_w) *\\n        ${this.getOutputDepthSize()};\\n      int in_d = d + offset_d;\\n\\n      float result = ${this.getInputSamplingString()};\\n      setOutput(result);\\n    }\\n  `}getHeightCoordString(){return"NHWC"===this.dataFormat?"coords[1]":"coords[2]"}getWidthCoordString(){return"NHWC"===this.dataFormat?"coords[2]":"coords[3]"}getDepthCoordString(){return"NHWC"===this.dataFormat?"coords[3]":"coords[1]"}getOutputDepthSize(){return"NHWC"===this.dataFormat?this.outputShape[3]:this.outputShape[1]}getInputSamplingString(){return"NHWC"===this.dataFormat?"getX(b, in_h, in_w, in_d)":"getX(b, in_d, in_h, in_w)"}}const EB={kernelName:Ut,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{blockSize:a,dataFormat:i}=r,o=s.shape[0],u=("NHWC"===i?s.shape[1]:s.shape[2])*a,l=("NHWC"===i?s.shape[2]:s.shape[3])*a,c=("NHWC"===i?s.shape[3]:s.shape[1])/(a*a),h=new TB("NHWC"===i?[o,u,l,c]:[o,c,u,l],a,i);return n.runWebGLProgram(h,[s],s.dtype)}};class CB{constructor(e,t=!1,n=null,r=!1,s=!1){this.variableNames=["x","W"],this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=YD(this.outputShape.length);const a=e.filterHeight,i=e.filterWidth,o=e.outChannels/e.inChannels;let u="",l="";n&&(u=r?`float activation(float a) {\\n          float b = getPreluActivationWeightsAtOutCoords();\\n          ${n}\\n        }`:s?`float activation(float a) {\\n          float b = getLeakyreluAlphaAtOutCoords();\\n          ${n}\\n        }`:`\\n          float activation(float x) {\\n            ${n}\\n          }\\n        `,l="result = activation(result);");const c=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),s&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\\n      ${u}\\n\\n      void main() {\\n        ivec4 coords = getOutputCoords();\\n        int batch = coords.x;\\n        ivec2 xRCCorner = coords.yz * strides - pads;\\n        int d2 = coords.w;\\n        int d1 = d2 / ${o};\\n        int q = d2 - d1 * ${o};\\n\\n        int xRCorner = xRCCorner.x;\\n        int xCCorner = xRCCorner.y;\\n\\n        // Convolve x(?, ?, d1) with w(:, :, d1, q) to get y(yR, yC, d2).\\n        // ? = to be determined. : = across all values in that axis.\\n        float dotProd = 0.0;\\n        // TO DO(dsmilkov): Flatten the two for loops and vec4 the operations.\\n        for (int wR = 0; wR < ${a}; wR++) {\\n          int xR = xRCorner + wR * dilations[0];\\n\\n          if (xR < 0 || xR >= inDims[0]) {\\n            continue;\\n          }\\n\\n          for (int wC = 0; wC < ${i}; wC++) {\\n            int xC = xCCorner + wC * dilations[1];\\n\\n            if (xC < 0 || xC >= inDims[1]) {\\n              continue;\\n            }\\n\\n            float xVal = getX(batch, xR, xC, d1);\\n            float wVal = getW(wR, wC, d1, q);\\n            dotProd += xVal * wVal;\\n          }\\n        }\\n\\n        float result = dotProd;\\n        ${c}\\n        ${l}\\n        setOutput(result);\\n      }\\n    `}}class $B{constructor(e,t=!1,n=null,r=!1,s=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=YD(this.outputShape.length);const a=e.outChannels/e.inChannels,i=e.padInfo.left,o=e.strideWidth,u=e.dilationWidth,l=e.filterHeight,c=e.filterWidth,h=c;let d="\\n      int xR; int xC; int xCOffset;\\n      vec4 wTexel; vec4 previous; vec4 final;";for(let e=0;e<c;e++)d+=`\\n          vec4 xTexelC${2*e};\\n          int xTexelC${2*e}Ready;\\n          vec4 xTexelC${2*e+1};\\n          int xTexelC${2*e+1}Ready;\\n          vec4 xC${e};`;d+=`\\n    for (int r = 0; r < ${l}; r++) {\\n      `;for(let e=0;e<c;e++)d+=`\\n          xTexelC${2*e} = vec4(0.0);\\n          xTexelC${2*e}Ready = 0;\\n          xTexelC${2*e+1} = vec4(0.0);\\n          xTexelC${2*e+1}Ready = 0;\\n          xC${e} = vec4(0.0);`;d+="\\n        xR = xRCorner + r * dilations[0];\\n        if (xR >=0 && xR < inDims[0]) {\\n      ";for(let e=0;e<(h+1)/2;e++){const t=2*e;if(d+=`\\n          xC = xCCorner + ${t*u};\\n          `,1===o){if(t<c&&(i%2==1?(d+=`\\n                xCOffset = xC + 1;\\n                if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t}Ready == 0) {\\n                  xTexelC${t} = getX(batch, xR, xCOffset, d1);\\n\\n                  // Need to manually clear unused channels in case\\n                  // we\'re reading from recycled texture.\\n                  if (xCOffset + 1 >= inDims[1]) {\\n                    xTexelC${t}.zw = vec2(0.0);\\n                  }\\n                  xTexelC${t}Ready = 1;\\n                }\\n              `,d+=1===u&&t>0?`\\n                xC${t} = vec4(xTexelC${t-2}.zw, xTexelC${t}.xy);\\n                `:`\\n                  xCOffset = xC + 1 - 2;\\n\\n                  if (xCOffset >= 0 && xCOffset < inDims[1]) {\\n                    previous = getX(batch, xR, xCOffset, d1);\\n\\n                    // Need to manually clear unused channels in case\\n                    // we\'re reading from recycled texture.\\n                    if (xCOffset + 1 >= inDims[1]) {\\n                      previous.zw = vec2(0.0);\\n                    }\\n\\n                    xC${t} = vec4(previous.zw, xTexelC${t}.xy);\\n                  } else {\\n                    xC${t} = vec4(0.0, 0.0, xTexelC${t}.xy);\\n                  }\\n                  `):d+=`\\n                if (xC >= 0 && xC < inDims[1] && xTexelC${t}Ready == 0) {\\n                  xTexelC${t} = getX(batch, xR, xC, d1);\\n                  if (xC + 1 >= inDims[1]) {\\n                    xTexelC${t}.zw = vec2(0.0);\\n                  }\\n                  xTexelC${t}Ready = 1;\\n                }\\n\\n                xC${t} = xTexelC${t};\\n                `,t+1<c)){const e=i%2==0?te(u):u;u%2==0&&i%2==1||u%2!=0&&i%2!=1?(d+=`\\n                  xCOffset = xC + imod(pads[1], 2) + ${e};\\n\\n                  if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t+1}Ready == 0) {\\n                    xTexelC${t+1} = getX(batch, xR, xCOffset, d1);\\n\\n                    // Need to manually clear unused channels in case\\n                    // we\'re reading from recycled texture.\\n                    if (xCOffset + 1 >= inDims[1]) {\\n                      xTexelC${t+1}.zw = vec2(0.0);\\n                    }\\n                    xTexelC${t+1}Ready = 1;\\n                  }\\n                  `,d+=u>1?`\\n                    xCOffset -= 2;\\n                    if (xCOffset >= 0 && xCOffset < inDims[1]) {\\n                     previous = getX(batch, xR, xCOffset, d1);\\n                     xC${t+1} = vec4(previous.zw, xTexelC${t+1}.xy);\\n                    } else {\\n                     xC${t+1} = vec4(0.0, 0.0, xTexelC${t+1}.xy);\\n                    }\\n                    `:`\\n                    xC${t+1} = vec4(xTexelC${t}.zw, xTexelC${t+1}.xy);\\n                    `):d+=1===e?`\\n                    xC${t+1} = xTexelC${t};\\n                    `:`\\n                    xCOffset = xC + ${e};\\n\\n                    if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t+1}Ready == 0) {\\n                      xTexelC${t+1} = getX(batch, xR, xCOffset, d1);\\n                      if (xCOffset + 1 >= inDims[1]) {\\n                        xTexelC${t+1}.zw = vec2(0.0);\\n                      }\\n                      xTexelC${t+1}Ready = 1;\\n                    }\\n\\n                    xC${t+1} = xTexelC${t+1};\\n                    `}}else t<c&&(i%2==1?(d+=`\\n                xCOffset = xC + 1 - strides[1];\\n                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t}Ready == 0) {\\n                  xTexelC${t} = getX(batch, xR, xCOffset, d1);\\n                  // Need to manually clear unused channels in case\\n                  // we\'re reading from recycled texture.\\n                  if (xCOffset + 1 >= inDims[1]) {\\n                    xTexelC${t}.zw = vec2(0.0);\\n                  }\\n                  xTexelC${t}Ready = 1;\\n                }\\n\\n                if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC${t+1}Ready == 0) {\\n                  xTexelC${t+1} = getX(batch, xR, xC + 1, d1);\\n                  // Need to manually clear unused channels in case\\n                  // we\'re reading from recycled texture.\\n                  if (xC + 2 >= inDims[1]) {\\n                    xTexelC${t+1}.zw = vec2(0.0);\\n                  }\\n                  xTexelC${t+1}Ready = 1;\\n                }\\n\\n                xC${t} = vec4(xTexelC${t}.zw, xTexelC${t+1}.zw);\\n              `,t+1<c&&(d+=`\\n                  final = vec4(0.0);\\n                  xCOffset = xC + 1 + strides[1];\\n                  if(xCOffset >= 0 && xCOffset < inDims[1]) {\\n                    final = getX(batch, xR, xCOffset, d1);\\n                  }\\n                  xC${t+1} = vec4(xTexelC${t+1}.xy, final.xy);\\n                `)):(d+=`\\n                if(xC >= 0 && xC < inDims[1] && xTexelC${t}Ready == 0) {\\n                  xTexelC${t} = getX(batch, xR, xC, d1);\\n                  if (xC + 1 >= inDims[1]) {\\n                    xTexelC${t}.zw = vec2(0.0);\\n                  }\\n                  xTexelC${t}Ready = 1;\\n                }\\n\\n                xCOffset = xC + strides[1];\\n                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t+1}Ready == 0) {\\n                  xTexelC${t+1} = getX(batch, xR, xCOffset, d1);\\n                  if (xCOffset + 1 >= inDims[1]) {\\n                    xTexelC${t+1}.zw = vec2(0.);\\n                  }\\n                  xTexelC${t+1}Ready = 1;\\n                }\\n\\n                xC${t} = vec4(\\n                  xTexelC${t}.xy, xTexelC${t+1}.xy);\\n              `,t+1<c&&(d+=`\\n                  xC${t+1} = vec4(xTexelC${t}.zw, xTexelC${t+1}.zw);\\n                `)));t<c&&(d+=`\\n            wTexel = getW(r, ${t}, d1, q);\\n            dotProd += xC${t} * vec4(wTexel.xz, wTexel.xz);\\n          `,t+1<c&&(d+=`\\n              wTexel = getW(r, ${t+1}, d1, q);\\n              dotProd += xC${t+1} * vec4(wTexel.xz, wTexel.xz);\\n            `))}d+="\\n    }\\n  ",d+="\\n      }\\n    ";let p="",f="";n&&(p=r?`vec4 activation(vec4 a) {\\n          vec4 b = getPreluActivationWeightsAtOutCoords();\\n          ${n}\\n        }`:s?`vec4 activation(vec4 a) {\\n          vec4 b = getLeakyreluAlphaAtOutCoords();\\n          ${n}\\n        }`:`vec4 activation(vec4 x) {\\n          ${n}\\n        }`,f="result = activation(result);");const m=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),s&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\\n      ${p}\\n\\n      void main() {\\n        ivec4 coords = getOutputCoords();\\n        int batch = coords.x;\\n        ivec2 xRCCorner = coords.yz * strides - pads;\\n        int d2 = coords.w;\\n        int d1 = d2 / ${a};\\n        int q = d2 - d1 * ${a};\\n        int xRCorner = xRCCorner.x;\\n        int xCCorner = xRCCorner.y;\\n\\n        //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.\\n        vec4 dotProd = vec4(0.000000000000001);\\n\\n        ${d}\\n\\n        vec4 result = dotProd - vec4(0.000000000000001);\\n        ${m}\\n        ${f}\\n        setOutput(result);\\n      }\\n    `}}const AB={kernelName:Wt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:a}=t,{strides:i,pad:o,dilations:u,dimRoundingMode:l}=r;let c=u;null==c&&(c=[1,1]),ie(ec(i,c),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${i} and dilations \'${c}\'`);const h=jl(s.shape,a.shape,i,c,o,l,!0);let d;d=Xe().getBool("WEBGL_PACK_DEPTHWISECONV")&&h.strideWidth<=2&&h.outChannels/h.inChannels===1?new $B(h):new CB(h);const p=[[h.padInfo.top,h.padInfo.left],[h.strideHeight,h.strideWidth],[h.dilationHeight,h.dilationWidth],[h.inHeight,h.inWidth]];return n.runWebGLProgram(d,[s,a],"float32",p)}};class RB{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideHeight,n=e.strideWidth,r=e.padInfo.top,s=e.padInfo.left,a=e.outChannels/e.inChannels;this.userCode=`\\n      void main() {\\n        ivec4 coords = getOutputCoords();\\n        int wR = coords.x;\\n        int wC = coords.y;\\n        int d1 = coords.z;\\n        int dm = coords.w;\\n        int d2 = d1 * ${a} + dm;\\n\\n        float dotProd = 0.0;\\n\\n        // TO DO: Vec4 over the batch size\\n        for (int b = 0; b < ${e.batchSize}; b++) {\\n          for (int yR = 0; yR < ${e.outHeight}; yR++) {\\n            int xR = wR + yR * ${t} - ${r};\\n\\n            if (xR < 0 || xR >= ${e.inHeight}) {\\n              continue;\\n            }\\n\\n            for (int yC = 0; yC < ${e.outWidth}; yC++) {\\n              int xC = wC + yC * ${n} - ${s};\\n\\n              if (xC < 0 || xC >= ${e.inWidth}) {\\n                continue;\\n              }\\n\\n              float dyValue = getDy(b, yR, yC, d2);\\n              float xValue = getX(b, xR, xC, d1);\\n              dotProd += (xValue * dyValue);\\n            }\\n          }\\n        }\\n        setOutput(dotProd);\\n      }\\n    `}}class _B{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterHeight,n=e.filterWidth,r=e.strideHeight,s=e.strideWidth,a=t-1-e.padInfo.top,i=n-1-e.padInfo.left,o=e.outChannels/e.inChannels;this.userCode=`\\n      const ivec2 pads = ivec2(${a}, ${i});\\n\\n      void main() {\\n        ivec4 coords = getOutputCoords();\\n        int batch = coords[0];\\n        int d1 = coords[3];\\n        ivec2 dyCorner = coords.yz - pads;\\n        int dyRCorner = dyCorner.x;\\n        int dyCCorner = dyCorner.y;\\n\\n        float dotProd = 0.0;\\n\\n        for (int wR = 0; wR < ${t}; wR++) {\\n          float dyR = float(dyRCorner + wR) / ${r}.0;\\n\\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\\n            continue;\\n          }\\n          int idyR = int(dyR);\\n\\n          int wRPerm = ${t} - 1 - wR;\\n\\n          for (int wC = 0; wC < ${n}; wC++) {\\n            float dyC = float(dyCCorner + wC) / ${s}.0;\\n\\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\\n                fract(dyC) > 0.0) {\\n              continue;\\n            }\\n            int idyC = int(dyC);\\n\\n            int wCPerm = ${n} - 1 - wC;\\n\\n            // TO DO: Vec4 over the channelMul\\n            for (int dm = 0; dm < ${o}; dm++) {\\n              int d2 = d1 * ${o} + dm;\\n              float xValue = getDy(batch, idyR, idyC, d2);\\n              float wValue = getW(wRPerm, wCPerm, d1, dm);\\n              dotProd += xValue * wValue;\\n            }\\n          }\\n        }\\n        setOutput(dotProd);\\n      }\\n    `}}const MB={kernelName:Gt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,dy:a}=t,{strides:i,dilations:o,pad:u,dimRoundingMode:l,filterShape:c}=r,h=jl(s.shape,c,i,o,u,l,!0),d=new RB(h);return n.runWebGLProgram(d,[s,a],"float32")}},FB={kernelName:Ht,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,filter:a}=t,{strides:i,dilations:o,pad:u,dimRoundingMode:l,inputShape:c}=r,h=jl(c,a.shape,i,o,u,l,!0),d=new _B(h);return n.runWebGLProgram(d,[s,a],"float32")}};class DB{constructor(e){this.variableNames=["X"],this.outputShape=[e,e],this.userCode="\\n      void main() {\\n          ivec2 coords = getOutputCoords();\\n          float val = coords[0] == coords[1] ? getX(coords[0]) : 0.0;\\n          setOutput(val);\\n      }\\n    "}}const OB={kernelName:jt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r}=t,s=[...r.shape,...r.shape],a=le(r.shape),i=fz({inputs:{x:r},backend:n,attrs:{shape:[a]}}),o=new DB(a),u=n.runWebGLProgram(o,[i],i.dtype),l=fz({inputs:{x:u},backend:n,attrs:{shape:s}});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(u),l}};class LB{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;const{inHeight:t,inWidth:n,padInfo:r,strideHeight:s,strideWidth:a,filterHeight:i,filterWidth:o,dilationHeight:u,dilationWidth:l}=e,{top:c,left:h}=r;this.userCode=`\\n      const ivec2 strides = ivec2(${s}, ${a});\\n      const ivec2 pads = ivec2(${c}, ${h});\\n      const float neg_infinity = -3.4e38;\\n\\n      void main() {\\n        ivec4 coords = getOutputCoords();\\n        int batch = coords.x;\\n        int d1 = coords.w;\\n        ivec2 outTopLeftCorner =\\n            coords.yz * strides - pads;\\n        int hBeg = outTopLeftCorner.x;\\n        int wBeg = outTopLeftCorner.y;\\n\\n        float curVal = neg_infinity;\\n        for (int h = 0; h < ${i}; h++) {\\n          int hIn = hBeg + h * ${u};\\n\\n          if (hIn >= 0 && hIn < ${t}) {\\n            for (int w = 0; w < ${o}; w++) {\\n              int wIn = wBeg + w * ${l};\\n\\n              if (wIn >= 0 && wIn < ${n}) {\\n                float xVal = getX(batch, hIn, wIn, d1);\\n                float wVal = getW(h, w, d1);\\n\\n                float val = xVal + wVal;\\n                if (val > curVal) {\\n                  curVal = val;\\n                }\\n              }\\n            }\\n          }\\n        }\\n\\n        float result = curVal;\\n        setOutput(result);\\n      }\\n    `}}const zB={kernelName:qt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:a}=t,{strides:i,pad:o,dilations:u}=r,l=Wl(s.shape,a.shape,i,o,"NHWC",u);let c;const h=new LB(l);c=n.runWebGLProgram(h,[s,a],"float32");const d=fz({inputs:{x:c},backend:n,attrs:{shape:l.outShape}});return n.disposeIntermediateTensorInfo(c),d}},PB={kernelName:Zt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{equation:s}=r,a=t,{allDims:i,summedDims:o,idDims:u}=Sm(s,a.length);Tm(i.length,u,a);const{path:l,steps:c}=Em(o,u),h=c.length;let d=null,p=i.length;const f=[];for(let e=0;e<h;++e){for(const t of c[e]){const{permutationIndices:e,expandDims:r}=Nm(p,u[t]);let s;Cm(e)?s=a[t]:(s=Sz({inputs:{x:a[t]},backend:n,attrs:{perm:e}}),f.push(s));const i=s.shape.slice();for(let e=0;e<r.length;++e)i.splice(r[e],0,1);de(s.shape,i)||(s=fz({inputs:{x:s},backend:n,attrs:{shape:i}}),f.push(s)),null===d?d=s:(d=dz({inputs:{a:s,b:d},backend:n}),f.push(d))}e<h-1&&(l[e]>=0&&(d=kz({inputs:{x:d},backend:n,attrs:{axis:l[e]-(i.length-p),keepDims:!1}}),f.push(d)),p--)}for(const e of f)e!==d&&n.disposeIntermediateTensorInfo(e);return d}},BB=iz({opSnippet:"return (x >= 0.0) ? x : (exp(x) - 1.0);",packedOpSnippet:"\\n  vec4 result;\\n\\n  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);\\n  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);\\n  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);\\n  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);\\n\\n  return result;\\n"}),VB={kernelName:Qt,backendName:"webgl",kernelFunc:BB},UB={kernelName:en,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n}=e,{dy:r,y:s}=t,a=Xe().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new KL("\\n  vec4 bGTEZero = vec4(greaterThanEqual(b, vec4(0.)));\\n  return (bGTEZero * a) + ((vec4(1.0) - bGTEZero) * (a * (b + vec4(1.0))));\\n",r.shape,s.shape):new jL("return (b >= 0.0) ? a : a * (b + 1.0);",r.shape,s.shape);return n.runWebGLProgram(a,[r,s],r.dtype)}},WB=oz({opSnippet:"return float(a == b);",packedOpSnippet:"\\n  return vec4(equal(a, b));\\n",dtype:"bool",cpuKernelImpl:FO}),GB={kernelName:nn,backendName:"webgl",kernelFunc:WB},HB=iz({opSnippet:`\\n  // Error function is calculated approximately with elementary function.\\n  // See "Handbook of Mathematical Functions with Formulas,\\n  // Graphs, and Mathematical Tables", Abramowitz and Stegun.\\n  float p = ${im};\\n  float a1 = ${om};\\n  float a2 = ${um};\\n  float a3 = ${lm};\\n  float a4 = ${cm};\\n  float a5 = ${hm};\\n\\n  float sign = sign(x);\\n  x = abs(x);\\n  float t = 1.0 / (1.0 + p * x);\\n  return sign * (1.0 - (((((a5*t + a4)*t) + a3)*t + a2)*t + a1)*t*exp(-x*x));\\n`}),jB={kernelName:tn,backendName:"webgl",kernelFunc:HB},qB=iz({opSnippet:az+"\\n  return exp(x);\\n",packedOpSnippet:"\\n  vec4 result = exp(x);\\n  bvec4 isNaN = isnan(x);\\n  result.r = isNaN.r ? x.r : result.r;\\n  result.g = isNaN.g ? x.g : result.g;\\n  result.b = isNaN.b ? x.b : result.b;\\n  result.a = isNaN.a ? x.a : result.a;\\n\\n  return result;\\n",cpuKernelImpl:DO,dtype:"float32"}),KB={kernelName:rn,backendName:"webgl",kernelFunc:qB};function XB(e){const{inputs:t,attrs:n,backend:r}=e,{dim:s}=n,{input:a}=t,i=a.shape.length,o=a.shape.slice();let u=s;return s<0&&(ie(-(i+1)<=s,()=>`Axis must be in the interval [${-(i+1)}, ${i}]`),u=i+s+1),o.splice(u,0,1),fz({inputs:{x:a},backend:r,attrs:{shape:o}})}const YB={kernelName:sn,backendName:"webgl",kernelFunc:XB},JB="return exp(x) - 1.0;",ZB=iz({opSnippet:JB,packedOpSnippet:JB,cpuKernelImpl:OO}),QB={kernelName:an,backendName:"webgl",kernelFunc:ZB};class eV{constructor(e,t,n){this.variableNames=["real","imag"];const r=t[1];this.outputShape=t;const s=n?`2.0 * ${Math.PI}`:`-2.0 * ${Math.PI}`,a=n?`${r}.0`:"1.0";let i;if("real"===e)i="return real * expR - imag * expI;";else{if("imag"!==e)throw new Error(`FFT component must be either "real" or "imag", got ${e}.`);i="return real * expI + imag * expR;"}this.userCode=`\\n      const float exponentMultiplier = ${s};\\n\\n      float unaryOpComplex(float real, float expR, float imag, float expI) {\\n        ${i}\\n      }\\n\\n      float mulMatDFT(int batch, int index) {\\n        float indexRatio = float(index) / float(${r});\\n        float exponentMultiplierTimesIndexRatio =\\n            exponentMultiplier * indexRatio;\\n\\n        float result = 0.0;\\n\\n        for (int i = 0; i < ${r}; i++) {\\n          // x = (-2|2 * PI / N) * index * i;\\n          float x = exponentMultiplierTimesIndexRatio * float(i);\\n          float expR = cos(x);\\n          float expI = sin(x);\\n          float real = getReal(batch, i);\\n          float imag = getImag(batch, i);\\n\\n          result +=\\n              unaryOpComplex(real, expR, imag, expI) / ${a};\\n        }\\n\\n        return result;\\n      }\\n\\n      void main() {\\n        ivec2 coords = getOutputCoords();\\n        setOutput(mulMatDFT(coords[0], coords[1]));\\n      }\\n    `}}function tV(e,t,n){const r=n.texData.get(e.dataId),s=le(e.shape),a=e.shape[e.shape.length-1],i=fz({inputs:{x:e},backend:n,attrs:{shape:[s/a,a]}}),o=i.shape,u=new eV("real",o,t),l=new eV("imag",o,t),c=[{dataId:r.complexTensorInfos.real.dataId,dtype:r.complexTensorInfos.real.dtype,shape:o},{dataId:r.complexTensorInfos.imag.dataId,dtype:r.complexTensorInfos.imag.dtype,shape:o}],h=n.runWebGLProgram(u,c,"float32"),d=n.runWebGLProgram(l,c,"float32"),p=JL({inputs:{real:h,imag:d},backend:n});n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(d);const f=fz({inputs:{x:p},backend:n,attrs:{shape:e.shape}});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(p),f}const nV={kernelName:on,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:r}=t;return tV(r,!1,n)}};class rV{constructor(e,t){this.outputShape=[],this.customUniforms=[{name:"value",type:"float"}],this.variableNames=["x"],this.outputShape=e,this.userCode="\\n      void main() {\\n        // Input can be obtained from uniform value.\\n        setOutput(value);\\n      }\\n    "}}function sV(e){const{backend:t,attrs:n}=e,{shape:r,value:s}=n;let{dtype:a}=n;if(a=a||_e(s),"string"===a){const e=Ie(a,le(r));return e.fill(s),t.makeTensorInfo(r,a,e)}{const e=new rV(r,s),n=[[s]];return t.runWebGLProgram(e,[],a,n)}}const aV={kernelName:un,backendName:"webgl",kernelFunc:sV};class iV{constructor(e){this.variableNames=["Image"],this.outputShape=[];const t=e[2];this.outputShape=e,this.userCode=`\\n        void main() {\\n          ivec4 coords = getOutputCoords();\\n          int x = coords[2];\\n\\n          int coordX = ${t} - x - 1;\\n          float outputValue;\\n          if(coordX >= 0 && coordX < ${t}) {\\n            outputValue = getImage(coords[0], coords[1], coordX, coords[3]);\\n          } else {\\n            outputValue = getImage(coords[0], coords[1], coords[2], coords[3]);\\n          }\\n          setOutput(outputValue);\\n        }\\n    `}}const oV={kernelName:ln,backendName:"webgl",kernelFunc:({inputs:e,backend:t})=>{const{image:n}=e,r=t,s=new iV(n.shape);return r.runWebGLProgram(s,[n],n.dtype)}},uV="return floor(x);",lV=iz({opSnippet:uV,packedOpSnippet:uV,cpuKernelImpl:LO}),cV={kernelName:cn,backendName:"webgl",kernelFunc:lV},hV=oz({opSnippet:"\\n  float s = sign(a) * sign(b);\\n  int ia = round(a);\\n  int ib = round(b);\\n  if (ib != 0) {\\n    // Windows (D3D) wants guaranteed non-zero int division at compile-time.\\n    return float(idiv(ia, ib, s));\\n  } else {\\n    return NAN;\\n  }\\n",packedOpSnippet:"\\n  ivec4 ia = round(a);\\n  ivec4 ib = round(b);\\n  bvec4 cond = notEqual(ib, ivec4(0));\\n  ivec4 result = ivec4(0);\\n  vec4 s = sign(a) * sign(b);\\n\\n  // Windows (D3D) wants guaranteed non-zero int division at compile-time.\\n  if (cond[0]) {\\n    result[0] = idiv(ia[0], ib[0], s[0]);\\n  }\\n  if (cond[1]) {\\n    result[1] = idiv(ia[1], ib[1], s[1]);\\n  }\\n  if (cond[2]) {\\n    result[2] = idiv(ia[2], ib[2], s[2]);\\n  }\\n  if (cond[3]) {\\n    result[3] = idiv(ia[3], ib[3], s[3]);\\n  }\\n  return vec4(result);\\n",dtype:"int32"}),dV={kernelName:hn,backendName:"webgl",kernelFunc:hV};class pV{constructor(e){this.variableNames=["A"];const t=$D(),[n,r]=e;this.outputShape=e,this.userCode=`\\n      void main() {\\n        ivec3 coords = getOutputCoords();\\n        int texR = coords[0];\\n        int texC = coords[1];\\n        int depth = coords[2];\\n        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${r}.0, ${n}.0);\\n\\n        vec4 values = ${t.texture2D}(A, uv);\\n        float value;\\n        if (depth == 0) {\\n          value = values.r;\\n        } else if (depth == 1) {\\n          value = values.g;\\n        } else if (depth == 2) {\\n          value = values.b;\\n        } else if (depth == 3) {\\n          value = values.a;\\n        }\\n\\n        setOutput(floor(value * 255.0 + 0.5));\\n      }\\n    `}}class fV{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0;const t=$D(),[n,r]=e;this.outputShape=e,this.userCode=`\\n      void main() {\\n        ivec3 coords = getOutputCoords();\\n        int texR = coords[0];\\n        int texC = coords[1];\\n        int depth = coords[2];\\n\\n        vec4 result = vec4(0.);\\n\\n        for(int row=0; row<=1; row++) {\\n          for(int col=0; col<=1; col++) {\\n            texC = coords[1] + row;\\n            depth = coords[2] + col;\\n\\n            vec2 uv = (vec2(texC, texR) + halfCR) /\\n                       vec2(${r}.0, ${n}.0);\\n            vec4 values = ${t.texture2D}(A, uv);\\n            float value;\\n            if (depth == 0) {\\n              value = values.r;\\n            } else if (depth == 1) {\\n              value = values.g;\\n            } else if (depth == 2) {\\n              value = values.b;\\n            } else if (depth == 3) {\\n              value = values.a;\\n            }\\n\\n            result[row * 2 + col] = floor(value * 255.0 + 0.5);\\n          }\\n        }\\n\\n        ${t.output} = result;\\n      }\\n    `}}const mV={kernelName:fs,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e;let{pixels:s}=t;const{numChannels:a}=r,i="undefined"!=typeof HTMLVideoElement&&s instanceof HTMLVideoElement,o="undefined"!=typeof HTMLImageElement&&s instanceof HTMLImageElement,[u,l]=i?[s.videoWidth,s.videoHeight]:[s.width,s.height],c=[l,u],h=[l,u,a];if(o||i){const e=Xe().getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU");null!=gV&&e===yV||(yV=e,gV=document.createElement("canvas").getContext("2d",{willReadFrequently:yV})),gV.canvas.width=u,gV.canvas.height=l,gV.drawImage(s,0,0,u,l),s=gV.canvas}const d=n.makeTensorInfo(c,"int32");n.texData.get(d.dataId).usage=SF.PIXELS,n.gpgpu.uploadPixelDataToTexture(n.getTexture(d.dataId),s);const p=Xe().getBool("WEBGL_PACK")?new fV(h):new pV(h),f=n.runWebGLProgram(p,[d],"int32");return n.disposeData(d.dataId),f}};let gV,yV=Xe().getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU");const bV={kernelName:ys,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:a,bias:i,preluActivationWeights:o}=t,{strides:u,pad:l,dataFormat:c,dilations:h,dimRoundingMode:d,activation:p,leakyreluAlpha:f}=r,m=nc(c),g=jl(s.shape,a.shape,u,h,l,d,!1,m);let y;const b=[],x=null!=i,w=null!=o,v="leakyrelu"===p,k=()=>{const e=[s,a],t=(e,t)=>{if("NCHW"===t&&1===e.shape.length&&1!==e.shape[0]){const t=fz({inputs:{x:e},backend:n,attrs:{shape:[e.shape[0],1,1]}});return b.push(t),t}return e};if(x&&e.push(t(i,c)),w&&e.push(t(o,c)),v){const t=n.makeTensorInfo([],"float32",qs(f,"float32"));e.push(t),b.push(t)}return e};if(1!==g.filterHeight||1!==g.filterWidth||1!==g.dilationHeight||1!==g.dilationWidth||1!==g.strideHeight||1!==g.strideWidth||"SAME"!==g.padInfo.type&&"VALID"!==g.padInfo.type)if(g.strideWidth<=2&&"channelsLast"===m&&Xe().getBool("WEBGL_EXP_CONV")){const e=p?uz(p,!0):null,t=new YP(g,x,e,w,v),r=[[g.padInfo.top,g.padInfo.left],[g.strideHeight,g.strideWidth],[g.dilationHeight,g.dilationWidth],[g.inHeight,g.inWidth]],s=k();y=n.runWebGLProgram(t,s,"float32",r)}else if(Xe().getBool("WEBGL_CONV_IM2COL"))y=eB({x:s,filter:a,convInfo:g,backend:n,bias:i,activation:p,preluActivationWeights:o,leakyreluAlpha:f});else{const e=p?uz(p,!1):null,t=new KP(g,x,e,w,v),r=k();y=n.runWebGLProgram(t,r,"float32")}else y=QP({x:s,filter:a,convInfo:g,backend:n,bias:i,activation:p,preluActivationWeights:o,leakyreluAlpha:f});const I=fz({inputs:{x:y},backend:n,attrs:{shape:g.outShape}});return b.push(y),b.forEach(e=>n.disposeIntermediateTensorInfo(e)),I}},xV={kernelName:bs,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:a,bias:i,preluActivationWeights:o}=t,{strides:u,pad:l,dilations:c,dimRoundingMode:h,activation:d,leakyreluAlpha:p}=r,f=[];let m=c;null==m&&(m=[1,1]),ie(ec(u,m),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${u} and dilations \'${m}\'`);const g=jl(s.shape,a.shape,u,m,l,h,!0),y=Xe().getBool("WEBGL_PACK_DEPTHWISECONV")&&g.strideWidth<=2&&g.outChannels/g.inChannels===1,b=d?uz(d,y):null,x=[s,a],w=null!=i,v=null!=o,k="leakyrelu"===d;if(w&&x.push(i),v&&x.push(o),k){const e=n.makeTensorInfo([],"float32",qs(p,"float32"));x.push(e),f.push(e)}let I;I=y?new $B(g,w,b,v,k):new CB(g,w,b,v,k);const S=[[g.padInfo.top,g.padInfo.left],[g.strideHeight,g.strideWidth],[g.dilationHeight,g.dilationWidth],[g.inHeight,g.inWidth]],N=n.runWebGLProgram(I,x,"float32",S);return f.forEach(e=>n.disposeIntermediateTensorInfo(e)),N}};class wV{constructor(e,t,n,r){this.sliceDim=e,this.strides=t,this.paramsShape=r,this.variableNames=["x","indices"],this.outputShape=n;const s=GD(n.length);let a="\\n    int index;";for(let e=0;e<this.sliceDim;e++)a+=`\\n          index = round(getIndices(coords[0], ${e}));\\n          out_of_bounds = out_of_bounds || index < 0;\\n          out_of_bounds = out_of_bounds || index >= ${this.paramsShape[e]};\\n          flattenIndex += index * ${this.strides[e]};`;this.userCode=`\\n         void main() {\\n          ${s} coords = getOutputCoords();\\n          int flattenIndex = 0;\\n          bool out_of_bounds = false;\\n\\n          ${a}\\n\\n          setOutput(out_of_bounds ? 0.0 : getX(flattenIndex, coords[1]));\\n        }\\n      `}}const vV={kernelName:fn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{params:r,indices:s}=t,a=s.shape,i=a[a.length-1],o=le(r.shape),[u,l,c,h]=ju(r,s),d=fz({inputs:{x:s},backend:n,attrs:{shape:[l,i]}}),p=fz({inputs:{x:r},backend:n,attrs:{shape:[le(r.shape)/c,c]}});if(n.shouldExecuteOnCPU([r,s])||"string"===r.dtype){const e=n.readSync(s.dataId),t=n.bufferSync(r),a=zO(e,t,r.dtype,l,i,c,h,r.shape,o);return n.makeTensorInfo(u,r.dtype,a.values)}const f=new wV(i,h,[l,c],r.shape),m=n.runWebGLProgram(f,[p,d],p.dtype),g=fz({inputs:{x:m},backend:n,attrs:{shape:u}});return n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(m),g}};class kV{constructor(e,t){this.variableNames=["A","indices"],this.outputShape=t,this.rank=t.length;const n=GD(this.rank),r=function(e){const t=["resRC.x","resRC.y","resRC.z","resRC.w"],n=[];for(let r=0;r<e.length;r++)2===r?n.push("index"):n.push(`${t[r]}`);return n.join()}(e);this.userCode=`\\n      void main() {\\n        ${n} resRC = getOutputCoords();\\n        int index = int(getIndices(resRC.x, resRC.z));\\n        float inBounds = (index >= 0) && (index < ${e[2]}) ? 1.0 : 0.0;\\n        setOutput(inBounds * getA(${r}));\\n      }\\n    `}}function IV(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,indices:a}=t,{axis:i,batchDims:o}=r,u=we(i,s.shape)[0];if(Xe().get("DEBUG")){const e=n.readSync(a.dataId),t=s.shape[u];for(let n=0;n<e.length;++n){const r=e[n];ie(r<=t-1&&r>=0,()=>`GatherV2: the index value ${r} is not in [0, ${t-1}]`)}}const l=Hm(s,a,u,o),c=le(a.shape),h=[],d=fz({inputs:{x:s},backend:n,attrs:{shape:[l.batchSize,l.outerSize,l.dimSize,l.sliceSize]}}),p=fz({inputs:{x:a},backend:n,attrs:{shape:[l.batchSize,c/l.batchSize]}});h.push(d),h.push(p);const f=[l.batchSize,l.outerSize,c/l.batchSize,l.sliceSize];if(n.shouldExecuteOnCPU([s,a])||"string"===s.dtype){const e=n.bufferSync(p),t=n.bufferSync(d),r=PO(t,e,f);return h.forEach(e=>n.disposeIntermediateTensorInfo(e)),n.makeTensorInfo(l.outputShape,r.dtype,r.values)}const m=new kV(d.shape,f),g=n.runWebGLProgram(m,[d,p],d.dtype);h.push(g);const y=fz({inputs:{x:g},backend:n,attrs:{shape:l.outputShape}});return h.forEach(e=>n.disposeIntermediateTensorInfo(e)),y}const SV={kernelName:pn,backendName:"webgl",kernelFunc:IV},NV=oz({opSnippet:"return float(a > b);",packedOpSnippet:"\\n  return vec4(greaterThan(a, b));\\n",cpuKernelImpl:BO,dtype:"bool"}),TV={kernelName:mn,backendName:"webgl",kernelFunc:NV},EV=oz({opSnippet:"return float(a >= b);",packedOpSnippet:"\\n  return vec4(greaterThanEqual(a, b));\\n",dtype:"bool",cpuKernelImpl:VO}),CV={kernelName:gn,backendName:"webgl",kernelFunc:EV},$V={kernelName:bn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:r}=t;return tV(r,!0,n)}},AV=iz({opSnippet:"return float(!isnan(x) && !isinf(x));",dtype:"bool"}),RV={kernelName:wn,backendName:"webgl",kernelFunc:AV},_V=iz({opSnippet:"return float(isinf(x));",dtype:"bool"}),MV={kernelName:vn,backendName:"webgl",kernelFunc:_V},FV=iz({opSnippet:"return float(isnan(x));",dtype:"bool"}),DV={kernelName:kn,backendName:"webgl",kernelFunc:FV},OV=oz({opSnippet:"return float(a < b);",packedOpSnippet:"\\n  return vec4(lessThan(a, b));\\n",cpuKernelImpl:UO,dtype:"bool"}),LV={kernelName:Sn,backendName:"webgl",kernelFunc:OV},zV=oz({opSnippet:"return float(a <= b);",packedOpSnippet:"\\n  return vec4(lessThanEqual(a, b));\\n",cpuKernelImpl:WO,dtype:"bool"}),PV={kernelName:Nn,backendName:"webgl",kernelFunc:zV},BV={kernelName:Tn,backendName:"webgl",kernelFunc:function(e){const{backend:t,attrs:n}=e,{start:r,stop:s,num:a}=n,i=GO(r,s,a);return t.makeTensorInfo([i.length],"float32",i)}},VV=iz({opSnippet:az+"\\n  return x < 0.0 ? 0./0. : log(x);\\n",packedOpSnippet:"\\n  vec4 result = log(x);\\n  bvec4 isNaN = isnan(x);\\n  result.r = isNaN.r ? x.r : (x.r < 0.0 ? 0./0. : result.r);\\n  result.g = isNaN.g ? x.g : (x.g < 0.0 ? 0./0. : result.g);\\n  result.b = isNaN.b ? x.b : (x.b < 0.0 ? 0./0. : result.b);\\n  result.a = isNaN.a ? x.a : (x.a < 0.0 ? 0./0. : result.a);\\n  return result;\\n",cpuKernelImpl:HO}),UV={kernelName:En,backendName:"webgl",kernelFunc:VV},WV=iz({opSnippet:az+"\\n  return log(1.0 + x);\\n"}),GV={kernelName:Cn,backendName:"webgl",kernelFunc:WV},HV=oz({opSnippet:"return float(a >= 1.0 && b >= 1.0);",packedOpSnippet:"\\n  return vec4(\\n    vec4(greaterThanEqual(a, vec4(1.0))) *\\n    vec4(greaterThanEqual(b, vec4(1.0))));\\n",dtype:"bool"}),jV={kernelName:$n,backendName:"webgl",kernelFunc:HV},qV=iz({opSnippet:"return float(!(x >= 1.0));"}),KV={kernelName:An,backendName:"webgl",kernelFunc:qV},XV=oz({opSnippet:"return float(a >= 1.0 || b >= 1.0);",packedOpSnippet:"\\n  return min(\\n    vec4(greaterThanEqual(a, vec4(1.0))) +\\n    vec4(greaterThanEqual(b, vec4(1.0))),\\n    vec4(1.0));\\n",dtype:"bool"}),YV={kernelName:Rn,backendName:"webgl",kernelFunc:XV};class JV{constructor(e,t,n,r,s){this.variableNames=["x"],this.outputShape=[];const a=t,i=e[3]-1;let o;this.outputShape=e;const u=`float(${n}) + float(${r}) * sum`;o=.5===s?`inversesqrt(${u})`:1===s?`1.0/(${u})`:`exp(log(${u}) * float(-${s}));`,this.userCode=`\\n      void main() {\\n        ivec4 coords = getOutputCoords();\\n        int b = coords[0];\\n        int r = coords[1];\\n        int c = coords[2];\\n        int d = coords[3];\\n        float x = getX(b, r, c, d);\\n        float sum = 0.0;\\n        for (int j = -${a}; j <= ${a}; j++) {\\n          int idx = d + j;\\n          if (idx >= 0 && idx <=  ${i}) {\\n            float z = getX(b, r, c, idx);\\n            sum += z * z;\\n          }\\n        }\\n        float val = x * ${o};\\n        setOutput(val);\\n      }\\n    `}}class ZV{constructor(e,t,n,r,s){this.variableNames=["x"],this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0;const a=t,i=e[3]-1;let o;this.outputShape=e;const u=`float(${n}) + float(${r}) * sum`;o=.5===s?`inversesqrt(${u})`:1===s?`1.0/(${u})`:`exp(log(${u}) * float(-${s}));`,this.userCode=`\\n      void main() {\\n        ivec4 coords = getOutputCoords();\\n        int b = coords.x;\\n        int r = coords.y;\\n        int c = coords.z;\\n        int d = coords.w;\\n\\n        bool hasNextCol = d < ${this.outputShape[3]};\\n        bool hasNextRow = c < ${this.outputShape[2]};\\n\\n        vec4 sum = vec4(0.);\\n        vec4 xFragAtOutputCoords = getX(b, r, c, d);\\n\\n        vec4 xAtOutputCoords = vec4(\\n          getChannel(xFragAtOutputCoords, vec2(c, d)),\\n          hasNextCol ?\\n            getChannel(xFragAtOutputCoords, vec2(c, d + 1)) : 0.0,\\n          hasNextRow ?\\n            getChannel(xFragAtOutputCoords , vec2(c + 1, d)) : 0.0,\\n          (hasNextRow && hasNextCol) ?\\n            getChannel(xFragAtOutputCoords, vec2(c + 1, d + 1)) : 0.0\\n        );\\n\\n        int firstChannel = d - ${a};\\n        vec2 cache = vec2(0.);\\n        if(firstChannel >= 0){\\n          vec4 firstChannelFrag = getX(b, r, c, firstChannel);\\n          cache.x = getChannel(firstChannelFrag, vec2(c, firstChannel));\\n            if(hasNextRow){\\n              cache.y = getChannel(firstChannelFrag, vec2(c + 1, firstChannel));\\n            }\\n        }\\n\\n        ivec2 depth = ivec2(d, d + 1);\\n        for (int j = - ${a}; j <= ${a}; j++) {\\n          ivec2 idx = depth + j;\\n          bvec2 aboveLowerBound = greaterThanEqual(idx, ivec2(0));\\n          bvec2 belowUpperBound = lessThanEqual(idx, ivec2(${i}));\\n\\n          bool depthInRange = aboveLowerBound.x && belowUpperBound.x;\\n          bool depthPlusOneInRange = aboveLowerBound.y && belowUpperBound.y;\\n\\n          if(depthInRange || depthPlusOneInRange){\\n            vec4 z = vec4(0.);\\n            vec4 xFragAtCurrentDepth;\\n            z.xz = cache.xy;\\n            if(depthPlusOneInRange && hasNextCol){\\n              xFragAtCurrentDepth = idx.y != d ?\\n                getX(b, r, c, idx.y) : xFragAtOutputCoords;\\n              z.y = getChannel(xFragAtCurrentDepth, vec2(c, idx.y));\\n              if(hasNextRow){\\n                z.w = getChannel(xFragAtCurrentDepth, vec2(c + 1, idx.y));\\n              }\\n            }\\n            cache.xy = z.yw;\\n            sum += z * z;\\n          }\\n        }\\n        vec4 result = xAtOutputCoords * ${o};\\n        setOutput(result);\\n      }\\n    `}}const QV={kernelName:Dn,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{depthRadius:a,bias:i,alpha:o,beta:u}=r,l=Xe().getBool("WEBGL_PACK_NORMALIZATION")?new ZV(s.shape,a,i,o,u):new JV(s.shape,a,i,o,u);return n.runWebGLProgram(l,[s],s.dtype)}};class eU{constructor(e,t,n,r,s){this.variableNames=["inputImage","outputImage","dy"],this.outputShape=[],this.outputShape=e,this.depth=e[3],this.depthRadius=t,this.bias=n,this.alpha=r,this.beta=s,this.userCode=`\\n      void main() {\\n        ivec4 coords = getOutputCoords();\\n        int b = coords[0];\\n        int r = coords[1];\\n        int c = coords[2];\\n\\n        float result = 0.0;\\n        for (int d = 0; d < ${this.depth}; ++d) {\\n          int depthBegin = int(max(0.0, float(d - ${t})));\\n          int depthEnd = int(min(float(${this.depth}),\\n              float(d + ${t} + 1)));\\n\\n          const int MIN_DEPTH_BEGIN = 0;\\n          const int MAX_DEPTH_END = ${this.depth};\\n\\n          float norm = 0.0;\\n          for (int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k) {\\n            if (k < depthBegin){\\n              continue;\\n            }\\n            else if (k >= depthBegin && k < depthEnd) {\\n              norm += getInputImage(b, r, c, k) * getInputImage(b, r, c, k);\\n            }\\n            else {\\n              break;\\n            }\\n          }\\n\\n          norm = float(${r}) * norm + float(${n});\\n\\n          for(int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k){\\n            if (k < depthBegin){\\n              continue;\\n            }\\n            else if (k >= depthBegin && k < depthEnd){\\n              float dyi = -2.0 * float(${r})\\n                * float(${s})\\n                * getInputImage(b, r, c, k) * getOutputImage(b, r, c, d)\\n                / norm;\\n              if (k == d) {\\n                dyi += pow(norm, -1.0 * ${s});\\n              }\\n              if (k == coords[3]) {\\n                dyi *= getDy(b, r, c, d);\\n                result += dyi;\\n              }\\n            }\\n            else {\\n              break;\\n            }\\n          }\\n      }\\n      setOutput(result);\\n      }\\n    `}}const tU={kernelName:On,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{x:s,y:a,dy:i}=t,{depthRadius:o,bias:u,alpha:l,beta:c}=r,h=new eU(s.shape,o,u,l,c);return n.runWebGLProgram(h,[s,a,i],s.dtype)}};function nU(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{reductionIndices:a,keepDims:i}=r,o=s.shape.length,u=we(a,s.shape);let l=u;const c=nh(l,o),h=null!=c,d=n.shouldExecuteOnCPU([s]);let p=s;if(h){if(d){const e=n.texData.get(p.dataId).values,t=new Array(o);for(let e=0;e<t.length;e++)t[e]=s.shape[c[e]];const r=wL(e,s.shape,s.dtype,c,t);p=n.makeTensorInfo(t,s.dtype),n.texData.get(p.dataId).values=r}else p=vz(s,c,n);l=sh(l.length,o)}th("max",l,o);const[f,m]=Qc(p.shape,l);let g,y=f;if(i&&(y=eh(f,u)),d){const e=n.texData.get(p.dataId).values,t=jO(e,le(m),y,s.dtype);g=n.makeTensorInfo(y,s.dtype),n.texData.get(g.dataId).values=t}else g=function(e,t,n,r){const s=le(t),a=fz({inputs:{x:e},attrs:{shape:[le(e.shape)/s,s]},backend:r}),i=bz(a,e.dtype,"max",r),o=fz({inputs:{x:i},attrs:{shape:n},backend:r});return r.disposeIntermediateTensorInfo(a),r.disposeIntermediateTensorInfo(i),o}(p,m,y,n);return h&&n.disposeIntermediateTensorInfo(p),g}const rU={kernelName:zn,backendName:"webgl",kernelFunc:nU},sU=oz({opSnippet:HL+"\\n  return max(a, b);\\n",packedOpSnippet:"\\n  vec4 result = vec4(max(a, b));\\n  bvec4 isNaNA = isnan(a);\\n  bvec4 isNaNB = isnan(b);\\n  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);\\n  "+qL+"\\n  return result;\\n",cpuKernelImpl:qO}),aU={kernelName:Pn,backendName:"webgl",kernelFunc:sU},iU={kernelName:Bn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t;ED(s,"maxPool");const{filterSize:a,strides:i,pad:o,dimRoundingMode:u}=r;ie(ec(i,1),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${i} and dilations \'1\'`);const l=Gl(s.shape,a,i,1,o,u);if(1===l.filterWidth&&1===l.filterHeight&&de(l.inShape,l.outShape))return XL({inputs:{x:s},backend:n});const c=new aP(l,"max",!1);return n.runWebGLProgram(c,[s],s.dtype)}},oU={kernelName:Un,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{filterSize:a,strides:i,pad:o,dataFormat:u,dimRoundingMode:l}=r,c=Hl(s.shape,a,i,[1,1,1],o,l,u),h=new iP(c,"max",!1);return n.runWebGLProgram(h,[s],s.dtype)}};class uU{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;const t=e.strideHeight,n=e.strideWidth,r=e.dilationHeight,s=e.effectiveFilterHeight,a=e.effectiveFilterWidth,i=s-1-e.padInfo.top,o=a-1-e.padInfo.left,u=s*a-1;this.userCode=`\\n      const ivec2 pads = ivec2(${i}, ${o});\\n\\n      void main() {\\n        ivec4 coords = getOutputCoords();\\n        int b = coords[0];\\n        int d = coords[3];\\n\\n        ivec2 dyRCCorner = coords.yz - pads;\\n        int dyRCorner = dyRCCorner.x;\\n        int dyCCorner = dyRCCorner.y;\\n\\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\\n        // ? = to be determined. : = across all values in that axis.\\n        float dotProd = 0.0;\\n        for (int wR = 0; wR < ${s};\\n          wR += ${r}) {\\n          float dyR = float(dyRCorner + wR) / ${t}.0;\\n\\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\\n            continue;\\n          }\\n          int idyR = int(dyR);\\n\\n          for (int wC = 0; wC < ${a}; wC++) {\\n            float dyC = float(dyCCorner + wC) / ${n}.0;\\n\\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\\n                fract(dyC) > 0.0) {\\n              continue;\\n            }\\n            int idyC = int(dyC);\\n\\n            float dyValue = getDy(b, idyR, idyC, d);\\n            int maxPosValue = ${u} - int(getMaxPos(b, idyR, idyC, d));\\n\\n            // Get the current value, check it against the value from the\\n            // position matrix.\\n            int curPosValue = wR * ${a} + wC;\\n            float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);\\n\\n            dotProd += dyValue * mask;\\n          }\\n        }\\n        setOutput(dotProd);\\n      }\\n    `}}class lU{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;const t=e.strideDepth,n=e.strideHeight,r=e.strideWidth,s=e.dilationDepth,a=e.dilationHeight,i=e.dilationWidth,o=e.effectiveFilterDepth,u=e.effectiveFilterHeight,l=e.effectiveFilterWidth,c=o-1-e.padInfo.front,h=u-1-e.padInfo.top,d=l-1-e.padInfo.left,p=o*u*l-1;this.userCode=`\\n      const ivec3 pads = ivec3(${c}, ${h}, ${d});\\n\\n      void main() {\\n        ivec5 coords = getOutputCoords();\\n        int batch = coords.x;\\n        int ch = coords.u;\\n\\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\\n        int dyDCorner = dyCorner.x;\\n        int dyRCorner = dyCorner.y;\\n        int dyCCorner = dyCorner.z;\\n\\n        // Convolve dy(?, ?, ?, ch) with pos mask(:, :, :, d) to get\\n        // dx(xD, xR, xC, ch).\\n        // ? = to be determined. : = across all values in that axis.\\n        float dotProd = 0.0;\\n\\n        for (int wD = 0; wD < ${o};\\n           wD += ${s}) {\\n          float dyD = float(dyDCorner + wD) / ${t}.0;\\n\\n          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {\\n            continue;\\n          }\\n          int idyD = int(dyD);\\n\\n          for (int wR = 0; wR < ${u};\\n              wR += ${a}) {\\n            float dyR = float(dyRCorner + wR) / ${n}.0;\\n\\n            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||\\n                fract(dyR) > 0.0) {\\n              continue;\\n            }\\n            int idyR = int(dyR);\\n\\n            for (int wC = 0; wC < ${l};\\n                wC += ${i}) {\\n              float dyC = float(dyCCorner + wC) / ${r}.0;\\n\\n              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\\n                  fract(dyC) > 0.0) {\\n                continue;\\n              }\\n              int idyC = int(dyC);\\n\\n              float dyValue = getDy(batch, idyD, idyR, idyC, ch);\\n              int maxPosValue = ${p} -\\n                  int(getMaxPos(batch, idyD, idyR, idyC, ch));\\n\\n              // Get the current value, check it against the value from the\\n              // position matrix.\\n              int curPosValue =\\n                  wD * ${u} * ${l} +\\n                  wR * ${l} + wC;\\n              float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);\\n\\n              dotProd += dyValue * mask;\\n            }\\n          }\\n        }\\n        setOutput(dotProd);\\n      }\\n    `}}const cU={kernelName:Wn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,input:a}=t,i=a,{filterSize:o,strides:u,pad:l,dimRoundingMode:c}=r,h=Hl(i.shape,o,u,[1,1,1],l,c),d=new iP(h,"max",!0),p=n.runWebGLProgram(d,[i],i.dtype),f=new lU(h),m=n.runWebGLProgram(f,[s,p],i.dtype);return n.disposeIntermediateTensorInfo(p),m}},hU={kernelName:Vn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,input:a,output:i}=t,o=a;ED([a,i],"maxPoolGrad");const{filterSize:u,strides:l,pad:c,dimRoundingMode:h}=r,d=Gl(o.shape,u,l,1,c,h),p=new aP(d,"max",!0),f=n.runWebGLProgram(p,[o],o.dtype),m=new uU(d),g=n.runWebGLProgram(m,[s,f],o.dtype);return n.disposeIntermediateTensorInfo(f),g}},dU={kernelName:Gn,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{x:r}=e,{filterSize:s,strides:a,pad:i,includeBatchInIndex:o}=t,u=n;ie(4===r.shape.length,()=>`Error in maxPool: input must be rank 4 but got rank ${r.shape.length}.`);const l=[1,1];ie(ec(a,l),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${a} and dilations \'${l}\'`);const c=Gl(r.shape,s,a,l,i),[h,d]=function(e,t,n,r){let s=new aP(n,"max",!1);const a=r.runWebGLProgram(s,[e],"float32");return s=new aP(n,"max",!0,!0,t),[a,r.runWebGLProgram(s,[e],"float32")]}(r,o,c,u);return[h,d]}},pU={kernelName:Hn,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{x:r}=e,{keepDims:s,axis:a}=t,i=n,o=r.shape.length,u=we(a,r.shape);let l=u;const c=nh(l,o),h=null!=c,d=i.shouldExecuteOnCPU([r]),p=[];let f=r;if(h){if(d){const e=i.texData.get(f.dataId).values,t=new Array(o);for(let e=0;e<t.length;e++)t[e]=r.shape[c[e]];const n=wL(e,r.shape,r.dtype,c,t);f=i.makeTensorInfo(t,r.dtype),i.texData.get(f.dataId).values=n}else f=vz(r,c,i);p.push(f),l=sh(l.length,o)}th("sum",l,o);const[m,g]=Qc(f.shape,l);let y=m;s&&(y=eh(m,u));const b=function(e,t,n,r){const s=le(t),a=fz({inputs:{x:e},attrs:{shape:[le(e.shape)/s,s]},backend:r}),i=bz(a,"float32","mean",r),o=fz({inputs:{x:i},attrs:{shape:n},backend:r});return r.disposeIntermediateTensorInfo(a),r.disposeIntermediateTensorInfo(i),o}(f,g,y,i);for(const e of p)i.disposeIntermediateTensorInfo(e);return b}},fU={kernelName:jn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a,keepDims:i}=r,o=s.shape.length,u=we(a,s.shape);let l=u;const c=nh(l,o);let h=s;null!=c&&(h=Sz({inputs:{x:s},backend:n,attrs:{perm:c}}),l=sh(l.length,s.shape.length)),th("min",l,o);const[d,p]=Qc(h.shape,l),f=fz({inputs:{x:h},backend:n,attrs:{shape:[-1,le(p)]}}),m=bz(f,f.dtype,"min",n);let g;return g=fz(i?{inputs:{x:m},backend:n,attrs:{shape:eh(d,u)}}:{inputs:{x:m},backend:n,attrs:{shape:d}}),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),null!=c&&n.disposeIntermediateTensorInfo(h),g}},mU=oz({opSnippet:HL+"\\n  return min(a, b);\\n",packedOpSnippet:"\\n  vec4 result = vec4(min(a, b));\\n  bvec4 isNaNA = isnan(a);\\n  bvec4 isNaNB = isnan(b);\\n  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);\\n  "+qL+"\\n  return result;\\n",cpuKernelImpl:KO}),gU={kernelName:qn,backendName:"webgl",kernelFunc:mU};class yU{constructor(e,t,n){this.variableNames=["x"],this.outputShape=t.map((t,n)=>t[0]+e[n]+t[1]);const r=e.length,s=GD(r),a=t.map(e=>e[0]).join(","),i=t.map((t,n)=>t[0]+e[n]).join(","),o=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,r),u="reflect"===n?0:1;this.userCode=1!==r?`\\n      ${s} start = ${s}(${a});\\n      ${s} end = ${s}(${i});\\n\\n      void main() {\\n        ${s} outC = getOutputCoords();\\n        for (int i = 0; i < ${r}; i++) {\\n          if (outC[i] < start[i]) {\\n            outC[i] = start[i] * 2 - outC[i] - ${u};\\n          } else if(outC[i] >= end[i]) {\\n            outC[i] = (end[i] - 1) * 2 - outC[i] + ${u};\\n          }\\n        }\\n        ${s} coords = outC - start;\\n        setOutput(getX(${o}));\\n      }\\n    `:`\\n        int start = ${a};\\n        int end = ${i};\\n\\n        void main() {\\n          int outC = getOutputCoords();\\n          if (outC < start) {\\n            outC = start * 2 - outC - ${u};\\n          } else if(outC >= end) {\\n            outC = (end - 1) * 2 - outC + ${u};\\n          }\\n          setOutput(getX(outC - start));\\n        }\\n      `}}class bU{constructor(e,t,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t.map((t,n)=>t[0]+e[n]+t[1]);const r=e.length,s=GD(r),a=t.map(e=>e[0]).join(","),i=t.map((t,n)=>t[0]+e[n]).join(","),o=IL("rc",r),u=IL("source",r),l=`${o[r-1]} < ${this.outputShape[r-1]}`,c=1===r?"source":`vec2(${u.slice(-2).join()})`,h="reflect"===n?0:1;let d="";if(1===r){const e=`\\n        ${s} source = rc;\\n        if (source < start) {\\n          source = start * 2 - source - ${h};\\n        } else if (source >= end) {\\n          source = (end - 1) * 2 - source + ${h};\\n        }\\n        source -= start;\\n      `;d=`\\n        ${s} rc = outputLoc;\\n        ${e}\\n        result[0] = getChannel(getX(${u.join()}), ${c});\\n        ${o[r-1]} += 1;\\n        if(${l}) {\\n          ${e}\\n          result[1] = getChannel(getX(${u.join()}), ${c});\\n        }\\n      `}else{const e=`\\n        ${s} source = rc;\\n        ${s} lt = ${s}(lessThan(source, start));\\n        ${s} gte = ${s}(greaterThanEqual(source, end));\\n        ${s} orig = 1 - (lt + gte);\\n        source = orig * source +\\n                lt * (start * 2 - source - ${h}) +\\n                gte * ((end - 1) * 2 - source + ${h});\\n        source -= start;\\n      `;d=`\\n        ${s} rc = outputLoc;\\n        ${e}\\n        result[0] = getChannel(getX(${u.join()}), ${c});\\n        ${o[r-1]} += 1;\\n        if(${l}) {\\n          ${e}\\n          result[1] = getChannel(getX(${u.join()}), ${c});\\n        }\\n        rc = outputLoc;\\n        ${o[r-2]} += 1;\\n        if(${o[r-2]} < ${this.outputShape[r-2]}) {\\n          ${e}\\n          result[2] = getChannel(getX(${u.join()}), ${c});\\n          ${o[r-1]} += 1;\\n          if(${l}) {\\n            ${e}\\n            result[3] = getChannel(getX(${u.join()}), ${c});\\n          }\\n        }\\n      `}this.userCode=`\\n      const ${s} start = ${s}(${a});\\n      const ${s} end = ${s}(${i});\\n\\n      void main() {\\n        ${s} outputLoc = getOutputCoords();\\n        vec4 result = vec4(0.);\\n        ${d}\\n        setOutput(result);\\n      }\\n    `}}const xU={kernelName:Kn,backendName:"webgl",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:r}=e,{paddings:s,mode:a}=n,i=Xe().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new bU(r.shape,s,a):new yU(r.shape,s,a);return t.runWebGLProgram(i,[r],r.dtype)}},wU=oz({opSnippet:"if (b == 0.0) return NAN;\\n  return mod(a, b);",packedOpSnippet:"\\n  vec4 result = mod(a, b);\\n  bvec4 isNaN = equal(b, vec4(0.0));\\n  "+qL+"\\n  return result;\\n"}),vU={kernelName:Xn,backendName:"webgl",kernelFunc:wU};class kU{constructor(e,t,n){this.variableNames=["probs"],this.customUniforms=[{name:"seed",type:"float"}],this.outputShape=[e,n],this.userCode=`\\n      void main() {\\n        ivec2 coords = getOutputCoords();\\n        int batch = coords[0];\\n\\n        float r = random(seed);\\n        float cdf = 0.0;\\n\\n        for (int i = 0; i < ${t-1}; i++) {\\n          cdf += getProbs(batch, i);\\n\\n          if (r < cdf) {\\n            setOutput(float(i));\\n            return;\\n          }\\n        }\\n\\n        // If no other event happened, last event happened.\\n        setOutput(float(${t-1}));\\n      }\\n    `}}const IU=oz({opSnippet:"\\nif (a == b) {\\n  return 1.0;\\n};\\nreturn a / b;",packedOpSnippet:"\\n  // vec4 one = vec4(equal(a, b));\\n  // return one + (vec4(1.0) - one) * a / b;\\n  vec4 result = a / b;\\n  if(a.x == b.x) {\\n    result.x = 1.;\\n  }\\n  if(a.y == b.y) {\\n    result.y = 1.;\\n  }\\n  if(a.z == b.z) {\\n    result.z = 1.;\\n  }\\n  if(a.w == b.w) {\\n    result.w = 1.;\\n  }\\n\\n  return result;\\n",checkOutOfBounds:!0}),SU={kernelName:Jt,backendName:"webgl",kernelFunc:IU},NU="return a - b;",TU=oz({opSnippet:NU,packedOpSnippet:NU,supportsComplex:!0,cpuKernelImpl:yL}),EU={kernelName:ts,backendName:"webgl",kernelFunc:TU};function CU(e){const{inputs:t,backend:n,attrs:r}=e,{logits:s}=t,{dim:a}=r,i=we([a],s.shape),o=nU({inputs:{x:s},backend:n,attrs:{reductionIndices:i,keepDims:!1}}),u=eh(o.shape,i),l=fz({inputs:{x:o},backend:n,attrs:{shape:u}}),c=TU({inputs:{a:s,b:l},backend:n}),h=qB({inputs:{x:c},backend:n}),d=kz({inputs:{x:h},backend:n,attrs:{axis:i,keepDims:!1}}),p=fz({inputs:{x:d},backend:n,attrs:{shape:u}}),f=IU({inputs:{a:h,b:p},backend:n});return n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(l),n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(p),f}const $U={kernelName:Ur,backendName:"webgl",kernelFunc:CU},AU={kernelName:Yn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{logits:s}=t,{numSamples:a,seed:i,normalized:o}=r,u=o?s:CU({inputs:{logits:s},backend:n,attrs:{dim:s.shape.length-1}}),l=u.shape[0],c=u.shape[1],h=new kU(l,c,a),d=[[i]],p=n.runWebGLProgram(h,[u],"int32",d);return o||n.disposeIntermediateTensorInfo(u),p}},RU=RL+"\\n  return -x;\\n",_U={kernelName:Zn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r}=t;if(n.shouldExecuteOnCPU([r])){const e=n.texData.get(r.dataId),[t,s]=YO(e.values,r.shape,r.dtype);return n.makeTensorInfo(s,r.dtype,t)}let s;return s=Xe().getBool("WEBGL_PACK_UNARY_OPERATIONS")?new OL(r.shape,"\\n  vec4 result = -x;\\n  bvec4 isNaN = isnan(x);\\n\\n  result.r = isNaN.r ? x.r : result.r;\\n  result.g = isNaN.g ? x.g : result.g;\\n  result.b = isNaN.b ? x.b : result.b;\\n  result.a = isNaN.a ? x.a : result.a;\\n\\n  return result;\\n"):new AL(r.shape,RU),n.runWebGLProgram(s,[r],r.dtype)}},MU=Jp,FU={kernelName:er,backendName:"webgl",kernelFunc:function(e){xs("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:n,attrs:r}=e,{boxes:s,scores:a}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:u}=r,l=n.readSync(s.dataId),c=n.readSync(a.dataId),{selectedIndices:h}=MU(l,c,i,o,u);return n.makeTensorInfo([h.length],"int32",new Int32Array(h))}},DU=Zp,OU={kernelName:tr,backendName:"webgl",kernelFunc:function(e){xs("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:n,attrs:r}=e,{boxes:s,scores:a}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:u,padToMaxOutputSize:l}=r,c=n.readSync(s.dataId),h=n.readSync(a.dataId),{selectedIndices:d,validOutputs:p}=DU(c,h,i,o,u,l);return[n.makeTensorInfo([d.length],"int32",new Int32Array(d)),n.makeTensorInfo([],"int32",new Int32Array([p]))]}},LU=Qp,zU={kernelName:nr,backendName:"webgl",kernelFunc:function(e){xs("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:n,attrs:r}=e,{boxes:s,scores:a}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:u,softNmsSigma:l}=r,c=n.readSync(s.dataId),h=n.readSync(a.dataId),d=i,p=o,f=u,m=l,{selectedIndices:g,selectedScores:y}=LU(c,h,d,p,f,m);return[n.makeTensorInfo([g.length],"int32",new Int32Array(g)),n.makeTensorInfo([y.length],"float32",new Float32Array(y))]}};class PU{constructor(e,t,n,r){this.variableNames=["indices"],this.outputShape=[e,t],this.userCode=`\\n      void main() {\\n        ivec2 coords = getOutputCoords();\\n        int index = round(getIndices(coords.x));\\n        setOutput(mix(float(${r}), float(${n}),\\n                      float(index == coords.y)));\\n      }\\n    `}}const BU={kernelName:sr,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{indices:s}=t,{dtype:a,depth:i,onValue:o,offValue:u}=r,l=le(s.shape),c=new PU(l,i,o,u),h=fz({inputs:{x:s},backend:n,attrs:{shape:[l]}}),d=n.runWebGLProgram(c,[h],a);n.disposeIntermediateTensorInfo(h);const p=fz({inputs:{x:d},backend:n,attrs:{shape:[...s.shape,i]}});return n.disposeIntermediateTensorInfo(d),p}};function VU(e){const{inputs:t,backend:n}=e,{x:r}=t;if("complex64"===r.dtype){const e=CP({inputs:{input:r},backend:n}),t=VU({inputs:{x:e},backend:n}),s=WP({inputs:{input:r},backend:n}),a=VU({inputs:{x:s},backend:n}),i=JL({inputs:{real:t,imag:a},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(a),i}return sV({attrs:{shape:r.shape,dtype:r.dtype,value:"string"===r.dtype?"":0},backend:n})}const UU={kernelName:ds,backendName:"webgl",kernelFunc:VU},WU={kernelName:rr,backendName:"webgl",kernelFunc:function e(t){const{inputs:n,backend:r}=t,{x:s}=n;if("string"===s.dtype)throw new Error("onesLike is not supported under string dtype");if("complex64"===s.dtype){const t=CP({inputs:{input:s},backend:r}),n=e({inputs:{x:t},backend:r}),a=WP({inputs:{input:s},backend:r}),i=VU({inputs:{x:a},backend:r}),o=JL({inputs:{real:n,imag:i},backend:r});return r.disposeIntermediateTensorInfo(t),r.disposeIntermediateTensorInfo(n),r.disposeIntermediateTensorInfo(a),r.disposeIntermediateTensorInfo(i),o}return sV({attrs:{shape:s.shape,dtype:s.dtype,value:1},backend:r})}},GU={kernelName:ar,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{axis:s}=r;if(1===t.length)return XB({inputs:{input:t[0]},backend:n,attrs:{dim:s}});const a=t[0].shape,i=t[0].dtype;t.forEach(e=>{oe(a,e.shape,"All tensors passed to stack must have matching shapes"),ie(i===e.dtype,()=>"All tensors passed to stack must have matching dtypes")});const o=[],u=jP({inputs:t.map(e=>{const t=XB({inputs:{input:e},backend:n,attrs:{dim:s}});return o.push(t),t}),backend:n,attrs:{axis:s}});return o.forEach(e=>n.disposeIntermediateTensorInfo(e)),u}};class HU{constructor(e,t,n){this.variableNames=["x"],this.customUniforms=[{name:"value",type:"float"}],this.outputShape=t.map((t,n)=>t[0]+e[n]+t[1]);const r=e.length,s=GD(r),a=t.map(e=>e[0]).join(","),i=t.map((t,n)=>t[0]+e[n]).join(","),o=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,r);this.userCode=1!==r?`\\n      ${s} start = ${s}(${a});\\n      ${s} end = ${s}(${i});\\n\\n      void main() {\\n        ${s} outC = getOutputCoords();\\n        if (any(lessThan(outC, start)) || any(greaterThanEqual(outC, end))) {\\n          setOutput(value);\\n        } else {\\n          ${s} coords = outC - start;\\n          setOutput(getX(${o}));\\n        }\\n      }\\n    `:`\\n        int start = ${a};\\n        int end = ${i};\\n\\n        void main() {\\n          int outC = getOutputCoords();\\n          if (outC < start || outC >= end) {\\n            setOutput(value);\\n          } else {\\n            setOutput(getX(outC - start));\\n          }\\n        }\\n      `}}class jU{constructor(e,t,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"value",type:"float"}],this.outputShape=t.map((t,n)=>t[0]+e[n]+t[1]);const r=e.length,s=GD(r),a=t.map(e=>e[0]).join(","),i=t.map((t,n)=>t[0]+e[n]).join(","),o=IL("rc",r),u=IL("source",r),l=`${o[r-1]} < ${this.outputShape[r-1]}`,c=1===r?"source":`vec2(${u.slice(-2).join()})`,h=[`${s} rc = outputLoc;`,`${o[r-1]} += 1;\\n       if(${l}) {\\n      `,1===r?"":`}\\n       rc = outputLoc;\\n       ${o[r-2]} += 1;\\n       if(${o[r-2]} < ${this.outputShape[r-2]}) {`,1===r?"":`  ${o[r-1]} += 1;\\n         if(${l}) {`],d=1===r?"rc < start || rc >= end":"any(lessThan(rc, start)) || any(greaterThanEqual(rc, end))";let p="";for(let e=0,t=1===r?2:4;e<t;e++)p+=`\\n        ${h[e]}\\n        if (${d}) {\\n          result[${e}] = float(value);\\n        } else {\\n          ${s} source = rc - start;\\n          result[${e}] = getChannel(getX(${u.join()}), ${c});\\n        }\\n      `;p+=1===r?"} ":"}}",this.userCode=`\\n      const ${s} start = ${s}(${a});\\n      const ${s} end = ${s}(${i});\\n\\n      void main() {\\n        ${s} outputLoc = getOutputCoords();\\n        vec4 result = vec4(0.);\\n        ${p}\\n        setOutput(result);\\n      }\\n    `}}const qU=e=>{const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{paddings:a,constantValue:i}=r;if(0===le(s.shape)){const e=a.map((e,t)=>e[0]+s.shape[t]+e[1]);return sV({backend:n,attrs:{shape:e,value:i,dtype:s.dtype}})}const o=Xe().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new jU(s.shape,a,i):new HU(s.shape,a,i),u=[[i]];return n.runWebGLProgram(o,[s],s.dtype,u)},KU={kernelName:ir,backendName:"webgl",kernelFunc:qU},XU=oz({opSnippet:"\\n  if(a < 0.0 && floor(b) < b){\\n    return NAN;\\n  }\\n  if (b == 0.0) {\\n    return 1.0;\\n  }\\n  return (round(mod(b, 2.0)) != 1) ?\\n      pow(abs(a), b) : sign(a) * pow(abs(a), b);\\n",packedOpSnippet:"\\n  // isModRound1 has 1 for components with round(mod(b, 2.0)) == 1, 0 otherwise.\\n  vec4 isModRound1 = vec4(equal(round(mod(b, 2.0)), ivec4(1)));\\n  vec4 multiplier = sign(a) * isModRound1 + (vec4(1.0) - isModRound1);\\n  vec4 result = multiplier * pow(abs(a), b);\\n\\n  // Ensure that a^0 = 1, including 0^0 = 1 as this correspond to TF and JS\\n  bvec4 isExpZero = equal(b, vec4(0.0));\\n  result.r = isExpZero.r ? 1.0 : result.r;\\n  result.g = isExpZero.g ? 1.0 : result.g;\\n  result.b = isExpZero.b ? 1.0 : result.b;\\n  result.a = isExpZero.a ? 1.0 : result.a;\\n\\n  bvec4 isNaN1 = lessThan(a, vec4(0.0));\\n  bvec4 isNaN2 = lessThan(floor(b), b);\\n  bvec4 isNaN = bvec4(isNaN1.x && isNaN2.x, isNaN1.y && isNaN2.y, isNaN1.z && isNaN2.z, isNaN1.w && isNaN2.w);\\n  "+qL+"\\n  return result;\\n"}),YU={kernelName:ur,backendName:"webgl",kernelFunc:XU},JU={kernelName:cr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a,keepDims:i}=r,o=s.shape.length,u=[],l=we(a,s.shape);let c=l;const h=nh(c,o);let d,p=s;if(null!=h&&(p=Sz({inputs:{x:s},backend:n,attrs:{perm:h}}),c=sh(c.length,o),u.push(p)),th("prod",c,o),n.shouldExecuteOnCPU([p])){const e=n.texData.get(p.dataId).values,{outVals:t,outShape:r,outDtype:s}=ZO(p.shape,p.dtype,e,c);d=n.makeTensorInfo(r,s,t)}else{const[e,t]=Qc(p.shape,c),r=le(t),a=fz({inputs:{x:p},backend:n,attrs:{shape:[-1,r]}}),i=bz(a,Ia(s.dtype),"prod",n);d=fz({inputs:{x:i},backend:n,attrs:{shape:e}}),u.push(a),u.push(i)}if(i){u.push(d);const e=eh(d.shape,l);d=fz({inputs:{x:d},backend:n,attrs:{shape:e}})}return u.forEach(e=>n.disposeIntermediateTensorInfo(e)),d}},ZU={kernelName:hr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{paramsNestedSplits:s,paramsDenseValues:a,indices:i}=t,{outputRaggedRank:o}=r,u=s.map(e=>n.readSync(e.dataId)),l=s.map(e=>e.shape),c=n.readSync(a.dataId),h=n.readSync(i.dataId),[d,p,f]=QO(u,l,c,a.shape,a.dtype,h,i.shape,o),m=d.map(e=>n.makeTensorInfo([e.length],"int32",e)),g=n.makeTensorInfo(f,a.dtype,p);return m.concat([g])}},QU={kernelName:dr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{starts:r,limits:s,deltas:a}=t,i=n.readSync(r.dataId),o=n.readSync(s.dataId),u=n.readSync(a.dataId),[l,c]=eL(i,r.shape,r.dtype,o,s.shape,u,a.shape);return[n.makeTensorInfo([l.length],"int32",l),n.makeTensorInfo([c.length],r.dtype,c)]}},eW={kernelName:pr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{shape:s,values:a,defaultValue:i,rowPartitionTensors:o}=t,{rowPartitionTypes:u}=r,l=n.readSync(s.dataId),c=n.readSync(a.dataId),h=n.readSync(i.dataId),d=o.map(e=>n.readSync(e.dataId)),p=o.map(e=>e.shape),[f,m]=tL(l,s.shape,c,a.shape,a.dtype,h,i.shape,d,p,u);return n.makeTensorInfo(f,a.dtype,m)}},tW=e=>{const{backend:t,attrs:n}=e,{start:r,stop:s,step:a,dtype:i}=n,o=nL(r,s,a,i);return t.makeTensorInfo([o.length],i,o)},nW={kernelName:fr,backendName:"webgl",kernelFunc:tW},rW=iz({opSnippet:"return 1.0 / x;"}),sW={kernelName:gr,backendName:"webgl",kernelFunc:rW},aW=iz({opSnippet:RL+"\\n  return (x < 0.0) ? 0.0 : x;\\n",packedOpSnippet:"\\n  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));\\n  bvec4 isNaN = isnan(x);\\n\\n  result.r = isNaN.r ? x.r : result.r;\\n  result.g = isNaN.g ? x.g : result.g;\\n  result.b = isNaN.b ? x.b : result.b;\\n  result.a = isNaN.a ? x.a : result.a;\\n\\n  return result;\\n"}),iW={kernelName:yr,backendName:"webgl",kernelFunc:aW},oW=iz({opSnippet:RL+"\\n  return (x < 0.0) ? 0.0 : min(6.0, x);\\n",packedOpSnippet:"\\n  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));\\n  bvec4 isNaN = isnan(x);\\n\\n  result.r = isNaN.r ? x.r : result.r;\\n  result.g = isNaN.g ? x.g : result.g;\\n  result.b = isNaN.b ? x.b : result.b;\\n  result.a = isNaN.a ? x.a : result.a;\\n\\n  return result;\\n"}),uW={kernelName:Ir,backendName:"webgl",kernelFunc:oW};class lW{constructor(e,t,n,r,s){this.variableNames=["A"],this.outputShape=[];const[a,i,o,u]=e;this.outputShape=[a,t,n,u];const l=[r&&t>1?i-1:i,r&&n>1?o-1:o],c=[r&&t>1?t-1:t,r&&n>1?n-1:n];let h;h=s?"(vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC - vec2(0.5)":"vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\\n          ${l[0]/c[0]},\\n          ${l[1]/c[1]});\\n      const vec2 inputShapeRC = vec2(${i}.0, ${o}.0);\\n\\n      void main() {\\n        ivec4 coords = getOutputCoords();\\n        int b = coords[0];\\n        int d = coords[3];\\n        ivec2 yRC = coords.yz;\\n\\n        // Fractional source index.\\n        vec2 sourceFracIndexRC = ${h};\\n\\n        // Compute the four integer indices.\\n        ivec2 sourceFloorRC = ivec2(max(sourceFracIndexRC, vec2(0.0)));\\n        ivec2 sourceCeilRC = ivec2(\\n          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));\\n\\n        float topLeft = getA(b, sourceFloorRC.x, sourceFloorRC.y, d);\\n        float bottomLeft = getA(b, sourceCeilRC.x, sourceFloorRC.y, d);\\n        float topRight = getA(b, sourceFloorRC.x, sourceCeilRC.y, d);\\n        float bottomRight = getA(b, sourceCeilRC.x, sourceCeilRC.y, d);\\n\\n        vec2 fracRC = sourceFracIndexRC - vec2(sourceFloorRC);\\n\\n        float top = topLeft + (topRight - topLeft) * fracRC.y;\\n        float bottom = bottomLeft + (bottomRight - bottomLeft) * fracRC.y;\\n        float newValue = top + (bottom - top) * fracRC.x;\\n\\n        setOutput(newValue);\\n      }\\n    `}}class cW{constructor(e,t,n,r,s){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[a,i,o,u]=e;this.outputShape=[a,t,n,u];const l=[r&&t>1?i-1:i,r&&n>1?o-1:o],c=[r&&t>1?t-1:t,r&&n>1?n-1:n];let h;h=s?"(vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC - vec3(0.5)":"vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\\n      const vec3 effectiveInputOverOutputRatioRC = vec3(\\n          ${l[0]/c[0]},\\n          ${l[1]/c[1]},\\n          ${l[1]/c[1]});\\n      const vec3 inputShapeRC = vec3(${i}.0, ${o}.0,\\n                                     ${o}.0);\\n\\n      float getAValue(int b, int r, int c, int d) {\\n        return getChannel(getA(b, r, c, d), vec2(c, d));\\n      }\\n\\n      void main() {\\n        ivec4 coords = getOutputCoords();\\n        int b = coords[0];\\n        int d = coords[3];\\n        // Calculate values for next column in yRC.z.\\n        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);\\n\\n        // Fractional source index.\\n        vec3 sourceFracIndexRC = ${h};\\n\\n        // Compute the four integer indices.\\n        ivec3 sourceFloorRC = ivec3(max(sourceFracIndexRC, vec3(0.0)));\\n        ivec3 sourceCeilRC = ivec3(\\n          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));\\n\\n        // Should we calculate next column and row elements in 2x2 packed cell.\\n        bool hasNextCol = d < ${u-1};\\n        bool hasNextRow = coords.z < ${n-1};\\n\\n        // In parallel, construct four corners for all four components in\\n        // packed 2x2 cell.\\n        vec4 topLeft = vec4(\\n          getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d),\\n          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d + 1)\\n                     : 0.0,\\n          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d)\\n                     : 0.0,\\n          (hasNextRow && hasNextCol) ?\\n            getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d + 1) : 0.0);\\n\\n        vec4 bottomLeft = vec4(\\n          getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d),\\n          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d + 1)\\n                     : 0.0,\\n          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d)\\n                     : 0.0,\\n          (hasNextRow && hasNextCol) ?\\n            getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d + 1) : 0.0);\\n\\n        vec4 topRight = vec4(\\n          getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d),\\n          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d + 1)\\n                     : 0.0,\\n          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d)\\n                     : 0.0,\\n          (hasNextRow && hasNextCol) ?\\n            getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d + 1) : 0.0);\\n\\n        vec4 bottomRight = vec4(\\n          getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d),\\n          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d + 1)\\n                     : 0.0,\\n          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d)\\n                     : 0.0,\\n          (hasNextRow && hasNextCol) ?\\n            getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d + 1) : 0.0);\\n\\n        vec3 fracRC = sourceFracIndexRC - vec3(sourceFloorRC);\\n\\n        vec4 top = mix(topLeft, topRight, fracRC.yyzz);\\n        vec4 bottom = mix(bottomLeft, bottomRight, fracRC.yyzz);\\n        vec4 newValue = mix(top, bottom, fracRC.x);\\n\\n        setOutput(newValue);\\n      }\\n    `}}const hW={kernelName:vr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:s}=t,{alignCorners:a,halfPixelCenters:i,size:o}=r,[u,l]=o,c=Xe().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new cW(s.shape,u,l,a,i):new lW(s.shape,u,l,a,i);return n.runWebGLProgram(c,[s],"float32")}};class dW{constructor(e,t,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;const[,r,s]=t,[,a,i]=e,o=[n&&a>1?r-1:r,n&&i>1?s-1:s],u=[n&&a>1?a-1:a,n&&i>1?i-1:i],l=o[0]/u[0],c=o[1]/u[1],h=1/l,d=1/c,p=2*Math.ceil(h)+2,f=2*Math.ceil(d)+2;this.userCode=`\\n      void main() {\\n        ivec4 coords = getOutputCoords();\\n        int b = coords[0];\\n        int d = coords[3];\\n        int r = coords[1];\\n        int c = coords[2];\\n\\n        float accumulator = 0.0;\\n\\n        const float heightScale = float(${l});\\n        const float widthScale = float(${c});\\n\\n        const float invHeightScale = float(${h});\\n        const float invWidthScale = float(${d});\\n\\n        const int winHeight = int(${p});\\n        const int winWidth = int(${f});\\n\\n        // Compute bounds for where in dy we will look\\n        float startRLerp = floor(float(r) * invHeightScale);\\n        int startDyR = int(startRLerp - float(winHeight / 2));\\n\\n        float startCLerp = floor(float(c) * invWidthScale);\\n        int startDyC = int(startCLerp - float(winWidth / 2));\\n\\n        // Loop over dy\\n        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {\\n          int dyR = dyROffset + startDyR;\\n\\n          // Guard against the window exceeding the bounds of dy\\n          if (dyR < 0 || dyR >= ${a}) {\\n            continue;\\n          }\\n\\n          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {\\n            int dyC = dyCOffset + startDyC;\\n\\n            // Guard against the window exceeding the bounds of dy\\n            if (dyC < 0 || dyC >= ${i}) {\\n              continue;\\n            }\\n\\n            float dxR = float(dyR) * heightScale;\\n            int topDxRIndex = int(floor(dxR));\\n            int bottomDxRIndex = int(min(ceil(dxR), ${r-1}.0));\\n            float dxRLerp = dxR - float(topDxRIndex);\\n            float inverseDxRLerp = 1.0 - dxRLerp;\\n\\n            float dxC = float(dyC) * widthScale;\\n            int leftDxCIndex = int(floor(dxC));\\n            int rightDxCIndex = int(min(ceil(dxC), ${s-1}.0));\\n            float dxCLerp = dxC - float(leftDxCIndex);\\n            float inverseDxCLerp = 1.0 - dxCLerp;\\n\\n            if (r == topDxRIndex && c == leftDxCIndex) {\\n              // topLeft\\n              accumulator +=\\n                getDy(b, dyR, dyC, d) * inverseDxRLerp * inverseDxCLerp;\\n            }\\n\\n            if (r == topDxRIndex && c == rightDxCIndex) {\\n              // topRight\\n              accumulator += getDy(b, dyR, dyC, d) * inverseDxRLerp * dxCLerp;\\n            }\\n\\n            if (r == bottomDxRIndex && c == leftDxCIndex) {\\n              // bottomLeft\\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * inverseDxCLerp;\\n            }\\n\\n            if (r == bottomDxRIndex && c == rightDxCIndex) {\\n              // bottomRight\\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * dxCLerp;\\n            }\\n          }\\n        }\\n        // End loop over dy\\n\\n        setOutput(accumulator);\\n      }\\n    `}}const pW={kernelName:kr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:s,dy:a}=t,{alignCorners:i}=r,o=new dW(a.shape,s.shape,i);return n.runWebGLProgram(o,[a],a.dtype)}};class fW{constructor(e,t,n,r,s){this.variableNames=["A"],this.outputShape=[];const[a,i,o,u]=e;this.outputShape=[a,t,n,u];const l=[r&&t>1?i-1:i,r&&n>1?o-1:o],c=[r&&t>1?t-1:t,r&&n>1?n-1:n],h=r?"0.5":"0.0";let d;d=s?"max((vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC, vec2(0.0))":"vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\\n          ${l[0]/c[0]},\\n          ${l[1]/c[1]});\\n      const vec2 inputShapeRC = vec2(${i}.0, ${o}.0);\\n\\n      void main() {\\n        ivec4 coords = getOutputCoords();\\n        int b = coords[0];\\n        int d = coords[3];\\n        ivec2 yRC = coords.yz;\\n\\n        // Fractional source index.\\n        vec2 sourceFracIndexRC = ${d};\\n\\n        // Compute the coordinators of nearest neighbor point.\\n        ivec2 sourceNearestRC = ivec2(\\n          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${h})));\\n        float newValue = getA(b, sourceNearestRC.x, sourceNearestRC.y, d);\\n\\n        setOutput(newValue);\\n      }\\n    `}}class mW{constructor(e,t,n,r,s){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[a,i,o,u]=e;this.outputShape=[a,t,n,u];const l=[r&&t>1?i-1:i,r&&n>1?o-1:o],c=[r&&t>1?t-1:t,r&&n>1?n-1:n],h=r?"0.5":"0.0";let d;d=s?"max((vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC, vec3(0.0))":"vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\\n      const vec3 effectiveInputOverOutputRatioRC = vec3(\\n          ${l[0]/c[0]},\\n          ${l[1]/c[1]},\\n          ${l[1]/c[1]});\\n      const vec3 inputShapeRC = vec3(${i}.0, ${o}.0,\\n                                     ${o}.0);\\n\\n      float getAValue(int b, int r, int c, int d) {\\n        return getChannel(getA(b, r, c, d), vec2(c, d));\\n      }\\n\\n      void main() {\\n        ivec4 coords = getOutputCoords();\\n        int b = coords[0];\\n        int d = coords[3];\\n        // Calculate values for next column in yRC.z.\\n        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);\\n\\n        // Fractional source index.\\n        vec3 sourceFracIndexRC = ${d};\\n\\n        // Compute the coordinators of nearest neighbor point.\\n        ivec3 sourceNearestRC = ivec3(\\n          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${h})));\\n\\n        // Should we calculate next column and row elements in 2x2 packed cell.\\n        bool hasNextCol = d < ${u-1};\\n        bool hasNextRow = coords.z < ${n-1};\\n\\n        vec4 newValue = vec4(\\n          getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d),\\n          hasNextCol ? getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d + 1)\\n                     : 0.0,\\n          hasNextRow ? getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d)\\n                     : 0.0,\\n          (hasNextRow && hasNextCol) ?\\n            getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d + 1) : 0.0);\\n\\n        setOutput(newValue);\\n      }\\n    `}}const gW={kernelName:xr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:s}=t,{alignCorners:a,halfPixelCenters:i,size:o}=r,[u,l]=o,c=Xe().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new mW(s.shape,u,l,a,i):new fW(s.shape,u,l,a,i);return n.runWebGLProgram(c,[s],s.dtype)}};class yW{constructor(e,t,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;const[,r,s]=t,[,a,i]=e,o=[n&&a>1?r-1:r,n&&i>1?s-1:s],u=[n&&a>1?a-1:a,n&&i>1?i-1:i],l=o[0]/u[0],c=o[1]/u[1],h=1/l,d=1/c,p=2*Math.ceil(h)+2,f=2*Math.ceil(d)+2;this.userCode=`\\n      void main() {\\n        ivec4 coords = getOutputCoords();\\n        int b = coords[0];\\n        int d = coords[3];\\n        int r = coords[1];\\n        int c = coords[2];\\n\\n        float accumulator = 0.0;\\n\\n        const float heightScale = float(${l});\\n        const float widthScale = float(${c});\\n\\n        const float invHeightScale = float(${h});\\n        const float invWidthScale = float(${d});\\n\\n        const int winHeight = int(${p});\\n        const int winWidth = int(${f});\\n\\n        // Compute bounds for where in dy we will look\\n        float startRLerp = floor(float(r) * invHeightScale);\\n        int startDyR = int(floor(startRLerp - float(winHeight / 2)));\\n\\n        float startCLerp = floor(float(c) * invWidthScale);\\n        int startDyC = int(floor(startCLerp - float(winWidth / 2)));\\n\\n        // Loop over dy\\n        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {\\n          int dyR = dyROffset + startDyR;\\n\\n          // Guard against the window exceeding the bounds of dy\\n          if (dyR < 0 || dyR >= ${a}) {\\n            continue;\\n          }\\n\\n          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {\\n            int dyC = dyCOffset + startDyC;\\n\\n            // Guard against the window exceeding the bounds of dy\\n            if (dyC < 0 || dyC >= ${i}) {\\n              continue;\\n            }\\n\\n            float sourceFracRow =\\n              float(${o[0]}) *\\n                (float(dyR) / float(${u[0]}));\\n\\n            float sourceFracCol =\\n                float(${o[1]}) *\\n                  (float(dyC) / float(${u[1]}));\\n\\n            int sourceNearestRow = int(min(\\n                float(int(${r}) - 1),\\n                ${n} ? float(round(sourceFracRow)) :\\n                                  float(floor(sourceFracRow))));\\n\\n            int sourceNearestCol = int(min(\\n                float(int(${s}) - 1),\\n                ${n} ? float(round(sourceFracCol)) :\\n                                  float(floor(sourceFracCol))));\\n\\n            if (r == sourceNearestRow && c == sourceNearestCol) {\\n              accumulator += getDy(b, dyR, dyC, d);\\n            }\\n          }\\n        }\\n        // End loop over dy\\n\\n        setOutput(accumulator);\\n      }\\n    `}}const bW={kernelName:wr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:s,dy:a}=t,{alignCorners:i}=r,o=new yW(a.shape,s.shape,i);return n.runWebGLProgram(o,[a],a.dtype)}};class xW{constructor(e,t){this.variableNames=["x"];const n=e.length;if(n>4)throw new Error(`WebGL backend: Reverse of rank-${n} tensor is not yet supported`);if(this.outputShape=e,1===n)return void(this.userCode=`\\n        void main() {\\n          int coord = getOutputCoords();\\n          setOutput(getX(${e[0]} - coord - 1));\\n        }\\n      `);const r=e.map((n,r)=>(n=>-1!==t.indexOf(n)&&1!==e[n]?`${e[n]} - coords[${n}] - 1`:`coords[${n}]`)(r)).join(","),s=GD(n);this.userCode=`\\n      void main() {\\n        ${s} coords = getOutputCoords();\\n        setOutput(getX(${r}));\\n      }\\n    `}}class wW{constructor(e,t){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0;const n=e.length;if(n>4)throw new Error(`WebGL backend: Reverse of rank-${n} tensor is not yet supported`);this.outputShape=e;const r=IL("rc",n),s=`${r[n-1]} + 1 < ${this.outputShape[n-1]}`,a=`${r[n-2]} + 1 < ${this.outputShape[n-2]}`,i=GD(n);function o(n){const r=e.map((r,s)=>function(n,r){return-1!==t.indexOf(n)&&1!==e[n]?`${e[n]} - ${r[n]} - 1`:`${r[n]}`}(s,n));return`getChannel(getX(${r.join(",")}), vec2(${r.slice(-2).join(",")}))`}this.userCode=1===n?`\\n        void main(){\\n          int rc = getOutputCoords();\\n          vec4 result = vec4(0.);\\n          result.r = getChannel(getX(${e[0]} - rc - 1),\\n            ${e[0]} - rc - 1);\\n          if(${s}){\\n              result.g = getChannel(getX(${e[0]} - (rc  + 1) - 1),\\n                ${e[0]} - (rc  + 1) - 1);\\n          }\\n          setOutput(result);\\n        }\\n      `:`\\n        void main() {\\n          ${i} rc = getOutputCoords();\\n          vec4 result = vec4(0.);\\n          result.r = ${function(e){return o(e)}(r.slice())};\\n          if(${s}){\\n            result.g = ${function(e){return e[n-1]="("+e[n-1]+" + 1)",o(e)}(r.slice())};\\n          }\\n          if(${a}) {\\n            result.b = ${function(e){return e[n-2]="("+e[n-2]+" + 1)",o(e)}(r.slice())};\\n            if(${s}) {\\n              result.a = ${function(e){return e[n-1]="("+e[n-1]+" + 1)",e[n-2]="("+e[n-2]+" + 1)",o(e)}(r.slice())};\\n            }\\n          }\\n          setOutput(result);\\n        }\\n    `}}const vW={kernelName:Sr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{dims:a}=r,i=s.shape.length,o=we(a,s.shape);if(0===i)return XL({inputs:{x:s},backend:n});const u=Xe().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new wW(s.shape,o):new xW(s.shape,o);return n.runWebGLProgram(u,[s],s.dtype)}};class kW{constructor(e,t){this.variableNames=["Image"],this.outputShape=[],this.customUniforms=[{name:"params",type:"vec4"}];const n=e[1],r=e[2];this.outputShape=e;let s="";s="number"==typeof t?`float outputValue = ${t.toFixed(2)};`:`\\n        vec3 fill = vec3(${t.join(",")});\\n        float outputValue = fill[coords[3]];`,this.userCode=`\\n        void main() {\\n          ivec4 coords = getOutputCoords();\\n          int x = coords[2];\\n          int y = coords[1];\\n          float coordXFloat = (float(x) - params[0]) * params[3] -\\n            (float(y) - params[1]) * params[2];\\n          float coordYFloat = (float(x) - params[0]) * params[2] +\\n            (float(y) - params[1]) * params[3];\\n          int coordX = int(round(coordXFloat + params[0]));\\n          int coordY = int(round(coordYFloat + params[1]));\\n          ${s}\\n          if(coordX >= 0 && coordX < ${r} && coordY >= 0 && coordY < ${n}) {\\n            outputValue = getImage(coords[0], coordY, coordX, coords[3]);\\n          }\\n          setOutput(outputValue);\\n        }\\n    `}}const IW={kernelName:ms,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{image:r}=e,{radians:s,fillValue:a,center:i}=t,o=n,u=new kW(r.shape,a),[l,c]=Zf(i,r.shape[1],r.shape[2]),h=[[l,c,Math.sin(s),Math.cos(s)]];return o.runWebGLProgram(u,[r],r.dtype,h)}},SW=iz({opSnippet:"\\n  // OpenGL ES does not support round function.\\n  // The algorithm is based on banker\'s rounding.\\n  float base = floor(x);\\n  if ((x - base) < 0.5) {\\n    return floor(x);\\n  } else if ((x - base) > 0.5) {\\n    return ceil(x);\\n  } else {\\n    if (mod(base, 2.0) == 0.0) {\\n      return base;\\n    } else {\\n      return base + 1.0;\\n    }\\n  }\\n"}),NW={kernelName:Nr,backendName:"webgl",kernelFunc:SW},TW=iz({opSnippet:"return inversesqrt(x);",cpuKernelImpl:rL}),EW={kernelName:Tr,backendName:"webgl",kernelFunc:TW};class CW{constructor(e,t,n,r,s,a,i=!0,o=!1){this.variableNames=["updates","indices","defaultValue"],this.outputShape=a;const u=GD(s.length),l=GD(a.length);let c="";1===n?c="i":2===n&&(c="i, j");const h=`getIndices(${c})`;let d="";1===r?d="i":2===r&&(d="i, coords[1]");const p=`getUpdates(${d})`;let f="";o&&(f="coords[0], coords[1]");const m=`getDefaultValue(${f})`,g=t>1?"strides[j]":"strides";this.userCode=`\\n        ${u} strides = ${u}(${s});\\n\\n        void main() {\\n          ${l} coords = getOutputCoords();\\n          float sum = 0.0;\\n          bool found = false;\\n          for (int i = 0; i < ${e}; i++) {\\n            int flattenedIndex = 0;\\n            for (int j = 0; j < ${t}; j++) {\\n              int index = round(${h});\\n              flattenedIndex += index * ${g};\\n            }\\n            if (flattenedIndex == coords[0]) {\\n              sum += ${p};\\n              found = true;\\n            }\\n          }\\n          setOutput(mix(${m}, sum, float(found)));\\n        }\\n      `}}class $W{constructor(e,t,n,r,s,a,i=!0,o=!1){this.variableNames=["updates","indices","defaultValue"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=a;const u=GD(s.length),l=GD(a.length);let c="";1===n?c="i":2===n&&(c="i, j");const h=`getIndices(${c})`;let d="";1===r?d="i":2===r&&(d="i, coords[1]");const p=`getUpdates(${d})`;let f="";o&&(f="coords[0], coords[1]");const m=`getDefaultValue(${f})`,g=t>1?"strides[j]":"strides",y=t>1?"strides[j + 1]":"strides";this.userCode=`\\n        ${u} strides = ${u}(${s});\\n\\n        void main() {\\n          ${l} coords = getOutputCoords();\\n          vec4 sum = vec4(0.);\\n          vec4 found = vec4(0.);\\n          for (int i = 0; i < ${e}; i+=2) {\\n            ivec2 flattenedIndex = ivec2(0);\\n            for (int j = 0; j < ${t}; j+=2) {\\n              ivec4 index = round(${h});\\n              flattenedIndex += index.xz * ${g};\\n              if (j + 1 < ${t}) {\\n                flattenedIndex += index.yw * ${y};\\n              }\\n            }\\n            if (flattenedIndex[0] == coords[0] || flattenedIndex[1] == coords[0] ||\\n                flattenedIndex[0] == coords[0] + 1 || flattenedIndex[1] == coords[0] + 1) {\\n              vec4 updVals = ${p};\\n              if (flattenedIndex[0] == coords[0]) {\\n                sum.xy += updVals.xy;\\n                found.xy = vec2(1.);\\n              } else if (flattenedIndex[0] == coords[0] + 1) {\\n                sum.zw += updVals.xy;\\n                found.zw = vec2(1.);\\n              }\\n              if (flattenedIndex[1] == coords[0]) {\\n                sum.xy += updVals.zw;\\n                found.xy = vec2(1.);\\n              } else if (flattenedIndex[1] == coords[0] + 1) {\\n                sum.zw += updVals.zw;\\n                found.zw = vec2(1.);\\n              }\\n            }\\n          }\\n          setOutput(mix(${m}, sum, found));\\n        }\\n      `}}const AW={kernelName:Er,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{indices:s,updates:a}=t,{shape:i}=r,{sliceRank:o,numUpdates:u,sliceSize:l,strides:c,outputSize:h}=Xu(0,s,i),d=[h/l,l];if(0===h)return n.makeTensorInfo(i,s.dtype);const p=fz({inputs:{x:s},backend:n,attrs:{shape:[u,o]}}),f=fz({inputs:{x:a},backend:n,attrs:{shape:[u,l]}}),m=n.makeTensorInfo([],"float32",new Float32Array([0]));let g;g=Xe().getBool("WEBGL_PACK")?new $W(u,o,p.shape.length,f.shape.length,c,d):new CW(u,o,p.shape.length,f.shape.length,c,d);const y=n.runWebGLProgram(g,[f,p,m],f.dtype),b=fz({inputs:{x:y},backend:n,attrs:{shape:i}});return n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(y),n.disposeIntermediateTensorInfo(m),b}};class RW{constructor(e,t,n,r){this.variableNames=["sortedSequence","values"],this.customUniforms=[{name:"numInputs",type:"int"}],this.outputShape=[e,n];const s=`for (int i = 0; i < ${Math.ceil(Math.log2(t+1))}; ++i) { if (left >= right) break;`,a=2===Xe().getNumber("WEBGL_VERSION")?"while (left < right) {":s,i="left"===r?"<":"<=";this.userCode=`\\n       int findBound(int batch, float value) {\\n         int left = 0;\\n         int right = numInputs;\\n         int mid;\\n         ${a}\\n           mid = (left + right) / 2;\\n           if (getSortedSequence(batch, mid) ${i} value) {\\n             left = mid + 1;\\n           } else {\\n             right = mid;\\n           }\\n         }\\n         return right;\\n       }\\n\\n       void main() {\\n         ivec2 coords = getOutputCoords();\\n         int batch = coords[0];\\n         int valueIndex = coords[1];\\n\\n         float value = getValues(batch, valueIndex);\\n\\n         setOutput(float(findBound(batch, value)));\\n       }\\n     `}}const _W={kernelName:$r,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{sortedSequence:s,values:a}=t,{side:i}=r,o=new RW(s.shape[0],s.shape[1],a.shape[1],i),u=[[s.shape[1]]];return n.runWebGLProgram(o,[s,a],"int32",u)}};class MW{constructor(e,t,n){let r,s;if(this.variableNames=["c","a","b"],this.outputShape=t,n>4)throw Error(`Where for rank ${n} is not yet supported`);if(1===n)s="resRC",r="resRC";else{const n=["resRC.x","resRC.y","resRC.z","resRC.w"],a=[],i=[];for(let r=0;r<t.length;r++)i.push(`${n[r]}`),r<e&&a.push(`${n[r]}`);r=a.join(),s=i.join()}const a=GD(n);this.userCode=`\\n      void main() {\\n        ${a} resRC = getOutputCoords();\\n        float cVal = getC(${r});\\n        if (cVal >= 1.0) {\\n          setOutput(getA(${s}));\\n        } else {\\n          setOutput(getB(${s}));\\n        }\\n      }\\n    `}}const FW={kernelName:Ar,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{condition:r,t:s,e:a}=t,i=new MW(r.shape.length,s.shape,s.shape.length);return n.runWebGLProgram(i,[r,s,a],ka(s.dtype,a.dtype))}},DW=iz({opSnippet:`\\n  // Stable and Attracting Fixed Point (0, 1) for Normalized Weights.\\n  // see: https://arxiv.org/abs/1706.02515\\n  float scaleAlpha = ${sm};\\n  float scale = ${am};\\n  return (x >= 0.0) ? scale * x : scaleAlpha * (exp(x) - 1.0);\\n`}),OW={kernelName:Rr,backendName:"webgl",kernelFunc:DW},LW=iz({opSnippet:az+"\\n  return 1.0 / (1.0 + exp(-1.0 * x));\\n",packedOpSnippet:"\\n  vec4 result = 1.0 / (1.0 + exp(-1.0 * x));\\n  bvec4 isNaN = isnan(x);\\n\\n  result.r = isNaN.r ? x.r : result.r;\\n  result.g = isNaN.g ? x.g : result.g;\\n  result.b = isNaN.b ? x.b : result.b;\\n  result.a = isNaN.a ? x.a : result.a;\\n\\n  return result;\\n",cpuKernelImpl:aL}),zW={kernelName:Or,backendName:"webgl",kernelFunc:LW},PW=iz({opSnippet:"\\n  if (isnan(x)) { return 0.0; }\\n  return sign(x);\\n"}),BW={kernelName:Dr,backendName:"webgl",kernelFunc:PW},VW=iz({opSnippet:az+"\\n  return sin(x);\\n",packedOpSnippet:`\\n  vec4 result = sin(x);\\n  bvec4 isNaN = isnan(x);\\n  ${qL}\\n  return result;\\n`}),UW={kernelName:Mr,backendName:"webgl",kernelFunc:VW},WW=iz({opSnippet:"\\n  float e2x = exp(x);\\n  return (e2x - 1.0 / e2x) / 2.0;\\n"}),GW={kernelName:Fr,backendName:"webgl",kernelFunc:WW},HW=iz({opSnippet:"\\n  float epsilon = 1.1920928955078125e-7;\\n  float threshold = log(epsilon) + 2.0;\\n\\n  bool too_large = x > -threshold;\\n  bool too_small = x < threshold;\\n\\n  float result;\\n  float exp_x = exp(x);\\n\\n  if (too_large){\\n    result = x;\\n  }\\n  else if (too_small){\\n    result = exp_x;\\n  }\\n  else{\\n    result = log(exp_x + 1.0);\\n  }\\n  return result;\\n"}),jW={kernelName:Lr,backendName:"webgl",kernelFunc:HW},qW={kernelName:Br,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{blockShape:a,paddings:i}=r;ie(s.shape.length<=4,()=>"spaceToBatchND for rank > 4 with a WebGL backend not implemented yet");const o=a.reduce((e,t)=>e*t),u=[[0,0]];u.push(...i);for(let e=1+a.length;e<s.shape.length;++e)u.push([0,0]);const l=[],c=qU({inputs:{x:s},backend:n,attrs:{paddings:u,constantValue:0}}),h=Qf(c.shape,a,o,!1),d=em(h.length,a.length,!1),p=tm(c.shape,a,o,!1),f=fz({inputs:{x:c},backend:n,attrs:{shape:h}}),m=Sz({inputs:{x:f},backend:n,attrs:{perm:d}}),g=fz({inputs:{x:m},backend:n,attrs:{shape:p}});return l.push(c),l.push(f),l.push(m),l.forEach(e=>n.disposeIntermediateTensorInfo(e)),g}},KW={kernelName:Wr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{indices:r,values:s,denseShape:a,defaultValue:i}=t;if(1!==a.shape.length)throw new Error(`Dense shape must be a vector, saw:\\n         ${a.shape}`);if(2!==r.shape.length)throw new Error(`Indices must be a matrix, saw:\\n         ${r.shape}`);if(1!==s.shape.length)throw new Error(`Values must be a vector, saw:\\n         ${s.shape}`);if(0!==i.shape.length)throw new Error(`Default value must be a scalar, saw:\\n        ${i.shape}`);const o=n.readSync(r.dataId),u=n.readSync(s.dataId),l=n.readSync(a.dataId),c=n.readSync(i.dataId)[0],[h,d,p,f,m]=uL(o,r.shape,r.dtype,u,s.dtype,l,c);return[n.makeTensorInfo(d,r.dtype,h),n.makeTensorInfo([d[0]],s.dtype,p),n.makeTensorInfo([f.length],"bool",new Uint8Array(f.map(e=>Number(e)))),n.makeTensorInfo([m.length],r.dtype,new Int32Array(m))]}},XW={kernelName:Gr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{inputIndices:r,inputShape:s,newShape:a}=t;if(2!==r.shape.length)throw new Error(`Input indices should be a matrix but received shape ${r.shape}`);if(1!==s.shape.length)throw new Error(`Input shape should be a vector but received shape ${s.shape}`);if(1!==a.shape.length)throw new Error(`Target shape should be a vector but received shape ${a.shape}`);const i=Array.from(n.readSync(s.dataId)),o=n.readSync(r.dataId),u=Array.from(n.readSync(a.dataId)),[l,c,h]=lL(o,r.shape,r.dtype,i,u);return[n.makeTensorInfo(c,r.dtype,l),n.makeTensorInfo([h.length],a.dtype,new Int32Array(h))]}},YW={kernelName:Hr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{data:r,indices:s,segmentIds:a}=t;if(r.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==s.shape.length)throw new Error(`Indices should be a vector but received shape\\n              ${s.shape}`);if(1!==a.shape.length)throw new Error(`Segment ids should be a vector but received shape\\n              ${a.shape}`);const i=n.readSync(r.dataId),o=n.readSync(s.dataId),u=n.readSync(a.dataId),[l,c]=cL(i,r.shape,r.dtype,o,u,!0);return n.makeTensorInfo(c,r.dtype,l)}},JW={kernelName:jr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{data:r,indices:s,segmentIds:a}=t;if(r.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==s.shape.length)throw new Error(`Indices should be a vector but received shape\\n             ${s.shape}`);if(1!==a.shape.length)throw new Error(`Segment ids should be a vector but received shape\\n             ${a.shape}`);const i=n.readSync(r.dataId),o=n.readSync(s.dataId),u=n.readSync(a.dataId),[l,c]=cL(i,r.shape,r.dtype,o,u);return n.makeTensorInfo(c,r.dtype,l)}},ZW={kernelName:qr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{sparseIndices:s,sparseValues:a,defaultValue:i}=t,{outputShape:o}=r,{sliceRank:u,numUpdates:l,sliceSize:c,strides:h,outputSize:d}=Xu(0,s,o),p=!1;if("string"===a.dtype){const e=n.bufferSync(s),t=n.bufferSync(a),r=Zs(n.readSync(i.dataId)[0]),f=sL(e,t,o,d,c,l,u,h,r,p);return n.makeTensorInfo(o,f.dtype,f.values)}const f=new CW(l,u,s.shape.length,a.shape.length,h,[d,1],p),m=n.runWebGLProgram(f,[a,s,i],a.dtype),g=fz({inputs:{x:m},backend:n,attrs:{shape:o}});return n.disposeIntermediateTensorInfo(m),g}},QW={kernelName:Vr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{numOrSizeSplits:a,axis:i}=r,o=we(i,s.shape)[0],u=Am(s,a,o),l=s.shape.length,c=new Array(l).fill(0),h=s.shape.slice();return u.map(e=>{const t=[...h];t[o]=e;const r=wP({inputs:{x:s},backend:n,attrs:{begin:c,size:t}});return c[o]+=e,r})}},eG="return sqrt(x);",tG=iz({opSnippet:eG,packedOpSnippet:eG,cpuKernelImpl:hL}),nG={kernelName:zr,backendName:"webgl",kernelFunc:tG},rG=iz({opSnippet:"return x * x;"}),sG={kernelName:Xr,backendName:"webgl",kernelFunc:rG},aG="return (a - b) * (a - b);",iG=oz({opSnippet:aG,packedOpSnippet:aG}),oG={kernelName:Kr,backendName:"webgl",kernelFunc:iG},uG={kernelName:Yr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t;if("string"!==s.dtype)throw new Error("Input must be of datatype string");const a=jm(n.readSync(s.dataId)),i=dL(a,"string",r);return n.makeTensorInfo(s.shape,"string",i)}},lG={kernelName:ps,backendName:"webgl",kernelFunc:function({inputs:e,attrs:t,backend:n}){const{x:r}=e,s=RL+`\\n    return x > 0.0 ? 1.0 : float(${t.alpha});\\n  `,a=new AL(r.shape,s);return n.runWebGLProgram(a,[r],r.dtype)}};class cG{constructor(e,t,n){this.variableNames=["x"],this.outputShape=n;const r=n.length,s=GD(n.length),a=GD(n.length);let i="";if(1===r)i="coords * strides + begin";else{let e=0;i=n.map((t,r)=>(e++,1===n.length?`coords * strides[${r}] + begin[${r}]`:`coords[${e-1}] * strides[${r}] + begin[${r}]`)).join(",")}this.userCode=`\\n      ${s} begin = ${s}(${e});\\n      ${s} strides = ${s}(${t});\\n\\n      void main() {\\n        ${a} coords = getOutputCoords();\\n        setOutput(getX(${i}));\\n      }\\n    `}}const hG={kernelName:Jr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{begin:a,end:i,strides:o,beginMask:u,endMask:l,ellipsisMask:c,newAxisMask:h,shrinkAxisMask:d}=r,{finalShapeSparse:p,finalShape:f,isIdentity:m,sliceDim0:g,isSimpleSlice:y,begin:b,end:x,strides:w}=pl(s.shape,a,i,o,u,l,c,h,d);let v;if(m)v=fz({inputs:{x:s},backend:n,attrs:{shape:f}});else if(g||y){ie(s.shape.length>=1,()=>`Input must have rank at least 1, got: ${s.shape.length}`);const e=el(b,x,w),t=wP({inputs:{x:s},backend:n,attrs:{begin:b,size:e}});v=fz({inputs:{x:t},backend:n,attrs:{shape:f}}),n.disposeIntermediateTensorInfo(t)}else if(n.shouldExecuteOnCPU([s])){const e=n.readSync(s.dataId),t=ko(s.shape,s.dtype,e),r=pL(p,t,w,b);v=n.makeTensorInfo(f,s.dtype,r.values)}else{const e=new cG(b,w,p);v=n.runWebGLProgram(e,[s],s.dtype)}const k=fz({inputs:{x:v},backend:n,attrs:{shape:f}});return n.disposeIntermediateTensorInfo(v),k}},dG={kernelName:Zr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{separator:s,nGramWidths:a,leftPad:i,rightPad:o,padWidth:u,preserveShortSequences:l}=r,{data:c,dataSplits:h}=t,d=n.readSync(c.dataId),p=n.readSync(h.dataId),[f,m]=fL(d,p,s,a,i,o,u,l);return[n.makeTensorInfo([f.length],"string",f),n.makeTensorInfo(h.shape,"int32",m)]}},pG={kernelName:Qr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{skipEmpty:s}=r,{input:a,delimiter:i}=t;if("string"!==a.dtype)throw new Error("Input must be of datatype string");if(1!==a.shape.length)throw new Error(`Input must be a vector, got shape: ${a.shape}`);if(0!==i.shape.length)throw new Error(`Delimiter must be a scalar, got shape: ${i.shape}`);const o=n.readSync(a.dataId),u=n.readSync(i.dataId)[0],[l,c,h]=mL(o,u,s),d=c.length;return[n.makeTensorInfo([d,2],"int32",l),n.makeTensorInfo([d],"string",c),n.makeTensorInfo([2],"int32",new Int32Array(h))]}},fG={kernelName:es,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{numBuckets:s}=r,{input:a}=t;if("string"!==a.dtype)throw new Error("Input must be of datatype string");if(s<=0)throw new Error("Number of buckets must be at least 1");const i=n.readSync(a.dataId),o=gL(i,s);return n.makeTensorInfo(a.shape,"int32",o)}},mG=iz({opSnippet:"return tan(x);"}),gG={kernelName:ns,backendName:"webgl",kernelFunc:mG},yG=iz({opSnippet:"\\n  float e2x = exp(-2.0 * abs(x));\\n  return sign(x) * (1.0 - e2x) / (1.0 + e2x);\\n"}),bG={kernelName:rs,backendName:"webgl",kernelFunc:yG},xG={kernelName:Cr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{tensor:s,indices:a,updates:i}=t,{}=r,{sliceRank:o,numUpdates:u,sliceSize:l,strides:c,outputSize:h}=Xu(0,a,s.shape),d=[h/l,l];if(0===h)return n.makeTensorInfo(s.shape,a.dtype);const p=fz({inputs:{x:a},backend:n,attrs:{shape:[u,o]}}),f=fz({inputs:{x:i},backend:n,attrs:{shape:[u,l]}}),m=fz({inputs:{x:s},backend:n,attrs:{shape:d}}),g=new CW(u,o,p.shape.length,f.shape.length,c,d,!1,!0),y=n.runWebGLProgram(g,[f,p,m],m.dtype),b=fz({inputs:{x:y},backend:n,attrs:{shape:s.shape}});return n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(y),b}};class wG{constructor(e,t){this.variableNames=["A"];const n=new Array(e.length);for(let r=0;r<n.length;r++)n[r]=e[r]*t[r];this.outputShape=n,this.rank=n.length;const r=GD(this.rank),s=function(e){const t=e.length;if(t>5)throw Error(`Tile for rank ${t} is not yet supported`);if(1===t)return`imod(resRC, ${e[0]})`;const n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u"],r=[];for(let t=0;t<e.length;t++)r.push(`imod(${n[t]}, ${e[t]})`);return r.join()}(e);this.userCode=`\\n      void main() {\\n        ${r} resRC = getOutputCoords();\\n        setOutput(getA(${s}));\\n      }\\n    `}}function vG(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{reps:a}=r;if("string"===s.dtype||s.shape.length>5){const e=n.readSync(s.dataId),t="string"===s.dtype?e.map(e=>Zs(e)):e,r=ko(s.shape,s.dtype,t),i=bL(r,a);return n.makeTensorInfo(i.shape,i.dtype,i.values)}const i=new wG(s.shape,a);return n.runWebGLProgram(i,[s],s.dtype)}const kG={kernelName:ss,backendName:"webgl",kernelFunc:vG};class IG{constructor(e){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"negativeInf",type:"float"},{name:"dir",type:"int"},{name:"inc",type:"int"}],this.outputShape=e,this.userCode="\\n       void main() {\\n         ivec2 coords = getOutputCoords();\\n         int batch = coords[0];\\n         int elemIdx = coords[1];\\n\\n         // We compare elements pair-wise within a group of size 2 * inc.\\n         // The comparing rule for each group alternates between ascending\\n         // and descending. Within each group, we compare each pair at\\n         // positions i and i+inc. To decide whether an element at position i\\n         // is x0 or x1, we mod it by 2 * inc, if the result is smaller than\\n         // inc, it is in the first half of the group, we denote it as x0,\\n         // otherwise we denote it as x1.\\n         // For example, as shown in the Bitonic top K paper referenced above,\\n         // Figure5(a) shows that element[1] is in the\\n         // second half of the group when group size is 2, but it is in the\\n         // first half of the group when group size is 4.\\n\\n         bool isFirstInPair = imod(elemIdx, 2 * inc) < inc;\\n         int i = isFirstInPair ? elemIdx : elemIdx - inc;\\n\\n         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));\\n         int i1 = firstPass == 1 ? i + inc : int(getIndices(batch, i + inc));\\n         float x0 = i0 < n ? getX(batch, i0) : negativeInf;\\n         float x1 = i1 < n ? getX(batch, i1) : negativeInf;\\n\\n         // Denotes which direction indices are in (ascending or descending).\\n         bool reverse = imod(elemIdx, 2 * dir) >= dir;\\n         bool isGreater = x0 > x1 || (x0 == x1 && i1 > i0);\\n         if (reverse == isGreater) { // Elements in opposite order of direction\\n           int iTemp = i0;\\n           i0 = i1;\\n           i1 = iTemp;\\n         }\\n         if (isFirstInPair) {\\n            setOutput(float(i0));\\n         } else {\\n            setOutput(float(i1));\\n         }\\n       }\\n     "}}class SG{constructor(e){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"k",type:"int"}],this.outputShape=e,this.userCode="\\n    void main() {\\n         // Takes max of indices (0, k), (1, k + 1), (2, k + 2) ...\\n         ivec2 coords = getOutputCoords();\\n         int batch = coords[0];\\n         int elemIdx = coords[1];\\n\\n         // The output size is half of the previous size.\\n         // If the previous sequence is | | | | _ _ _ _  | | | |  _ _ _ _ (k=4),\\n         // we only need to output the indices at positions |, the indices at\\n         // positions _ can be thrown away, see Figure5(b) After Phase 2\\n         // (Merge phase) in the Bitonic Top K paper referenced above.\\n         // For example, the paper shows we only need to output the orange bars.\\n         // The output sequence should look like this | | | | | | | |.\\n         // Because the sequence is halved, to map the output index back\\n         // to the previous sequence to find the corresponding value,\\n         // we need to double the index. When we double the index,\\n         // we basically interpolate a position, so 2i looks like\\n         // | _ | _ | _ | _ | _ | _ | _. We move the | to the first k position\\n         // of each 2k positions by - elemIdx % k. E.g. for output at\\n         // index 4,5,6,7, we want to get the corresponding element at\\n         // original index 8,9,10,11, for output at index 8,9,10,11,\\n         // we want to get the corresponding element at original index\\n         // 16,17,18,19, so on and so forth.\\n\\n         int i = elemIdx < k ? elemIdx : (elemIdx * 2 - imod(elemIdx, k));\\n         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));\\n         int i1 = firstPass == 1 ? i + k : int(getIndices(batch, i + k));\\n\\n         float x0 = getX(batch, i0);\\n         float x1 = i1 < n ? getX(batch, i1) : x0;\\n\\n         setOutput(x0 >= x1 ? float(i0) : float(i1));\\n       }\\n     "}}function NG(e,t){null!==t&&e.disposeIntermediateTensorInfo(t)}function TG(e){let t=1;for(;t<e;)t*=2;return t}const EG={kernelName:as,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{k:a,sorted:i}=r,o=Xe().getNumber("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD"),u=Xe().getNumber("TOPK_K_CPU_HANDOFF_THRESHOLD"),l=s.shape,c=l[l.length-1];if(n.shouldExecuteOnCPU([s])||c<o||a>u){const e=n.readSync(s.dataId),[t,r]=xL(e,l,s.dtype,a,i);return[n.makeTensorInfo(t.shape,t.dtype,t.values),n.makeTensorInfo(r.shape,r.dtype,r.values)]}if(0===a)return l[l.length-1]=0,[n.makeTensorInfo(l,s.dtype,[]),n.makeTensorInfo(l,"int32",[])];if(1===c)return[s,sV({attrs:{shape:l,dtype:"int32",value:0},backend:n})];const h=n.texData.get(s.dataId),d=null!==h&&h.isPacked,p=d?n.unpackTensor(s):s,f=le(l)/c,m=fz({inputs:{x:p},attrs:{shape:[f,c]},backend:n});d&&NG(n,p);const g=TG(a),y=TG(c);let b=null;const x=()=>null===b?[m,m]:[m,b],w=(e,t,r)=>{const s=x(),a=new IG(r),i=[[c],[null===b?1:0],[Number.NEGATIVE_INFINITY],[e],[t]],o=b;b=n.runWebGLProgram(a,s,"int32",i),NG(n,o)};for(let e=1;e<g;e*=2){const t=2*e;for(let n=e;n>=1;n/=2)w(t,n,[f,y])}for(let e=y;e>g;e/=2){const t=x(),r=new SG([f,e/2]),s=[[c],[null===b?1:0],[g]],a=b;b=n.runWebGLProgram(r,t,"int32",s),NG(n,a);const i=g/2,o=2*i;for(let e=i;e>=1;e/=2)w(o,e,b.shape)}let v=b;b=wP({inputs:{x:b},backend:n,attrs:{begin:0,size:[f,a]}}),NG(n,v);let k=IV({inputs:{x:m,indices:b},backend:n,attrs:{axis:1,batchDims:1}});NG(n,m);const I=l.slice(0,-1);I.push(a),v=b,b=fz({inputs:{x:b},attrs:{shape:I},backend:n}),NG(n,v);const S=k;return k=fz({inputs:{x:k},attrs:{shape:I},backend:n}),NG(n,S),[k,b]}};class CG{constructor(e,t,n,r,s,a){this.variableNames=["Image","Transforms"],this.outputShape=a;const i="nearest"===n?1:2;let o;switch(r){case"constant":default:o=1;break;case"reflect":o=2;break;case"wrap":o=3;break;case"nearest":o=4}this.userCode=`\\n            float mapCoord(float outCoord, float len) {\\n              float inCoord = outCoord;\\n              if(${o} == 2) {\\n                if (inCoord < 0.0) {\\n                  if (len <= 1.0) {\\n                    inCoord = 0.0;\\n                  } else {\\n                    float sz2 = 2.0 * len;\\n                    if (inCoord < sz2) {\\n                      inCoord = sz2 * float(int(float(-inCoord / sz2))) +\\n                      inCoord;\\n                    }\\n                    inCoord = inCoord < -len ? inCoord + sz2 : -inCoord - 1.0;\\n                  }\\n                } else if (inCoord > len - 1.0) {\\n                  if (len <= 1.0) {\\n                    inCoord = 0.0;\\n                  } else {\\n                    float sz2 = 2.0 * len;\\n                    inCoord -= sz2 * float(int(float(inCoord / sz2)));\\n                    if (inCoord >= len) {\\n                      inCoord = sz2 - inCoord - 1.0;\\n                    }\\n                  }\\n                }\\n                return clamp(inCoord, 0.0, len - 1.0);\\n              } else if (${o} == 3) {\\n                if (inCoord < 0.0) {\\n                  if (len <= 1.0) {\\n                    inCoord = 0.0;\\n                  } else {\\n                    float sz = len - 1.0;\\n                    inCoord += len * (float(int(float(-inCoord / sz))) + 1.0);\\n                  }\\n                } else if (inCoord > len - 1.0) {\\n                  if (len <= 1.0) {\\n                    inCoord = 0.0;\\n                  } else {\\n                    float sz = len - 1.0;\\n                    inCoord -= len * float(int(float(inCoord / sz)));\\n                  }\\n                }\\n                return clamp(inCoord, 0.0, len - 1.0);\\n              } else if (${o} == 4) {\\n                return clamp(outCoord, 0.0, len - 1.0);\\n              } else {\\n                return outCoord;\\n              }\\n            }\\n\\n            float readWithFillValue(int batch, int coordY, int coordX,\\n              int channel) {\\n              float outputValue;\\n              if (0 <= coordY && coordY < ${e} && 0 <= coordX && coordX < ${t}) {\\n                  outputValue = getImage(batch, coordY, coordX, channel);\\n              } else {\\n                outputValue = float(${s});\\n              }\\n              return outputValue;\\n            }\\n\\n            void main() {\\n              ivec4 coords = getOutputCoords();\\n              float outputValue;\\n              int batch = coords[0];\\n              int x = coords[2];\\n              int y = coords[1];\\n              int channel = coords[3];\\n              float xf = float(x);\\n              float yf = float(y);\\n              float a1 = getTransforms(batch, 0);\\n              float a2 = getTransforms(batch, 1);\\n              float a3 = getTransforms(batch, 2);\\n              float b1 = getTransforms(batch, 3);\\n              float b2 = getTransforms(batch, 4);\\n              float b3 = getTransforms(batch, 5);\\n              float c1 = getTransforms(batch, 6);\\n              float c2 = getTransforms(batch, 7);\\n              float projection = c1 * xf + c2 * yf + 1.0;\\n              if (projection == 0.0) {\\n                outputValue = float(${s});\\n              } else {\\n                float inX = (a1 * xf + a2 * yf + a3) / projection;\\n                float inY = (b1 * xf + b2 * yf + b3) / projection;\\n                float mapX = mapCoord(inX, float(${t}));\\n                float mapY = mapCoord(inY, float(${e}));\\n\\n                if (${i} == 1) {\\n                  int coordY = int(round(mapY));\\n                  int coordX = int(round(mapX));\\n                  outputValue = readWithFillValue(batch, coordY, coordX,\\n                    channel);\\n                } else {\\n                  float yFloor = floor(mapY);\\n                  float xFloor = floor(mapX);\\n                  float yCeil = yFloor + 1.0;\\n                  float xCeil = xFloor + 1.0;\\n                  float valueYFloor = (xCeil - mapX) *\\n                  readWithFillValue(batch, int(yFloor), int(xFloor), channel) +\\n                  (mapX - xFloor) *\\n                  readWithFillValue(batch, int(yFloor), int(xCeil), channel);\\n                  float valueYCeil = (xCeil - mapX) *\\n                  readWithFillValue(batch, int(yCeil), int(xFloor), channel) +\\n                  (mapX - xFloor) *\\n                  readWithFillValue(batch, int(yCeil), int(xCeil), channel);\\n                  outputValue = (yCeil - mapY) * valueYFloor +\\n                  (mapY - yFloor) * valueYCeil;\\n                }\\n              }\\n              setOutput(outputValue);\\n            }\\n        `}}const $G={kernelName:is,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{image:s,transforms:a}=t,{interpolation:i,fillMode:o,fillValue:u,outputShape:l}=r,[c,h,d,p]=s.shape,[f,m]=null!=l?l:[h,d],g=new CG(h,d,i,o,u,[c,f,m,p]);return n.runWebGLProgram(g,[s,a],"float32")}},AG={kernelName:us,backendName:"webgl",kernelFunc:function(e){const{inputs:t,attrs:n,backend:r}=e,{axis:s}=n,{x:a}=t;ED(a,"unique"),console.warn("WARNING: ","UI might be locked temporarily as data is being downloaded");const i=r.readSync(a.dataId),{outputValues:o,outputShape:u,indices:l}=vL(i,s,a.shape,a.dtype);return[r.makeTensorInfo(u,a.dtype,o),r.makeTensorInfo([l.length],"int32",l)]}},RG={kernelName:ls,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{value:s}=t;let{axis:a}=r;a<0&&(a+=s.shape.length);const i=s,o=i.shape.length,u=s.shape[a],l=new Array(o-1);let c=0;for(let e=0;e<o;e++)e!==a&&(l[c++]=i.shape[e]);const h=[],d=new Array(o).fill(0),p=i.shape.slice();p[a]=1;const f=new Array(u);for(let e=0;e<f.length;e++){d[a]=e;const t=wP({inputs:{x:i},backend:n,attrs:{begin:d,size:p}}),r=fz({inputs:{x:t},backend:n,attrs:{shape:l}});f[e]=r,h.push(t)}return h.forEach(e=>n.disposeIntermediateTensorInfo(e)),f}};class _G{constructor(e,t){this.variableNames=["x","segmentIds"];const n=e.windowSize,r=e.batchSize,s=e.inSize,a=e.numSegments,i=a*Math.ceil(s/n);this.outputShape=[r,i];const o=4*Math.floor(n/4),u=n%4,l="\\n        sumValue += dot(values, segFilter);\\n    ";let c="";s%n>0&&(c=`\\n        if (inIdx < 0 || inIdx >= ${s}) {\\n          return initializationValue;\\n        }\\n      `);let h="";s%n>0&&(h=`\\n        if (inIdx < 0 || inIdx >= ${s}) {\\n          return -1.0;\\n        }\\n      `),this.userCode=`\\n      const float initializationValue = 0.0;\\n\\n      float getValue(int batch, int inIdx) {\\n        ${c}\\n        return getX(batch, inIdx);\\n      }\\n\\n      float getSegmentIdAtIndex(int inIdx) {\\n        ${h}\\n        return getSegmentIds(inIdx);\\n      }\\n\\n      void main() {\\n        ivec2 coords = getOutputCoords();\\n        int batch = coords[0];\\n        int outIdx = coords[1];\\n        int inOffset = int(floor(float(outIdx) / float(\\n          ${a})) * float(${n}));\\n        int currentSeg = int(mod(float(outIdx), float(${a})));\\n\\n        float sumValue = 0.0;\\n\\n        for (int i = 0; i < ${o}; i += 4) {\\n          int inIdx = inOffset + i;\\n          vec4 values = vec4(\\n            getValue(batch, inIdx),\\n            getValue(batch, inIdx + 1),\\n            getValue(batch, inIdx + 2),\\n            getValue(batch, inIdx + 3)\\n          );\\n\\n          vec4 segFilter = vec4(\\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\\n            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,\\n            int(getSegmentIdAtIndex(inIdx + 3)) == currentSeg ? 1 : 0\\n          );\\n\\n          ${l}\\n        }\\n\\n        int inIdx = inOffset + ${o};\\n        if (${1===u}) {\\n          vec4 values = vec4(\\n            getValue(batch, inIdx),\\n            initializationValue,\\n            initializationValue,\\n            initializationValue\\n          );\\n\\n          int inIdxSeg = int(getSegmentIdAtIndex(inIdx));\\n\\n          vec4 segFilter = vec4(\\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\\n            0,\\n            0,\\n            0\\n          );\\n\\n          ${l}\\n        } else if (${2===u}) {\\n          vec4 values = vec4(\\n            getValue(batch, inIdx),\\n            getValue(batch, inIdx + 1),\\n            initializationValue,\\n            initializationValue\\n          );\\n\\n          vec4 segFilter = vec4(\\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\\n              0,\\n              0\\n          );\\n\\n          ${l}\\n        } else if (${3===u}) {\\n          vec4 values = vec4(\\n            getValue(batch, inIdx),\\n            getValue(batch, inIdx + 1),\\n            getValue(batch, inIdx + 2),\\n            initializationValue\\n          );\\n\\n          vec4 segFilter = vec4(\\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\\n            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,\\n            0\\n          );\\n\\n          ${l}\\n        }\\n        setOutput(sumValue);\\n      }\\n    `}}const MG={kernelName:cs,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,segmentIds:a}=t,{numSegments:i}=r,o=s.shape.length,u=[];let l=0;const c=nh([l],o);let h=s;null!=c&&(h=Sz({inputs:{x:s},backend:n,attrs:{perm:c}}),u.push(h),l=sh(1,o)[0]);const d=Gm(h.shape,l,i),p=le([h.shape[l]]),f=fz({inputs:{x:h},backend:n,attrs:{shape:[-1,p]}});u.push(f);const m=Ia(s.dtype),g=(e,t,r,s,a)=>{const i=e.shape[0],o=e.shape[1],l=Wm(o,a),c=new _G({windowSize:l,inSize:o,batchSize:i,numSegments:a},t),h=n.compileAndRun(c,[e,r],s);if(u.push(h),h.shape[1]===a)return h;const d=tW({backend:n,attrs:{start:0,stop:a,step:1,dtype:"float32"}}),p=vG({inputs:{x:d},backend:n,attrs:{reps:[o/l]}});return u.push(d),u.push(p),g(h,t,p,s,a)},y=fz({inputs:{x:g(f,"unsortedSegmentSum",a,m,i)},backend:n,attrs:{shape:d}});let b=y;if(null!=c){u.push(y);const e=rh(c);b=Sz({inputs:{x:b},backend:n,attrs:{perm:e}})}return u.forEach(e=>n.disposeIntermediateTensorInfo(e)),b}},FG=[Ez,$z,Rz,Mz,Oz,Pz,Bz,Vz,qz,Kz,Yz,Zz,eP,nP,sP,oP,uP,hP,dP,pP,gP,kP,IP,SP,NP,AP,MP,OP,ZL,PP,qP,tB,iB,uB,lB,cB,hB,pB,mB,yB,IB,SB,NB,EB,AB,MB,FB,OB,zB,PB,VB,UB,GB,jB,KB,YB,QB,nV,aV,oV,cV,dV,mV,bV,xV,vV,SV,TV,CV,YL,$V,GP,RV,MV,DV,tz,LV,PV,BV,UV,GV,jV,KV,YV,QV,tU,rU,aU,iU,oU,cU,hU,dU,pU,fU,gU,xU,vU,AU,pz,_U,FU,OU,zU,EP,BU,WU,GU,KU,YU,sz,JU,ZU,QU,eW,nW,$P,SU,sW,iW,uW,mz,hW,pW,gW,bW,vW,IW,NW,EW,AW,_W,FW,OW,zW,BW,UW,GW,vP,$U,jW,qW,KW,XW,YW,JW,ZW,QW,nG,sG,oG,uG,lG,hG,dG,pG,fG,EU,Iz,gG,bG,xG,kG,EG,$G,Nz,AG,RG,MG,UU];for(const e of FG)Ts(e);const DG={"tfjs-core":$l,"tfjs-backend-cpu":pA,"tfjs-backend-webgl":UL,"tfjs-data":PE,"tfjs-layers":Rw,"tfjs-converter":_T,tfjs:"4.22.0"}},985:function(e,t,n){"use strict";var r,s=this&&this.__createBinding||(Object.create?function(e,t,n,r){void 0===r&&(r=n);var s=Object.getOwnPropertyDescriptor(t,n);s&&!("get"in s?!t.__esModule:s.writable||s.configurable)||(s={enumerable:!0,get:function(){return t[n]}}),Object.defineProperty(e,r,s)}:function(e,t,n,r){void 0===r&&(r=n),e[r]=t[n]}),a=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),i=this&&this.__importStar||(r=function(e){return r=Object.getOwnPropertyNames||function(e){var t=[];for(var n in e)Object.prototype.hasOwnProperty.call(e,n)&&(t[t.length]=n);return t},r(e)},function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n=r(e),i=0;i<n.length;i++)"default"!==n[i]&&s(t,e,n[i]);return a(t,e),t}),o=this&&this.__spreadArray||function(e,t,n){if(n||2===arguments.length)for(var r,s=0,a=t.length;s<a;s++)!r&&s in t||(r||(r=Array.prototype.slice.call(t,0,s)),r[s]=t[s]);return e.concat(r||Array.prototype.slice.call(t))};Object.defineProperty(t,"__esModule",{value:!0}),t.computeAffineMatrixML=function(e,t){e.length;var n=e.map(function(e){return o(o([],e,!0),[1],!1)}),r=new u.Matrix(n),s=new u.Matrix(t);return(0,u.solve)(r,s).transpose().to2DArray()},t.applyAffineMatrix=function(e,t){var n=t.reshape([-1,2]),r=l.ones([n.shape[0],1]),s=l.concat([n,r],1),a=e.transpose(),i=l.matMul(s,a);return l.dispose([n,r,s,a]),i.reshape(t.shape)},t.computeHomography=k,t.applyHomography=I,t.warpImageData=S,t.cropImageData=N,t.obtainEyePatch=function(e,t,n,r,s){void 0===n&&(n=[.4,.2]),void 0===r&&(r=512),void 0===s&&(s=[512,128]);var a=t[4],i=t[103],o=t[150],u=t[332],l=[i,o,t[379],u],c=k(l=l.map(function(e){var t=e[0],r=e[1],s=t-a[0],i=r-a[1];return[t+s*n[0],r+i*n[1]]}),[[0,0],[0,r],[r,r],[r,0]]),h=S(e,c,r,r),d=t.map(function(e){return I(c,e)}),p=d[151],f=d[195],m=N(h,0,Math.round(p[1]),h.width,Math.round(f[1]-p[1]));return S(m,k([[0,0],[0,m.height],[m.width,m.height],[m.width,0]],[[0,0],[0,s[1]],[s[0],s[1]],[s[0],0]]),s[0],s[1])},t.translateMatrix=function(e){for(var t=e.data,n=new u.Matrix(e.rows,e.columns),r=0;r<e.rows;r++)for(var s=0;s<e.columns;s++)n.set(r,s,t[r*e.columns+s]);return n},t.createPerspectiveMatrix=function(e){var t=Math.PI/180,n=1/Math.tan(t*x/2),r=1/(w-v),s=new u.Matrix(4,4).fill(0);return s.set(0,0,n/e),s.set(1,1,n),s.set(2,2,(w+v)*r),s.set(2,3,-1),s.set(3,2,2*v*w*r),s},t.createIntrinsicsMatrix=function(e,t,n){var r,s,a=e,i=a/2,o=t/2;if(void 0!==n){var l=n*Math.PI/180;s=r=a/(2*Math.tan(l/2))}else r=s=a;return new u.Matrix([[r,0,i],[0,s,o],[0,0,1]])},t.estimateFaceWidth=function(e){for(var t=[],n=0,r=["left","right"];n<r.length;n++){var s="left"===r[n]?f:p,a=T(e[s[4]].slice(0,2),e[s[2]].slice(0,2));t.push(a)}var i=t.reduce(function(e,t){return e+t},0)/t.length,o=T(e[h],e[d]);return m/(i/o)},t.convertUvToXyz=E,t.imageShiftTo3D=C,t.transform3DTo3D=$,t.transform3DTo2D=A,t.partialProcrustesTranslation2D=R,t.refineDepthByRadialMagnitude=_,t.faceReconstruction=function(e,t,n,r,s,a,i,o){var l;void 0===o&&(o=60);var c=t.map(function(t){var n=t[0],r=t[1];return E(e,n,r,o)}),p=c[4],f=c.map(function(e){var t=e[0],n=e[1],r=e[2];return[-(t-p[0]),-(n-p[1]),r-p[2]]}),m=f[h],g=f[d],y=Math.hypot(m[0]-g[0],m[1]-g[1],m[2]-g[2]),b=f.map(function(e){var t=e[0],n=e[1],r=e[2];return[t/y*s,n/y*s,r/y*s]}),x=n.subMatrix(0,2,0,2),w=M(x),v=w[0],k=w[1],I=w[2],S=F(v=(l=[-k,v])[0],k=l[1],I),N=b.map(function(e){return t=e,n=S.transpose(),r=t[0],s=t[1],a=t[2],[(i=n.mmul(u.Matrix.columnVector([r,s,a])).to1DArray())[0],i[1],i[2]];var t,n,r,s,a,i}),T=[0,1,2].map(function(e){return Math.sqrt(Math.pow(x.get(0,e),2)+Math.pow(x.get(1,e),2)+Math.pow(x.get(2,e),2))}).reduce(function(e,t){return e+t},0)/3,D=u.Matrix.eye(4);D.setSubMatrix(S.div(T),0,0),D.set(0,3,0),D.set(1,3,0),D.set(2,3,o);var O=N.map(function(e){return $(e,D)}).map(function(e){return A(e,r)}),L=t.map(function(e){var t=e[0],n=e[1];return[t*a,n*i]}),z=C(R(O,L),o,r),P=D.clone();P.set(0,3,P.get(0,3)+z[0]),P.set(1,3,P.get(1,3)+z[1]),P.set(2,3,P.get(2,3)+z[2]);for(var B=P.clone(),V=o,U=0;U<10&&(V=_(N.map(function(e){return A($(e,P),r)}),L,P.get(2,3),.5),!(Math.abs(V-P.get(2,3))<.25));U++){var W=B.get(0,3)*(V/o),G=B.get(1,3)*(V/o);P.set(0,3,W),P.set(1,3,G),P.set(2,3,V)}var H=N.map(function(e){return $(e,P)});return[P,H]},t.computeFaceOrigin3D=function(e){var t=function(t){var n=t.map(function(t){return e[t]}),r=n.reduce(function(e,t){var n=t[0],r=t[1],s=t[2];return[e[0]+n,e[1]+r,e[2]+s]},[0,0,0]);return[r[0]/n.length,r[1]/n.length,r[2]/n.length]},n=t(g),r=t(y);return[(n[0]+r[0])/2,(n[1]+r[1])/2,(n[2]+r[2])/2]},t.matrixToEuler=M,t.eulerToMatrix=F,t.getHeadVector=function(e){var t=M(new u.Matrix([[e.get(0,0),e.get(0,1),e.get(0,2)],[e.get(1,0),e.get(1,1),e.get(1,2)],[e.get(2,0),e.get(2,1),e.get(2,2)]]),!1),n=t[0],r=[-t[1],n,t[2]];return function(e,t,n){var r=Math.cos(e)*Math.sin(t),s=Math.sin(e),a=-Math.cos(e)*Math.cos(t),i=new u.Matrix([[r,s,a]]),o=[Math.cos(n),Math.sin(n)],l=o[0],c=o[1];return new u.Matrix([[l,-c,0],[c,l,0],[0,0,1]]).mmul(i.transpose()).transpose().to1DArray()}(r[0],r[1],r[2])},t.computeEAR=function(e,t){var n=("left"===t?D:O).map(function(t){return[e[t].x,e[t].y]}),r=n[0],s=n[1],a=n[2],i=n[3],o=n[4],u=n[5];return(Math.sqrt(Math.pow(s[0]-u[0],2)+Math.pow(s[1]-u[1],2))+Math.sqrt(Math.pow(a[0]-o[0],2)+Math.pow(a[1]-o[1],2)))/(2*Math.sqrt(Math.pow(r[0]-i[0],2)+Math.pow(r[1]-i[1],2)))};var u=n(673),l=i(n(951)),c=n(298),h=356,d=127,p=[468,470,469,472,471],f=[473,475,474,477,476],m=1.2,g=[362,263],y=[33,133],b=5,x=60,w=1,v=1e4;function k(e,t){if(4!==e.length||4!==t.length)throw new Error("Need exactly 4 source and 4 destination points");for(var n=[],r=0;r<4;r++){var s=e[r],a=s[0],i=s[1],o=t[r],l=o[0],h=o[1];n.push([-a,-i,-1,0,0,0,a*l,i*l,l]),n.push([0,0,0,-a,-i,-1,a*h,i*h,h])}var d=new u.Matrix(n),p=(0,c.safeSVD)(d).rightSingularVectors,f=p.getColumn(p.columns-1);return[f.slice(0,3),f.slice(3,6),f.slice(6,9)]}function I(e,t){var n=t[0],r=t[1],s=e[2][0]*n+e[2][1]*r+e[2][2];return[(e[0][0]*n+e[0][1]*r+e[0][2])/s,(e[1][0]*n+e[1][1]*r+e[1][2])/s]}function S(e,t,n,r){for(var s=(0,u.inverse)(new u.Matrix(t)).to2DArray(),a=new ImageData(n,r),i=e.data,o=a.data,l=e.width,c=e.height,h=0;h<r;h++)for(var d=0;d<n;d++){var p=s[2][0]*d+s[2][1]*h+s[2][2],f=(s[0][0]*d+s[0][1]*h+s[0][2])/p,m=(s[1][0]*d+s[1][1]*h+s[1][2])/p,g=Math.floor(f),y=Math.floor(m);if(!(g<0||y<0||g>=l||y>=c)){var b=4*(y*l+g),x=4*(h*n+d);o[x]=i[b],o[x+1]=i[b+1],o[x+2]=i[b+2],o[x+3]=i[b+3]}}return a}function N(e,t,n,r,s){for(var a=new ImageData(r,s),i=e.data,o=a.data,u=e.width,l=0;l<s;l++)for(var c=0;c<r;c++){var h=4*((n+l)*u+(t+c)),d=4*(l*r+c);o[d]=i[h],o[d+1]=i[h+1],o[d+2]=i[h+2],o[d+3]=i[h+3]}return a}function T(e,t){var n=e[0]-t[0],r=e[1]-t[1];return Math.sqrt(n*n+r*r)}function E(e,t,n,r){var s=2*t-1,a=1-2*n,i=new u.Matrix([[s],[a],[-1],[1]]),o=(0,u.inverse)(e).mmul(i),l=o.get(3,0),c=o.get(0,0)/l,h=o.get(1,0)/l;return o.get(2,0),[-c,h,r]}function C(e,t,n){var r=n.get(0,0),s=n.get(1,1);return[e[0]*(t/r),e[1]*(t/s),0]}function $(e,t){var n=[e[0],e[1],e[2],1],r=t.mmul(u.Matrix.columnVector(n)).to1DArray();return[r[0],r[1],r[2]]}function A(e,t){var n=1e-6,r=e[0],s=e[1],a=e[2],i=t.mmul(u.Matrix.columnVector([r,s,a])).to1DArray(),o=Math.abs(i[2])<n?n:i[2];return[Math.round(i[0]/o),Math.round(i[1]/o)]}function R(e,t){var n=e[4],r=n[0],s=n[1],a=t[4];return[a[0]-r,a[1]-s]}function _(e,t,n,r){void 0===r&&(r=.5);for(var s=e.length,a=t.reduce(function(e,t){var n=t[0],r=t[1];return[e[0]+n/s,e[1]+r/s]},[0,0]),i=0,o=0;o<s;o++){var u=e[o],l=t[o],c=[l[0]-u[0],l[1]-u[1]],h=Math.hypot(c[0],c[1]),d=[a[0]-u[0],a[1]-u[1]];i+=c[0]*d[0]+c[1]*d[1]<0?-h:h}var p=i/s*.1;return n+Math.max(-b,Math.min(b,p))}function M(e,t){if(void 0===t&&(t=!0),3!==e.rows||3!==e.columns)throw new Error("Rotation matrix must be 3x3.");var n=Math.asin(-e.get(2,0)),r=Math.atan2(e.get(2,1),e.get(2,2)),s=Math.atan2(e.get(1,0),e.get(0,0));if(t){var a=180/Math.PI;return[n*a,r*a,s*a]}return[n,r,s]}function F(e,t,n,r){void 0===r&&(r=!0),r&&(e*=Math.PI/180,t*=Math.PI/180,n*=Math.PI/180);var s=Math.cos(e),a=Math.sin(e),i=Math.cos(t),o=Math.sin(t),l=Math.cos(n),c=Math.sin(n),h=new u.Matrix([[1,0,0],[0,s,-a],[0,a,s]]),d=new u.Matrix([[i,0,o],[0,1,0],[-o,0,i]]);return new u.Matrix([[l,-c,0],[c,l,0],[0,0,1]]).mmul(d).mmul(h)}var D=[362,385,387,263,373,380],O=[133,158,160,33,144,153]}},t={};function n(r){var s=t[r];if(void 0!==s)return s.exports;var a=t[r]={id:r,loaded:!1,exports:{}};return e[r].call(a.exports,a,a.exports,n),a.loaded=!0,a.exports}n.amdD=function(){throw new Error("define cannot be used indirect")},n.amdO={},n.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return n.d(t,{a:t}),t},n.d=(e,t)=>{for(var r in t)n.o(t,r)&&!n.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:t[r]})},n.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),n.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),n.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.nmd=e=>(e.paths=[],e.children||(e.children=[]),e),n(44)})();',"Worker",void 0,void 0)}},985:function(e,t,n){"use strict";var r,s=this&&this.__createBinding||(Object.create?function(e,t,n,r){void 0===r&&(r=n);var s=Object.getOwnPropertyDescriptor(t,n);s&&!("get"in s?!t.__esModule:s.writable||s.configurable)||(s={enumerable:!0,get:function(){return t[n]}}),Object.defineProperty(e,r,s)}:function(e,t,n,r){void 0===r&&(r=n),e[r]=t[n]}),a=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),i=this&&this.__importStar||(r=function(e){return r=Object.getOwnPropertyNames||function(e){var t=[];for(var n in e)Object.prototype.hasOwnProperty.call(e,n)&&(t[t.length]=n);return t},r(e)},function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n=r(e),i=0;i<n.length;i++)"default"!==n[i]&&s(t,e,n[i]);return a(t,e),t}),o=this&&this.__spreadArray||function(e,t,n){if(n||2===arguments.length)for(var r,s=0,a=t.length;s<a;s++)!r&&s in t||(r||(r=Array.prototype.slice.call(t,0,s)),r[s]=t[s]);return e.concat(r||Array.prototype.slice.call(t))};Object.defineProperty(t,"__esModule",{value:!0}),t.computeAffineMatrixML=function(e,t){e.length;var n=e.map(function(e){return o(o([],e,!0),[1],!1)}),r=new u.Matrix(n),s=new u.Matrix(t);return(0,u.solve)(r,s).transpose().to2DArray()},t.applyAffineMatrix=function(e,t){var n=t.reshape([-1,2]),r=l.ones([n.shape[0],1]),s=l.concat([n,r],1),a=e.transpose(),i=l.matMul(s,a);return l.dispose([n,r,s,a]),i.reshape(t.shape)},t.computeHomography=k,t.applyHomography=N,t.warpImageData=I,t.cropImageData=S,t.obtainEyePatch=function(e,t,n,r,s){void 0===n&&(n=[.4,.2]),void 0===r&&(r=512),void 0===s&&(s=[512,128]);var a=t[4],i=t[103],o=t[150],u=t[332],l=[i,o,t[379],u],c=k(l=l.map(function(e){var t=e[0],r=e[1],s=t-a[0],i=r-a[1];return[t+s*n[0],r+i*n[1]]}),[[0,0],[0,r],[r,r],[r,0]]),h=I(e,c,r,r),d=t.map(function(e){return N(c,e)}),p=d[151],f=d[195],m=S(h,0,Math.round(p[1]),h.width,Math.round(f[1]-p[1]));return I(m,k([[0,0],[0,m.height],[m.width,m.height],[m.width,0]],[[0,0],[0,s[1]],[s[0],s[1]],[s[0],0]]),s[0],s[1])},t.translateMatrix=function(e){for(var t=e.data,n=new u.Matrix(e.rows,e.columns),r=0;r<e.rows;r++)for(var s=0;s<e.columns;s++)n.set(r,s,t[r*e.columns+s]);return n},t.createPerspectiveMatrix=function(e){var t=Math.PI/180,n=1/Math.tan(t*x/2),r=1/(w-v),s=new u.Matrix(4,4).fill(0);return s.set(0,0,n/e),s.set(1,1,n),s.set(2,2,(w+v)*r),s.set(2,3,-1),s.set(3,2,2*v*w*r),s},t.createIntrinsicsMatrix=function(e,t,n){var r,s,a=e,i=a/2,o=t/2;if(void 0!==n){var l=n*Math.PI/180;s=r=a/(2*Math.tan(l/2))}else r=s=a;return new u.Matrix([[r,0,i],[0,s,o],[0,0,1]])},t.estimateFaceWidth=function(e){for(var t=[],n=0,r=["left","right"];n<r.length;n++){var s="left"===r[n]?f:p,a=T(e[s[4]].slice(0,2),e[s[2]].slice(0,2));t.push(a)}var i=t.reduce(function(e,t){return e+t},0)/t.length,o=T(e[h],e[d]);return m/(i/o)},t.convertUvToXyz=E,t.imageShiftTo3D=C,t.transform3DTo3D=$,t.transform3DTo2D=A,t.partialProcrustesTranslation2D=R,t.refineDepthByRadialMagnitude=_,t.faceReconstruction=function(e,t,n,r,s,a,i,o){var l;void 0===o&&(o=60);var c=t.map(function(t){var n=t[0],r=t[1];return E(e,n,r,o)}),p=c[4],f=c.map(function(e){var t=e[0],n=e[1],r=e[2];return[-(t-p[0]),-(n-p[1]),r-p[2]]}),m=f[h],g=f[d],y=Math.hypot(m[0]-g[0],m[1]-g[1],m[2]-g[2]),b=f.map(function(e){var t=e[0],n=e[1],r=e[2];return[t/y*s,n/y*s,r/y*s]}),x=n.subMatrix(0,2,0,2),w=D(x),v=w[0],k=w[1],N=w[2],I=F(v=(l=[-k,v])[0],k=l[1],N),S=b.map(function(e){return t=e,n=I.transpose(),r=t[0],s=t[1],a=t[2],[(i=n.mmul(u.Matrix.columnVector([r,s,a])).to1DArray())[0],i[1],i[2]];var t,n,r,s,a,i}),T=[0,1,2].map(function(e){return Math.sqrt(Math.pow(x.get(0,e),2)+Math.pow(x.get(1,e),2)+Math.pow(x.get(2,e),2))}).reduce(function(e,t){return e+t},0)/3,M=u.Matrix.eye(4);M.setSubMatrix(I.div(T),0,0),M.set(0,3,0),M.set(1,3,0),M.set(2,3,o);var O=S.map(function(e){return $(e,M)}).map(function(e){return A(e,r)}),L=t.map(function(e){var t=e[0],n=e[1];return[t*a,n*i]}),z=C(R(O,L),o,r),P=M.clone();P.set(0,3,P.get(0,3)+z[0]),P.set(1,3,P.get(1,3)+z[1]),P.set(2,3,P.get(2,3)+z[2]);for(var B=P.clone(),V=o,U=0;U<10&&(V=_(S.map(function(e){return A($(e,P),r)}),L,P.get(2,3),.5),!(Math.abs(V-P.get(2,3))<.25));U++){var W=B.get(0,3)*(V/o),G=B.get(1,3)*(V/o);P.set(0,3,W),P.set(1,3,G),P.set(2,3,V)}var H=S.map(function(e){return $(e,P)});return[P,H]},t.computeFaceOrigin3D=function(e){var t=function(t){var n=t.map(function(t){return e[t]}),r=n.reduce(function(e,t){var n=t[0],r=t[1],s=t[2];return[e[0]+n,e[1]+r,e[2]+s]},[0,0,0]);return[r[0]/n.length,r[1]/n.length,r[2]/n.length]},n=t(g),r=t(y);return[(n[0]+r[0])/2,(n[1]+r[1])/2,(n[2]+r[2])/2]},t.matrixToEuler=D,t.eulerToMatrix=F,t.getHeadVector=function(e){var t=D(new u.Matrix([[e.get(0,0),e.get(0,1),e.get(0,2)],[e.get(1,0),e.get(1,1),e.get(1,2)],[e.get(2,0),e.get(2,1),e.get(2,2)]]),!1),n=t[0],r=[-t[1],n,t[2]];return function(e,t,n){var r=Math.cos(e)*Math.sin(t),s=Math.sin(e),a=-Math.cos(e)*Math.cos(t),i=new u.Matrix([[r,s,a]]),o=[Math.cos(n),Math.sin(n)],l=o[0],c=o[1];return new u.Matrix([[l,-c,0],[c,l,0],[0,0,1]]).mmul(i.transpose()).transpose().to1DArray()}(r[0],r[1],r[2])},t.computeEAR=function(e,t){var n=("left"===t?M:O).map(function(t){return[e[t].x,e[t].y]}),r=n[0],s=n[1],a=n[2],i=n[3],o=n[4],u=n[5];return(Math.sqrt(Math.pow(s[0]-u[0],2)+Math.pow(s[1]-u[1],2))+Math.sqrt(Math.pow(a[0]-o[0],2)+Math.pow(a[1]-o[1],2)))/(2*Math.sqrt(Math.pow(r[0]-i[0],2)+Math.pow(r[1]-i[1],2)))};var u=n(673),l=i(n(951)),c=n(298),h=356,d=127,p=[468,470,469,472,471],f=[473,475,474,477,476],m=1.2,g=[362,263],y=[33,133],b=5,x=60,w=1,v=1e4;function k(e,t){if(4!==e.length||4!==t.length)throw new Error("Need exactly 4 source and 4 destination points");for(var n=[],r=0;r<4;r++){var s=e[r],a=s[0],i=s[1],o=t[r],l=o[0],h=o[1];n.push([-a,-i,-1,0,0,0,a*l,i*l,l]),n.push([0,0,0,-a,-i,-1,a*h,i*h,h])}var d=new u.Matrix(n),p=(0,c.safeSVD)(d).rightSingularVectors,f=p.getColumn(p.columns-1);return[f.slice(0,3),f.slice(3,6),f.slice(6,9)]}function N(e,t){var n=t[0],r=t[1],s=e[2][0]*n+e[2][1]*r+e[2][2];return[(e[0][0]*n+e[0][1]*r+e[0][2])/s,(e[1][0]*n+e[1][1]*r+e[1][2])/s]}function I(e,t,n,r){for(var s=(0,u.inverse)(new u.Matrix(t)).to2DArray(),a=new ImageData(n,r),i=e.data,o=a.data,l=e.width,c=e.height,h=0;h<r;h++)for(var d=0;d<n;d++){var p=s[2][0]*d+s[2][1]*h+s[2][2],f=(s[0][0]*d+s[0][1]*h+s[0][2])/p,m=(s[1][0]*d+s[1][1]*h+s[1][2])/p,g=Math.floor(f),y=Math.floor(m);if(!(g<0||y<0||g>=l||y>=c)){var b=4*(y*l+g),x=4*(h*n+d);o[x]=i[b],o[x+1]=i[b+1],o[x+2]=i[b+2],o[x+3]=i[b+3]}}return a}function S(e,t,n,r,s){for(var a=new ImageData(r,s),i=e.data,o=a.data,u=e.width,l=0;l<s;l++)for(var c=0;c<r;c++){var h=4*((n+l)*u+(t+c)),d=4*(l*r+c);o[d]=i[h],o[d+1]=i[h+1],o[d+2]=i[h+2],o[d+3]=i[h+3]}return a}function T(e,t){var n=e[0]-t[0],r=e[1]-t[1];return Math.sqrt(n*n+r*r)}function E(e,t,n,r){var s=2*t-1,a=1-2*n,i=new u.Matrix([[s],[a],[-1],[1]]),o=(0,u.inverse)(e).mmul(i),l=o.get(3,0),c=o.get(0,0)/l,h=o.get(1,0)/l;return o.get(2,0),[-c,h,r]}function C(e,t,n){var r=n.get(0,0),s=n.get(1,1);return[e[0]*(t/r),e[1]*(t/s),0]}function $(e,t){var n=[e[0],e[1],e[2],1],r=t.mmul(u.Matrix.columnVector(n)).to1DArray();return[r[0],r[1],r[2]]}function A(e,t){var n=1e-6,r=e[0],s=e[1],a=e[2],i=t.mmul(u.Matrix.columnVector([r,s,a])).to1DArray(),o=Math.abs(i[2])<n?n:i[2];return[Math.round(i[0]/o),Math.round(i[1]/o)]}function R(e,t){var n=e[4],r=n[0],s=n[1],a=t[4];return[a[0]-r,a[1]-s]}function _(e,t,n,r){void 0===r&&(r=.5);for(var s=e.length,a=t.reduce(function(e,t){var n=t[0],r=t[1];return[e[0]+n/s,e[1]+r/s]},[0,0]),i=0,o=0;o<s;o++){var u=e[o],l=t[o],c=[l[0]-u[0],l[1]-u[1]],h=Math.hypot(c[0],c[1]),d=[a[0]-u[0],a[1]-u[1]];i+=c[0]*d[0]+c[1]*d[1]<0?-h:h}var p=i/s*.1;return n+Math.max(-b,Math.min(b,p))}function D(e,t){if(void 0===t&&(t=!0),3!==e.rows||3!==e.columns)throw new Error("Rotation matrix must be 3x3.");var n=Math.asin(-e.get(2,0)),r=Math.atan2(e.get(2,1),e.get(2,2)),s=Math.atan2(e.get(1,0),e.get(0,0));if(t){var a=180/Math.PI;return[n*a,r*a,s*a]}return[n,r,s]}function F(e,t,n,r){void 0===r&&(r=!0),r&&(e*=Math.PI/180,t*=Math.PI/180,n*=Math.PI/180);var s=Math.cos(e),a=Math.sin(e),i=Math.cos(t),o=Math.sin(t),l=Math.cos(n),c=Math.sin(n),h=new u.Matrix([[1,0,0],[0,s,-a],[0,a,s]]),d=new u.Matrix([[i,0,o],[0,1,0],[-o,0,i]]);return new u.Matrix([[l,-c,0],[c,l,0],[0,0,1]]).mmul(d).mmul(h)}var M=[362,385,387,263,373,380],O=[133,158,160,33,144,153]}},t={};function n(r){var s=t[r];if(void 0!==s)return s.exports;var a=t[r]={id:r,loaded:!1,exports:{}};return e[r].call(a.exports,a,a.exports,n),a.loaded=!0,a.exports}return n.amdD=function(){throw new Error("define cannot be used indirect")},n.amdO={},n.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return n.d(t,{a:t}),t},n.d=(e,t)=>{for(var r in t)n.o(t,r)&&!n.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:t[r]})},n.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),n.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),n.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.nmd=e=>(e.paths=[],e.children||(e.children=[]),e),n(156)})());